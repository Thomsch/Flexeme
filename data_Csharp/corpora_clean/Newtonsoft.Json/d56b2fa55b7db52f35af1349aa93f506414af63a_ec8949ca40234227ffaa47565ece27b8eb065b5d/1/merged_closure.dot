digraph  {
n0 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", label="Entry Newtonsoft.Json.Tests.DemoTests.JsonConverter()", span="61-61"];
n1 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", label="HtmlColor red = new HtmlColor\r\n            {\r\n                Red = 255,\r\n                Green = 0,\r\n                Blue = 0\r\n            }", span="63-68"];
n2 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", label="string json = JsonConvert.SerializeObject(red, new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented\r\n            })", span="70-73"];
n10 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColor.HtmlColor()", label="Entry Newtonsoft.Json.Tests.DemoTests.HtmlColor.HtmlColor()", span="53-53"];
n3 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", label="json = JsonConvert.SerializeObject(red, new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented,\r\n                Converters = { new HtmlColorConverter() }\r\n            })", span="80-84"];
n11 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="428-428"];
n12 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="582-582"];
n4 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", label="HtmlColor r2 = JsonConvert.DeserializeObject<HtmlColor>(json, new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented,\r\n                Converters = { new HtmlColorConverter() }\r\n            })", span="87-91"];
n13 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.HtmlColorConverter()", label="Entry Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.HtmlColorConverter()", span="112-112"];
n8 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", label="Assert.AreEqual(@''''''#FF0000'''''', json)", span="96-96"];
n5 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", label="Assert.AreEqual(255, r2.Red)", span="92-92"];
n14 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="766-766"];
n6 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", label="Assert.AreEqual(0, r2.Green)", span="93-93"];
n7 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", label="Assert.AreEqual(0, r2.Blue)", span="94-94"];
n15 [cluster="Unk.AreEqual", label="Entry Unk.AreEqual", span=""];
n9 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", label="Exit Newtonsoft.Json.Tests.DemoTests.JsonConverter()", span="61-61"];
n16 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", label="Entry Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="114-114"];
n17 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", label="HtmlColor color = (HtmlColor)value", span="117-117"];
n19 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", label="writer.WriteValue(''#'' + hexString)", span="123-123"];
n18 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", label="string hexString = color.Red.ToString(''X2'')\r\n                                   + color.Green.ToString(''X2'')\r\n                                   + color.Blue.ToString(''X2'')", span="118-120"];
n21 [cluster="int.ToString(string)", label="Entry int.ToString(string)", span="0-0"];
n20 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", label="Exit Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="114-114"];
n22 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="929-929"];
n23 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="Entry Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="132-132"];
n24 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="string hexString = (string)reader.Value", span="136-136"];
n25 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="hexString = hexString.TrimStart('#')", span="137-137"];
n26 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="return new HtmlColor\r\n                {\r\n                    Red = Convert.ToInt32(hexString.Substring(0, 2), 16),\r\n                    Green = Convert.ToInt32(hexString.Substring(2, 2), 16),\r\n                    Blue = Convert.ToInt32(hexString.Substring(4, 2), 16)\r\n                };", span="140-145"];
n28 [cluster="string.TrimStart(params char[])", label="Entry string.TrimStart(params char[])", span="0-0"];
n27 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", label="Exit Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="132-132"];
n29 [cluster="string.Substring(int, int)", label="Entry string.Substring(int, int)", span="0-0"];
n30 [cluster="System.Convert.ToInt32(string, int)", label="Entry System.Convert.ToInt32(string, int)", span="0-0"];
n31 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.CanConvert(System.Type)", label="Entry Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.CanConvert(System.Type)", span="148-148"];
n32 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.CanConvert(System.Type)", label="return objectType == typeof(HtmlColor);", span="150-150"];
n33 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.CanConvert(System.Type)", label="Exit Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.CanConvert(System.Type)", span="148-148"];
n34 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationGuide()", label="Entry Newtonsoft.Json.Tests.DemoTests.SerializationGuide()", span="155-155"];
n35 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationGuide()", label="IList<string> roles = new List<string>\r\n            {\r\n                ''User'',\r\n                ''Admin''\r\n            }", span="157-161"];
n36 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationGuide()", label="string roleJson = JsonConvert.SerializeObject(roles, Formatting.Indented)", span="163-163"];
n42 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n37 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationGuide()", label="IDictionary<DateTime, int> dailyRegistrations = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2014, 6, 1), 23 },\r\n                { new DateTime(2014, 6, 2), 50 }\r\n            }", span="169-173"];
n43 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="537-537"];
n38 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationGuide()", label="string regJson = JsonConvert.SerializeObject(dailyRegistrations, Formatting.Indented)", span="175-175"];
n44 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
n45 [cluster="System.DateTime.DateTime(int, int, int)", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
n39 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationGuide()", label="City c = new City { Name = ''Oslo'', Population = 650000 }", span="181-181"];
n40 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationGuide()", label="string cityJson = JsonConvert.SerializeObject(c, Formatting.Indented)", span="183-183"];
n46 [cluster="Newtonsoft.Json.Tests.DemoTests.City.City()", label="Entry Newtonsoft.Json.Tests.DemoTests.City.City()", span="277-277"];
n41 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationGuide()", label="Exit Newtonsoft.Json.Tests.DemoTests.SerializationGuide()", span="155-155"];
n47 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationBasics()", label="Entry Newtonsoft.Json.Tests.DemoTests.SerializationBasics()", span="191-191"];
n48 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationBasics()", label="IList<string> roles = new List<string>\r\n            {\r\n                ''User'',\r\n                ''Admin''\r\n            }", span="193-197"];
n49 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationBasics()", label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="199-199"];
n50 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationBasics()", label="string j = JsonConvert.SerializeObject(roles, new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented,\r\n                TraceWriter = traceWriter\r\n            })", span="201-205"];
n53 [cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", span="29-29"];
n51 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationBasics()", label="string trace = traceWriter.ToString()", span="207-207"];
n52 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationBasics()", label="Exit Newtonsoft.Json.Tests.DemoTests.SerializationBasics()", span="191-191"];
n54 [cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.ToString()", label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.ToString()", span="73-73"];
n55 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationBasics2()", label="Entry Newtonsoft.Json.Tests.DemoTests.SerializationBasics2()", span="218-218"];
n56 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationBasics2()", label="var s = new Session\r\n            {\r\n                Name = ''Serialize All The Things'',\r\n                Date = new DateTime(2014, 6, 4, 0, 0, 0, DateTimeKind.Utc)\r\n            }", span="220-224"];
n57 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationBasics2()", label="string j = JsonConvert.SerializeObject(s, new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented,\r\n                Converters = { new JavaScriptDateTimeConverter() }\r\n            })", span="226-230"];
n60 [cluster="Newtonsoft.Json.Tests.DemoTests.Session.Session()", label="Entry Newtonsoft.Json.Tests.DemoTests.Session.Session()", span="106-106"];
n61 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
n58 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationBasics2()", label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''Serialize All The Things'''',\r\n  ''''Date'''': new Date(\r\n    1401840000000\r\n  )\r\n}'', j)", span="236-241"];
n62 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="34-34"];
n59 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializationBasics2()", label="Exit Newtonsoft.Json.Tests.DemoTests.SerializationBasics2()", span="218-218"];
n63 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="329-329"];
n64 [cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics1()", label="Entry Newtonsoft.Json.Tests.DemoTests.DeserializationBasics1()", span="245-245"];
n65 [cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics1()", label="string j = @''{\r\n              'Name': 'Serialize All The Things',\r\n              'Date': new Date(1401796800000)\r\n            }''", span="247-250"];
n66 [cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics1()", label="var s = JsonConvert.DeserializeObject<Session>(j, new JsonSerializerSettings\r\n            {\r\n                Converters = { new JavaScriptDateTimeConverter() }\r\n            })", span="252-255"];
n67 [cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics1()", label="Assert.AreEqual(''Serialize All The Things'', s.Name)", span="259-259"];
n68 [cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics1()", label="Exit Newtonsoft.Json.Tests.DemoTests.DeserializationBasics1()", span="245-245"];
n69 [cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics2()", label="Entry Newtonsoft.Json.Tests.DemoTests.DeserializationBasics2()", span="263-263"];
n70 [cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics2()", label="Session s = new Session()", span="265-265"];
n71 [cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics2()", label="s.Date = new DateTime(2014, 6, 4)", span="266-266"];
n73 [cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics2()", label="JsonConvert.PopulateObject(j, s)", span="272-272"];
n72 [cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics2()", label="string j = @''{\r\n              'Name': 'Serialize All The Things'\r\n            }''", span="268-270"];
n74 [cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics2()", label="Exit Newtonsoft.Json.Tests.DemoTests.DeserializationBasics2()", span="263-263"];
n75 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", span="822-822"];
n76 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesByValue()", label="Entry Newtonsoft.Json.Tests.DemoTests.SerializeReferencesByValue()", span="294-294"];
n77 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesByValue()", label="Employee arnie = new Employee { Name = ''Arnie Admin'' }", span="296-296"];
n78 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesByValue()", label="Manager mike = new Manager { Name = ''Mike Manager'' }", span="297-297"];
n85 [cluster="Newtonsoft.Json.Tests.DemoTests.Employee.Employee()", label="Entry Newtonsoft.Json.Tests.DemoTests.Employee.Employee()", span="283-283"];
n80 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesByValue()", label="mike.Reportees = new[] { arnie, susan }", span="300-300"];
n81 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesByValue()", label="susan.Reportees = new[] { arnie }", span="301-301"];
n79 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesByValue()", label="Manager susan = new Manager { Name = ''Susan Supervisor'' }", span="298-298"];
n86 [cluster="Newtonsoft.Json.Tests.DemoTests.Manager.Manager()", label="Entry Newtonsoft.Json.Tests.DemoTests.Manager.Manager()", span="288-288"];
n82 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesByValue()", label="string json = JsonConvert.SerializeObject(mike, Formatting.Indented)", span="303-303"];
n83 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesByValue()", label="StringAssert.AreEqual(@''{\r\n  ''''Reportees'''': [\r\n    {\r\n      ''''Name'''': ''''Arnie Admin''''\r\n    },\r\n    {\r\n      ''''Reportees'''': [\r\n        {\r\n          ''''Name'''': ''''Arnie Admin''''\r\n        }\r\n      ],\r\n      ''''Name'''': ''''Susan Supervisor''''\r\n    }\r\n  ],\r\n  ''''Name'''': ''''Mike Manager''''\r\n}'', json)", span="321-336"];
n84 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesByValue()", label="Exit Newtonsoft.Json.Tests.DemoTests.SerializeReferencesByValue()", span="294-294"];
n87 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesWithMetadata()", label="Entry Newtonsoft.Json.Tests.DemoTests.SerializeReferencesWithMetadata()", span="340-340"];
n88 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesWithMetadata()", label="Employee arnie = new Employee { Name = ''Arnie Admin'' }", span="342-342"];
n89 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesWithMetadata()", label="Manager mike = new Manager { Name = ''Mike Manager'' }", span="343-343"];
n91 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesWithMetadata()", label="mike.Reportees = new[] { arnie, susan }", span="346-346"];
n92 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesWithMetadata()", label="susan.Reportees = new[] { arnie }", span="347-347"];
n90 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesWithMetadata()", label="Manager susan = new Manager { Name = ''Susan Supervisor'' }", span="344-344"];
n93 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesWithMetadata()", label="string json = JsonConvert.SerializeObject(mike, new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented,\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="349-354"];
n94 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesWithMetadata()", label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.DemoTests+Manager, Newtonsoft.Json.Tests'''',\r\n  ''''Reportees'''': [\r\n    {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.DemoTests+Employee, Newtonsoft.Json.Tests'''',\r\n      ''''Name'''': ''''Arnie Admin''''\r\n    },\r\n    {\r\n      ''''$id'''': ''''3'''',\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.DemoTests+Manager, Newtonsoft.Json.Tests'''',\r\n      ''''Reportees'''': [\r\n        {\r\n          ''''$ref'''': ''''2''''\r\n        }\r\n      ],\r\n      ''''Name'''': ''''Susan Supervisor''''\r\n    }\r\n  ],\r\n  ''''Name'''': ''''Mike Manager''''\r\n}'', json)", span="378-399"];
n95 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesWithMetadata()", label="Exit Newtonsoft.Json.Tests.DemoTests.SerializeReferencesWithMetadata()", span="340-340"];
n96 [cluster="Newtonsoft.Json.Tests.DemoTests.RoundtripTypesAndReferences()", label="Entry Newtonsoft.Json.Tests.DemoTests.RoundtripTypesAndReferences()", span="403-403"];
n97 [cluster="Newtonsoft.Json.Tests.DemoTests.RoundtripTypesAndReferences()", label="string json = @''{\r\n  '$id': '1',\r\n  '$type': 'Newtonsoft.Json.Tests.DemoTests+Manager, Newtonsoft.Json.Tests',\r\n  'Reportees': [\r\n    {\r\n      '$id': '2',\r\n      '$type': 'Newtonsoft.Json.Tests.DemoTests+Employee, Newtonsoft.Json.Tests',\r\n      'Name': 'Arnie Admin'\r\n    },\r\n    {\r\n      '$id': '3',\r\n      '$type': 'Newtonsoft.Json.Tests.DemoTests+Manager, Newtonsoft.Json.Tests',\r\n      'Reportees': [\r\n        {\r\n          '$ref': '2'\r\n        }\r\n      ],\r\n      'Name': 'Susan Supervisor'\r\n    }\r\n  ],\r\n  'Name': 'Mike Manager'\r\n}''", span="405-426"];
n98 [cluster="Newtonsoft.Json.Tests.DemoTests.RoundtripTypesAndReferences()", label="var e = JsonConvert.DeserializeObject<Employee>(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="428-432"];
n99 [cluster="Newtonsoft.Json.Tests.DemoTests.RoundtripTypesAndReferences()", label="Manager mike = (Manager)e", span="436-436"];
n100 [cluster="Newtonsoft.Json.Tests.DemoTests.RoundtripTypesAndReferences()", label="Manager susan = (Manager)mike.Reportees[1]", span="437-437"];
n101 [cluster="Newtonsoft.Json.Tests.DemoTests.RoundtripTypesAndReferences()", label="Object.ReferenceEquals(mike.Reportees[0], susan.Reportees[0])", span="439-439"];
n102 [cluster="Newtonsoft.Json.Tests.DemoTests.RoundtripTypesAndReferences()", label="Assert.IsTrue(ReferenceEquals(mike.Reportees[0], susan.Reportees[0]))", span="442-442"];
n104 [cluster="object.ReferenceEquals(object, object)", label="Entry object.ReferenceEquals(object, object)", span="0-0"];
n103 [cluster="Newtonsoft.Json.Tests.DemoTests.RoundtripTypesAndReferences()", label="Exit Newtonsoft.Json.Tests.DemoTests.RoundtripTypesAndReferences()", span="403-403"];
n105 [cluster="Unk.IsTrue", label="Entry Unk.IsTrue", span=""];
n106 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", label="Entry Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", span="517-517"];
n107 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", label="var house = new House3()", span="519-519"];
n108 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", label="house.StreetAddress = ''221B Baker Street''", span="520-520"];
n114 [cluster="Newtonsoft.Json.Tests.DemoTests.House3.House3()", label="Entry Newtonsoft.Json.Tests.DemoTests.House3.House3()", span="468-468"];
n109 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", label="house.Bedrooms = 2", span="521-521"];
n110 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", label="house.FloorArea = 100m", span="522-522"];
n111 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", label="house.BuildDate = new DateTime(1890, 1, 1)", span="523-523"];
n112 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", label="string json = JsonConvert.SerializeObject(house, Formatting.Indented)", span="525-525"];
n113 [cluster="Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", label="Exit Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", span="517-517"];
n115 [cluster="Newtonsoft.Json.Tests.DemoTests.MergeJson()", label="Entry Newtonsoft.Json.Tests.DemoTests.MergeJson()", span="553-553"];
n116 [cluster="Newtonsoft.Json.Tests.DemoTests.MergeJson()", label="JObject o1 = JObject.Parse(@''{\r\n              'FirstName': 'John',\r\n              'LastName': 'Smith',\r\n              'Enabled': false,\r\n              'Roles': [ 'User' ]\r\n            }'')", span="555-560"];
n117 [cluster="Newtonsoft.Json.Tests.DemoTests.MergeJson()", label="JObject o2 = JObject.Parse(@''{\r\n              'Enabled': true,\r\n              'Roles': [ 'User', 'Admin' ]\r\n            }'')", span="561-564"];
n122 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="404-404"];
n118 [cluster="Newtonsoft.Json.Tests.DemoTests.MergeJson()", label="o1.Merge(o2, new JsonMergeSettings\r\n            {\r\n                // union arrays together to avoid duplicates\r\n                MergeArrayHandling = MergeArrayHandling.Union\r\n            })", span="566-570"];
n119 [cluster="Newtonsoft.Json.Tests.DemoTests.MergeJson()", label="string json = o1.ToString()", span="572-572"];
n123 [cluster="Newtonsoft.Json.Linq.JsonMergeSettings.JsonMergeSettings()", label="Entry Newtonsoft.Json.Linq.JsonMergeSettings.JsonMergeSettings()", span="7-7"];
n124 [cluster="Newtonsoft.Json.Linq.JContainer.Merge(object, Newtonsoft.Json.Linq.JsonMergeSettings)", label="Entry Newtonsoft.Json.Linq.JContainer.Merge(object, Newtonsoft.Json.Linq.JsonMergeSettings)", span="725-725"];
n120 [cluster="Newtonsoft.Json.Tests.DemoTests.MergeJson()", label="StringAssert.AreEqual(@''{\r\n  ''''FirstName'''': ''''John'''',\r\n  ''''LastName'''': ''''Smith'''',\r\n  ''''Enabled'''': true,\r\n  ''''Roles'''': [\r\n    ''''User'''',\r\n    ''''Admin''''\r\n  ]\r\n}'', json)", span="583-591"];
n125 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="422-422"];
n121 [cluster="Newtonsoft.Json.Tests.DemoTests.MergeJson()", label="Exit Newtonsoft.Json.Tests.DemoTests.MergeJson()", span="553-553"];
n126 [cluster="Newtonsoft.Json.Tests.DemoTests.ArrayPooling()", label="Entry Newtonsoft.Json.Tests.DemoTests.ArrayPooling()", span="596-596"];
n127 [cluster="Newtonsoft.Json.Tests.DemoTests.ArrayPooling()", label="IList<int> value", span="598-598"];
n128 [cluster="Newtonsoft.Json.Tests.DemoTests.ArrayPooling()", label="JsonSerializer serializer = new JsonSerializer()", span="600-600"];
n129 [cluster="Newtonsoft.Json.Tests.DemoTests.ArrayPooling()", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1,2,3,4]''))", span="601-601"];
n134 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="530-530"];
n131 [cluster="Newtonsoft.Json.Tests.DemoTests.ArrayPooling()", label="value = serializer.Deserialize<IList<int>>(reader)", span="605-605"];
n130 [cluster="Newtonsoft.Json.Tests.DemoTests.ArrayPooling()", label="reader.ArrayPool = JsonArrayPool.Instance", span="603-603"];
n135 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="75-75"];
n136 [cluster="System.IO.StringReader.StringReader(string)", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
n132 [cluster="Newtonsoft.Json.Tests.DemoTests.ArrayPooling()", label="Assert.AreEqual(4, value.Count)", span="608-608"];
n137 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="838-838"];
n133 [cluster="Newtonsoft.Json.Tests.DemoTests.ArrayPooling()", label="Exit Newtonsoft.Json.Tests.DemoTests.ArrayPooling()", span="596-596"];
n138 [cluster="Newtonsoft.Json.Tests.DemoTests.AsyncDemo()", label="Entry Newtonsoft.Json.Tests.DemoTests.AsyncDemo()", span="614-614"];
n139 [cluster="Newtonsoft.Json.Tests.DemoTests.AsyncDemo()", label="JArray largeJson", span="616-616"];
n141 [cluster="Newtonsoft.Json.Tests.DemoTests.AsyncDemo()", label="largeJson = await JArray.LoadAsync(new JsonTextReader(textReader))", span="621-621"];
n147 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
n148 [cluster="System.IO.FileStream.FileStream(string, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare, int, bool)", label="Entry System.IO.FileStream.FileStream(string, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare, int, bool)", span="0-0"];
n142 [cluster="Newtonsoft.Json.Tests.DemoTests.AsyncDemo()", label="JToken user = largeJson.SelectToken(''$[?(@.name == 'Woodard Caldwell')]'')", span="624-624"];
n149 [cluster="Unk.LoadAsync", label="Entry Unk.LoadAsync", span=""];
n145 [cluster="Newtonsoft.Json.Tests.DemoTests.AsyncDemo()", label="await largeJson.WriteToAsync(new JsonTextWriter(textWriter))", span="630-630"];
n143 [cluster="Newtonsoft.Json.Tests.DemoTests.AsyncDemo()", label="user[''isActive''] = false", span="625-625"];
n150 [cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string)", label="Entry Newtonsoft.Json.Linq.JToken.SelectToken(string)", span="2301-2301"];
n151 [cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0"];
n146 [cluster="Newtonsoft.Json.Tests.DemoTests.AsyncDemo()", label="Exit Newtonsoft.Json.Tests.DemoTests.AsyncDemo()", span="614-614"];
n152 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="149-149"];
n153 [cluster="Unk.WriteToAsync", label="Entry Unk.WriteToAsync", span=""];
n154 [cluster="Newtonsoft.Json.Tests.JsonArrayPool.Rent(int)", label="Entry Newtonsoft.Json.Tests.JsonArrayPool.Rent(int)", span="641-641"];
n155 [cluster="Newtonsoft.Json.Tests.JsonArrayPool.Rent(int)", label="return ArrayPool<char>.Shared.Rent(minimumLength);", span="644-644"];
n156 [cluster="Newtonsoft.Json.Tests.JsonArrayPool.Rent(int)", label="Exit Newtonsoft.Json.Tests.JsonArrayPool.Rent(int)", span="641-641"];
n157 [cluster="Unk.Rent", label="Entry Unk.Rent", span=""];
n158 [cluster="Newtonsoft.Json.Tests.JsonArrayPool.Return(char[])", label="Entry Newtonsoft.Json.Tests.JsonArrayPool.Return(char[])", span="647-647"];
n159 [cluster="Newtonsoft.Json.Tests.JsonArrayPool.Return(char[])", label="ArrayPool<char>.Shared.Return(array)", span="650-650"];
n160 [cluster="Newtonsoft.Json.Tests.JsonArrayPool.Return(char[])", label="Exit Newtonsoft.Json.Tests.JsonArrayPool.Return(char[])", span="647-647"];
n161 [cluster="Unk.Return", label="Entry Unk.Return", span=""];
d140 [cluster="Newtonsoft.Json.Tests.DemoTests.AsyncDemo()", color=green, community=0, label="TextReader textReader = new StreamReader(new FileStream(ResolvePath(@''large.json''), FileMode.Open, FileAccess.Read, FileShare.Read, 4096, true))", prediction=0, span="619-619"];
d163 [label="Newtonsoft.Json.Tests.DemoTests", span=""];
d149 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.ResolvePath(string)", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.ResolvePath(string)", span="212-212"];
d144 [cluster="Newtonsoft.Json.Tests.DemoTests.AsyncDemo()", color=green, community=0, label="TextWriter textWriter = new StreamWriter(new FileStream(ResolvePath(@''large.json''), FileMode.Open, FileAccess.Write, FileShare.Write, 4096, true))", prediction=1, span="628-628"];
m0_52 [cluster="string.Split(params char[])", file="DynamicTests.cs", label="Entry string.Split(params char[])", span="0-0"];
m0_116 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectMethods()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectMethods()", span="225-225"];
m0_117 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectMethods()", file="DynamicTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''ChildValue'', ''blah blah''))", span="227-228"];
m0_118 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectMethods()", file="DynamicTests.cs", label="dynamic d = o", span="230-230"];
m0_119 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectMethods()", file="DynamicTests.cs", label="d.Add(''NewValue'', 1)", span="232-232"];
m0_120 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectMethods()", file="DynamicTests.cs", label="object count = d.Count", span="234-234"];
m0_122 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectMethods()", file="DynamicTests.cs", label="Assert.IsNull(d[''Count''])", span="237-237"];
m0_124 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectMethods()", file="DynamicTests.cs", label="Assert.IsTrue(d.TryGetValue(''ChildValue'', out v))", span="240-240"];
m0_121 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectMethods()", file="DynamicTests.cs", label="Assert.IsNull(count)", span="236-236"];
m0_123 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectMethods()", file="DynamicTests.cs", label="JToken v", span="239-239"];
m0_125 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectMethods()", file="DynamicTests.cs", label="Assert.AreEqual(''blah blah'', (string)v)", span="241-241"];
m0_126 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectMethods()", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectMethods()", span="225-225"];
m0_567 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicLinqExample()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicLinqExample()", span="849-849"];
m0_568 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicLinqExample()", file="DynamicTests.cs", label="JObject oldAndBusted = new JObject()", span="851-851"];
m0_569 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicLinqExample()", file="DynamicTests.cs", label="oldAndBusted[''Name''] = ''Arnie Admin''", span="852-852"];
m0_570 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicLinqExample()", file="DynamicTests.cs", label="oldAndBusted[''Enabled''] = true", span="853-853"];
m0_571 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicLinqExample()", file="DynamicTests.cs", label="oldAndBusted[''Roles''] = new JArray(new[] { ''Admin'', ''User'' })", span="854-854"];
m0_572 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicLinqExample()", file="DynamicTests.cs", label="string oldRole = (string)oldAndBusted[''Roles''][0]", span="856-856"];
m0_573 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicLinqExample()", file="DynamicTests.cs", label="dynamic newHotness = new JObject()", span="859-859"];
m0_578 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicLinqExample()", file="DynamicTests.cs", label="Assert.AreEqual(''Admin'', oldRole)", span="867-867"];
m0_574 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicLinqExample()", file="DynamicTests.cs", label="newHotness.Name = ''Arnie Admin''", span="860-860"];
m0_575 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicLinqExample()", file="DynamicTests.cs", label="newHotness.Enabled = true", span="861-861"];
m0_576 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicLinqExample()", file="DynamicTests.cs", label="newHotness.Roles = new JArray(new[] { ''Admin'', ''User'' })", span="862-862"];
m0_577 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicLinqExample()", file="DynamicTests.cs", label="string newRole = newHotness.Roles[0]", span="864-864"];
m0_579 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicLinqExample()", file="DynamicTests.cs", label="Assert.AreEqual(''Admin'', newRole)", span="868-868"];
m0_580 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicLinqExample()", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicLinqExample()", span="849-849"];
m0_72 [cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="113-113"];
m0_491 [cluster="Unk.GetDynamicMemberNames", file="DynamicTests.cs", label="Entry Unk.GetDynamicMemberNames", span=""];
m0_106 [cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="65-65"];
m0_633 [cluster="Newtonsoft.Json.Tests.Linq.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", span="967-967"];
m0_634 [cluster="Newtonsoft.Json.Tests.Linq.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", file="DynamicTests.cs", label="result = _values[binder.Name]", span="969-969"];
m0_635 [cluster="Newtonsoft.Json.Tests.Linq.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", file="DynamicTests.cs", label="return true;", span="970-970"];
m0_636 [cluster="Newtonsoft.Json.Tests.Linq.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.DynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder, out object)", span="967-967"];
m0_79 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectCount()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectCount()", span="162-162"];
m0_80 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectCount()", file="DynamicTests.cs", label="JObject o = new JObject()", span="164-164"];
m0_81 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectCount()", file="DynamicTests.cs", label="dynamic d = o", span="166-166"];
m0_83 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectCount()", file="DynamicTests.cs", label="o[''Count''] = 99", span="170-170"];
m0_82 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectCount()", file="DynamicTests.cs", label="long? c1 = d.Count", span="168-168"];
m0_84 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectCount()", file="DynamicTests.cs", label="long? c2 = d.Count", span="172-172"];
m0_85 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectCount()", file="DynamicTests.cs", label="Assert.AreEqual(null, c1)", span="174-174"];
m0_86 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectCount()", file="DynamicTests.cs", label="Assert.AreEqual(99, c2)", span="175-175"];
m0_87 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectCount()", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectCount()", span="162-162"];
m0_99 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectPropertyNameWithJArray()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectPropertyNameWithJArray()", span="200-200"];
m0_100 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectPropertyNameWithJArray()", file="DynamicTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''ChildValue'', ''blah blah''))", span="202-203"];
m0_101 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectPropertyNameWithJArray()", file="DynamicTests.cs", label="dynamic d = o", span="205-205"];
m0_102 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectPropertyNameWithJArray()", file="DynamicTests.cs", label="d.First = new JArray()", span="207-207"];
m0_103 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectPropertyNameWithJArray()", file="DynamicTests.cs", label="d.First.Add(''Hi'')", span="208-208"];
m0_104 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectPropertyNameWithJArray()", file="DynamicTests.cs", label="Assert.AreEqual(1, d.First.Count)", span="210-210"];
m0_105 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectPropertyNameWithJArray()", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectPropertyNameWithJArray()", span="200-200"];
m0_17 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.UpdateValueCount(System.Collections.Generic.IDictionary<string, int>, dynamic)", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.DynamicTests.UpdateValueCount(System.Collections.Generic.IDictionary<string, int>, dynamic)", span="80-80"];
m0_18 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.UpdateValueCount(System.Collections.Generic.IDictionary<string, int>, dynamic)", file="DynamicTests.cs", label="string s = d.ToString()", span="82-82"];
m0_20 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.UpdateValueCount(System.Collections.Generic.IDictionary<string, int>, dynamic)", file="DynamicTests.cs", label="!counts.TryGetValue(s, out c)", span="85-85"];
m0_23 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.UpdateValueCount(System.Collections.Generic.IDictionary<string, int>, dynamic)", file="DynamicTests.cs", label="counts[s] = c", span="91-91"];
m0_19 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.UpdateValueCount(System.Collections.Generic.IDictionary<string, int>, dynamic)", file="DynamicTests.cs", label="int c", span="84-84"];
m0_21 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.UpdateValueCount(System.Collections.Generic.IDictionary<string, int>, dynamic)", file="DynamicTests.cs", label="c = 0", span="87-87"];
m0_22 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.UpdateValueCount(System.Collections.Generic.IDictionary<string, int>, dynamic)", file="DynamicTests.cs", label="c++", span="90-90"];
m0_24 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.UpdateValueCount(System.Collections.Generic.IDictionary<string, int>, dynamic)", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.DynamicTests.UpdateValueCount(System.Collections.Generic.IDictionary<string, int>, dynamic)", span="80-80"];
m0_88 [cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87"];
m0_204 [cluster="Newtonsoft.Json.Linq.JValue.CreateNull()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.CreateNull()", span="588-588"];
m0_627 [cluster="lambda expression", file="DynamicTests.cs", label="Entry lambda expression", span="953-953"];
m0_112 [cluster="lambda expression", file="DynamicTests.cs", label="Entry lambda expression", span="216-221"];
m0_113 [cluster="lambda expression", file="DynamicTests.cs", label="dynamic d = new JObject()", span="218-218"];
m0_114 [cluster="lambda expression", file="DynamicTests.cs", label="d.First = new[] { ''One'', ''II'', ''3'' }", span="220-220"];
m0_115 [cluster="lambda expression", file="DynamicTests.cs", label="Exit lambda expression", span="216-221"];
m0_628 [cluster="lambda expression", file="DynamicTests.cs", label="JObject token = json.uid", span="953-953"];
m0_629 [cluster="lambda expression", file="DynamicTests.cs", label="Exit lambda expression", span="953-953"];
m0_214 [cluster="System.TimeSpan.FromDays(double)", file="DynamicTests.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m0_492 [cluster="Unk.ToList", file="DynamicTests.cs", label="Entry Unk.ToList", span=""];
m0_610 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicAccess_ToJTokenSafeCast_ShouldNotFail()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicAccess_ToJTokenSafeCast_ShouldNotFail()", span="927-927"];
m0_611 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicAccess_ToJTokenSafeCast_ShouldNotFail()", file="DynamicTests.cs", label="Guid g = Guid.NewGuid()", span="929-929"];
m0_612 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicAccess_ToJTokenSafeCast_ShouldNotFail()", file="DynamicTests.cs", label="dynamic json = JObject.FromObject(new { uid = g })", span="930-930"];
m0_614 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicAccess_ToJTokenSafeCast_ShouldNotFail()", file="DynamicTests.cs", label="Assert.AreEqual(g, ((JValue)token).Value)", span="933-933"];
m0_613 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicAccess_ToJTokenSafeCast_ShouldNotFail()", file="DynamicTests.cs", label="JToken token = json.uid as JToken", span="931-931"];
m0_615 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicAccess_ToJTokenSafeCast_ShouldNotFail()", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicAccess_ToJTokenSafeCast_ShouldNotFail()", span="927-927"];
m0_9 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.PropertyDoesNotEqualNull()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.DynamicTests.PropertyDoesNotEqualNull()", span="67-67"];
m0_10 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.PropertyDoesNotEqualNull()", file="DynamicTests.cs", label="dynamic session = JsonConvert.DeserializeObject<dynamic>(''{}'')", span="69-69"];
m0_11 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.PropertyDoesNotEqualNull()", file="DynamicTests.cs", label="session.sessionInfo != null", span="70-70"];
m0_12 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.PropertyDoesNotEqualNull()", file="DynamicTests.cs", label="Assert.Fail()", span="72-72"];
m0_13 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.PropertyDoesNotEqualNull()", file="DynamicTests.cs", label="Assert.Pass()", span="76-76"];
m0_14 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.PropertyDoesNotEqualNull()", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.DynamicTests.PropertyDoesNotEqualNull()", span="67-67"];
m0_15 [cluster="Unk.Fail", file="DynamicTests.cs", label="Entry Unk.Fail", span=""];
m0_476 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectGetDynamicPropertyNames()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectGetDynamicPropertyNames()", span="725-725"];
m0_477 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectGetDynamicPropertyNames()", file="DynamicTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''ChildValue'', ''blah blah''),\r\n                new JProperty(''Hello Joe'', null))", span="727-729"];
m0_478 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectGetDynamicPropertyNames()", file="DynamicTests.cs", label="dynamic d = o", span="731-731"];
m0_479 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectGetDynamicPropertyNames()", file="DynamicTests.cs", label="List<string> memberNames = o.GetDynamicMemberNames().ToList()", span="733-733"];
m0_480 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectGetDynamicPropertyNames()", file="DynamicTests.cs", label="Assert.AreEqual(2, memberNames.Count)", span="735-735"];
m0_481 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectGetDynamicPropertyNames()", file="DynamicTests.cs", label="Assert.AreEqual(''ChildValue'', memberNames[0])", span="736-736"];
m0_482 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectGetDynamicPropertyNames()", file="DynamicTests.cs", label="Assert.AreEqual(''Hello Joe'', memberNames[1])", span="737-737"];
m0_483 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectGetDynamicPropertyNames()", file="DynamicTests.cs", label="o = new JObject(\r\n                new JProperty(''ChildValue1'', ''blah blah''),\r\n                new JProperty(''Hello Joe1'', null))", span="739-741"];
m0_484 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectGetDynamicPropertyNames()", file="DynamicTests.cs", label="d = o", span="743-743"];
m0_485 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectGetDynamicPropertyNames()", file="DynamicTests.cs", label="memberNames = o.GetDynamicMemberNames().ToList()", span="745-745"];
m0_486 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectGetDynamicPropertyNames()", file="DynamicTests.cs", label="Assert.AreEqual(2, memberNames.Count)", span="747-747"];
m0_487 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectGetDynamicPropertyNames()", file="DynamicTests.cs", label="Assert.AreEqual(''ChildValue1'', memberNames[0])", span="748-748"];
m0_488 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectGetDynamicPropertyNames()", file="DynamicTests.cs", label="Assert.AreEqual(''Hello Joe1'', memberNames[1])", span="749-749"];
m0_489 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectGetDynamicPropertyNames()", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectGetDynamicPropertyNames()", span="725-725"];
m0_213 [cluster="System.Guid.Guid(string)", file="DynamicTests.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m0_208 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", span="125-125"];
m0_622 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicAccess_ToJToken_ShouldFail()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicAccess_ToJToken_ShouldFail()", span="947-947"];
m0_623 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicAccess_ToJToken_ShouldFail()", file="DynamicTests.cs", label="Guid g = Guid.NewGuid()", span="949-949"];
m0_624 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicAccess_ToJToken_ShouldFail()", file="DynamicTests.cs", label="dynamic json = JObject.FromObject(new { uid = g })", span="950-950"];
m0_625 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicAccess_ToJToken_ShouldFail()", file="DynamicTests.cs", label="ExceptionAssert.Throws<InvalidOperationException>(\r\n                () => { JObject token = json.uid; },\r\n                ''Can not convert from System.Guid to Newtonsoft.Json.Linq.JObject.'')", span="952-954"];
m0_626 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicAccess_ToJToken_ShouldFail()", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicAccess_ToJToken_ShouldFail()", span="947-947"];
m0_604 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicAccess_ToJTokenExplicit_ShouldNotFail()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicAccess_ToJTokenExplicit_ShouldNotFail()", span="917-917"];
m0_605 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicAccess_ToJTokenExplicit_ShouldNotFail()", file="DynamicTests.cs", label="Guid g = Guid.NewGuid()", span="919-919"];
m0_606 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicAccess_ToJTokenExplicit_ShouldNotFail()", file="DynamicTests.cs", label="dynamic json = JObject.FromObject(new { uid = g })", span="920-920"];
m0_608 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicAccess_ToJTokenExplicit_ShouldNotFail()", file="DynamicTests.cs", label="Assert.AreEqual(g, ((JValue)token).Value)", span="923-923"];
m0_607 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicAccess_ToJTokenExplicit_ShouldNotFail()", file="DynamicTests.cs", label="JToken token = (JToken)json.uid", span="921-921"];
m0_609 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicAccess_ToJTokenExplicit_ShouldNotFail()", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicAccess_ToJTokenExplicit_ShouldNotFail()", span="917-917"];
m0_217 [cluster="Unk.IsFalse", file="DynamicTests.cs", label="Entry Unk.IsFalse", span=""];
m0_630 [cluster="Newtonsoft.Json.Tests.Linq.DynamicDictionary.GetDynamicMemberNames()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.DynamicDictionary.GetDynamicMemberNames()", span="962-962"];
m0_631 [cluster="Newtonsoft.Json.Tests.Linq.DynamicDictionary.GetDynamicMemberNames()", file="DynamicTests.cs", label="return _values.Keys;", span="964-964"];
m0_632 [cluster="Newtonsoft.Json.Tests.Linq.DynamicDictionary.GetDynamicMemberNames()", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.DynamicDictionary.GetDynamicMemberNames()", span="962-962"];
m0_566 [cluster="Unk.SerializeObject", file="DynamicTests.cs", label="Entry Unk.SerializeObject", span=""];
m0_54 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectPropertyNames()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectPropertyNames()", span="132-132"];
m0_55 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectPropertyNames()", file="DynamicTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''ChildValue'', ''blah blah''))", span="134-135"];
m0_56 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectPropertyNames()", file="DynamicTests.cs", label="dynamic d = o", span="137-137"];
m0_57 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectPropertyNames()", file="DynamicTests.cs", label="d.First = ''A value!''", span="139-139"];
m0_58 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectPropertyNames()", file="DynamicTests.cs", label="Assert.AreEqual(new JValue(''A value!''), d.First)", span="141-141"];
m0_59 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectPropertyNames()", file="DynamicTests.cs", label="Assert.AreEqual(''A value!'', (string)d.First)", span="142-142"];
m0_60 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectPropertyNames()", file="DynamicTests.cs", label="d.First = null", span="144-144"];
m0_61 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectPropertyNames()", file="DynamicTests.cs", label="Assert.AreEqual(JTokenType.Null, d.First.Type)", span="145-145"];
m0_62 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectPropertyNames()", file="DynamicTests.cs", label="Assert.IsTrue(d.Remove(''First''))", span="147-147"];
m0_63 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectPropertyNames()", file="DynamicTests.cs", label="Assert.IsNull(d.First)", span="148-148"];
m0_64 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectPropertyNames()", file="DynamicTests.cs", label="JValue v1 = d.ChildValue", span="150-150"];
m0_65 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectPropertyNames()", file="DynamicTests.cs", label="JValue v2 = d[''ChildValue'']", span="151-151"];
m0_68 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectPropertyNames()", file="DynamicTests.cs", label="d.NewValue = newValue1", span="155-155"];
m0_69 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectPropertyNames()", file="DynamicTests.cs", label="JValue newValue2 = d.NewValue", span="156-156"];
m0_66 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectPropertyNames()", file="DynamicTests.cs", label="Assert.AreEqual(v1, v2)", span="152-152"];
m0_67 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectPropertyNames()", file="DynamicTests.cs", label="JValue newValue1 = new JValue(''Blah blah'')", span="154-154"];
m0_70 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectPropertyNames()", file="DynamicTests.cs", label="Assert.IsTrue(ReferenceEquals(newValue1, newValue2))", span="158-158"];
m0_71 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectPropertyNames()", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectPropertyNames()", span="132-132"];
m0_128 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", span="245-245"];
m0_129 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''Null'', JValue.CreateNull()),\r\n                new JProperty(''Integer'', new JValue(1)),\r\n                new JProperty(''Float'', new JValue(1.1d)),\r\n                new JProperty(''Decimal'', new JValue(1.1m)),\r\n                new JProperty(''DateTime'', new JValue(new DateTime(2000, 12, 29, 23, 51, 10, DateTimeKind.Utc))),\r\n                new JProperty(''Boolean'', new JValue(true)),\r\n                new JProperty(''String'', new JValue(''A string lol!'')),\r\n                new JProperty(''Bytes'', new JValue(Encoding.UTF8.GetBytes(''A string lol!''))),\r\n                new JProperty(''Uri'', new Uri(''http://json.codeplex.com/'')),\r\n                new JProperty(''Guid'', new Guid(''EA27FE1D-0D80-44F2-BF34-4654156FA7AF'')),\r\n                new JProperty(''TimeSpan'', TimeSpan.FromDays(1))\r\n#if !(NET20 || NET35 || PORTABLE) || NETSTANDARD1_3\r\n                , new JProperty(''BigInteger'', BigInteger.Parse(''1''))\r\n#endif\r\n                )", span="247-262"];
m0_130 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="dynamic d = o", span="264-264"];
m0_131 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Null == d.Null)", span="266-266"];
m0_132 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Null == null)", span="267-267"];
m0_133 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Null == JValue.CreateNull())", span="268-268"];
m0_134 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsFalse(d.Null == 1)", span="269-269"];
m0_135 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Integer == d.Integer)", span="271-271"];
m0_136 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Integer > 0)", span="272-272"];
m0_137 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Integer > 0.0m)", span="273-273"];
m0_138 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Integer > 0.0f)", span="274-274"];
m0_139 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Integer > null)", span="275-275"];
m0_140 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Integer >= null)", span="276-276"];
m0_141 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Integer == 1)", span="277-277"];
m0_142 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Integer == 1m)", span="278-278"];
m0_143 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Integer != 1.1f)", span="279-279"];
m0_144 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Integer != 1.1d)", span="280-280"];
m0_145 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Decimal == d.Decimal)", span="282-282"];
m0_146 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Decimal > 0)", span="283-283"];
m0_147 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Decimal > 0.0m)", span="284-284"];
m0_148 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Decimal > 0.0f)", span="285-285"];
m0_149 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Decimal > null)", span="286-286"];
m0_150 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Decimal >= null)", span="287-287"];
m0_151 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Decimal == 1.1)", span="288-288"];
m0_152 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Decimal == 1.1m)", span="289-289"];
m0_153 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Decimal != 1.0f)", span="290-290"];
m0_154 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Decimal != 1.0d)", span="291-291"];
m0_155 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Decimal > new BigInteger(0))", span="293-293"];
m0_156 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Float == d.Float)", span="296-296"];
m0_157 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Float > 0)", span="297-297"];
m0_158 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Float > 0.0m)", span="298-298"];
m0_159 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Float > 0.0f)", span="299-299"];
m0_160 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Float > null)", span="300-300"];
m0_161 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Float >= null)", span="301-301"];
m0_162 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Float < 2)", span="302-302"];
m0_163 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Float <= 1.1)", span="303-303"];
m0_164 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Float == 1.1)", span="304-304"];
m0_165 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Float == 1.1m)", span="305-305"];
m0_166 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Float != 1.0f)", span="306-306"];
m0_167 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Float != 1.0d)", span="307-307"];
m0_168 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Float > new BigInteger(0))", span="309-309"];
m0_169 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.BigInteger == d.BigInteger)", span="313-313"];
m0_170 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.BigInteger > 0)", span="314-314"];
m0_171 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.BigInteger > 0.0m)", span="315-315"];
m0_172 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.BigInteger > 0.0f)", span="316-316"];
m0_173 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.BigInteger > null)", span="317-317"];
m0_174 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.BigInteger >= null)", span="318-318"];
m0_175 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.BigInteger < 2)", span="319-319"];
m0_176 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.BigInteger <= 1.1)", span="320-320"];
m0_177 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.BigInteger == 1)", span="321-321"];
m0_178 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.BigInteger == 1m)", span="322-322"];
m0_179 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.BigInteger != 1.1f)", span="323-323"];
m0_180 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.BigInteger != 1.1d)", span="324-324"];
m0_181 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Bytes == d.Bytes)", span="327-327"];
m0_182 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Bytes == Encoding.UTF8.GetBytes(''A string lol!''))", span="328-328"];
m0_183 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Bytes == new JValue(Encoding.UTF8.GetBytes(''A string lol!'')))", span="329-329"];
m0_184 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Uri == d.Uri)", span="331-331"];
m0_185 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Uri == new Uri(''http://json.codeplex.com/''))", span="332-332"];
m0_186 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Uri > new Uri(''http://abc.org/''))", span="333-333"];
m0_187 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Uri >= new Uri(''http://abc.com/''))", span="334-334"];
m0_188 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Uri > null)", span="335-335"];
m0_189 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Uri >= null)", span="336-336"];
m0_190 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Guid == d.Guid)", span="338-338"];
m0_191 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Guid == new Guid(''EA27FE1D-0D80-44F2-BF34-4654156FA7AF''))", span="339-339"];
m0_192 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Guid > new Guid(''AAAAAAAA-0D80-44F2-BF34-4654156FA7AF''))", span="340-340"];
m0_193 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Guid >= new Guid(''AAAAAAAA-0D80-44F2-BF34-4654156FA7AF''))", span="341-341"];
m0_194 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Guid > null)", span="342-342"];
m0_195 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.Guid >= null)", span="343-343"];
m0_196 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.TimeSpan == d.TimeSpan)", span="345-345"];
m0_197 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.TimeSpan == TimeSpan.FromDays(1))", span="346-346"];
m0_198 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.TimeSpan > TimeSpan.FromHours(1))", span="347-347"];
m0_199 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.TimeSpan >= TimeSpan.FromHours(1))", span="348-348"];
m0_200 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.TimeSpan > null)", span="349-349"];
m0_201 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Assert.IsTrue(d.TimeSpan >= null)", span="350-350"];
m0_202 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.DynamicTests.JValueEquals()", span="245-245"];
m0_556 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicSerializerExample()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicSerializerExample()", span="824-824"];
m0_557 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicSerializerExample()", file="DynamicTests.cs", label="dynamic value = new DynamicDictionary()", span="826-826"];
m0_558 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicSerializerExample()", file="DynamicTests.cs", label="value.Name = ''Arine Admin''", span="828-828"];
m0_559 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicSerializerExample()", file="DynamicTests.cs", label="value.Enabled = true", span="829-829"];
m0_560 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicSerializerExample()", file="DynamicTests.cs", label="value.Roles = new[] { ''Admin'', ''User'' }", span="830-830"];
m0_561 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicSerializerExample()", file="DynamicTests.cs", label="string json = JsonConvert.SerializeObject(value, Formatting.Indented)", span="832-832"];
m0_562 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicSerializerExample()", file="DynamicTests.cs", label="dynamic newValue = JsonConvert.DeserializeObject<DynamicDictionary>(json)", span="842-842"];
m0_563 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicSerializerExample()", file="DynamicTests.cs", label="string role = newValue.Roles[0]", span="844-844"];
m0_564 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicSerializerExample()", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicSerializerExample()", span="824-824"];
m0_565 [cluster="Newtonsoft.Json.Tests.Linq.DynamicDictionary.DynamicDictionary()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.DynamicDictionary.DynamicDictionary()", span="958-958"];
m0_547 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="DynamicTests.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m0_47 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="530-530"];
m0_545 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.AssertValueConverted<T>(object)", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.DynamicTests.AssertValueConverted<T>(object)", span="809-809"];
m0_549 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.AssertValueConverted<T>(object)", file="DynamicTests.cs", label="AssertValueConverted<T>(value, value)", span="811-811"];
m0_550 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.AssertValueConverted<T>(object)", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.DynamicTests.AssertValueConverted<T>(object)", span="809-809"];
m0_89 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectEnumerator()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectEnumerator()", span="179-179"];
m0_90 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectEnumerator()", file="DynamicTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''ChildValue'', ''blah blah''))", span="181-182"];
m0_91 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectEnumerator()", file="DynamicTests.cs", label="dynamic d = o", span="184-184"];
m0_92 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectEnumerator()", file="DynamicTests.cs", label=d, span="186-186"];
m0_95 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectEnumerator()", file="DynamicTests.cs", label=d, span="192-192"];
m0_93 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectEnumerator()", file="DynamicTests.cs", label="Assert.AreEqual(''ChildValue'', value.Name)", span="188-188"];
m0_94 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectEnumerator()", file="DynamicTests.cs", label="Assert.AreEqual(''blah blah'', (string)value.Value)", span="189-189"];
m0_96 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectEnumerator()", file="DynamicTests.cs", label="Assert.AreEqual(''ChildValue'', value.Name)", span="194-194"];
m0_97 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectEnumerator()", file="DynamicTests.cs", label="Assert.AreEqual(''blah blah'', (string)value.Value)", span="195-195"];
m0_98 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectEnumerator()", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectEnumerator()", span="179-179"];
m0_596 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicAccess_ToJToken_ShouldNotFail()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicAccess_ToJToken_ShouldNotFail()", span="907-907"];
m0_597 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicAccess_ToJToken_ShouldNotFail()", file="DynamicTests.cs", label="Guid g = Guid.NewGuid()", span="909-909"];
m0_598 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicAccess_ToJToken_ShouldNotFail()", file="DynamicTests.cs", label="dynamic json = JObject.FromObject(new { uid = g })", span="910-910"];
m0_600 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicAccess_ToJToken_ShouldNotFail()", file="DynamicTests.cs", label="Assert.AreEqual(g, ((JValue)token).Value)", span="913-913"];
m0_599 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicAccess_ToJToken_ShouldNotFail()", file="DynamicTests.cs", label="JToken token = json.uid", span="911-911"];
m0_601 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicAccess_ToJToken_ShouldNotFail()", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.DynamicTests.DynamicAccess_ToJToken_ShouldNotFail()", span="907-907"];
m0_207 [cluster="Newtonsoft.Json.Linq.JValue.JValue(decimal)", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(decimal)", span="79-79"];
m0_212 [cluster="System.Uri.Uri(string)", file="DynamicTests.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m0_49 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DynamicTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m0_73 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="316-316"];
m0_108 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectPropertyNameWithNonToken()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectPropertyNameWithNonToken()", span="214-214"];
m0_109 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectPropertyNameWithNonToken()", file="DynamicTests.cs", label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                dynamic d = new JObject();\r\n\r\n                d.First = new[] { ''One'', ''II'', ''3'' };\r\n            }, ''Could not determine JSON object type for type System.String[].'')", span="216-221"];
m0_110 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectPropertyNameWithNonToken()", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.DynamicTests.JObjectPropertyNameWithNonToken()", span="214-214"];
m0_603 [cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="442-442"];
m0_26 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="DynamicTests.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m0_6 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="DynamicTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="703-703"];
m0_493 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", span="753-753"];
m0_494 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<bool>(true)", span="755-755"];
m0_495 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<bool?>(true)", span="756-756"];
m0_496 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<bool?>(false)", span="757-757"];
m0_497 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<bool?>(null)", span="758-758"];
m0_498 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<bool?>(''true'', true)", span="759-759"];
m0_499 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<byte[]>(null)", span="760-760"];
m0_500 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<byte[]>(Encoding.UTF8.GetBytes(''blah''))", span="761-761"];
m0_501 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<DateTime>(new DateTime(2000, 12, 20, 23, 59, 2, DateTimeKind.Utc))", span="762-762"];
m0_502 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<DateTime?>(new DateTime(2000, 12, 20, 23, 59, 2, DateTimeKind.Utc))", span="763-763"];
m0_503 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<DateTime?>(null)", span="764-764"];
m0_504 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<DateTimeOffset>(new DateTimeOffset(2000, 12, 20, 23, 59, 2, TimeSpan.FromHours(1)))", span="765-765"];
m0_505 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<DateTimeOffset?>(new DateTimeOffset(2000, 12, 20, 23, 59, 2, TimeSpan.FromHours(1)))", span="766-766"];
m0_506 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<DateTimeOffset?>(null)", span="767-767"];
m0_507 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<decimal>(99.9m)", span="768-768"];
m0_508 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<decimal?>(99.9m)", span="769-769"];
m0_509 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<decimal>(1m)", span="770-770"];
m0_510 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<decimal>(1.1f, 1.1m)", span="771-771"];
m0_511 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<decimal>(''1.1'', 1.1m)", span="772-772"];
m0_512 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<double>(99.9)", span="773-773"];
m0_513 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<double>(99.9d)", span="774-774"];
m0_514 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<double?>(99.9d)", span="775-775"];
m0_515 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<float>(99.9f)", span="776-776"];
m0_516 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<float?>(99.9f)", span="777-777"];
m0_517 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<int>(int.MinValue)", span="778-778"];
m0_518 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<int?>(int.MinValue)", span="779-779"];
m0_519 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<long>(long.MaxValue)", span="780-780"];
m0_520 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<long?>(long.MaxValue)", span="781-781"];
m0_521 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<short>(short.MaxValue)", span="782-782"];
m0_522 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<short?>(short.MaxValue)", span="783-783"];
m0_523 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<string>(''blah'')", span="784-784"];
m0_524 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<string>(null)", span="785-785"];
m0_525 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<string>(1, ''1'')", span="786-786"];
m0_526 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<uint>(uint.MinValue)", span="787-787"];
m0_527 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<uint?>(uint.MinValue)", span="788-788"];
m0_528 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<uint?>(''1'', (uint)1)", span="789-789"];
m0_529 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<ulong>(ulong.MaxValue)", span="790-790"];
m0_530 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<ulong?>(ulong.MaxValue)", span="791-791"];
m0_531 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<ushort>(ushort.MinValue)", span="792-792"];
m0_532 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<ushort?>(ushort.MinValue)", span="793-793"];
m0_533 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<ushort?>(null)", span="794-794"];
m0_534 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<TimeSpan>(TimeSpan.FromDays(1))", span="795-795"];
m0_535 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<TimeSpan?>(TimeSpan.FromDays(1))", span="796-796"];
m0_536 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<TimeSpan?>(null)", span="797-797"];
m0_537 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<Guid>(new Guid(''60304274-CD13-4060-B38C-057C8557AB54''))", span="798-798"];
m0_538 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<Guid?>(new Guid(''60304274-CD13-4060-B38C-057C8557AB54''))", span="799-799"];
m0_539 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<Guid?>(null)", span="800-800"];
m0_540 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<Uri>(new Uri(''http://json.codeplex.com/''))", span="801-801"];
m0_541 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<Uri>(null)", span="802-802"];
m0_542 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<BigInteger>(new BigInteger(100))", span="804-804"];
m0_543 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="AssertValueConverted<BigInteger?>(null)", span="805-805"];
m0_544 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.DynamicTests.JValueConvert()", span="753-753"];
m0_616 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.IndexAccess_ToJToken_ShouldNotFail()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.DynamicTests.IndexAccess_ToJToken_ShouldNotFail()", span="937-937"];
m0_617 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.IndexAccess_ToJToken_ShouldNotFail()", file="DynamicTests.cs", label="Guid g = Guid.NewGuid()", span="939-939"];
m0_618 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.IndexAccess_ToJToken_ShouldNotFail()", file="DynamicTests.cs", label="JObject json = JObject.FromObject(new { uid = g })", span="940-940"];
m0_620 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.IndexAccess_ToJToken_ShouldNotFail()", file="DynamicTests.cs", label="Assert.AreEqual(g, ((JValue)token).Value)", span="943-943"];
m0_619 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.IndexAccess_ToJToken_ShouldNotFail()", file="DynamicTests.cs", label="JToken token = json[''uid'']", span="941-941"];
m0_621 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.IndexAccess_ToJToken_ShouldNotFail()", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.DynamicTests.IndexAccess_ToJToken_ShouldNotFail()", span="937-937"];
m0_205 [cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(long)", span="70-70"];
m0_53 [cluster="System.Console.WriteLine(string)", file="DynamicTests.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m0_75 [cluster="Unk.Remove", file="DynamicTests.cs", label="Entry Unk.Remove", span=""];
m0_215 [cluster="JProperty.cstr", file="DynamicTests.cs", label="Entry JProperty.cstr", span=""];
m0_548 [cluster="Unk.>", file="DynamicTests.cs", label="Entry Unk.>", span=""];
m0_218 [cluster="BigInteger.cstr", file="DynamicTests.cs", label="Entry BigInteger.cstr", span=""];
m0_582 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.ImprovedDynamicLinqExample()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.DynamicTests.ImprovedDynamicLinqExample()", span="872-872"];
m0_583 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.ImprovedDynamicLinqExample()", file="DynamicTests.cs", label="dynamic product = new JObject()", span="874-874"];
m0_584 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.ImprovedDynamicLinqExample()", file="DynamicTests.cs", label="product.ProductName = ''Elbow Grease''", span="875-875"];
m0_585 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.ImprovedDynamicLinqExample()", file="DynamicTests.cs", label="product.Enabled = true", span="876-876"];
m0_586 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.ImprovedDynamicLinqExample()", file="DynamicTests.cs", label="product.Price = 4.90m", span="877-877"];
m0_587 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.ImprovedDynamicLinqExample()", file="DynamicTests.cs", label="product.StockCount = 9000", span="878-878"];
m0_588 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.ImprovedDynamicLinqExample()", file="DynamicTests.cs", label="product.StockValue = 44100", span="879-879"];
m0_589 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.ImprovedDynamicLinqExample()", file="DynamicTests.cs", label="product.Price = product.Price / 2", span="884-884"];
m0_590 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.ImprovedDynamicLinqExample()", file="DynamicTests.cs", label="product.StockValue = product.StockCount * product.Price", span="885-885"];
m0_591 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.ImprovedDynamicLinqExample()", file="DynamicTests.cs", label="product.ProductName = product.ProductName + '' (SALE)''", span="886-886"];
m0_592 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.ImprovedDynamicLinqExample()", file="DynamicTests.cs", label="string json = product.ToString()", span="888-888"];
m0_593 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.ImprovedDynamicLinqExample()", file="DynamicTests.cs", label="StringAssert.AreEqual(@''{\r\n  ''''ProductName'''': ''''Elbow Grease (SALE)'''',\r\n  ''''Enabled'''': true,\r\n  ''''Price'''': 2.45,\r\n  ''''StockCount'''': 9000,\r\n  ''''StockValue'''': 22050.00\r\n}'', json)", span="897-903"];
m0_594 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.ImprovedDynamicLinqExample()", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.DynamicTests.ImprovedDynamicLinqExample()", span="872-872"];
m0_8 [cluster="Unk.AreEqual", file="DynamicTests.cs", label="Entry Unk.AreEqual", span=""];
m0_546 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.AssertValueConverted<T>(object, object)", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.DynamicTests.AssertValueConverted<T>(object, object)", span="814-814"];
m0_551 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.AssertValueConverted<T>(object, object)", file="DynamicTests.cs", label="JValue v = new JValue(value)", span="816-816"];
m0_554 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.AssertValueConverted<T>(object, object)", file="DynamicTests.cs", label="Assert.AreEqual(expected, t)", span="820-820"];
m0_552 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.AssertValueConverted<T>(object, object)", file="DynamicTests.cs", label="dynamic d = v", span="817-817"];
m0_553 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.AssertValueConverted<T>(object, object)", file="DynamicTests.cs", label="T t = d", span="819-819"];
m0_555 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.AssertValueConverted<T>(object, object)", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.DynamicTests.AssertValueConverted<T>(object, object)", span="814-814"];
m0_107 [cluster="Unk.Add", file="DynamicTests.cs", label="Entry Unk.Add", span=""];
m0_48 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="DynamicTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="814-814"];
m0_78 [cluster="object.ReferenceEquals(object, object)", file="DynamicTests.cs", label="Entry object.ReferenceEquals(object, object)", span="0-0"];
m0_220 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", span="354-354"];
m0_221 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''Null'', JValue.CreateNull()),\r\n                new JProperty(''Integer'', new JValue(1)),\r\n                new JProperty(''Float'', new JValue(1.1d)),\r\n                new JProperty(''Decimal'', new JValue(1.1m)),\r\n                new JProperty(''DateTime'', new JValue(new DateTime(2000, 12, 29, 23, 51, 10, DateTimeKind.Utc))),\r\n                new JProperty(''Boolean'', new JValue(true)),\r\n                new JProperty(''String'', new JValue(''A string lol!'')),\r\n                new JProperty(''Bytes'', new JValue(Encoding.UTF8.GetBytes(''A string lol!''))),\r\n                new JProperty(''Uri'', new Uri(''http://json.codeplex.com/'')),\r\n                new JProperty(''Guid'', new Guid(''EA27FE1D-0D80-44F2-BF34-4654156FA7AF'')),\r\n                new JProperty(''TimeSpan'', TimeSpan.FromDays(1))\r\n#if !(NET20 || NET35 || PORTABLE) || NETSTANDARD1_3\r\n                , new JProperty(''BigInteger'', new BigInteger(100))\r\n#endif\r\n                )", span="356-371"];
m0_222 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="dynamic d = o", span="373-373"];
m0_223 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="dynamic r", span="374-374"];
m0_224 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.String + '' LAMO!''", span="377-377"];
m0_228 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.String + null", span="382-382"];
m0_232 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Integer + 1", span="387-387"];
m0_236 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Integer + 1.1", span="392-392"];
m0_240 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Integer + 1.1d", span="397-397"];
m0_244 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Integer + null", span="402-402"];
m0_248 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Float + 1", span="407-407"];
m0_252 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Float + 1.1", span="412-412"];
m0_256 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Float + 1.1d", span="417-417"];
m0_260 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Float + null", span="422-422"];
m0_264 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Decimal + 1", span="427-427"];
m0_268 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Decimal + 1.1", span="432-432"];
m0_272 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Decimal + 1.1d", span="437-437"];
m0_276 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Decimal + null", span="442-442"];
m0_280 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.BigInteger + null", span="448-448"];
m0_284 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.BigInteger + 1", span="453-453"];
m0_288 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.BigInteger + 1.1d", span="458-458"];
m0_292 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Integer - 1", span="466-466"];
m0_296 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Integer - 1.1", span="471-471"];
m0_300 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Integer - 1.1d", span="476-476"];
m0_304 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Integer - null", span="481-481"];
m0_308 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Float - 1", span="486-486"];
m0_312 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Float - 1.1", span="491-491"];
m0_316 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Float - 1.1d", span="496-496"];
m0_320 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Float - null", span="501-501"];
m0_324 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Decimal - 1", span="506-506"];
m0_328 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Decimal - 1.1", span="511-511"];
m0_332 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Decimal - 1.1d", span="516-516"];
m0_336 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Decimal - null", span="521-521"];
m0_340 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.BigInteger - null", span="527-527"];
m0_344 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.BigInteger - 1.1d", span="532-532"];
m0_348 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Integer * 1", span="540-540"];
m0_352 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Integer * 1.1", span="545-545"];
m0_356 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Integer * 1.1d", span="550-550"];
m0_360 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Integer * null", span="555-555"];
m0_364 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Float * 1", span="560-560"];
m0_368 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Float * 1.1", span="565-565"];
m0_372 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Float * 1.1d", span="570-570"];
m0_376 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Float * null", span="575-575"];
m0_380 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Decimal * 1", span="580-580"];
m0_384 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Decimal * 1.1", span="585-585"];
m0_388 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Decimal * 1.1d", span="590-590"];
m0_392 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Decimal * null", span="595-595"];
m0_396 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.BigInteger * 1.1d", span="601-601"];
m0_400 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.BigInteger * null", span="606-606"];
m0_404 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Integer / 1", span="614-614"];
m0_408 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Integer / 1.1", span="619-619"];
m0_412 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Integer / 1.1d", span="624-624"];
m0_416 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Integer / null", span="629-629"];
m0_420 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Float / 1", span="634-634"];
m0_424 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Float / 1.1", span="639-639"];
m0_428 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Float / 1.1d", span="644-644"];
m0_432 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Float / null", span="649-649"];
m0_436 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Decimal / 1", span="654-654"];
m0_440 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Decimal / 1.1", span="659-659"];
m0_444 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Decimal / 1.1d", span="664-664"];
m0_448 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.Decimal / null", span="669-669"];
m0_452 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.BigInteger / 1.1d", span="675-675"];
m0_456 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r = d.BigInteger / null", span="680-680"];
m0_225 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(''A string lol! LAMO!'', (string)r)", span="378-378"];
m0_226 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r += '' gg''", span="379-379"];
m0_227 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(''A string lol! LAMO! gg'', (string)r)", span="380-380"];
m0_229 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(''A string lol!'', (string)r)", span="383-383"];
m0_230 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r += null", span="384-384"];
m0_231 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(''A string lol!'', (string)r)", span="385-385"];
m0_233 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(2, (int)r)", span="388-388"];
m0_234 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r += 2", span="389-389"];
m0_235 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(4, (int)r)", span="390-390"];
m0_237 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(2.1, (double)r)", span="393-393"];
m0_238 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r += 2", span="394-394"];
m0_239 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(4.1, (double)r)", span="395-395"];
m0_241 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(2.1m, (decimal)r)", span="398-398"];
m0_242 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r += 2", span="399-399"];
m0_243 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(4.1m, (decimal)r)", span="400-400"];
m0_245 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(null, r.Value)", span="403-403"];
m0_246 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r += 2", span="404-404"];
m0_247 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(null, r.Value)", span="405-405"];
m0_249 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(2.1d, (double)r)", span="408-408"];
m0_250 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r += 2", span="409-409"];
m0_251 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(4.1d, (double)r)", span="410-410"];
m0_253 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(2.2d, (double)r)", span="413-413"];
m0_254 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r += 2", span="414-414"];
m0_255 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(4.2d, (double)r)", span="415-415"];
m0_257 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(2.2m, (decimal)r)", span="418-418"];
m0_258 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r += 2", span="419-419"];
m0_259 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(4.2m, (decimal)r)", span="420-420"];
m0_261 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(null, r.Value)", span="423-423"];
m0_262 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r += 2", span="424-424"];
m0_263 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(null, r.Value)", span="425-425"];
m0_265 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(2.1m, (decimal)r)", span="428-428"];
m0_266 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r += 2", span="429-429"];
m0_267 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(4.1m, (decimal)r)", span="430-430"];
m0_269 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(2.2m, (decimal)r)", span="433-433"];
m0_270 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r += 2", span="434-434"];
m0_271 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(4.2m, (decimal)r)", span="435-435"];
m0_273 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(2.2m, (decimal)r)", span="438-438"];
m0_274 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r += 2", span="439-439"];
m0_275 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(4.2m, (decimal)r)", span="440-440"];
m0_277 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(null, r.Value)", span="443-443"];
m0_278 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r += 2", span="444-444"];
m0_279 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(null, r.Value)", span="445-445"];
m0_281 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(null, r.Value)", span="449-449"];
m0_282 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r += 2", span="450-450"];
m0_283 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(null, r.Value)", span="451-451"];
m0_285 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(101, (int)r)", span="454-454"];
m0_286 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r += 2", span="455-455"];
m0_287 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(103, (int)r)", span="456-456"];
m0_289 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(101m, (decimal)r)", span="459-459"];
m0_290 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r += 2", span="460-460"];
m0_291 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(103m, (decimal)r)", span="461-461"];
m0_293 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(0, (int)r)", span="467-467"];
m0_294 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r -= 2", span="468-468"];
m0_295 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(-2, (int)r)", span="469-469"];
m0_297 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(-0.1d, (double)r, 0.00001)", span="472-472"];
m0_298 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r -= 2", span="473-473"];
m0_299 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(-2.1d, (double)r)", span="474-474"];
m0_301 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(-0.1m, (decimal)r)", span="477-477"];
m0_302 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r -= 2", span="478-478"];
m0_303 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(-2.1m, (decimal)r)", span="479-479"];
m0_305 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(null, r.Value)", span="482-482"];
m0_306 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r -= 2", span="483-483"];
m0_307 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(null, r.Value)", span="484-484"];
m0_309 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(0.1d, (double)r, 0.00001)", span="487-487"];
m0_310 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r -= 2", span="488-488"];
m0_311 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(-1.9d, (double)r)", span="489-489"];
m0_313 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(0d, (double)r)", span="492-492"];
m0_314 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r -= 2", span="493-493"];
m0_315 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(-2d, (double)r)", span="494-494"];
m0_317 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(0m, (decimal)r)", span="497-497"];
m0_318 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r -= 2", span="498-498"];
m0_319 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(-2m, (decimal)r)", span="499-499"];
m0_321 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(null, r.Value)", span="502-502"];
m0_322 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r -= 2", span="503-503"];
m0_323 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(null, r.Value)", span="504-504"];
m0_325 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(0.1m, (decimal)r)", span="507-507"];
m0_326 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r -= 2", span="508-508"];
m0_327 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(-1.9m, (decimal)r)", span="509-509"];
m0_329 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(0m, (decimal)r)", span="512-512"];
m0_330 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r -= 2", span="513-513"];
m0_331 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(-2m, (decimal)r)", span="514-514"];
m0_333 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(0m, (decimal)r)", span="517-517"];
m0_334 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r -= 2", span="518-518"];
m0_335 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(-2m, (decimal)r)", span="519-519"];
m0_337 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(null, r.Value)", span="522-522"];
m0_338 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r -= 2", span="523-523"];
m0_339 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(null, r.Value)", span="524-524"];
m0_341 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(null, r.Value)", span="528-528"];
m0_342 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r -= 2", span="529-529"];
m0_343 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(null, r.Value)", span="530-530"];
m0_345 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(99m, (decimal)r)", span="533-533"];
m0_346 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r -= 2", span="534-534"];
m0_347 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(97m, (decimal)r)", span="535-535"];
m0_349 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(1, (int)r)", span="541-541"];
m0_350 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r *= 2", span="542-542"];
m0_351 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(2, (int)r)", span="543-543"];
m0_353 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(1.1d, (double)r)", span="546-546"];
m0_354 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r *= 2", span="547-547"];
m0_355 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(2.2d, (double)r)", span="548-548"];
m0_357 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(1.1m, (decimal)r)", span="551-551"];
m0_358 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r *= 2", span="552-552"];
m0_359 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(2.2m, (decimal)r)", span="553-553"];
m0_361 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(null, r.Value)", span="556-556"];
m0_362 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r *= 2", span="557-557"];
m0_363 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(null, r.Value)", span="558-558"];
m0_365 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(1.1d, (double)r)", span="561-561"];
m0_366 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r *= 2", span="562-562"];
m0_367 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(2.2d, (double)r)", span="563-563"];
m0_369 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(1.21d, (double)r, 0.00001)", span="566-566"];
m0_370 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r *= 2", span="567-567"];
m0_371 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(2.42d, (double)r, 0.00001)", span="568-568"];
m0_373 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(1.21m, (decimal)r)", span="571-571"];
m0_374 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r *= 2", span="572-572"];
m0_375 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(2.42m, (decimal)r)", span="573-573"];
m0_377 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(null, r.Value)", span="576-576"];
m0_378 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r *= 2", span="577-577"];
m0_379 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(null, r.Value)", span="578-578"];
m0_381 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(1.1m, (decimal)r)", span="581-581"];
m0_382 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r *= 2", span="582-582"];
m0_383 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(2.2m, (decimal)r)", span="583-583"];
m0_385 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(1.21m, (decimal)r)", span="586-586"];
m0_386 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r *= 2", span="587-587"];
m0_387 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(2.42m, (decimal)r)", span="588-588"];
m0_389 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(1.21m, (decimal)r)", span="591-591"];
m0_390 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r *= 2", span="592-592"];
m0_391 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(2.42m, (decimal)r)", span="593-593"];
m0_393 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(null, r.Value)", span="596-596"];
m0_394 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r *= 2", span="597-597"];
m0_395 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(null, r.Value)", span="598-598"];
m0_397 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(100m, (decimal)r)", span="602-602"];
m0_398 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r *= 2", span="603-603"];
m0_399 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(200m, (decimal)r)", span="604-604"];
m0_401 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(null, r.Value)", span="607-607"];
m0_402 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r *= 2", span="608-608"];
m0_403 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(null, r.Value)", span="609-609"];
m0_405 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(1, (int)r)", span="615-615"];
m0_406 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r /= 2", span="616-616"];
m0_407 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(0, (int)r)", span="617-617"];
m0_409 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(0.9090909090909091d, (double)r)", span="620-620"];
m0_410 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r /= 2", span="621-621"];
m0_411 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(0.454545454545455d, (double)r, 0.00001)", span="622-622"];
m0_413 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(0.909090909090909m, (decimal)r)", span="625-625"];
m0_414 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r /= 2", span="626-626"];
m0_415 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(0.454545454545454m, (decimal)r)", span="627-627"];
m0_417 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(null, r.Value)", span="630-630"];
m0_418 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r /= 2", span="631-631"];
m0_419 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(null, r.Value)", span="632-632"];
m0_421 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(1.1d, (double)r)", span="635-635"];
m0_422 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r /= 2", span="636-636"];
m0_423 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(0.55d, (double)r)", span="637-637"];
m0_425 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(1d, (double)r, 0.00001)", span="640-640"];
m0_426 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r /= 2", span="641-641"];
m0_427 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(0.5d, (double)r, 0.00001)", span="642-642"];
m0_429 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(1m, (decimal)r)", span="645-645"];
m0_430 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r /= 2", span="646-646"];
m0_431 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(0.5m, (decimal)r)", span="647-647"];
m0_433 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(null, r.Value)", span="650-650"];
m0_434 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r /= 2", span="651-651"];
m0_435 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(null, r.Value)", span="652-652"];
m0_437 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(1.1m, (decimal)r)", span="655-655"];
m0_438 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r /= 2", span="656-656"];
m0_439 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(0.55m, (decimal)r)", span="657-657"];
m0_441 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(1m, (decimal)r)", span="660-660"];
m0_442 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r /= 2", span="661-661"];
m0_443 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(0.5m, (decimal)r)", span="662-662"];
m0_445 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(1m, (decimal)r)", span="665-665"];
m0_446 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r /= 2", span="666-666"];
m0_447 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(0.5m, (decimal)r)", span="667-667"];
m0_449 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(null, r.Value)", span="670-670"];
m0_450 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r /= 2", span="671-671"];
m0_451 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(null, r.Value)", span="672-672"];
m0_453 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(100m, (decimal)r)", span="676-676"];
m0_454 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r /= 2", span="677-677"];
m0_455 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(50m, (decimal)r)", span="678-678"];
m0_457 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(null, r.Value)", span="681-681"];
m0_458 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="r /= 2", span="682-682"];
m0_459 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Assert.AreEqual(null, r.Value)", span="683-683"];
m0_460 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.DynamicTests.JValueAddition()", span="354-354"];
m0_74 [cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154"];
m0_203 [cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="104-104"];
m0_206 [cluster="Newtonsoft.Json.Linq.JValue.JValue(double)", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(double)", span="107-107"];
m0_0 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.AccessPropertyValue()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.DynamicTests.AccessPropertyValue()", span="52-52"];
m0_1 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.AccessPropertyValue()", file="DynamicTests.cs", label="string rawJson = @''{\r\n  ''''task'''': {\r\n    ''''dueDate'''': ''''2012-12-03T00:00:00''''\r\n  }\r\n}''", span="54-58"];
m0_2 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.AccessPropertyValue()", file="DynamicTests.cs", label="dynamic dyn = JsonConvert.DeserializeObject<dynamic>(rawJson)", span="60-60"];
m0_3 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.AccessPropertyValue()", file="DynamicTests.cs", label="DateTime dueDate = dyn.task.dueDate.Value", span="61-61"];
m0_4 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.AccessPropertyValue()", file="DynamicTests.cs", label="Assert.AreEqual(new DateTime(2012, 12, 3, 0, 0, 0, DateTimeKind.Unspecified), dueDate)", span="63-63"];
m0_5 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.AccessPropertyValue()", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.DynamicTests.AccessPropertyValue()", span="52-52"];
m0_27 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DeserializeLargeDynamic()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.DynamicTests.DeserializeLargeDynamic()", span="95-95"];
m0_28 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DeserializeLargeDynamic()", file="DynamicTests.cs", label="dynamic d", span="97-97"];
m0_29 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DeserializeLargeDynamic()", color=green, community=0, file="DynamicTests.cs", label="var jsonFile = System.IO.File.OpenText(ResolvePath(''large.json''))", prediction=2, span="99-99"];
m0_30 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DeserializeLargeDynamic()", file="DynamicTests.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(jsonFile)", span="100-100"];
m0_31 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DeserializeLargeDynamic()", file="DynamicTests.cs", label="JsonSerializer serializer = new JsonSerializer()", span="102-102"];
m0_32 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DeserializeLargeDynamic()", file="DynamicTests.cs", label="d = serializer.Deserialize(jsonTextReader)", span="103-103"];
m0_33 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DeserializeLargeDynamic()", file="DynamicTests.cs", label="IDictionary<string, int> counts = new Dictionary<string, int>()", span="106-106"];
m0_37 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DeserializeLargeDynamic()", file="DynamicTests.cs", label=d, span="112-112"];
m0_34 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DeserializeLargeDynamic()", file="DynamicTests.cs", label="Stopwatch sw = new Stopwatch()", span="108-108"];
m0_40 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DeserializeLargeDynamic()", file="DynamicTests.cs", label="UpdateValueCount(counts, friend.id)", span="121-121"];
m0_41 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DeserializeLargeDynamic()", file="DynamicTests.cs", label="UpdateValueCount(counts, ((string)friend.name).Split(' ')[0])", span="122-122"];
m0_35 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DeserializeLargeDynamic()", file="DynamicTests.cs", label="sw.Start()", span="109-109"];
m0_43 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DeserializeLargeDynamic()", file="DynamicTests.cs", label="Console.WriteLine(''Time (secs): '' + sw.Elapsed.TotalSeconds)", span="128-128"];
m0_36 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DeserializeLargeDynamic()", file="DynamicTests.cs", label="int count = 0", span="111-111"];
m0_38 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DeserializeLargeDynamic()", file="DynamicTests.cs", label="count > 10", span="114-114"];
m0_42 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DeserializeLargeDynamic()", file="DynamicTests.cs", label="count++", span="125-125"];
m0_39 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DeserializeLargeDynamic()", file="DynamicTests.cs", label="o.friends", span="119-119"];
m0_44 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.DeserializeLargeDynamic()", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.DynamicTests.DeserializeLargeDynamic()", span="95-95"];
m0_211 [cluster="System.Text.Encoding.GetBytes(string)", file="DynamicTests.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m0_595 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="329-329"];
m0_602 [cluster="System.Guid.NewGuid()", file="DynamicTests.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m0_216 [cluster="Unk.Parse", file="DynamicTests.cs", label="Entry Unk.Parse", span=""];
m0_45 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.ResolvePath(string)", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.ResolvePath(string)", span="212-212"];
m0_210 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(object)", span="190-190"];
m0_51 [cluster="System.Diagnostics.Stopwatch.Start()", file="DynamicTests.cs", label="Entry System.Diagnostics.Stopwatch.Start()", span="0-0"];
m0_219 [cluster="System.TimeSpan.FromHours(double)", file="DynamicTests.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m0_461 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueToString()", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.DynamicTests.JValueToString()", span="689-689"];
m0_462 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueToString()", file="DynamicTests.cs", label="JObject o = new JObject(\r\n                new JProperty(''Null'', JValue.CreateNull()),\r\n                new JProperty(''Integer'', new JValue(1)),\r\n                new JProperty(''Float'', new JValue(1.1)),\r\n                new JProperty(''DateTime'', new JValue(new DateTime(2000, 12, 29, 23, 51, 10, DateTimeKind.Utc))),\r\n                new JProperty(''Boolean'', new JValue(true)),\r\n                new JProperty(''String'', new JValue(''A string lol!'')),\r\n                new JProperty(''Bytes'', new JValue(Encoding.UTF8.GetBytes(''A string lol!''))),\r\n                new JProperty(''Uri'', new Uri(''http://json.codeplex.com/'')),\r\n                new JProperty(''Guid'', new Guid(''EA27FE1D-0D80-44F2-BF34-4654156FA7AF'')),\r\n                new JProperty(''TimeSpan'', TimeSpan.FromDays(1))\r\n#if !(NET20 || NET35 || PORTABLE) || NETSTANDARD1_3\r\n                , new JProperty(''BigInteger'', new BigInteger(100))\r\n#endif\r\n                )", span="691-705"];
m0_463 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueToString()", file="DynamicTests.cs", label="dynamic d = o", span="707-707"];
m0_464 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueToString()", file="DynamicTests.cs", label="Assert.AreEqual('''', d.Null.ToString())", span="709-709"];
m0_465 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueToString()", file="DynamicTests.cs", label="Assert.AreEqual(''1'', d.Integer.ToString())", span="710-710"];
m0_466 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueToString()", file="DynamicTests.cs", label="Assert.AreEqual(''1.1'', d.Float.ToString(CultureInfo.InvariantCulture))", span="711-711"];
m0_467 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueToString()", file="DynamicTests.cs", label="Assert.AreEqual(''12/29/2000 23:51:10'', d.DateTime.ToString(null, CultureInfo.InvariantCulture))", span="712-712"];
m0_468 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueToString()", file="DynamicTests.cs", label="Assert.AreEqual(''True'', d.Boolean.ToString())", span="713-713"];
m0_469 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueToString()", file="DynamicTests.cs", label="Assert.AreEqual(''A string lol!'', d.String.ToString())", span="714-714"];
m0_470 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueToString()", file="DynamicTests.cs", label="Assert.AreEqual(''System.Byte[]'', d.Bytes.ToString())", span="715-715"];
m0_471 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueToString()", file="DynamicTests.cs", label="Assert.AreEqual(''http://json.codeplex.com/'', d.Uri.ToString())", span="716-716"];
m0_472 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueToString()", file="DynamicTests.cs", label="Assert.AreEqual(''ea27fe1d-0d80-44f2-bf34-4654156fa7af'', d.Guid.ToString())", span="717-717"];
m0_473 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueToString()", file="DynamicTests.cs", label="Assert.AreEqual(''1.00:00:00'', d.TimeSpan.ToString())", span="718-718"];
m0_474 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueToString()", file="DynamicTests.cs", label="Assert.AreEqual(''100'', d.BigInteger.ToString())", span="720-720"];
m0_475 [cluster="Newtonsoft.Json.Tests.Linq.DynamicTests.JValueToString()", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.DynamicTests.JValueToString()", span="689-689"];
m0_127 [cluster="Unk.TryGetValue", file="DynamicTests.cs", label="Entry Unk.TryGetValue", span=""];
m0_16 [cluster="Unk.Pass", file="DynamicTests.cs", label="Entry Unk.Pass", span=""];
m0_77 [cluster="Unk.IsNull", file="DynamicTests.cs", label="Entry Unk.IsNull", span=""];
m0_76 [cluster="Unk.IsTrue", file="DynamicTests.cs", label="Entry Unk.IsTrue", span=""];
m0_637 [cluster="Newtonsoft.Json.Tests.Linq.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.Linq.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", span="973-973"];
m0_638 [cluster="Newtonsoft.Json.Tests.Linq.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", file="DynamicTests.cs", label="_values[binder.Name] = value", span="975-975"];
m0_639 [cluster="Newtonsoft.Json.Tests.Linq.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", file="DynamicTests.cs", label="return true;", span="976-976"];
m0_640 [cluster="Newtonsoft.Json.Tests.Linq.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", file="DynamicTests.cs", label="Exit Newtonsoft.Json.Tests.Linq.DynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder, object)", span="973-973"];
m0_25 [cluster="Unk.ToString", file="DynamicTests.cs", label="Entry Unk.ToString", span=""];
m0_209 [cluster="Newtonsoft.Json.Linq.JValue.JValue(bool)", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(bool)", span="145-145"];
m0_111 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="358-358"];
m0_581 [cluster="Newtonsoft.Json.Linq.JArray.JArray(params object[])", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray(params object[])", span="82-82"];
m0_490 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, params object[])", file="DynamicTests.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, params object[])", span="306-306"];
m0_50 [cluster="System.Diagnostics.Stopwatch.Stopwatch()", file="DynamicTests.cs", label="Entry System.Diagnostics.Stopwatch.Stopwatch()", span="0-0"];
m0_7 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="DynamicTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m0_641 [file="DynamicTests.cs", label="Newtonsoft.Json.Tests.Linq.DynamicTests", span=""];
m0_642 [file="DynamicTests.cs", label=json, span=""];
m0_643 [file="DynamicTests.cs", label="Newtonsoft.Json.Tests.Linq.DynamicDictionary", span=""];
m1_846 [cluster="System.Text.RegularExpressions.Regex.ToString()", file="JsonSerializerTest.cs", label="Entry System.Text.RegularExpressions.Regex.ToString()", span="0-0"];
m1_1989 [cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", span="32-32"];
m1_4076 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", span="9491-9491"];
m1_4077 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="9493-9493"];
m1_4078 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", span="9491-9491"];
m1_3972 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", span="9261-9261"];
m1_3973 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]''", span="9263-9278"];
m1_3974 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="IList<PersonReference> people = JsonConvert.DeserializeObject<IList<PersonReference>>(json, new JsonSerializerSettings\r\n            {\r\n#pragma warning disable 618\r\n                ReferenceResolver = new IdReferenceResolver(),\r\n#pragma warning restore 618\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="9280-9287"];
m1_3975 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, people.Count)", span="9289-9289"];
m1_3976 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="PersonReference john = people[0]", span="9291-9291"];
m1_3977 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="PersonReference jane = people[1]", span="9292-9292"];
m1_3978 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="Assert.AreEqual(john, jane.Spouse)", span="9294-9294"];
m1_3979 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="Assert.AreEqual(jane, john.Spouse)", span="9295-9295"];
m1_3980 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", span="9261-9261"];
m1_1336 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", span="29-29"];
m1_3625 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="8357-8357"];
m1_3626 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="IList<Uri> uris = JsonConvert.DeserializeObject<IList<Uri>>(@''[''''http://localhost/path?query#hash'''']'')", span="8359-8359"];
m1_3627 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, uris.Count)", span="8360-8360"];
m1_3628 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Uri(''http://localhost/path?query#hash''), uris[0])", span="8361-8361"];
m1_3629 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Uri uri = JsonConvert.DeserializeObject<Uri>(@''''''http://localhost/path?query#hash'''''')", span="8363-8363"];
m1_3630 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(uri)", span="8364-8364"];
m1_3631 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Uri i1 = new Uri(''http://localhost/path?query#hash'', UriKind.RelativeOrAbsolute)", span="8366-8366"];
m1_3632 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Uri i2 = new Uri(''http://localhost/path?query#hash'')", span="8367-8367"];
m1_3633 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Assert.AreEqual(i1, i2)", span="8368-8368"];
m1_3634 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="uri = JsonConvert.DeserializeObject<Uri>(@''''''/path?query#hash'''''')", span="8370-8370"];
m1_3635 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(uri)", span="8371-8371"];
m1_3636 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Uri(''/path?query#hash'', UriKind.RelativeOrAbsolute), uri)", span="8372-8372"];
m1_3637 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="8357-8357"];
m1_2100 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="4631-4631"];
m1_2101 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs", label="JRawValueTestObject deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:3}'')", span="4633-4633"];
m1_2102 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''3'', deserialized.Value.ToString())", span="4634-4634"];
m1_2103 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs", label="deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:'3'}'')", span="4636-4636"];
m1_2104 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''''''3'''''', deserialized.Value.ToString())", span="4637-4637"];
m1_2105 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="4631-4631"];
m1_301 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", span="723-723"];
m1_302 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", file="JsonSerializerTest.cs", label="Name = name", span="725-725"];
m1_303 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", span="723-723"];
m1_2899 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="6751-6751"];
m1_2900 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs", label="_privateString = privateString", span="6753-6753"];
m1_2901 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs", label="_readonlyString = readonlyString", span="6754-6754"];
m1_2902 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs", label="_internalString = internalString", span="6755-6755"];
m1_2903 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="6751-6751"];
m1_3416 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="7850-7850"];
m1_3417 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="IList<string> errors = new List<string>()", span="7852-7852"];
m1_3418 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="7854-7858"];
m1_3421 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, errors.Count)", span="7871-7871"];
m1_3422 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Cannot write a null value for property 'NonAttributeProperty'. Property requires a value. Path ''.'', errors[0])", span="7872-7872"];
m1_3423 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Cannot write a null value for property 'UnsetProperty'. Property requires a value. Path ''.'', errors[1])", span="7873-7873"];
m1_3424 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Cannot write a null value for property 'AlwaysProperty'. Property requires a value. Path ''.'', errors[2])", span="7874-7874"];
m1_3419 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new RequiredObject(), new JsonSerializerSettings\r\n            {\r\n                Error = error,\r\n                Formatting = Formatting.Indented\r\n            })", span="7860-7864"];
m1_3420 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''DefaultProperty'''': null,\r\n  ''''AllowNullProperty'''': null\r\n}'', json)", span="7866-7869"];
m1_3425 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="7850-7850"];
m1_1705 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="3665-3665"];
m1_1706 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="string json = @''{\r\n    ''''request'''': ''''ux.settings.update'''',\r\n    ''''sid'''': ''''14c561bd-32a8-457e-b4e5-4bba0832897f'''',\r\n    ''''uid'''': ''''30c39065-0f31-de11-9442-001e3786a8ec'''',\r\n    ''''fidOrder'''': [\r\n        ''''id'''',\r\n        ''''andytest_name'''',\r\n        ''''andytest_age'''',\r\n        ''''andytest_address'''',\r\n        ''''andytest_phone'''',\r\n        ''''date'''',\r\n        ''''title'''',\r\n        ''''titleId''''\r\n    ],\r\n    ''''entityName'''': ''''Andy Test'''',\r\n    ''''setting'''': ''''entity.field.order''''\r\n}''", span="3667-3683"];
m1_1707 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="RequestOnly r = JsonConvert.DeserializeObject<RequestOnly>(json)", span="3685-3685"];
m1_1709 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="NonRequest n = JsonConvert.DeserializeObject<NonRequest>(json)", span="3688-3688"];
m1_1708 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ux.settings.update'', r.Request)", span="3686-3686"];
m1_1710 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''14c561bd-32a8-457e-b4e5-4bba0832897f''), n.Sid)", span="3689-3689"];
m1_1711 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''30c39065-0f31-de11-9442-001e3786a8ec''), n.Uid)", span="3690-3690"];
m1_1712 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(8, n.FidOrder.Count)", span="3691-3691"];
m1_1713 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''id'', n.FidOrder[0])", span="3692-3692"];
m1_1714 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''titleId'', n.FidOrder[n.FidOrder.Count - 1])", span="3693-3693"];
m1_1715 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="3665-3665"];
m1_928 [cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0"];
m1_2802 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", span="6426-6426"];
m1_2557 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="5850-5850"];
m1_2558 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="StructWithAttribute testStruct = new StructWithAttribute\r\n            {\r\n                MyInt = int.MaxValue\r\n            }", span="5852-5855"];
m1_2559 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(testStruct, Formatting.Indented)", span="5857-5857"];
m1_2560 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''MyInt'''': 2147483647\r\n}'', json)", span="5859-5861"];
m1_2561 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="StructWithAttribute newStruct = JsonConvert.DeserializeObject<StructWithAttribute>(json)", span="5863-5863"];
m1_2562 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, newStruct.MyInt)", span="5865-5865"];
m1_2563 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="5850-5850"];
m1_4028 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="9410-9410"];
m1_4029 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="conversionType == typeof(object)", span="9412-9412"];
m1_4031 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="conversionType == typeof(int)", span="9416-9416"];
m1_4033 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="conversionType == typeof(long)", span="9420-9420"];
m1_4035 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="conversionType == typeof(string)", span="9424-9424"];
m1_4030 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="return this;", span="9414-9414"];
m1_4032 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="return (int)Value;", span="9418-9418"];
m1_4034 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="return (long)Value;", span="9422-9422"];
m1_4036 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="return Value.ToString(CultureInfo.InvariantCulture);", span="9426-9426"];
m1_4037 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="9428-9428"];
m1_4038 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="9410-9410"];
m1_1635 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass.ConstructorAndDefaultValueAttributeTestClass(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass.ConstructorAndDefaultValueAttributeTestClass(string)", span="3509-3509"];
m1_1636 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass.ConstructorAndDefaultValueAttributeTestClass(string)", file="JsonSerializerTest.cs", label="TestProperty1 = testProperty1", span="3511-3511"];
m1_1637 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass.ConstructorAndDefaultValueAttributeTestClass(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass.ConstructorAndDefaultValueAttributeTestClass(string)", span="3509-3509"];
m1_1737 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="3774-3774"];
m1_1738 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs", label="return ''_name: '' + _name + '', _age: '' + Age + '', Rank: '' + Rank + '', JsonTitle: '' + Title;", span="3776-3776"];
m1_1739 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="3774-3774"];
m1_3831 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="8884-8884"];
m1_3832 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs", label="IDictionary<string, object> dates = new Dictionary<string, object>\r\n            {\r\n                { ''DateTime-Unspecified'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Unspecified) },\r\n                { ''DateTime-Utc'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc) },\r\n                { ''DateTime-Local'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Local) },\r\n                { ''DateTimeOffset-Zero'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero) },\r\n                { ''DateTimeOffset-Plus1'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1)) },\r\n                { ''DateTimeOffset-Plus15'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1.5)) }\r\n            }", span="8886-8894"];
m1_3833 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs", label="string expected = JsonConvert.SerializeObject(dates, Formatting.Indented)", span="8896-8896"];
m1_3834 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs", label="string actual = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = JsonSerializerSettings.DefaultDateFormatString\r\n            })", span="8898-8901"];
m1_3835 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expected, actual)", span="8903-8903"];
m1_3836 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="8884-8884"];
m1_3089 [cluster="System.Convert.FromBase64String(string)", file="JsonSerializerTest.cs", label="Entry System.Convert.FromBase64String(string)", span="0-0"];
m1_1025 [cluster="Newtonsoft.Json.Tests.TestObjects.Store.Store()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Store.Store()", span="49-49"];
m1_3969 [cluster="System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs", label="Entry System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", span="0-0"];
m1_66 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", span="275-275"];
m1_67 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs", label="var mySubclass = MyFactory.InstantiateSubclass()", span="277-277"];
m1_68 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs", label="var myMainClass = MyFactory.InstantiateManiClass()", span="278-278"];
m1_69 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs", label="var strJsonSubclass = JsonConvert.SerializeObject(mySubclass, Formatting.Indented)", span="281-281"];
m1_71 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs", label="var strJsonMainClass = JsonConvert.SerializeObject(myMainClass, Formatting.Indented)", span="291-291"];
m1_70 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''ID'''': 123,\r\n  ''''Name'''': ''''ABC'''',\r\n  ''''P1'''': true,\r\n  ''''P2'''': 44\r\n}'', strJsonSubclass)", span="283-288"];
m1_72 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''ID'''': 567,\r\n  ''''Name'''': ''''XYZ'''',\r\n  ''''Subclass'''': {\r\n    ''''ID'''': 123,\r\n    ''''Name'''': ''''ABC'''',\r\n    ''''P1'''': true,\r\n    ''''P2'''': 44\r\n  }\r\n}'', strJsonMainClass)", span="293-302"];
m1_73 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", span="275-275"];
m1_1080 [cluster="Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", span="27-27"];
m1_3140 [cluster="Newtonsoft.Json.Tests.TestObjects.Widget.Widget()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Widget.Widget()", span="27-27"];
m1_809 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", span="1755-1755"];
m1_810 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="var p1 = new PersonReference\r\n            {\r\n                Name = ''John Smith''\r\n            }", span="1757-1760"];
m1_811 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="var p2 = new PersonReference\r\n            {\r\n                Name = ''Mary Sue'',\r\n            }", span="1761-1764"];
m1_812 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="p1.Spouse = p2", span="1766-1766"];
m1_813 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="p2.Spouse = p1", span="1767-1767"];
m1_814 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="var obj = new PreserveReferencesCallbackTestObject(''string!'', 42, p1, p2, p1)", span="1769-1769"];
m1_815 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="obj._parent = obj", span="1770-1770"];
m1_817 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(obj, settings)", span="1778-1778"];
m1_820 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(obj._stringValue, obj2._stringValue)", span="1808-1808"];
m1_821 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(obj._intValue, obj2._intValue)", span="1809-1809"];
m1_822 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(obj._person1.Name, obj2._person1.Name)", span="1810-1810"];
m1_823 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(obj._person2.Name, obj2._person2.Name)", span="1811-1811"];
m1_824 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(obj._person3.Name, obj2._person3.Name)", span="1812-1812"];
m1_816 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="var settings = new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                Formatting = Formatting.Indented\r\n            }", span="1772-1776"];
m1_818 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(json, @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''stringValue'''': ''''string!'''',\r\n  ''''intValue'''': 42,\r\n  ''''person1'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''3'''',\r\n      ''''Name'''': ''''Mary Sue'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''2''''\r\n      }\r\n    }\r\n  },\r\n  ''''person2'''': {\r\n    ''''$ref'''': ''''3''''\r\n  },\r\n  ''''person3'''': {\r\n    ''''$ref'''': ''''2''''\r\n  },\r\n  ''''parent'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}'')", span="1780-1804"];
m1_819 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="PreserveReferencesCallbackTestObject obj2 = JsonConvert.DeserializeObject<PreserveReferencesCallbackTestObject>(json)", span="1806-1806"];
m1_825 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(obj2._person1, obj2._person3)", span="1813-1813"];
m1_826 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(obj2._person1.Spouse, obj2._person2)", span="1814-1814"];
m1_827 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(obj2._person2.Spouse, obj2._person1)", span="1815-1815"];
m1_828 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(obj2._parent, obj2)", span="1816-1816"];
m1_829 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", span="1755-1755"];
m1_1328 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="2888-2888"];
m1_1329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Guid guid = new Guid(''BED7F4EA-1A96-11d2-8F08-00A0C9A6186D'')", span="2890-2890"];
m1_1330 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new ClassWithGuid { GuidField = guid })", span="2892-2892"];
m1_1333 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(guid, c.GuidField)", span="2896-2896"];
m1_1331 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''GuidField'''':''''bed7f4ea-1a96-11d2-8f08-00a0c9a6186d''''}'', json)", span="2893-2893"];
m1_1332 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="ClassWithGuid c = JsonConvert.DeserializeObject<ClassWithGuid>(json)", span="2895-2895"];
m1_1334 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="2888-2888"];
m1_3149 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="7328-7328"];
m1_3150 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}'';\r\n\r\n                JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n            }, ''Unexpected character encountered while parsing value: t. Path 'PreProperty', line 2, position 18.'')", span="7330-7338"];
m1_3151 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="7328-7328"];
m1_3227 [cluster="Newtonsoft.Json.Tests.TestObjects.WidgetId1.WidgetId1()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.WidgetId1.WidgetId1()", span="28-28"];
m1_3949 [cluster="string.Trim()", file="JsonSerializerTest.cs", label="Entry string.Trim()", span="0-0"];
m1_924 [cluster="System.IO.MemoryStream.MemoryStream()", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m1_3993 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", span="9336-9336"];
m1_3994 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var consoleWriter = new ConsoleWriter()", span="9338-9338"];
m1_3995 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var options = new JsonSerializerSettings\r\n            {\r\n                Converters = new JsonConverterCollection { new TypeConverterJsonConverter() },\r\n                //TypeNameHandling = TypeNameHandling.All\r\n            }", span="9341-9345"];
m1_3996 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var text1 = JsonConvert.SerializeObject(consoleWriter, Formatting.Indented, options)", span="9351-9351"];
m1_4001 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="dict2.Add(consoleWriter, ''Console'')", span="9362-9362"];
m1_4007 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="dict3.Add(''Console'', consoleWriter)", span="9377-9377"];
m1_3998 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var restoredWriter = JsonConvert.DeserializeObject<IMyInterface>(text1, options)", span="9354-9354"];
m1_4002 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var text2 = JsonConvert.SerializeObject(dict2, Formatting.Indented, options)", span="9364-9364"];
m1_4004 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var restoredObject = JsonConvert.DeserializeObject<Dictionary<IMyInterface, string>>(text2, options)", span="9369-9369"];
m1_4008 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var text3 = JsonConvert.SerializeObject(dict3, Formatting.Indented, options)", span="9379-9379"];
m1_4010 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var restoredDict2 = JsonConvert.DeserializeObject<Dictionary<string, IMyInterface>>(text3, options)", span="9384-9384"];
m1_3997 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''''''Console Writer'''''', text1)", span="9352-9352"];
m1_3999 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ConsoleWriter'', restoredWriter.PrintTest())", span="9355-9355"];
m1_4000 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var dict2 = new Dictionary<IMyInterface, string>()", span="9361-9361"];
m1_4003 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Console Writer'''': ''''Console''''\r\n}'', text2)", span="9365-9367"];
m1_4005 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ConsoleWriter'', restoredObject.First().Key.PrintTest())", span="9370-9370"];
m1_4006 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var dict3 = new Dictionary<string, IMyInterface>()", span="9376-9376"];
m1_4009 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Console'''': ''''Console Writer''''\r\n}'', text3)", span="9380-9382"];
m1_4011 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ConsoleWriter'', restoredDict2.First().Value.PrintTest())", span="9385-9385"];
m1_4012 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", span="9336-9336"];
m1_2441 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="5599-5599"];
m1_2442 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                //Additional text found in JSON string after finishing deserializing object.\r\n                //Test 1\r\n                var reference = new Dictionary<string, object>();\r\n                reference.Add(''$ref'', 1);\r\n                reference.Add(''$id'', 1);\r\n\r\n                var child = new Dictionary<string, object>();\r\n                child.Add(''_id'', 2);\r\n                child.Add(''Name'', ''Isabell'');\r\n                child.Add(''Father'', reference);\r\n\r\n                var json = JsonConvert.SerializeObject(child, Formatting.Indented);\r\n                JsonConvert.DeserializeObject<Dictionary<string, object>>(json);\r\n            }, ''JSON reference $ref property must have a string or null value. Path 'Father.$ref', line 5, position 13.'')", span="5601-5616"];
m1_2443 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="5599-5599"];
m1_95 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", span="352-352"];
m1_96 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", file="JsonSerializerTest.cs", label="DateTimeOffset d = JsonConvert.DeserializeObject<DateTimeOffset>(@''''''/Date(1418924498000+0800)/'''''')", span="354-354"];
m1_97 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", file="JsonSerializerTest.cs", label="long initialTicks = DateTimeUtils.ConvertDateTimeToJavaScriptTicks(d.DateTime, d.Offset)", span="355-355"];
m1_98 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1418924498000, initialTicks)", span="357-357"];
m1_99 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(8, d.Offset.Hours)", span="358-358"];
m1_100 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", span="352-352"];
m1_4323 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="10086-10086"];
m1_106 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="366-366"];
m1_107 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IList<bool>>(@''[null]'')", span="366-366"];
m1_108 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="366-366"];
m1_112 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="374-374"];
m1_113 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IList<bool>>(@''['2000-12-20T10:55:55Z']'')", span="374-374"];
m1_114 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="374-374"];
m1_118 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="382-382"];
m1_119 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IList<bool>>(@''['pie']'')", span="382-382"];
m1_120 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="382-382"];
m1_124 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="390-390"];
m1_125 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IList<bool>>(@''['']'')", span="390-390"];
m1_126 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="390-390"];
m1_182 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="503-503"];
m1_183 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Binding>(''{requiredProperty:''}'')", span="503-503"];
m1_184 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="503-503"];
m1_188 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="509-509"];
m1_189 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Binding_DisallowNull>(''{requiredProperty:''}'')", span="509-509"];
m1_190 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="509-509"];
m1_199 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="522-522"];
m1_200 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<FooRequired>(''{Bars:''}'')", span="522-522"];
m1_201 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="522-522"];
m1_210 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="558-558"];
m1_211 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(new Binding_DisallowNull())", span="558-558"];
m1_212 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="558-558"];
m1_223 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="580-580"];
m1_224 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(new DictionaryWithNoNull())", span="580-580"];
m1_225 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="580-580"];
m1_251 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="633-633"];
m1_254 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="637-637"];
m1_257 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="641-641"];
m1_260 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="645-645"];
m1_263 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="649-649"];
m1_266 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="653-653"];
m1_269 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="657-657"];
m1_252 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IList<object>>(''[1,'')", span="633-633"];
m1_253 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="633-633"];
m1_255 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IList<int>>(''[1,'')", span="637-637"];
m1_256 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="637-637"];
m1_258 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IList<int>>(''[1'')", span="641-641"];
m1_259 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="641-641"];
m1_261 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1,'')", span="645-645"];
m1_262 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="645-645"];
m1_264 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1'')", span="649-649"];
m1_265 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="649-649"];
m1_267 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1,'')", span="653-653"];
m1_268 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="653-653"];
m1_270 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1'')", span="657-657"];
m1_271 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="657-657"];
m1_293 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(c1)", span="696-696"];
m1_292 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="696-696"];
m1_295 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="709-709"];
m1_298 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="713-713"];
m1_294 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="696-696"];
m1_296 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{}'')", span="709-709"];
m1_297 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="709-709"];
m1_299 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{''''Name'''':null}'')", span="713-713"];
m1_300 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="713-713"];
m1_315 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(c1)", span="738-738"];
m1_314 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="738-738"];
m1_317 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="748-748"];
m1_316 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="738-738"];
m1_318 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<RequiredPropertyConstructorTestClass>(@''{}'')", span="748-748"];
m1_319 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="748-748"];
m1_406 [cluster="lambda expression", file="JsonSerializerTest.cs", label="a.ErrorContext.Handled = true", span="1071-1071"];
m1_405 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1071-1071"];
m1_407 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1071-1071"];
m1_501 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<List<Version>>(json)", span="1275-1275"];
m1_500 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1275-1275"];
m1_502 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1275-1275"];
m1_612 [cluster="lambda expression", file="JsonSerializerTest.cs", label="var serializationBinder = serializer.Binder", span="1346-1346"];
m1_611 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1343-1349"];
m1_613 [cluster="lambda expression", file="JsonSerializerTest.cs", label="serializationBinder.ToString()", span="1348-1348"];
m1_614 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1343-1349"];
m1_687 [cluster="lambda expression", file="JsonSerializerTest.cs", label=referenceResolver, span="1533-1533"];
m1_686 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1533-1533"];
m1_688 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1533-1533"];
m1_762 [cluster="lambda expression", file="JsonSerializerTest.cs", label="var serializationBinder = serializerProxy.Binder", span="1583-1583"];
m1_761 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1580-1586"];
m1_763 [cluster="lambda expression", file="JsonSerializerTest.cs", label="serializationBinder.ToString()", span="1585-1585"];
m1_764 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1580-1586"];
m1_1011 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2229-2229"];
m1_1014 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2232-2232"];
m1_1012 [cluster="lambda expression", file="JsonSerializerTest.cs", label="p.Name", span="2229-2229"];
m1_1013 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2229-2229"];
m1_1015 [cluster="lambda expression", file="JsonSerializerTest.cs", label="p.Name", span="2232-2232"];
m1_1016 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2232-2232"];
m1_1145 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2555-2555"];
m1_1146 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(new BadJsonPropertyClass())", span="2555-2555"];
m1_1147 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2555-2555"];
m1_1154 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<List<string>>(json)", span="2563-2563"];
m1_1153 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2563-2563"];
m1_1155 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2563-2563"];
m1_1456 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3106-3110"];
m1_1457 [cluster="lambda expression", file="JsonSerializerTest.cs", label="IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass()", span="3108-3108"];
m1_1458 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(c)", span="3109-3109"];
m1_1459 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3106-3110"];
m1_1550 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3287-3298"];
m1_1551 [cluster="lambda expression", file="JsonSerializerTest.cs", label="RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n                {\r\n                    FirstName = null,\r\n                    BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n                    LastName = null,\r\n                    MiddleName = null\r\n                }", span="3289-3295"];
m1_1552 [cluster="lambda expression", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(requiredMembersClass)", span="3297-3297"];
m1_1553 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3287-3298"];
m1_1595 [cluster="lambda expression", file="JsonSerializerTest.cs", label="InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass))", span="3403-3403"];
m1_1594 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3401-3404"];
m1_1596 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3401-3404"];
m1_1700 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3655-3661"];
m1_1701 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="3657-3657"];
m1_1702 [cluster="lambda expression", file="JsonSerializerTest.cs", label="o.ReferenceLoopHandlingErrorProperty = o", span="3658-3658"];
m1_1703 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore })", span="3660-3660"];
m1_1704 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3655-3661"];
m1_1842 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Event>(json)", span="4024-4024"];
m1_1841 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4024-4024"];
m1_1843 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4024-4024"];
m1_1869 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Person>(json)", span="4063-4063"];
m1_1868 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4063-4063"];
m1_1870 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4063-4063"];
m1_1876 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="4073-4073"];
m1_1875 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4073-4073"];
m1_1877 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4073-4073"];
m1_1883 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Exception>(json)", span="4084-4084"];
m1_1882 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4084-4084"];
m1_1884 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4084-4084"];
m1_1890 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<double>(json)", span="4096-4096"];
m1_1889 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4096-4096"];
m1_1891 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4096-4096"];
m1_1897 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<DynamicDictionary>(json)", span="4107-4107"];
m1_1896 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4107-4107"];
m1_1898 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4107-4107"];
m1_1904 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<JObject>(json)", span="4120-4120"];
m1_1903 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4120-4120"];
m1_1905 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4120-4120"];
m1_1911 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Person>(json)", span="4133-4133"];
m1_1910 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4133-4133"];
m1_1912 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4133-4133"];
m1_1918 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<List<Person>>(json)", span="4141-4141"];
m1_1917 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4141-4141"];
m1_1919 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4141-4141"];
m1_1932 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.PopulateObject(json, new Person())", span="4167-4167"];
m1_1931 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4167-4167"];
m1_1933 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4167-4167"];
m1_1940 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.PopulateObject(json, new List<Person>())", span="4175-4175"];
m1_1939 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4175-4175"];
m1_1941 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4175-4175"];
m1_1950 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4190-4201"];
m1_1951 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(PORTABLE || DNXCORE50 || PORTABLE40) || NETSTANDARD1_3\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="4192-4200"];
m1_1952 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4190-4201"];
m1_1957 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4207-4218"];
m1_1958 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(PORTABLE || DNXCORE50 || PORTABLE40) || NETSTANDARD1_3\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="4209-4217"];
m1_1959 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4207-4218"];
m1_1963 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4224-4235"];
m1_1964 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(PORTABLE || DNXCORE50 || PORTABLE40) || NETSTANDARD1_3\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="4226-4234"];
m1_1965 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4224-4235"];
m1_1969 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4241-4252"];
m1_1970 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="4243-4251"];
m1_1971 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4241-4252"];
m1_2082 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4559-4559"];
m1_2083 [cluster="lambda expression", file="JsonSerializerTest.cs", label="x.Id == id", span="4559-4559"];
m1_2084 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4559-4559"];
m1_2119 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n            })", span="4658-4662"];
m1_2118 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4658-4662"];
m1_2120 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4658-4662"];
m1_2439 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="5595-5595"];
m1_2438 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="5595-5595"];
m1_2440 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="5595-5595"];
m1_2444 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="5601-5616"];
m1_2445 [cluster="lambda expression", file="JsonSerializerTest.cs", label="var reference = new Dictionary<string, object>()", span="5605-5605"];
m1_2446 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reference.Add(''$ref'', 1)", span="5606-5606"];
m1_2447 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reference.Add(''$id'', 1)", span="5607-5607"];
m1_2451 [cluster="lambda expression", file="JsonSerializerTest.cs", label="child.Add(''Father'', reference)", span="5612-5612"];
m1_2448 [cluster="lambda expression", file="JsonSerializerTest.cs", label="var child = new Dictionary<string, object>()", span="5609-5609"];
m1_2449 [cluster="lambda expression", file="JsonSerializerTest.cs", label="child.Add(''_id'', 2)", span="5610-5610"];
m1_2450 [cluster="lambda expression", file="JsonSerializerTest.cs", label="child.Add(''Name'', ''Isabell'')", span="5611-5611"];
m1_2452 [cluster="lambda expression", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="5614-5614"];
m1_2453 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="5615-5615"];
m1_2454 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="5601-5616"];
m1_2555 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<StringDictionaryTestClass>(json)", span="5835-5835"];
m1_2554 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="5835-5835"];
m1_2556 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="5835-5835"];
m1_2765 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="6325-6325"];
m1_2766 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject(''null'', typeof(DateTime))", span="6325-6325"];
m1_2767 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="6325-6325"];
m1_3095 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<HasByteArray>(json, new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Objects\r\n                })", span="7205-7208"];
m1_3094 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7203-7209"];
m1_3096 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7203-7209"];
m1_3119 [cluster="lambda expression", file="JsonSerializerTest.cs", label="List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json)", span="7261-7261"];
m1_3118 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7259-7262"];
m1_3120 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7259-7262"];
m1_3133 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<ConvertableIntTestClass>(json)", span="7301-7301"];
m1_3132 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7301-7301"];
m1_3134 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7301-7301"];
m1_3152 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7330-7338"];
m1_3153 [cluster="lambda expression", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}''", span="7332-7335"];
m1_3154 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="7337-7337"];
m1_3155 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7330-7338"];
m1_3159 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7344-7350"];
m1_3160 [cluster="lambda expression", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''PreProperty'''': ''", span="7346-7347"];
m1_3161 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="7349-7349"];
m1_3162 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7344-7350"];
m1_3254 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7527-7527"];
m1_3255 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<double>('''')", span="7527-7527"];
m1_3256 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7527-7527"];
m1_3260 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7533-7533"];
m1_3261 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<StringComparison>('''')", span="7533-7533"];
m1_3262 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7533-7533"];
m1_3266 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7539-7539"];
m1_3267 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<int>('''')", span="7539-7539"];
m1_3268 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7539-7539"];
m1_3276 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7553-7553"];
m1_3277 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<double>(null)", span="7553-7553"];
m1_3278 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7553-7553"];
m1_3282 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7565-7565"];
m1_3283 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject(null)", span="7565-7565"];
m1_3284 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7565-7565"];
m1_3398 [cluster="lambda expression", file="JsonSerializerTest.cs", label="errors.Add(e.ErrorContext.Error.Message)", span="7808-7808"];
m1_3399 [cluster="lambda expression", file="JsonSerializerTest.cs", label="e.ErrorContext.Handled = true", span="7809-7809"];
m1_3397 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7806-7810"];
m1_3400 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7806-7810"];
m1_3413 [cluster="lambda expression", file="JsonSerializerTest.cs", label="errors.Add(e.ErrorContext.Error.Message)", span="7833-7833"];
m1_3414 [cluster="lambda expression", file="JsonSerializerTest.cs", label="e.ErrorContext.Handled = true", span="7834-7834"];
m1_3412 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7831-7835"];
m1_3415 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7831-7835"];
m1_3428 [cluster="lambda expression", file="JsonSerializerTest.cs", label="errors.Add(e.ErrorContext.Error.Message)", span="7856-7856"];
m1_3429 [cluster="lambda expression", file="JsonSerializerTest.cs", label="e.ErrorContext.Handled = true", span="7857-7857"];
m1_3427 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7854-7858"];
m1_3430 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7854-7858"];
m1_3553 [cluster="lambda expression", file="JsonSerializerTest.cs", label="s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="8205-8205"];
m1_3552 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="8205-8205"];
m1_3554 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="8205-8205"];
m1_3578 [cluster="lambda expression", file="JsonSerializerTest.cs", label="s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="8252-8252"];
m1_3577 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="8252-8252"];
m1_3579 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="8252-8252"];
m1_3590 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="8296-8308"];
m1_3591 [cluster="lambda expression", file="JsonSerializerTest.cs", label="string json = ''[{},1]''", span="8298-8298"];
m1_3592 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="8300-8300"];
m1_3594 [cluster="lambda expression", file="JsonSerializerTest.cs", label="var reader = new JsonTextReader(new StringReader(json))", span="8303-8303"];
m1_3593 [cluster="lambda expression", file="JsonSerializerTest.cs", label="serializer.CheckAdditionalContent = true", span="8301-8301"];
m1_3597 [cluster="lambda expression", file="JsonSerializerTest.cs", label="serializer.Deserialize(reader, typeof(MyType))", span="8307-8307"];
m1_3595 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="8304-8304"];
m1_3596 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="8305-8305"];
m1_3598 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="8296-8308"];
m1_3623 [cluster="lambda expression", file="JsonSerializerTest.cs", label="serializer.Deserialize(reader, typeof(MyType))", span="8352-8352"];
m1_3622 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="8352-8352"];
m1_3624 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="8352-8352"];
m1_3706 [cluster="lambda expression", file="JsonSerializerTest.cs", label="obj = JsonConvert.DeserializeObject<MyTuple<int>>(json)", span="8540-8540"];
m1_3705 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="8540-8540"];
m1_3707 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="8540-8540"];
m1_3787 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="8788-8788"];
m1_3788 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<NoConstructorReadOnlyCollection<int>>(''[1]'')", span="8788-8788"];
m1_3789 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="8788-8788"];
m1_3795 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="8803-8803"];
m1_3796 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<NoConstructorReadOnlyDictionary<int, int>>(''{'1':1}'')", span="8803-8803"];
m1_3797 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="8803-8803"];
m1_3805 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IList<long>>(json)", span="8817-8817"];
m1_3804 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="8817-8817"];
m1_3806 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="8817-8817"];
m1_3990 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="9320-9320"];
m1_3991 [cluster="lambda expression", file="JsonSerializerTest.cs", label="new IdReferenceResolver()", span="9320-9320"];
m1_3992 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="9320-9320"];
m1_4237 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="9889-9889"];
m1_4238 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(new ErroringTestClass())", span="9889-9889"];
m1_4239 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="9889-9889"];
m1_4244 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="9895-9895"];
m1_4245 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<string>(''020474068'')", span="9895-9895"];
m1_4246 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="9895-9895"];
m1_4265 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<System.Net.Mail.MailMessage>(\r\n                        JsonMessage,\r\n                        new MailAddressReadConverter(),\r\n                        new AttachmentReadConverter(),\r\n                        new EncodingReadConverter())", span="9978-9982"];
m1_4264 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="9976-9983"];
m1_4266 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="9976-9983"];
m1_4324 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<CompletionDataRequest>(s)", span="10086-10086"];
m1_4325 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="10086-10086"];
m1_961 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", span="2139-2139"];
m1_962 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="BaseWithContract baseWith = new SubWithoutContractVirtualProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="2141-2147"];
m1_963 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.JustAProperty = ''JustAProperty2!''", span="2149-2149"];
m1_964 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.Virtual = ''Virtual2!''", span="2150-2150"];
m1_965 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="2151-2151"];
m1_966 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.WithDataMember = ''WithDataMember2!''", span="2152-2152"];
m1_967 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(baseWith, Formatting.Indented)", span="2154-2154"];
m1_968 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualSub'''': ''''Virtual2!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''JustAProperty'''': ''''JustAProperty2!''''\r\n}'', json)", span="2156-2161"];
m1_969 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", span="2139-2139"];
m1_2229 [cluster="System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0"];
m1_2785 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", span="6395-6395"];
m1_2786 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonSerializerTest.cs", label="this.A = A", span="6397-6397"];
m1_2787 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonSerializerTest.cs", label="B = 2", span="6398-6398"];
m1_2788 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", span="6395-6395"];
m1_1770 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="3856-3856"];
m1_1771 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="string json = @''/*comment1*/ { /*comment2*/\r\n        ''''Name'''': /*comment3*/ ''''Apple'''' /*comment4*/, /*comment5*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment6*/ [ /*comment7*/\r\n          ''''Small'''', /*comment8*/\r\n          ''''Medium'''' /*comment9*/,\r\n          /*comment10*/ ''''Large''''\r\n        /*comment11*/ ] /*comment12*/\r\n      } /*comment13*/''", span="3858-3867"];
m1_1772 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(json, typeof(Product))", span="3869-3869"];
m1_1773 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="3871-3871"];
m1_1774 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2008, 12, 28, 0, 0, 0, DateTimeKind.Utc), deserializedProduct.ExpiryDate)", span="3872-3872"];
m1_1775 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3.99m, deserializedProduct.Price)", span="3873-3873"];
m1_1776 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="3874-3874"];
m1_1777 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="3875-3875"];
m1_1778 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="3876-3876"];
m1_1779 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="3856-3856"];
m1_1121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="2514-2514"];
m1_1122 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="string jsonText = @''{\r\n'''''''':'''''''',\r\n''''label'''': [\r\n       [''''SomeName'''',6]\r\n],\r\n''''torrents'''': [\r\n       [''''192D99A5C943555CB7F00A852821CF6D6DB3008A'''',201,''''filename.avi'''',178311826,1000,178311826,72815250,408,1603,7,121430,''''NameOfLabelPrevioslyDefined'''',3,6,0,8,128954,-1,0],\r\n],\r\n''''torrentc'''': ''''1816000723''''\r\n}''", span="2516-2525"];
m1_1123 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="JObject o = (JObject)JsonConvert.DeserializeObject(jsonText)", span="2527-2527"];
m1_1124 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, o.Children().Count())", span="2528-2528"];
m1_1125 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="JToken torrentsArray = (JToken)o[''torrents'']", span="2530-2530"];
m1_1126 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="JToken nestedTorrentsArray = (JToken)torrentsArray[0]", span="2531-2531"];
m1_1127 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(nestedTorrentsArray.Children().Count(), 19)", span="2532-2532"];
m1_1128 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="2514-2514"];
m1_1825 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="3997-3997"];
m1_1826 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="string json = @''{''''key1'''':''''value1'''',''''key2'''':''''value2''''}''", span="3999-3999"];
m1_1827 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Dictionary<string, string> values = JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="4001-4001"];
m1_1828 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, values.Count)", span="4003-4003"];
m1_1829 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value1'', values[''key1''])", span="4004-4004"];
m1_1830 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value2'', values[''key2''])", span="4005-4005"];
m1_1831 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="3997-3997"];
m1_2598 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", span="5938-5938"];
m1_2762 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="6323-6323"];
m1_2763 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject(''null'', typeof(DateTime)); }, ''Error converting value {null} to type 'System.DateTime'. Path '', line 1, position 4.'')", span="6325-6325"];
m1_2764 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="6323-6323"];
m1_4273 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9994-9994"];
m1_4274 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="var messageJObject = serializer.Deserialize<JObject>(reader)", span="9996-9996"];
m1_4275 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="messageJObject == null", span="9997-9997"];
m1_4277 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="var address = messageJObject.GetValue(''Address'', StringComparison.OrdinalIgnoreCase).ToObject<string>()", span="10002-10002"];
m1_4280 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="messageJObject.TryGetValue(''DisplayName'', StringComparison.OrdinalIgnoreCase, out displayNameToken)\r\n                    && !string.IsNullOrEmpty(displayName = displayNameToken.ToObject<string>())", span="10006-10007"];
m1_4276 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="return null;", span="9999-9999"];
m1_4278 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="JToken displayNameToken", span="10004-10004"];
m1_4281 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="return new System.Net.Mail.MailAddress(address, displayName);", span="10009-10009"];
m1_4282 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="return new System.Net.Mail.MailAddress(address);", span="10012-10012"];
m1_4279 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="string displayName", span="10005-10005"];
m1_4283 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9994-9994"];
m1_4410 [cluster="System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", span="0-0"];
m1_3019 [cluster="Newtonsoft.Json.JsonWriter.Flush()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.Flush()", span="400-400"];
m1_1193 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", span="2629-2629"];
m1_1194 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs", label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n            {\r\n                new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n            }", span="2631-2637"];
m1_1195 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(testDates)", span="2639-2639"];
m1_1196 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[''''0100-01-01T01:01:01+00:00'''',''''2000-01-01T01:01:01+00:00'''',''''2000-01-01T01:01:01+13:00'''',''''2000-01-01T01:01:01-03:30'''']'', result)", span="2640-2640"];
m1_1197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", span="2629-2629"];
m1_1397 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", span="2997-2997"];
m1_1398 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2999-2999"];
m1_1399 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="3000-3000"];
m1_1403 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="3010-3010"];
m1_1404 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="3011-3011"];
m1_1400 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="3002-3005"];
m1_1401 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="3006-3006"];
m1_1402 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="3008-3008"];
m1_1405 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", span="2997-2997"];
m1_2654 [cluster="string.Format(string, object, object, object)", file="JsonSerializerTest.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m1_1323 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", span="2879-2879"];
m1_1324 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonSerializerTest.cs", label="var date = new DateTime(2001, 4, 4, 0, 0, 0, DateTimeKind.Utc)", span="2881-2881"];
m1_1325 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(date)", span="2883-2883"];
m1_1326 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''''''2001-04-04T00:00:00Z'''''', json)", span="2884-2884"];
m1_1327 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", span="2879-2879"];
m1_214 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", span="562-562"];
m1_215 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new Binding_DisallowNull(), new JsonSerializerSettings\r\n            {\r\n                NullValueHandling = NullValueHandling.Ignore\r\n            })", span="564-567"];
m1_216 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''{}'', json)", span="568-568"];
m1_217 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", span="562-562"];
m1_3142 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="7316-7316"];
m1_3143 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="string json = @''{''''Id'''':{''''Value'''':''''id''''}}''", span="7318-7318"];
m1_3144 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Widget w = JsonConvert.DeserializeObject<Widget>(json)", span="7320-7320"];
m1_3145 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id)", span="7322-7322"];
m1_3146 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id.Value)", span="7323-7323"];
m1_3147 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''id'', w.Id.Value.Value)", span="7324-7324"];
m1_3148 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="7316-7316"];
m1_3380 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", span="144-144"];
m1_3736 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="8657-8657"];
m1_3737 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs", label="CultureInfo culture = new CultureInfo(''en-NZ'')", span="8659-8659"];
m1_3738 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs", label="culture.DateTimeFormat.AMDesignator = ''a.m.''", span="8660-8660"];
m1_3739 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs", label="culture.DateTimeFormat.PMDesignator = ''p.m.''", span="8661-8661"];
m1_3741 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = ''yyyy tt'',\r\n                Culture = culture\r\n            })", span="8669-8673"];
m1_3740 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs", label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="8663-8667"];
m1_3742 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="8675-8678"];
m1_3743 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="8657-8657"];
m1_3305 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="7615-7615"];
m1_3306 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="NullableDateTimeTestClass c =\r\n                JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="7617-7623"];
m1_3307 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="7625-7625"];
m1_3308 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="7626-7626"];
m1_3309 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Pre'', c.PreField)", span="7627-7627"];
m1_3310 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Post'', c.PostField)", span="7628-7628"];
m1_3311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="NullableDateTimeTestClass c2 =\r\n                JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':null,''''DateTimeOffsetField'''':null,''''PostField'''':''''Post''''}'')", span="7630-7632"];
m1_3312 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, c2.DateTimeField)", span="7634-7634"];
m1_3313 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, c2.DateTimeOffsetField)", span="7635-7635"];
m1_3314 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Pre'', c2.PreField)", span="7636-7636"];
m1_3315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Post'', c2.PostField)", span="7637-7637"];
m1_3316 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="7615-7615"];
m1_838 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", span="1831-1831"];
m1_839 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs", label="Regex regex = new Regex(''(hi)'', RegexOptions.CultureInvariant)", span="1833-1833"];
m1_840 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(regex, Formatting.Indented)", span="1835-1835"];
m1_841 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs", label="Regex r2 = JsonConvert.DeserializeObject<Regex>(json)", span="1837-1837"];
m1_842 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''(hi)'', r2.ToString())", span="1839-1839"];
m1_843 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs", label="Assert.AreEqual(RegexOptions.CultureInvariant, r2.Options)", span="1840-1840"];
m1_844 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", span="1831-1831"];
m1_3541 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="8192-8192"];
m1_3542 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="string json = ''{one:1}{}''", span="8194-8194"];
m1_3543 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="8196-8196"];
m1_3545 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="IDictionary<string, int> o = s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="8198-8198"];
m1_3550 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json))); }, ''Additional text encountered after finished reading JSON content: {. Path '', line 1, position 7.'')", span="8205-8205"];
m1_3544 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="JsonSerializer s = JsonSerializer.Create(settings)", span="8197-8197"];
m1_3548 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="settings.CheckAdditionalContent = true", span="8203-8203"];
m1_3549 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="s = JsonSerializer.Create(settings)", span="8204-8204"];
m1_3546 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(o)", span="8200-8200"];
m1_3547 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, o[''one''])", span="8201-8201"];
m1_3551 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="8192-8192"];
m1_4412 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="10348-10348"];
m1_4413 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''stringValue'', _stringValue)", span="10350-10350"];
m1_4414 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''intValue'', _intValue)", span="10351-10351"];
m1_4415 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''dateTimeOffsetValue'', _dateTimeOffsetValue)", span="10352-10352"];
m1_4416 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''personValue'', _personValue)", span="10353-10353"];
m1_4417 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''nullPersonValue'', _nullPersonValue)", span="10354-10354"];
m1_4418 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''nullableInt'', null)", span="10355-10355"];
m1_4419 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''booleanValue'', _booleanValue)", span="10357-10357"];
m1_4420 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''byteValue'', _byteValue)", span="10358-10358"];
m1_4421 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''charValue'', _charValue)", span="10359-10359"];
m1_4422 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''dateTimeValue'', _dateTimeValue)", span="10360-10360"];
m1_4423 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''decimalValue'', _decimalValue)", span="10361-10361"];
m1_4424 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''shortValue'', _shortValue)", span="10362-10362"];
m1_4425 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''longValue'', _longValue)", span="10363-10363"];
m1_4426 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''sbyteValue'', _sbyteValue)", span="10364-10364"];
m1_4427 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''floatValue'', _floatValue)", span="10365-10365"];
m1_4428 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''ushortValue'', _ushortValue)", span="10366-10366"];
m1_4429 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''uintValue'', _uintValue)", span="10367-10367"];
m1_4430 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''ulongValue'', _ulongValue)", span="10368-10368"];
m1_4431 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="10348-10348"];
m1_2723 [cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", span="10144-10144"];
m1_4340 [cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", file="JsonSerializerTest.cs", label="Value = val", span="10146-10146"];
m1_4341 [cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", span="10144-10144"];
m1_3580 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="8257-8257"];
m1_3581 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs", label="string json = @''{ ''''ClassName'''' : ''''System.InvalidOperationException'''',\r\n  ''''Data'''' : null,\r\n  ''''ExceptionMethod'''' : ''''8\nLogin\nAppBiz, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null\nMyApp.LoginBiz\nMyApp.User Login()'''',\r\n  ''''HResult'''' : -2146233079,\r\n  ''''HelpURL'''' : null,\r\n  ''''InnerException'''' : { ''''ClassName'''' : ''''System.Exception'''',\r\n      ''''Data'''' : null,\r\n      ''''ExceptionMethod'''' : null,\r\n      ''''HResult'''' : -2146233088,\r\n      ''''HelpURL'''' : null,\r\n      ''''InnerException'''' : null,\r\n      ''''Message'''' : ''''Inner exception...'''',\r\n      ''''RemoteStackIndex'''' : 0,\r\n      ''''RemoteStackTraceString'''' : null,\r\n      ''''Source'''' : null,\r\n      ''''StackTraceString'''' : null,\r\n      ''''WatsonBuckets'''' : null\r\n    },\r\n  ''''Message'''' : ''''Outter exception...'''',\r\n  ''''RemoteStackIndex'''' : 0,\r\n  ''''RemoteStackTraceString'''' : null,\r\n  ''''Source'''' : ''''AppBiz'''',\r\n  ''''StackTraceString'''' : '''' at MyApp.LoginBiz.Login() in C:\\MyApp\\LoginBiz.cs:line 44\r\n at MyApp.LoginSvc.Login() in C:\\MyApp\\LoginSvc.cs:line 71\r\n at SyncInvokeLogin(Object , Object[] , Object[] )\r\n at System.ServiceModel.Dispatcher.SyncMethodInvoker.Invoke(Object instance, Object[] inputs, Object[]& outputs)\r\n at System.ServiceModel.Dispatcher.DispatchOperationRuntime.InvokeBegin(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage5(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage41(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage4(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage31(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage3(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage2(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage11(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage1(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.MessageRpc.Process(Boolean isOperationContextSet)'''',\r\n  ''''WatsonBuckets'''' : null\r\n}''", span="8259-8283"];
m1_3582 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs", label="InvalidOperationException exception = JsonConvert.DeserializeObject<InvalidOperationException>(json)", span="8285-8285"];
m1_3583 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(exception)", span="8286-8286"];
m1_3584 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(InvalidOperationException), exception)", span="8287-8287"];
m1_3585 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Outter exception...'', exception.Message)", span="8289-8289"];
m1_3586 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="8257-8257"];
m1_2803 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="6463-6463"];
m1_2804 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs", label="ChildDataContract cc = new ChildDataContract\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="6465-6469"];
m1_2805 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="6471-6471"];
m1_2806 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''virtualMember'''': ''''VirtualMember!'''',\r\n  ''''nonVirtualMember'''': ''''NonVirtualMember!''''\r\n}'', result)", span="6478-6481"];
m1_2807 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="6463-6463"];
m1_3018 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="1042-1042"];
m1_1305 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="2855-2855"];
m1_1306 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="Stack<object> s = new Stack<object>()", span="2857-2857"];
m1_1307 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="s.Push(1)", span="2858-2858"];
m1_1308 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="s.Push(2)", span="2859-2859"];
m1_1309 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="s.Push(3)", span="2860-2860"];
m1_1310 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(s)", span="2862-2862"];
m1_1311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[3,2,1]'', json)", span="2863-2863"];
m1_1312 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="2855-2855"];
m1_3524 [cluster="Newtonsoft.Json.Tests.TestObjects.Events.Event1.Event1()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Events.Event1.Event1()", span="31-31"];
m1_3717 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="8596-8596"];
m1_3718 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonSerializerTest.cs", label="IgnoreSerializableAttribute = false", span="8598-8598"];
m1_3719 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="8596-8596"];
m1_4315 [cluster="System.Text.Encoding.GetEncoding(string)", file="JsonSerializerTest.cs", label="Entry System.Text.Encoding.GetEncoding(string)", span="0-0"];
m1_1593 [cluster="Newtonsoft.Json.Tests.TestObjects.Co.Co()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Co.Co()", span="27-27"];
m1_2717 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", span="6236-6236"];
m1_2718 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs", label="var data = new DecimalTest(decimal.MinValue)", span="6238-6238"];
m1_2719 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(data)", span="6239-6239"];
m1_2720 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs", label="var obj = JsonConvert.DeserializeObject<DecimalTest>(json, new JsonSerializerSettings { MetadataPropertyHandling = MetadataPropertyHandling.Default })", span="6240-6240"];
m1_2721 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(decimal.MinValue, obj.Value)", span="6242-6242"];
m1_2722 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", span="6236-6236"];
m1_3353 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", span="7744-7744"];
m1_3354 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="IList<MultipleItemsClass> values = new List<MultipleItemsClass>()", span="7746-7746"];
m1_3355 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{ ''''name'''': ''''bar'''' }{ ''''name'''': ''''baz'''' }''))", span="7748-7748"];
m1_3361 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="values.Add(foo)", span="7761-7761"];
m1_3362 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, values.Count)", span="7764-7764"];
m1_3363 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''bar'', values[0].Name)", span="7765-7765"];
m1_3364 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''baz'', values[1].Name)", span="7766-7766"];
m1_3356 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="reader.SupportMultipleContent = true", span="7749-7749"];
m1_3358 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="!reader.Read()", span="7753-7753"];
m1_3360 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="MultipleItemsClass foo = serializer.Deserialize<MultipleItemsClass>(reader)", span="7759-7759"];
m1_3357 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label=true, span="7751-7751"];
m1_3359 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="7758-7758"];
m1_3365 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", span="7744-7744"];
m1_2259 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", span="10316-10316"];
m1_4374 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", file="JsonSerializerTest.cs", label="_stringValue = stringValue", span="10318-10318"];
m1_4375 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", file="JsonSerializerTest.cs", label="_intValue = intValue", span="10319-10319"];
m1_4376 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", file="JsonSerializerTest.cs", label="_dateTimeOffsetValue = dateTimeOffset", span="10320-10320"];
m1_4377 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", file="JsonSerializerTest.cs", label="_personValue = personValue", span="10321-10321"];
m1_4378 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", file="JsonSerializerTest.cs", label="_dateTimeValue = new DateTime(0, DateTimeKind.Utc)", span="10322-10322"];
m1_4379 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", span="10316-10316"];
m1_867 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1.Foo1()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1.Foo1()", span="1869-1869"];
m1_2204 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="4968-4968"];
m1_2205 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonSerializerTest.cs", label="return _innerDictionary.GetEnumerator();", span="4970-4970"];
m1_2206 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="4968-4968"];
m1_1293 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", span="35-35"];
m1_935 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", span="1981-1981"];
m1_936 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="JsonSerializerTest.cs", label="return _name + '' '' + _number;", span="1983-1983"];
m1_937 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", span="1981-1981"];
m1_1755 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="3819-3819"];
m1_1756 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''Random'''': {\r\n    ''''blah'''': 1\r\n  },\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11,\r\n    ''''Item1'''': 12\r\n  },\r\n  ''''Collection'''': [\r\n    999\r\n  ],\r\n  ''''Employee'''': {\r\n    ''''Manager'''': {\r\n      ''''Name'''': ''''ManagerName!''''\r\n    }\r\n  }\r\n}''", span="3821-3838"];
m1_1757 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(json,\r\n                new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Reuse })", span="3840-3841"];
m1_1758 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', c.Name)", span="3843-3843"];
m1_1759 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, c.Dictionary.Count)", span="3844-3844"];
m1_1760 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="3845-3845"];
m1_1761 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Dictionary[''existing''])", span="3846-3846"];
m1_1762 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, c.Collection.Count)", span="3847-3847"];
m1_1763 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Collection.ElementAt(0))", span="3848-3848"];
m1_1764 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(999, c.Collection.ElementAt(3))", span="3849-3849"];
m1_1765 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''EmployeeName!'', c.Employee.Name)", span="3850-3850"];
m1_1766 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ManagerName!'', c.Employee.Manager.Name)", span="3851-3851"];
m1_1767 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(c.Random)", span="3852-3852"];
m1_1768 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="3819-3819"];
m1_524 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="404-404"];
m1_3507 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="8079-8079"];
m1_3514 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs", label="var jsonReader = new JsonTextReader(new StringReader(json))", span="8082-8082"];
m1_3515 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs", label="var serializer = new JsonSerializer()", span="8083-8083"];
m1_3517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs", label="return serializer.Deserialize(jsonReader, typeof(T)) as T;", span="8089-8089"];
m1_3516 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs", label="serializer.ContractResolver = new DefaultContractResolver\r\n            {\r\n                IgnoreSerializableAttribute = false\r\n            }", span="8084-8087"];
m1_3518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="8079-8079"];
m1_2203 [cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0"];
m1_61 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Subclass.Subclass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Subclass.Subclass()", span="235-235"];
m1_3337 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", span="7716-7716"];
m1_3191 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="7398-7398"];
m1_3192 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="Item expected = new Item()\r\n            {\r\n                SourceTypeID = new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''),\r\n                BrokerID = new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''),\r\n                Latitude = 33.657145,\r\n                Longitude = -117.766684,\r\n                TimeStamp = new DateTime(2000, 3, 1, 23, 59, 59, DateTimeKind.Utc),\r\n                Payload = new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }\r\n            }", span="7400-7408"];
m1_3193 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="string jsonString = JsonConvert.SerializeObject(expected, Formatting.Indented)", span="7410-7410"];
m1_3194 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''SourceTypeID'''': ''''d8220a4b-75b1-4b7a-8112-b7bdae956a45'''',\r\n  ''''BrokerID'''': ''''951663c4-924e-4c86-a57a-7ed737501dbd'''',\r\n  ''''Latitude'''': 33.657145,\r\n  ''''Longitude'''': -117.766684,\r\n  ''''TimeStamp'''': ''''2000-03-01T23:59:59Z'''',\r\n  ''''Payload'''': {\r\n    ''''$type'''': '''''' + ReflectionUtils.GetTypeName(typeof(byte[]), 0, DefaultSerializationBinder.Instance) + @'''''',\r\n    ''''$value'''': ''''AAECAwQFBgcICQ==''''\r\n  }\r\n}'', jsonString)", span="7412-7422"];
m1_3195 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="Item actual = JsonConvert.DeserializeObject<Item>(jsonString)", span="7424-7424"];
m1_3196 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), actual.SourceTypeID)", span="7426-7426"];
m1_3197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''), actual.BrokerID)", span="7427-7427"];
m1_3198 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="byte[] bytes = (byte[])actual.Payload", span="7428-7428"];
m1_3199 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEquivalent((new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }).ToList(), bytes.ToList())", span="7429-7429"];
m1_3200 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="7398-7398"];
m1_3531 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="8153-8153"];
m1_3532 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="DataContractSerializationAttributesClass dataContract = new DataContractSerializationAttributesClass\r\n            {\r\n                NoAttribute = ''Value!'',\r\n                IgnoreDataMemberAttribute = ''Value!'',\r\n                DataMemberAttribute = ''Value!'',\r\n                IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n            }", span="8155-8161"];
m1_3533 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dataContract, Formatting.Indented)", span="8169-8169"];
m1_3534 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''DataMemberAttribute'''': ''''Value!'''',\r\n  ''''IgnoreDataMemberAndDataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="8170-8173"];
m1_3535 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="PocoDataContractSerializationAttributesClass poco = new PocoDataContractSerializationAttributesClass\r\n            {\r\n                NoAttribute = ''Value!'',\r\n                IgnoreDataMemberAttribute = ''Value!'',\r\n                DataMemberAttribute = ''Value!'',\r\n                IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n            }", span="8175-8181"];
m1_3536 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(poco, Formatting.Indented)", span="8183-8183"];
m1_3537 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''NoAttribute'''': ''''Value!'''',\r\n  ''''DataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="8184-8187"];
m1_3538 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="8153-8153"];
m1_379 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", span="990-990"];
m1_380 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="FaqItemProxy c = new FaqItemProxy()", span="992-992"];
m1_381 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="c.FaqId = 1", span="993-993"];
m1_382 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="c.Sections.Add(new FaqSection())", span="994-994"];
m1_383 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="c.IsProxy = true", span="995-995"];
m1_384 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="997-997"];
m1_385 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''IsProxy'''': true,\r\n  ''''FaqId'''': 1,\r\n  ''''Name'''': null,\r\n  ''''IsDeleted'''': false,\r\n  ''''FullSectionsProp'''': [\r\n    {}\r\n  ]\r\n}'', json)", span="999-1007"];
m1_386 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="FaqItemProxy c2 = JsonConvert.DeserializeObject<FaqItemProxy>(json)", span="1009-1009"];
m1_387 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c2.FaqId)", span="1011-1011"];
m1_388 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c2.Sections.Count)", span="1012-1012"];
m1_389 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", span="990-990"];
m1_51 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="JsonSerializerTest.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m1_3716 [cluster="System.Tuple.Create<T1>(T1)", file="JsonSerializerTest.cs", label="Entry System.Tuple.Create<T1>(T1)", span="0-0"];
m1_2853 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="6626-6626"];
m1_2854 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonSerializerTest.cs", label="Title = title", span="6628-6628"];
m1_2855 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonSerializerTest.cs", label="Categories = new Dictionary<string, int>()", span="6629-6629"];
m1_2856 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="6626-6626"];
m1_4162 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", span="9685-9685"];
m1_4163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs", label="DateTimeOffset dt = new DateTimeOffset(2000, 12, 22, 0, 0, 0, TimeSpan.Zero)", span="9687-9687"];
m1_4164 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd'!'K''", span="9688-9688"];
m1_4166 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new Dictionary<DateTimeOffset, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="9695-9698"];
m1_4169 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="9706-9706"];
m1_4165 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Formatting = Formatting.Indented\r\n            }", span="9689-9693"];
m1_4168 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs", label="Dictionary<DateTimeOffset, string> d = JsonConvert.DeserializeObject<Dictionary<DateTimeOffset, string>>(json, settings)", span="9704-9704"];
m1_4167 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22!+00:00'''': ''''123''''\r\n}'', json)", span="9700-9702"];
m1_4170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", span="9685-9685"];
m1_2188 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="4948-4948"];
m1_2189 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonSerializerTest.cs", label="_innerDictionary.Clear()", span="4950-4950"];
m1_2190 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="4948-4948"];
m1_3539 [cluster="Newtonsoft.Json.Tests.TestObjects.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", span="31-31"];
m1_2181 [cluster="Unk.nameof", file="JsonSerializerTest.cs", label="Entry Unk.nameof", span=""];
m1_279 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="751-751"];
m1_337 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesTestClass.IgnoredPropertiesTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesTestClass.IgnoredPropertiesTestClass()", span="756-756"];
m1_3613 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", span="8340-8340"];
m1_3614 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", file="JsonSerializerTest.cs", label="string json = @''[{ ''''MyProperty'''':{''''Key'''':''''Value''''}} /*this is a comment */\r\n// this is also a comment\r\n,{}''", span="8342-8344"];
m1_3615 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="8346-8346"];
m1_3617 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", file="JsonSerializerTest.cs", label="var reader = new JsonTextReader(new StringReader(json))", span="8348-8348"];
m1_3616 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", file="JsonSerializerTest.cs", label="serializer.CheckAdditionalContent = true", span="8347-8347"];
m1_3620 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => serializer.Deserialize(reader, typeof(MyType)),\r\n                ''Additional text found in JSON string after finishing deserializing object. Path '[1]', line 3, position 2.'')", span="8352-8353"];
m1_3618 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", file="JsonSerializerTest.cs", label="reader.Read()", span="8349-8349"];
m1_3619 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", file="JsonSerializerTest.cs", label="reader.Read()", span="8350-8350"];
m1_3621 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", span="8340-8340"];
m1_414 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", span="1090-1090"];
m1_415 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", file="JsonSerializerTest.cs", label="Dictionary<string, string> d = JsonConvert.DeserializeObject<Dictionary<string, string>>(''{\''Test1\'':false}'')", span="1092-1092"];
m1_416 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, d.Count)", span="1093-1093"];
m1_417 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''false'', d[''Test1''])", span="1094-1094"];
m1_418 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", span="1090-1090"];
m1_3385 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="7801-7801"];
m1_3386 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="string json = ''{}''", span="7803-7803"];
m1_3387 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="IList<string> errors = new List<string>()", span="7804-7804"];
m1_3389 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n            {\r\n                Error = error\r\n            })", span="7812-7815"];
m1_3388 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="7806-7810"];
m1_3391 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, errors.Count)", span="7818-7818"];
m1_3392 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Assert.IsTrue(errors[0].StartsWith(''Required property 'NonAttributeProperty' not found in JSON. Path ''''))", span="7819-7819"];
m1_3393 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Assert.IsTrue(errors[1].StartsWith(''Required property 'UnsetProperty' not found in JSON. Path ''''))", span="7820-7820"];
m1_3394 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Assert.IsTrue(errors[2].StartsWith(''Required property 'AllowNullProperty' not found in JSON. Path ''''))", span="7821-7821"];
m1_3395 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Assert.IsTrue(errors[3].StartsWith(''Required property 'AlwaysProperty' not found in JSON. Path ''''))", span="7822-7822"];
m1_3390 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(o)", span="7817-7817"];
m1_3396 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="7801-7801"];
m1_604 [cluster="System.Runtime.Serialization.StreamingContext.StreamingContext(System.Runtime.Serialization.StreamingContextStates)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.StreamingContext.StreamingContext(System.Runtime.Serialization.StreamingContextStates)", span="0-0"];
m1_1729 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", span="3747-3747"];
m1_1730 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", span="3747-3747"];
m1_2427 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="5580-5580"];
m1_2428 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="var reference = new Dictionary<string, object>()", span="5584-5584"];
m1_2429 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="reference.Add(''$ref'', ''Persons'')", span="5585-5585"];
m1_2430 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="reference.Add(''$id'', 1)", span="5586-5586"];
m1_2434 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="child.Add(''Father'', reference)", span="5591-5591"];
m1_2431 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="var child = new Dictionary<string, object>()", span="5588-5588"];
m1_2432 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="child.Add(''_id'', 2)", span="5589-5589"];
m1_2433 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="child.Add(''Name'', ''Isabell'')", span="5590-5590"];
m1_2435 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="5593-5593"];
m1_2436 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Dictionary<string, object>>(json); }, ''Additional content found in JSON reference object. A JSON reference object should only have a $ref property. Path 'Father.$id', line 6, position 10.'')", span="5595-5595"];
m1_2437 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="5580-5580"];
m1_1415 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", span="3036-3036"];
m1_1416 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="3038-3038"];
m1_1417 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="3039-3039"];
m1_1421 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="3049-3049"];
m1_1422 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="3050-3050"];
m1_1418 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n            })", span="3041-3044"];
m1_1419 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':''''1970-01-01T00:00:00Z'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="3045-3045"];
m1_1420 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="3047-3047"];
m1_1423 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", span="3036-3036"];
m1_3039 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", span="7065-7065"];
m1_3040 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="ReflectionContractResolver contractResolver = new ReflectionContractResolver()", span="7067-7067"];
m1_3041 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="StaticTestClass c = new StaticTestClass\r\n            {\r\n                x = int.MaxValue\r\n            }", span="7069-7072"];
m1_3044 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = contractResolver\r\n            })", span="7075-7078"];
m1_3046 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="StaticTestClass c2 = JsonConvert.DeserializeObject<StaticTestClass>(@''{\r\n  ''''x'''': -1,\r\n  ''''y'''': -2,\r\n  ''''z'''': -3\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = contractResolver\r\n                })", span="7086-7094"];
m1_3042 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="StaticTestClass.y = 2", span="7073-7073"];
m1_3043 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="StaticTestClass.z = 3", span="7074-7074"];
m1_3045 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''x'''': 2147483647,\r\n  ''''y'''': 2,\r\n  ''''z'''': 3\r\n}'', json)", span="7080-7084"];
m1_3047 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="Assert.AreEqual(-1, c2.x)", span="7096-7096"];
m1_3048 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="Assert.AreEqual(-2, StaticTestClass.y)", span="7097-7097"];
m1_3049 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="Assert.AreEqual(-3, StaticTestClass.z)", span="7098-7098"];
m1_3050 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", span="7065-7065"];
m1_2665 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", span="6044-6044"];
m1_4016 [cluster="Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", span="35-35"];
m1_2947 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="6899-6899"];
m1_2948 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass()", span="6901-6901"];
m1_2949 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6902-6902"];
m1_2952 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Guid, c2.Guid)", span="6913-6913"];
m1_2953 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="6914-6914"];
m1_2954 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="6915-6915"];
m1_2955 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="6916-6916"];
m1_2956 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Uri, c2.Uri)", span="6917-6917"];
m1_2950 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Guid'''': ''''00000000-0000-0000-0000-000000000000'''',\r\n  ''''NullableGuid'''': null,\r\n  ''''TimeSpan'''': ''''00:00:00'''',\r\n  ''''NullableTimeSpan'''': null,\r\n  ''''Uri'''': null\r\n}'', json)", span="6904-6910"];
m1_2951 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="6912-6912"];
m1_2957 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="6899-6899"];
m1_4443 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", span="0-0"];
m1_4223 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ErroringJsonConverter(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ErroringJsonConverter(string)", span="9861-9861"];
m1_4224 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ErroringJsonConverter(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ErroringJsonConverter(string)", span="9861-9861"];
m1_280 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", span="691-691"];
m1_281 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="RequiredPropertyTestClass c1 = new RequiredPropertyTestClass()", span="693-693"];
m1_282 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.SerializeObject(c1),\r\n                ''Cannot write a null value for property 'Name'. Property requires a value. Path ''.'')", span="695-697"];
m1_283 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="RequiredPropertyTestClass c2 = new RequiredPropertyTestClass\r\n            {\r\n                Name = ''Name!''\r\n            }", span="699-702"];
m1_284 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c2)", span="704-704"];
m1_285 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Name'''':''''Name!''''}'', json)", span="706-706"];
m1_286 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{}''),\r\n                ''Required property 'Name' not found in JSON. Path '', line 1, position 2.'')", span="708-710"];
m1_287 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{''''Name'''':null}''),\r\n                ''Required property 'Name' expects a value but got null. Path '', line 1, position 13.'')", span="712-714"];
m1_288 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="RequiredPropertyTestClass c3 = JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{''''Name'''':''''Name!''''}'')", span="716-716"];
m1_289 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', c3.Name)", span="718-718"];
m1_290 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", span="691-691"];
m1_115 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_BadString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_BadString()", span="379-379"];
m1_116 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_BadString()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => JsonConvert.DeserializeObject<IList<bool>>(@''['pie']''),\r\n                @''Could not convert string to boolean: pie. Path '[0]', line 1, position 6.'')", span="381-383"];
m1_117 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_BadString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_BadString()", span="379-379"];
m1_3366 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="7776-7776"];
m1_3367 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="7778-7778"];
m1_3368 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="BsonWriter writer = new BsonWriter(ms)", span="7779-7779"];
m1_3372 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="byte[] data = ms.ToArray()", span="7784-7784"];
m1_3369 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="writer.WriteStartArray()", span="7780-7780"];
m1_3370 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="writer.WriteValue(''2000-01-02T03:04:05+06:00'')", span="7781-7781"];
m1_3371 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="writer.WriteEndArray()", span="7782-7782"];
m1_3373 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="BsonReader reader = new BsonReader(new MemoryStream(data))\r\n            {\r\n                ReadRootValueAsArray = true\r\n            }", span="7785-7788"];
m1_3374 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="JArray a = (JArray)JArray.ReadFrom(reader)", span="7790-7790"];
m1_3375 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="JValue v = (JValue)a[0]", span="7791-7791"];
m1_3377 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  ''''2000-01-02T03:04:05+06:00''''\r\n]'', a.ToString())", span="7794-7796"];
m1_3376 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="7793-7793"];
m1_3378 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="7776-7776"];
m1_4085 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", span="9514-9514"];
m1_4086 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonSerializerTest.cs", label="var c = new TestClassConvertable { Id = new ConvertibleId { Value = 1 }, X = 2 }", span="9516-9516"];
m1_4087 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonSerializerTest.cs", label="var s = JsonConvert.SerializeObject(c, Formatting.Indented)", span="9517-9517"];
m1_4088 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Id'''': ''''1'''',\r\n  ''''X'''': 2\r\n}'', s)", span="9518-9521"];
m1_4089 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", span="9514-9514"];
m1_3001 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="6991-6991"];
m1_3002 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="TestObject test = new TestObject(''Test'', new byte[] { 72, 63, 62, 71, 92, 55 })", span="6993-6993"];
m1_3003 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="6995-6995"];
m1_3008 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="serializer.Serialize(jsonWriter, test)", span="7002-7002"];
m1_3004 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="serializer.TypeNameHandling = TypeNameHandling.All", span="6996-6996"];
m1_3013 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="TestObject newObject = (TestObject)serializer.Deserialize(jsonReader)", span="7012-7012"];
m1_3005 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="byte[] objectBytes", span="6998-6998"];
m1_3006 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="MemoryStream stream = new MemoryStream()", span="6999-6999"];
m1_3007 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(new StreamWriter(stream))", span="7000-7000"];
m1_3010 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="objectBytes = stream.ToArray()", span="7005-7005"];
m1_3009 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="jsonWriter.Flush()", span="7003-7003"];
m1_3011 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="MemoryStream stream = new MemoryStream(objectBytes)", span="7008-7008"];
m1_3012 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="JsonReader jsonReader = new JsonTextReader(new StreamReader(stream))", span="7009-7009"];
m1_3014 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Test'', newObject.Name)", span="7014-7014"];
m1_3015 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEquivalent(new byte[] { 72, 63, 62, 71, 92, 55 }, newObject.Data)", span="7015-7015"];
m1_3016 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="6991-6991"];
m1_242 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", span="630-630"];
m1_243 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IList<object>>(''[1,''),\r\n                ''Unexpected end when deserializing array. Path '[0]', line 1, position 3.'')", span="632-634"];
m1_244 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IList<int>>(''[1,''),\r\n                ''Unexpected end when deserializing array. Path '[0]', line 1, position 3.'')", span="636-638"];
m1_245 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IList<int>>(''[1''),\r\n                ''Unexpected end when deserializing array. Path '[0]', line 1, position 2.'')", span="640-642"];
m1_246 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1,''),\r\n                ''Unexpected end when deserializing object. Path 'key', line 1, position 9.'')", span="644-646"];
m1_247 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1''),\r\n                ''Unexpected end when deserializing object. Path 'key', line 1, position 8.'')", span="648-650"];
m1_248 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1,''),\r\n                ''Unexpected end when deserializing object. Path 'key', line 1, position 9.'')", span="652-654"];
m1_249 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1''),\r\n                ''Unexpected end when deserializing object. Path 'key', line 1, position 8.'')", span="656-658"];
m1_250 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", span="630-630"];
m1_845 [cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", file="JsonSerializerTest.cs", label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", span="0-0"];
m1_3183 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter.NullableGuidCountingJsonTextWriter(System.IO.TextWriter)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter.NullableGuidCountingJsonTextWriter(System.IO.TextWriter)", span="7383-7383"];
m1_3185 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter.NullableGuidCountingJsonTextWriter(System.IO.TextWriter)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter.NullableGuidCountingJsonTextWriter(System.IO.TextWriter)", span="7383-7383"];
m1_616 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", span="1450-1450"];
m1_617 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="1452-1452"];
m1_618 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="1454-1454"];
m1_619 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.Binder = customBinder", span="1456-1456"];
m1_620 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(customBinder, settings.Binder)", span="1457-1457"];
m1_621 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.CheckAdditionalContent = true", span="1460-1460"];
m1_622 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, settings.CheckAdditionalContent)", span="1461-1461"];
m1_623 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="1463-1463"];
m1_624 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, settings.ConstructorHandling)", span="1464-1464"];
m1_625 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.Context = new StreamingContext(StreamingContextStates.Other)", span="1467-1467"];
m1_626 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), settings.Context)", span="1468-1468"];
m1_628 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.ContractResolver = resolver", span="1472-1472"];
m1_629 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(resolver, settings.ContractResolver)", span="1473-1473"];
m1_630 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.Converters.Add(new StringEnumConverter())", span="1475-1475"];
m1_631 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, settings.Converters.Count)", span="1476-1476"];
m1_632 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.Culture = new CultureInfo(''en-nz'')", span="1478-1478"];
m1_633 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''en-NZ'', settings.Culture.ToString())", span="1479-1479"];
m1_634 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.EqualityComparer = EqualityComparer<object>.Default", span="1481-1481"];
m1_635 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(EqualityComparer<object>.Default, settings.EqualityComparer)", span="1482-1482"];
m1_636 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="1484-1484"];
m1_637 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, settings.DateFormatHandling)", span="1485-1485"];
m1_638 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.DateFormatString = ''yyyy''", span="1487-1487"];
m1_639 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''yyyy'', settings.DateFormatString)", span="1488-1488"];
m1_640 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.DateParseHandling = DateParseHandling.None", span="1490-1490"];
m1_641 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateParseHandling.None, settings.DateParseHandling)", span="1491-1491"];
m1_642 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="1493-1493"];
m1_643 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateTimeZoneHandling.Utc, settings.DateTimeZoneHandling)", span="1494-1494"];
m1_644 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="1496-1496"];
m1_645 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, settings.DefaultValueHandling)", span="1497-1497"];
m1_646 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.FloatFormatHandling = FloatFormatHandling.Symbol", span="1499-1499"];
m1_647 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FloatFormatHandling.Symbol, settings.FloatFormatHandling)", span="1500-1500"];
m1_648 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.FloatParseHandling = FloatParseHandling.Decimal", span="1502-1502"];
m1_649 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FloatParseHandling.Decimal, settings.FloatParseHandling)", span="1503-1503"];
m1_650 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.Formatting = Formatting.Indented", span="1505-1505"];
m1_651 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(Formatting.Indented, settings.Formatting)", span="1506-1506"];
m1_652 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.MaxDepth = 9001", span="1508-1508"];
m1_653 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(9001, settings.MaxDepth)", span="1509-1509"];
m1_654 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.MissingMemberHandling = MissingMemberHandling.Error", span="1511-1511"];
m1_655 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(MissingMemberHandling.Error, settings.MissingMemberHandling)", span="1512-1512"];
m1_656 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.NullValueHandling = NullValueHandling.Ignore", span="1514-1514"];
m1_657 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(NullValueHandling.Ignore, settings.NullValueHandling)", span="1515-1515"];
m1_658 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.ObjectCreationHandling = ObjectCreationHandling.Replace", span="1517-1517"];
m1_659 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ObjectCreationHandling.Replace, settings.ObjectCreationHandling)", span="1518-1518"];
m1_660 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.PreserveReferencesHandling = PreserveReferencesHandling.All", span="1520-1520"];
m1_661 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(PreserveReferencesHandling.All, settings.PreserveReferencesHandling)", span="1521-1521"];
m1_662 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="1523-1523"];
m1_663 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ReferenceLoopHandling.Ignore, settings.ReferenceLoopHandling)", span="1524-1524"];
m1_665 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.ReferenceResolver = referenceResolver", span="1528-1528"];
m1_666 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(referenceResolver, settings.ReferenceResolver)", span="1529-1529"];
m1_667 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(referenceResolver, settings.ReferenceResolverProvider())", span="1531-1531"];
m1_668 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.ReferenceResolverProvider = () => referenceResolver", span="1533-1533"];
m1_669 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(referenceResolver, settings.ReferenceResolverProvider())", span="1534-1534"];
m1_670 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="1536-1536"];
m1_671 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, settings.StringEscapeHandling)", span="1537-1537"];
m1_673 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.TraceWriter = traceWriter", span="1540-1540"];
m1_674 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(traceWriter, settings.TraceWriter)", span="1541-1541"];
m1_675 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="1545-1545"];
m1_676 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FormatterAssemblyStyle.Full, settings.TypeNameAssemblyFormat)", span="1546-1546"];
m1_677 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TypeNameAssemblyFormatHandling.Full, settings.TypeNameAssemblyFormatHandling)", span="1549-1549"];
m1_678 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.TypeNameAssemblyFormatHandling = TypeNameAssemblyFormatHandling.Simple", span="1551-1551"];
m1_679 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FormatterAssemblyStyle.Simple, settings.TypeNameAssemblyFormat)", span="1553-1553"];
m1_680 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.TypeNameAssemblyFormatHandling = TypeNameAssemblyFormatHandling.Full", span="1557-1557"];
m1_681 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TypeNameAssemblyFormatHandling.Full, settings.TypeNameAssemblyFormatHandling)", span="1558-1558"];
m1_682 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.TypeNameHandling = TypeNameHandling.All", span="1560-1560"];
m1_683 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TypeNameHandling.All, settings.TypeNameHandling)", span="1561-1561"];
m1_627 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="1471-1471"];
m1_664 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="1526-1526"];
m1_672 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="1539-1539"];
m1_684 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", span="1450-1450"];
m1_202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", span="536-536"];
m1_203 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", file="JsonSerializerTest.cs", label="IgnoredProperty p = JsonConvert.DeserializeObject<IgnoredProperty>(''{'StringProp1':[1,2,3],'StringProp2':{}}'')", span="538-538"];
m1_204 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", file="JsonSerializerTest.cs", label="Assert.IsNull(p.StringProp1)", span="539-539"];
m1_205 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", file="JsonSerializerTest.cs", label="Assert.IsNull(p.StringProp2)", span="540-540"];
m1_206 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", span="536-536"];
m1_2374 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="5474-5474"];
m1_2375 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="XmlNodeTestObject testObject = new XmlNodeTestObject()", span="5476-5476"];
m1_2376 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="XmlDocument document = new XmlDocument()", span="5477-5477"];
m1_2378 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="testObject.Document = document", span="5479-5479"];
m1_2379 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="5481-5481"];
m1_2383 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testObject.Document.InnerXml, newTestObject.Document.InnerXml)", span="5490-5490"];
m1_2377 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="document.LoadXml(''<root>hehe, root</root>'')", span="5478-5478"];
m1_2380 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  }\r\n}''", span="5482-5486"];
m1_2381 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(expected, json)", span="5487-5487"];
m1_2382 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="XmlNodeTestObject newTestObject = JsonConvert.DeserializeObject<XmlNodeTestObject>(json)", span="5489-5489"];
m1_2384 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="5474-5474"];
m1_1094 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="2394-2394"];
m1_1095 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="string value = JsonConvert.SerializeObject(new GetOnlyPropertyClass())", span="2396-2396"];
m1_1096 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="GetOnlyPropertyClass c = JsonConvert.DeserializeObject<GetOnlyPropertyClass>(value)", span="2398-2398"];
m1_1097 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c.Field, ''Field'')", span="2400-2400"];
m1_1098 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c.GetOnlyProperty, ''GetOnlyProperty'')", span="2401-2401"];
m1_1099 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="2394-2394"];
m1_1081 [cluster="Unk.AreNotSame", file="JsonSerializerTest.cs", label="Entry Unk.AreNotSame", span=""];
m1_2898 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", span="6671-6671"];
m1_4194 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", span="9773-9773"];
m1_4195 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonSerializerTest.cs", label="ConstantTestClass c1 = new ConstantTestClass()", span="9775-9775"];
m1_4196 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="9777-9777"];
m1_4197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''MY_CONSTANT'''': ''''.''''\r\n}'', json)", span="9779-9781"];
m1_4198 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<ConstantTestClass>(json)", span="9783-9783"];
m1_4199 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", span="9773-9773"];
m1_366 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", span="917-917"];
m1_367 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", file="JsonSerializerTest.cs", label="this.Sections = new HashSet<FaqSection>()", span="919-919"];
m1_368 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", span="917-917"];
m1_370 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", span="961-961"];
m1_371 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs", label="FaqItem c = new FaqItem()\r\n            {\r\n                FaqId = 1,\r\n                Sections =\r\n                {\r\n                    new FaqSection()\r\n                }\r\n            }", span="963-970"];
m1_372 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="972-972"];
m1_373 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''FaqId'''': 1,\r\n  ''''Name'''': null,\r\n  ''''IsDeleted'''': false,\r\n  ''''FullSectionsProp'''': [\r\n    {}\r\n  ]\r\n}'', json)", span="974-981"];
m1_374 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs", label="FaqItem c2 = JsonConvert.DeserializeObject<FaqItem>(json)", span="983-983"];
m1_375 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c2.FaqId)", span="985-985"];
m1_376 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c2.Sections.Count)", span="986-986"];
m1_377 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", span="961-961"];
m1_4217 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", span="9838-9838"];
m1_4218 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", file="JsonSerializerTest.cs", label="DerivedProperty = derivedProperty", span="9841-9841"];
m1_4219 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", span="9838-9838"];
m1_1554 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="3302-3302"];
m1_1555 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''FirstName'''': ''''Bob''''\r\n}''", span="3306-3308"];
m1_1556 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="3310-3310"];
m1_1557 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="Assert.Fail()", span="3311-3311"];
m1_1558 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label=JsonSerializationException, span="3313-3313"];
m1_1559 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'LastName' not found in JSON. Path ''''))", span="3315-3315"];
m1_1560 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="3302-3302"];
m1_3866 [cluster="Newtonsoft.Json.Tests.TestObjects.AnswerFilterModel.AnswerFilterModel()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.AnswerFilterModel.AnswerFilterModel()", span="46-46"];
m1_4268 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.AttachmentReadConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.AttachmentReadConverter()", span="10021-10021"];
m1_2819 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="6527-6527"];
m1_2820 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs", label="ChildObject cc = new ChildObject\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="6529-6533"];
m1_2821 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(cc)", span="6535-6535"];
m1_2822 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''virtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="6536-6536"];
m1_2823 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="6527-6527"];
m1_1546 [cluster="string.StartsWith(string)", file="JsonSerializerTest.cs", label="Entry string.StartsWith(string)", span="0-0"];
m1_2739 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="6270-6270"];
m1_2740 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="EnumerableClass c = new EnumerableClass\r\n            {\r\n                Enumerable = new List<string> { ''One'', ''Two'', ''Three'' }\r\n            }", span="6272-6275"];
m1_2741 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="6277-6277"];
m1_2742 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Enumerable'''': [\r\n    ''''One'''',\r\n    ''''Two'''',\r\n    ''''Three''''\r\n  ]\r\n}'', json)", span="6279-6285"];
m1_2743 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="EnumerableClass c2 = JsonConvert.DeserializeObject<EnumerableClass>(json)", span="6287-6287"];
m1_2744 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''One'', c2.Enumerable.ElementAt(0))", span="6289-6289"];
m1_2745 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Two'', c2.Enumerable.ElementAt(1))", span="6290-6290"];
m1_2746 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Three'', c2.Enumerable.ElementAt(2))", span="6291-6291"];
m1_2747 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="6270-6270"];
m1_15 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="703-703"];
m1_4402 [cluster="System.Runtime.Serialization.SerializationInfo.GetChar(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetChar(string)", span="0-0"];
m1_3951 [cluster="System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", file="JsonSerializerTest.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", span="0-0"];
m1_609 [cluster="Newtonsoft.Json.Tests.TestObjects.IdReferenceResolver.IdReferenceResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.IdReferenceResolver.IdReferenceResolver()", span="31-31"];
m1_4234 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", span="9887-9887"];
m1_4235 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonException>(() => JsonConvert.SerializeObject(new ErroringTestClass()), ''Error creating 'Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+ErroringJsonConverter'.'')", span="9889-9889"];
m1_4236 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", span="9887-9887"];
m1_1502 [cluster="Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", span="29-29"];
m1_3855 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="8956-8956"];
m1_3856 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''1234567890.123456''))", span="8958-8958"];
m1_3857 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs", label="var settings = new JsonSerializerSettings()", span="8959-8959"];
m1_3859 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs", label="decimal? d = serialiser.Deserialize<decimal?>(reader)", span="8961-8961"];
m1_3858 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs", label="var serialiser = JsonSerializer.Create(settings)", span="8960-8960"];
m1_3860 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1234567890.123456m, d)", span="8963-8963"];
m1_3861 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="8956-8956"];
m1_4209 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", span="9823-9823"];
m1_4210 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs", label="var original = new DerivedConstructorType(''Base'', ''Derived'')", span="9825-9825"];
m1_4211 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs", label="var serializerSettings = new JsonSerializerSettings()", span="9827-9827"];
m1_4212 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs", label="var jsonCopy = JsonConvert.SerializeObject(original, serializerSettings)", span="9828-9828"];
m1_4213 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs", label="var clonedObject = JsonConvert.DeserializeObject<DerivedConstructorType>(jsonCopy, serializerSettings)", span="9830-9830"];
m1_4214 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Base'', clonedObject.BaseProperty)", span="9832-9832"];
m1_4215 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Derived'', clonedObject.DerivedProperty)", span="9833-9833"];
m1_4216 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", span="9823-9823"];
m1_3 [cluster="System.Collections.Generic.List<T>.List()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_4267 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.MailAddressReadConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.MailAddressReadConverter()", span="9987-9987"];
m1_84 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m1_4091 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.ConvertibleId()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.ConvertibleId()", span="9401-9401"];
m1_4365 [cluster="Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", span="10272-10272"];
m1_3038 [cluster="Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", span="10261-10261"];
m1_4366 [cluster="Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", file="JsonSerializerTest.cs", label="z = 3", span="10274-10274"];
m1_4367 [cluster="Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", span="10272-10272"];
m1_336 [cluster="System.Version.Version(int, int, int, int)", file="JsonSerializerTest.cs", label="Entry System.Version.Version(int, int, int, int)", span="0-0"];
m1_2014 [cluster="Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", span="31-31"];
m1_2410 [cluster="System.NotImplementedException.NotImplementedException()", file="JsonSerializerTest.cs", label="Entry System.NotImplementedException.NotImplementedException()", span="0-0"];
m1_921 [cluster="int.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m1_1198 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JsonSerializerTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0"];
m1_2540 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="5807-5807"];
m1_2541 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="string classRef = typeof(StringDictionary).FullName", span="5809-5809"];
m1_2542 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="StringDictionaryTestClass s1 = new StringDictionaryTestClass()\r\n            {\r\n                StringDictionaryProperty = new StringDictionary()\r\n                {\r\n                    { ''1'', ''One'' },\r\n                    { ''2'', ''II'' },\r\n                    { ''3'', ''3'' }\r\n                }\r\n            }", span="5811-5819"];
m1_2550 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<StringDictionaryTestClass>(json); }, ''Cannot create and populate list type '' + classRef + ''. Path 'StringDictionaryProperty', line 2, position 31.'')", span="5835-5835"];
m1_2543 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(s1, Formatting.Indented)", span="5821-5821"];
m1_2544 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="s1.StringDictionaryProperty is IDictionary<string, string>", span="5824-5824"];
m1_2545 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="StringDictionaryTestClass d = JsonConvert.DeserializeObject<StringDictionaryTestClass>(json)", span="5826-5826"];
m1_2546 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, d.StringDictionaryProperty.Count)", span="5828-5828"];
m1_2547 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''One'', d.StringDictionaryProperty[''1''])", span="5829-5829"];
m1_2548 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''II'', d.StringDictionaryProperty[''2''])", span="5830-5830"];
m1_2549 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''3'', d.StringDictionaryProperty[''3''])", span="5831-5831"];
m1_2551 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="5807-5807"];
m1_207 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", span="556-556"];
m1_208 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.SerializeObject(new Binding_DisallowNull()); }, ''Cannot write a null value for property 'RequiredProperty'. Property requires a non-null value. Path ''.'')", span="558-558"];
m1_209 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", span="556-556"];
m1_4345 [cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", span="10164-10164"];
m1_4346 [cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonSerializerTest.cs", label="Value = value", span="10166-10166"];
m1_4347 [cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonSerializerTest.cs", label="Constructor = ''Public Parameterized''", span="10167-10167"];
m1_4348 [cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", span="10164-10164"];
m1_4079 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", span="9496-9496"];
m1_4080 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="9498-9498"];
m1_4081 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", span="9496-9496"];
m1_1337 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="2900-2900"];
m1_1338 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(StringComparison.CurrentCultureIgnoreCase)", span="2902-2902"];
m1_1339 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''1'', json)", span="2903-2903"];
m1_1340 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="StringComparison s = JsonConvert.DeserializeObject<StringComparison>(json)", span="2905-2905"];
m1_1341 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(StringComparison.CurrentCultureIgnoreCase, s)", span="2906-2906"];
m1_1342 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="2900-2900"];
m1_2575 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="JsonSerializerTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0"];
m1_1106 [cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", span="27-27"];
m1_3638 [cluster="System.Uri.Uri(string, System.UriKind)", file="JsonSerializerTest.cs", label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0"];
m1_327 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", span="785-785"];
m1_328 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs", label="Version v = new Version(1, 2, 3, 4)", span="787-787"];
m1_329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs", label="IgnoredPropertiesTestClass c1 = new IgnoredPropertiesTestClass\r\n            {\r\n                IgnoredProperty = v,\r\n                IgnoredList = new List<Version>\r\n                {\r\n                    v\r\n                },\r\n                IgnoredDictionary = new Dictionary<string, Version>\r\n                {\r\n                    { ''Value'', v }\r\n                },\r\n                Name = ''Name!''\r\n            }", span="789-801"];
m1_330 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new IgnoredPropertiesContractResolver()\r\n            })", span="803-806"];
m1_331 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!''''\r\n}'', json)", span="808-810"];
m1_332 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs", label="string deserializeJson = @''{\r\n  ''''IgnoredList'''': [\r\n    {\r\n      ''''Major'''': 1,\r\n      ''''Minor'''': 2,\r\n      ''''Build'''': 3,\r\n      ''''Revision'''': 4,\r\n      ''''MajorRevision'''': 0,\r\n      ''''MinorRevision'''': 4\r\n    }\r\n  ],\r\n  ''''IgnoredDictionary'''': {\r\n    ''''Value'''': {\r\n      ''''Major'''': 1,\r\n      ''''Minor'''': 2,\r\n      ''''Build'''': 3,\r\n      ''''Revision'''': 4,\r\n      ''''MajorRevision'''': 0,\r\n      ''''MinorRevision'''': 4\r\n    }\r\n  },\r\n  ''''Name'''': ''''Name!''''\r\n}''", span="812-834"];
m1_333 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs", label="IgnoredPropertiesTestClass c2 = JsonConvert.DeserializeObject<IgnoredPropertiesTestClass>(deserializeJson, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new IgnoredPropertiesContractResolver()\r\n            })", span="836-839"];
m1_334 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', c2.Name)", span="841-841"];
m1_335 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", span="785-785"];
m1_1626 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="3489-3489"];
m1_1627 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''firstName'''': ''''firstName'''',\r\n  ''''FirstName'''': ''''FirstName'''',\r\n  ''''LastName'''': ''''LastName'''',\r\n  ''''lastName'''': ''''lastName'''',\r\n}''", span="3491-3496"];
m1_1628 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="PropertyCase o = JsonConvert.DeserializeObject<PropertyCase>(json)", span="3498-3498"];
m1_1629 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(o)", span="3499-3499"];
m1_1630 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''firstName'', o.firstName)", span="3501-3501"];
m1_1631 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''FirstName'', o.FirstName)", span="3502-3502"];
m1_1632 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''LastName'', o.LastName)", span="3503-3503"];
m1_1633 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''lastName'', o.lastName)", span="3504-3504"];
m1_1634 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="3489-3489"];
m1_1569 [cluster="Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", span="27-27"];
m1_3190 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", span="1343-1343"];
m1_3494 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="8046-8046"];
m1_3495 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonSerializerTest.cs", label="string s = (string)new JsonSerializer().Deserialize(new JsonTextReader(new StringReader('''''')))", span="8048-8048"];
m1_3496 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonSerializerTest.cs", label="Assert.AreEqual('''', s)", span="8049-8049"];
m1_3497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="8046-8046"];
m1_3689 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", span="8517-8517"];
m1_3690 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs", label="string json = @''[\r\n        1,\r\n        null\r\n      ]''", span="8519-8522"];
m1_3691 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs", label="var l = JsonConvert.DeserializeObject<IReadOnlyList<int?>>(json)", span="8524-8524"];
m1_3692 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, l[0])", span="8526-8526"];
m1_3693 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, l[1])", span="8527-8527"];
m1_3694 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", span="8517-8517"];
m1_1165 [cluster="System.Text.Encoding.GetBytes(string)", file="JsonSerializerTest.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m1_75 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="329-329"];
m1_831 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", span="1821-1821"];
m1_832 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonSerializerTest.cs", label="object o = JsonConvert.DeserializeObject(''100000000000000000000000000000000000000.0'')", span="1823-1823"];
m1_833 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(double), o)", span="1825-1825"];
m1_834 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonSerializerTest.cs", label="Assert.IsTrue(MathUtils.ApproxEquals(1E+38, (double)o))", span="1827-1827"];
m1_835 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", span="1821-1821"];
m1_3540 [cluster="Newtonsoft.Json.Tests.TestObjects.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", span="30-30"];
m1_4409 [cluster="System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", span="0-0"];
m1_459 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericProperty<T>.ResponseWithNewGenericProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericProperty<T>.ResponseWithNewGenericProperty()", span="1155-1155"];
m1_445 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassVirtual.ChildClassVirtual()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassVirtual.ChildClassVirtual()", span="1141-1141"];
m1_3658 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="8419-8419"];
m1_3659 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonSerializerTest.cs", label="string json =\r\n                JsonConvert.SerializeObject(new KeyValuePair<int, string>(123, ''test value''), Formatting.Indented, new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n                })", span="8421-8425"];
m1_3660 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''key'''': 123,\r\n  ''''value'''': ''''test value''''\r\n}'', json)", span="8427-8430"];
m1_3661 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="8419-8419"];
m1_2372 [cluster="Unk.Parse", file="JsonSerializerTest.cs", label="Entry Unk.Parse", span=""];
m1_3062 [cluster="System.Globalization.CultureInfo.CreateSpecificCulture(string)", file="JsonSerializerTest.cs", label="Entry System.Globalization.CultureInfo.CreateSpecificCulture(string)", span="0-0"];
m1_3923 [cluster="System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="JsonSerializerTest.cs", label="Entry System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", span="0-0"];
m1_121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_EmptyString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_EmptyString()", span="387-387"];
m1_122 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_EmptyString()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IList<bool>>(@''['']''),\r\n                @''Error converting value {null} to type 'System.Boolean'. Path '[0]', line 1, position 3.'')", span="389-391"];
m1_123 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_EmptyString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_EmptyString()", span="387-387"];
m1_3063 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="7130-7130"];
m1_3064 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs", label="IList<decimal> d1 = new List<decimal> { 1.1m }", span="7132-7132"];
m1_3065 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(d1)", span="7134-7134"];
m1_3067 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(d1.Count, d2.Count)", span="7138-7138"];
m1_3068 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(d1[0], d2[0])", span="7139-7139"];
m1_3066 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs", label="IList<decimal> d2 = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="7136-7136"];
m1_3069 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="7130-7130"];
m1_1899 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="4115-4115"];
m1_1900 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="4117-4117"];
m1_1901 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<InvalidCastException>(\r\n                () => { JsonConvert.DeserializeObject<JObject>(json); },\r\n                new[]\r\n                {\r\n                    ''Unable to cast object of type 'Newtonsoft.Json.Linq.JArray' to type 'Newtonsoft.Json.Linq.JObject'.'',\r\n                    ''Cannot cast from source type to destination type.'' // mono\r\n                })", span="4119-4125"];
m1_1902 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="4115-4115"];
m1_2777 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", span="6346-6346"];
m1_3203 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="7433-7433"];
m1_3204 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs", label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="7435-7435"];
m1_3205 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs", label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="7436-7436"];
m1_3206 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual('''', dict[''k1''])", span="7438-7438"];
m1_3207 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''v2'', dict[''k2''])", span="7439-7439"];
m1_3208 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="7433-7433"];
m1_3653 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="8407-8407"];
m1_3654 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs", label="KeyValuePair<int, string> result =\r\n                JsonConvert.DeserializeObject<KeyValuePair<int, string>>(\r\n                    ''{key: 123, \''VALUE\'': \''test value\''}''\r\n                )", span="8409-8412"];
m1_3655 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123, result.Key)", span="8414-8414"];
m1_3656 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''test value'', result.Value)", span="8415-8415"];
m1_3657 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="8407-8407"];
m1_3952 [cluster="System.ArgumentException.ArgumentException(string)", file="JsonSerializerTest.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m1_4269 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.EncodingReadConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.EncodingReadConverter()", span="10056-10056"];
m1_400 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", span="1062-1062"];
m1_401 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonSerializerTest.cs", label="string json = @''{\r\n    ParentId: 1,\r\n    ChildId: 333333333333333333333333333333333333333\r\n}''", span="1064-1067"];
m1_402 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonSerializerTest.cs", label="Link l = JsonConvert.DeserializeObject<Link>(json, new JsonSerializerSettings\r\n            {\r\n                Error = (s, a) => a.ErrorContext.Handled = true\r\n            })", span="1069-1072"];
m1_403 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, l.ChildId)", span="1074-1074"];
m1_404 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", span="1062-1062"];
m1_1489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="3161-3161"];
m1_1490 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="UserNullable userNullablle = new UserNullable\r\n            {\r\n                Id = new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''),\r\n                FName = ''FirstValue'',\r\n                LName = ''LastValue'',\r\n                RoleId = 5,\r\n                NullableRoleId = 6,\r\n                NullRoleId = null,\r\n                Active = true\r\n            }", span="3163-3172"];
m1_1491 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(userNullablle)", span="3174-3174"];
m1_1492 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Id'''':''''ad6205e8-0df4-465d-aea6-8ba18e93a7e7'''',''''FName'''':''''FirstValue'''',''''LName'''':''''LastValue'''',''''RoleId'''':5,''''NullableRoleId'''':6,''''NullRoleId'''':null,''''Active'''':true}'', json)", span="3176-3176"];
m1_1493 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="UserNullable userNullablleDeserialized = JsonConvert.DeserializeObject<UserNullable>(json)", span="3178-3178"];
m1_1494 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''), userNullablleDeserialized.Id)", span="3180-3180"];
m1_1495 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''FirstValue'', userNullablleDeserialized.FName)", span="3181-3181"];
m1_1496 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''LastValue'', userNullablleDeserialized.LName)", span="3182-3182"];
m1_1497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, userNullablleDeserialized.RoleId)", span="3183-3183"];
m1_1498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(6, userNullablleDeserialized.NullableRoleId)", span="3184-3184"];
m1_1499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, userNullablleDeserialized.NullRoleId)", span="3185-3185"];
m1_1500 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, userNullablleDeserialized.Active)", span="3186-3186"];
m1_1501 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="3161-3161"];
m1_3343 [cluster="Unk.ToKnownColor", file="JsonSerializerTest.cs", label="Entry Unk.ToKnownColor", span=""];
m1_880 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Bar1.Bar1()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Bar1.Bar1()", span="1874-1874"];
m1_4441 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", span="0-0"];
m1_3021 [cluster="Unk.AreEquivalent", file="JsonSerializerTest.cs", label="Entry Unk.AreEquivalent", span=""];
m1_227 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolveDictionaryKey(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolveDictionaryKey(string)", span="585-585"];
m1_228 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolveDictionaryKey(string)", file="JsonSerializerTest.cs", label="return dictionaryKey;", span="587-587"];
m1_229 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolveDictionaryKey(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolveDictionaryKey(string)", span="585-585"];
m1_2421 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="5568-5568"];
m1_2422 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="5570-5570"];
m1_2423 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="5568-5568"];
m1_173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", span="490-490"];
m1_174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonSerializerTest.cs", label="Bars = new List<string>()", span="492-492"];
m1_175 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonSerializerTest.cs", label="bars != null", span="493-493"];
m1_176 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonSerializerTest.cs", label="Bars.AddRange(bars)", span="495-495"];
m1_177 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", span="490-490"];
m1_2387 [cluster="Unk.LoadXml", file="JsonSerializerTest.cs", label="Entry Unk.LoadXml", span=""];
m1_2405 [cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="917-917"];
m1_3097 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", span="7213-7213"];
m1_3098 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+HasByteArray, Newtonsoft.Json.Tests'''',\r\n  ''''EncryptedPassword'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''cGFzc3dvcmQ=''''\r\n  },\r\n  ''''Pie'''': null\r\n}''", span="7215-7222"];
m1_3099 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", file="JsonSerializerTest.cs", label="HasByteArray value = JsonConvert.DeserializeObject<HasByteArray>(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n            })", span="7223-7226"];
m1_3100 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(value.EncryptedPassword)", span="7228-7228"];
m1_3101 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEquivalent(Convert.FromBase64String(''cGFzc3dvcmQ=''), value.EncryptedPassword)", span="7229-7229"];
m1_3102 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", span="7213-7213"];
m1_4090 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestClassConvertable.TestClassConvertable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestClassConvertable.TestClassConvertable()", span="9507-9507"];
m1_127 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", span="396-396"];
m1_128 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="IList<bool> l = JsonConvert.DeserializeObject<IList<bool>>(@''[\r\n  1,\r\n  0,\r\n  1.1,\r\n  0.0,\r\n  0.000000000001,\r\n  9999999999,\r\n  -9999999999,\r\n  9999999999999999999999999999999999999999999999999999999999999999999999,\r\n  -9999999999999999999999999999999999999999999999999999999999999999999999,\r\n  'true',\r\n  'TRUE',\r\n  'false',\r\n  'FALSE'\r\n]'')", span="398-412"];
m1_129 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="int i = 0", span="414-414"];
m1_130 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="415-415"];
m1_131 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(false, l[i++])", span="416-416"];
m1_132 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="417-417"];
m1_133 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(false, l[i++])", span="418-418"];
m1_134 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="419-419"];
m1_135 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="420-420"];
m1_136 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="421-421"];
m1_137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="422-422"];
m1_138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="423-423"];
m1_139 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="424-424"];
m1_140 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="425-425"];
m1_141 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(false, l[i++])", span="426-426"];
m1_142 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(false, l[i++])", span="427-427"];
m1_143 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", span="396-396"];
m1_4259 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableLongTestClass.NullableLongTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableLongTestClass.NullableLongTestClass()", span="9926-9926"];
m1_2396 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", span="5525-5525"];
m1_1192 [cluster="System.IO.StreamReader.ReadToEnd()", file="JsonSerializerTest.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m1_2455 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="5620-5620"];
m1_2456 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="var reference = new Dictionary<string, object>()", span="5622-5622"];
m1_2457 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="reference.Add(''$ref'', null)", span="5623-5623"];
m1_2458 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="reference.Add(''$id'', null)", span="5624-5624"];
m1_2459 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="reference.Add(''blah'', ''blah!'')", span="5625-5625"];
m1_2463 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="child.Add(''Father'', reference)", span="5630-5630"];
m1_2460 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="var child = new Dictionary<string, object>()", span="5627-5627"];
m1_2461 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="child.Add(''_id'', 2)", span="5628-5628"];
m1_2462 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="child.Add(''Name'', ''Isabell'')", span="5629-5629"];
m1_2464 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(child)", span="5632-5632"];
m1_2465 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''_id'''':2,''''Name'''':''''Isabell'''',''''Father'''':{''''$ref'''':null,''''$id'''':null,''''blah'''':''''blah!''''}}'', json)", span="5634-5634"];
m1_2466 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="Dictionary<string, object> result = JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="5636-5636"];
m1_2467 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, result.Count)", span="5638-5638"];
m1_2468 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, ((JObject)result[''Father'']).Count)", span="5639-5639"];
m1_2469 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''blah!'', (string)((JObject)result[''Father''])[''blah''])", span="5640-5640"];
m1_2470 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="5620-5620"];
m1_241 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="618-618"];
m1_4319 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParametrizedConstructor_IncompleteJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParametrizedConstructor_IncompleteJson()", span="10082-10082"];
m1_4320 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParametrizedConstructor_IncompleteJson()", file="JsonSerializerTest.cs", label="string s = @''{''''text'''':''''s'''',''''cursorPosition'''':189,''''dataSource'''':''''json_northwind'''',''", span="10084-10084"];
m1_4321 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParametrizedConstructor_IncompleteJson()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<CompletionDataRequest>(s), ''Unexpected end when deserializing object. Path 'dataSource', line 1, position 63.'')", span="10086-10086"];
m1_4322 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParametrizedConstructor_IncompleteJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParametrizedConstructor_IncompleteJson()", span="10082-10082"];
m1_2789 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", span="6407-6407"];
m1_2790 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="JsonSerializerTest.cs", label="B = 2", span="6409-6409"];
m1_2791 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", span="6407-6407"];
m1_1852 [cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", span="36-36"];
m1_2904 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", span="6758-6758"];
m1_2905 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonSerializerTest.cs", label="_readonlyString = ''default!''", span="6760-6760"];
m1_2906 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", span="6758-6758"];
m1_2169 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", span="4851-4851"];
m1_2482 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="5670-5670"];
m1_2483 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs", label="string json = @''{'value':9.9}''", span="5672-5672"];
m1_2484 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs", label="var dic = JsonConvert.DeserializeObject<IDictionary<string, object>>(\r\n                json, new JsonSerializerSettings\r\n                {\r\n                    FloatParseHandling = FloatParseHandling.Decimal\r\n                })", span="5674-5678"];
m1_2485 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(decimal), dic[''value''].GetType())", span="5680-5680"];
m1_2486 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(9.9m, dic[''value''])", span="5681-5681"];
m1_2487 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="5670-5670"];
m1_3052 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="7103-7103"];
m1_3053 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="CultureInfo initialCulture = Thread.CurrentThread.CurrentCulture", span="7105-7105"];
m1_3054 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="CultureInfo testCulture = CultureInfo.CreateSpecificCulture(''nb-NO'')", span="7109-7109"];
m1_3055 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="Thread.CurrentThread.CurrentCulture = testCulture", span="7111-7111"];
m1_3056 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="Thread.CurrentThread.CurrentUICulture = testCulture", span="7112-7112"];
m1_3057 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="string json = @''{ 'Quantity': '1.5', 'OptionalQuantity': '2.2' }''", span="7114-7114"];
m1_3058 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="DecimalTestClass c = JsonConvert.DeserializeObject<DecimalTestClass>(json)", span="7116-7116"];
m1_3059 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1.5m, c.Quantity)", span="7118-7118"];
m1_3060 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2.2d, c.OptionalQuantity)", span="7119-7119"];
m1_3061 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="7103-7103"];
m1_2831 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="6570-6570"];
m1_2832 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs", label="ImplementInterfaceObject cc = new ImplementInterfaceObject\r\n            {\r\n                InterfaceMember = new DateTime(2010, 12, 31, 0, 0, 0, DateTimeKind.Utc),\r\n                NewMember = ''NewMember!''\r\n            }", span="6572-6576"];
m1_2833 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="6578-6578"];
m1_2834 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''virtualMember'''': ''''2010-12-31T00:00:00Z'''',\r\n  ''''newMemberWithProperty'''': null\r\n}'', result)", span="6580-6583"];
m1_2835 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="6570-6570"];
m1_3525 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", span="205-205"];
m1_3927 [cluster="System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="JsonSerializerTest.cs", label="Entry System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", span="0-0"];
m1_4403 [cluster="System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", span="0-0"];
m1_1582 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="3352-3352"];
m1_1583 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''name'''': ''''1600 Amphitheatre Parkway, Mountain View, CA, USA'''',\r\n  ''''Status'''': {\r\n    ''''code'''': 200,\r\n    ''''request'''': ''''geocode''''\r\n  },\r\n  ''''Placemark'''': [\r\n    {\r\n      ''''address'''': ''''1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA'''',\r\n      ''''AddressDetails'''': {\r\n        ''''Country'''': {\r\n          ''''CountryNameCode'''': ''''US'''',\r\n          ''''AdministrativeArea'''': {\r\n            ''''AdministrativeAreaName'''': ''''CA'''',\r\n            ''''SubAdministrativeArea'''': {\r\n              ''''SubAdministrativeAreaName'''': ''''Santa Clara'''',\r\n              ''''Locality'''': {\r\n                ''''LocalityName'''': ''''Mountain View'''',\r\n                ''''Thoroughfare'''': {\r\n                  ''''ThoroughfareName'''': ''''1600 Amphitheatre Pkwy''''\r\n                },\r\n                ''''PostalCode'''': {\r\n                  ''''PostalCodeNumber'''': ''''94043''''\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        ''''Accuracy'''': 8\r\n      },\r\n      ''''Point'''': {\r\n        ''''coordinates'''': [-122.083739, 37.423021, 0]\r\n      }\r\n    }\r\n  ]\r\n}''", span="3354-3389"];
m1_1584 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs", label="GoogleMapGeocoderStructure jsonGoogleMapGeocoder = JsonConvert.DeserializeObject<GoogleMapGeocoderStructure>(json)", span="3391-3391"];
m1_1585 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="3352-3352"];
m1_1818 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="3985-3985"];
m1_1819 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="string json = @''{''''Operation'''':''''1'''',''''RoleName'''':''''Admin'''',''''Direction'''':''''0''''}''", span="3987-3987"];
m1_1820 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="RoleTransfer r = JsonConvert.DeserializeObject<RoleTransfer>(json)", span="3989-3989"];
m1_1821 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(RoleTransferOperation.Second, r.Operation)", span="3991-3991"];
m1_1822 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Admin'', r.RoleName)", span="3992-3992"];
m1_1823 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(RoleTransferDirection.First, r.Direction)", span="3993-3993"];
m1_1824 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="3985-3985"];
m1_2879 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", span="6691-6691"];
m1_2880 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="6693-6693"];
m1_2881 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", span="6691-6691"];
m1_1005 [cluster="Unk.WriteObject", file="JsonSerializerTest.cs", label="Entry Unk.WriteObject", span=""];
m1_2207 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", span="0-0"];
m1_2214 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="4986-4986"];
m1_2215 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="return ((IDictionary<string, T>)_innerDictionary).Remove(item);", span="4988-4988"];
m1_2216 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="4986-4986"];
m1_3909 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey_Custom()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey_Custom()", span="9149-9149"];
m1_3910 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey_Custom()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(\r\n                new Dictionary<TypeConverterSize, TypeConverterSize> { { new TypeConverterSize(1, 2), new TypeConverterSize(3, 4) } }\r\n            )", span="9151-9153"];
m1_3911 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey_Custom()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''1, 2'''':''''3, 4''''}'', json)", span="9155-9155"];
m1_3912 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey_Custom()", file="JsonSerializerTest.cs", label="Dictionary<TypeConverterSize, TypeConverterSize> d = JsonConvert.DeserializeObject<Dictionary<TypeConverterSize, TypeConverterSize>>(json)", span="9157-9157"];
m1_3913 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey_Custom()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new TypeConverterSize(1, 2), d.Keys.First())", span="9159-9159"];
m1_3914 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey_Custom()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new TypeConverterSize(3, 4), d.Values.First())", span="9160-9160"];
m1_3915 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey_Custom()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey_Custom()", span="9149-9149"];
m1_233 [cluster="string.ToUpper(System.Globalization.CultureInfo)", file="JsonSerializerTest.cs", label="Entry string.ToUpper(System.Globalization.CultureInfo)", span="0-0"];
m1_1953 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="157-157"];
m1_1657 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="3570-3570"];
m1_1658 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="SubKlass i = new SubKlass(''my subprop'')", span="3572-3572"];
m1_1659 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="i.SuperProp = ''overrided superprop''", span="3573-3573"];
m1_1660 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(i)", span="3575-3575"];
m1_1661 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="3576-3576"];
m1_1662 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json)", span="3578-3578"];
m1_1663 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="string newJson = JsonConvert.SerializeObject(ii)", span="3580-3580"];
m1_1664 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="3581-3581"];
m1_1665 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="3570-3570"];
m1_2062 [cluster="Newtonsoft.Json.Tests.TestObjects.Organization.PersonPropertyClass.PersonPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Organization.PersonPropertyClass.PersonPropertyClass()", span="31-31"];
m1_1052 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m1_65 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MainClass.MainClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MainClass.MainClass()", span="243-243"];
m1_469 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", span="1223-1223"];
m1_470 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs", label="var input = new ResponseWithNewGenericPropertyOverride<int>()\r\n            {\r\n                Message = ''Trying out integer as type parameter'',\r\n                Data = 25,\r\n                Result = ''This should be fine''\r\n            }", span="1225-1230"];
m1_471 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(input)", span="1232-1232"];
m1_473 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Data, deserialized.Data)", span="1235-1235"];
m1_474 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Message, deserialized.Message)", span="1236-1236"];
m1_475 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Result, deserialized.Result)", span="1237-1237"];
m1_472 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs", label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericPropertyOverride<int>>(json)", span="1233-1233"];
m1_476 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", span="1223-1223"];
m1_689 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", span="1565-1565"];
m1_690 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="JsonSerializerProxy serializerProxy = new JsonSerializerProxy(new JsonSerializerInternalReader(new JsonSerializer()))", span="1567-1567"];
m1_691 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="1569-1569"];
m1_692 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.Binder = customBinder", span="1571-1571"];
m1_693 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(customBinder, serializerProxy.Binder)", span="1572-1572"];
m1_694 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.IsInstanceOf(typeof(SerializationBinderAdapter), serializerProxy.SerializationBinder)", span="1575-1575"];
m1_695 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.SerializationBinder = customBinder", span="1577-1577"];
m1_696 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(customBinder, serializerProxy.SerializationBinder)", span="1578-1578"];
m1_697 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<InvalidOperationException>(() =>\r\n            {\r\n#pragma warning disable CS0618 // Type or member is obsolete\r\n                var serializationBinder = serializerProxy.Binder;\r\n#pragma warning restore CS0618 // Type or member is obsolete\r\n                serializationBinder.ToString();\r\n            }, ''Cannot get SerializationBinder because an ISerializationBinder was previously set.'')", span="1580-1586"];
m1_698 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.CheckAdditionalContent = true", span="1588-1588"];
m1_699 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, serializerProxy.CheckAdditionalContent)", span="1589-1589"];
m1_700 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="1591-1591"];
m1_701 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, serializerProxy.ConstructorHandling)", span="1592-1592"];
m1_702 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.Context = new StreamingContext(StreamingContextStates.Other)", span="1595-1595"];
m1_703 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), serializerProxy.Context)", span="1596-1596"];
m1_705 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.ContractResolver = resolver", span="1600-1600"];
m1_706 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(resolver, serializerProxy.ContractResolver)", span="1601-1601"];
m1_707 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.Converters.Add(new StringEnumConverter())", span="1603-1603"];
m1_708 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, serializerProxy.Converters.Count)", span="1604-1604"];
m1_709 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.Culture = new CultureInfo(''en-nz'')", span="1606-1606"];
m1_710 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''en-NZ'', serializerProxy.Culture.ToString())", span="1607-1607"];
m1_711 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.EqualityComparer = EqualityComparer<object>.Default", span="1609-1609"];
m1_712 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(EqualityComparer<object>.Default, serializerProxy.EqualityComparer)", span="1610-1610"];
m1_713 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="1612-1612"];
m1_714 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, serializerProxy.DateFormatHandling)", span="1613-1613"];
m1_715 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.DateFormatString = ''yyyy''", span="1615-1615"];
m1_716 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''yyyy'', serializerProxy.DateFormatString)", span="1616-1616"];
m1_717 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.DateParseHandling = DateParseHandling.None", span="1618-1618"];
m1_718 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateParseHandling.None, serializerProxy.DateParseHandling)", span="1619-1619"];
m1_719 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="1621-1621"];
m1_720 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateTimeZoneHandling.Utc, serializerProxy.DateTimeZoneHandling)", span="1622-1622"];
m1_721 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="1624-1624"];
m1_722 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, serializerProxy.DefaultValueHandling)", span="1625-1625"];
m1_723 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.FloatFormatHandling = FloatFormatHandling.Symbol", span="1627-1627"];
m1_724 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FloatFormatHandling.Symbol, serializerProxy.FloatFormatHandling)", span="1628-1628"];
m1_725 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.FloatParseHandling = FloatParseHandling.Decimal", span="1630-1630"];
m1_726 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FloatParseHandling.Decimal, serializerProxy.FloatParseHandling)", span="1631-1631"];
m1_727 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.Formatting = Formatting.Indented", span="1633-1633"];
m1_728 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(Formatting.Indented, serializerProxy.Formatting)", span="1634-1634"];
m1_729 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.MaxDepth = 9001", span="1636-1636"];
m1_730 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(9001, serializerProxy.MaxDepth)", span="1637-1637"];
m1_731 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.MissingMemberHandling = MissingMemberHandling.Error", span="1639-1639"];
m1_732 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(MissingMemberHandling.Error, serializerProxy.MissingMemberHandling)", span="1640-1640"];
m1_733 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.NullValueHandling = NullValueHandling.Ignore", span="1642-1642"];
m1_734 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(NullValueHandling.Ignore, serializerProxy.NullValueHandling)", span="1643-1643"];
m1_735 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.ObjectCreationHandling = ObjectCreationHandling.Replace", span="1645-1645"];
m1_736 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ObjectCreationHandling.Replace, serializerProxy.ObjectCreationHandling)", span="1646-1646"];
m1_737 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.PreserveReferencesHandling = PreserveReferencesHandling.All", span="1648-1648"];
m1_738 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(PreserveReferencesHandling.All, serializerProxy.PreserveReferencesHandling)", span="1649-1649"];
m1_739 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="1651-1651"];
m1_740 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ReferenceLoopHandling.Ignore, serializerProxy.ReferenceLoopHandling)", span="1652-1652"];
m1_742 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.ReferenceResolver = referenceResolver", span="1655-1655"];
m1_743 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(referenceResolver, serializerProxy.ReferenceResolver)", span="1656-1656"];
m1_744 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="1658-1658"];
m1_745 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, serializerProxy.StringEscapeHandling)", span="1659-1659"];
m1_747 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.TraceWriter = traceWriter", span="1662-1662"];
m1_748 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(traceWriter, serializerProxy.TraceWriter)", span="1663-1663"];
m1_749 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="1667-1667"];
m1_750 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FormatterAssemblyStyle.Full, serializerProxy.TypeNameAssemblyFormat)", span="1668-1668"];
m1_751 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TypeNameAssemblyFormatHandling.Full, serializerProxy.TypeNameAssemblyFormatHandling)", span="1671-1671"];
m1_752 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.TypeNameAssemblyFormatHandling = TypeNameAssemblyFormatHandling.Simple", span="1673-1673"];
m1_753 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FormatterAssemblyStyle.Simple, serializerProxy.TypeNameAssemblyFormat)", span="1675-1675"];
m1_754 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.TypeNameAssemblyFormatHandling = TypeNameAssemblyFormatHandling.Full", span="1679-1679"];
m1_755 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TypeNameAssemblyFormatHandling.Full, serializerProxy.TypeNameAssemblyFormatHandling)", span="1680-1680"];
m1_756 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.TypeNameHandling = TypeNameHandling.All", span="1682-1682"];
m1_757 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TypeNameHandling.All, serializerProxy.TypeNameHandling)", span="1683-1683"];
m1_704 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="1599-1599"];
m1_741 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="1654-1654"];
m1_746 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="1661-1661"];
m1_758 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", span="1565-1565"];
m1_1981 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="4269-4269"];
m1_1982 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="ConstructorReadonlyFields c1 = new ConstructorReadonlyFields(''String!'', int.MaxValue)", span="4271-4271"];
m1_1983 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="4272-4272"];
m1_1984 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''A'''': ''''String!'''',\r\n  ''''B'''': 2147483647\r\n}'', json)", span="4273-4276"];
m1_1985 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="ConstructorReadonlyFields c2 = JsonConvert.DeserializeObject<ConstructorReadonlyFields>(json)", span="4278-4278"];
m1_1986 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''String!'', c2.A)", span="4279-4279"];
m1_1987 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, c2.B)", span="4280-4280"];
m1_1988 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="4269-4269"];
m1_1115 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="2428-2428"];
m1_1116 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="string json = @''{\r\n    results:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://www.google.com/'''',\r\n                url : ''''http://www.google.com/'''',\r\n                visibleUrl : ''''www.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:zhool8dxBV4J:www.google.com'''',\r\n                title : ''''Google'''',\r\n                titleNoFormatting : ''''Google'''',\r\n                content : ''''Enables users to search the Web, Usenet, and \r\nimages. Features include PageRank,   caching and translation of \r\nresults, and an option to find similar pages.''''\r\n            },\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://news.google.com/'''',\r\n                url : ''''http://news.google.com/'''',\r\n                visibleUrl : ''''news.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:Va_XShOz_twJ:news.google.com'''',\r\n                title : ''''Google News'''',\r\n                titleNoFormatting : ''''Google News'''',\r\n                content : ''''Aggregated headlines and a search engine of many of the world's news sources.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://groups.google.com/'''',\r\n                url : ''''http://groups.google.com/'''',\r\n                visibleUrl : ''''groups.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:x2uPD3hfkn0J:groups.google.com'''',\r\n                title : ''''Google Groups'''',\r\n                titleNoFormatting : ''''Google Groups'''',\r\n                content : ''''Enables users to search and browse the Usenet \r\narchives which consist of over 700   million messages, and post new \r\ncomments.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://maps.google.com/'''',\r\n                url : ''''http://maps.google.com/'''',\r\n                visibleUrl : ''''maps.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:dkf5u2twBXIJ:maps.google.com'''',\r\n                title : ''''Google Maps'''',\r\n                titleNoFormatting : ''''Google Maps'''',\r\n                content : ''''Provides directions, interactive maps, and \r\nsatellite/aerial imagery of the United   States. Can also search by \r\nkeyword such as type of business.''''\r\n            }\r\n        ],\r\n        \r\n    adResults:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch.ad'''',\r\n                title : ''''Gartner Symposium/ITxpo'''',\r\n                content1 : ''''Meet brilliant Gartner IT analysts'''',\r\n                content2 : ''''20-23 May 2007- Barcelona, Spain'''',\r\n                url : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                impressionUrl : \r\n''''http://www.google.com/uds/css/ad-indicator-on.gif?ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB'''', \r\n\r\n                unescapedUrl : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                visibleUrl : ''''www.gartner.com''''\r\n            }\r\n        ]\r\n}\r\n''", span="2430-2507"];
m1_1117 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="object o = JsonConvert.DeserializeObject(json)", span="2508-2508"];
m1_1118 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="string s = string.Empty", span="2509-2509"];
m1_1119 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="s += s", span="2510-2510"];
m1_1120 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="2428-2428"];
m1_1561 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="3320-3320"];
m1_1562 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="JaggedArray aa = new JaggedArray()", span="3322-3322"];
m1_1563 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="aa.Before = ''Before!''", span="3323-3323"];
m1_1564 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="aa.After = ''After!''", span="3324-3324"];
m1_1565 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="aa.Coordinates = new[] { new[] { 1, 1 }, new[] { 1, 2 }, new[] { 2, 1 }, new[] { 2, 2 } }", span="3325-3325"];
m1_1566 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(aa)", span="3327-3327"];
m1_1567 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}'', json)", span="3329-3329"];
m1_1568 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="3320-3320"];
m1_226 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoNull.DictionaryWithNoNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoNull.DictionaryWithNoNull()", span="572-572"];
m1_326 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="173-173"];
m1_2524 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m1_1638 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", span="3521-3521"];
m1_1639 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs", label="string json = ''{ 'testProperty1': 'value' }''", span="3523-3523"];
m1_1640 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs", label="ConstructorAndDefaultValueAttributeTestClass c = JsonConvert.DeserializeObject<ConstructorAndDefaultValueAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.Populate\r\n            })", span="3525-3528"];
m1_1643 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs", label="c = JsonConvert.DeserializeObject<ConstructorAndDefaultValueAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate\r\n            })", span="3532-3535"];
m1_1641 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value'', c.TestProperty1)", span="3529-3529"];
m1_1642 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(21, c.TestProperty2)", span="3530-3530"];
m1_1644 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value'', c.TestProperty1)", span="3536-3536"];
m1_1645 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(21, c.TestProperty2)", span="3537-3537"];
m1_1646 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", span="3521-3521"];
m1_76 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", span="306-306"];
m1_77 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", file="JsonSerializerTest.cs", label="string deserialized = @''{\r\n  ''''Enumerable'''': [ ''''abc'''', ''''def'''' ] \r\n}''", span="308-310"];
m1_78 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", file="JsonSerializerTest.cs", label="var enumerableClass = JsonConvert.DeserializeObject<GenericIEnumerableWithImplicitConversion>(deserialized)", span="311-311"];
m1_79 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", file="JsonSerializerTest.cs", label="var enumerableObject = enumerableClass.Enumerable.ToArray()", span="312-312"];
m1_80 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, enumerableObject.Length)", span="313-313"];
m1_81 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''abc'', enumerableObject[0].Value)", span="314-314"];
m1_82 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''def'', enumerableObject[1].Value)", span="315-315"];
m1_83 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", span="306-306"];
m1_4240 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringTestClass.ErroringTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringTestClass.ErroringTestClass()", span="9882-9882"];
m1_760 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", span="60-60"];
m1_2515 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="5749-5749"];
m1_2516 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(new HashSet<string>()\r\n            {\r\n                ''One'',\r\n                ''2'',\r\n                ''III''\r\n            }, Formatting.Indented)", span="5751-5756"];
m1_2517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  ''''One'''',\r\n  ''''2'''',\r\n  ''''III''''\r\n]'', jsonText)", span="5758-5762"];
m1_2518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="HashSet<string> d = JsonConvert.DeserializeObject<HashSet<string>>(jsonText)", span="5764-5764"];
m1_2519 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, d.Count)", span="5766-5766"];
m1_2520 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Assert.IsTrue(d.Contains(''One''))", span="5767-5767"];
m1_2521 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Assert.IsTrue(d.Contains(''2''))", span="5768-5768"];
m1_2522 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Assert.IsTrue(d.Contains(''III''))", span="5769-5769"];
m1_2523 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="5749-5749"];
m1_3981 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", span="9299-9299"];
m1_3982 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs", label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]''", span="9301-9316"];
m1_3983 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs", label="IList<PersonReference> people = JsonConvert.DeserializeObject<IList<PersonReference>>(json, new JsonSerializerSettings\r\n            {\r\n                ReferenceResolverProvider = () => new IdReferenceResolver(),\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="9318-9323"];
m1_3984 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, people.Count)", span="9325-9325"];
m1_3985 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs", label="PersonReference john = people[0]", span="9327-9327"];
m1_3986 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs", label="PersonReference jane = people[1]", span="9328-9328"];
m1_3987 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs", label="Assert.AreEqual(john, jane.Spouse)", span="9330-9330"];
m1_3988 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs", label="Assert.AreEqual(jane, john.Spouse)", span="9331-9331"];
m1_3989 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", span="9299-9299"];
m1_2174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4894-4894"];
m1_2175 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="dictionary == null", span="4896-4896"];
m1_2176 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="throw new ArgumentNullException(nameof(dictionary));", span="4898-4898"];
m1_2177 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label=dictionary, span="4901-4901"];
m1_2178 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="_innerDictionary.Add(entry.Key, entry.Value)", span="4903-4903"];
m1_2179 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4894-4894"];
m1_1441 [cluster="System.DateTime.ToUniversalTime()", file="JsonSerializerTest.cs", label="Entry System.DateTime.ToUniversalTime()", span="0-0"];
m1_1832 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="4010-4010"];
m1_1833 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs", label="string json = @''{''''DateTimeField'''':''''''''}''", span="4012-4012"];
m1_1834 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs", label="NullableDateTimeTestClass c = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(json)", span="4014-4014"];
m1_1835 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, c.DateTimeField)", span="4015-4015"];
m1_1836 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="4010-4010"];
m1_2882 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", span="6706-6706"];
m1_2883 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="6708-6708"];
m1_2884 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", span="6706-6706"];
m1_2171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", span="4840-4840"];
m1_807 [cluster="System.Runtime.Serialization.SerializationInfo.GetInt32(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetInt32(string)", span="0-0"];
m1_1798 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="3917-3917"];
m1_1799 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs", label="var value = new\r\n            {\r\n                bar = new JObject(new JProperty(''baz'', 13))\r\n            }", span="3919-3922"];
m1_1800 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(value)", span="3924-3924"];
m1_1801 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''bar'''':{''''baz'''':13}}'', json)", span="3926-3926"];
m1_1802 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="3917-3917"];
m1_526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", span="1318-1318"];
m1_527 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonSerializerTest.cs", label="CommentTestObject o = JsonConvert.DeserializeObject<CommentTestObject>(@''{/* Test */}'')", span="1320-1320"];
m1_528 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o.A)", span="1321-1321"];
m1_529 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonSerializerTest.cs", label="o = JsonConvert.DeserializeObject<CommentTestObject>(@''{''''A'''': true/* Test */}'')", span="1323-1323"];
m1_530 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, o.A)", span="1324-1324"];
m1_531 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", span="1318-1318"];
m1_1322 [cluster="Unk.AreNotEqual", file="JsonSerializerTest.cs", label="Entry Unk.AreNotEqual", span=""];
m1_1149 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="2559-2559"];
m1_1150 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonSerializerTest.cs", label="string json = @''[''''vvv\jvvv'''']''", span="2561-2561"];
m1_1151 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { JsonConvert.DeserializeObject<List<string>>(json); }, @''Bad JSON escape sequence: \j. Path '', line 1, position 7.'')", span="2563-2563"];
m1_1152 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="2559-2559"];
m1_2651 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", span="6050-6050"];
m1_2652 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", file="JsonSerializerTest.cs", label="return string.Format(''({0},{1},{2})'', X, Y, Z);", span="6052-6052"];
m1_2653 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", span="6050-6050"];
m1_4442 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", span="0-0"];
m1_1625 [cluster="Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", span="29-29"];
m1_859 [cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87"];
m1_2857 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="6634-6634"];
m1_2858 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="NonDefaultConstructorWithReadOnlyDictionaryProperty c1 = new NonDefaultConstructorWithReadOnlyDictionaryProperty(''blah'')", span="6636-6636"];
m1_2859 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="c1.Categories.Add(''one'', 1)", span="6637-6637"];
m1_2860 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="c1.Categories.Add(''two'', 2)", span="6638-6638"];
m1_2861 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6640-6640"];
m1_2864 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Title, c2.Title)", span="6650-6650"];
m1_2865 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="6651-6651"];
m1_2862 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2\r\n  }\r\n}'', json)", span="6641-6647"];
m1_2863 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="NonDefaultConstructorWithReadOnlyDictionaryProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyDictionaryProperty>(json)", span="6649-6649"];
m1_2866 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c2.Categories[''one''])", span="6652-6652"];
m1_2867 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, c2.Categories[''two''])", span="6653-6653"];
m1_2868 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="6634-6634"];
m1_3135 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="7306-7306"];
m1_3136 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Widget widget = new Widget { Id = new WidgetId { Value = ''id'' } }", span="7308-7308"];
m1_3137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(widget)", span="7310-7310"];
m1_3138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Id'''':{''''Value'''':''''id''''}}'', json)", span="7312-7312"];
m1_3139 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="7306-7306"];
m1_3126 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertableIntTestClass.ConvertableIntTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertableIntTestClass.ConvertableIntTestClass()", span="7266-7266"];
m1_339 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="766-766"];
m1_1508 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="3199-3199"];
m1_1509 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="string boolRef = typeof(bool).AssemblyQualifiedName", span="3201-3201"];
m1_1510 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="TypeClass typeClass = new TypeClass { TypeProperty = typeof(bool) }", span="3202-3202"];
m1_1512 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + boolRef + @''''''}'', json)", span="3205-3205"];
m1_1511 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(typeClass)", span="3204-3204"];
m1_1513 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="TypeClass typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="3207-3207"];
m1_1514 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(bool), typeClass2.TypeProperty)", span="3208-3208"];
m1_1515 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="string jsonSerializerTestRef = typeof(JsonSerializerTest).AssemblyQualifiedName", span="3210-3210"];
m1_1516 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="typeClass = new TypeClass { TypeProperty = typeof(JsonSerializerTest) }", span="3211-3211"];
m1_1518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + jsonSerializerTestRef + @''''''}'', json)", span="3214-3214"];
m1_1517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(typeClass)", span="3213-3213"];
m1_1519 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="3216-3216"];
m1_1520 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(JsonSerializerTest), typeClass2.TypeProperty)", span="3217-3217"];
m1_1521 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="3199-3199"];
m1_603 [cluster="Unk.IsInstanceOf", file="JsonSerializerTest.cs", label="Entry Unk.IsInstanceOf", span=""];
m1_3426 [cluster="Newtonsoft.Json.Tests.TestObjects.RequiredObject.RequiredObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredObject.RequiredObject()", span="28-28"];
m1_4043 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", span="9436-9436"];
m1_4044 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="9438-9438"];
m1_4045 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", span="9436-9436"];
m1_1180 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="2604-2604"];
m1_1181 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="List<DateTime> testDates = new List<DateTime>\r\n            {\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n            }", span="2606-2614"];
m1_1182 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="2616-2616"];
m1_1184 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="s.WriteObject(ms, testDates)", span="2618-2618"];
m1_1188 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(testDates, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="2624-2624"];
m1_1183 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<DateTime>))", span="2617-2617"];
m1_1185 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="2619-2619"];
m1_1186 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="StreamReader sr = new StreamReader(ms)", span="2620-2620"];
m1_1187 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="string expected = sr.ReadToEnd()", span="2622-2622"];
m1_1189 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expected, result)", span="2625-2625"];
m1_1190 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="2604-2604"];
m1_2946 [cluster="System.Exception.ToString()", file="JsonSerializerTest.cs", label="Entry System.Exception.ToString()", span="0-0"];
m1_4070 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", span="9481-9481"];
m1_4071 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="9483-9483"];
m1_4072 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", span="9481-9481"];
m1_2873 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", span="6681-6681"];
m1_2874 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="6683-6683"];
m1_2875 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", span="6681-6681"];
m1_340 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeValueTuple()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeValueTuple()", span="846-846"];
m1_341 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeValueTuple()", file="JsonSerializerTest.cs", label="ValueTuple<int, int, string> t = ValueTuple.Create(1, 2, ''string'')", span="848-848"];
m1_342 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeValueTuple()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(t, Formatting.Indented)", span="850-850"];
m1_343 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeValueTuple()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Item1'''': 1,\r\n  ''''Item2'''': 2,\r\n  ''''Item3'''': ''''string''''\r\n}'', json)", span="852-856"];
m1_344 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeValueTuple()", file="JsonSerializerTest.cs", label="ValueTuple<int, int, string> t2 = JsonConvert.DeserializeObject<ValueTuple<int, int, string>>(json)", span="858-858"];
m1_345 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeValueTuple()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, t2.Item1)", span="860-860"];
m1_346 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeValueTuple()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, t2.Item2)", span="861-861"];
m1_347 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeValueTuple()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''string'', t2.Item3)", span="862-862"];
m1_348 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeValueTuple()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeValueTuple()", span="846-846"];
m1_3662 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m1_4326 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", span="10090-10090"];
m1_4327 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", file="JsonSerializerTest.cs", label="JsonObjectContract c = (JsonObjectContract)DefaultContractResolver.Instance.ResolveContract(typeof(ChildClassWithProtectedOverridePlusJsonProperty))", span="10092-10092"];
m1_4328 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Properties.Count)", span="10093-10093"];
m1_4329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", file="JsonSerializerTest.cs", label="var propertyValue = ''test''", span="10095-10095"];
m1_4330 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", file="JsonSerializerTest.cs", label="var testJson = @''{ 'MyProperty' : ''' + propertyValue + ''' }''", span="10096-10096"];
m1_4332 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(propertyValue, testObject.GetPropertyValue(), ''MyProperty should be populated'')", span="10100-10100"];
m1_4331 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", file="JsonSerializerTest.cs", label="var testObject = JsonConvert.DeserializeObject<ChildClassWithProtectedOverridePlusJsonProperty>(testJson)", span="10098-10098"];
m1_4333 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", span="10090-10090"];
m1_2098 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", span="4540-4540"];
m1_2218 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="4991-4991"];
m1_2219 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonSerializerTest.cs", label="return _innerDictionary.Remove(key);", span="4993-4993"];
m1_2220 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="4991-4991"];
m1_2333 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="507-507"];
m1_1009 [cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.Properties()", span="248-248"];
m1_85 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithImplicitOperator.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithImplicitOperator(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithImplicitOperator.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithImplicitOperator(string)", span="327-327"];
m1_86 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithImplicitOperator.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithImplicitOperator(string)", file="JsonSerializerTest.cs", label="return new ClassWithImplicitOperator() { Value = value };", span="329-329"];
m1_87 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithImplicitOperator.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithImplicitOperator(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithImplicitOperator.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithImplicitOperator(string)", span="327-327"];
m1_234 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", span="601-601"];
m1_235 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonSerializerTest.cs", label="var person = new\r\n            {\r\n                Name = ''James'',\r\n                Age = 1,\r\n                RoleNames = new Dictionary<string, bool>\r\n                {\r\n                    { ''IsAdmin'', true },\r\n                    { ''IsModerator'', false }\r\n                }\r\n            }", span="603-612"];
m1_236 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(person, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new DictionaryKeyContractResolver()\r\n            })", span="614-617"];
m1_237 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''NAME'''': ''''James'''',\r\n  ''''AGE'''': 1,\r\n  ''''ROLENAMES'''': {\r\n    ''''IsAdmin'''': true,\r\n    ''''IsModerator'''': false\r\n  }\r\n}'', json)", span="619-626"];
m1_238 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", span="601-601"];
m1_1178 [cluster="JavaScriptSerializer.cstr", file="JsonSerializerTest.cs", label="Entry JavaScriptSerializer.cstr", span=""];
m1_3401 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="7826-7826"];
m1_3402 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="string json = ''{'NonAttributeProperty':null,'UnsetProperty':null,'AllowNullProperty':null,'AlwaysProperty':null}''", span="7828-7828"];
m1_3403 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="IList<string> errors = new List<string>()", span="7829-7829"];
m1_3405 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n            {\r\n                Error = error\r\n            })", span="7837-7840"];
m1_3404 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="7831-7835"];
m1_3407 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, errors.Count)", span="7843-7843"];
m1_3408 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="Assert.IsTrue(errors[0].StartsWith(''Required property 'NonAttributeProperty' expects a value but got null. Path ''''))", span="7844-7844"];
m1_3409 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="Assert.IsTrue(errors[1].StartsWith(''Required property 'UnsetProperty' expects a value but got null. Path ''''))", span="7845-7845"];
m1_3410 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="Assert.IsTrue(errors[2].StartsWith(''Required property 'AlwaysProperty' expects a value but got null. Path ''''))", span="7846-7846"];
m1_3406 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(o)", span="7842-7842"];
m1_3411 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="7826-7826"];
m1_3669 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", span="8466-8466"];
m1_3670 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="string json", span="8468-8468"];
m1_3671 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="IList<double> d = new List<double> { 1.1, double.NaN, double.PositiveInfinity }", span="8469-8469"];
m1_3672 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(d)", span="8471-8471"];
m1_3673 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(d, new JsonSerializerSettings { FloatFormatHandling = FloatFormatHandling.Symbol })", span="8474-8474"];
m1_3674 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(d, new JsonSerializerSettings { FloatFormatHandling = FloatFormatHandling.DefaultValue })", span="8477-8477"];
m1_3675 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[1.1,0.0,0.0]'', json)", span="8480-8480"];
m1_3676 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", span="8466-8466"];
m1_1837 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="4020-4020"];
m1_1838 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs", label="string json = @''{''''sublocation'''':''''AlertEmailSender.Program.Main'''',''''userId'''':0,''''type'''':0,''''summary'''':''''Loading settings variables'''',''''details'''':null,''''stackTrace'''':''''   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)\r\n   at System.Environment.get_StackTrace()\r\n   at mr.Logging.Event..ctor(String summary) in C:\\Projects\\MRUtils\\Logging\\Event.vb:line 71\r\n   at AlertEmailSender.Program.Main(String[] args) in C:\\Projects\\AlertEmailSender\\AlertEmailSender\\Program.cs:line 25'''',''''tag'''':null,''''time'''':''''\/Date(1249591032026-0400)\/''''}''", span="4022-4022"];
m1_1839 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Event>(json); }, @''Unable to find a constructor to use for type Newtonsoft.Json.Tests.TestObjects.Events.Event. A class should either have a default constructor, one constructor with arguments or a constructor marked with the JsonConstructor attribute. Path 'sublocation', line 1, position 15.'')", span="4024-4024"];
m1_1840 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="4020-4020"];
m1_959 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewProperties.SubWithoutContractNewProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewProperties.SubWithoutContractNewProperties()", span="2064-2064"];
m1_3022 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="7021-7021"];
m1_3023 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs", label="return new ReflectionValueProvider(member);", span="7023-7023"];
m1_3024 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="7021-7021"];
m1_4440 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", span="0-0"];
m1_2599 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="5958-5958"];
m1_2600 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="dynamic expando = new ExpandoObject()", span="5960-5960"];
m1_2601 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="expando.Int = 1", span="5961-5961"];
m1_2602 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="expando.Decimal = 99.9d", span="5962-5962"];
m1_2603 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="expando.Complex = new ExpandoObject()", span="5963-5963"];
m1_2604 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="expando.Complex.String = ''I am a string''", span="5964-5964"];
m1_2605 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="expando.Complex.DateTime = new DateTime(2000, 12, 20, 18, 55, 0, DateTimeKind.Utc)", span="5965-5965"];
m1_2606 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(expando, Formatting.Indented)", span="5967-5967"];
m1_2610 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual((long)expando.Int, newExpando[''Int''])", span="5980-5980"];
m1_2612 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expando.Decimal, newExpando[''Decimal''])", span="5983-5983"];
m1_2616 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expando.Complex.String, o[''String''])", span="5989-5989"];
m1_2618 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expando.Complex.DateTime, o[''DateTime''])", span="5992-5992"];
m1_2607 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Int'''': 1,\r\n  ''''Decimal'''': 99.9,\r\n  ''''Complex'''': {\r\n    ''''String'''': ''''I am a string'''',\r\n    ''''DateTime'''': ''''2000-12-20T18:55:00Z''''\r\n  }\r\n}'', json)", span="5968-5975"];
m1_2608 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="IDictionary<string, object> newExpando = JsonConvert.DeserializeObject<ExpandoObject>(json)", span="5977-5977"];
m1_2609 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(long), newExpando[''Int''])", span="5979-5979"];
m1_2611 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(double), newExpando[''Decimal''])", span="5982-5982"];
m1_2613 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(ExpandoObject), newExpando[''Complex''])", span="5985-5985"];
m1_2614 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="IDictionary<string, object> o = (ExpandoObject)newExpando[''Complex'']", span="5986-5986"];
m1_2615 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(string), o[''String''])", span="5988-5988"];
m1_2617 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(DateTime), o[''DateTime''])", span="5991-5991"];
m1_2619 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="5958-5958"];
m1_887 [cluster="Unk.IsNotNull", file="JsonSerializerTest.cs", label="Entry Unk.IsNotNull", span=""];
m1_3891 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", span="9080-9080"];
m1_3892 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs", label="PersonReference john = new PersonReference\r\n            {\r\n                Id = new Guid(''0B64FFDF-D155-44AD-9689-58D9ADB137F3''),\r\n                Name = ''John Smith''\r\n            }", span="9082-9086"];
m1_3893 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs", label="PersonReference jane = new PersonReference\r\n            {\r\n                Id = new Guid(''AE3C399C-058D-431D-91B0-A36C266441B9''),\r\n                Name = ''Jane Smith''\r\n            }", span="9088-9092"];
m1_3894 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs", label="john.Spouse = jane", span="9094-9094"];
m1_3895 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs", label="jane.Spouse = john", span="9095-9095"];
m1_3896 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs", label="IList<PersonReference> people = new List<PersonReference>\r\n            {\r\n                john,\r\n                jane\r\n            }", span="9097-9101"];
m1_3897 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(people, new JsonSerializerSettings\r\n            {\r\n#pragma warning disable 618\r\n                ReferenceResolver = null,\r\n#pragma warning restore 618\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="9103-9110"];
m1_3898 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''1''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n]'', json)", span="9112-9127"];
m1_3899 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", span="9080-9080"];
m1_1294 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="2804-2804"];
m1_1295 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new ConverableMembers(), Formatting.Indented)", span="2806-2806"];
m1_1296 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="string expected = null", span="2808-2808"];
m1_1298 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(expected, json)", span="2844-2844"];
m1_1299 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="ConverableMembers c = JsonConvert.DeserializeObject<ConverableMembers>(json)", span="2846-2846"];
m1_1297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="expected = @''{\r\n  ''''String'''': ''''string'''',\r\n  ''''Int32'''': 2147483647,\r\n  ''''UInt32'''': 4294967295,\r\n  ''''Byte'''': 255,\r\n  ''''SByte'''': 127,\r\n  ''''Short'''': 32767,\r\n  ''''UShort'''': 65535,\r\n  ''''Long'''': 9223372036854775807,\r\n  ''''ULong'''': 9223372036854775807,\r\n  ''''Double'''': 1.7976931348623157E+308,\r\n  ''''Float'''': 3.40282347E+38,\r\n  ''''DBNull'''': null,\r\n  ''''Bool'''': true,\r\n  ''''Char'''': ''''\u0000''''\r\n}''", span="2810-2825"];
m1_1300 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''string'', c.String)", span="2847-2847"];
m1_1301 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Assert.AreEqual(double.MaxValue, c.Double)", span="2848-2848"];
m1_1302 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DBNull.Value, c.DBNull)", span="2850-2850"];
m1_1303 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="2804-2804"];
m1_4171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", span="9710-9710"];
m1_4172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs", label="DateTimeOffset dt = new DateTimeOffset(2000, 12, 22, 0, 0, 0, TimeSpan.Zero)", span="9712-9712"];
m1_4173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd'!'K''", span="9713-9713"];
m1_4175 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new Dictionary<DateTimeOffset, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="9721-9724"];
m1_4178 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="9732-9732"];
m1_4174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead,\r\n                Formatting = Formatting.Indented\r\n            }", span="9714-9719"];
m1_4177 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs", label="Dictionary<DateTimeOffset, string> d = JsonConvert.DeserializeObject<Dictionary<DateTimeOffset, string>>(json, settings)", span="9730-9730"];
m1_4176 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22!+00:00'''': ''''123''''\r\n}'', json)", span="9726-9728"];
m1_4179 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", span="9710-9710"];
m1_1488 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString()", span="891-891"];
m1_929 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="JsonSerializerTest.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m1_2724 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="6246-6246"];
m1_2725 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs", label="NonPublicConstructorWithJsonConstructor c = JsonConvert.DeserializeObject<NonPublicConstructorWithJsonConstructor>(''{}'')", span="6248-6248"];
m1_2726 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''NonPublic'', c.Constructor)", span="6249-6249"];
m1_2727 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="6246-6246"];
m1_2170 [cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="JsonSerializerTest.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0"];
m1_3186 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter.WriteValue(System.Guid?)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter.WriteValue(System.Guid?)", span="7390-7390"];
m1_3187 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter.WriteValue(System.Guid?)", file="JsonSerializerTest.cs", label="base.WriteValue(value)", span="7392-7392"];
m1_3188 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter.WriteValue(System.Guid?)", file="JsonSerializerTest.cs", label="++NullableGuidCount", span="7393-7393"];
m1_3189 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter.WriteValue(System.Guid?)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter.WriteValue(System.Guid?)", span="7390-7390"];
m1_3431 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="7878-7878"];
m1_3432 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="PropertyItemConverter c = new PropertyItemConverter\r\n            {\r\n                Data =\r\n                    new[]\r\n                    {\r\n                        ''one'',\r\n                        ''two'',\r\n                        ''three''\r\n                    }\r\n            }", span="7880-7889"];
m1_3433 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="var c2 = JsonConvert.DeserializeObject<PropertyItemConverter>(''{'Data':['::ONE::','::TWO::']}'')", span="7891-7891"];
m1_3434 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(c2)", span="7893-7893"];
m1_3435 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, c2.Data.Count)", span="7894-7894"];
m1_3436 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''one'', c2.Data[0])", span="7895-7895"];
m1_3437 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''two'', c2.Data[1])", span="7896-7896"];
m1_3438 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="7878-7878"];
m1_2388 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="5495-5495"];
m1_2389 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs", label="ClientMap source = new ClientMap()\r\n            {\r\n                position = new Pos() { X = 100, Y = 200 },\r\n                center = new PosDouble() { X = 251.6, Y = 361.3 }\r\n            }", span="5497-5501"];
m1_2390 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(source, new PosConverter(), new PosDoubleConverter())", span="5503-5503"];
m1_2391 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''{\''position\'':new Pos(100,200),\''center\'':new PosD(251.6,361.3)}'', json)", span="5504-5504"];
m1_2392 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="5495-5495"];
m1_3484 [cluster="Unk.IsFalse", file="JsonSerializerTest.cs", label="Entry Unk.IsFalse", span=""];
m1_523 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m1_2180 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonSerializerTest.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m1_4228 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9870-9870"];
m1_4229 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="9872-9872"];
m1_4230 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9870-9870"];
m1_522 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="667-667"];
m1_2971 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="6950-6950"];
m1_2972 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="object o = new { p = 1 }", span="6953-6953"];
m1_2973 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="var json = JObject.FromObject(o)", span="6955-6955"];
m1_2974 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="var sw = new StringWriter()", span="6957-6957"];
m1_2976 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="jw.WriteToken(json.CreateReader())", span="6960-6960"];
m1_2975 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="var jw = new JsonTextWriter(sw)", span="6958-6958"];
m1_2978 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="string result = sw.ToString()", span="6963-6963"];
m1_2977 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="jw.Flush()", span="6961-6961"];
m1_2979 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''p'''':1}'', result)", span="6964-6964"];
m1_2980 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="6950-6950"];
m1_2910 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="6779-6779"];
m1_2911 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs", label="PrivateMembersClassWithAttributes c1 = new PrivateMembersClassWithAttributes(''privateString!'', ''internalString!'', ''readonlyString!'')", span="6781-6781"];
m1_2912 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6783-6783"];
m1_2913 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''_privateString'''': ''''privateString!'''',\r\n  ''''_readonlyString'''': ''''readonlyString!'''',\r\n  ''''_internalString'''': ''''internalString!''''\r\n}'', json)", span="6784-6788"];
m1_2914 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs", label="PrivateMembersClassWithAttributes c2 = JsonConvert.DeserializeObject<PrivateMembersClassWithAttributes>(json)", span="6790-6790"];
m1_2915 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''readonlyString!'', c2.UseValue())", span="6791-6791"];
m1_2916 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="6779-6779"];
m1_1167 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="2582-2582"];
m1_1168 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="string json = @''[''''vvv\/vvv\tvvv\''''vvv\bvvv\nvvv\rvvv\\vvv\fvvv'''']''", span="2584-2584"];
m1_1169 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="JavaScriptSerializer javaScriptSerializer = new JavaScriptSerializer()", span="2587-2587"];
m1_1170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="List<string> javaScriptSerializerResult = javaScriptSerializer.Deserialize<List<string>>(json)", span="2588-2588"];
m1_1172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="2592-2592"];
m1_1173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="2594-2594"];
m1_1171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="2591-2591"];
m1_1176 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="Assert.AreEqual(javaScriptSerializerResult[0], jsonNetResult[0])", span="2599-2599"];
m1_1175 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="2597-2597"];
m1_1174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, jsonNetResult.Count)", span="2596-2596"];
m1_1177 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="2582-2582"];
m1_3920 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", span="9191-9191"];
m1_3921 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="JsonSerializerTest.cs", label="return ((sourceType == typeof(string)) || base.CanConvertFrom(context, sourceType));", span="9193-9193"];
m1_3922 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", span="9191-9191"];
m1_3970 [cluster="string.Join(string, params string[])", file="JsonSerializerTest.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m1_1004 [cluster="DataContractJsonSerializer.cstr", file="JsonSerializerTest.cs", label="Entry DataContractJsonSerializer.cstr", span=""];
m1_378 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqSection.FaqSection()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqSection.FaqSection()", span="945-945"];
m1_795 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", span="1736-1736"];
m1_796 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_serializationInfo == null", span="1738-1738"];
m1_797 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="return;", span="1740-1740"];
m1_798 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_stringValue = _serializationInfo.GetString(''stringValue'')", span="1743-1743"];
m1_799 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_intValue = _serializationInfo.GetInt32(''intValue'')", span="1744-1744"];
m1_800 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_person1 = (PersonReference)_serializationInfo.GetValue(''person1'', typeof(PersonReference))", span="1745-1745"];
m1_801 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_person2 = (PersonReference)_serializationInfo.GetValue(''person2'', typeof(PersonReference))", span="1746-1746"];
m1_802 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_person3 = (PersonReference)_serializationInfo.GetValue(''person3'', typeof(PersonReference))", span="1747-1747"];
m1_803 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_parent = (PreserveReferencesCallbackTestObject)_serializationInfo.GetValue(''parent'', typeof(PreserveReferencesCallbackTestObject))", span="1748-1748"];
m1_804 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_serializationInfo = null", span="1750-1750"];
m1_805 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", span="1736-1736"];
m1_392 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", span="1026-1026"];
m1_393 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs", label="NullTestClass otc = JsonConvert.DeserializeObject<NullTestClass>(@''{\r\n    ''''Value1'''': null,\r\n    ''''Value2'''': null,\r\n    ''''Value3'''': null,\r\n    ''''Value4'''': null,\r\n    ''''Value5'''': null\r\n}'')", span="1028-1034"];
m1_394 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs", label="Assert.IsNull(otc.Value1)", span="1035-1035"];
m1_395 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JTokenType.Null, otc.Value2.Type)", span="1036-1036"];
m1_396 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JTokenType.Raw, otc.Value3.Type)", span="1037-1037"];
m1_397 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JTokenType.Null, otc.Value4.Type)", span="1038-1038"];
m1_398 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs", label="Assert.IsNull(otc.Value5)", span="1039-1039"];
m1_399 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", span="1026-1026"];
m1_433 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JsonSerializerTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m1_2818 [cluster="System.Convert.ToInt32(long)", file="JsonSerializerTest.cs", label="Entry System.Convert.ToInt32(long)", span="0-0"];
m1_3749 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="8702-8702"];
m1_3750 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="CultureInfo culture = new CultureInfo(''en-NZ'')", span="8704-8704"];
m1_3751 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="culture.DateTimeFormat.AMDesignator = ''a.m.''", span="8705-8705"];
m1_3752 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="culture.DateTimeFormat.PMDesignator = ''p.m.''", span="8706-8706"];
m1_3756 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                DateFormatString = ''yyyy tt'',\r\n                Culture = culture,\r\n                Formatting = Formatting.Indented\r\n            })", span="8717-8722"];
m1_3753 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="8708-8712"];
m1_3754 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter()", span="8714-8714"];
m1_3757 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="serializer.Serialize(jsonWriter, dates)", span="8723-8723"];
m1_3755 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="8715-8715"];
m1_3761 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="string json = sw.ToString()", span="8729-8729"];
m1_3758 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="Assert.IsNull(jsonWriter.DateFormatString)", span="8725-8725"];
m1_3759 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(CultureInfo.InvariantCulture, jsonWriter.Culture)", span="8726-8726"];
m1_3760 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(Formatting.None, jsonWriter.Formatting)", span="8727-8727"];
m1_3762 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="8731-8734"];
m1_3763 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="8702-8702"];
m1_1026 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", span="692-692"];
m1_4316 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="10074-10074"];
m1_4317 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="10076-10076"];
m1_4318 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="10074-10074"];
m1_3971 [cluster="System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs", label="Entry System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", span="0-0"];
m1_3587 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="8294-8294"];
m1_3588 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonException>(() =>\r\n            {\r\n                string json = ''[{},1]'';\r\n\r\n                JsonSerializer serializer = new JsonSerializer();\r\n                serializer.CheckAdditionalContent = true;\r\n\r\n                var reader = new JsonTextReader(new StringReader(json));\r\n                reader.Read();\r\n                reader.Read();\r\n\r\n                serializer.Deserialize(reader, typeof(MyType));\r\n            }, ''Additional text found in JSON string after finishing deserializing object. Path '[1]', line 1, position 5.'')", span="8296-8308"];
m1_3589 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="8294-8294"];
m1_1666 [cluster="Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", span="31-31"];
m1_4439 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", span="0-0"];
m1_20 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeImmutableStruct()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeImmutableStruct()", span="147-147"];
m1_21 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeImmutableStruct()", file="JsonSerializerTest.cs", label="var result = JsonConvert.DeserializeObject<ImmutableStruct>(''{ \''Value\'': \''working\'', \''Value2\'': 2 }'')", span="149-149"];
m1_22 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeImmutableStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''working'', result.Value)", span="151-151"];
m1_23 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeImmutableStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, result.Value2)", span="152-152"];
m1_24 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeImmutableStruct()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeImmutableStruct()", span="147-147"];
m1_2749 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="6295-6295"];
m1_2750 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs", label="ComplexItem i = new ComplexItem()", span="6297-6297"];
m1_2751 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(i, Formatting.Indented)", span="6299-6299"];
m1_2752 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': null\r\n}'', json)", span="6301-6303"];
m1_2753 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="6295-6295"];
m1_1789 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="3905-3905"];
m1_1790 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Uri uri = new Uri(''http://codeplex.com'')", span="3907-3907"];
m1_1791 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(uri)", span="3908-3908"];
m1_1792 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''http://codeplex.com/'', uri.ToString())", span="3910-3910"];
m1_1794 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(uri, newUri)", span="3913-3913"];
m1_1793 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Uri newUri = JsonConvert.DeserializeObject<Uri>(json)", span="3912-3912"];
m1_1795 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="3905-3905"];
m1_2023 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="4349-4349"];
m1_2024 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Dictionary<Person, int> dictionary = new Dictionary<Person, int>()", span="4351-4351"];
m1_2025 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="dictionary.Add(new Person { Name = ''p1'' }, 1)", span="4352-4352"];
m1_2026 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="dictionary.Add(new Person { Name = ''p2'' }, 2)", span="4353-4353"];
m1_2027 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="4355-4355"];
m1_2028 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Organization.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Organization.Person'''': 2\r\n}'', json)", span="4357-4360"];
m1_2029 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="4349-4349"];
m1_4286 [cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", span="538-538"];
m1_3953 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", span="9232-9232"];
m1_3954 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs", label="destinationType == null", span="9234-9234"];
m1_3956 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs", label="value is TypeConverterSize", span="9238-9238"];
m1_3957 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs", label="destinationType == typeof(string)", span="9240-9240"];
m1_3958 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs", label="TypeConverterSize size = (TypeConverterSize)value", span="9242-9242"];
m1_3959 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs", label="culture == null", span="9243-9243"];
m1_3964 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs", label="strArray[num++] = converter.ConvertToString(context, culture, size.Width)", span="9250-9250"];
m1_3965 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs", label="strArray[num++] = converter.ConvertToString(context, culture, size.Height)", span="9251-9251"];
m1_3967 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs", label="return base.ConvertTo(context, culture, value, destinationType);", span="9255-9255"];
m1_3955 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs", label="throw new ArgumentNullException(''destinationType'');", span="9236-9236"];
m1_3960 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs", label="culture = CultureInfo.CurrentCulture", span="9245-9245"];
m1_3961 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs", label="TypeConverter converter = TypeDescriptor.GetConverter(typeof(int))", span="9247-9247"];
m1_3962 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs", label="string[] strArray = new string[2]", span="9248-9248"];
m1_3963 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs", label="int num = 0", span="9249-9249"];
m1_3966 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs", label="return string.Join('', '', strArray);", span="9252-9252"];
m1_3968 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", span="9232-9232"];
m1_4288 [cluster="System.Net.Mail.MailAddress.MailAddress(string, string)", file="JsonSerializerTest.cs", label="Entry System.Net.Mail.MailAddress.MailAddress(string, string)", span="0-0"];
m1_2684 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="6134-6134"];
m1_2685 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_name = info.GetString(''Name'')", span="6136-6136"];
m1_2686 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="6134-6134"];
m1_2891 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="6723-6723"];
m1_2892 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new ClassAttributeDerived\r\n            {\r\n                BaseClassValue = ''BaseClassValue!'',\r\n                DerivedClassValue = ''DerivedClassValue!'',\r\n                NonSerialized = ''NonSerialized!''\r\n            }, Formatting.Indented)", span="6725-6730"];
m1_2893 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''DerivedClassValue'''': ''''DerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="6732-6735"];
m1_2894 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(new CollectionClassAttributeDerived\r\n            {\r\n                BaseClassValue = ''BaseClassValue!'',\r\n                CollectionDerivedClassValue = ''CollectionDerivedClassValue!''\r\n            }, Formatting.Indented)", span="6737-6741"];
m1_2895 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''CollectionDerivedClassValue'''': ''''CollectionDerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="6743-6746"];
m1_2896 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="6723-6723"];
m1_448 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse(string)", span="1180-1180"];
m1_449 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse(string)", file="JsonSerializerTest.cs", label="Message = message", span="1182-1182"];
m1_450 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse(string)", span="1180-1180"];
m1_185 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", span="507-507"];
m1_186 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Binding_DisallowNull>(''{requiredProperty:''}''); }, ''Required property 'RequiredProperty' expects a non-null value. Path '', line 1, position 21.'')", span="509-509"];
m1_187 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", span="507-507"];
m1_2371 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", span="5427-5427"];
m1_1473 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="3133-3133"];
m1_1474 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="PersonRaw personRaw = new PersonRaw\r\n            {\r\n                FirstName = ''FirstNameValue'',\r\n                RawContent = new JRaw(''[1,2,3,4,5]''),\r\n                LastName = ''LastNameValue''\r\n            }", span="3135-3140"];
m1_1475 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="string json", span="3142-3142"];
m1_1476 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(personRaw)", span="3144-3144"];
m1_1477 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}'', json)", span="3145-3145"];
m1_1478 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="3133-3133"];
m1_451 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", span="1187-1187"];
m1_452 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs", label="var input = new ResponseWithNewGenericProperty<int>()\r\n            {\r\n                Message = ''Trying out integer as type parameter'',\r\n                Data = 25,\r\n                Result = ''This should be fine''\r\n            }", span="1189-1194"];
m1_453 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(input)", span="1196-1196"];
m1_455 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Data, deserialized.Data)", span="1199-1199"];
m1_456 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Message, deserialized.Message)", span="1200-1200"];
m1_457 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Result, deserialized.Result)", span="1201-1201"];
m1_454 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs", label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericProperty<int>>(json)", span="1197-1197"];
m1_458 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", span="1187-1187"];
m1_3485 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", span="8020-8020"];
m1_3486 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", span="8022-8026"];
m1_3487 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="8028-8031"];
m1_3488 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''\/Date(976623132000)\/'''': 1,\r\n  ''''\/Date(1386850332000)\/'''': 2\r\n}'', json)", span="8033-8036"];
m1_3489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json)", span="8038-8038"];
m1_3490 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2.Count)", span="8040-8040"];
m1_3491 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="8041-8041"];
m1_3492 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="8042-8042"];
m1_3493 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", span="8020-8020"];
m1_4436 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", span="0-0"];
m1_2917 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="6801-6801"];
m1_2918 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="BusRun r = JsonConvert.DeserializeObject<BusRun>(''{\''Departures\'':[\''\\/Date(1309874148734-0400)\\/\'',\''\\/Date(1309874148739-0400)\\/\'',null],\''WheelchairAccessible\'':true}'')", span="6803-6803"];
m1_2919 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(List<DateTime?>), r.Departures.GetType())", span="6805-6805"];
m1_2920 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, r.Departures.Count())", span="6806-6806"];
m1_2921 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(r.Departures.ElementAt(0))", span="6807-6807"];
m1_2922 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(r.Departures.ElementAt(1))", span="6808-6808"];
m1_2923 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="Assert.IsNull(r.Departures.ElementAt(2))", span="6809-6809"];
m1_2924 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="6801-6801"];
m1_1148 [cluster="Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", span="27-27"];
m1_2030 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="4364-4364"];
m1_2031 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="string json =\r\n                    @''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Organization.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Organization.Person'''': 2\r\n}''", span="4368-4372"];
m1_2032 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Dictionary<Person, int>>(json)", span="4374-4374"];
m1_2033 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Assert.Fail()", span="4375-4375"];
m1_2034 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label=JsonSerializationException, span="4377-4377"];
m1_2035 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Assert.IsTrue(ex.Message.StartsWith(''Could not convert string 'Newtonsoft.Json.Tests.TestObjects.Organization.Person' to dictionary key type 'Newtonsoft.Json.Tests.TestObjects.Organization.Person'. Create a TypeConverter to convert from the string to the key type object. Path '['Newtonsoft.Json.Tests.TestObjects.Organization.Person']'''))", span="4379-4379"];
m1_2036 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="4364-4364"];
m1_2067 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="4511-4511"];
m1_2068 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="ExistingValueClass d = JsonConvert.DeserializeObject<ExistingValueClass>(@''{'Dictionary':{appended:'appended',existing:'new'}}'')", span="4513-4513"];
m1_2069 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(d)", span="4515-4515"];
m1_2070 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(d.Dictionary)", span="4516-4516"];
m1_2071 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(Dictionary<string, string>), d.Dictionary.GetType())", span="4517-4517"];
m1_2072 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(List<string>), d.List.GetType())", span="4518-4518"];
m1_2073 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, d.Dictionary.Count)", span="4519-4519"];
m1_2074 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''new'', d.Dictionary[''existing''])", span="4520-4520"];
m1_2075 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''appended'', d.Dictionary[''appended''])", span="4521-4521"];
m1_2076 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, d.List.Count)", span="4522-4522"];
m1_2077 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''existing'', d.List[0])", span="4523-4523"];
m1_2078 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="4511-4511"];
m1_1797 [cluster="System.Uri.ToString()", file="JsonSerializerTest.cs", label="Entry System.Uri.ToString()", span="0-0"];
m1_3113 [cluster="Newtonsoft.Json.Tests.TestObjects.Bb.Bb()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Bb.Bb()", span="27-27"];
m1_3695 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="8532-8532"];
m1_3696 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="var tuple = new MyTuple<int>(500)", span="8534-8534"];
m1_3697 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(tuple)", span="8535-8535"];
m1_3698 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="8536-8536"];
m1_3700 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Action doStuff = () => { obj = JsonConvert.DeserializeObject<MyTuple<int>>(json); }", span="8540-8540"];
m1_3699 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="MyTuple<int> obj = null", span="8538-8538"];
m1_3701 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="doStuff()", span="8543-8543"];
m1_3702 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Assert.AreEqual(500, obj.Item1)", span="8544-8544"];
m1_3703 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="8532-8532"];
m1_2185 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="4943-4943"];
m1_2186 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonSerializerTest.cs", label="_innerDictionary.Add(key, value)", span="4945-4945"];
m1_2187 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="4943-4943"];
m1_4356 [cluster="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string)", span="10220-10220"];
m1_4357 [cluster="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string)", file="JsonSerializerTest.cs", label="Value = value", span="10222-10222"];
m1_4358 [cluster="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string)", file="JsonSerializerTest.cs", label="Constructor = ''Public Parameterized 1''", span="10223-10223"];
m1_4359 [cluster="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string)", span="10220-10220"];
m1_3077 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="7156-7156"];
m1_3078 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs", label="IList<byte[]> d1 = new List<byte[]> { null }", span="7158-7158"];
m1_3079 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(d1)", span="7160-7160"];
m1_3081 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(d1.Count, d2.Count)", span="7164-7164"];
m1_3082 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(d1[0], d2[0])", span="7165-7165"];
m1_3080 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs", label="IList<byte[]> d2 = JsonConvert.DeserializeObject<IList<byte[]>>(json)", span="7162-7162"];
m1_3083 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="7156-7156"];
m1_1304 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", span="30-30"];
m1_1804 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="3930-3930"];
m1_1805 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Content content = new Content\r\n            {\r\n                Text = ''Blah, blah, blah'',\r\n                Children = new List<Content>\r\n                {\r\n                    new Content { Text = ''First'' },\r\n                    new Content { Text = ''Second'' }\r\n                }\r\n            }", span="3932-3940"];
m1_1806 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(content, Formatting.Indented)", span="3942-3942"];
m1_1807 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}'', json)", span="3944-3956"];
m1_1808 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="3930-3930"];
m1_2335 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", span="5362-5362"];
m1_2336 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", span="5362-5362"];
m1_1141 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", span="27-27"];
m1_1676 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="3610-3610"];
m1_1677 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="3612-3612"];
m1_1678 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="o.DefaultValueHandlingIgnoreProperty = ''Default!''", span="3613-3613"];
m1_1679 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="o.DefaultValueHandlingIncludeProperty = ''Default!''", span="3614-3614"];
m1_1680 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="o.DefaultValueHandlingPopulateProperty = ''Default!''", span="3615-3615"];
m1_1681 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="o.DefaultValueHandlingIgnoreAndPopulateProperty = ''Default!''", span="3616-3616"];
m1_1682 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="3618-3618"];
m1_1684 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore })", span="3629-3629"];
m1_1683 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null,\r\n  ''''ReferenceLoopHandlingErrorProperty'''': null,\r\n  ''''ReferenceLoopHandlingIgnoreProperty'''': null,\r\n  ''''ReferenceLoopHandlingSerializeProperty'''': null\r\n}'', json)", span="3620-3627"];
m1_1685 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null\r\n}'', json)", span="3631-3635"];
m1_1686 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="3610-3610"];
m1_2475 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="5659-5659"];
m1_2476 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="string json = @''{''''First'''':''''First'''',''''Second'''':2,''''Ignored'''':{''''Name'''':''''James''''},''''AdditionalContent'''':{''''LOL'''':true}}''", span="5661-5661"];
m1_2477 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="ConstructorCompexIgnoredProperty cc = JsonConvert.DeserializeObject<ConstructorCompexIgnoredProperty>(json)", span="5663-5663"];
m1_2478 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''First'', cc.First)", span="5664-5664"];
m1_2479 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, cc.Second)", span="5665-5665"];
m1_2480 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, cc.Ignored)", span="5666-5666"];
m1_2481 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="5659-5659"];
m1_3121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="7274-7274"];
m1_3122 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs", label="ConvertableIntTestClass c = new ConvertableIntTestClass\r\n            {\r\n                Integer = new ConvertibleInt(1),\r\n                NullableInteger1 = new ConvertibleInt(2),\r\n                NullableInteger2 = null\r\n            }", span="7276-7281"];
m1_3123 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="7283-7283"];
m1_3124 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}'', json)", span="7285-7289"];
m1_3125 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="7274-7274"];
m1_960 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", span="2221-2221"];
m1_991 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="2223-2223"];
m1_992 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(o.GetType())", span="2224-2224"];
m1_993 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="s.WriteObject(ms, o)", span="2225-2225"];
m1_997 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="JObject jsonNetJson = JObject.Parse(JsonConvert.SerializeObject(o))", span="2231-2231"];
m1_994 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="var data = ms.ToArray()", span="2227-2227"];
m1_995 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="JObject dataContractJson = JObject.Parse(Encoding.UTF8.GetString(data, 0, data.Length))", span="2228-2228"];
m1_996 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="dataContractJson = new JObject(dataContractJson.Properties().OrderBy(p => p.Name))", span="2229-2229"];
m1_999 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="Assert.AreEqual(dataContractJson.Count, jsonNetJson.Count)", span="2238-2238"];
m1_1000 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label=dataContractJson, span="2239-2239"];
m1_998 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="jsonNetJson = new JObject(jsonNetJson.Properties().OrderBy(p => p.Name))", span="2232-2232"];
m1_1001 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="Assert.IsTrue(JToken.DeepEquals(jsonNetJson[property.Key], property.Value), ''Property not equal: '' + property.Key)", span="2241-2241"];
m1_1002 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="return jsonNetJson.ToString();", span="2244-2244"];
m1_1003 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", span="2221-2221"];
m1_3764 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", span="8739-8739"];
m1_3765 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs", label="Tuple<int, int> tuple = Tuple.Create(500, 20)", span="8741-8741"];
m1_3766 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(tuple)", span="8742-8742"];
m1_3767 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Item1'''':500,''''Item2'''':20}'', json)", span="8743-8743"];
m1_3768 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs", label="Tuple<int, int> tuple2 = JsonConvert.DeserializeObject<Tuple<int, int>>(json)", span="8745-8745"];
m1_3769 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs", label="Assert.AreEqual(500, tuple2.Item1)", span="8746-8746"];
m1_3770 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs", label="Assert.AreEqual(20, tuple2.Item2)", span="8747-8747"];
m1_3771 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", span="8739-8739"];
m1_1796 [cluster="System.Uri.Uri(string)", file="JsonSerializerTest.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m1_2580 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="5904-5904"];
m1_2581 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n            {\r\n                Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n            }, Formatting.None, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="5906-5909"];
m1_2582 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}'', serializeObject)", span="5911-5911"];
m1_2583 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(serializeObject))", span="5913-5913"];
m1_2584 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="5915-5915"];
m1_2586 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="var deserializeObject = serializer.Deserialize<TimeZoneOffsetObject>(reader)", span="5918-5918"];
m1_2585 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="serializer.DateParseHandling = DateParseHandling.None", span="5916-5916"];
m1_2587 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="5920-5920"];
m1_2588 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="5921-5921"];
m1_2589 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="5904-5904"];
m1_2292 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="5240-5240"];
m1_2293 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="AA myA = new AA(2)", span="5242-5242"];
m1_2294 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(myA, Formatting.Indented)", span="5243-5243"];
m1_2295 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2\r\n}'', json)", span="5244-5250"];
m1_2296 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="BB myB = new BB(3, 4)", span="5252-5252"];
m1_2297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(myB, Formatting.Indented)", span="5253-5253"];
m1_2298 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''BB_property1'''': 4,\r\n  ''''BB_property2'''': 4,\r\n  ''''BB_property3'''': 4,\r\n  ''''BB_property4'''': 4,\r\n  ''''BB_property5'''': 4,\r\n  ''''BB_property7'''': 4,\r\n  ''''AA_property1'''': 3,\r\n  ''''AA_property2'''': 3,\r\n  ''''AA_property3'''': 3,\r\n  ''''AA_property4'''': 3\r\n}'', json)", span="5254-5268"];
m1_2299 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="5240-5240"];
m1_2702 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", span="6153-6153"];
m1_806 [cluster="System.Runtime.Serialization.SerializationInfo.GetString(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetString(string)", span="0-0"];
m1_2508 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", span="5733-5733"];
m1_2509 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs", label="double?[] d = (double?[])JsonConvert.DeserializeObject(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', typeof(double?[]))", span="5735-5739"];
m1_2510 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, d.Length)", span="5741-5741"];
m1_2511 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2.4, d[0])", span="5742-5742"];
m1_2512 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4.3, d[1])", span="5743-5743"];
m1_2513 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, d[2])", span="5744-5744"];
m1_2514 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", span="5733-5733"];
m1_3773 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="8757-8757"];
m1_3774 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter()", span="8759-8759"];
m1_3775 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="8760-8760"];
m1_3779 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="string json = sw.ToString()", span="8771-8771"];
m1_3776 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                StringEscapeHandling = StringEscapeHandling.EscapeHtml,\r\n                Formatting = Formatting.Indented\r\n            })", span="8762-8766"];
m1_3777 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="serializer.Serialize(jsonWriter, new { html = ''<html></html>'' })", span="8767-8767"];
m1_3778 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(StringEscapeHandling.Default, jsonWriter.StringEscapeHandling)", span="8769-8769"];
m1_3780 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''html'''': ''''\u003chtml\u003e\u003c/html\u003e''''\r\n}'', json)", span="8773-8775"];
m1_3781 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="8757-8757"];
m1_3928 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", span="9201-9201"];
m1_3929 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs", label="string str = value as string", span="9203-9203"];
m1_3931 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs", label="return base.ConvertFrom(context, culture, value);", span="9206-9206"];
m1_3935 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs", label="culture == null", span="9213-9213"];
m1_3942 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs", label="numArray[i] = (int)converter.ConvertFromString(context, culture, strArray[i])", span="9222-9222"];
m1_3930 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs", label="str == null", span="9204-9204"];
m1_3932 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs", label="string str2 = str.Trim()", span="9208-9208"];
m1_3933 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs", label="str2.Length == 0", span="9209-9209"];
m1_3937 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs", label="string[] strArray = str2.Split(',')", span="9217-9217"];
m1_3934 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs", label="return null;", span="9211-9211"];
m1_3936 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs", label="culture = CultureInfo.CurrentCulture", span="9215-9215"];
m1_3938 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs", label="int[] numArray = new int[strArray.Length]", span="9218-9218"];
m1_3939 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs", label="TypeConverter converter = TypeDescriptor.GetConverter(typeof(int))", span="9219-9219"];
m1_3941 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs", label="i < numArray.Length", span="9220-9220"];
m1_3944 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs", label="numArray.Length == 2", span="9224-9224"];
m1_3945 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs", label="return new TypeConverterSize(numArray[0], numArray[1]);", span="9226-9226"];
m1_3940 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs", label="int i = 0", span="9220-9220"];
m1_3943 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs", label="i++", span="9220-9220"];
m1_3946 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs", label="throw new ArgumentException(''Bad format.'');", span="9229-9229"];
m1_3947 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", span="9201-9201"];
m1_4342 [cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", span="10159-10159"];
m1_4343 [cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", file="JsonSerializerTest.cs", label="Constructor = ''NonPublic''", span="10161-10161"];
m1_4344 [cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", span="10159-10159"];
m1_1803 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="316-316"];
m1_440 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", span="1147-1147"];
m1_441 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''IsTransient'''':true}'', JsonConvert.SerializeObject(new ChildClassVirtual { IsTransient = true }))", span="1149-1149"];
m1_442 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonSerializerTest.cs", label="var childClass = JsonConvert.DeserializeObject<ChildClassVirtual>(@''{''''IsTransient'''':true}'')", span="1151-1151"];
m1_443 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, childClass.IsTransient)", span="1152-1152"];
m1_444 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", span="1147-1147"];
m1_1315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", span="2867-2867"];
m1_1316 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs", label="var obj = new { Formatting = ''test'' }", span="2869-2869"];
m1_1317 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings { Formatting = Formatting.Indented }", span="2871-2871"];
m1_1318 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs", label="string indented = JsonConvert.SerializeObject(obj, settings)", span="2872-2872"];
m1_1319 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs", label="string none = JsonConvert.SerializeObject(obj, Formatting.None, settings)", span="2874-2874"];
m1_1320 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs", label="Assert.AreNotEqual(indented, none)", span="2875-2875"];
m1_1321 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", span="2867-2867"];
m1_605 [cluster="Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", span="76-76"];
m1_1386 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", span="2982-2982"];
m1_1387 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2984-2984"];
m1_1388 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2985-2985"];
m1_1392 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2992-2992"];
m1_1393 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2993-2993"];
m1_1389 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(m1)", span="2987-2987"];
m1_1390 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':''''1970-01-01T00:00:00Z'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2988-2988"];
m1_1391 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2990-2990"];
m1_1394 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", span="2982-2982"];
m1_2876 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", span="6686-6686"];
m1_2877 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="6688-6688"];
m1_2878 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", span="6686-6686"];
m1_4 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ListSourceSerialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ListSourceSerialize()", span="121-121"];
m1_5 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ListSourceSerialize()", file="JsonSerializerTest.cs", label="ListSourceTest c = new ListSourceTest()", span="123-123"];
m1_6 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ListSourceSerialize()", file="JsonSerializerTest.cs", label="c.strprop = ''test''", span="124-124"];
m1_7 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ListSourceSerialize()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c)", span="125-125"];
m1_8 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ListSourceSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''strprop'''':''''test''''}'', json)", span="127-127"];
m1_9 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ListSourceSerialize()", file="JsonSerializerTest.cs", label="ListSourceTest c2 = JsonConvert.DeserializeObject<ListSourceTest>(json)", span="129-129"];
m1_10 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ListSourceSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''test'', c2.strprop)", span="131-131"];
m1_11 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ListSourceSerialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ListSourceSerialize()", span="121-121"];
m1_1406 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", span="3015-3015"];
m1_1407 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="3017-3017"];
m1_1408 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="3018-3018"];
m1_1409 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat,\r\n            })", span="3020-3023"];
m1_1410 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="3024-3024"];
m1_1411 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="var m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.None\r\n            })", span="3026-3029"];
m1_1412 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(1970, 1, 1), m2.DefaultConverter)", span="3031-3031"];
m1_1413 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(1970, 1, 1), m2.MemberConverter)", span="3032-3032"];
m1_1414 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", span="3015-3015"];
m1_3184 [cluster="Newtonsoft.Json.JsonSerializer.Create()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Create()", span="558-558"];
m1_1650 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", span="3554-3554"];
m1_1651 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs", label="string json = ''{ 'testProperty1': 'value' }''", span="3558-3558"];
m1_1652 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<ConstructorAndRequiredTestClass>(json)", span="3559-3559"];
m1_1653 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Assert.Fail()", span="3561-3561"];
m1_1654 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs", label=JsonSerializationException, span="3563-3563"];
m1_1655 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'TestProperty2' not found in JSON. Path ''''))", span="3565-3565"];
m1_1656 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", span="3554-3554"];
m1_4092 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", span="9526-9526"];
m1_4093 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonSerializerTest.cs", label="string content = @''{''''result'''':{''''time'''':1408188592,''''time'''':1408188593},''''error'''':null,''''id'''':''''1''''}''", span="9528-9528"];
m1_4094 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonSerializerTest.cs", label="JObject o = JsonConvert.DeserializeObject<JObject>(content)", span="9529-9529"];
m1_4095 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonSerializerTest.cs", label="int time = (int)o[''result''][''time'']", span="9530-9530"];
m1_4096 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1408188593, time)", span="9532-9532"];
m1_4097 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", span="9526-9526"];
m1_1164 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m1_1082 [cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", span="307-307"];
m1_3950 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="JsonSerializerTest.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m1_4200 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstantTestClass.ConstantTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstantTestClass.ConstantTestClass()", span="9766-9766"];
m1_2504 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="5721-5721"];
m1_2505 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(new double?[] { 2.4, 4.3, null }, Formatting.Indented)", span="5723-5723"];
m1_2506 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', jsonText)", span="5725-5729"];
m1_2507 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="5721-5721"];
m1_2150 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", span="4803-4803"];
m1_2152 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="JsonSerializerTest.cs", label="C2 = c2", span="4805-4805"];
m1_2153 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", span="4803-4803"];
m1_2994 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="6980-6980"];
m1_2995 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs", label="string input = @''http://tes/?a=b\\c&d=e\''", span="6982-6982"];
m1_2996 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs", label="Uri uri = new Uri(input)", span="6983-6983"];
m1_2997 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(uri)", span="6984-6984"];
m1_2999 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(uri, output)", span="6987-6987"];
m1_2998 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs", label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="6985-6985"];
m1_3000 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="6980-6980"];
m1_2707 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="6219-6219"];
m1_2708 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="Response response = new Response\r\n            {\r\n                Name = ''Success'',\r\n                Data = new JObject(new JProperty(''First'', ''Value1''), new JProperty(''Second'', ''Value2''))\r\n            }", span="6221-6225"];
m1_2709 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(response, Formatting.Indented)", span="6227-6227"];
m1_2712 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="Assert.IsTrue(deserializedResponse.Data.DeepEquals(response.Data))", span="6232-6232"];
m1_2710 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="Response deserializedResponse = JsonConvert.DeserializeObject<Response>(json)", span="6229-6229"];
m1_2711 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Success'', deserializedResponse.Name)", span="6231-6231"];
m1_2713 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="6219-6219"];
m1_2934 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="6876-6876"];
m1_2935 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="ClassWithException classWithException = new ClassWithException()", span="6878-6878"];
m1_2936 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="throw new Exception(''Test Exception'');", span="6881-6881"];
m1_2938 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="classWithException.Exceptions.Add(ex)", span="6885-6885"];
m1_2939 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="string sex = JsonConvert.SerializeObject(classWithException)", span="6887-6887"];
m1_2942 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="sex = JsonConvert.SerializeObject(classWithException, Formatting.Indented)", span="6891-6891"];
m1_2937 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label=Exception, span="6883-6883"];
m1_2940 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="ClassWithException dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="6888-6888"];
m1_2941 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="6889-6889"];
m1_2943 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="6893-6893"];
m1_2944 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="6894-6894"];
m1_2945 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="6876-6876"];
m1_3020 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="814-814"];
m1_1350 [cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file="JsonSerializerTest.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0"];
m1_3344 [cluster="Unk.ToUpper", file="JsonSerializerTest.cs", label="Entry Unk.ToUpper", span=""];
m1_857 [cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154"];
m1_446 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse()", span="1176-1176"];
m1_447 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse()", span="1176-1176"];
m1_2395 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", span="5519-5519"];
m1_1547 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="3285-3285"];
m1_1548 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n                {\r\n                    FirstName = null,\r\n                    BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n                    LastName = null,\r\n                    MiddleName = null\r\n                };\r\n\r\n                string json = JsonConvert.SerializeObject(requiredMembersClass);\r\n            }, ''Cannot write a null value for property 'FirstName'. Property requires a value. Path ''.'')", span="3287-3298"];
m1_1549 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="3285-3285"];
m1_230 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolvePropertyName(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolvePropertyName(string)", span="590-590"];
m1_231 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolvePropertyName(string)", file="JsonSerializerTest.cs", label="return propertyName.ToUpper(CultureInfo.InvariantCulture);", span="595-595"];
m1_232 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolvePropertyName(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolvePropertyName(string)", span="590-590"];
m1_1433 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="34-34"];
m1_3666 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", span="8454-8454"];
m1_3667 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", file="JsonSerializerTest.cs", label="m_Item1 = item1", span="8456-8456"];
m1_3668 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", span="8454-8454"];
m1_2715 [cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="104-104"];
m1_2085 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="4575-4575"];
m1_2086 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonSerializerTest.cs", label="return JsonConvert.SerializeObject(this, Formatting.Indented);", span="4577-4577"];
m1_2087 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="4575-4575"];
m1_2676 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="6110-6110"];
m1_2677 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="var derived = new Derived(''meh'', ''woo'')", span="6112-6112"];
m1_2678 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="var settings = new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor\r\n            }", span="6114-6118"];
m1_2679 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(derived, Formatting.Indented, settings)", span="6120-6120"];
m1_2680 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="var meh = JsonConvert.DeserializeObject<Base>(json, settings)", span="6122-6122"];
m1_2681 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(((Derived)meh).IDoWork, ''woo'')", span="6124-6124"];
m1_2682 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(meh.IDontWork, ''meh'')", span="6125-6125"];
m1_2683 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="6110-6110"];
m1_1810 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="3960-3960"];
m1_1811 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}''", span="3962-3974"];
m1_1812 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Content content = JsonConvert.DeserializeObject<Content>(json)", span="3976-3976"];
m1_1813 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Blah, blah, blah'', content.Text)", span="3978-3978"];
m1_1814 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, content.Children.Count)", span="3979-3979"];
m1_1815 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''First'', content.Children[0].Text)", span="3980-3980"];
m1_1816 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Second'', content.Children[1].Text)", span="3981-3981"];
m1_1817 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="3960-3960"];
m1_1570 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="3333-3333"];
m1_1571 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}''", span="3335-3335"];
m1_1572 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="JaggedArray aa = JsonConvert.DeserializeObject<JaggedArray>(json)", span="3337-3337"];
m1_1580 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(json, after)", span="3348-3348"];
m1_1573 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="3339-3339"];
m1_1574 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''After!'', aa.After)", span="3340-3340"];
m1_1575 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, aa.Coordinates.Length)", span="3341-3341"];
m1_1576 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, aa.Coordinates[0].Length)", span="3342-3342"];
m1_1577 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, aa.Coordinates[0][0])", span="3343-3343"];
m1_1578 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, aa.Coordinates[1][1])", span="3344-3344"];
m1_1579 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="string after = JsonConvert.SerializeObject(aa)", span="3346-3346"];
m1_1581 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="3333-3333"];
m1_1597 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="3407-3407"];
m1_1598 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs", label="Person person = new Person\r\n            {\r\n                Name = ''Mike Manager'',\r\n                BirthDate = new DateTime(1983, 8, 3, 0, 0, 0, DateTimeKind.Utc),\r\n                Department = ''IT'',\r\n                LastModified = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc)\r\n            }", span="3409-3415"];
m1_1599 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs", label="return person;", span="3416-3416"];
m1_1600 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="3407-3407"];
m1_2574 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", span="5868-5868"];
m1_1611 [cluster="Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", span="29-29"];
m1_3907 [cluster="Size.cstr", file="JsonSerializerTest.cs", label="Entry Size.cstr", span=""];
m1_2208 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4973-4973"];
m1_2209 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="dictionary == null", span="4975-4975"];
m1_2211 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label=dictionary, span="4980-4980"];
m1_2210 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="return;", span="4977-4977"];
m1_2212 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="this[entry.Key] = entry.Value", span="4982-4982"];
m1_2213 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4973-4973"];
m1_2703 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", span="6130-6130"];
m1_2280 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", span="5218-5218"];
m1_2281 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonSerializerTest.cs", label="Key = k", span="5220-5220"];
m1_2282 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonSerializerTest.cs", label="Value = v", span="5221-5221"];
m1_2283 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", span="5218-5218"];
m1_3220 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="7471-7471"];
m1_3221 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new Widget1 { Id = new WidgetId1 { Value = 1234 } })", span="7473-7473"];
m1_3222 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Id'''':''''1234''''}'', json)", span="7475-7475"];
m1_3223 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs", label="Widget1 w = JsonConvert.DeserializeObject<Widget1>(@''{''''Id'''':''''1234''''}'')", span="7477-7477"];
m1_3224 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new WidgetId1 { Value = 1234 }, w.Id)", span="7479-7479"];
m1_3225 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="7471-7471"];
m1_218 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="428-428"];
m1_2733 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", span="6261-6261"];
m1_2734 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs", label="MultipleParametrizedConstructorsJsonConstructor c = JsonConvert.DeserializeObject<MultipleParametrizedConstructorsJsonConstructor>(''{Value:'value!', Age:1}'')", span="6263-6263"];
m1_2735 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Public Parameterized 2'', c.Constructor)", span="6264-6264"];
m1_2736 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value!'', c.Value)", span="6265-6265"];
m1_2737 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Age)", span="6266-6266"];
m1_2738 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", span="6261-6261"];
m1_1740 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="3781-3781"];
m1_1741 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="DataContractPrivateMembers c = new DataContractPrivateMembers(''Jeff'', 26, 10, ''Dr'')", span="3783-3783"];
m1_1742 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="c.NotIncluded = ''Hi''", span="3784-3784"];
m1_1743 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="3785-3785"];
m1_1744 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''_name'''': ''''Jeff'''',\r\n  ''''_age'''': 26,\r\n  ''''Rank'''': 10,\r\n  ''''JsonTitle'''': ''''Dr''''\r\n}'', json)", span="3787-3792"];
m1_1745 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="DataContractPrivateMembers cc = JsonConvert.DeserializeObject<DataContractPrivateMembers>(json)", span="3794-3794"];
m1_1746 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''_name: Jeff, _age: 26, Rank: 10, JsonTitle: Dr'', cc.ToString())", span="3795-3795"];
m1_1747 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="3781-3781"];
m1_468 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyVirtual<T>.ResponseWithNewGenericPropertyVirtual()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyVirtual<T>.ResponseWithNewGenericPropertyVirtual()", span="1160-1160"];
m1_2716 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="133-133"];
m1_1769 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0"];
m1_920 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", span="1975-1975"];
m1_932 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonSerializerTest.cs", label="_name = name", span="1977-1977"];
m1_933 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonSerializerTest.cs", label="_number = number", span="1978-1978"];
m1_934 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", span="1975-1975"];
m1_2172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="4890-4890"];
m1_2173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="4890-4890"];
m1_2704 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="6200-6200"];
m1_2705 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonSerializerTest.cs", label="return JsonConvert.DeserializeObject<NullableStructPropertyClass>(\r\n                serStr,\r\n                new JsonSerializerSettings\r\n                {\r\n                    NullValueHandling = NullValueHandling.Ignore,\r\n                    MissingMemberHandling = MissingMemberHandling.Ignore\r\n                });", span="6202-6208"];
m1_2706 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="6200-6200"];
m1_2985 [cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="172-172"];
m1_1954 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="4205-4205"];
m1_1955 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(PORTABLE || DNXCORE50 || PORTABLE40) || NETSTANDARD1_3\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error setting value to 'ReadTimeout' on 'System.IO.MemoryStream'.'')", span="4207-4218"];
m1_1956 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="4205-4205"];
m1_1384 [cluster="Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", span="27-27"];
m1_1376 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", span="32-32"];
m1_1853 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="4040-4040"];
m1_1854 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs", label="string json = @''{id: ''''12'''', name: ''''test'''', items: [{id: ''''112'''', name: ''''testing''''}]}''", span="4042-4042"];
m1_1855 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs", label="ListTestClass l = JsonConvert.DeserializeObject<ListTestClass>(json)", span="4044-4044"];
m1_1856 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="4040-4040"];
m1_1199 [cluster="System.TimeSpan.FromHours(double)", file="JsonSerializerTest.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m1_793 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", span="0-0"];
m1_3171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", span="7368-7368"];
m1_3172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonSerializerTest.cs", label="NullableGuid ng = new NullableGuid {Id = Guid.Empty}", span="7370-7370"];
m1_3173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonSerializerTest.cs", label="NullableGuidCountingJsonTextWriter writer = new NullableGuidCountingJsonTextWriter(new StreamWriter(Stream.Null))", span="7371-7371"];
m1_3175 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonSerializerTest.cs", label="serializer.Serialize(writer, ng)", span="7373-7373"];
m1_3179 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonSerializerTest.cs", label="serializer.Serialize(writer, ng)", span="7377-7377"];
m1_3174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = JsonSerializer.Create()", span="7372-7372"];
m1_3176 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, writer.NullableGuidCount)", span="7374-7374"];
m1_3180 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, writer.NullableGuidCount)", span="7378-7378"];
m1_3178 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonSerializerTest.cs", label="serializer.TraceWriter = traceWriter", span="7376-7376"];
m1_3177 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonSerializerTest.cs", label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="7375-7375"];
m1_3181 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", span="7368-7368"];
m1_2394 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", span="5513-5513"];
m1_532 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", span="1328-1328"];
m1_533 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="1330-1330"];
m1_534 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="1332-1332"];
m1_535 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.Binder = customBinder", span="1334-1334"];
m1_536 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(customBinder, serializer.Binder)", span="1335-1335"];
m1_537 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.IsInstanceOf(typeof(SerializationBinderAdapter), serializer.SerializationBinder)", span="1338-1338"];
m1_538 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.SerializationBinder = customBinder", span="1340-1340"];
m1_539 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(customBinder, serializer.SerializationBinder)", span="1341-1341"];
m1_540 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<InvalidOperationException>(() =>\r\n            {\r\n#pragma warning disable CS0618 // Type or member is obsolete\r\n                var serializationBinder = serializer.Binder;\r\n#pragma warning restore CS0618 // Type or member is obsolete\r\n                serializationBinder.ToString();\r\n            }, ''Cannot get SerializationBinder because an ISerializationBinder was previously set.'')", span="1343-1349"];
m1_541 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.CheckAdditionalContent = true", span="1351-1351"];
m1_542 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, serializer.CheckAdditionalContent)", span="1352-1352"];
m1_543 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="1354-1354"];
m1_544 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, serializer.ConstructorHandling)", span="1355-1355"];
m1_545 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.Context = new StreamingContext(StreamingContextStates.Other)", span="1358-1358"];
m1_546 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), serializer.Context)", span="1359-1359"];
m1_548 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.ContractResolver = resolver", span="1363-1363"];
m1_549 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(resolver, serializer.ContractResolver)", span="1364-1364"];
m1_550 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.Converters.Add(new StringEnumConverter())", span="1366-1366"];
m1_551 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, serializer.Converters.Count)", span="1367-1367"];
m1_552 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.Culture = new CultureInfo(''en-nz'')", span="1369-1369"];
m1_553 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''en-NZ'', serializer.Culture.ToString())", span="1370-1370"];
m1_554 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.EqualityComparer = EqualityComparer<object>.Default", span="1372-1372"];
m1_555 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(EqualityComparer<object>.Default, serializer.EqualityComparer)", span="1373-1373"];
m1_556 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="1375-1375"];
m1_557 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, serializer.DateFormatHandling)", span="1376-1376"];
m1_558 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.DateFormatString = ''yyyy''", span="1378-1378"];
m1_559 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''yyyy'', serializer.DateFormatString)", span="1379-1379"];
m1_560 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.DateParseHandling = DateParseHandling.None", span="1381-1381"];
m1_561 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateParseHandling.None, serializer.DateParseHandling)", span="1382-1382"];
m1_562 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="1384-1384"];
m1_563 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateTimeZoneHandling.Utc, serializer.DateTimeZoneHandling)", span="1385-1385"];
m1_564 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="1387-1387"];
m1_565 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, serializer.DefaultValueHandling)", span="1388-1388"];
m1_566 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.FloatFormatHandling = FloatFormatHandling.Symbol", span="1390-1390"];
m1_567 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FloatFormatHandling.Symbol, serializer.FloatFormatHandling)", span="1391-1391"];
m1_568 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.FloatParseHandling = FloatParseHandling.Decimal", span="1393-1393"];
m1_569 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FloatParseHandling.Decimal, serializer.FloatParseHandling)", span="1394-1394"];
m1_570 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.Formatting = Formatting.Indented", span="1396-1396"];
m1_571 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(Formatting.Indented, serializer.Formatting)", span="1397-1397"];
m1_572 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.MaxDepth = 9001", span="1399-1399"];
m1_573 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(9001, serializer.MaxDepth)", span="1400-1400"];
m1_574 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.MissingMemberHandling = MissingMemberHandling.Error", span="1402-1402"];
m1_575 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(MissingMemberHandling.Error, serializer.MissingMemberHandling)", span="1403-1403"];
m1_576 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.NullValueHandling = NullValueHandling.Ignore", span="1405-1405"];
m1_577 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(NullValueHandling.Ignore, serializer.NullValueHandling)", span="1406-1406"];
m1_578 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.ObjectCreationHandling = ObjectCreationHandling.Replace", span="1408-1408"];
m1_579 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ObjectCreationHandling.Replace, serializer.ObjectCreationHandling)", span="1409-1409"];
m1_580 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.PreserveReferencesHandling = PreserveReferencesHandling.All", span="1411-1411"];
m1_581 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(PreserveReferencesHandling.All, serializer.PreserveReferencesHandling)", span="1412-1412"];
m1_582 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="1414-1414"];
m1_583 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ReferenceLoopHandling.Ignore, serializer.ReferenceLoopHandling)", span="1415-1415"];
m1_585 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.ReferenceResolver = referenceResolver", span="1418-1418"];
m1_586 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(referenceResolver, serializer.ReferenceResolver)", span="1419-1419"];
m1_587 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="1421-1421"];
m1_588 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, serializer.StringEscapeHandling)", span="1422-1422"];
m1_590 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.TraceWriter = traceWriter", span="1425-1425"];
m1_591 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(traceWriter, serializer.TraceWriter)", span="1426-1426"];
m1_592 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="1430-1430"];
m1_593 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FormatterAssemblyStyle.Full, serializer.TypeNameAssemblyFormat)", span="1431-1431"];
m1_594 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TypeNameAssemblyFormatHandling.Full, serializer.TypeNameAssemblyFormatHandling)", span="1434-1434"];
m1_595 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.TypeNameAssemblyFormatHandling = TypeNameAssemblyFormatHandling.Simple", span="1436-1436"];
m1_596 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FormatterAssemblyStyle.Simple, serializer.TypeNameAssemblyFormat)", span="1438-1438"];
m1_597 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.TypeNameAssemblyFormatHandling = TypeNameAssemblyFormatHandling.Full", span="1442-1442"];
m1_598 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TypeNameAssemblyFormatHandling.Full, serializer.TypeNameAssemblyFormatHandling)", span="1443-1443"];
m1_599 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.TypeNameHandling = TypeNameHandling.All", span="1445-1445"];
m1_600 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TypeNameHandling.All, serializer.TypeNameHandling)", span="1446-1446"];
m1_547 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="1362-1362"];
m1_584 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="1417-1417"];
m1_589 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="1424-1424"];
m1_601 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", span="1328-1328"];
m1_1522 [cluster="Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", span="29-29"];
m1_3948 [cluster="System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", span="0-0"];
m1_3872 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", span="9009-9009"];
m1_3873 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonSerializerTest.cs", label="bar == null", span="9011-9011"];
m1_3874 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonSerializerTest.cs", label="throw new ArgumentNullException(nameof(bar));", span="9013-9013"];
m1_3875 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonSerializerTest.cs", label="Bar = bar", span="9016-9016"];
m1_3876 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", span="9009-9009"];
m1_431 [cluster="Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", span="775-775"];
m1_1205 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="2660-2660"];
m1_1206 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Dictionary<int, int> values = new Dictionary<int, int>()", span="2662-2662"];
m1_1207 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="values.Add(-5, 6)", span="2663-2663"];
m1_1208 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="values.Add(int.MinValue, int.MaxValue)", span="2664-2664"];
m1_1209 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(values)", span="2666-2666"];
m1_1212 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(values, newValues)", span="2672-2672"];
m1_1210 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''-5'''':6,''''-2147483648'''':2147483647}'', json)", span="2668-2668"];
m1_1211 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Dictionary<int, int> newValues = JsonConvert.DeserializeObject<Dictionary<int, int>>(json)", span="2670-2670"];
m1_1213 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="2660-2660"];
m1_3384 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="2096-2096"];
m1_1434 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="3069-3069"];
m1_1435 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="DateTime date = Convert.ToDateTime(''1970-01-01T00:00:00Z'').ToUniversalTime()", span="3071-3071"];
m1_1436 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="MemberConverterClass c = new MemberConverterClass\r\n            {\r\n                DefaultConverter = date,\r\n                MemberConverter = date\r\n            }", span="3073-3077"];
m1_1437 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="3079-3079"];
m1_1438 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''DefaultConverter'''': ''''1970-01-01T00:00:00Z'''',\r\n  ''''MemberConverter'''': ''''1970-01-01T00:00:00Z''''\r\n}'', json)", span="3081-3084"];
m1_1439 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="3069-3069"];
m1_56 [cluster="Unk.IsTrue", file="JsonSerializerTest.cs", label="Entry Unk.IsTrue", span=""];
m1_927 [cluster="System.IO.StreamWriter.Flush()", file="JsonSerializerTest.cs", label="Entry System.IO.StreamWriter.Flush()", span="0-0"];
m1_4407 [cluster="System.Runtime.Serialization.SerializationInfo.GetSByte(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetSByte(string)", span="0-0"];
m1_2222 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="4996-4996"];
m1_2223 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonSerializerTest.cs", label="return _innerDictionary.TryGetValue(key, out value);", span="4998-4998"];
m1_2224 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="4996-4996"];
m1_1101 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="2405-2405"];
m1_1102 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="string value = JsonConvert.SerializeObject(new SetOnlyPropertyClass())", span="2407-2407"];
m1_1103 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="SetOnlyPropertyClass c = JsonConvert.DeserializeObject<SetOnlyPropertyClass>(value)", span="2409-2409"];
m1_1104 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c.Field, ''Field'')", span="2411-2411"];
m1_1105 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="2405-2405"];
m1_49 [cluster="System.IO.File.OpenRead(string)", file="JsonSerializerTest.cs", label="Entry System.IO.File.OpenRead(string)", span="0-0"];
m1_29 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeAlmostImmutableStruct()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeAlmostImmutableStruct()", span="168-168"];
m1_30 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeAlmostImmutableStruct()", file="JsonSerializerTest.cs", label="var result = JsonConvert.DeserializeObject<AlmostImmutableStruct>(''{ \''Value\'': \''working\'', \''Value2\'': 2 }'')", span="170-170"];
m1_31 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeAlmostImmutableStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, result.Value)", span="172-172"];
m1_32 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeAlmostImmutableStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, result.Value2)", span="173-173"];
m1_33 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeAlmostImmutableStruct()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeAlmostImmutableStruct()", span="168-168"];
m1_144 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", span="431-431"];
m1_145 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="IList<bool?> l = JsonConvert.DeserializeObject<IList<bool?>>(@''[\r\n  1,\r\n  0,\r\n  1.1,\r\n  0.0,\r\n  0.000000000001,\r\n  9999999999,\r\n  -9999999999,\r\n  9999999999999999999999999999999999999999999999999999999999999999999999,\r\n  -9999999999999999999999999999999999999999999999999999999999999999999999,\r\n  'true',\r\n  'TRUE',\r\n  'false',\r\n  'FALSE',\r\n  '',\r\n  null\r\n]'')", span="433-449"];
m1_146 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="int i = 0", span="451-451"];
m1_147 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="452-452"];
m1_148 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(false, l[i++])", span="453-453"];
m1_149 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="454-454"];
m1_150 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(false, l[i++])", span="455-455"];
m1_151 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="456-456"];
m1_152 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="457-457"];
m1_153 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="458-458"];
m1_154 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="459-459"];
m1_155 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="460-460"];
m1_156 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="461-461"];
m1_157 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, l[i++])", span="462-462"];
m1_158 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(false, l[i++])", span="463-463"];
m1_159 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(false, l[i++])", span="464-464"];
m1_160 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, l[i++])", span="465-465"];
m1_161 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, l[i++])", span="466-466"];
m1_162 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", span="431-431"];
m1_3526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", span="8144-8144"];
m1_3527 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new IgnoreDataMemberTestClass() { Ignored = int.MaxValue }, Formatting.Indented)", span="8146-8146"];
m1_3528 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{}'', json)", span="8147-8147"];
m1_3529 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", span="8144-8144"];
m1_1100 [cluster="Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", span="27-27"];
m1_4260 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", span="9934-9934"];
m1_4261 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonSerializerTest.cs", label="string JsonMessage = @''{\r\n  ''''From'''': {\r\n    ''''Address'''': ''''askywalker@theEmpire.gov'''',\r\n    ''''DisplayName'''': ''''Darth Vader''''\r\n  },\r\n  ''''Sender'''': null,\r\n  ''''ReplyTo'''': null,\r\n  ''''ReplyToList'''': [],\r\n  ''''To'''': [\r\n    {\r\n      ''''Address'''': ''''lskywalker@theRebellion.org'''',\r\n      ''''DisplayName'''': ''''Luke Skywalker''''\r\n    }\r\n  ],\r\n  ''''Bcc'''': [],\r\n  ''''CC'''': [\r\n    {\r\n      ''''Address'''': ''''lorgana@alderaan.gov'''',\r\n      ''''DisplayName'''': ''''Princess Leia''''\r\n    }\r\n  ],\r\n  ''''Priority'''': 0,\r\n  ''''DeliveryNotificationOptions'''': 0,\r\n  ''''Subject'''': ''''Family tree'''',\r\n  ''''SubjectEncoding'''': null,\r\n  ''''Headers'''': [],\r\n  ''''HeadersEncoding'''': null,\r\n  ''''Body'''': ''''<strong>I am your father!</strong>'''',\r\n  ''''BodyEncoding'''': ''''US-ASCII'''',\r\n  ''''BodyTransferEncoding'''': -1,\r\n  ''''IsBodyHtml'''': true,\r\n  ''''Attachments'''': [\r\n    {\r\n      ''''FileName'''': ''''skywalker family tree.jpg'''',\r\n      ''''ContentBase64'''': ''''AQIDBAU=''''\r\n    }\r\n  ],\r\n  ''''AlternateViews'''': []\r\n}''", span="9936-9974"];
m1_4262 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n                {\r\n                    JsonConvert.DeserializeObject<System.Net.Mail.MailMessage>(\r\n                        JsonMessage,\r\n                        new MailAddressReadConverter(),\r\n                        new AttachmentReadConverter(),\r\n                        new EncodingReadConverter());\r\n                },\r\n                ''Cannot populate list type System.Net.Mime.HeaderCollection. Path 'Headers', line 26, position 14.'')", span="9976-9984"];
m1_4263 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", span="9934-9934"];
m1_3735 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloats.NullableFloats()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloats.NullableFloats()", span="8619-8619"];
m1_3350 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", span="7731-7731"];
m1_3351 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="return objectType == typeof(Color);", span="7733-7733"];
m1_3352 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", span="7731-7731"];
m1_2373 [cluster="Unk.ToString", file="JsonSerializerTest.cs", label="Entry Unk.ToString", span=""];
m1_525 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="155-155"];
m1_830 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonReference.PersonReference()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonReference.PersonReference()", span="30-30"];
m1_3820 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="8864-8864"];
m1_3821 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="string json = @''[\r\n  ''''NaN'''',\r\n  ''''Infinity'''',\r\n  ''''-Infinity''''\r\n]''", span="8866-8870"];
m1_3822 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="IList<float> floats = JsonConvert.DeserializeObject<IList<float>>(json)", span="8872-8872"];
m1_3826 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="IList<double> doubles = JsonConvert.DeserializeObject<IList<double>>(json)", span="8877-8877"];
m1_3823 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Assert.AreEqual(float.NaN, floats[0])", span="8873-8873"];
m1_3824 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Assert.AreEqual(float.PositiveInfinity, floats[1])", span="8874-8874"];
m1_3825 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Assert.AreEqual(float.NegativeInfinity, floats[2])", span="8875-8875"];
m1_3827 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Assert.AreEqual(float.NaN, doubles[0])", span="8878-8878"];
m1_3828 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Assert.AreEqual(float.PositiveInfinity, doubles[1])", span="8879-8879"];
m1_3829 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Assert.AreEqual(float.NegativeInfinity, doubles[2])", span="8880-8880"];
m1_3830 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="8864-8864"];
m1_808 [cluster="System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", span="0-0"];
m1_2191 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0"];
m1_503 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", span="1279-1279"];
m1_504 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="string json = @''/* Test */\r\n            {\r\n                /*Test*/''''A'''':/* Test */true/* Test */,\r\n                /* Test */''''B'''':/* Test */false/* Test */,\r\n                /* Test */''''C'''':/* Test */[\r\n                    /* Test */\r\n                    1/* Test */\r\n                ]/* Test */\r\n            }\r\n            /* Test */''", span="1281-1290"];
m1_505 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="JObject o = (JObject)JsonConvert.DeserializeObject(json)", span="1291-1291"];
m1_511 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(JToken.DeepEquals(o, JObject.Parse(json)))", span="1298-1298"];
m1_506 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, o.Count)", span="1292-1292"];
m1_507 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, (bool)o[''A''])", span="1293-1293"];
m1_508 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(false, (bool)o[''B''])", span="1294-1294"];
m1_509 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, o[''C''].Count())", span="1295-1295"];
m1_510 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, (int)o[''C''][0])", span="1296-1296"];
m1_512 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="json = @''{/* Test */}''", span="1300-1300"];
m1_513 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="o = (JObject)JsonConvert.DeserializeObject(json)", span="1301-1301"];
m1_515 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(JToken.DeepEquals(o, JObject.Parse(json)))", span="1303-1303"];
m1_514 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, o.Count)", span="1302-1302"];
m1_516 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="json = @''{''''A'''': true/* Test */}''", span="1305-1305"];
m1_517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="o = (JObject)JsonConvert.DeserializeObject(json)", span="1306-1306"];
m1_520 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(JToken.DeepEquals(o, JObject.Parse(json)))", span="1309-1309"];
m1_518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, o.Count)", span="1307-1307"];
m1_519 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, (bool)o[''A''])", span="1308-1308"];
m1_521 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", span="1279-1279"];
m1_1809 [cluster="Newtonsoft.Json.Tests.TestObjects.Content.Content()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Content.Content()", span="31-31"];
m1_2195 [cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0"];
m1_1934 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", span="822-822"];
m1_923 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="574-574"];
m1_1481 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="3149-3149"];
m1_1482 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="string json = @''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}''", span="3151-3151"];
m1_1483 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="PersonRaw personRaw = JsonConvert.DeserializeObject<PersonRaw>(json)", span="3153-3153"];
m1_1484 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''FirstNameValue'', personRaw.FirstName)", span="3155-3155"];
m1_1485 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[1,2,3,4,5]'', personRaw.RawContent.ToString())", span="3156-3156"];
m1_1486 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''LastNameValue'', personRaw.LastName)", span="3157-3157"];
m1_1487 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="3149-3149"];
m1_2001 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="4311-4311"];
m1_2002 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Foo f = new Foo()", span="4313-4313"];
m1_2003 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="f.Bars.Add(new Bar { Id = 0 })", span="4314-4314"];
m1_2004 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="f.Bars.Add(new Bar { Id = 1 })", span="4315-4315"];
m1_2005 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="f.Bars.Add(new Bar { Id = 2 })", span="4316-4316"];
m1_2006 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(f, Formatting.Indented)", span="4318-4318"];
m1_2007 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Bars'''': [\r\n    0,\r\n    1,\r\n    2\r\n  ]\r\n}'', json)", span="4319-4325"];
m1_2008 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Foo newFoo = JsonConvert.DeserializeObject<Foo>(json)", span="4327-4327"];
m1_2009 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, newFoo.Bars.Count)", span="4328-4328"];
m1_2010 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, newFoo.Bars[0].Id)", span="4329-4329"];
m1_2011 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, newFoo.Bars[1].Id)", span="4330-4330"];
m1_2012 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, newFoo.Bars[2].Id)", span="4331-4331"];
m1_2013 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="4311-4311"];
m1_1728 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", span="3698-3698"];
m1_2666 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", span="6082-6082"];
m1_2667 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", span="6082-6082"];
m1_2986 [cluster="System.IO.StringWriter.ToString()", file="JsonSerializerTest.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m1_2987 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="6969-6969"];
m1_2988 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs", label="string input = ''http://test.com/%22foo+bar%22''", span="6971-6971"];
m1_2989 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs", label="Uri uri = new Uri(input)", span="6972-6972"];
m1_2990 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(uri)", span="6973-6973"];
m1_2992 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(uri, output)", span="6976-6976"];
m1_2991 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs", label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="6974-6974"];
m1_2993 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="6969-6969"];
m1_3728 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="681-681"];
m1_949 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractWithHidden.ChildDataContractWithHidden()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractWithHidden.ChildDataContractWithHidden()", span="2006-2006"];
m1_1844 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="4028-4028"];
m1_1845 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="string json = @''{'SetOnlyProperty':[1,2,3,4,5]}''", span="4030-4030"];
m1_1846 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="SetOnlyPropertyClass2 setOnly = JsonConvert.DeserializeObject<SetOnlyPropertyClass2>(json)", span="4032-4032"];
m1_1847 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="JArray a = (JArray)setOnly.GetValue()", span="4033-4033"];
m1_1848 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, a.Count)", span="4034-4034"];
m1_1849 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, (int)a[0])", span="4035-4035"];
m1_1850 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, (int)a[a.Count - 1])", span="4036-4036"];
m1_1851 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="4028-4028"];
m1_2792 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="6417-6417"];
m1_2793 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs", label="string json = @''{A:''''Test''''}''", span="6419-6419"];
m1_2794 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs", label="var withoutParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithoutParameterisedConstructor>(json)", span="6421-6421"];
m1_2795 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs", label="var withParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithParameterisedConstructor>(json)", span="6422-6422"];
m1_2796 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(withoutParameterisedConstructor.B, withParameterisedConstructor.B)", span="6423-6423"];
m1_2797 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="6417-6417"];
m1_1314 [cluster="System.Collections.Generic.Stack<T>.Push(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0"];
m1_4225 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9865-9865"];
m1_4226 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="9867-9867"];
m1_4227 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9865-9865"];
m1_4309 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="10063-10063"];
m1_4310 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="var encodingName = serializer.Deserialize<string>(reader)", span="10065-10065"];
m1_4311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="encodingName == null", span="10066-10066"];
m1_4313 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="return Encoding.GetEncoding(encodingName);", span="10071-10071"];
m1_4312 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="return null;", span="10068-10068"];
m1_4314 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="10063-10063"];
m1_4015 [cluster="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.TypeConverterJsonConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.TypeConverterJsonConverter()", span="37-37"];
m1_1780 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="3880-3880"];
m1_1781 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''short'''': {\r\n    ''''original'''': ''''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'''',\r\n    ''''short'''': ''''m2sqc6'''',\r\n    ''''shortened'''': ''''http://short.ie/m2sqc6'''',\r\n    ''''error'''': {\r\n      ''''code'''': 0,\r\n      ''''msg'''': ''''No action taken''''\r\n    }\r\n  }\r\n}''", span="3882-3892"];
m1_1782 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="JObject o = JObject.Parse(json)", span="3894-3894"];
m1_1783 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Shortie s = JsonConvert.DeserializeObject<Shortie>(o[''short''].ToString())", span="3896-3896"];
m1_1784 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(s)", span="3897-3897"];
m1_1785 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(s.Original, ''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'')", span="3899-3899"];
m1_1786 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(s.Short, ''m2sqc6'')", span="3900-3900"];
m1_1787 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(s.Shortened, ''http://short.ie/m2sqc6'')", span="3901-3901"];
m1_1788 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="3880-3880"];
m1_4435 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", span="0-0"];
m1_3729 [cluster="System.DateTimeOffset.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry System.DateTimeOffset.ToString(System.IFormatProvider)", span="0-0"];
m1_4438 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", span="0-0"];
m1_942 [cluster="string.Split(params char[])", file="JsonSerializerTest.cs", label="Entry string.Split(params char[])", span="0-0"];
m1_2772 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="6337-6337"];
m1_2773 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs", label="MultiIndexSuper e = new MultiIndexSuper()", span="6339-6339"];
m1_2774 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="6341-6341"];
m1_2775 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{}'', json)", span="6343-6343"];
m1_2776 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="6337-6337"];
m1_2982 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="149-149"];
m1_4284 [cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", span="500-500"];
m1_3128 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", span="7293-7293"];
m1_3129 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}''", span="7295-7299"];
m1_3130 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<ConvertableIntTestClass>(json), ''Error converting value 1 to type 'Newtonsoft.Json.Tests.ConvertibleInt'. Path 'Integer', line 2, position 14.'')", span="7301-7301"];
m1_3131 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", span="7293-7293"];
m1_4247 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", span="9899-9899"];
m1_4248 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''DerivedProperty'''': ''''derived'''',\r\n  ''''BaseProperty'''': ''''base''''\r\n}''", span="9901-9904"];
m1_4249 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonSerializerTest.cs", label="var d = JsonConvert.DeserializeObject<DerivedWithPrivate>(json)", span="9906-9906"];
m1_4250 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''base'', d.BaseProperty)", span="9908-9908"];
m1_4251 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''derived'', d.DerivedProperty)", span="9909-9909"];
m1_4252 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", span="9899-9899"];
m1_847 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", span="1844-1844"];
m1_848 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="string s = null", span="1846-1846"];
m1_849 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="var v = new JValue(s)", span="1847-1847"];
m1_850 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="var o = JObject.FromObject(new { title = v })", span="1848-1848"];
m1_851 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="JObject oo = new JObject\r\n            {\r\n                { ''title'', v }\r\n            }", span="1850-1853"];
m1_853 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, v.Value)", span="1857-1857"];
m1_854 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JTokenType.String, v.Type)", span="1858-1858"];
m1_852 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="string output = o.ToString()", span="1855-1855"];
m1_855 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''title'''': null\r\n}'', output)", span="1860-1862"];
m1_856 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", span="1844-1844"];
m1_3051 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.ReflectionContractResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.ReflectionContractResolver()", span="7019-7019"];
m1_3498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="8054-8054"];
m1_3499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs", label="var testObj = new PersonSerializable() { Name = ''John Doe'', Age = 28 }", span="8056-8056"];
m1_3500 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs", label="var json = Serialize(testObj)", span="8058-8058"];
m1_3502 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testObj.Name, objDeserialized.Name)", span="8061-8061"];
m1_3501 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs", label="var objDeserialized = Deserialize<PersonSerializable>(json)", span="8059-8059"];
m1_3503 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, objDeserialized.Age)", span="8062-8062"];
m1_3504 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="8054-8054"];
m1_3338 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="7718-7718"];
m1_3339 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Color color = (Color)value", span="7720-7720"];
m1_3341 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="writer.WriteValue('':::'' + fixedColor.ToKnownColor().ToString().ToUpper() + '':::'')", span="7723-7723"];
m1_3340 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Color fixedColor = (color == Color.White || color == Color.Black) ? color : Color.Gray", span="7721-7721"];
m1_3342 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="7718-7718"];
m1_1523 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="3221-3221"];
m1_1524 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="RequiredMembersClass c = new RequiredMembersClass()\r\n            {\r\n                BirthDate = new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc),\r\n                FirstName = ''Bob'',\r\n                LastName = ''Smith'',\r\n                MiddleName = ''Cosmo''\r\n            }", span="3223-3229"];
m1_1525 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="3231-3231"];
m1_1526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''FirstName'''': ''''Bob'''',\r\n  ''''MiddleName'''': ''''Cosmo'''',\r\n  ''''LastName'''': ''''Smith'''',\r\n  ''''BirthDate'''': ''''2000-12-20T10:55:55Z''''\r\n}'', json)", span="3233-3238"];
m1_1527 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="RequiredMembersClass c2 = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="3240-3240"];
m1_1528 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Bob'', c2.FirstName)", span="3242-3242"];
m1_1529 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc), c2.BirthDate)", span="3243-3243"];
m1_1530 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="3221-3221"];
m1_1044 [cluster="System.DateTime.DateTime(int, int, int)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m1_3862 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="8968-8968"];
m1_3863 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonSerializerTest.cs", label="string json =\r\n                JsonConvert.SerializeObject(new AnswerFilterModel(), Formatting.Indented, new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n                        IgnoreSerializableAttribute = false\r\n                    }\r\n                })", span="8970-8977"];
m1_3864 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''<Active>k__BackingField'''': false,\r\n  ''''<Ja>k__BackingField'''': false,\r\n  ''''<Handlungsbedarf>k__BackingField'''': false,\r\n  ''''<Beratungsbedarf>k__BackingField'''': false,\r\n  ''''<Unzutreffend>k__BackingField'''': false,\r\n  ''''<Unbeantwortet>k__BackingField'''': false\r\n}'', json)", span="8979-8986"];
m1_3865 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="8968-8968"];
m1_1440 [cluster="System.Convert.ToDateTime(string)", file="JsonSerializerTest.cs", label="Entry System.Convert.ToDateTime(string)", span="0-0"];
m1_2182 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="4938-4938"];
m1_2183 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="((IDictionary<string, T>)_innerDictionary).Add(item)", span="4940-4940"];
m1_2184 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="4938-4938"];
m1_101 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime, System.TimeSpan)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime, System.TimeSpan)", span="179-179"];
m1_4334 [cluster="Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", span="43-43"];
m1_1239 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", span="739-739"];
m1_4220 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType.BaseConstructorType(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType.BaseConstructorType(string)", span="9853-9853"];
m1_4221 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType.BaseConstructorType(string)", file="JsonSerializerTest.cs", label="BaseProperty = baseProperty", span="9855-9855"];
m1_4222 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType.BaseConstructorType(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType.BaseConstructorType(string)", span="9853-9853"];
m1_607 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JsonSerializerTest.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m1_1277 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="2783-2783"];
m1_1278 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="ClassWithArray wibble = new ClassWithArray()", span="2785-2785"];
m1_1279 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="wibble.Foo = ''hello''", span="2786-2786"];
m1_1280 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="wibble.Bar.Add(1)", span="2787-2787"];
m1_1281 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="wibble.Bar.Add(2)", span="2788-2788"];
m1_1282 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="wibble.Bar.Add(3)", span="2789-2789"];
m1_1283 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(wibble)", span="2790-2790"];
m1_1284 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="ClassWithArray wibbleOut = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="2792-2792"];
m1_1285 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''hello'', wibbleOut.Foo)", span="2793-2793"];
m1_1286 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, wibbleOut.Bar.Count)", span="2795-2795"];
m1_1287 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[0])", span="2796-2796"];
m1_1288 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[1])", span="2797-2797"];
m1_1289 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, wibbleOut.Bar[2])", span="2798-2798"];
m1_1290 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, wibbleOut.Bar[3])", span="2799-2799"];
m1_1291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, wibbleOut.Bar[4])", span="2800-2800"];
m1_1292 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="2783-2783"];
m1_488 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", span="1259-1259"];
m1_489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs", label="string json = ''['1.2.3.4']''", span="1261-1261"];
m1_490 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs", label="List<Version> deserialized = JsonConvert.DeserializeObject<List<Version>>(json)", span="1262-1262"];
m1_491 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, deserialized[0].Major)", span="1264-1264"];
m1_492 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, deserialized[0].Minor)", span="1265-1265"];
m1_493 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, deserialized[0].Build)", span="1266-1266"];
m1_494 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, deserialized[0].Revision)", span="1267-1267"];
m1_495 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", span="1259-1259"];
m1_1927 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="4163-4163"];
m1_1928 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="4165-4165"];
m1_1929 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.PopulateObject(json, new Person()); }, @''Cannot populate JSON array onto type 'Newtonsoft.Json.Tests.TestObjects.Organization.Person'. Path '', line 1, position 1.'')", span="4167-4167"];
m1_1930 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="4163-4163"];
m1_1465 [cluster="Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", span="27-27"];
m1_477 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyOverride<T>.ResponseWithNewGenericPropertyOverride()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyOverride<T>.ResponseWithNewGenericPropertyOverride()", span="1165-1165"];
m1_1592 [cluster="Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", span="46-46"];
m1_3792 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", span="8801-8801"];
m1_3793 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<NoConstructorReadOnlyDictionary<int, int>>(''{'1':1}''), ''Cannot deserialize readonly or fixed size dictionary: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+NoConstructorReadOnlyDictionary`2[System.Int32,System.Int32]. Path '1', line 1, position 5.'')", span="8803-8803"];
m1_3794 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", span="8801-8801"];
m1_895 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", span="1936-1936"];
m1_896 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="var json = @''{''''foo'''':{''''bar'''':''''value''''},''''foo2'''':{''''bar'''':''''value2''''}}''", span="1938-1938"];
m1_897 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="var deserialized = JsonConvert.DeserializeObject<Foo1<Bar1>>(json)", span="1939-1939"];
m1_898 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(deserialized.foo2)", span="1940-1940"];
m1_899 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value2'', deserialized.foo2.bar)", span="1941-1941"];
m1_900 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(deserialized.foo)", span="1942-1942"];
m1_901 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value'', deserialized.foo.bar)", span="1943-1943"];
m1_902 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", span="1936-1936"];
m1_1269 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="2768-2768"];
m1_1270 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="2770-2770"];
m1_1271 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="JsonSerializer s = new JsonSerializer()", span="2772-2772"];
m1_1273 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="ClassWithArray wibble = (ClassWithArray)s.Deserialize(new StringReader(json), typeof(ClassWithArray))", span="2775-2775"];
m1_1272 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="s.ObjectCreationHandling = ObjectCreationHandling.Replace", span="2773-2773"];
m1_1274 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''hello'', wibble.Foo)", span="2777-2777"];
m1_1275 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, wibble.Bar.Count)", span="2779-2779"];
m1_1276 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="2768-2768"];
m1_2284 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="5226-5226"];
m1_2285 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="List<KVPair<string, string>> kvPairs =\r\n                JsonConvert.DeserializeObject<List<KVPair<string, string>>>(\r\n                    ''[{\''Key\'':\''Two\'',\''Value\'':\''2\''},{\''Key\'':\''One\'',\''Value\'':\''1\''}]'')", span="5228-5230"];
m1_2286 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, kvPairs.Count)", span="5232-5232"];
m1_2287 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Two'', kvPairs[0].Key)", span="5233-5233"];
m1_2288 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''2'', kvPairs[0].Value)", span="5234-5234"];
m1_2289 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''One'', kvPairs[1].Key)", span="5235-5235"];
m1_2290 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''1'', kvPairs[1].Value)", span="5236-5236"];
m1_2291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="5226-5226"];
m1_278 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", span="62-62"];
m1_4039 [cluster="System.InvalidCastException.InvalidCastException()", file="JsonSerializerTest.cs", label="Entry System.InvalidCastException.InvalidCastException()", span="0-0"];
m1_2869 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m1_2768 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="6329-6329"];
m1_2769 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs", label="object dateTime = JsonConvert.DeserializeObject(''null'', typeof(DateTime?))", span="6331-6331"];
m1_2770 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs", label="Assert.IsNull(dateTime)", span="6333-6333"];
m1_2771 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="6329-6329"];
m1_390 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItemProxy.FaqItemProxy()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItemProxy.FaqItemProxy()", span="949-949"];
m1_2525 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", span="5777-5777"];
m1_2526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", file="JsonSerializerTest.cs", label="Prop1 = new byte[0]", span="5779-5779"];
m1_2527 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", span="5777-5777"];
m1_2931 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="6868-6868"];
m1_2932 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonSerializerTest.cs", label="Exceptions = new List<Exception>()", span="6870-6870"];
m1_2933 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="6868-6868"];
m1_55 [cluster="Unk.Fail", file="JsonSerializerTest.cs", label="Entry Unk.Fail", span=""];
m1_219 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="582-582"];
m1_3263 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="7537-7537"];
m1_3264 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<int>(''''); }, ''No JSON content found and type 'System.Int32' is not nullable. Path '', line 0, position 0.'')", span="7539-7539"];
m1_3265 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="7537-7537"];
m1_3908 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m1_1479 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", span="30-30"];
m1_1227 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", span="719-719"];
m1_2830 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObject.ChildWithDifferentOverrideObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObject.ChildWithDifferentOverrideObject()", span="6520-6520"];
m1_3317 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="7641-7641"];
m1_3318 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="var person = PersonWithPrivateConstructor.CreatePerson()", span="7643-7643"];
m1_3319 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="person.Name = ''John Doe''", span="7644-7644"];
m1_3320 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="person.Age = 25", span="7645-7645"];
m1_3321 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="var serializedPerson = JsonConvert.SerializeObject(person)", span="7647-7647"];
m1_3323 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(person.Name, roundtrippedPerson.Name)", span="7650-7650"];
m1_3322 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="var roundtrippedPerson = JsonConvert.DeserializeObject<PersonWithPrivateConstructor>(serializedPerson)", span="7648-7648"];
m1_3324 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="7641-7641"];
m1_3382 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="442-442"];
m1_1335 [cluster="System.Guid.Guid(string)", file="JsonSerializerTest.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m1_3201 [cluster="Newtonsoft.Json.Tests.TestObjects.Item.Item()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Item.Item()", span="29-29"];
m1_3704 [cluster="Unk.doStuff", file="JsonSerializerTest.cs", label="Entry Unk.doStuff", span=""];
m1_1532 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="3247-3247"];
m1_1533 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''FirstName'''': ''''I can't be null bro!'''',\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="3249-3254"];
m1_1534 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="RequiredMembersClass c = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="3256-3256"];
m1_1535 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''I can't be null bro!'', c.FirstName)", span="3258-3258"];
m1_1536 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, c.MiddleName)", span="3259-3259"];
m1_1537 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, c.LastName)", span="3260-3260"];
m1_1538 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="3247-3247"];
m1_3026 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", span="7028-7028"];
m1_3027 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="DefaultContractResolver contractResolver = new DefaultContractResolver()", span="7030-7030"];
m1_3028 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="StaticTestClass c = new StaticTestClass\r\n            {\r\n                x = int.MaxValue\r\n            }", span="7032-7035"];
m1_3031 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = contractResolver\r\n            })", span="7038-7041"];
m1_3033 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="StaticTestClass c2 = JsonConvert.DeserializeObject<StaticTestClass>(@''{\r\n  ''''x'''': -1,\r\n  ''''y'''': -2,\r\n  ''''z'''': -3\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = contractResolver\r\n                })", span="7049-7057"];
m1_3029 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="StaticTestClass.y = 2", span="7036-7036"];
m1_3030 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="StaticTestClass.z = 3", span="7037-7037"];
m1_3032 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''x'''': 2147483647,\r\n  ''''y'''': 2,\r\n  ''''z'''': 3\r\n}'', json)", span="7043-7047"];
m1_3034 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="Assert.AreEqual(-1, c2.x)", span="7059-7059"];
m1_3035 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="Assert.AreEqual(-2, StaticTestClass.y)", span="7060-7060"];
m1_3036 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="Assert.AreEqual(-3, StaticTestClass.z)", span="7061-7061"];
m1_3037 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", span="7028-7028"];
m1_1452 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", span="27-27"];
m1_3900 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", span="9132-9132"];
m1_3901 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(\r\n                new Dictionary<Size, Size> { { new Size(1, 2), new Size(3, 4) } }\r\n            )", span="9134-9136"];
m1_3902 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''1, 2'''':''''3, 4''''}'', json)", span="9138-9138"];
m1_3903 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs", label="Dictionary<Size, Size> d = JsonConvert.DeserializeObject<Dictionary<Size, Size>>(json)", span="9140-9140"];
m1_3904 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Size(1, 2), d.Keys.First())", span="9142-9142"];
m1_3905 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Size(3, 4), d.Values.First())", span="9143-9143"];
m1_3906 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", span="9132-9132"];
m1_16 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImmutableStruct.ImmutableStruct(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImmutableStruct.ImmutableStruct(string)", span="136-136"];
m1_17 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImmutableStruct.ImmutableStruct(string)", file="JsonSerializerTest.cs", label="Value = value", span="138-138"];
m1_18 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImmutableStruct.ImmutableStruct(string)", file="JsonSerializerTest.cs", label="Value2 = 0", span="139-139"];
m1_19 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImmutableStruct.ImmutableStruct(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImmutableStruct.ImmutableStruct(string)", span="136-136"];
m1_3202 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", span="147-147"];
m1_2809 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", span="6485-6485"];
m1_2810 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="ChildDataContract cc = new ChildDataContract\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="6487-6491"];
m1_2811 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="DataContractSerializer serializer = new DataContractSerializer(typeof(ChildDataContract))", span="6493-6493"];
m1_2813 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="serializer.WriteObject(ms, cc)", span="6496-6496"];
m1_2812 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="6495-6495"];
m1_2814 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="string xml = Encoding.UTF8.GetString(ms.ToArray(), 0, Convert.ToInt32(ms.Length))", span="6498-6498"];
m1_2815 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''<JsonSerializerTest.ChildDataContract xmlns=''''http://schemas.datacontract.org/2004/07/Newtonsoft.Json.Tests.Serialization'''' xmlns:i=''''http://www.w3.org/2001/XMLSchema-instance''''><nonVirtualMember>NonVirtualMember!</nonVirtualMember><virtualMember>VirtualMember!</virtualMember><NewMember i:nil=''''true''''/></JsonSerializerTest.ChildDataContract>'', xml)", span="6500-6500"];
m1_2816 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", span="6485-6485"];
m1_2049 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="4465-4465"];
m1_2050 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="PersonPropertyClass personPropertyClass = new PersonPropertyClass()", span="4467-4467"];
m1_2051 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="WagePerson wagePerson = (WagePerson)personPropertyClass.Person", span="4468-4468"];
m1_2057 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(personPropertyClass, Formatting.Indented)", span="4476-4476"];
m1_2052 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="wagePerson.BirthDate = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="4470-4470"];
m1_2053 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="wagePerson.Department = ''McDees''", span="4471-4471"];
m1_2054 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="wagePerson.HourlyWage = 12.50m", span="4472-4472"];
m1_2055 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="wagePerson.LastModified = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="4473-4473"];
m1_2056 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="wagePerson.Name = ''Jim Bob''", span="4474-4474"];
m1_2060 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="Assert.AreEqual(wagePerson.HourlyWage, ((WagePerson)newPersonPropertyClass.Person).HourlyWage)", span="4489-4489"];
m1_2058 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(\r\n                @''{\r\n  ''''Person'''': {\r\n    ''''HourlyWage'''': 12.50,\r\n    ''''Name'''': ''''Jim Bob'''',\r\n    ''''BirthDate'''': ''''2000-11-29T23:59:59Z'''',\r\n    ''''LastModified'''': ''''2000-11-29T23:59:59Z''''\r\n  }\r\n}'',\r\n                json)", span="4477-4486"];
m1_2059 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="PersonPropertyClass newPersonPropertyClass = JsonConvert.DeserializeObject<PersonPropertyClass>(json)", span="4488-4488"];
m1_2061 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="4465-4465"];
m1_2620 [cluster="System.Dynamic.ExpandoObject.ExpandoObject()", file="JsonSerializerTest.cs", label="Entry System.Dynamic.ExpandoObject.ExpandoObject()", span="0-0"];
m1_2015 [cluster="Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", span="27-27"];
m1_191 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", span="513-513"];
m1_192 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", file="JsonSerializerTest.cs", label="Binding_DisallowNull o = JsonConvert.DeserializeObject<Binding_DisallowNull>(''{}'')", span="515-515"];
m1_193 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", file="JsonSerializerTest.cs", label="Assert.IsNull(o.RequiredProperty)", span="516-516"];
m1_194 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", span="513-513"];
m1_3677 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", span="8486-8486"];
m1_3678 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs", label="string json = @''[\r\n        9000000000000000000000000000000000000000000000000\r\n      ]''", span="8488-8490"];
m1_3679 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs", label="var l = JsonConvert.DeserializeObject<IReadOnlyList<BigInteger>>(json)", span="8492-8492"];
m1_3680 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs", label="BigInteger nineQuindecillion = l[0]", span="8494-8494"];
m1_3681 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs", label="Assert.AreEqual(BigInteger.Parse(''9000000000000000000000000000000000000000000000000''), nineQuindecillion)", span="8497-8497"];
m1_3682 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", span="8486-8486"];
m1_3798 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="8809-8809"];
m1_3799 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs", label="string json = @''[999999999999999999999999999999999999999999999999]''", span="8811-8811"];
m1_3800 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs", label="IList<BigInteger> l = JsonConvert.DeserializeObject<IList<BigInteger>>(json)", span="8813-8813"];
m1_3802 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<IList<long>>(json), ''Error converting value 999999999999999999999999999999999999999999999999 to type 'System.Int64'. Path '[0]', line 1, position 49.'')", span="8817-8817"];
m1_3801 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs", label="Assert.AreEqual(BigInteger.Parse(''999999999999999999999999999999999999999999999999''), l[0])", span="8815-8815"];
m1_3803 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="8809-8809"];
m1_2225 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m1_4241 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", span="9893-9893"];
m1_4242 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => JsonConvert.DeserializeObject<string>(''020474068''), ''Input string '020474068' is not a valid number. Path '', line 1, position 9.'')", span="9895-9895"];
m1_4243 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", span="9893-9893"];
m1_4287 [cluster="string.IsNullOrEmpty(string)", file="JsonSerializerTest.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m1_4434 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", span="0-0"];
m1_2471 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", span="5651-5651"];
m1_2472 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonSerializerTest.cs", label="First = first", span="5653-5653"];
m1_2473 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonSerializerTest.cs", label="Second = second", span="5654-5654"];
m1_2474 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", span="5651-5651"];
m1_57 [cluster="System.IO.FileStream.Seek(long, System.IO.SeekOrigin)", file="JsonSerializerTest.cs", label="Entry System.IO.FileStream.Seek(long, System.IO.SeekOrigin)", span="0-0"];
m1_836 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="302-302"];
m1_781 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1720-1720"];
m1_782 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_serializationInfo = info", span="1722-1722"];
m1_783 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1720-1720"];
m1_1259 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="2754-2754"];
m1_1260 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="2756-2756"];
m1_1261 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="2757-2757"];
m1_1262 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''hello'', wibble.Foo)", span="2758-2758"];
m1_1263 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, wibble.Bar.Count)", span="2760-2760"];
m1_1264 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="2761-2761"];
m1_1265 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, wibble.Bar[1])", span="2762-2762"];
m1_1266 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, wibble.Bar[2])", span="2763-2763"];
m1_1267 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, wibble.Bar[3])", span="2764-2764"];
m1_1268 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="2754-2754"];
m1_1647 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass.ConstructorAndRequiredTestClass(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass.ConstructorAndRequiredTestClass(string)", span="3542-3542"];
m1_1648 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass.ConstructorAndRequiredTestClass(string)", file="JsonSerializerTest.cs", label="TestProperty1 = testProperty1", span="3544-3544"];
m1_1649 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass.ConstructorAndRequiredTestClass(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass.ConstructorAndRequiredTestClass(string)", span="3542-3542"];
m1_2930 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", span="6821-6821"];
m1_4046 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", span="9441-9441"];
m1_4047 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="9443-9443"];
m1_4048 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", span="9441-9441"];
m1_2332 [cluster="System.Type.GetField(string, System.Reflection.BindingFlags)", file="JsonSerializerTest.cs", label="Entry System.Type.GetField(string, System.Reflection.BindingFlags)", span="0-0"];
m1_391 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m1_990 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualProperties.SubWithContractVirtualProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualProperties.SubWithContractVirtualProperties()", span="2103-2103"];
m1_1603 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="LogEntry entry = new LogEntry\r\n            {\r\n                LogDate = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc),\r\n                Details = ''Application started.''\r\n            }", span="3422-3426"];
m1_1602 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="3420-3420"];
m1_1604 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="string defaultJson = JsonConvert.SerializeObject(entry)", span="3428-3428"];
m1_1605 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="string isoJson = JsonConvert.SerializeObject(entry, new IsoDateTimeConverter())", span="3431-3431"];
m1_1606 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="string javascriptJson = JsonConvert.SerializeObject(entry, new JavaScriptDateTimeConverter())", span="3434-3434"];
m1_1607 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Details'''':''''Application started.'''',''''LogDate'''':''''2009-02-15T00:00:00Z''''}'', defaultJson)", span="3437-3437"];
m1_1608 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Details'''':''''Application started.'''',''''LogDate'''':''''2009-02-15T00:00:00Z''''}'', isoJson)", span="3438-3438"];
m1_1609 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Details'''':''''Application started.'''',''''LogDate'''':new Date(1234656000000)}'', javascriptJson)", span="3439-3439"];
m1_1610 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="3420-3420"];
m1_759 [cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", span="239-239"];
m1_50 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="75-75"];
m1_53 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="530-530"];
m1_980 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewProperties.SubWithContractNewProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewProperties.SubWithContractNewProperties()", span="2087-2087"];
m1_179 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", span="501-501"];
m1_180 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Binding>(''{requiredProperty:''}''); }, ''Required property 'RequiredProperty' expects a value but got null. Path '', line 1, position 21.'')", span="503-503"];
m1_181 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", span="501-501"];
m1_2539 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="850-850"];
m1_3070 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="7143-7143"];
m1_3071 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs", label="IList<DateTimeOffset?> d1 = new List<DateTimeOffset?> { null }", span="7145-7145"];
m1_3072 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(d1)", span="7147-7147"];
m1_3074 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(d1.Count, d2.Count)", span="7151-7151"];
m1_3075 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(d1[0], d2[0])", span="7152-7152"];
m1_3073 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs", label="IList<DateTimeOffset?> d2 = JsonConvert.DeserializeObject<IList<DateTimeOffset?>>(json)", span="7149-7149"];
m1_3076 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="7143-7143"];
m1_3141 [cluster="Newtonsoft.Json.Tests.TestObjects.WidgetId.WidgetId()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.WidgetId.WidgetId()", span="27-27"];
m1_3383 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="126-126"];
m1_3599 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinishCheckNotRequested()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinishCheckNotRequested()", span="8312-8312"];
m1_3600 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinishCheckNotRequested()", file="JsonSerializerTest.cs", label="string json = @''{ ''''MyProperty'''':{''''Key'''':''''Value''''}} A bunch of junk at the end of the json''", span="8314-8314"];
m1_3601 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinishCheckNotRequested()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="8316-8316"];
m1_3602 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinishCheckNotRequested()", file="JsonSerializerTest.cs", label="var reader = new JsonTextReader(new StringReader(json))", span="8318-8318"];
m1_3603 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinishCheckNotRequested()", file="JsonSerializerTest.cs", label="MyType mt = (MyType)serializer.Deserialize(reader, typeof(MyType))", span="8320-8320"];
m1_3604 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinishCheckNotRequested()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, mt.MyProperty.Count)", span="8321-8321"];
m1_3605 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinishCheckNotRequested()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinishCheckNotRequested()", span="8312-8312"];
m1_1531 [cluster="Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", span="29-29"];
m1_881 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", span="1918-1918"];
m1_882 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="var json = @''{''''foo'''':{''''bar'''':''''value''''}}''", span="1920-1920"];
m1_883 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="var deserialized = JsonConvert.DeserializeObject<FooBar1>(json)", span="1921-1921"];
m1_884 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(deserialized.foo)", span="1922-1922"];
m1_885 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value'', deserialized.foo.bar)", span="1923-1923"];
m1_886 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", span="1918-1918"];
m1_4437 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", span="0-0"];
m1_349 [cluster="System.ValueTuple.Create<T1, T2, T3>(T1, T2, T3)", file="JsonSerializerTest.cs", label="Entry System.ValueTuple.Create<T1, T2, T3>(T1, T2, T3)", span="0-0"];
m1_2200 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="4963-4963"];
m1_2201 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonSerializerTest.cs", label="((IDictionary<string, T>)_innerDictionary).CopyTo(array, arrayIndex)", span="4965-4965"];
m1_2202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="4963-4963"];
m1_2808 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", span="6456-6456"];
m1_943 [cluster="System.Convert.ToInt32(string)", file="JsonSerializerTest.cs", label="Entry System.Convert.ToInt32(string)", span="0-0"];
m1_432 [cluster="object.GetType()", file="JsonSerializerTest.cs", label="Entry object.GetType()", span="0-0"];
m1_1385 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="548-548"];
m1_602 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.DefaultSerializationBinder()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.DefaultSerializationBinder()", span="50-50"];
m1_1960 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="4222-4222"];
m1_1961 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(PORTABLE || DNXCORE50 || PORTABLE40) || NETSTANDARD1_3\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 15.'')", span="4224-4235"];
m1_1962 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="4222-4222"];
m1_4049 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", span="9446-9446"];
m1_4050 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="9448-9448"];
m1_4051 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", span="9446-9446"];
m1_792 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0"];
m1_1942 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="4179-4179"];
m1_1943 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs", label="string json = @''{''''Name'''':''''''''}''", span="4181-4181"];
m1_1944 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs", label="Person p = JsonConvert.DeserializeObject<Person>(json)", span="4183-4183"];
m1_1945 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs", label="Assert.AreEqual('''', p.Name)", span="4184-4184"];
m1_1946 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="4179-4179"];
m1_860 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="422-422"];
m1_4293 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", span="10023-10023"];
m1_4294 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="return objectType == typeof(System.Net.Mail.Attachment);", span="10025-10025"];
m1_4295 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", span="10023-10023"];
m1_3867 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", span="8992-8992"];
m1_3868 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs", label="BigInteger i = BigInteger.Parse(''123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990'')", span="8994-8994"];
m1_3869 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new[] { i }, Formatting.Indented)", span="8996-8996"];
m1_3870 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990\r\n]'', json)", span="8998-9000"];
m1_3871 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", span="8992-8992"];
m1_2196 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="4958-4958"];
m1_2197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonSerializerTest.cs", label="return _innerDictionary.ContainsKey(key);", span="4960-4960"];
m1_2198 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="4958-4958"];
m1_1131 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="2536-2536"];
m1_1132 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="JsonPropertyClass test = new JsonPropertyClass()", span="2538-2538"];
m1_1133 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="test.Pie = ''Delicious''", span="2539-2539"];
m1_1134 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="test.SweetCakesCount = int.MaxValue", span="2540-2540"];
m1_1135 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(test)", span="2542-2542"];
m1_1138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(test.Pie, test2.Pie)", span="2548-2548"];
m1_1139 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(test.SweetCakesCount, test2.SweetCakesCount)", span="2549-2549"];
m1_1136 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''pie'''':''''Delicious'''',''''pie1'''':''''PieChart!'''',''''sweet_cakes_count'''':2147483647}'', jsonText)", span="2544-2544"];
m1_1137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="JsonPropertyClass test2 = JsonConvert.DeserializeObject<JsonPropertyClass>(jsonText)", span="2546-2546"];
m1_1140 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="2536-2536"];
m1_4405 [cluster="System.Runtime.Serialization.SerializationInfo.GetInt16(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetInt16(string)", span="0-0"];
m1_13 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="524-524"];
m1_239 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m1_240 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.DictionaryKeyContractResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.DictionaryKeyContractResolver()", span="583-583"];
m1_2420 [cluster="string.Format(System.IFormatProvider, string, object, object)", file="JsonSerializerTest.cs", label="Entry string.Format(System.IFormatProvider, string, object, object)", span="0-0"];
m1_926 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="999-999"];
m1_1466 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="3121-3121"];
m1_1467 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="string json", span="3123-3123"];
m1_1468 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject((int?)null)", span="3125-3125"];
m1_1469 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''null'', json)", span="3126-3126"];
m1_1470 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject((int?)1)", span="3128-3128"];
m1_1471 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''1'', json)", span="3129-3129"];
m1_1472 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="3121-3121"];
m1_1107 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="2415-2415"];
m1_1108 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeTestClass())", span="2417-2417"];
m1_1109 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Field'''':0,''''Property'''':21}'', json)", span="2419-2419"];
m1_1110 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="JsonIgnoreAttributeTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeTestClass>(@''{''''Field'''':99,''''Property'''':-1,''''IgnoredField'''':-1,''''IgnoredObject'''':[1,2,3,4,5]}'')", span="2421-2421"];
m1_1111 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, c.IgnoredField)", span="2423-2423"];
m1_1112 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(99, c.Field)", span="2424-2424"];
m1_1113 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="2415-2415"];
m1_2638 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="6024-6024"];
m1_2639 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs", label="string json = ''[123456789876543.21]''", span="6026-6026"];
m1_2640 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs", label="IList<decimal> a = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="6027-6027"];
m1_2641 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123456789876543.21m, a[0])", span="6028-6028"];
m1_2642 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="6024-6024"];
m1_1368 [cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", span="33-33"];
m1_178 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m1_89 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", span="335-335"];
m1_90 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonSerializerTest.cs", label="var largeBrokenNumber = JsonConvert.DeserializeObject<Foo64>(''{\''Blah\'': 43443333222211111117 }'')", span="337-337"];
m1_91 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''43443333222211111117'', largeBrokenNumber.Blah)", span="338-338"];
m1_92 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonSerializerTest.cs", label="var largeOddWorkingNumber = JsonConvert.DeserializeObject<Foo64>(''{\''Blah\'': 53443333222211111117 }'')", span="340-340"];
m1_93 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''53443333222211111117'', largeOddWorkingNumber.Blah)", span="341-341"];
m1_94 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", span="335-335"];
m1_2131 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", span="4733-4733"];
m1_2132 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonSerializerTest.cs", label="string jsonIsoText =\r\n                @''{''''DateTimeOffsetValue'''':''''2012-02-25T19:55:50.6095676+00:00'''', ''''DateTimeValue'''':''''2012-02-25T19:55:50.6095676+00:00''''}''", span="4735-4736"];
m1_2133 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonSerializerTest.cs", label="DateTimeOffsetWrapper cISO = JsonConvert.DeserializeObject<DateTimeOffsetWrapper>(jsonIsoText, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.DateTimeOffset,\r\n                Converters =\r\n                {\r\n                    new IsoDateTimeConverter()\r\n                }\r\n            })", span="4738-4745"];
m1_2134 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonSerializerTest.cs", label="DateTimeOffsetWrapper c = JsonConvert.DeserializeObject<DateTimeOffsetWrapper>(jsonIsoText, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.DateTimeOffset\r\n            })", span="4746-4749"];
m1_2135 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c.DateTimeOffsetValue, cISO.DateTimeOffsetValue)", span="4751-4751"];
m1_2136 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", span="4733-4733"];
m1_1343 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="2915-2915"];
m1_1344 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="TimeSpan ts = new TimeSpan(00, 23, 59, 1)", span="2917-2917"];
m1_1345 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new ClassWithTimeSpan { TimeSpanField = ts }, Formatting.Indented)", span="2919-2919"];
m1_1348 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ts, c.TimeSpanField)", span="2925-2925"];
m1_1346 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''TimeSpanField'''': ''''23:59:01''''\r\n}'', json)", span="2920-2922"];
m1_1347 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="ClassWithTimeSpan c = JsonConvert.DeserializeObject<ClassWithTimeSpan>(json)", span="2924-2924"];
m1_1349 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="2915-2915"];
m1_2424 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", span="5573-5573"];
m1_2425 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="return objectType == typeof(PosDouble);", span="5575-5575"];
m1_2426 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", span="5573-5573"];
m1_408 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", span="1080-1080"];
m1_409 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonSerializerTest.cs", label="ObservableCollection<string> s = JsonConvert.DeserializeObject<ObservableCollection<string>>(''['1','2']'')", span="1082-1082"];
m1_410 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, s.Count)", span="1083-1083"];
m1_411 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''1'', s[0])", span="1084-1084"];
m1_412 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''2'', s[1])", span="1085-1085"];
m1_413 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", span="1080-1080"];
m1_2553 [cluster="System.Collections.Specialized.StringDictionary.StringDictionary()", file="JsonSerializerTest.cs", label="Entry System.Collections.Specialized.StringDictionary.StringDictionary()", span="0-0"];
m1_3563 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", span="8222-8222"];
m1_3564 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", file="JsonSerializerTest.cs", label="string json = @''{one:1} // This is just a comment\r\n/* This is just a comment\r\nover multiple\r\nlines.*/\r\n\r\n// This is just another comment.''", span="8224-8229"];
m1_3565 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings {CheckAdditionalContent = true}", span="8231-8231"];
m1_3567 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", file="JsonSerializerTest.cs", label="IDictionary<string, int> o = s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="8233-8233"];
m1_3566 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", file="JsonSerializerTest.cs", label="JsonSerializer s = JsonSerializer.Create(settings)", span="8232-8232"];
m1_3568 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(o)", span="8235-8235"];
m1_3569 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, o[''one''])", span="8236-8236"];
m1_3570 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", span="8222-8222"];
m1_4380 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="10325-10325"];
m1_4381 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_stringValue = info.GetString(''stringValue'')", span="10327-10327"];
m1_4382 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_intValue = info.GetInt32(''intValue'')", span="10328-10328"];
m1_4383 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_dateTimeOffsetValue = (DateTimeOffset)info.GetValue(''dateTimeOffsetValue'', typeof(DateTimeOffset))", span="10329-10329"];
m1_4384 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_personValue = (Person)info.GetValue(''personValue'', typeof(Person))", span="10330-10330"];
m1_4385 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_nullPersonValue = (Person)info.GetValue(''nullPersonValue'', typeof(Person))", span="10331-10331"];
m1_4386 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_nullableInt = (int?)info.GetValue(''nullableInt'', typeof(int?))", span="10332-10332"];
m1_4387 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_booleanValue = info.GetBoolean(''booleanValue'')", span="10334-10334"];
m1_4388 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_byteValue = info.GetByte(''byteValue'')", span="10335-10335"];
m1_4389 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_charValue = info.GetChar(''charValue'')", span="10336-10336"];
m1_4390 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_dateTimeValue = info.GetDateTime(''dateTimeValue'')", span="10337-10337"];
m1_4391 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_decimalValue = info.GetDecimal(''decimalValue'')", span="10338-10338"];
m1_4392 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_shortValue = info.GetInt16(''shortValue'')", span="10339-10339"];
m1_4393 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_longValue = info.GetInt64(''longValue'')", span="10340-10340"];
m1_4394 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_sbyteValue = info.GetSByte(''sbyteValue'')", span="10341-10341"];
m1_4395 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_floatValue = info.GetSingle(''floatValue'')", span="10342-10342"];
m1_4396 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_ushortValue = info.GetUInt16(''ushortValue'')", span="10343-10343"];
m1_4397 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_uintValue = info.GetUInt32(''uintValue'')", span="10344-10344"];
m1_4398 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_ulongValue = info.GetUInt64(''ulongValue'')", span="10345-10345"];
m1_4399 [cluster="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="10325-10325"];
m1_2798 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="6439-6439"];
m1_2799 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new EnumerableArrayPropertyClass())", span="6441-6441"];
m1_2800 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<EnumerableArrayPropertyClass>(json)", span="6442-6442"];
m1_2801 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="6439-6439"];
m1_2161 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="4859-4859"];
m1_2162 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="DataContractJsonSerializerTestClass c = new DataContractJsonSerializerTestClass()\r\n            {\r\n                TimeSpanProperty = new TimeSpan(200, 20, 59, 30, 900),\r\n                GuidProperty = new Guid(''66143115-BE2A-4a59-AF0A-348E1EA15B1E''),\r\n                AnimalProperty = new Human() { Ethnicity = ''European'' }\r\n            }", span="4861-4866"];
m1_2163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="4867-4867"];
m1_2165 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="serializer.WriteObject(ms, c)", span="4871-4871"];
m1_2164 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(\r\n                typeof(DataContractJsonSerializerTestClass),\r\n                new Type[] { typeof(Human) })", span="4868-4870"];
m1_2166 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="byte[] jsonBytes = ms.ToArray()", span="4873-4873"];
m1_2167 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="string json = Encoding.UTF8.GetString(jsonBytes, 0, jsonBytes.Length)", span="4874-4874"];
m1_2168 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="4859-4859"];
m1_3877 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", span="9021-9021"];
m1_3878 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonSerializerTest.cs", label="string json = @''{''''something_else'''':''''my value''''}''", span="9023-9023"];
m1_3879 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonSerializerTest.cs", label="var foo = JsonConvert.DeserializeObject<FooConstructor>(json)", span="9024-9024"];
m1_3880 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''my value'', foo.Bar)", span="9025-9025"];
m1_3881 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", span="9021-9021"];
m1_2151 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", span="4814-4814"];
m1_2154 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", file="JsonSerializerTest.cs", label="C1 = c1", span="4816-4816"];
m1_2155 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", span="4814-4814"];
m1_1453 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="3104-3104"];
m1_1454 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass();\r\n                JsonConvert.SerializeObject(c);\r\n            }, ''Unexpected value when converting date. Expected DateTime or DateTimeOffset, got Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.'')", span="3106-3110"];
m1_1455 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="3104-3104"];
m1_1166 [cluster="Unk.ReadObject", file="JsonSerializerTest.cs", label="Entry Unk.ReadObject", span=""];
m1_3643 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8382-8382"];
m1_3644 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="return ''X'';", span="8384-8384"];
m1_3645 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8382-8382"];
m1_858 [cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="442-442"];
m1_3251 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="7525-7525"];
m1_3252 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<double>(''''); }, ''No JSON content found and type 'System.Double' is not nullable. Path '', line 0, position 0.'')", span="7527-7527"];
m1_3253 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="7525-7525"];
m1_2393 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", span="5507-5507"];
m1_1027 [cluster="System.Console.WriteLine(string)", file="JsonSerializerTest.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m1_3916 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSize.TypeConverterSize(int, int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSize.TypeConverterSize(int, int)", span="9170-9170"];
m1_3917 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSize.TypeConverterSize(int, int)", file="JsonSerializerTest.cs", label="_width = width", span="9172-9172"];
m1_3918 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSize.TypeConverterSize(int, int)", file="JsonSerializerTest.cs", label="_height = height", span="9173-9173"];
m1_3919 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSize.TypeConverterSize(int, int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSize.TypeConverterSize(int, int)", span="9170-9170"];
m1_1480 [cluster="Newtonsoft.Json.Linq.JRaw.JRaw(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JRaw.JRaw(object)", span="48-48"];
m1_1947 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="4188-4188"];
m1_1948 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(PORTABLE || DNXCORE50 || PORTABLE40) || NETSTANDARD1_3\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error getting value from 'ReadTimeout' on 'System.IO.MemoryStream'.'')", span="4190-4201"];
m1_1949 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="4188-4188"];
m1_3463 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", span="7969-7969"];
m1_3464 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", span="7971-7975"];
m1_3465 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="7977-7977"];
m1_3466 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12Z'''': 1,\r\n  ''''2013-12-12T12:12:12Z'''': 2\r\n}'', json)", span="7979-7982"];
m1_3467 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json)", span="7984-7984"];
m1_3468 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2.Count)", span="7986-7986"];
m1_3469 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7987-7987"];
m1_3470 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7988-7988"];
m1_3471 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", span="7969-7969"];
m1_58 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", span="252-252"];
m1_59 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", file="JsonSerializerTest.cs", label="return new Subclass\r\n                {\r\n                    ID = 123,\r\n                    Name = ''ABC'',\r\n                    P1 = true,\r\n                    P2 = 44\r\n                };", span="254-260"];
m1_60 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", span="252-252"];
m1_1244 [cluster="object.Object()", file="JsonSerializerTest.cs", label="Entry object.Object()", span="0-0"];
m1_1179 [cluster="Unk.>", file="JsonSerializerTest.cs", label="Entry Unk.>", span=""];
m1_4014 [cluster="Newtonsoft.Json.JsonConverterCollection.JsonConverterCollection()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConverterCollection.JsonConverterCollection()", span="35-35"];
m1_4308 [cluster="System.Type.IsAssignableFrom(System.Type)", file="JsonSerializerTest.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m1_1696 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="3651-3651"];
m1_1697 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs", label="string classRef = typeof(JsonPropertyWithHandlingValues).FullName", span="3653-3653"];
m1_1698 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues();\r\n                o.ReferenceLoopHandlingErrorProperty = o;\r\n\r\n                JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore });\r\n            }, ''Self referencing loop detected for property 'ReferenceLoopHandlingErrorProperty' with type ''' + classRef + '''. Path ''.'')", span="3655-3661"];
m1_1699 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="3651-3651"];
m1_1906 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="4129-4129"];
m1_1907 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonSerializerTest.cs", label="string json = @''new Constructor(123)''", span="4131-4131"];
m1_1908 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Person>(json); }, @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Organization.Person'. Path '', line 1, position 16.'')", span="4133-4133"];
m1_1909 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="4129-4129"];
m1_4073 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", span="9486-9486"];
m1_4074 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="9488-9488"];
m1_4075 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", span="9486-9486"];
m1_434 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", span="1128-1128"];
m1_435 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''IsTransient'''':true}'', JsonConvert.SerializeObject(new ChildClass { IsTransient = true }))", span="1130-1130"];
m1_436 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonSerializerTest.cs", label="var childClass = JsonConvert.DeserializeObject<ChildClass>(@''{''''IsTransient'''':true}'')", span="1132-1132"];
m1_437 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, childClass.IsTransient)", span="1133-1133"];
m1_438 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", span="1128-1128"];
m1_4289 [cluster="System.Net.Mail.MailAddress.MailAddress(string)", file="JsonSerializerTest.cs", label="Entry System.Net.Mail.MailAddress.MailAddress(string)", span="0-0"];
m1_4296 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="10028-10028"];
m1_4297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="var info = serializer.Deserialize<AttachmentInfo>(reader)", span="10030-10030"];
m1_4298 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="var attachment = info != null\r\n                    ? new System.Net.Mail.Attachment(new MemoryStream(Convert.FromBase64String(info.ContentBase64)), ''application/octet-stream'')\r\n                    {\r\n                        ContentDisposition = { FileName = info.FileName }\r\n                    }\r\n                    : null", span="10032-10037"];
m1_4299 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="return attachment;", span="10038-10038"];
m1_4300 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="10028-10028"];
m1_2406 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="891-891"];
m1_1142 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="2553-2553"];
m1_1143 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.SerializeObject(new BadJsonPropertyClass()); }, @''A member with the name 'pie' already exists on 'Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass'. Use the JsonPropertyAttribute to specify another name.'')", span="2555-2555"];
m1_1144 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="2553-2553"];
m1_922 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m1_2885 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", span="6711-6711"];
m1_2886 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="6713-6713"];
m1_2887 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", span="6711-6711"];
m1_3530 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTestClass.IgnoreDataMemberTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTestClass.IgnoreDataMemberTestClass()", span="8137-8137"];
m1_4040 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", span="9431-9431"];
m1_4041 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="9433-9433"];
m1_4042 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", span="9431-9431"];
m1_338 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.IgnoredPropertiesContractResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.IgnoredPropertiesContractResolver()", span="771-771"];
m1_4064 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", span="9471-9471"];
m1_4065 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonSerializerTest.cs", label="return (long)Value;", span="9473-9473"];
m1_4066 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", span="9471-9471"];
m1_2836 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObject.ImplementInterfaceObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObject.ImplementInterfaceObject()", span="6560-6560"];
m1_3103 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="7233-7233"];
m1_3104 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="Bb b = new Bb()", span="7235-7235"];
m1_3105 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="b.no = true", span="7236-7236"];
m1_3106 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="Aa a = b", span="7237-7237"];
m1_3108 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(b)", span="7240-7240"];
m1_3107 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="a.no = int.MaxValue", span="7238-7238"];
m1_3109 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''no'''':true}'', json)", span="7242-7242"];
m1_3110 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="Bb b2 = JsonConvert.DeserializeObject<Bb>(json)", span="7244-7244"];
m1_3111 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, b2.no)", span="7246-7246"];
m1_3112 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="7233-7233"];
m1_2841 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="6599-6599"];
m1_2842 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="NonDefaultConstructorWithReadOnlyCollectionProperty c1 = new NonDefaultConstructorWithReadOnlyCollectionProperty(''blah'')", span="6601-6601"];
m1_2843 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="c1.Categories.Add(''one'')", span="6602-6602"];
m1_2844 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="c1.Categories.Add(''two'')", span="6603-6603"];
m1_2845 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6605-6605"];
m1_2848 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Title, c2.Title)", span="6615-6615"];
m1_2849 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="6616-6616"];
m1_2846 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': [\r\n    ''''one'''',\r\n    ''''two''''\r\n  ]\r\n}'', json)", span="6606-6612"];
m1_2847 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="NonDefaultConstructorWithReadOnlyCollectionProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyCollectionProperty>(json)", span="6614-6614"];
m1_2850 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''one'', c2.Categories[0])", span="6617-6617"];
m1_2851 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''two'', c2.Categories[1])", span="6618-6618"];
m1_2852 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="6599-6599"];
m1_4305 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.CanConvert(System.Type)", span="10058-10058"];
m1_4306 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="return typeof(Encoding).IsAssignableFrom(objectType);", span="10060-10060"];
m1_4307 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.CanConvert(System.Type)", span="10058-10058"];
m1_3209 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="7443-7443"];
m1_3210 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new WithEnums\r\n            {\r\n                Id = 7,\r\n                NullableEnum = null\r\n            })", span="7445-7449"];
m1_3211 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':null}'', json)", span="7451-7451"];
m1_3212 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="WithEnums e = JsonConvert.DeserializeObject<WithEnums>(json)", span="7453-7453"];
m1_3213 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, e.NullableEnum)", span="7455-7455"];
m1_3214 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(new WithEnums\r\n            {\r\n                Id = 7,\r\n                NullableEnum = MyEnum.Value2\r\n            })", span="7457-7461"];
m1_3215 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':1}'', json)", span="7463-7463"];
m1_3216 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="e = JsonConvert.DeserializeObject<WithEnums>(json)", span="7465-7465"];
m1_3217 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="Assert.AreEqual(MyEnum.Value2, e.NullableEnum)", span="7467-7467"];
m1_3218 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="7443-7443"];
m1_52 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="387-387"];
m1_1667 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="3585-3585"];
m1_1668 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="SubKlass i = new SubKlass(''my subprop'')", span="3587-3587"];
m1_1669 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="i.SuperProp = ''overrided superprop''", span="3588-3588"];
m1_1670 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(i, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="3590-3593"];
m1_1671 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="3595-3595"];
m1_1672 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="3597-3600"];
m1_1673 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="string newJson = JsonConvert.SerializeObject(ii, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="3602-3605"];
m1_1674 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="3606-3606"];
m1_1675 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="3585-3585"];
m1_3163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="7354-7354"];
m1_3164 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="string json = @''{''''Id'''':null}''", span="7356-7356"];
m1_3165 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="var c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="7357-7357"];
m1_3166 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, c.Id)", span="7359-7359"];
m1_3167 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="json = @''{''''Id'''':''''d8220a4b-75b1-4b7a-8112-b7bdae956a45''''}''", span="7361-7361"];
m1_3168 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="7362-7362"];
m1_3169 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), c.Id)", span="7364-7364"];
m1_3170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="7354-7354"];
m1_950 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", span="2111-2111"];
m1_951 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="BaseWithContract baseWith = new SubWithoutContractNewProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="2113-2119"];
m1_952 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.JustAProperty = ''JustAProperty2!''", span="2121-2121"];
m1_953 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.Virtual = ''Virtual2!''", span="2122-2122"];
m1_954 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="2123-2123"];
m1_955 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.WithDataMember = ''WithDataMember2!''", span="2124-2124"];
m1_956 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="string json = AssertSerializeDeserializeEqual(baseWith)", span="2126-2126"];
m1_957 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''WithDataMemberSub'''': ''''WithDataMember!''''\r\n}'', json)", span="2128-2135"];
m1_958 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", span="2111-2111"];
m1_2984 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="495-495"];
m1_354 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImmutableStructWithConstructorAttribute.ImmutableStructWithConstructorAttribute(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImmutableStructWithConstructorAttribute.ImmutableStructWithConstructorAttribute(string)", span="877-877"];
m1_355 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImmutableStructWithConstructorAttribute.ImmutableStructWithConstructorAttribute(string)", file="JsonSerializerTest.cs", label="Value = value", span="879-879"];
m1_356 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImmutableStructWithConstructorAttribute.ImmutableStructWithConstructorAttribute(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImmutableStructWithConstructorAttribute.ImmutableStructWithConstructorAttribute(string)", span="877-877"];
m1_3279 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="7562-7562"];
m1_3280 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                () => { JsonConvert.DeserializeObject(null); },\r\n                new[]\r\n                {\r\n                    ''Value cannot be null.'' + Environment.NewLine + ''Parameter name: value'',\r\n                    ''Argument cannot be null.'' + Environment.NewLine + ''Parameter name: value'' // mono\r\n                })", span="7564-7570"];
m1_3281 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="7562-7562"];
m1_2156 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="4827-4827"];
m1_2157 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs", label="var json = ''{ Key: 'abc', Value: 123 }''", span="4829-4829"];
m1_2158 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs", label="var item = JsonConvert.DeserializeObject<TestClass>(json)", span="4830-4830"];
m1_2159 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123L, item.Value)", span="4832-4832"];
m1_2160 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="4827-4827"];
m1_1612 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="3442-3442"];
m1_1613 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="GenericListAndDictionaryInterfaceProperties o = new GenericListAndDictionaryInterfaceProperties()", span="3444-3444"];
m1_1614 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="o.IDictionaryProperty = new Dictionary<string, int>\r\n            {\r\n                { ''one'', 1 },\r\n                { ''two'', 2 },\r\n                { ''three'', 3 }\r\n            }", span="3445-3450"];
m1_1615 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="o.IListProperty = new List<int>\r\n            {\r\n                1, 2, 3\r\n            }", span="3451-3454"];
m1_1616 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="o.IEnumerableProperty = new List<int>\r\n            {\r\n                4, 5, 6\r\n            }", span="3455-3458"];
m1_1617 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="3460-3460"];
m1_1621 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(o.IListProperty.ToArray(), deserializedObject.IListProperty.ToArray())", span="3483-3483"];
m1_1622 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(o.IEnumerableProperty.ToArray(), deserializedObject.IEnumerableProperty.ToArray())", span="3484-3484"];
m1_1623 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(o.IDictionaryProperty.ToArray(), deserializedObject.IDictionaryProperty.ToArray())", span="3485-3485"];
m1_1618 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''IEnumerableProperty'''': [\r\n    4,\r\n    5,\r\n    6\r\n  ],\r\n  ''''IListProperty'''': [\r\n    1,\r\n    2,\r\n    3\r\n  ],\r\n  ''''IDictionaryProperty'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2,\r\n    ''''three'''': 3\r\n  }\r\n}'', json)", span="3462-3478"];
m1_1619 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="GenericListAndDictionaryInterfaceProperties deserializedObject = JsonConvert.DeserializeObject<GenericListAndDictionaryInterfaceProperties>(json)", span="3480-3480"];
m1_1620 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(deserializedObject)", span="3481-3481"];
m1_1624 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="3442-3442"];
m1_3325 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonWithPrivateConstructor.CreatePerson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonWithPrivateConstructor.CreatePerson()", span="33-33"];
m1_685 [cluster="Unk.ReferenceResolverProvider", file="JsonSerializerTest.cs", label="Entry Unk.ReferenceResolverProvider", span=""];
m1_3182 [cluster="Newtonsoft.Json.Tests.TestObjects.NullableGuid.NullableGuid()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.NullableGuid.NullableGuid()", span="29-29"];
m1_0 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ListSourceTest.GetList()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ListSourceTest.GetList()", span="114-114"];
m1_1 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ListSourceTest.GetList()", file="JsonSerializerTest.cs", label="return new List<string>();", span="116-116"];
m1_2 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ListSourceTest.GetList()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ListSourceTest.GetList()", span="114-114"];
m1_2385 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", span="5435-5435"];
m1_2594 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="5947-5947"];
m1_2595 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new DerivedEvent(), Formatting.Indented)", span="5949-5949"];
m1_2596 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''event'''': ''''derived''''\r\n}'', json)", span="5951-5953"];
m1_2597 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="5947-5947"];
m1_34 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", span="182-182"];
m1_35 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", color=green, community=0, file="JsonSerializerTest.cs", label="var s = System.IO.File.OpenRead(ResolvePath(''large.json''))", prediction=3, span="184-184"];
m1_36 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(s))", span="188-188"];
m1_45 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="Assert.IsTrue(s.Position > 0)", span="206-206"];
m1_46 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="s.Seek(0, SeekOrigin.Begin)", span="208-208"];
m1_47 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, s.Position)", span="210-210"];
m1_37 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="reader.SupportMultipleContent = true", span="190-190"];
m1_38 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="reader.CloseInput = false", span="191-191"];
m1_39 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="reader.Read()", span="194-194"];
m1_42 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="ser.Deserialize<IList<ErroringClass>>(reader)", span="199-199"];
m1_40 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="var ser = new JsonSerializer()", span="196-196"];
m1_41 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="ser.CheckAdditionalContent = false", span="197-197"];
m1_43 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="Assert.Fail()", span="202-202"];
m1_44 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label=Exception, span="204-204"];
m1_48 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", span="182-182"];
m1_3273 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="7550-7550"];
m1_3274 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                () => { JsonConvert.DeserializeObject<double>(null); },\r\n                new[]\r\n                {\r\n                    ''Value cannot be null.'' + Environment.NewLine + ''Parameter name: value'',\r\n                    ''Argument cannot be null.'' + Environment.NewLine + ''Parameter name: value'' // mono\r\n                })", span="7552-7558"];
m1_3275 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="7550-7550"];
m1_213 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Binding_DisallowNull.Binding_DisallowNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Binding_DisallowNull.Binding_DisallowNull()", span="549-549"];
m1_2397 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", span="5552-5552"];
m1_938 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", span="1986-1986"];
m1_939 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonSerializerTest.cs", label="var strings = dictionaryKey.Split(' ')", span="1988-1988"];
m1_940 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonSerializerTest.cs", label="return new DictionaryKeyCast(strings[0], Convert.ToInt32(strings[1]));", span="1989-1989"];
m1_941 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", span="1986-1986"];
m1_1990 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="4284-4284"];
m1_1991 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="StructTest structTest = new StructTest\r\n            {\r\n                StringProperty = ''StringProperty!'',\r\n                StringField = ''StringField'',\r\n                IntProperty = 5,\r\n                IntField = 10\r\n            }", span="4286-4292"];
m1_1992 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(structTest, Formatting.Indented)", span="4294-4294"];
m1_1995 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(structTest.StringProperty, deserialized.StringProperty)", span="4304-4304"];
m1_1993 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''StringField'''': ''''StringField'''',\r\n  ''''IntField'''': 10,\r\n  ''''StringProperty'''': ''''StringProperty!'''',\r\n  ''''IntProperty'''': 5\r\n}'', json)", span="4296-4301"];
m1_1994 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="StructTest deserialized = JsonConvert.DeserializeObject<StructTest>(json)", span="4303-4303"];
m1_1996 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(structTest.StringField, deserialized.StringField)", span="4305-4305"];
m1_1997 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(structTest.IntProperty, deserialized.IntProperty)", span="4306-4306"];
m1_1998 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(structTest.IntField, deserialized.IntField)", span="4307-4307"];
m1_1999 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="4284-4284"];
m1_88 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithImplicitOperator.ClassWithImplicitOperator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithImplicitOperator.ClassWithImplicitOperator()", span="323-323"];
m1_1885 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="4091-4091"];
m1_1886 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="4093-4093"];
m1_1887 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => { JsonConvert.DeserializeObject<double>(json); },\r\n                @''Unexpected character encountered while parsing value: [. Path '', line 1, position 1.'')", span="4095-4097"];
m1_1888 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="4091-4091"];
m1_419 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", span="1099-1099"];
m1_420 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[''''2000-01-01T01:01:01+00:00'''']''))", span="1101-1101"];
m1_421 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateParseHandling.DateTime, reader.DateParseHandling)", span="1102-1102"];
m1_425 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="serializer.Populate(reader, l)", span="1108-1108"];
m1_428 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateParseHandling.DateTime, reader.DateParseHandling)", span="1113-1113"];
m1_422 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="1104-1104"];
m1_423 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="serializer.DateParseHandling = DateParseHandling.DateTimeOffset", span="1105-1105"];
m1_424 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="IList<object> l = new List<object>()", span="1107-1107"];
m1_426 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), l[0].GetType())", span="1110-1110"];
m1_427 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero), l[0])", span="1111-1111"];
m1_429 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", span="1099-1099"];
m1_2217 [cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0"];
m1_606 [cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0"];
m1_3349 [cluster="System.Enum.Parse(System.Type, string)", file="JsonSerializerTest.cs", label="Entry System.Enum.Parse(System.Type, string)", span="0-0"];
m1_3846 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="8939-8939"];
m1_3847 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label="ISet<string> s1 = new HashSet<string>(new[] { ''1'', ''two'', ''III'' })", span="8941-8941"];
m1_3848 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(s1)", span="8943-8943"];
m1_3850 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(s1.Count, s2.Count)", span="8947-8947"];
m1_3851 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label=s1, span="8948-8948"];
m1_3849 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label="ISet<string> s2 = JsonConvert.DeserializeObject<ISet<string>>(json)", span="8945-8945"];
m1_3852 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label="Assert.IsTrue(s2.Contains(s))", span="8950-8950"];
m1_3853 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="8939-8939"];
m1_4352 [cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", span="10207-10207"];
m1_4353 [cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonSerializerTest.cs", label="Value = value", span="10209-10209"];
m1_4354 [cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonSerializerTest.cs", label="Constructor = ''Public Parameterized''", span="10210-10210"];
m1_4355 [cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", span="10207-10207"];
m1_3854 [cluster="System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m1_3302 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m1_2690 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="6174-6174"];
m1_2691 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="NullableStructPropertyClass nullableStructPropertyClass = new NullableStructPropertyClass()\r\n            {\r\n                Foo1 = new StructISerializable() { Name = ''foo 1'' },\r\n                Foo2 = new StructISerializable() { Name = ''foo 2'' }\r\n            }", span="6176-6180"];
m1_2692 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="NullableStructPropertyClass barWithNull = new NullableStructPropertyClass()\r\n            {\r\n                Foo1 = new StructISerializable() { Name = ''foo 1'' },\r\n                Foo2 = null\r\n            }", span="6181-6185"];
m1_2693 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="string s = JsonConvert.SerializeObject(nullableStructPropertyClass)", span="6188-6188"];
m1_2697 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="s = JsonConvert.SerializeObject(barWithNull)", span="6194-6194"];
m1_2694 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="NullableStructPropertyClass deserialized = deserialize(s)", span="6189-6189"];
m1_2695 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="6190-6190"];
m1_2696 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(deserialized.Foo2.Value.Name, ''foo 2'')", span="6191-6191"];
m1_2698 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="deserialized = deserialize(s)", span="6195-6195"];
m1_2699 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="6196-6196"];
m1_2700 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(deserialized.Foo2, null)", span="6197-6197"];
m1_2701 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="6174-6174"];
m1_430 [cluster="System.IO.StringReader.StringReader(string)", file="JsonSerializerTest.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m1_220 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", span="578-578"];
m1_221 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.SerializeObject(new DictionaryWithNoNull()); }, ''Cannot write a null value for property 'Name'. Property requires a non-null value. Path ''.'')", span="580-580"];
m1_222 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", span="578-578"];
m1_1972 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="4256-4256"];
m1_1973 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="List<String> strings = new List<String>()", span="4258-4258"];
m1_1974 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="strings.Add(''str_1'')", span="4260-4260"];
m1_1975 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="strings.Add(''str_2'')", span="4261-4261"];
m1_1976 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="strings.Add(''str_3'')", span="4262-4262"];
m1_1977 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(strings)", span="4264-4264"];
m1_1978 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[''''str_1'''',''''str_2'''',''''str_3'''']'', json)", span="4265-4265"];
m1_1979 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="4256-4256"];
m1_2121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="4667-4667"];
m1_2122 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonSerializerTest.cs", label=initial, span="4669-4669"];
m1_2123 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonSerializerTest.cs", label="Add(pair.Key, pair.Value)", span="4671-4671"];
m1_2124 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="4667-4667"];
m1_3084 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", span="7174-7174"];
m1_3085 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+HasByteArray, Newtonsoft.Json.Tests'''',\r\n  ''''EncryptedPassword'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''cGFzc3dvcmQ=''''\r\n  }\r\n}''", span="7176-7182"];
m1_3086 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", file="JsonSerializerTest.cs", label="HasByteArray value = JsonConvert.DeserializeObject<HasByteArray>(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n            })", span="7183-7186"];
m1_3087 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEquivalent(Convert.FromBase64String(''cGFzc3dvcmQ=''), value.EncryptedPassword)", span="7188-7188"];
m1_3088 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", span="7174-7174"];
m1_615 [cluster="object.ToString()", file="JsonSerializerTest.cs", label="Entry object.ToString()", span="0-0"];
m1_2491 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="5693-5693"];
m1_2492 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonSerializerTest.cs", label="return new DictionaryKey() { Value = value };", span="5695-5695"];
m1_2493 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="5693-5693"];
m1_2528 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="5784-5784"];
m1_2529 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="JsonSerializer serializer1 = new JsonSerializer()", span="5786-5786"];
m1_2530 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="serializer1.Converters.Add(new IsoDateTimeConverter())", span="5787-5787"];
m1_2531 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="serializer1.NullValueHandling = NullValueHandling.Ignore", span="5788-5788"];
m1_2534 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="MyClass[] z = (MyClass[])serializer1.Deserialize(reader, typeof(MyClass[]))", span="5794-5794"];
m1_2532 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="string json = @''[{''''Prop1'''':''''''''},{''''Prop1'''':''''''''}]''", span="5790-5790"];
m1_2533 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5792-5792"];
m1_2535 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, z.Length)", span="5795-5795"];
m1_2536 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, z[0].Prop1.Length)", span="5796-5796"];
m1_2537 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, z[1].Prop1.Length)", span="5797-5797"];
m1_2538 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="5784-5784"];
m1_4270 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", span="9989-9989"];
m1_4271 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="return objectType == typeof(System.Net.Mail.MailAddress);", span="9991-9991"];
m1_4272 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", span="9989-9989"];
m1_1461 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="3114-3114"];
m1_1462 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new GenericImpl())", span="3116-3116"];
m1_1463 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Id'''':0}'', json)", span="3117-3117"];
m1_1464 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="3114-3114"];
m1_272 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", span="674-674"];
m1_273 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonSerializerTest.cs", label="var e1 = JsonConvert.DeserializeObject<EnumA>('''ValueA''')", span="676-676"];
m1_274 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonSerializerTest.cs", label="Assert.AreEqual(EnumA.ValueA, e1)", span="677-677"];
m1_275 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonSerializerTest.cs", label="var e2 = JsonConvert.DeserializeObject<EnumA>('''value_a''', new StringEnumConverter())", span="679-679"];
m1_276 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonSerializerTest.cs", label="Assert.AreEqual(EnumA.ValueA, e2)", span="680-680"];
m1_277 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", span="674-674"];
m1_478 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", span="1241-1241"];
m1_479 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs", label="var input = new ResponseWithNewGenericProperty<List<int>>()\r\n            {\r\n                Message = ''More complex case - generic list of int'',\r\n                Data = Enumerable.Range(50, 70).ToList(),\r\n                Result = ''This should be fine too''\r\n            }", span="1243-1248"];
m1_480 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(input)", span="1250-1250"];
m1_482 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(input.Data, deserialized.Data)", span="1253-1253"];
m1_483 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Message, deserialized.Message)", span="1254-1254"];
m1_484 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Result, deserialized.Result)", span="1255-1255"];
m1_481 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs", label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericProperty<List<int>>>(json)", span="1251-1251"];
m1_485 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", span="1241-1241"];
m1_1006 [cluster="System.IO.MemoryStream.ToArray()", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.ToArray()", span="0-0"];
m1_195 [cluster="Unk.IsNull", file="JsonSerializerTest.cs", label="Entry Unk.IsNull", span=""];
m1_1601 [cluster="Newtonsoft.Json.Tests.TestObjects.Organization.Person.Person()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Organization.Person.Person()", span="34-34"];
m1_350 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructWithConstructorAttribute()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructWithConstructorAttribute()", span="867-867"];
m1_351 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructWithConstructorAttribute()", file="JsonSerializerTest.cs", label="ImmutableStructWithConstructorAttribute result = JsonConvert.DeserializeObject<ImmutableStructWithConstructorAttribute>(''{ \''Value\'': \''working\'' }'')", span="869-869"];
m1_352 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructWithConstructorAttribute()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''working'', result.Value)", span="871-871"];
m1_353 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructWithConstructorAttribute()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructWithConstructorAttribute()", span="867-867"];
m1_2958 [cluster="Newtonsoft.Json.Tests.TestObjects.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", span="29-29"];
m1_291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTestClass.RequiredPropertyTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTestClass.RequiredPropertyTestClass()", span="684-684"];
m1_460 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", span="1205-1205"];
m1_461 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs", label="var input = new ResponseWithNewGenericPropertyVirtual<int>()\r\n            {\r\n                Message = ''Trying out integer as type parameter'',\r\n                Data = 25,\r\n                Result = ''This should be fine''\r\n            }", span="1207-1212"];
m1_462 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(input)", span="1214-1214"];
m1_464 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Data, deserialized.Data)", span="1217-1217"];
m1_465 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Message, deserialized.Message)", span="1218-1218"];
m1_466 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Result, deserialized.Result)", span="1219-1219"];
m1_463 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs", label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericPropertyVirtual<int>>(json)", span="1215-1215"];
m1_467 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", span="1205-1205"];
m1_1017 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="2249-2249"];
m1_1018 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Store store = new Store()", span="2251-2251"];
m1_1019 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(store)", span="2253-2253"];
m1_1021 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(store.Establised, deserializedStore.Establised)", span="2257-2257"];
m1_1022 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(store.product.Count, deserializedStore.product.Count)", span="2258-2258"];
m1_1020 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Store deserializedStore = (Store)JsonConvert.DeserializeObject(jsonText, typeof(Store))", span="2255-2255"];
m1_1023 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Console.WriteLine(jsonText)", span="2260-2260"];
m1_1024 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="2249-2249"];
m1_2130 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", span="4693-4693"];
m1_1539 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="3264-3264"];
m1_1540 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''FirstName'''': null,\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="3268-3273"];
m1_1541 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="3275-3275"];
m1_1542 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="Assert.Fail()", span="3276-3276"];
m1_1543 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label=JsonSerializationException, span="3278-3278"];
m1_1544 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'FirstName' expects a value but got null. Path ''''))", span="3280-3280"];
m1_1545 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="3264-3264"];
m1_4124 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", span="9589-9589"];
m1_4125 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="CultureInfo culture = new CultureInfo(''tr-TR'')", span="9591-9591"];
m1_4126 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="DateTime dt = new DateTime(2000, 12, 22)", span="9593-9593"];
m1_4128 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="9595-9599"];
m1_4133 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="9609-9613"];
m1_4138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(@''''''2000-pie-Dec-Friday-22''''''))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="9620-9624"];
m1_4127 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="9594-9594"];
m1_4129 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dt, settings)", span="9601-9601"];
m1_4132 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, dt1)", span="9607-9607"];
m1_4137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, (DateTime)v.Value)", span="9618-9618"];
m1_4131 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="DateTime dt1 = JsonConvert.DeserializeObject<DateTime>(json, settings)", span="9605-9605"];
m1_4130 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''''''2000-pie-Ara-Cuma-22'''''', json)", span="9603-9603"];
m1_4134 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="JValue v = (JValue)JToken.ReadFrom(reader)", span="9614-9614"];
m1_4135 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JTokenType.Date, v.Type)", span="9616-9616"];
m1_4136 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(DateTime), v.Value.GetType())", span="9617-9617"];
m1_4139 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="v = (JValue)JToken.ReadFrom(reader)", span="9625-9625"];
m1_4140 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JTokenType.String, v.Type)", span="9627-9627"];
m1_4141 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="9628-9628"];
m1_4142 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''2000-pie-Dec-Friday-22'', v.Value)", span="9629-9629"];
m1_4143 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", span="9589-9589"];
m1_1716 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="3718-3718"];
m1_1717 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="OptInClass optInClass = new OptInClass()", span="3720-3720"];
m1_1718 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="optInClass.Age = 26", span="3721-3721"];
m1_1719 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="optInClass.Name = ''James NK''", span="3722-3722"];
m1_1720 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="optInClass.NotIncluded = ''Poor me :(''", span="3723-3723"];
m1_1721 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(optInClass, Formatting.Indented)", span="3725-3725"];
m1_1722 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''Age'''': 26\r\n}'', json)", span="3727-3730"];
m1_1723 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="OptInClass newOptInClass = JsonConvert.DeserializeObject<OptInClass>(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''NotIncluded'''': ''''Ignore me!'''',\r\n  ''''Age'''': 26\r\n}'')", span="3732-3736"];
m1_1724 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(26, newOptInClass.Age)", span="3737-3737"];
m1_1725 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''James NK'', newOptInClass.Name)", span="3738-3738"];
m1_1726 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, newOptInClass.NotIncluded)", span="3739-3739"];
m1_1727 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="3718-3718"];
m1_4105 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", span="9550-9550"];
m1_4106 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="DateTime dt = new DateTime(2000, 12, 22)", span="9552-9552"];
m1_4107 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="9553-9553"];
m1_4109 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dt, settings)", span="9559-9559"];
m1_4112 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, dt1)", span="9565-9565"];
m1_4117 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, (DateTime)v.Value)", span="9575-9575"];
m1_4108 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="9554-9557"];
m1_4113 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="9567-9570"];
m1_4118 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(@''''''abc''''''))\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="9577-9580"];
m1_4111 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="DateTime dt1 = JsonConvert.DeserializeObject<DateTime>(json, settings)", span="9563-9563"];
m1_4110 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''''''2000-pie-Dec-Friday-22'''''', json)", span="9561-9561"];
m1_4114 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="JValue v = (JValue)JToken.ReadFrom(reader)", span="9571-9571"];
m1_4115 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JTokenType.Date, v.Type)", span="9573-9573"];
m1_4116 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(DateTime), v.Value.GetType())", span="9574-9574"];
m1_4119 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="v = (JValue)JToken.ReadFrom(reader)", span="9581-9581"];
m1_4120 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JTokenType.String, v.Type)", span="9583-9583"];
m1_4121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="9584-9584"];
m1_4122 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''abc'', v.Value)", span="9585-9585"];
m1_4123 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", span="9550-9550"];
m1_1360 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="2942-2942"];
m1_1361 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="ConstructorCaseSensitivityClass c = new ConstructorCaseSensitivityClass(''param1'', ''Param1'', ''Param2'')", span="2944-2944"];
m1_1362 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c)", span="2946-2946"];
m1_1363 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="ConstructorCaseSensitivityClass deserialized = JsonConvert.DeserializeObject<ConstructorCaseSensitivityClass>(json)", span="2948-2948"];
m1_1364 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''param1'', deserialized.param1)", span="2950-2950"];
m1_1365 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Param1'', deserialized.Param1)", span="2951-2951"];
m1_1366 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Param2'', deserialized.Param2)", span="2952-2952"];
m1_1367 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="2942-2942"];
m1_3114 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="7250-7250"];
m1_3115 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonSerializerTest.cs", label="string json = @''[\r\n  1,\r\n  2,\r\n  3,\r\n  null\r\n]''", span="7252-7257"];
m1_3116 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json);\r\n            }, ''Error converting value {null} to type 'System.Int32'. Path '[3]', line 5, position 6.'')", span="7259-7262"];
m1_3117 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="7250-7250"];
m1_2837 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="6591-6591"];
m1_2838 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonSerializerTest.cs", label="Title = title", span="6593-6593"];
m1_2839 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonSerializerTest.cs", label="Categories = new List<string>()", span="6594-6594"];
m1_2840 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="6591-6591"];
m1_3445 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="7919-7919"];
m1_3446 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="IDictionary<DateTimeOffset, int> dic1 = new Dictionary<DateTimeOffset, int>\r\n            {\r\n                { new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1 },\r\n                { new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2 }\r\n            }", span="7921-7925"];
m1_3447 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="7927-7927"];
m1_3448 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12+00:00'''': 1,\r\n  ''''2013-12-12T12:12:12+00:00'''': 2\r\n}'', json)", span="7929-7932"];
m1_3449 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="IDictionary<DateTimeOffset, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset, int>>(json)", span="7934-7934"];
m1_3450 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2.Count)", span="7936-7936"];
m1_3451 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7937-7937"];
m1_3452 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7938-7938"];
m1_3453 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="7919-7919"];
m1_3454 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", span="7942-7942"];
m1_3455 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="IDictionary<DateTimeOffset?, int> dic1 = new Dictionary<DateTimeOffset?, int>\r\n            {\r\n                { new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1 },\r\n                { new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2 }\r\n            }", span="7944-7948"];
m1_3456 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="7950-7953"];
m1_3457 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''\/Date(976623132000+0000)\/'''': 1,\r\n  ''''\/Date(1386850332000+0000)\/'''': 2\r\n}'', json)", span="7955-7958"];
m1_3458 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="IDictionary<DateTimeOffset?, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset?, int>>(json)", span="7960-7960"];
m1_3459 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2.Count)", span="7962-7962"];
m1_3460 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7963-7963"];
m1_3461 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7964-7964"];
m1_3462 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", span="7942-7942"];
m1_3790 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionary<TKey, TValue>.NoConstructorReadOnlyDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionary<TKey, TValue>.NoConstructorReadOnlyDictionary()", span="8794-8794"];
m1_3791 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionary<TKey, TValue>.NoConstructorReadOnlyDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionary<TKey, TValue>.NoConstructorReadOnlyDictionary()", span="8794-8794"];
m1_2687 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="6146-6146"];
m1_2688 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''Name'', _name)", span="6148-6148"];
m1_2689 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="6146-6146"];
m1_3326 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="7656-7656"];
m1_3327 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="Product product = new Product()\r\n            {\r\n                Name = ''Apple'',\r\n                ExpiryDate = new DateTime(2012, 4, 1),\r\n                Price = 3.99M,\r\n                Sizes = new[] { ''Small'', ''Medium'', ''Large'' }\r\n            }", span="7658-7664"];
m1_3328 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(product)", span="7666-7666"];
m1_3329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="string metroJson = JsonConvert.SerializeObject(product, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new MetroPropertyNameResolver(),\r\n                Converters = { new MetroStringConverter() },\r\n                Formatting = Formatting.Indented\r\n            })", span="7674-7679"];
m1_3330 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  '''':::NAME:::'''': '''':::APPLE:::'''',\r\n  '''':::EXPIRYDATE:::'''': ''''2012-04-01T00:00:00'''',\r\n  '''':::PRICE:::'''': 3.99,\r\n  '''':::SIZES:::'''': [\r\n    '''':::SMALL:::'''',\r\n    '''':::MEDIUM:::'''',\r\n    '''':::LARGE:::''''\r\n  ]\r\n}'', metroJson)", span="7680-7689"];
m1_3331 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="Color[] colors = new[] { Color.Blue, Color.Red, Color.Yellow, Color.Green, Color.Black, Color.Brown }", span="7697-7697"];
m1_3332 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="string json2 = JsonConvert.SerializeObject(colors, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new MetroPropertyNameResolver(),\r\n                Converters = { new MetroStringConverter(), new MetroColorConverter() },\r\n                Formatting = Formatting.Indented\r\n            })", span="7699-7704"];
m1_3333 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::BLACK:::'''',\r\n  '''':::GRAY:::''''\r\n]'', json2)", span="7706-7713"];
m1_3334 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="7656-7656"];
m1_1395 [cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0"];
m1_3226 [cluster="Newtonsoft.Json.Tests.TestObjects.Widget1.Widget1()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Widget1.Widget1()", span="27-27"];
m1_105 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="358-358"];
m1_2671 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", span="6099-6099"];
m1_2672 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", span="6099-6099"];
m1_2000 [cluster="Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", span="27-27"];
m1_2626 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="6004-6004"];
m1_2627 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs", label="decimal? d = JsonConvert.DeserializeObject<decimal?>(''123456789876543.21'')", span="6006-6006"];
m1_2628 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123456789876543.21m, d)", span="6007-6007"];
m1_2629 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="6004-6004"];
m1_2137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", span="4756-4756"];
m1_2138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="CircularConstructor1 c1 = new CircularConstructor1(null)\r\n            {\r\n                StringProperty = ''Value!''\r\n            }", span="4758-4761"];
m1_2139 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="CircularConstructor2 c2 = new CircularConstructor2(null)\r\n            {\r\n                IntProperty = 1\r\n            }", span="4763-4766"];
m1_2140 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="c1.C2 = c2", span="4768-4768"];
m1_2141 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="c2.C1 = c1", span="4769-4769"];
m1_2142 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, new JsonSerializerSettings\r\n            {\r\n                ReferenceLoopHandling = ReferenceLoopHandling.Ignore,\r\n                Formatting = Formatting.Indented\r\n            })", span="4771-4775"];
m1_2143 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''C2'''': {\r\n    ''''IntProperty'''': 1\r\n  },\r\n  ''''StringProperty'''': ''''Value!''''\r\n}'', json)", span="4777-4782"];
m1_2144 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="CircularConstructor1 newC1 = JsonConvert.DeserializeObject<CircularConstructor1>(@''{\r\n  ''''C2'''': {\r\n    ''''IntProperty'''': 1,\r\n    ''''C1'''': {}\r\n  },\r\n  ''''StringProperty'''': ''''Value!''''\r\n}'')", span="4784-4790"];
m1_2145 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Value!'', newC1.StringProperty)", span="4792-4792"];
m1_2146 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, newC1.C2.IntProperty)", span="4793-4793"];
m1_2147 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, newC1.C2.C1.StringProperty)", span="4794-4794"];
m1_2148 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, newC1.C2.C1.C2)", span="4795-4795"];
m1_2149 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", span="4756-4756"];
m1_1191 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m1_304 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", span="733-733"];
m1_305 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="RequiredPropertyConstructorTestClass c1 = new RequiredPropertyConstructorTestClass(null)", span="735-735"];
m1_306 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.SerializeObject(c1),\r\n                ''Cannot write a null value for property 'Name'. Property requires a value. Path ''.'')", span="737-739"];
m1_307 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="RequiredPropertyConstructorTestClass c2 = new RequiredPropertyConstructorTestClass(''Name!'')", span="741-741"];
m1_308 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c2)", span="743-743"];
m1_309 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Name'''':''''Name!''''}'', json)", span="745-745"];
m1_310 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<RequiredPropertyConstructorTestClass>(@''{}''),\r\n                ''Required property 'Name' not found in JSON. Path '', line 1, position 2.'')", span="747-749"];
m1_311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="RequiredPropertyConstructorTestClass c3 = JsonConvert.DeserializeObject<RequiredPropertyConstructorTestClass>(@''{''''Name'''':''''Name!''''}'')", span="751-751"];
m1_312 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', c3.Name)", span="753-753"];
m1_313 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", span="733-733"];
m1_2755 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="6307-6307"];
m1_2756 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  'Name': 'James Hughes',\r\n  'Age': '40',\r\n  'Height': '44.4',\r\n  'Price': '4'\r\n}''", span="6309-6314"];
m1_2757 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="DeserializeStringConvert p = JsonConvert.DeserializeObject<DeserializeStringConvert>(json)", span="6316-6316"];
m1_2758 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="Assert.AreEqual(40, p.Age)", span="6317-6317"];
m1_2759 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="Assert.AreEqual(44.4, p.Height)", span="6318-6318"];
m1_2760 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4m, p.Price)", span="6319-6319"];
m1_2761 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="6307-6307"];
m1_2226 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="5001-5001"];
m1_2227 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="return ((IEnumerable)_innerDictionary).GetEnumerator();", span="5003-5003"];
m1_2228 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="5001-5001"];
m1_4349 [cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", span="10201-10201"];
m1_4350 [cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", file="JsonSerializerTest.cs", label="Constructor = ''NonPublic''", span="10203-10203"];
m1_4351 [cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", span="10201-10201"];
m1_1200 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", span="2644-2644"];
m1_1201 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs", label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n            {\r\n                new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n            }", span="2646-2652"];
m1_1202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(testDates, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="2654-2654"];
m1_1203 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[''''\/Date(-59011455539000+0000)\/'''',''''\/Date(946688461000+0000)\/'''',''''\/Date(946641661000+1300)\/'''',''''\/Date(946701061000-0330)\/'''']'', result)", span="2655-2655"];
m1_1204 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", span="2644-2644"];
m1_320 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", span="773-773"];
m1_321 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonSerializerTest.cs", label="type == typeof(Version)", span="775-775"];
m1_323 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonSerializerTest.cs", label="return base.ResolveContract(type);", span="780-780"];
m1_322 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonSerializerTest.cs", label="throw new Exception(''Error!'');", span="777-777"];
m1_324 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", span="773-773"];
m1_2655 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="6062-6062"];
m1_2656 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="VectorParent obj = new VectorParent()", span="6064-6064"];
m1_2657 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="obj.Position = new Vector { X = 1, Y = 2, Z = 3 }", span="6065-6065"];
m1_2658 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="string str = JsonConvert.SerializeObject(obj)", span="6067-6067"];
m1_2659 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="obj = JsonConvert.DeserializeObject<VectorParent>(str)", span="6069-6069"];
m1_2660 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, obj.Position.X)", span="6071-6071"];
m1_2661 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, obj.Position.Y)", span="6072-6072"];
m1_2662 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, obj.Position.Z)", span="6073-6073"];
m1_2663 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="6062-6062"];
m1_2407 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="5541-5541"];
m1_2408 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="5543-5543"];
m1_2409 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="5541-5541"];
m1_4058 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", span="9461-9461"];
m1_4059 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonSerializerTest.cs", label="return (short)Value;", span="9463-9463"];
m1_4060 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", span="9461-9461"];
m1_364 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomerWithMetadataType.CustomerWithMetadataType()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomerWithMetadataType.CustomerWithMetadataType()", span="887-887"];
m1_1043 [cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29"];
m1_1088 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", span="2380-2380"];
m1_1089 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="string value = @''{''''Name'''':''''Orange'''', ''''Hash'''':{''''ExpiryDate'''':''''01/24/2010 12:00:00'''',''''UntypedArray'''':[''''01/24/2010 12:00:00'''']}}''", span="2382-2382"];
m1_1090 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="TypedSubHashtable p = JsonConvert.DeserializeObject(value, typeof(TypedSubHashtable)) as TypedSubHashtable", span="2384-2384"];
m1_1091 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''01/24/2010 12:00:00'', p.Hash[''ExpiryDate''].ToString())", span="2386-2386"];
m1_1092 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  ''''01/24/2010 12:00:00''''\r\n]'', p.Hash[''UntypedArray''].ToString())", span="2387-2389"];
m1_1093 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", span="2380-2380"];
m1_894 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1<T>.Foo1()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1<T>.Foo1()", span="1879-1879"];
m1_2495 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="5700-5700"];
m1_2496 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="Dictionary<DictionaryKey, string> dictionary = new Dictionary<DictionaryKey, string>()", span="5702-5702"];
m1_2497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="dictionary.Add(new DictionaryKey() { Value = ''First!'' }, ''First'')", span="5704-5704"];
m1_2498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="dictionary.Add(new DictionaryKey() { Value = ''Second!'' }, ''Second'')", span="5705-5705"];
m1_2499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="5707-5707"];
m1_2500 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''First!'''': ''''First'''',\r\n  ''''Second!'''': ''''Second''''\r\n}'', json)", span="5709-5712"];
m1_2501 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="Dictionary<DictionaryKey, string> newDictionary =\r\n                JsonConvert.DeserializeObject<Dictionary<DictionaryKey, string>>(json)", span="5714-5715"];
m1_2502 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, newDictionary.Count)", span="5717-5717"];
m1_2503 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="5700-5700"];
m1_25 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AlmostImmutableStruct.AlmostImmutableStruct(string, int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AlmostImmutableStruct.AlmostImmutableStruct(string, int)", span="157-157"];
m1_26 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AlmostImmutableStruct.AlmostImmutableStruct(string, int)", file="JsonSerializerTest.cs", label="Value = value", span="159-159"];
m1_27 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AlmostImmutableStruct.AlmostImmutableStruct(string, int)", file="JsonSerializerTest.cs", label="Value2 = value2", span="160-160"];
m1_28 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AlmostImmutableStruct.AlmostImmutableStruct(string, int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AlmostImmutableStruct.AlmostImmutableStruct(string, int)", span="157-157"];
m1_3683 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", span="8502-8502"];
m1_3684 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs", label="string json = @''[\r\n        900\r\n      ]''", span="8504-8506"];
m1_3685 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs", label="var l = JsonConvert.DeserializeObject<IReadOnlyList<int>>(json)", span="8508-8508"];
m1_3686 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs", label="int i = l[0]", span="8510-8510"];
m1_3687 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs", label="Assert.AreEqual(900, i)", span="8513-8513"];
m1_3688 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", span="8502-8502"];
m1_4025 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", span="9405-9405"];
m1_4026 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", file="JsonSerializerTest.cs", label="return TypeCode.Object;", span="9407-9407"];
m1_4027 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", span="9405-9405"];
m1_888 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", span="1927-1927"];
m1_889 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="var original = new Foo1<Bar1> { foo = new Bar1 { bar = ''value'' }, foo2 = new Bar1 { bar = ''value2'' } }", span="1929-1929"];
m1_890 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(original)", span="1930-1930"];
m1_891 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="var expectedJson = @''{''''foo'''':{''''bar'''':''''value''''},''''foo2'''':{''''bar'''':''''value2''''}}''", span="1931-1931"];
m1_892 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expectedJson, json)", span="1932-1932"];
m1_893 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", span="1927-1927"];
m1_4055 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", span="9456-9456"];
m1_4056 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="9458-9458"];
m1_4057 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", span="9456-9456"];
m1_2404 [cluster="string.Format(string, object, object)", file="JsonSerializerTest.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m1_1130 [cluster="Newtonsoft.Json.Linq.JToken.Children()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="357-357"];
m1_2260 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="5156-5156"];
m1_2261 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Person person = new Person()", span="5158-5158"];
m1_2262 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="5159-5159"];
m1_2263 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="person.LastModified = person.BirthDate", span="5160-5160"];
m1_2264 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="person.Department = ''Department!''", span="5161-5161"];
m1_2265 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="person.Name = ''Name!''", span="5162-5162"];
m1_2269 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="5172-5172"];
m1_2266 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="5164-5164"];
m1_2267 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="string dateTimeOffsetText", span="5165-5165"];
m1_2275 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="5206-5206"];
m1_2268 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="dateTimeOffsetText = @''\/Date(977345999000+0200)\/''", span="5167-5167"];
m1_2271 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''\/Date(946688461000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(946688461000)\/''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''\/Date(-62135596800000)\/'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="5178-5201"];
m1_2270 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="5174-5177"];
m1_2272 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="5203-5203"];
m1_2273 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''String!'', o2._stringValue)", span="5204-5204"];
m1_2274 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MinValue, o2._intValue)", span="5205-5205"];
m1_2276 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="5207-5207"];
m1_2277 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o2._nullPersonValue)", span="5208-5208"];
m1_2278 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o2._nullableInt)", span="5209-5209"];
m1_2279 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="5156-5156"];
m1_2016 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="4335-4335"];
m1_2017 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="Dictionary<Guid, int> dictionary = new Dictionary<Guid, int>()", span="4337-4337"];
m1_2018 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="dictionary.Add(new Guid(''F60EAEE0-AE47-488E-B330-59527B742D77''), 1)", span="4338-4338"];
m1_2019 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="dictionary.Add(new Guid(''C2594C02-EBA1-426A-AA87-8DD8871350B0''), 2)", span="4339-4339"];
m1_2020 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="4341-4341"];
m1_2021 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''f60eaee0-ae47-488e-b330-59527b742d77'''': 1,\r\n  ''''c2594c02-eba1-426a-aa87-8dd8871350b0'''': 2\r\n}'', json)", span="4342-4345"];
m1_2022 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="4335-4335"];
m1_2302 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="5273-5273"];
m1_2303 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="AA myA = JsonConvert.DeserializeObject<AA>(\r\n                @''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_field2'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2\r\n}'')", span="5275-5285"];
m1_2304 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5287-5287"];
m1_2305 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5288-5288"];
m1_2306 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5289-5289"];
m1_2307 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5290-5290"];
m1_2308 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5291-5291"];
m1_2309 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5292-5292"];
m1_2310 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5293-5293"];
m1_2311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5294-5294"];
m1_2312 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="BB myB = JsonConvert.DeserializeObject<BB>(\r\n                @''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''AA_field2'''': 3,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2,\r\n  ''''BB_property1'''': 3,\r\n  ''''BB_property2'''': 3,\r\n  ''''BB_property3'''': 3,\r\n  ''''BB_property4'''': 3,\r\n  ''''BB_property5'''': 3,\r\n  ''''BB_property6'''': 3,\r\n  ''''BB_property7'''': 3,\r\n  ''''BB_property8'''': 3\r\n}'')", span="5296-5316"];
m1_2313 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5318-5318"];
m1_2314 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5319-5319"];
m1_2315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5320-5320"];
m1_2316 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5321-5321"];
m1_2317 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5322-5322"];
m1_2318 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5323-5323"];
m1_2319 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5324-5324"];
m1_2320 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5325-5325"];
m1_2321 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, myB.BB_field1)", span="5327-5327"];
m1_2322 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, myB.BB_field2)", span="5328-5328"];
m1_2323 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, myB.BB_property1)", span="5329-5329"];
m1_2324 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, myB.BB_property2)", span="5330-5330"];
m1_2325 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property3'', BindingFlags.Instance | BindingFlags.Public), myB))", span="5331-5331"];
m1_2326 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5332-5332"];
m1_2327 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, myB.BB_property5)", span="5333-5333"];
m1_2328 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property6'', BindingFlags.Instance | BindingFlags.Public), myB))", span="5334-5334"];
m1_2329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property7'', BindingFlags.Instance | BindingFlags.Public), myB))", span="5335-5335"];
m1_2330 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property8'', BindingFlags.Instance | BindingFlags.Public), myB))", span="5336-5336"];
m1_2331 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="5273-5273"];
m1_1008 [cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="113-113"];
m1_4082 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", span="9501-9501"];
m1_4083 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="9503-9503"];
m1_4084 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", span="9501-9501"];
m1_1980 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m1_3649 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="8400-8400"];
m1_3650 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonSerializerTest.cs", label="var actual = JsonConvert.DeserializeObject<MyType>(@''{ ''''MyProperty'''':{''''Key'''':''''Y''''}}'')", span="8402-8402"];
m1_3651 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''X'', actual.MyProperty[''Key''])", span="8403-8403"];
m1_3652 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="8400-8400"];
m1_3235 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="7495-7495"];
m1_3236 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="object v = JsonConvert.DeserializeObject<double?>('''')", span="7497-7497"];
m1_3237 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Assert.IsNull(v)", span="7498-7498"];
m1_3238 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="v = JsonConvert.DeserializeObject<char?>('''')", span="7500-7500"];
m1_3239 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Assert.IsNull(v)", span="7501-7501"];
m1_3240 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="v = JsonConvert.DeserializeObject<int?>('''')", span="7503-7503"];
m1_3241 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Assert.IsNull(v)", span="7504-7504"];
m1_3242 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="v = JsonConvert.DeserializeObject<decimal?>('''')", span="7506-7506"];
m1_3243 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Assert.IsNull(v)", span="7507-7507"];
m1_3244 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="v = JsonConvert.DeserializeObject<DateTime?>('''')", span="7509-7509"];
m1_3245 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Assert.IsNull(v)", span="7510-7510"];
m1_3246 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="v = JsonConvert.DeserializeObject<DateTimeOffset?>('''')", span="7512-7512"];
m1_3247 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Assert.IsNull(v)", span="7513-7513"];
m1_3248 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="v = JsonConvert.DeserializeObject<byte[]>('''')", span="7515-7515"];
m1_3249 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Assert.IsNull(v)", span="7516-7516"];
m1_3250 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="7495-7495"];
m1_2668 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="6086-6086"];
m1_2669 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonSerializerTest.cs", label="IDoWork = doWork", span="6089-6089"];
m1_2670 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="6086-6086"];
m1_2565 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="5875-5875"];
m1_2566 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n            {\r\n                Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n            })", span="5877-5880"];
m1_2567 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''{\''Offset\'':\''2000-01-01T00:00:00+06:00\''}'', serializeObject)", span="5882-5882"];
m1_2568 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(serializeObject))\r\n            {\r\n                DateParseHandling = DateParseHandling.None\r\n            }", span="5884-5887"];
m1_2569 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="5888-5888"];
m1_2570 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="var deserializeObject = serializer.Deserialize<TimeZoneOffsetObject>(reader)", span="5890-5890"];
m1_2571 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="5892-5892"];
m1_2572 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="5893-5893"];
m1_2573 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="5875-5875"];
m1_4433 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", span="0-0"];
m1_879 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooBar1.FooBar1()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooBar1.FooBar1()", span="1886-1886"];
m1_2063 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="4497-4497"];
m1_2064 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonSerializerTest.cs", label="Dictionary = new Dictionary<string, string>\r\n                {\r\n                    { ''existing'', ''yup'' }\r\n                }", span="4499-4502"];
m1_2065 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonSerializerTest.cs", label="List = new List<string>\r\n                {\r\n                    ''existing''\r\n                }", span="4503-4506"];
m1_2066 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="4497-4497"];
m1_4052 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", span="9451-9451"];
m1_4053 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="9453-9453"];
m1_4054 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", span="9451-9451"];
m1_4432 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", span="0-0"];
m1_1892 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="4102-4102"];
m1_1893 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="4104-4104"];
m1_1894 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { JsonConvert.DeserializeObject<DynamicDictionary>(json); },\r\n                @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.Linq.DynamicDictionary' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="4106-4110"];
m1_1895 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="4102-4102"];
m1_4368 [cluster="Newtonsoft.Json.Tests.Serialization.CompletionDataRequest.CompletionDataRequest(string, int, string, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.CompletionDataRequest.CompletionDataRequest(string, int, string, string)", span="10280-10280"];
m1_4369 [cluster="Newtonsoft.Json.Tests.Serialization.CompletionDataRequest.CompletionDataRequest(string, int, string, string)", file="JsonSerializerTest.cs", label="Text = text", span="10282-10282"];
m1_4370 [cluster="Newtonsoft.Json.Tests.Serialization.CompletionDataRequest.CompletionDataRequest(string, int, string, string)", file="JsonSerializerTest.cs", label="CursorPosition = cursorPosition", span="10283-10283"];
m1_4371 [cluster="Newtonsoft.Json.Tests.Serialization.CompletionDataRequest.CompletionDataRequest(string, int, string, string)", file="JsonSerializerTest.cs", label="DataSource = dataSource", span="10284-10284"];
m1_4372 [cluster="Newtonsoft.Json.Tests.Serialization.CompletionDataRequest.CompletionDataRequest(string, int, string, string)", file="JsonSerializerTest.cs", label="Project = project", span="10285-10285"];
m1_4373 [cluster="Newtonsoft.Json.Tests.Serialization.CompletionDataRequest.CompletionDataRequest(string, int, string, string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.CompletionDataRequest.CompletionDataRequest(string, int, string, string)", span="10280-10280"];
m1_784 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1725-1725"];
m1_785 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''stringValue'', _stringValue)", span="1727-1727"];
m1_786 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''intValue'', _intValue)", span="1728-1728"];
m1_787 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''person1'', _person1, typeof(PersonReference))", span="1729-1729"];
m1_788 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''person2'', _person2, typeof(PersonReference))", span="1730-1730"];
m1_789 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''person3'', _person3, typeof(PersonReference))", span="1731-1731"];
m1_790 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''parent'', _parent, typeof(PreserveReferencesCallbackTestObject))", span="1732-1732"];
m1_791 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1725-1725"];
m1_3017 [cluster="Newtonsoft.Json.Tests.TestObjects.TestObject.TestObject(string, byte[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.TestObject.TestObject(string, byte[])", span="33-33"];
m1_3555 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", span="8209-8209"];
m1_3556 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", file="JsonSerializerTest.cs", label="string json = ''{one:1} // This is just a comment''", span="8211-8211"];
m1_3557 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings {CheckAdditionalContent = true}", span="8213-8213"];
m1_3559 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", file="JsonSerializerTest.cs", label="IDictionary<string, int> o = s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="8215-8215"];
m1_3558 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", file="JsonSerializerTest.cs", label="JsonSerializer s = JsonSerializer.Create(settings)", span="8214-8214"];
m1_3560 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(o)", span="8217-8217"];
m1_3561 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, o[''one''])", span="8218-8218"];
m1_3562 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", span="8209-8209"];
m1_1424 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="3054-3054"];
m1_1425 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="3056-3056"];
m1_1426 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="3057-3057"];
m1_1430 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="3064-3064"];
m1_1431 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="3065-3065"];
m1_1427 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(m1, new JavaScriptDateTimeConverter())", span="3059-3059"];
m1_1428 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':new Date(0),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="3060-3060"];
m1_1429 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json, new JavaScriptDateTimeConverter())", span="3062-3062"];
m1_1432 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="3054-3054"];
m1_1503 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="3190-3190"];
m1_1504 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="string json = @''{''''Height'''':1}''", span="3192-3192"];
m1_1505 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="DoubleClass c = JsonConvert.DeserializeObject<DoubleClass>(json)", span="3194-3194"];
m1_1506 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Height)", span="3195-3195"];
m1_1507 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="3190-3190"];
m1_2037 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="4384-4384"];
m1_2038 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="string googleSearchText = @''{\r\n        ''''responseData'''': {\r\n          ''''results'''': [\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''url'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''visibleUrl'''': ''''en.wikipedia.org'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:TwrPfhd22hYJ:en.wikipedia.org'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton - Wikipedia, the free encyclopedia'''',\r\n              ''''content'''': ''''[1] In 2006, she released her debut album...''''\r\n            },\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''url'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''visibleUrl'''': ''''www.imdb.com'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:1i34KkqnsooJ:www.imdb.com'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b>'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton'''',\r\n              ''''content'''': ''''Self: Zoolander. Socialite <b>Paris Hilton</b>...''''\r\n            }\r\n          ],\r\n          ''''cursor'''': {\r\n            ''''pages'''': [\r\n              {\r\n                ''''start'''': ''''0'''',\r\n                ''''label'''': 1\r\n              },\r\n              {\r\n                ''''start'''': ''''4'''',\r\n                ''''label'''': 2\r\n              },\r\n              {\r\n                ''''start'''': ''''8'''',\r\n                ''''label'''': 3\r\n              },\r\n              {\r\n                ''''start'''': ''''12'''',\r\n                ''''label'''': 4\r\n              }\r\n            ],\r\n            ''''estimatedResultCount'''': ''''59600000'''',\r\n            ''''currentPageIndex'''': 0,\r\n            ''''moreResultsUrl'''': ''''http://www.google.com/search?oe=utf8&ie=utf8...''''\r\n          }\r\n        },\r\n        ''''responseDetails'''': null,\r\n        ''''responseStatus'''': 200\r\n      }''", span="4386-4436"];
m1_2039 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="JObject googleSearch = JObject.Parse(googleSearchText)", span="4438-4438"];
m1_2040 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="IList<JToken> results = googleSearch[''responseData''][''results''].Children().ToList()", span="4441-4441"];
m1_2041 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="IList<SearchResult> searchResults = new List<SearchResult>()", span="4444-4444"];
m1_2042 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label=results, span="4445-4445"];
m1_2044 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="searchResults.Add(searchResult)", span="4448-4448"];
m1_2045 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, searchResults.Count)", span="4459-4459"];
m1_2046 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'', searchResults[0].Title)", span="4460-4460"];
m1_2047 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''<b>Paris Hilton</b>'', searchResults[1].Title)", span="4461-4461"];
m1_2043 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="SearchResult searchResult = JsonConvert.DeserializeObject<SearchResult>(result.ToString())", span="4447-4447"];
m1_2048 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="4384-4384"];
m1_2199 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m1_3439 [cluster="Newtonsoft.Json.Tests.TestObjects.PropertyItemConverter.PropertyItemConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PropertyItemConverter.PropertyItemConverter()", span="29-29"];
m1_1857 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="4048-4048"];
m1_1858 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="List<decimal?> l = JsonConvert.DeserializeObject<List<decimal?>>(''[ 3.3, null, 1.1 ] '')", span="4050-4050"];
m1_1859 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, l.Count)", span="4051-4051"];
m1_1860 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3.3m, l[0])", span="4053-4053"];
m1_1861 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, l[1])", span="4054-4054"];
m1_1862 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1.1m, l[2])", span="4055-4055"];
m1_1863 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="4048-4048"];
m1_981 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", span="2195-2195"];
m1_982 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="BaseWithContract baseWith = new SubWithContractVirtualProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="2197-2203"];
m1_983 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.JustAProperty = ''JustAProperty2!''", span="2205-2205"];
m1_984 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.Virtual = ''Virtual2!''", span="2206-2206"];
m1_985 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="2207-2207"];
m1_986 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.WithDataMember = ''WithDataMember2!''", span="2208-2208"];
m1_987 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="string json = AssertSerializeDeserializeEqual(baseWith)", span="2210-2210"];
m1_988 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!''''\r\n}'', json)", span="2212-2218"];
m1_989 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", span="2195-2195"];
m1_3639 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="8377-8377"];
m1_3640 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="writer.WriteValue(''X'')", span="8379-8379"];
m1_3641 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="8377-8377"];
m1_3837 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="8918-8918"];
m1_3838 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''MyNullableBool'''': '''''''',\r\n  ''''MyNullableInteger'''': '''''''',\r\n  ''''MyNullableDateTime'''': '''''''',\r\n  ''''MyNullableDateTimeOffset'''': '''''''',\r\n  ''''MyNullableDecimal'''': ''''''''\r\n}''", span="8920-8926"];
m1_3839 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="NullableTestClass c2 = JsonConvert.DeserializeObject<NullableTestClass>(json)", span="8928-8928"];
m1_3840 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="Assert.IsNull(c2.MyNullableBool)", span="8929-8929"];
m1_3841 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="Assert.IsNull(c2.MyNullableInteger)", span="8930-8930"];
m1_3842 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="Assert.IsNull(c2.MyNullableDateTime)", span="8931-8931"];
m1_3843 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="Assert.IsNull(c2.MyNullableDateTimeOffset)", span="8932-8932"];
m1_3844 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="Assert.IsNull(c2.MyNullableDecimal)", span="8933-8933"];
m1_3845 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="8918-8918"];
m1_325 [cluster="System.Exception.Exception(string)", file="JsonSerializerTest.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m1_1156 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="2568-2568"];
m1_1157 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="string json = @''[''''PRE\u003cPOST'''']''", span="2570-2570"];
m1_1158 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="2572-2572"];
m1_1159 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="2573-2573"];
m1_1160 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="2575-2575"];
m1_1162 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="2578-2578"];
m1_1161 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, jsonNetResult.Count)", span="2577-2577"];
m1_1163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="2568-2568"];
m1_3127 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", span="1764-1764"];
m1_3784 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", span="8786-8786"];
m1_3785 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<NoConstructorReadOnlyCollection<int>>(''[1]''), ''Cannot deserialize readonly or fixed size list: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+NoConstructorReadOnlyCollection`1[System.Int32]. Path '', line 1, position 1.'')", span="8788-8788"];
m1_3786 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", span="8786-8786"];
m1_4408 [cluster="System.Runtime.Serialization.SerializationInfo.GetSingle(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetSingle(string)", span="0-0"];
m1_1313 [cluster="System.Collections.Generic.Stack<T>.Stack()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0"];
m1_3606 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterCommentsCheckNotRequested()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterCommentsCheckNotRequested()", span="8325-8325"];
m1_3607 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterCommentsCheckNotRequested()", file="JsonSerializerTest.cs", label="string json = @''{ ''''MyProperty'''':{''''Key'''':''''Value''''}} /*this is a comment */\r\n// this is also a comment\r\nThis is just junk, though.''", span="8327-8329"];
m1_3608 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterCommentsCheckNotRequested()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="8331-8331"];
m1_3609 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterCommentsCheckNotRequested()", file="JsonSerializerTest.cs", label="var reader = new JsonTextReader(new StringReader(json))", span="8333-8333"];
m1_3610 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterCommentsCheckNotRequested()", file="JsonSerializerTest.cs", label="MyType mt = (MyType)serializer.Deserialize(reader, typeof(MyType))", span="8335-8335"];
m1_3611 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterCommentsCheckNotRequested()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, mt.MyProperty.Count)", span="8336-8336"];
m1_3612 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterCommentsCheckNotRequested()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterCommentsCheckNotRequested()", span="8325-8325"];
m1_2970 [cluster="System.TimeSpan.FromDays(double)", file="JsonSerializerTest.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m1_2664 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", span="6056-6056"];
m1_794 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object, System.Type)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object, System.Type)", span="0-0"];
m1_2981 [cluster="System.IO.StringWriter.StringWriter()", file="JsonSerializerTest.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m1_3345 [cluster="Unk.WriteValue", file="JsonSerializerTest.cs", label="Entry Unk.WriteValue", span=""];
m1_62 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", span="263-263"];
m1_63 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", file="JsonSerializerTest.cs", label="return new MainClass\r\n                {\r\n                    ID = 567,\r\n                    Name = ''XYZ'',\r\n                    Subclass = InstantiateSubclass()\r\n                };", span="265-270"];
m1_64 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", span="263-263"];
m1_3571 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentCommentsThenAnotherObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentCommentsThenAnotherObject()", span="8240-8240"];
m1_3572 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentCommentsThenAnotherObject()", file="JsonSerializerTest.cs", label="string json = @''{one:1} // This is just a comment\r\n/* This is just a comment\r\nover multiple\r\nlines.*/\r\n\r\n// This is just another comment. But here comes an empty object.\r\n{}''", span="8242-8248"];
m1_3573 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentCommentsThenAnotherObject()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings { CheckAdditionalContent = true }", span="8250-8250"];
m1_3575 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentCommentsThenAnotherObject()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json))); }, ''Additional text encountered after finished reading JSON content: {. Path '', line 7, position 0.'')", span="8252-8252"];
m1_3574 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentCommentsThenAnotherObject()", file="JsonSerializerTest.cs", label="JsonSerializer s = JsonSerializer.Create(settings)", span="8251-8251"];
m1_3576 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentCommentsThenAnotherObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentCommentsThenAnotherObject()", span="8240-8240"];
m1_944 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", span="2016-2016"];
m1_945 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs", label="var cc = new ChildDataContractWithHidden\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!'',\r\n                NewMember = ''NewMember!''\r\n            }", span="2018-2023"];
m1_946 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(cc)", span="2025-2025"];
m1_947 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''NewMember'''':''''NewMember!'''',''''virtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="2026-2026"];
m1_948 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", span="2016-2016"];
m1_3772 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="JsonSerializerTest.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m1_861 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", span="1892-1892"];
m1_862 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs", label="var original = new Foo1 { foo = ''value'' }", span="1894-1894"];
m1_863 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(original)", span="1895-1895"];
m1_864 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs", label="var expectedJson = @''{''''foo'''':''''value''''}''", span="1896-1896"];
m1_865 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expectedJson, json)", span="1897-1897"];
m1_866 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", span="1892-1892"];
m1_2300 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="5366-5366"];
m1_2337 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_field1 = f", span="5368-5368"];
m1_2338 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_field2 = f", span="5369-5369"];
m1_2339 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_property1 = f", span="5370-5370"];
m1_2340 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_property2 = f", span="5371-5371"];
m1_2341 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_property3 = f", span="5372-5372"];
m1_2342 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_property4 = f", span="5373-5373"];
m1_2343 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_property5 = f", span="5374-5374"];
m1_2344 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_property6 = f", span="5375-5375"];
m1_2345 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="5366-5366"];
m1_3505 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonSerializable.PersonSerializable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonSerializable.PersonSerializable()", span="33-33"];
m1_4208 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyObservableObject.MyObservableObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyObservableObject.MyObservableObject()", span="9805-9805"];
m1_3519 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="8094-8094"];
m1_3520 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs", label="Event1 e = new Event1\r\n            {\r\n                EventName = ''Blackadder III'',\r\n                Venue = ''Gryphon Theatre'',\r\n                Performances = new List<DateTime>\r\n                {\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336458600000),\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336545000000),\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336636800000)\r\n                }\r\n            }", span="8096-8106"];
m1_3521 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="8108-8108"];
m1_3522 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''EventName'''': ''''Blackadder III'''',\r\n  ''''Venue'''': ''''Gryphon Theatre'''',\r\n  ''''Performances'''': [\r\n    new Date(\r\n      1336458600000\r\n    ),\r\n    new Date(\r\n      1336545000000\r\n    ),\r\n    new Date(\r\n      1336636800000\r\n    )\r\n  ]\r\n}'', json)", span="8119-8133"];
m1_3523 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="8094-8094"];
m1_4061 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", span="9466-9466"];
m1_4062 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonSerializerTest.cs", label="return Value;", span="9468-9468"];
m1_4063 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", span="9466-9466"];
m1_4404 [cluster="System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", span="0-0"];
m1_357 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", span="899-899"];
m1_358 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs", label="CustomerWithMetadataType c = new CustomerWithMetadataType()\r\n            {\r\n                UpdatedBy_Id = Guid.NewGuid()\r\n            }", span="901-904"];
m1_359 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c)", span="905-905"];
m1_360 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''{}'', json)", span="907-907"];
m1_361 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs", label="CustomerWithMetadataType c2 = JsonConvert.DeserializeObject<CustomerWithMetadataType>(''{'UpdatedBy_Id':'F6E0666D-13C7-4745-B486-800812C8F6DE'}'')", span="909-909"];
m1_362 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs", label="Assert.AreEqual(Guid.Empty, c2.UpdatedBy_Id)", span="911-911"];
m1_363 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", span="899-899"];
m1_3720 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="8605-8605"];
m1_3721 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="var content = @''{''''startDateTime'''':''''2012-07-19T14:30:00+09:30''''}''", span="8607-8607"];
m1_3722 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="var jsonSerializerSettings = new JsonSerializerSettings() { DateFormatHandling = DateFormatHandling.IsoDateFormat, DateParseHandling = DateParseHandling.DateTimeOffset, DateTimeZoneHandling = DateTimeZoneHandling.RoundtripKind }", span="8609-8609"];
m1_3723 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="var obj = (JObject)JsonConvert.DeserializeObject(content, jsonSerializerSettings)", span="8611-8611"];
m1_3724 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="var dateTimeOffset = (DateTimeOffset)((JValue)obj[''startDateTime'']).Value", span="8613-8613"];
m1_3725 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TimeSpan.FromHours(9.5), dateTimeOffset.Offset)", span="8615-8615"];
m1_3726 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''07/19/2012 14:30:00 +09:30'', dateTimeOffset.ToString(CultureInfo.InvariantCulture))", span="8616-8616"];
m1_3727 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="8605-8605"];
m1_4180 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", span="9736-9736"];
m1_4181 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="DateTimeOffset dt = new DateTimeOffset(new DateTime(2000, 12, 22))", span="9738-9738"];
m1_4182 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="9739-9739"];
m1_4184 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dt, settings)", span="9745-9745"];
m1_4187 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, dt1)", span="9751-9751"];
m1_4192 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, (DateTimeOffset)v.Value)", span="9762-9762"];
m1_4183 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="9740-9743"];
m1_4188 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                DateParseHandling = DateParseHandling.DateTimeOffset\r\n            }", span="9753-9757"];
m1_4186 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="DateTimeOffset dt1 = JsonConvert.DeserializeObject<DateTimeOffset>(json, settings)", span="9749-9749"];
m1_4185 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''''''2000-pie-Dec-Friday-22'''''', json)", span="9747-9747"];
m1_4189 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="JValue v = (JValue)JToken.ReadFrom(reader)", span="9758-9758"];
m1_4190 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JTokenType.Date, v.Type)", span="9760-9760"];
m1_4191 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), v.Value.GetType())", span="9761-9761"];
m1_4193 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", span="9736-9736"];
m1_2621 [cluster="Unk.SerializeObject", file="JsonSerializerTest.cs", label="Entry Unk.SerializeObject", span=""];
m1_2825 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="6540-6540"];
m1_2826 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs", label="ChildWithDifferentOverrideObject cc = new ChildWithDifferentOverrideObject\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="6542-6546"];
m1_2827 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(cc)", span="6548-6548"];
m1_2828 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''differentVirtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="6549-6549"];
m1_2829 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="6540-6540"];
m1_2870 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", span="6676-6676"];
m1_2871 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="6678-6678"];
m1_2872 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", span="6676-6676"];
m1_4201 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", span="9788-9788"];
m1_4202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonSerializerTest.cs", label="MyObservableObject o = new MyObservableObject\r\n            {\r\n                TestString = ''Test string''\r\n            }", span="9790-9793"];
m1_4203 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="9795-9795"];
m1_4204 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''PropertyChanged'''': null,\r\n  ''''TestString'''': ''''Test string''''\r\n}'', json)", span="9796-9799"];
m1_4205 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonSerializerTest.cs", label="MyObservableObject o2 = JsonConvert.DeserializeObject<MyObservableObject>(json)", span="9801-9801"];
m1_4206 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Test string'', o2.TestString)", span="9802-9802"];
m1_4207 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", span="9788-9788"];
m1_439 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClass.ChildClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClass.ChildClass()", span="1122-1122"];
m1_2125 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="4711-4711"];
m1_2126 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs", label="B value = new B()", span="4713-4713"];
m1_2127 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(value, Formatting.Indented)", span="4714-4714"];
m1_2128 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''B2'''': null,\r\n  ''''A1'''': null,\r\n  ''''B3'''': null,\r\n  ''''A2'''': null\r\n}'', json)", span="4716-4721"];
m1_2129 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="4711-4711"];
m1_2907 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="6772-6772"];
m1_2908 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonSerializerTest.cs", label="return _readonlyString;", span="6774-6774"];
m1_2909 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="6772-6772"];
m1_3303 [cluster="System.DateTime.ToLocalTime()", file="JsonSerializerTest.cs", label="Entry System.DateTime.ToLocalTime()", span="0-0"];
m1_3269 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="7543-7543"];
m1_3270 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonSerializerTest.cs", label="byte[] b = JsonConvert.DeserializeObject<byte[]>('''')", span="7545-7545"];
m1_3271 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonSerializerTest.cs", label="Assert.IsNull(b)", span="7546-7546"];
m1_3272 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="7543-7543"];
m1_4338 [cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest()", span="10140-10140"];
m1_4339 [cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest()", span="10140-10140"];
m1_1687 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", span="29-29"];
m1_3219 [cluster="Newtonsoft.Json.Tests.TestObjects.WithEnums.WithEnums()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.WithEnums.WithEnums()", span="27-27"];
m1_2088 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="4594-4594"];
m1_2089 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="ThisGenericTest<KeyValueId> g = new ThisGenericTest<KeyValueId>()", span="4596-4596"];
m1_2090 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="g.Add(new KeyValueId { Id = 1, Key = ''key1'', Value = ''value1'' })", span="4598-4598"];
m1_2091 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="g.Add(new KeyValueId { Id = 2, Key = ''key2'', Value = ''value2'' })", span="4599-4599"];
m1_2092 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="g.MyProperty = ''some value''", span="4601-4601"];
m1_2093 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="string json = g.ToJson()", span="4603-4603"];
m1_2094 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''MyProperty'''': ''''some value'''',\r\n  ''''TheItems'''': [\r\n    {\r\n      ''''Id'''': 1,\r\n      ''''Key'''': ''''key1'''',\r\n      ''''Value'''': ''''value1''''\r\n    },\r\n    {\r\n      ''''Id'''': 2,\r\n      ''''Key'''': ''''key2'''',\r\n      ''''Value'''': ''''value2''''\r\n    }\r\n  ]\r\n}'', json)", span="4605-4619"];
m1_2095 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="ThisGenericTest<KeyValueId> gen = JsonConvert.DeserializeObject<ThisGenericTest<KeyValueId>>(json)", span="4621-4621"];
m1_2096 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''some value'', gen.MyProperty)", span="4622-4622"];
m1_2097 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="4594-4594"];
m1_1878 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="4080-4080"];
m1_1879 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="4082-4082"];
m1_1880 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Exception>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Exception' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="4084-4086"];
m1_1881 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="4080-4080"];
m1_1129 [cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="264-264"];
m1_4253 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", span="9914-9914"];
m1_4254 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonSerializerTest.cs", label="NullableLongTestClass instance = new NullableLongTestClass\r\n            {\r\n                Value = ulong.MaxValue\r\n            }", span="9916-9919"];
m1_4255 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonSerializerTest.cs", label="string output = JsonConvert.SerializeObject(instance)", span="9920-9920"];
m1_4256 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonSerializerTest.cs", label="NullableLongTestClass result = JsonConvert.DeserializeObject<NullableLongTestClass>(output)", span="9921-9921"];
m1_4257 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ulong.MaxValue, result.Value)", span="9923-9923"];
m1_4258 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", span="9914-9914"];
m1_837 [cluster="Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", span="171-171"];
m1_1586 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="3395-3395"];
m1_1587 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="InterfacePropertyTestClass testClass = new InterfacePropertyTestClass()", span="3397-3397"];
m1_1588 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="testClass.co = new Co()", span="3398-3398"];
m1_1589 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="String strFromTest = JsonConvert.SerializeObject(testClass)", span="3399-3399"];
m1_1590 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass));\r\n            }, @''Could not create an instance of type Newtonsoft.Json.Tests.TestObjects.ICo. Type is an interface or abstract class and cannot be instantiated. Path 'co.Name', line 1, position 14.'')", span="3401-3404"];
m1_1591 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="3395-3395"];
m1_774 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", span="1711-1711"];
m1_775 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonSerializerTest.cs", label="_stringValue = stringValue", span="1713-1713"];
m1_776 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonSerializerTest.cs", label="_intValue = intValue", span="1714-1714"];
m1_777 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonSerializerTest.cs", label="_person1 = p1", span="1715-1715"];
m1_778 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonSerializerTest.cs", label="_person2 = p2", span="1716-1716"];
m1_779 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonSerializerTest.cs", label="_person3 = p3", span="1717-1717"];
m1_780 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", span="1711-1711"];
m1_2888 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", span="6716-6716"];
m1_2889 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="6718-6718"];
m1_2890 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", span="6716-6716"];
m1_2622 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="5997-5997"];
m1_2623 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs", label="decimal d = JsonConvert.DeserializeObject<decimal>(''123456789876543.21'')", span="5999-5999"];
m1_2624 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123456789876543.21m, d)", span="6000-6000"];
m1_2625 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="5997-5997"];
m1_3381 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", span="273-273"];
m1_873 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", span="1909-1909"];
m1_874 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="var original = new FooBar1 { foo = new Bar1 { bar = ''value'' } }", span="1911-1911"];
m1_875 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(original)", span="1912-1912"];
m1_876 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="var expectedJson = @''{''''foo'''':{''''bar'''':''''value''''}}''", span="1913-1913"];
m1_877 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expectedJson, json)", span="1914-1914"];
m1_878 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", span="1909-1909"];
m1_4024 [cluster="Newtonsoft.Json.Tests.TestObjects.ParticipantEntity.ParticipantEntity()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ParticipantEntity.ParticipantEntity()", span="35-35"];
m1_2824 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", span="6514-6514"];
m1_2959 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="6921-6921"];
m1_2960 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass\r\n            {\r\n                Guid = new Guid(''1924129C-F7E0-40F3-9607-9939C531395A''),\r\n                NullableGuid = new Guid(''9E9F3ADF-E017-4F72-91E0-617EBE85967D''),\r\n                TimeSpan = TimeSpan.FromDays(1),\r\n                NullableTimeSpan = TimeSpan.FromHours(1),\r\n                Uri = new Uri(''http://testuri.com'')\r\n            }", span="6923-6930"];
m1_2961 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6931-6931"];
m1_2964 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Guid, c2.Guid)", span="6942-6942"];
m1_2965 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="6943-6943"];
m1_2966 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="6944-6944"];
m1_2967 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="6945-6945"];
m1_2968 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Uri, c2.Uri)", span="6946-6946"];
m1_2962 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Guid'''': ''''1924129c-f7e0-40f3-9607-9939c531395a'''',\r\n  ''''NullableGuid'''': ''''9e9f3adf-e017-4f72-91e0-617ebe85967d'''',\r\n  ''''TimeSpan'''': ''''1.00:00:00'''',\r\n  ''''NullableTimeSpan'''': ''''01:00:00'''',\r\n  ''''Uri'''': ''''http://testuri.com''''\r\n}'', json)", span="6933-6939"];
m1_2963 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="6941-6941"];
m1_2969 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="6921-6921"];
m1_1352 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="2929-2929"];
m1_1353 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeOnClassTestClass())", span="2931-2931"];
m1_1354 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''TheField'''':0,''''Property'''':21}'', json)", span="2933-2933"];
m1_1355 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="JsonIgnoreAttributeOnClassTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeOnClassTestClass>(@''{''''TheField'''':99,''''Property'''':-1,''''IgnoredField'''':-1}'')", span="2935-2935"];
m1_1356 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, c.IgnoredField)", span="2937-2937"];
m1_1357 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(99, c.Field)", span="2938-2938"];
m1_1358 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="2929-2929"];
m1_2414 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="5554-5554"];
m1_2415 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="PosDouble p = (PosDouble)value", span="5556-5556"];
m1_2417 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="writer.WriteRawValue(String.Format(CultureInfo.InvariantCulture, ''new PosD({0},{1})'', p.X, p.Y))", span="5560-5560"];
m1_2418 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="writer.WriteNull()", span="5564-5564"];
m1_2416 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="p != null", span="5558-5558"];
m1_2419 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="5554-5554"];
m1_1010 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m1_765 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", span="1688-1688"];
m1_766 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs", label="Ratio ratio = new Ratio(2, 1)", span="1690-1690"];
m1_767 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(ratio)", span="1691-1691"];
m1_770 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ratio.Denominator, ratio2.Denominator)", span="1697-1697"];
m1_768 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''n'''':2,''''d'''':1}'', json)", span="1693-1693"];
m1_769 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs", label="Ratio ratio2 = JsonConvert.DeserializeObject<Ratio>(json)", span="1695-1695"];
m1_771 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ratio.Numerator, ratio2.Numerator)", span="1698-1698"];
m1_772 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", span="1688-1688"];
m1_3730 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", span="8630-8630"];
m1_3731 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs", label="NullableFloats floats = new NullableFloats\r\n            {\r\n                Object = double.NaN,\r\n                ObjectNull = null,\r\n                Float = float.NaN,\r\n                NullableDouble = double.NaN,\r\n                NullableFloat = null\r\n            }", span="8632-8639"];
m1_3732 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(floats, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                FloatFormatHandling = FloatFormatHandling.DefaultValue\r\n            })", span="8641-8644"];
m1_3733 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Object'''': 0.0,\r\n  ''''Float'''': 0.0,\r\n  ''''Double'''': 0.0,\r\n  ''''NullableFloat'''': null,\r\n  ''''NullableDouble'''': null,\r\n  ''''ObjectNull'''': null\r\n}'', json)", span="8646-8653"];
m1_3734 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", span="8630-8630"];
m1_4144 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", span="9633-9633"];
m1_4145 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs", label="DateTime dt = new DateTime(2000, 12, 22)", span="9635-9635"];
m1_4146 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="9636-9636"];
m1_4148 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new Dictionary<DateTime, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="9643-9646"];
m1_4151 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="9654-9654"];
m1_4147 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Formatting = Formatting.Indented\r\n            }", span="9637-9641"];
m1_4150 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs", label="Dictionary<DateTime, string> d = JsonConvert.DeserializeObject<Dictionary<DateTime, string>>(json, settings)", span="9652-9652"];
m1_4149 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22'''': ''''123''''\r\n}'', json)", span="9648-9650"];
m1_4152 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", span="9633-9633"];
m1_4067 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", span="9476-9476"];
m1_4068 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="9478-9478"];
m1_4069 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", span="9476-9476"];
m1_4400 [cluster="System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", span="0-0"];
m1_487 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m1_925 [cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="JsonSerializerTest.cs", label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0"];
m1_2817 [cluster="DataContractSerializer.cstr", file="JsonSerializerTest.cs", label="Entry DataContractSerializer.cstr", span=""];
m1_1369 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="2956-2956"];
m1_1370 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="2958-2958"];
m1_1371 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1)", span="2960-2960"];
m1_1372 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="2961-2961"];
m1_1373 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json)", span="2963-2963"];
m1_1374 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="2965-2965"];
m1_1375 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="2956-2956"];
m1_1114 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", span="27-27"];
m1_2714 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", span="6212-6212"];
m1_2106 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="4641-4641"];
m1_2107 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="string json = ''{key1:'value1',key2:'value2',key3:'value3'}''", span="4643-4643"];
m1_2108 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="var dic = JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json)", span="4645-4645"];
m1_2109 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, dic.Count)", span="4647-4647"];
m1_2110 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value1'', dic[''key1''])", span="4648-4648"];
m1_2111 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value2'', dic[''key2''])", span="4649-4649"];
m1_2112 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value3'', dic[''key3''])", span="4650-4650"];
m1_2113 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="4641-4641"];
m1_2590 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="5925-5925"];
m1_2591 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonSerializerTest.cs", label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''\\/Date(946663200000+0600)\\/\''}'')", span="5927-5927"];
m1_2592 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="5928-5928"];
m1_2593 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="5925-5925"];
m1_3663 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", span="8438-8438"];
m1_3664 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonSerializerTest.cs", label="m_Item1 = item1", span="8440-8440"];
m1_3665 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", span="8438-8438"];
m1_3646 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", span="8387-8387"];
m1_3647 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="return true;", span="8389-8389"];
m1_3648 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", span="8387-8387"];
m1_1214 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="2676-2676"];
m1_1215 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="var anonymous =\r\n                new\r\n                {\r\n                    StringValue = ''I am a string'',\r\n                    IntValue = int.MaxValue,\r\n                    NestedAnonymous = new { NestedValue = byte.MaxValue },\r\n                    NestedArray = new[] { 1, 2 },\r\n                    Product = new Product() { Name = ''TestProduct'' }\r\n                }", span="2678-2686"];
m1_1216 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(anonymous)", span="2688-2688"];
m1_1218 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous)", span="2691-2691"];
m1_1217 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''StringValue'''':''''I am a string'''',''''IntValue'''':2147483647,''''NestedAnonymous'''':{''''NestedValue'''':255},''''NestedArray'''':[1,2],''''Product'''':{''''Name'''':''''TestProduct'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null}}'', json)", span="2689-2689"];
m1_1219 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''I am a string'', anonymous.StringValue)", span="2692-2692"];
m1_1220 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, anonymous.IntValue)", span="2693-2693"];
m1_1221 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(255, anonymous.NestedAnonymous.NestedValue)", span="2694-2694"];
m1_1222 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, anonymous.NestedArray.Length)", span="2695-2695"];
m1_1223 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, anonymous.NestedArray[0])", span="2696-2696"];
m1_1224 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, anonymous.NestedArray[1])", span="2697-2697"];
m1_1225 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''TestProduct'', anonymous.Product.Name)", span="2698-2698"];
m1_1226 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="2676-2676"];
m1_3882 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", span="9029-9029"];
m1_3883 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="PersonReference john = new PersonReference\r\n            {\r\n                Id = new Guid(''0B64FFDF-D155-44AD-9689-58D9ADB137F3''),\r\n                Name = ''John Smith''\r\n            }", span="9031-9035"];
m1_3884 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="PersonReference jane = new PersonReference\r\n            {\r\n                Id = new Guid(''AE3C399C-058D-431D-91B0-A36C266441B9''),\r\n                Name = ''Jane Smith''\r\n            }", span="9037-9041"];
m1_3885 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="john.Spouse = jane", span="9043-9043"];
m1_3886 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="jane.Spouse = john", span="9044-9044"];
m1_3887 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="IList<PersonReference> people = new List<PersonReference>\r\n            {\r\n                john,\r\n                jane\r\n            }", span="9046-9050"];
m1_3888 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(people, new JsonSerializerSettings\r\n            {\r\n#pragma warning disable 618\r\n                ReferenceResolver = new IdReferenceResolver(),\r\n#pragma warning restore 618\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="9052-9059"];
m1_3889 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]'', json)", span="9061-9076"];
m1_3890 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", span="9029-9029"];
m1_3744 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="8682-8682"];
m1_3745 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs", label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="8684-8688"];
m1_3746 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = @''yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffK''\r\n            })", span="8690-8693"];
m1_3747 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  ''''2000-12-12T12:12:12.000Z'''',\r\n  ''''2000-12-12T12:12:12.000+01:00''''\r\n]'', json)", span="8695-8698"];
m1_3748 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="8682-8682"];
m1_2488 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", span="5688-5688"];
m1_2489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", file="JsonSerializerTest.cs", label="return Value;", span="5690-5690"];
m1_2490 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", span="5688-5688"];
m1_1864 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="4059-4059"];
m1_1865 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="4061-4061"];
m1_1866 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Person>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.TestObjects.Organization.Person' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="4063-4065"];
m1_1867 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="4059-4059"];
m1_1871 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="4069-4069"];
m1_1872 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="4071-4071"];
m1_1873 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Dictionary<string, string>>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Collections.Generic.Dictionary`2[System.String,System.String]' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="4073-4075"];
m1_1874 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="4069-4069"];
m1_54 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="838-838"];
m1_74 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="537-537"];
m1_3025 [cluster="Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", span="43-43"];
m1_2301 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="5410-5410"];
m1_2348 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_field1 = g", span="5413-5413"];
m1_2349 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_field2 = g", span="5414-5414"];
m1_2350 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property1 = g", span="5415-5415"];
m1_2351 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property2 = g", span="5416-5416"];
m1_2352 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property3 = g", span="5417-5417"];
m1_2353 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property4 = g", span="5418-5418"];
m1_2354 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property5 = g", span="5419-5419"];
m1_2355 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property6 = g", span="5420-5420"];
m1_2356 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property7 = g", span="5421-5421"];
m1_2357 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property8 = g", span="5422-5422"];
m1_2358 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="5410-5410"];
m1_2564 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", span="5841-5841"];
m1_163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", span="471-471"];
m1_164 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="FooRequired foo1 = new FooRequired(new[] { ''A'', ''B'', ''C'' })", span="473-473"];
m1_165 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(foo1)", span="474-474"];
m1_168 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(foo1.Bars.Count, foo2.Bars.Count)", span="479-479"];
m1_169 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(foo1.Bars[0], foo2.Bars[0])", span="480-480"];
m1_170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(foo1.Bars[1], foo2.Bars[1])", span="481-481"];
m1_171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(foo1.Bars[2], foo2.Bars[2])", span="482-482"];
m1_166 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{''''Bars'''':[''''A'''',''''B'''',''''C'''']}'', json)", span="476-476"];
m1_167 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="FooRequired foo2 = JsonConvert.DeserializeObject<FooRequired>(json)", span="478-478"];
m1_172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", span="471-471"];
m1_2630 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="6011-6011"];
m1_2631 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="string json = ''{Amount:123456789876543.21}''", span="6013-6013"];
m1_2632 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="6014-6014"];
m1_2633 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="reader.FloatParseHandling = FloatParseHandling.Decimal", span="6015-6015"];
m1_2635 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="Invoice i = serializer.Deserialize<Invoice>(reader)", span="6019-6019"];
m1_2634 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="6017-6017"];
m1_2636 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123456789876543.21m, i.Amount)", span="6020-6020"];
m1_2637 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="6011-6011"];
m1_3290 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="7585-7585"];
m1_3291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="DateTimeTestClass c =\r\n                JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="7587-7593"];
m1_3292 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="7595-7595"];
m1_3293 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="7596-7596"];
m1_3294 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Pre'', c.PreField)", span="7597-7597"];
m1_3295 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Post'', c.PostField)", span="7598-7598"];
m1_3296 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="DateTimeTestClass c2 =\r\n                JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-01-01T01:01:01Z'''',''''DateTimeOffsetField'''':''''2008-01-01T01:01:01Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="7600-7606"];
m1_3297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2008, 1, 1, 1, 1, 1, 0, DateTimeKind.Utc).ToLocalTime(), c2.DateTimeField)", span="7608-7608"];
m1_3298 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(2008, 1, 1, 1, 1, 1, 0, TimeSpan.Zero), c2.DateTimeOffsetField)", span="7609-7609"];
m1_3299 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Pre'', c2.PreField)", span="7610-7610"];
m1_3300 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Post'', c2.PostField)", span="7611-7611"];
m1_3301 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="7585-7585"];
m1_2221 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m1_931 [cluster="System.Diagnostics.Stopwatch.Stop()", file="JsonSerializerTest.cs", label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0"];
m1_2411 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", span="5546-5546"];
m1_2412 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="return objectType == typeof(Pos);", span="5548-5548"];
m1_2413 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", span="5546-5546"];
m1_1731 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="3751-3751"];
m1_1732 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="_name = name", span="3753-3753"];
m1_1733 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="Age = age", span="3754-3754"];
m1_1734 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="Rank = rank", span="3755-3755"];
m1_1735 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="Title = title", span="3756-3756"];
m1_1736 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="3751-3751"];
m1_1240 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="2726-2726"];
m1_1241 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new object())", span="2728-2728"];
m1_1242 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''{}'', json)", span="2729-2729"];
m1_1243 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="2726-2726"];
m1_3336 [cluster="Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.MetroStringConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.MetroStringConverter()", span="30-30"];
m1_4401 [cluster="System.Runtime.Serialization.SerializationInfo.GetByte(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetByte(string)", span="0-0"];
m1_2897 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributeDerived.ClassAttributeDerived()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributeDerived.ClassAttributeDerived()", span="6663-6663"];
m1_369 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m1_3346 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="7726-7726"];
m1_3347 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="return Enum.Parse(typeof(Color), reader.Value.ToString());", span="7728-7728"];
m1_3348 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="7726-7726"];
m1_1966 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="4239-4239"];
m1_1967 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 17.'')", span="4241-4252"];
m1_1968 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="4239-4239"];
m1_3228 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="7483-7483"];
m1_3229 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs", label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="7485-7485"];
m1_3230 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs", label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="7486-7486"];
m1_3232 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs", label="var dict2 = serializer.Deserialize<Dictionary<string, object>>(reader)", span="7489-7489"];
m1_3231 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs", label="var reader = new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}''))", span="7488-7488"];
m1_3233 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dict[''k1''], dict2[''k1''])", span="7491-7491"];
m1_3234 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="7483-7483"];
m1_2778 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="6373-6373"];
m1_2779 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="string json = @''{''''indexed'''':true, ''''startYear'''':1939, ''''values'''':\r\n                            [  3000,  /* 1940-1949 */\r\n                               3000,   3600,   3600,   3600,   3600,   4200,   4200,   4200,   4200,   4800,  /* 1950-1959 */\r\n                               4800,   4800,   4800,   4800,   4800,   4800,   6600,   6600,   7800,   7800,  /* 1960-1969 */\r\n                               7800,   7800,   9000,  10800,  13200,  14100,  15300,  16500,  17700,  22900,  /* 1970-1979 */\r\n                              25900,  29700,  32400,  35700,  37800,  39600,  42000,  43800,  45000,  48000,  /* 1980-1989 */\r\n                              51300,  53400,  55500,  57600,  60600,  61200,  62700,  65400,  68400,  72600,  /* 1990-1999 */\r\n                              76200,  80400,  84900,  87000,  87900,  90000,  94200,  97500, 102000, 106800,  /* 2000-2009 */\r\n                             106800, 106800]  /* 2010-2011 */\r\n                                }''", span="6375-6384"];
m1_2780 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="CommentTestClass commentTestClass = JsonConvert.DeserializeObject<CommentTestClass>(json)", span="6386-6386"];
m1_2781 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, commentTestClass.Indexed)", span="6388-6388"];
m1_2782 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1939, commentTestClass.StartYear)", span="6389-6389"];
m1_2783 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(63, commentTestClass.Values.Count)", span="6390-6390"];
m1_2784 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="6373-6373"];
m1_2079 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="4546-4546"];
m1_2080 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonSerializerTest.cs", label="_dict1.Add(item.Key, item)", span="4548-4548"];
m1_2081 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="4546-4546"];
m1_3472 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", span="7992-7992"];
m1_3473 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs", label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", span="7994-7998"];
m1_3474 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n            })", span="8000-8003"];
m1_3475 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs", label="JObject o = JObject.Parse(json)", span="8005-8005"];
m1_3478 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs", label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json, new JsonSerializerSettings\r\n            {\r\n                DateTimeZoneHandling = DateTimeZoneHandling.Utc\r\n            })", span="8009-8012"];
m1_3476 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs", label="Assert.IsFalse(o.Properties().ElementAt(0).Name.Contains(''Z''))", span="8006-8006"];
m1_3477 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs", label="Assert.IsFalse(o.Properties().ElementAt(1).Name.Contains(''Z''))", span="8007-8007"];
m1_3479 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2.Count)", span="8014-8014"];
m1_3480 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="8015-8015"];
m1_3481 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="8016-8016"];
m1_3482 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", span="7992-7992"];
m1_4290 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="10015-10015"];
m1_4291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="10017-10017"];
m1_4292 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="10015-10015"];
m1_14 [cluster="Unk.AreEqual", file="JsonSerializerTest.cs", label="Entry Unk.AreEqual", span=""];
m1_1377 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="2969-2969"];
m1_1378 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="2971-2971"];
m1_1379 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="2973-2973"];
m1_1380 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="2974-2974"];
m1_1381 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="2976-2976"];
m1_1382 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="2978-2978"];
m1_1383 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="2969-2969"];
m1_868 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", span="1901-1901"];
m1_869 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonSerializerTest.cs", label="var json = @''{''''foo'''':''''value''''}''", span="1903-1903"];
m1_870 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonSerializerTest.cs", label="var deserialized = JsonConvert.DeserializeObject<Foo1>(json)", span="1904-1904"];
m1_871 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value'', deserialized.foo)", span="1905-1905"];
m1_872 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", span="1901-1901"];
m1_2983 [cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1886-1886"];
m1_610 [cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", span="29-29"];
m1_1748 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="3800-3800"];
m1_1749 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11\r\n  }\r\n}''", span="3802-3807"];
m1_1750 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(\r\n                json,\r\n                new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Replace })", span="3809-3811"];
m1_1751 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', c.Name)", span="3813-3813"];
m1_1752 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Dictionary.Count)", span="3814-3814"];
m1_1753 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="3815-3815"];
m1_1754 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="3800-3800"];
m1_2576 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="5897-5897"];
m1_2577 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonSerializerTest.cs", label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''2000-01-01T00:00:00+06:00\''}'')", span="5899-5899"];
m1_2578 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="5900-5900"];
m1_2579 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="5897-5897"];
m1_2748 [cluster="Newtonsoft.Json.Tests.Serialization.EnumerableClass.EnumerableClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.EnumerableClass.EnumerableClass()", span="10235-10235"];
m1_2925 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="6846-6846"];
m1_2926 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs", label="DerivedType d = new DerivedType()", span="6848-6848"];
m1_2927 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(d, Formatting.Indented)", span="6849-6849"];
m1_2928 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''dinosaur'''': null,\r\n  ''''dog'''': null,\r\n  ''''cat'''': null,\r\n  ''''zebra'''': null,\r\n  ''''bird'''': null,\r\n  ''''parrot'''': null,\r\n  ''''albatross'''': null,\r\n  ''''antelope'''': null\r\n}'', json)", span="6851-6860"];
m1_2929 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="6846-6846"];
m1_2099 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", span="4533-4533"];
m1_2230 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="5008-5008"];
m1_2231 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="ModelStateDictionary<string> modelStateDictionary = new ModelStateDictionary<string>()", span="5010-5010"];
m1_2232 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="modelStateDictionary.Add(''key'', ''value'')", span="5011-5011"];
m1_2233 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(modelStateDictionary)", span="5013-5013"];
m1_2234 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''key'''':''''value''''}'', json)", span="5015-5015"];
m1_2235 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="ModelStateDictionary<string> newModelStateDictionary = JsonConvert.DeserializeObject<ModelStateDictionary<string>>(json)", span="5017-5017"];
m1_2236 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, newModelStateDictionary.Count)", span="5018-5018"];
m1_2237 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value'', newModelStateDictionary[''key''])", span="5019-5019"];
m1_2238 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="5008-5008"];
m1_2552 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", span="5801-5801"];
m1_2643 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="6032-6032"];
m1_2644 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="string json = ''{'Value':123456789876543.21}''", span="6034-6034"];
m1_2645 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="6035-6035"];
m1_2646 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="reader.FloatParseHandling = FloatParseHandling.Decimal", span="6036-6036"];
m1_2648 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="IDictionary<string, decimal> d = serializer.Deserialize<IDictionary<string, decimal>>(reader)", span="6040-6040"];
m1_2647 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="6038-6038"];
m1_2649 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123456789876543.21m, d[''Value''])", span="6041-6041"];
m1_2650 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="6032-6032"];
m1_4335 [cluster="Newtonsoft.Json.Tests.Serialization.ChildClassWithProtectedOverridePlusJsonProperty.GetPropertyValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ChildClassWithProtectedOverridePlusJsonProperty.GetPropertyValue()", span="10114-10114"];
m1_4336 [cluster="Newtonsoft.Json.Tests.Serialization.ChildClassWithProtectedOverridePlusJsonProperty.GetPropertyValue()", file="JsonSerializerTest.cs", label="return MyProperty;", span="10116-10116"];
m1_4337 [cluster="Newtonsoft.Json.Tests.Serialization.ChildClassWithProtectedOverridePlusJsonProperty.GetPropertyValue()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ChildClassWithProtectedOverridePlusJsonProperty.GetPropertyValue()", span="10114-10114"];
m1_3440 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="7900-7900"];
m1_3441 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="PropertyItemConverter c = new PropertyItemConverter\r\n            {\r\n                Data = new[]\r\n                {\r\n                    ''one'',\r\n                    ''two'',\r\n                    ''three''\r\n                }\r\n            }", span="7902-7910"];
m1_3442 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c)", span="7912-7912"];
m1_3443 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Data'''':['''':::ONE:::'''','''':::TWO:::'''','''':::THREE:::'''']}'', json)", span="7914-7914"];
m1_3444 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="7900-7900"];
m1_2346 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", span="5406-5406"];
m1_2347 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", span="5406-5406"];
m1_1688 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="3639-3639"];
m1_1689 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="string json = ''{}''", span="3641-3641"];
m1_1690 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="JsonPropertyWithHandlingValues o = JsonConvert.DeserializeObject<JsonPropertyWithHandlingValues>(json)", span="3643-3643"];
m1_1691 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingIgnoreAndPopulateProperty)", span="3644-3644"];
m1_1692 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingPopulateProperty)", span="3645-3645"];
m1_1693 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o.DefaultValueHandlingIgnoreProperty)", span="3646-3646"];
m1_1694 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o.DefaultValueHandlingIncludeProperty)", span="3647-3647"];
m1_1695 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="3639-3639"];
m1_1351 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", span="2909-2909"];
m1_3506 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="8065-8065"];
m1_3508 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs", label="var stringWriter = new StringWriter()", span="8068-8068"];
m1_3511 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs", label="serializer.Serialize(stringWriter, obj)", span="8074-8074"];
m1_3509 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs", label="var serializer = new JsonSerializer()", span="8069-8069"];
m1_3512 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs", label="return stringWriter.ToString();", span="8076-8076"];
m1_3510 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs", label="serializer.ContractResolver = new DefaultContractResolver\r\n            {\r\n                IgnoreSerializableAttribute = false\r\n            }", span="8070-8073"];
m1_3513 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="8065-8065"];
m1_4231 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.CanConvert(System.Type)", span="9875-9875"];
m1_4232 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="9877-9877"];
m1_4233 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.CanConvert(System.Type)", span="9875-9875"];
m1_1935 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="4171-4171"];
m1_1936 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs", label="string json = @''{}''", span="4173-4173"];
m1_1937 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.PopulateObject(json, new List<Person>()); }, @''Cannot populate JSON object onto type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Organization.Person]'. Path '', line 1, position 2.'')", span="4175-4175"];
m1_1938 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="4171-4171"];
m1_970 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualProperties.SubWithoutContractVirtualProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualProperties.SubWithoutContractVirtualProperties()", span="2078-2078"];
m1_12 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ListSourceTest.ListSourceTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ListSourceTest.ListSourceTest()", span="98-98"];
m1_4153 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", span="9658-9658"];
m1_4154 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs", label="DateTime dt = new DateTime(2000, 12, 22)", span="9660-9660"];
m1_4155 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="9661-9661"];
m1_4157 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new Dictionary<DateTime, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="9669-9672"];
m1_4160 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="9680-9680"];
m1_4156 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead,\r\n                Formatting = Formatting.Indented\r\n            }", span="9662-9667"];
m1_4159 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs", label="Dictionary<DateTime, string> d = JsonConvert.DeserializeObject<Dictionary<DateTime, string>>(json, settings)", span="9678-9678"];
m1_4158 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22'''': ''''123''''\r\n}'', json)", span="9674-9676"];
m1_4161 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", span="9658-9658"];
m1_496 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", span="1271-1271"];
m1_497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", file="JsonSerializerTest.cs", label="string json = ''['1.2.3.4444444444444444444444']''", span="1273-1273"];
m1_498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<List<Version>>(json); }, @''Error converting value ''''1.2.3.4444444444444444444444'''' to type 'System.Version'. Path '[0]', line 1, position 31.'')", span="1275-1275"];
m1_499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", span="1271-1271"];
m1_1460 [cluster="Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", span="30-30"];
m1_1249 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="2740-2740"];
m1_1250 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="string json = ''{foo:'hello',bar:[1,2,3]}''", span="2742-2742"];
m1_1251 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="2743-2743"];
m1_1252 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''hello'', wibble.Foo)", span="2744-2744"];
m1_1253 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, wibble.Bar.Count)", span="2746-2746"];
m1_1254 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="2747-2747"];
m1_1255 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, wibble.Bar[1])", span="2748-2748"];
m1_1256 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, wibble.Bar[2])", span="2749-2749"];
m1_1257 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, wibble.Bar[3])", span="2750-2750"];
m1_1258 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="2740-2740"];
m1_2334 [cluster="System.Type.GetProperty(string, System.Reflection.BindingFlags)", file="JsonSerializerTest.cs", label="Entry System.Type.GetProperty(string, System.Reflection.BindingFlags)", span="0-0"];
m1_365 [cluster="System.Guid.NewGuid()", file="JsonSerializerTest.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m1_1245 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="2733-2733"];
m1_1246 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(null)", span="2735-2735"];
m1_1247 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''null'', json)", span="2736-2736"];
m1_1248 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="2733-2733"];
m1_2386 [cluster="XmlDocument.cstr", file="JsonSerializerTest.cs", label="Entry XmlDocument.cstr", span=""];
m1_930 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", span="826-826"];
m1_109 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_DateTime()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_DateTime()", span="371-371"];
m1_110 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_DateTime()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => JsonConvert.DeserializeObject<IList<bool>>(@''['2000-12-20T10:55:55Z']''),\r\n                ''Could not convert string to boolean: 2000-12-20T10:55:55Z. Path '[0]', line 1, position 23.'')", span="373-375"];
m1_111 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_DateTime()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_DateTime()", span="371-371"];
m1_1045 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", span="2314-2314"];
m1_1046 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="2316-2316"];
m1_1047 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Product p = JsonConvert.DeserializeObject(value, typeof(Product)) as Product", span="2318-2318"];
m1_1048 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Orange'', p.Name)", span="2320-2320"];
m1_1049 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2010, 1, 24, 12, 0, 0), p.ExpiryDate)", span="2321-2321"];
m1_1050 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3.99m, p.Price)", span="2322-2322"];
m1_1051 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", span="2314-2314"];
m1_4411 [cluster="System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", span="0-0"];
m1_2114 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", span="4654-4654"];
m1_2115 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonSerializerTest.cs", label="string json = ''{'$id':'1',key1:'value1',key2:'value2',key3:'value3'}''", span="4656-4656"];
m1_2116 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n            }), ''Cannot preserve reference to readonly dictionary, or dictionary created from a non-default constructor: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+DictionaryWithNoDefaultConstructor. Path 'key1', line 1, position 16.'')", span="4658-4662"];
m1_2117 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", span="4654-4654"];
m1_4098 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", span="9536-9536"];
m1_4099 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs", label="string originalUri = ''https://test.com?m=a%2bb''", span="9538-9538"];
m1_4100 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs", label="Uri uriWithPlus = new Uri(originalUri)", span="9540-9540"];
m1_4103 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(originalUri, uriWithPlus2.OriginalString)", span="9546-9546"];
m1_4101 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs", label="string jsonWithPlus = JsonConvert.SerializeObject(uriWithPlus)", span="9542-9542"];
m1_4102 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs", label="Uri uriWithPlus2 = JsonConvert.DeserializeObject<Uri>(jsonWithPlus)", span="9544-9544"];
m1_4104 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", span="9536-9536"];
m1_2239 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="5102-5102"];
m1_2240 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Person person = new Person()", span="5104-5104"];
m1_2241 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="5105-5105"];
m1_2242 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="person.LastModified = person.BirthDate", span="5106-5106"];
m1_2243 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="person.Department = ''Department!''", span="5107-5107"];
m1_2244 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="person.Name = ''Name!''", span="5108-5108"];
m1_2248 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="5118-5118"];
m1_2245 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="5110-5110"];
m1_2246 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="string dateTimeOffsetText", span="5111-5111"];
m1_2254 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="5149-5149"];
m1_2247 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="dateTimeOffsetText = @''2000-12-20T22:59:59+02:00''", span="5113-5113"];
m1_2250 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''2000-01-01T01:01:01Z'''',\r\n    ''''LastModified'''': ''''2000-01-01T01:01:01Z''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''0001-01-01T00:00:00Z'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="5121-5144"];
m1_2249 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="5120-5120"];
m1_2251 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="5146-5146"];
m1_2252 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''String!'', o2._stringValue)", span="5147-5147"];
m1_2253 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MinValue, o2._intValue)", span="5148-5148"];
m1_2255 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="5150-5150"];
m1_2256 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o2._nullPersonValue)", span="5151-5151"];
m1_2257 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o2._nullableInt)", span="5152-5152"];
m1_2258 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="5102-5102"];
m1_1920 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="4145-4145"];
m1_1921 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs", label="string json = @''{}''", span="4147-4147"];
m1_1922 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<List<Person>>(json)", span="4151-4151"];
m1_1923 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs", label="Assert.Fail()", span="4152-4152"];
m1_1924 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs", label=JsonSerializationException, span="4154-4154"];
m1_1925 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs", label="Assert.IsTrue(ex.Message.StartsWith(@''Cannot deserialize the current JSON object (e.g. {''''name'''':''''value''''}) into type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Organization.Person]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.'' + Environment.NewLine +\r\n                                                    @''To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.'' + Environment.NewLine +\r\n                                                    @''Path ''''))", span="4156-4158"];
m1_1926 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="4145-4145"];
m1_2728 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="6253-6253"];
m1_2729 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs", label="PublicConstructorOverridenByJsonConstructor c = JsonConvert.DeserializeObject<PublicConstructorOverridenByJsonConstructor>(''{Value:'value!'}'')", span="6255-6255"];
m1_2730 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Public Parameterized'', c.Constructor)", span="6256-6256"];
m1_2731 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value!'', c.Value)", span="6257-6257"];
m1_2732 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="6253-6253"];
m1_3156 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="7342-7342"];
m1_3157 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonException>(() =>\r\n            {\r\n                string json = @''{\r\n  ''''PreProperty'''': '';\r\n\r\n                JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n            })", span="7344-7350"];
m1_3158 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="7342-7342"];
m1_3285 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="7574-7574"];
m1_3286 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs", label="string jsonIsoText =\r\n                @''{''''Value'''':''''2012-02-25T19:55:50.6095676+13:00''''}''", span="7576-7577"];
m1_3287 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs", label="DateTimeWrapper c = JsonConvert.DeserializeObject<DateTimeWrapper>(jsonIsoText, new IsoDateTimeConverter())", span="7579-7579"];
m1_3288 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateTimeKind.Local, c.Value.Kind)", span="7580-7580"];
m1_3289 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="7574-7574"];
m1_3483 [cluster="string.Contains(string)", file="JsonSerializerTest.cs", label="Entry string.Contains(string)", span="0-0"];
m1_3782 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollection<T>.NoConstructorReadOnlyCollection()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollection<T>.NoConstructorReadOnlyCollection()", span="8780-8780"];
m1_3783 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollection<T>.NoConstructorReadOnlyCollection()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollection<T>.NoConstructorReadOnlyCollection()", span="8780-8780"];
m1_903 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", span="1947-1947"];
m1_904 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="var dictStore = new Dictionary<DictionaryKeyCast, int>()", span="1950-1950"];
m1_905 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="var i = 0", span="1951-1951"];
m1_907 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="dictStore.Add(new DictionaryKeyCast(i.ToString(CultureInfo.InvariantCulture), i), i)", span="1953-1953"];
m1_913 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="jsonSerializer.Serialize(streamWriter, dictStore)", span="1960-1960"];
m1_906 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="i < 800", span="1951-1951"];
m1_908 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="i++", span="1951-1951"];
m1_909 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="var settings = new JsonSerializerSettings { Formatting = Formatting.Indented }", span="1955-1955"];
m1_910 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="var jsonSerializer = JsonSerializer.Create(settings)", span="1956-1956"];
m1_911 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="var ms = new MemoryStream()", span="1957-1957"];
m1_917 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="var deserialize = jsonSerializer.Deserialize(new StreamReader(ms), typeof(Dictionary<DictionaryKeyCast, int>))", span="1966-1966"];
m1_912 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="var streamWriter = new StreamWriter(ms)", span="1959-1959"];
m1_915 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="1963-1963"];
m1_914 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="streamWriter.Flush()", span="1961-1961"];
m1_916 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="var stopWatch = Stopwatch.StartNew()", span="1965-1965"];
m1_918 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="stopWatch.Stop()", span="1967-1967"];
m1_919 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", span="1947-1947"];
m1_2359 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="5443-5443"];
m1_2360 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="XNodeTestObject testObject = new XNodeTestObject()", span="5445-5445"];
m1_2361 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="testObject.Document = XDocument.Parse(''<root>hehe, root</root>'')", span="5446-5446"];
m1_2362 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="testObject.Element = XElement.Parse(@''<fifth xmlns:json=''''http://json.org'''' json:Awesome=''''true''''>element</fifth>'')", span="5447-5447"];
m1_2363 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="5449-5449"];
m1_2367 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testObject.Document.ToString(), newTestObject.Document.ToString())", span="5465-5465"];
m1_2368 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testObject.Element.ToString(), newTestObject.Element.ToString())", span="5466-5466"];
m1_2364 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  },\r\n  ''''Element'''': {\r\n    ''''fifth'''': {\r\n      ''''@xmlns:json'''': ''''http://json.org'''',\r\n      ''''@json:Awesome'''': ''''true'''',\r\n      ''''#text'''': ''''element''''\r\n    }\r\n  }\r\n}''", span="5450-5461"];
m1_2365 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(expected, json)", span="5462-5462"];
m1_2366 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="XNodeTestObject newTestObject = JsonConvert.DeserializeObject<XNodeTestObject>(json)", span="5464-5464"];
m1_2369 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="Assert.IsNull(newTestObject.Element.Parent)", span="5468-5468"];
m1_2370 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="5443-5443"];
m1_971 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", span="2165-2165"];
m1_972 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="BaseWithContract baseWith = new SubWithContractNewProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="2167-2173"];
m1_973 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.JustAProperty = ''JustAProperty2!''", span="2175-2175"];
m1_974 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.Virtual = ''Virtual2!''", span="2176-2176"];
m1_975 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="2177-2177"];
m1_976 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.WithDataMember = ''WithDataMember2!''", span="2178-2178"];
m1_977 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="string json = AssertSerializeDeserializeEqual(baseWith)", span="2180-2180"];
m1_978 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''JustAProperty2'''': ''''JustAProperty!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''Virtual2'''': ''''Virtual!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''WithDataMemberSub'''': ''''WithDataMember!''''\r\n}'', json)", span="2182-2191"];
m1_979 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", span="2165-2165"];
m1_1442 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="3088-3088"];
m1_1443 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="ClassAndMemberConverterClass c1 = new ClassAndMemberConverterClass()", span="3090-3090"];
m1_1444 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="c1.DefaultConverter = new ConverterPrecedenceClass(''DefaultConverterValue'')", span="3091-3091"];
m1_1445 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="c1.MemberConverter = new ConverterPrecedenceClass(''MemberConverterValue'')", span="3092-3092"];
m1_1446 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="3094-3094"];
m1_1447 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':[''''Class'''',''''DefaultConverterValue''''],''''MemberConverter'''':[''''Member'''',''''MemberConverterValue'''']}'', json)", span="3095-3095"];
m1_1448 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="ClassAndMemberConverterClass c2 = JsonConvert.DeserializeObject<ClassAndMemberConverterClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="3097-3097"];
m1_1449 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''DefaultConverterValue'', c2.DefaultConverter.TestValue)", span="3099-3099"];
m1_1450 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''MemberConverterValue'', c2.MemberConverter.TestValue)", span="3100-3100"];
m1_1451 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="3088-3088"];
m1_1053 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="2326-2326"];
m1_1054 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="DateTime dateValue = new DateTime(2010, 3, 30)", span="2328-2328"];
m1_1055 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Dictionary<string, object> testDictionary = new Dictionary<string, object>()", span="2329-2329"];
m1_1056 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="testDictionary[''date''] = dateValue", span="2330-2330"];
m1_1065 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dateValue, deserializedDate)", span="2346-2346"];
m1_1057 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(testDictionary)", span="2332-2332"];
m1_1060 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="serializer.WriteObject(ms, testDictionary)", span="2337-2337"];
m1_1058 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="2335-2335"];
m1_1063 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Dictionary<string, object> deserializedDictionary = (Dictionary<string, object>)JsonConvert.DeserializeObject(jsonText, typeof(Dictionary<string, object>))", span="2343-2343"];
m1_1059 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(typeof(Dictionary<string, object>))", span="2336-2336"];
m1_1061 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="byte[] data = ms.ToArray()", span="2339-2339"];
m1_1062 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="string output = Encoding.UTF8.GetString(data, 0, data.Length)", span="2340-2340"];
m1_1064 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="DateTime deserializedDate = (DateTime)deserializedDictionary[''date'']", span="2344-2344"];
m1_1066 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="2326-2326"];
m1_1359 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", span="28-28"];
m1_3807 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", span="8827-8827"];
m1_3808 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonSerializerTest.cs", label="this.First = first", span="8830-8830"];
m1_3809 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonSerializerTest.cs", label="this.Second = second", span="8831-8831"];
m1_3810 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", span="8827-8827"];
m1_4302 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="10041-10041"];
m1_4303 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="throw new NotImplementedException();", span="10043-10043"];
m1_4304 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="10041-10041"];
m1_2754 [cluster="Newtonsoft.Json.Tests.Serialization.ComplexItem.ComplexItem()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ComplexItem.ComplexItem()", span="10247-10247"];
m1_2673 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", span="6103-6103"];
m1_2674 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", file="JsonSerializerTest.cs", label="IDontWork = dontWork", span="6105-6105"];
m1_2675 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", span="6103-6103"];
m1_3090 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_BadAdditionalContent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_BadAdditionalContent()", span="7192-7192"];
m1_3091 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_BadAdditionalContent()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+HasByteArray, Newtonsoft.Json.Tests'''',\r\n  ''''EncryptedPassword'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''cGFzc3dvcmQ='''',\r\n    ''''$value'''': ''''cGFzc3dvcmQ=''''\r\n  }\r\n}''", span="7194-7201"];
m1_3092 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_BadAdditionalContent()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<HasByteArray>(json, new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Objects\r\n                });\r\n            }, ''Error reading bytes. Unexpected token: PropertyName. Path 'EncryptedPassword.$value', line 6, position 13.'')", span="7203-7209"];
m1_3093 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_BadAdditionalContent()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_BadAdditionalContent()", span="7192-7192"];
m1_3379 [cluster="Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", span="66-66"];
m1_4017 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", span="9390-9390"];
m1_4018 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs", label="ParticipantEntity product = new ParticipantEntity()", span="9392-9392"];
m1_4019 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs", label="product.Properties = new Dictionary<string, string> { { ''s'', ''d'' } }", span="9393-9393"];
m1_4020 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(product)", span="9394-9394"];
m1_4021 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''pa_info'''':{''''s'''':''''d''''}}'', json)", span="9396-9396"];
m1_4022 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs", label="ParticipantEntity deserializedProduct = JsonConvert.DeserializeObject<ParticipantEntity>(json)", span="9397-9397"];
m1_4023 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", span="9390-9390"];
m1_773 [cluster="Newtonsoft.Json.Tests.TestObjects.Ratio.Ratio(int, int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Ratio.Ratio(int, int)", span="37-37"];
m1_1007 [cluster="System.Text.Encoding.GetString(byte[], int, int)", file="JsonSerializerTest.cs", label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0"];
m1_1913 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="4137-4137"];
m1_1914 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonSerializerTest.cs", label="string json = @''[new Constructor(123)]''", span="4139-4139"];
m1_1915 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<List<Person>>(json); }, @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Organization.Person'. Path '[0]', line 1, position 17.'')", span="4141-4141"];
m1_1916 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="4137-4137"];
m1_608 [cluster="System.Globalization.CultureInfo.ToString()", file="JsonSerializerTest.cs", label="Entry System.Globalization.CultureInfo.ToString()", span="0-0"];
m1_3304 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", file="JsonSerializerTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m1_3335 [cluster="Newtonsoft.Json.Tests.TestObjects.MetroPropertyNameResolver.MetroPropertyNameResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MetroPropertyNameResolver.MetroPropertyNameResolver()", span="30-30"];
m1_3924 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", span="9196-9196"];
m1_3925 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="JsonSerializerTest.cs", label="return base.CanConvertTo(context, destinationType);", span="9198-9198"];
m1_3926 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", span="9196-9196"];
m1_4013 [cluster="Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ConsoleWriter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ConsoleWriter()", span="31-31"];
m1_2398 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="5527-5527"];
m1_2399 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Pos p = (Pos)value", span="5529-5529"];
m1_2401 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="writer.WriteRawValue(String.Format(''new Pos({0},{1})'', p.X, p.Y))", span="5533-5533"];
m1_2402 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="writer.WriteNull()", span="5537-5537"];
m1_2400 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="p != null", span="5531-5531"];
m1_2403 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="5527-5527"];
m1_1028 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="2264-2264"];
m1_1029 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Product product = new Product()", span="2266-2266"];
m1_1030 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="product.Name = ''Apple''", span="2268-2268"];
m1_1031 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="product.ExpiryDate = new DateTime(2008, 12, 28)", span="2269-2269"];
m1_1032 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="product.Price = 3.99M", span="2270-2270"];
m1_1033 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="product.Sizes = new string[] { ''Small'', ''Medium'', ''Large'' }", span="2271-2271"];
m1_1034 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="string output = JsonConvert.SerializeObject(product)", span="2273-2273"];
m1_1035 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(output, typeof(Product))", span="2285-2285"];
m1_1036 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="2287-2287"];
m1_1037 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2008, 12, 28), deserializedProduct.ExpiryDate)", span="2288-2288"];
m1_1038 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3.99m, deserializedProduct.Price)", span="2289-2289"];
m1_1039 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="2290-2290"];
m1_1040 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="2291-2291"];
m1_1041 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="2292-2292"];
m1_1042 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="2264-2264"];
m1_486 [cluster="System.Linq.Enumerable.Range(int, int)", file="JsonSerializerTest.cs", label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0"];
m1_3811 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", span="8842-8842"];
m1_3812 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs", label="Pair<string, int> p = new Pair<string, int>(''One'', 2)", span="8844-8844"];
m1_3813 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(p)", span="8846-8846"];
m1_3817 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(p, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = r\r\n            })", span="8854-8857"];
m1_3814 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''First'''':''''One'''',''''Second'''':2}'', json)", span="8848-8848"];
m1_3815 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs", label="DefaultContractResolver r = new DefaultContractResolver()", span="8851-8851"];
m1_3816 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs", label="r.IgnoreSerializableAttribute = false", span="8852-8852"];
m1_3818 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''First'''':''''One'''',''''Second'''':2}'', json)", span="8859-8859"];
m1_3819 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", span="8842-8842"];
m1_4360 [cluster="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string, int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string, int)", span="10227-10227"];
m1_4361 [cluster="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string, int)", file="JsonSerializerTest.cs", label="Value = value", span="10229-10229"];
m1_4362 [cluster="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string, int)", file="JsonSerializerTest.cs", label="Age = age", span="10230-10230"];
m1_4363 [cluster="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string, int)", file="JsonSerializerTest.cs", label="Constructor = ''Public Parameterized 2''", span="10231-10231"];
m1_4364 [cluster="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string, int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string, int)", span="10227-10227"];
m1_4301 [cluster="System.Net.Mail.Attachment.Attachment(System.IO.Stream, string)", file="JsonSerializerTest.cs", label="Entry System.Net.Mail.Attachment.Attachment(System.IO.Stream, string)", span="0-0"];
m1_2192 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="4953-4953"];
m1_2193 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="return ((IDictionary<string, T>)_innerDictionary).Contains(item);", span="4955-4955"];
m1_2194 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="4953-4953"];
m1_4406 [cluster="System.Runtime.Serialization.SerializationInfo.GetInt64(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetInt64(string)", span="0-0"];
m1_1228 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", span="2702-2702"];
m1_1229 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="DateTime d = new DateTime(2000, 1, 1)", span="2704-2704"];
m1_1230 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="var anonymous =\r\n                new\r\n                {\r\n                    DateValue = d\r\n                }", span="2706-2710"];
m1_1236 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="Assert.AreEqual(d, anonymous.DateValue)", span="2722-2722"];
m1_1231 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="2712-2712"];
m1_1233 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(anonymous, settings)", span="2718-2718"];
m1_1235 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous, settings)", span="2721-2721"];
m1_1232 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="settings.Converters.Add(new IsoDateTimeConverter\r\n            {\r\n                DateTimeFormat = ''yyyy''\r\n            })", span="2713-2716"];
m1_1234 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DateValue'''':''''2000''''}'', json)", span="2719-2719"];
m1_1237 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", span="2702-2702"];
m1_102 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_Null()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_Null()", span="363-363"];
m1_103 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_Null()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IList<bool>>(@''[null]''),\r\n                ''Error converting value {null} to type 'System.Boolean'. Path '[0]', line 1, position 5.'')", span="365-367"];
m1_104 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_Null()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_Null()", span="363-363"];
m1_1083 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="2370-2370"];
m1_1084 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="2372-2372"];
m1_1085 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="Hashtable p = JsonConvert.DeserializeObject(value, typeof(Hashtable)) as Hashtable", span="2374-2374"];
m1_1086 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Orange'', p[''Name''].ToString())", span="2376-2376"];
m1_1087 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="2370-2370"];
m1_2494 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", span="5684-5684"];
m1_4285 [cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToObject<T>()", span="1932-1932"];
m1_1396 [cluster="Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", span="30-30"];
m1_3708 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="8575-8575"];
m1_3709 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="var tuple = Tuple.Create(500)", span="8577-8577"];
m1_3710 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="SerializableContractResolver contractResolver = new SerializableContractResolver()", span="8579-8579"];
m1_3711 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(tuple, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = contractResolver\r\n            })", span="8581-8584"];
m1_3713 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="var obj = JsonConvert.DeserializeObject<Tuple<int>>(json, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = contractResolver\r\n            })", span="8587-8590"];
m1_3712 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="8585-8585"];
m1_3714 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Assert.AreEqual(500, obj.Item1)", span="8591-8591"];
m1_3715 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="8575-8575"];
m1_1067 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="2350-2350"];
m1_1068 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="MethodExecutorObject executorObject = new MethodExecutorObject()", span="2352-2352"];
m1_1069 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="executorObject.serverClassName = ''BanSubs''", span="2353-2353"];
m1_1070 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="executorObject.serverMethodParams = new object[] { ''21321546'', ''101'', ''1236'', ''D:\\1.txt'' }", span="2354-2354"];
m1_1071 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="executorObject.clientGetResultFunction = ''ClientBanSubsCB''", span="2355-2355"];
m1_1072 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="string output = JsonConvert.SerializeObject(executorObject)", span="2357-2357"];
m1_1074 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Assert.AreNotSame(executorObject, executorObject2)", span="2361-2361"];
m1_1073 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="MethodExecutorObject executorObject2 = JsonConvert.DeserializeObject(output, typeof(MethodExecutorObject)) as MethodExecutorObject", span="2359-2359"];
m1_1075 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(executorObject2.serverClassName, ''BanSubs'')", span="2362-2362"];
m1_1076 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(executorObject2.serverMethodParams.Length, 4)", span="2363-2363"];
m1_1077 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="CustomAssert.Contains(executorObject2.serverMethodParams, ''101'')", span="2364-2364"];
m1_1078 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(executorObject2.clientGetResultFunction, ''ClientBanSubsCB'')", span="2365-2365"];
m1_1079 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="2350-2350"];
m1_3257 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="7531-7531"];
m1_3258 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<StringComparison>(''''); }, ''No JSON content found and type 'System.StringComparison' is not nullable. Path '', line 0, position 0.'')", span="7533-7533"];
m1_3259 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="7531-7531"];
m1_1238 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34"];
m1_196 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", span="520-520"];
m1_197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<FooRequired>(''{Bars:''}''); }, ''Required property 'Bars' expects a value but got null. Path '', line 1, position 9.'')", span="522-522"];
m1_198 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", span="520-520"];
m1_4444 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired", span=""];
m1_4445 [file="JsonSerializerTest.cs", label=c1, span=""];
m1_4446 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass", span=""];
m1_4447 [file="JsonSerializerTest.cs", label=c1, span=""];
m1_4448 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver", span=""];
m1_4449 [file="JsonSerializerTest.cs", label="out Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImmutableStructWithConstructorAttribute", span=""];
m1_4450 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem", span=""];
m1_4451 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse", span=""];
m1_4452 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4453 [file="JsonSerializerTest.cs", label=serializer, span=""];
m1_4454 [file="JsonSerializerTest.cs", label=referenceResolver, span=""];
m1_4455 [file="JsonSerializerTest.cs", label=serializerProxy, span=""];
m1_4456 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", span=""];
m1_4457 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast", span=""];
m1_4458 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", span=""];
m1_4459 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4460 [file="JsonSerializerTest.cs", label=strFromTest, span=""];
m1_4461 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass", span=""];
m1_4462 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass", span=""];
m1_4463 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", span=""];
m1_4464 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4465 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4466 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4467 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4468 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4469 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4470 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4471 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4472 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4473 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4474 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4475 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass", span=""];
m1_4476 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", span=""];
m1_4477 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4478 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor", span=""];
m1_4479 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1", span=""];
m1_4480 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2", span=""];
m1_4481 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", span=""];
m1_4482 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>", span=""];
m1_4483 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", span=""];
m1_4484 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", span=""];
m1_4485 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4486 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty", span=""];
m1_4487 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey", span=""];
m1_4488 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass", span=""];
m1_4489 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4490 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector", span=""];
m1_4491 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived", span=""];
m1_4492 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base", span=""];
m1_4493 [file="JsonSerializerTest.cs", label="out Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span=""];
m1_4494 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span=""];
m1_4495 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor", span=""];
m1_4496 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor", span=""];
m1_4497 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty", span=""];
m1_4498 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty", span=""];
m1_4499 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", span=""];
m1_4500 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException", span=""];
m1_4501 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4502 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4503 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4504 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter", span=""];
m1_4505 [file="JsonSerializerTest.cs", label=errors, span=""];
m1_4506 [file="JsonSerializerTest.cs", label=errors, span=""];
m1_4507 [file="JsonSerializerTest.cs", label=errors, span=""];
m1_4508 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4509 [file="JsonSerializerTest.cs", label=s, span=""];
m1_4510 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4511 [file="JsonSerializerTest.cs", label=s, span=""];
m1_4512 [file="JsonSerializerTest.cs", label=serializer, span=""];
m1_4513 [file="JsonSerializerTest.cs", label=reader, span=""];
m1_4514 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>", span=""];
m1_4515 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>", span=""];
m1_4516 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4517 [file="JsonSerializerTest.cs", label=json, span=""];
m1_4518 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor", span=""];
m1_4519 [file="JsonSerializerTest.cs", label="out Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSize", span=""];
m1_4520 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter", span=""];
m1_4521 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", span=""];
m1_4522 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType", span=""];
m1_4523 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType", span=""];
m1_4524 [file="JsonSerializerTest.cs", label=JsonMessage, span=""];
m1_4525 [file="JsonSerializerTest.cs", label=s, span=""];
m1_4526 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.ChildClassWithProtectedOverridePlusJsonProperty", span=""];
m1_4527 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.DecimalTest", span=""];
m1_4528 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor", span=""];
m1_4529 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor", span=""];
m1_4530 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor", span=""];
m1_4531 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.CompletionDataRequest", span=""];
m1_4532 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject", span=""];
m2_126 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.ThrowsAsync<TException>(System.Func<System.Threading.Tasks.Task>, params string[])", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.ThrowsAsync<TException>(System.Func<System.Threading.Tasks.Task>, params string[])", span="391-391"];
m2_127 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.ThrowsAsync<TException>(System.Func<System.Threading.Tasks.Task>, params string[])", file="TestFixtureBase.cs", label="await action()", span="396-396"];
m2_131 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.ThrowsAsync<TException>(System.Func<System.Threading.Tasks.Task>, params string[])", file="TestFixtureBase.cs", label="possibleMessages == null || possibleMessages.Length == 0", span="403-403"];
m2_133 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.ThrowsAsync<TException>(System.Func<System.Threading.Tasks.Task>, params string[])", file="TestFixtureBase.cs", label=possibleMessages, span="407-407"];
m2_136 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.ThrowsAsync<TException>(System.Func<System.Threading.Tasks.Task>, params string[])", file="TestFixtureBase.cs", label="throw new Exception(''Unexpected exception message.'' + Environment.NewLine + ''Expected one of: '' + string.Join(Environment.NewLine, possibleMessages) + Environment.NewLine + ''Got: '' + ex.Message + Environment.NewLine + Environment.NewLine + ex);", span="415-415"];
m2_128 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.ThrowsAsync<TException>(System.Func<System.Threading.Tasks.Task>, params string[])", file="TestFixtureBase.cs", label="Assert.Fail(''Exception of type {0} expected. No exception thrown.'', typeof(TException).Name)", span="398-398"];
m2_129 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.ThrowsAsync<TException>(System.Func<System.Threading.Tasks.Task>, params string[])", file="TestFixtureBase.cs", label="return null;", span="399-399"];
m2_130 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.ThrowsAsync<TException>(System.Func<System.Threading.Tasks.Task>, params string[])", file="TestFixtureBase.cs", label=TException, span="401-401"];
m2_132 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.ThrowsAsync<TException>(System.Func<System.Threading.Tasks.Task>, params string[])", file="TestFixtureBase.cs", label="return ex;", span="405-405"];
m2_134 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.ThrowsAsync<TException>(System.Func<System.Threading.Tasks.Task>, params string[])", file="TestFixtureBase.cs", label="StringAssert.Equals(possibleMessage, ex.Message)", span="409-409"];
m2_135 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.ThrowsAsync<TException>(System.Func<System.Threading.Tasks.Task>, params string[])", file="TestFixtureBase.cs", label="return ex;", span="411-411"];
m2_137 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.ThrowsAsync<TException>(System.Func<System.Threading.Tasks.Task>, params string[])", file="TestFixtureBase.cs", label=Exception, span="417-417"];
m2_138 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.ThrowsAsync<TException>(System.Func<System.Threading.Tasks.Task>, params string[])", file="TestFixtureBase.cs", label="throw new Exception(string.Format(''Exception of type {0} expected; got exception of type {1}.'', typeof(TException).Name, ex.GetType().Name), ex);", span="419-419"];
m2_139 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.ThrowsAsync<TException>(System.Func<System.Threading.Tasks.Task>, params string[])", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.ExceptionAssert.ThrowsAsync<TException>(System.Func<System.Threading.Tasks.Task>, params string[])", span="391-391"];
m2_83 [cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object, string)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object, string)", span="312-312"];
m2_84 [cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object, string)", file="TestFixtureBase.cs", label="Assert.Contains(value, collection, message)", span="315-315"];
m2_85 [cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object, string)", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object, string)", span="312-312"];
m2_32 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", file="TestFixtureBase.cs", label="return new string(chars, 0, pos);", span="217-217"];
m2_125 [cluster="string.Format(string, object, object)", file="TestFixtureBase.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m2_8 [cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetField(System.Type, string)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.TestReflectionUtils.GetField(System.Type, string)", span="80-80"];
m2_9 [cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetField(System.Type, string)", file="TestFixtureBase.cs", label="return type.GetField(name);", span="83-83"];
m2_10 [cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetField(System.Type, string)", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.TestReflectionUtils.GetField(System.Type, string)", span="80-80"];
m2_124 [cluster="System.Exception.GetType()", file="TestFixtureBase.cs", label="Entry System.Exception.GetType()", span="0-0"];
m2_47 [cluster="System.BitConverter.ToString(byte[])", file="TestFixtureBase.cs", label="Entry System.BitConverter.ToString(byte[])", span="0-0"];
m2_38 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[])", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[])", span="220-220"];
m2_39 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[])", file="TestFixtureBase.cs", label="return BytesToHex(bytes, false);", span="222-222"];
m2_40 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[])", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[])", span="220-220"];
m2_29 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.ResolvePath(string)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.ResolvePath(string)", span="212-212"];
m2_30 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.ResolvePath(string)", color=green, community=0, file="TestFixtureBase.cs", label="return Path.Combine(TestContext.CurrentContext.TestDirectory, path);", prediction=4, span="215-215"];
m2_31 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.ResolvePath(string)", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.TestFixtureBase.ResolvePath(string)", span="212-212"];
m2_33 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", span="212-212"];
m2_24 [cluster="DataContractJsonSerializer.cstr", file="TestFixtureBase.cs", label="Entry DataContractJsonSerializer.cstr", span=""];
m2_69 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", span="289-289"];
m2_70 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", file="TestFixtureBase.cs", label="Console.WriteLine(EscapeJson(json))", span="291-291"];
m2_71 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", span="289-289"];
m2_27 [cluster="System.IO.MemoryStream.ToArray()", file="TestFixtureBase.cs", label="Entry System.IO.MemoryStream.ToArray()", span="0-0"];
m2_73 [cluster="System.Console.WriteLine(string)", file="TestFixtureBase.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m2_76 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="302-302"];
m2_77 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="TestFixtureBase.cs", label="Assert.IsInstanceOf(t, instance)", span="304-304"];
m2_78 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="302-302"];
m2_119 [cluster="System.Action.Invoke()", file="TestFixtureBase.cs", label="Entry System.Action.Invoke()", span="0-0"];
m2_122 [cluster="string.Join(string, params string[])", file="TestFixtureBase.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m2_140 [cluster="System.Func<TResult>.Invoke()", file="TestFixtureBase.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m2_34 [cluster="System.DateTime.SpecifyKind(System.DateTime, System.DateTimeKind)", file="TestFixtureBase.cs", label="Entry System.DateTime.SpecifyKind(System.DateTime, System.DateTimeKind)", span="0-0"];
m2_49 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", span="236-236"];
m2_50 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TestFixtureBase.cs", label="string fixedHex = hex.Replace(''-'', string.Empty)", span="238-238"];
m2_51 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TestFixtureBase.cs", label="byte[] bytes = new byte[fixedHex.Length / 2]", span="241-241"];
m2_54 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TestFixtureBase.cs", label=fixedHex, span="247-247"];
m2_52 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TestFixtureBase.cs", label="int shift = 4", span="243-243"];
m2_58 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TestFixtureBase.cs", label="bytes[offset] |= (byte)(b << shift)", span="258-258"];
m2_62 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TestFixtureBase.cs", label="return bytes;", span="267-267"];
m2_53 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TestFixtureBase.cs", label="int offset = 0", span="245-245"];
m2_59 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TestFixtureBase.cs", label="shift ^= 4", span="260-260"];
m2_61 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TestFixtureBase.cs", label="offset++", span="264-264"];
m2_55 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TestFixtureBase.cs", label="int b = (c - '0') % 32", span="251-251"];
m2_56 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TestFixtureBase.cs", label="b > 9", span="253-253"];
m2_57 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TestFixtureBase.cs", label="b -= 7", span="255-255"];
m2_60 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TestFixtureBase.cs", label="shift != 0", span="262-262"];
m2_63 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", span="236-236"];
m2_99 [cluster="string.Equals(string, string)", file="TestFixtureBase.cs", label="Entry string.Equals(string, string)", span="0-0"];
m2_7 [cluster="System.Type.GetProperty(string)", file="TestFixtureBase.cs", label="Entry System.Type.GetProperty(string)", span="0-0"];
m2_16 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetDataContractJsonSerializeResult(object)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.GetDataContractJsonSerializeResult(object)", span="201-201"];
m2_17 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetDataContractJsonSerializeResult(object)", file="TestFixtureBase.cs", label="MemoryStream ms = new MemoryStream()", span="203-203"];
m2_18 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetDataContractJsonSerializeResult(object)", file="TestFixtureBase.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(o.GetType())", span="204-204"];
m2_19 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetDataContractJsonSerializeResult(object)", file="TestFixtureBase.cs", label="s.WriteObject(ms, o)", span="205-205"];
m2_20 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetDataContractJsonSerializeResult(object)", file="TestFixtureBase.cs", label="var data = ms.ToArray()", span="207-207"];
m2_21 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetDataContractJsonSerializeResult(object)", file="TestFixtureBase.cs", label="return Encoding.UTF8.GetString(data, 0, data.Length);", span="208-208"];
m2_22 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetDataContractJsonSerializeResult(object)", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.TestFixtureBase.GetDataContractJsonSerializeResult(object)", span="201-201"];
m2_80 [cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", span="307-307"];
m2_81 [cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", file="TestFixtureBase.cs", label="Contains(collection, value, null)", span="309-309"];
m2_82 [cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", span="307-307"];
m2_79 [cluster="Unk.IsInstanceOf", file="TestFixtureBase.cs", label="Entry Unk.IsInstanceOf", span=""];
m2_64 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", span="274-274"];
m2_65 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", file="TestFixtureBase.cs", label="Thread.CurrentThread.CurrentCulture = CultureInfo.InvariantCulture", span="282-282"];
m2_66 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", file="TestFixtureBase.cs", label="Thread.CurrentThread.CurrentUICulture = CultureInfo.InvariantCulture", span="283-283"];
m2_67 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", file="TestFixtureBase.cs", label="JsonConvert.DefaultSettings = null", span="286-286"];
m2_68 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.TestFixtureBase.TestSetup()", span="274-274"];
m2_92 [cluster="Newtonsoft.Json.Tests.StringAssert.Normalize(string)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.Normalize(string)", span="345-345"];
m2_100 [cluster="Newtonsoft.Json.Tests.StringAssert.Normalize(string)", file="TestFixtureBase.cs", label="s != null", span="347-347"];
m2_101 [cluster="Newtonsoft.Json.Tests.StringAssert.Normalize(string)", file="TestFixtureBase.cs", label="s = Regex.Replace(s, ''\r\n'')", span="349-349"];
m2_102 [cluster="Newtonsoft.Json.Tests.StringAssert.Normalize(string)", file="TestFixtureBase.cs", label="return s;", span="352-352"];
m2_103 [cluster="Newtonsoft.Json.Tests.StringAssert.Normalize(string)", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.StringAssert.Normalize(string)", span="345-345"];
m2_4 [cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetProperty(System.Type, string)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.TestReflectionUtils.GetProperty(System.Type, string)", span="71-71"];
m2_5 [cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetProperty(System.Type, string)", file="TestFixtureBase.cs", label="return type.GetProperty(name);", span="74-74"];
m2_6 [cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetProperty(System.Type, string)", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.TestReflectionUtils.GetProperty(System.Type, string)", span="71-71"];
m2_104 [cluster="System.Text.RegularExpressions.Regex.Replace(string, string)", file="TestFixtureBase.cs", label="Entry System.Text.RegularExpressions.Regex.Replace(string, string)", span="0-0"];
m2_28 [cluster="System.Text.Encoding.GetString(byte[], int, int)", file="TestFixtureBase.cs", label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0"];
m2_23 [cluster="System.IO.MemoryStream.MemoryStream()", file="TestFixtureBase.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m2_121 [cluster="System.Exception.Exception(string)", file="TestFixtureBase.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m2_41 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[], bool)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[], bool)", span="225-225"];
m2_42 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[], bool)", file="TestFixtureBase.cs", label="string hex = BitConverter.ToString(bytes)", span="227-227"];
m2_43 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[], bool)", file="TestFixtureBase.cs", label=removeDashes, span="228-228"];
m2_44 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[], bool)", file="TestFixtureBase.cs", label="hex = hex.Replace(''-'', '''')", span="230-230"];
m2_45 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[], bool)", file="TestFixtureBase.cs", label="return hex;", span="233-233"];
m2_46 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[], bool)", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.TestFixtureBase.BytesToHex(byte[], bool)", span="225-225"];
m2_72 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", span="294-294"];
m2_74 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", file="TestFixtureBase.cs", label="return @''@'''''' + json.Replace(@'''''''', @'''''''''''') + @'''''''';", span="296-296"];
m2_75 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.TestFixtureBase.EscapeJson(string)", span="294-294"];
m2_37 [cluster="string.String(char[], int, int)", file="TestFixtureBase.cs", label="Entry string.String(char[], int, int)", span="0-0"];
m2_26 [cluster="Unk.WriteObject", file="TestFixtureBase.cs", label="Entry Unk.WriteObject", span=""];
m2_86 [cluster="Unk.Contains", file="TestFixtureBase.cs", label="Entry Unk.Contains", span=""];
m2_12 [cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetMethod(System.Type, string)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.TestReflectionUtils.GetMethod(System.Type, string)", span="89-89"];
m2_13 [cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetMethod(System.Type, string)", file="TestFixtureBase.cs", label="return type.GetMethod(name);", span="92-92"];
m2_14 [cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetMethod(System.Type, string)", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.TestReflectionUtils.GetMethod(System.Type, string)", span="89-89"];
m2_36 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffset(char[], int, System.TimeSpan, Newtonsoft.Json.DateFormatHandling)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffset(char[], int, System.TimeSpan, Newtonsoft.Json.DateFormatHandling)", span="746-746"];
m2_35 [cluster="System.DateTime.GetUtcOffset()", file="TestFixtureBase.cs", label="Entry System.DateTime.GetUtcOffset()", span="51-51"];
m2_3 [cluster="System.Type.GetConstructors()", file="TestFixtureBase.cs", label="Entry System.Type.GetConstructors()", span="0-0"];
m2_105 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="358-358"];
m2_106 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TestFixtureBase.cs", label="action()", span="363-363"];
m2_110 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TestFixtureBase.cs", label="possibleMessages == null || possibleMessages.Length == 0", span="370-370"];
m2_112 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TestFixtureBase.cs", label=possibleMessages, span="374-374"];
m2_115 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TestFixtureBase.cs", label="throw new Exception(''Unexpected exception message.'' + Environment.NewLine + ''Expected one of: '' + string.Join(Environment.NewLine, possibleMessages) + Environment.NewLine + ''Got: '' + ex.Message + Environment.NewLine + Environment.NewLine + ex);", span="382-382"];
m2_107 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TestFixtureBase.cs", label="Assert.Fail(''Exception of type {0} expected. No exception thrown.'', typeof(TException).Name)", span="365-365"];
m2_108 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TestFixtureBase.cs", label="return null;", span="366-366"];
m2_109 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TestFixtureBase.cs", label=TException, span="368-368"];
m2_111 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TestFixtureBase.cs", label="return ex;", span="372-372"];
m2_113 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TestFixtureBase.cs", label="StringAssert.Equals(possibleMessage, ex.Message)", span="376-376"];
m2_114 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TestFixtureBase.cs", label="return ex;", span="378-378"];
m2_116 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TestFixtureBase.cs", label=Exception, span="384-384"];
m2_117 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TestFixtureBase.cs", label="throw new Exception(string.Format(''Exception of type {0} expected; got exception of type {1}.'', typeof(TException).Name, ex.GetType().Name), ex);", span="386-386"];
m2_118 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="358-358"];
m2_120 [cluster="Unk.Fail", file="TestFixtureBase.cs", label="Entry Unk.Fail", span=""];
m2_15 [cluster="System.Type.GetMethod(string)", file="TestFixtureBase.cs", label="Entry System.Type.GetMethod(string)", span="0-0"];
m2_25 [cluster="object.GetType()", file="TestFixtureBase.cs", label="Entry object.GetType()", span="0-0"];
m2_0 [cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetConstructors(System.Type)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.TestReflectionUtils.GetConstructors(System.Type)", span="62-62"];
m2_1 [cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetConstructors(System.Type)", file="TestFixtureBase.cs", label="return type.GetConstructors();", span="65-65"];
m2_2 [cluster="Newtonsoft.Json.Tests.TestReflectionUtils.GetConstructors(System.Type)", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.TestReflectionUtils.GetConstructors(System.Type)", span="62-62"];
m2_94 [cluster="Newtonsoft.Json.Tests.StringAssert.Equals(string, string)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.Equals(string, string)", span="337-337"];
m2_95 [cluster="Newtonsoft.Json.Tests.StringAssert.Equals(string, string)", file="TestFixtureBase.cs", label="s1 = Normalize(s1)", span="339-339"];
m2_96 [cluster="Newtonsoft.Json.Tests.StringAssert.Equals(string, string)", file="TestFixtureBase.cs", label="s2 = Normalize(s2)", span="340-340"];
m2_97 [cluster="Newtonsoft.Json.Tests.StringAssert.Equals(string, string)", file="TestFixtureBase.cs", label="return string.Equals(s1, s2);", span="342-342"];
m2_98 [cluster="Newtonsoft.Json.Tests.StringAssert.Equals(string, string)", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.StringAssert.Equals(string, string)", span="337-337"];
m2_48 [cluster="string.Replace(string, string)", file="TestFixtureBase.cs", label="Entry string.Replace(string, string)", span="0-0"];
m2_87 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="TestFixtureBase.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="329-329"];
m2_88 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="TestFixtureBase.cs", label="expected = Normalize(expected)", span="331-331"];
m2_89 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="TestFixtureBase.cs", label="actual = Normalize(actual)", span="332-332"];
m2_90 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="TestFixtureBase.cs", label="Assert.AreEqual(expected, actual)", span="334-334"];
m2_91 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="TestFixtureBase.cs", label="Exit Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="329-329"];
m2_123 [cluster="System.Exception.Exception(string, System.Exception)", file="TestFixtureBase.cs", label="Entry System.Exception.Exception(string, System.Exception)", span="0-0"];
m2_11 [cluster="System.Type.GetField(string)", file="TestFixtureBase.cs", label="Entry System.Type.GetField(string)", span="0-0"];
m2_141 [file="TestFixtureBase.cs", label="Newtonsoft.Json.Tests.TestFixtureBase", span=""];
n3 -> n8  [color=darkseagreen4, key=1, label=json, style=dashed];
n4 -> n6  [color=darkseagreen4, key=1, label=r2, style=dashed];
n4 -> n7  [color=darkseagreen4, key=1, label=r2, style=dashed];
n16 -> n19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
n70 -> n73  [color=darkseagreen4, key=1, label=s, style=dashed];
n99 -> n101  [color=darkseagreen4, key=1, label=mike, style=dashed];
n99 -> n102  [color=darkseagreen4, key=1, label=mike, style=dashed];
n100 -> n102  [color=darkseagreen4, key=1, label=susan, style=dashed];
n141 -> n145  [color=darkseagreen4, key=1, label=largeJson, style=dashed];
m0_118 -> m0_122  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_118 -> m0_124  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_572 -> m0_578  [color=darkseagreen4, key=1, label=oldRole, style=dashed];
m0_577 -> m0_579  [color=darkseagreen4, key=1, label=newRole, style=dashed];
m0_634 -> m0_636  [color=darkseagreen4, key=1, label="out object", style=dashed];
m0_82 -> m0_85  [color=darkseagreen4, key=1, label=c1, style=dashed];
m0_84 -> m0_86  [color=darkseagreen4, key=1, label=c2, style=dashed];
m0_101 -> m0_103  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_101 -> m0_104  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_17 -> m0_20  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, int>", style=dashed];
m0_18 -> m0_20  [color=darkseagreen4, key=1, label=s, style=dashed];
m0_22 -> m0_22  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_611 -> m0_614  [color=darkseagreen4, key=1, label=g, style=dashed];
m0_479 -> m0_481  [color=darkseagreen4, key=1, label=memberNames, style=dashed];
m0_479 -> m0_482  [color=darkseagreen4, key=1, label=memberNames, style=dashed];
m0_485 -> m0_487  [color=darkseagreen4, key=1, label=memberNames, style=dashed];
m0_485 -> m0_488  [color=darkseagreen4, key=1, label=memberNames, style=dashed];
m0_625 -> m0_627  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_605 -> m0_608  [color=darkseagreen4, key=1, label=g, style=dashed];
m0_56 -> m0_58  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_56 -> m0_59  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_56 -> m0_61  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_56 -> m0_62  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_56 -> m0_63  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_64 -> m0_66  [color=darkseagreen4, key=1, label=v1, style=dashed];
m0_67 -> m0_70  [color=darkseagreen4, key=1, label=newValue1, style=dashed];
m0_130 -> m0_132  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_133  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_134  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_135  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_136  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_137  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_138  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_139  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_140  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_141  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_142  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_143  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_144  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_145  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_146  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_147  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_148  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_149  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_150  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_151  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_152  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_153  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_154  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_155  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_156  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_157  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_158  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_159  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_160  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_161  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_162  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_163  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_164  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_165  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_166  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_167  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_168  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_169  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_170  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_171  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_172  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_173  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_174  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_175  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_176  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_177  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_178  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_179  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_180  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_181  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_182  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_183  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_184  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_185  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_186  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_187  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_188  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_189  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_190  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_191  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_192  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_193  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_194  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_195  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_196  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_197  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_198  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_199  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_200  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_130 -> m0_201  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_91 -> m0_95  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_92 -> m0_94  [color=darkseagreen4, key=1, label=value, style=dashed];
m0_95 -> m0_97  [color=darkseagreen4, key=1, label=value, style=dashed];
m0_597 -> m0_600  [color=darkseagreen4, key=1, label=g, style=dashed];
m0_109 -> m0_112  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_617 -> m0_620  [color=darkseagreen4, key=1, label=g, style=dashed];
m0_546 -> m0_554  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_32 -> m0_37  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_33 -> m0_40  [color=darkseagreen4, key=1, label=counts, style=dashed];
m0_33 -> m0_41  [color=darkseagreen4, key=1, label=counts, style=dashed];
m0_37 -> m0_39  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_34 -> m0_43  [color=darkseagreen4, key=1, label=sw, style=dashed];
m0_36 -> m0_38  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_36 -> m0_42  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_42 -> m0_42  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_39 -> m0_41  [color=darkseagreen4, key=1, label=friend, style=dashed];
m0_463 -> m0_465  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_463 -> m0_466  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_463 -> m0_467  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_463 -> m0_468  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_463 -> m0_469  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_463 -> m0_470  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_463 -> m0_471  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_463 -> m0_472  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_463 -> m0_473  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_463 -> m0_474  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_641 -> m0_40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Linq.DynamicTests", style=dashed];
m0_641 -> m0_41  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Linq.DynamicTests", style=dashed];
m0_641 -> m0_542  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Linq.DynamicTests", style=dashed];
m0_643 -> m0_631  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Linq.DynamicDictionary", style=dashed];
m1_3976 -> m1_3978  [color=darkseagreen4, key=1, label=john, style=dashed];
m1_3976 -> m1_3979  [color=darkseagreen4, key=1, label=john, style=dashed];
m1_3977 -> m1_3979  [color=darkseagreen4, key=1, label=jane, style=dashed];
m1_3626 -> m1_3628  [color=darkseagreen4, key=1, label=uris, style=dashed];
m1_3631 -> m1_3633  [color=darkseagreen4, key=1, label=i1, style=dashed];
m1_3634 -> m1_3636  [color=darkseagreen4, key=1, label=uri, style=dashed];
m1_3417 -> m1_3428  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_3417 -> m1_3421  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_3417 -> m1_3422  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_3417 -> m1_3423  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_3417 -> m1_3424  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_3418 -> m1_3428  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_1709 -> m1_1711  [color=darkseagreen4, key=1, label=n, style=dashed];
m1_1709 -> m1_1712  [color=darkseagreen4, key=1, label=n, style=dashed];
m1_1709 -> m1_1713  [color=darkseagreen4, key=1, label=n, style=dashed];
m1_1709 -> m1_1714  [color=darkseagreen4, key=1, label=n, style=dashed];
m1_2562 -> m1_2562  [color=darkseagreen4, key=1, label=newStruct, style=dashed];
m1_4028 -> m1_4031  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_4028 -> m1_4033  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_4028 -> m1_4035  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_3833 -> m1_3835  [color=darkseagreen4, key=1, label=expected, style=dashed];
m1_814 -> m1_820  [color=darkseagreen4, key=1, label=obj, style=dashed];
m1_814 -> m1_821  [color=darkseagreen4, key=1, label=obj, style=dashed];
m1_814 -> m1_822  [color=darkseagreen4, key=1, label=obj, style=dashed];
m1_814 -> m1_823  [color=darkseagreen4, key=1, label=obj, style=dashed];
m1_814 -> m1_824  [color=darkseagreen4, key=1, label=obj, style=dashed];
m1_819 -> m1_821  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m1_819 -> m1_822  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m1_819 -> m1_823  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m1_819 -> m1_824  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m1_819 -> m1_825  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m1_819 -> m1_826  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m1_819 -> m1_827  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m1_819 -> m1_828  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m1_1329 -> m1_1333  [color=darkseagreen4, key=1, label=guid, style=dashed];
m1_3150 -> m1_3152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_3994 -> m1_4001  [color=darkseagreen4, key=1, label=consoleWriter, style=dashed];
m1_3994 -> m1_4007  [color=darkseagreen4, key=1, label=consoleWriter, style=dashed];
m1_2442 -> m1_2444  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_97 -> m1_99  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_99 -> m1_99  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_2445 -> m1_2447  [color=darkseagreen4, key=1, label=reference, style=dashed];
m1_2445 -> m1_2451  [color=darkseagreen4, key=1, label=reference, style=dashed];
m1_2448 -> m1_2450  [color=darkseagreen4, key=1, label=child, style=dashed];
m1_2448 -> m1_2451  [color=darkseagreen4, key=1, label=child, style=dashed];
m1_3592 -> m1_3597  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_3594 -> m1_3596  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_3594 -> m1_3597  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_3706 -> m1_3702  [color=darkseagreen4, key=1, label=obj, style=dashed];
m1_1772 -> m1_1774  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m1_1772 -> m1_1775  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m1_1772 -> m1_1776  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m1_1772 -> m1_1777  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m1_1772 -> m1_1778  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m1_1827 -> m1_1829  [color=darkseagreen4, key=1, label=values, style=dashed];
m1_1827 -> m1_1830  [color=darkseagreen4, key=1, label=values, style=dashed];
m1_2763 -> m1_2765  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_4277 -> m1_4281  [color=darkseagreen4, key=1, label=address, style=dashed];
m1_4277 -> m1_4282  [color=darkseagreen4, key=1, label=address, style=dashed];
m1_1398 -> m1_1403  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m1_1398 -> m1_1404  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m1_1402 -> m1_1404  [color=darkseagreen4, key=1, label=m2, style=dashed];
m1_3144 -> m1_3147  [color=darkseagreen4, key=1, label=w, style=dashed];
m1_3306 -> m1_3308  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_3306 -> m1_3309  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_3306 -> m1_3310  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_3311 -> m1_3313  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_3311 -> m1_3314  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_3311 -> m1_3315  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_841 -> m1_843  [color=darkseagreen4, key=1, label=r2, style=dashed];
m1_3542 -> m1_3550  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3542 -> m1_3553  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3545 -> m1_3547  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_3550 -> m1_3552  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_3549 -> m1_3553  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_4412 -> m1_4414  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_4412 -> m1_4415  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_4412 -> m1_4416  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_4412 -> m1_4417  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_4412 -> m1_4418  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_4412 -> m1_4419  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_4412 -> m1_4420  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_4412 -> m1_4421  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_4412 -> m1_4422  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_4412 -> m1_4423  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_4412 -> m1_4424  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_4412 -> m1_4425  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_4412 -> m1_4426  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_4412 -> m1_4427  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_4412 -> m1_4428  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_4412 -> m1_4429  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_4412 -> m1_4430  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_3582 -> m1_3584  [color=darkseagreen4, key=1, label=exception, style=dashed];
m1_3582 -> m1_3585  [color=darkseagreen4, key=1, label=exception, style=dashed];
m1_1306 -> m1_1308  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_1306 -> m1_1309  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_3354 -> m1_3361  [color=darkseagreen4, key=1, label=values, style=dashed];
m1_3354 -> m1_3362  [color=darkseagreen4, key=1, label=values, style=dashed];
m1_3354 -> m1_3363  [color=darkseagreen4, key=1, label=values, style=dashed];
m1_3354 -> m1_3364  [color=darkseagreen4, key=1, label=values, style=dashed];
m1_3355 -> m1_3358  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_1757 -> m1_1759  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_1757 -> m1_1760  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_1757 -> m1_1761  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_1757 -> m1_1762  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_1757 -> m1_1763  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_1757 -> m1_1764  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_1757 -> m1_1765  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_1757 -> m1_1766  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_1757 -> m1_1767  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_3514 -> m1_3517  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m1_3515 -> m1_3517  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_3195 -> m1_3197  [color=darkseagreen4, key=1, label=actual, style=dashed];
m1_380 -> m1_382  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_386 -> m1_388  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_4163 -> m1_4169  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_3615 -> m1_3620  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_3615 -> m1_3623  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_3617 -> m1_3619  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_3617 -> m1_3620  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_3617 -> m1_3623  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_3620 -> m1_3622  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_415 -> m1_417  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_3387 -> m1_3398  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_3387 -> m1_3391  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_3387 -> m1_3392  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_3387 -> m1_3393  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_3387 -> m1_3394  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_3387 -> m1_3395  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_3388 -> m1_3398  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_2428 -> m1_2430  [color=darkseagreen4, key=1, label=reference, style=dashed];
m1_2428 -> m1_2434  [color=darkseagreen4, key=1, label=reference, style=dashed];
m1_2431 -> m1_2433  [color=darkseagreen4, key=1, label=child, style=dashed];
m1_2431 -> m1_2434  [color=darkseagreen4, key=1, label=child, style=dashed];
m1_2435 -> m1_2439  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_2436 -> m1_2438  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1416 -> m1_1421  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m1_1416 -> m1_1422  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m1_1420 -> m1_1422  [color=darkseagreen4, key=1, label=m2, style=dashed];
m1_2948 -> m1_2952  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2948 -> m1_2953  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2948 -> m1_2954  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2948 -> m1_2955  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2948 -> m1_2956  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2951 -> m1_2953  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_2951 -> m1_2954  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_2951 -> m1_2955  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_2951 -> m1_2956  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_281 -> m1_293  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_282 -> m1_292  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_286 -> m1_295  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_287 -> m1_298  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_116 -> m1_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_3368 -> m1_3370  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_3368 -> m1_3371  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_3374 -> m1_3377  [color=darkseagreen4, key=1, label=a, style=dashed];
m1_3002 -> m1_3008  [color=darkseagreen4, key=1, label=test, style=dashed];
m1_3003 -> m1_3008  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_3013 -> m1_3015  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m1_3007 -> m1_3009  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_243 -> m1_251  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_244 -> m1_254  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_245 -> m1_257  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_246 -> m1_260  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_247 -> m1_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_248 -> m1_266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_249 -> m1_269  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_617 -> m1_620  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_617 -> m1_622  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_617 -> m1_624  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_617 -> m1_626  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_617 -> m1_629  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_617 -> m1_630  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_617 -> m1_631  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_617 -> m1_633  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_617 -> m1_635  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_617 -> m1_637  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_617 -> m1_639  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_617 -> m1_641  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_617 -> m1_643  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_617 -> m1_645  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_617 -> m1_647  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_617 -> m1_649  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_617 -> m1_651  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_617 -> m1_653  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_617 -> m1_655  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_617 -> m1_657  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_617 -> m1_659  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_617 -> m1_661  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_617 -> m1_663  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_617 -> m1_666  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_617 -> m1_667  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_617 -> m1_669  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_617 -> m1_671  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_617 -> m1_674  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_617 -> m1_676  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_617 -> m1_677  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_617 -> m1_679  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_617 -> m1_681  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_617 -> m1_683  [color=darkseagreen4, key=1, label=settings, style=dashed];
m1_618 -> m1_620  [color=darkseagreen4, key=1, label=customBinder, style=dashed];
m1_627 -> m1_629  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m1_664 -> m1_666  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m1_664 -> m1_667  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m1_664 -> m1_687  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m1_664 -> m1_669  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m1_672 -> m1_674  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m1_203 -> m1_205  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_2375 -> m1_2383  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m1_2379 -> m1_2381  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1096 -> m1_1098  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_4196 -> m1_4198  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_374 -> m1_376  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_2743 -> m1_2745  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_2743 -> m1_2746  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_4235 -> m1_4237  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_4213 -> m1_4215  [color=darkseagreen4, key=1, label=clonedObject, style=dashed];
m1_2541 -> m1_2550  [color=darkseagreen4, key=1, label=classRef, style=dashed];
m1_2542 -> m1_2544  [color=darkseagreen4, key=1, label=s1, style=dashed];
m1_2550 -> m1_2554  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_2543 -> m1_2550  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_2543 -> m1_2555  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_2545 -> m1_2547  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_2545 -> m1_2548  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_2545 -> m1_2549  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_208 -> m1_210  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1628 -> m1_1630  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_1628 -> m1_1631  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_1628 -> m1_1632  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_1628 -> m1_1633  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_3691 -> m1_3693  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_832 -> m1_834  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_122 -> m1_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_3064 -> m1_3067  [color=darkseagreen4, key=1, label=d1, style=dashed];
m1_3064 -> m1_3068  [color=darkseagreen4, key=1, label=d1, style=dashed];
m1_3066 -> m1_3068  [color=darkseagreen4, key=1, label=d2, style=dashed];
m1_1900 -> m1_1904  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1901 -> m1_1903  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_3205 -> m1_3207  [color=darkseagreen4, key=1, label=dict, style=dashed];
m1_3655 -> m1_3655  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_3656 -> m1_3656  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_1493 -> m1_1495  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m1_1493 -> m1_1496  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m1_1493 -> m1_1497  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m1_1493 -> m1_1498  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m1_1493 -> m1_1499  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m1_1493 -> m1_1500  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m1_173 -> m1_175  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_173 -> m1_176  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_3099 -> m1_3101  [color=darkseagreen4, key=1, label=value, style=dashed];
m1_128 -> m1_130  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_128 -> m1_131  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_128 -> m1_132  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_128 -> m1_133  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_128 -> m1_134  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_128 -> m1_135  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_128 -> m1_136  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_128 -> m1_137  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_128 -> m1_138  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_128 -> m1_139  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_128 -> m1_140  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_128 -> m1_141  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_128 -> m1_142  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_130 -> m1_130  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_131 -> m1_131  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_132 -> m1_132  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_133 -> m1_133  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_134 -> m1_134  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_135 -> m1_135  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_136 -> m1_136  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_137 -> m1_137  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_138 -> m1_138  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_139 -> m1_139  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_140 -> m1_140  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_141 -> m1_141  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_142 -> m1_142  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_2456 -> m1_2458  [color=darkseagreen4, key=1, label=reference, style=dashed];
m1_2456 -> m1_2459  [color=darkseagreen4, key=1, label=reference, style=dashed];
m1_2456 -> m1_2463  [color=darkseagreen4, key=1, label=reference, style=dashed];
m1_2460 -> m1_2462  [color=darkseagreen4, key=1, label=child, style=dashed];
m1_2460 -> m1_2463  [color=darkseagreen4, key=1, label=child, style=dashed];
m1_2466 -> m1_2468  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_2466 -> m1_2469  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_4320 -> m1_4324  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_4321 -> m1_4323  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_2484 -> m1_2486  [color=darkseagreen4, key=1, label=dic, style=dashed];
m1_3058 -> m1_3060  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_1820 -> m1_1822  [color=darkseagreen4, key=1, label=r, style=dashed];
m1_1820 -> m1_1823  [color=darkseagreen4, key=1, label=r, style=dashed];
m1_3912 -> m1_3914  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_470 -> m1_473  [color=darkseagreen4, key=1, label=input, style=dashed];
m1_470 -> m1_474  [color=darkseagreen4, key=1, label=input, style=dashed];
m1_470 -> m1_475  [color=darkseagreen4, key=1, label=input, style=dashed];
m1_472 -> m1_474  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_472 -> m1_475  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_690 -> m1_693  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_690 -> m1_694  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_690 -> m1_696  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_690 -> m1_699  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_690 -> m1_701  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_690 -> m1_703  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_690 -> m1_706  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_690 -> m1_707  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_690 -> m1_708  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_690 -> m1_710  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_690 -> m1_712  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_690 -> m1_714  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_690 -> m1_716  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_690 -> m1_718  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_690 -> m1_720  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_690 -> m1_722  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_690 -> m1_724  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_690 -> m1_726  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_690 -> m1_728  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_690 -> m1_730  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_690 -> m1_732  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_690 -> m1_734  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_690 -> m1_736  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_690 -> m1_738  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_690 -> m1_740  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_690 -> m1_743  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_690 -> m1_745  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_690 -> m1_748  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_690 -> m1_750  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_690 -> m1_751  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_690 -> m1_753  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_690 -> m1_755  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_690 -> m1_757  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m1_691 -> m1_693  [color=darkseagreen4, key=1, label=customBinder, style=dashed];
m1_691 -> m1_696  [color=darkseagreen4, key=1, label=customBinder, style=dashed];
m1_697 -> m1_761  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_704 -> m1_706  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m1_741 -> m1_743  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m1_746 -> m1_748  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m1_1985 -> m1_1987  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_1640 -> m1_1642  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_1643 -> m1_1645  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_79 -> m1_81  [color=darkseagreen4, key=1, label=enumerableObject, style=dashed];
m1_79 -> m1_82  [color=darkseagreen4, key=1, label=enumerableObject, style=dashed];
m1_2518 -> m1_2520  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_2518 -> m1_2521  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_2518 -> m1_2522  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_3985 -> m1_3987  [color=darkseagreen4, key=1, label=john, style=dashed];
m1_3985 -> m1_3988  [color=darkseagreen4, key=1, label=john, style=dashed];
m1_3986 -> m1_3988  [color=darkseagreen4, key=1, label=jane, style=dashed];
m1_2174 -> m1_2176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m1_2174 -> m1_2177  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m1_2178 -> m1_2178  [color=darkseagreen4, key=1, label=entry, style=dashed];
m1_1150 -> m1_1154  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1151 -> m1_1153  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_2858 -> m1_2860  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2858 -> m1_2864  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2858 -> m1_2865  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2863 -> m1_2865  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_2863 -> m1_2866  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_2863 -> m1_2867  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_1509 -> m1_1512  [color=darkseagreen4, key=1, label=boolRef, style=dashed];
m1_1515 -> m1_1518  [color=darkseagreen4, key=1, label=jsonSerializerTestRef, style=dashed];
m1_1181 -> m1_1184  [color=darkseagreen4, key=1, label=testDates, style=dashed];
m1_1182 -> m1_1184  [color=darkseagreen4, key=1, label=ms, style=dashed];
m1_1182 -> m1_1185  [color=darkseagreen4, key=1, label=ms, style=dashed];
m1_1187 -> m1_1189  [color=darkseagreen4, key=1, label=expected, style=dashed];
m1_344 -> m1_346  [color=darkseagreen4, key=1, label=t2, style=dashed];
m1_344 -> m1_347  [color=darkseagreen4, key=1, label=t2, style=dashed];
m1_4329 -> m1_4332  [color=darkseagreen4, key=1, label=propertyValue, style=dashed];
m1_3403 -> m1_3413  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_3403 -> m1_3407  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_3403 -> m1_3408  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_3403 -> m1_3409  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_3403 -> m1_3410  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_3404 -> m1_3413  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m1_1838 -> m1_1842  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1839 -> m1_1841  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_2600 -> m1_2610  [color=darkseagreen4, key=1, label=expando, style=dashed];
m1_2600 -> m1_2612  [color=darkseagreen4, key=1, label=expando, style=dashed];
m1_2600 -> m1_2616  [color=darkseagreen4, key=1, label=expando, style=dashed];
m1_2600 -> m1_2618  [color=darkseagreen4, key=1, label=expando, style=dashed];
m1_2608 -> m1_2610  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m1_2608 -> m1_2611  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m1_2608 -> m1_2612  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m1_2608 -> m1_2613  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m1_2614 -> m1_2616  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_2614 -> m1_2617  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_2614 -> m1_2618  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_1295 -> m1_1298  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1299 -> m1_1301  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_1299 -> m1_1302  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_4172 -> m1_4178  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_3433 -> m1_3435  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_3433 -> m1_3436  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_3433 -> m1_3437  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_2973 -> m1_2976  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_2975 -> m1_2977  [color=darkseagreen4, key=1, label=jw, style=dashed];
m1_1170 -> m1_1176  [color=darkseagreen4, key=1, label=javaScriptSerializerResult, style=dashed];
m1_1172 -> m1_1175  [color=darkseagreen4, key=1, label=dataContractResult, style=dashed];
m1_1173 -> m1_1175  [color=darkseagreen4, key=1, label=jsonNetResult, style=dashed];
m1_1173 -> m1_1176  [color=darkseagreen4, key=1, label=jsonNetResult, style=dashed];
m1_393 -> m1_395  [color=darkseagreen4, key=1, label=otc, style=dashed];
m1_393 -> m1_396  [color=darkseagreen4, key=1, label=otc, style=dashed];
m1_393 -> m1_397  [color=darkseagreen4, key=1, label=otc, style=dashed];
m1_393 -> m1_398  [color=darkseagreen4, key=1, label=otc, style=dashed];
m1_3753 -> m1_3757  [color=darkseagreen4, key=1, label=dates, style=dashed];
m1_3755 -> m1_3757  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_3755 -> m1_3758  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_3755 -> m1_3759  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_3755 -> m1_3760  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_3588 -> m1_3590  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_22 -> m1_22  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_23 -> m1_23  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_1790 -> m1_1792  [color=darkseagreen4, key=1, label=uri, style=dashed];
m1_1790 -> m1_1794  [color=darkseagreen4, key=1, label=uri, style=dashed];
m1_3953 -> m1_3956  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_3953 -> m1_3957  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_3953 -> m1_3959  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m1_3953 -> m1_3967  [color=darkseagreen4, key=1, label="System.ComponentModel.ITypeDescriptorContext", style=dashed];
m1_3960 -> m1_3967  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m1_3962 -> m1_3966  [color=darkseagreen4, key=1, label=strArray, style=dashed];
m1_2685 -> m1_4493  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", style=dashed];
m1_186 -> m1_188  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_452 -> m1_455  [color=darkseagreen4, key=1, label=input, style=dashed];
m1_452 -> m1_456  [color=darkseagreen4, key=1, label=input, style=dashed];
m1_452 -> m1_457  [color=darkseagreen4, key=1, label=input, style=dashed];
m1_454 -> m1_456  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_454 -> m1_457  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_3489 -> m1_3491  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m1_3489 -> m1_3492  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m1_2918 -> m1_2920  [color=darkseagreen4, key=1, label=r, style=dashed];
m1_2918 -> m1_2921  [color=darkseagreen4, key=1, label=r, style=dashed];
m1_2918 -> m1_2922  [color=darkseagreen4, key=1, label=r, style=dashed];
m1_2918 -> m1_2923  [color=darkseagreen4, key=1, label=r, style=dashed];
m1_2068 -> m1_2070  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_2068 -> m1_2071  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_2068 -> m1_2072  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_2068 -> m1_2073  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_2068 -> m1_2074  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_2068 -> m1_2075  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_2068 -> m1_2076  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_2068 -> m1_2077  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_3078 -> m1_3081  [color=darkseagreen4, key=1, label=d1, style=dashed];
m1_3078 -> m1_3082  [color=darkseagreen4, key=1, label=d1, style=dashed];
m1_3080 -> m1_3082  [color=darkseagreen4, key=1, label=d2, style=dashed];
m1_2477 -> m1_2479  [color=darkseagreen4, key=1, label=cc, style=dashed];
m1_2477 -> m1_2480  [color=darkseagreen4, key=1, label=cc, style=dashed];
m1_960 -> m1_993  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_991 -> m1_993  [color=darkseagreen4, key=1, label=ms, style=dashed];
m1_996 -> m1_1011  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_996 -> m1_999  [color=darkseagreen4, key=1, label=dataContractJson, style=dashed];
m1_996 -> m1_1000  [color=darkseagreen4, key=1, label=dataContractJson, style=dashed];
m1_998 -> m1_1014  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_998 -> m1_1001  [color=darkseagreen4, key=1, label=jsonNetJson, style=dashed];
m1_998 -> m1_1002  [color=darkseagreen4, key=1, label=jsonNetJson, style=dashed];
m1_1001 -> m1_1001  [color=darkseagreen4, key=1, label=property, style=dashed];
m1_3768 -> m1_3770  [color=darkseagreen4, key=1, label=tuple2, style=dashed];
m1_2586 -> m1_2588  [color=darkseagreen4, key=1, label=deserializeObject, style=dashed];
m1_2509 -> m1_2511  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_2509 -> m1_2512  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_2509 -> m1_2513  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_3775 -> m1_3778  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m1_3928 -> m1_3931  [color=darkseagreen4, key=1, label="System.ComponentModel.ITypeDescriptorContext", style=dashed];
m1_3928 -> m1_3935  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m1_3938 -> m1_3941  [color=darkseagreen4, key=1, label=numArray, style=dashed];
m1_3938 -> m1_3944  [color=darkseagreen4, key=1, label=numArray, style=dashed];
m1_3938 -> m1_3945  [color=darkseagreen4, key=1, label=numArray, style=dashed];
m1_3940 -> m1_3943  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_3943 -> m1_3943  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_1318 -> m1_1320  [color=darkseagreen4, key=1, label=indented, style=dashed];
m1_1387 -> m1_1392  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m1_1387 -> m1_1393  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m1_1391 -> m1_1393  [color=darkseagreen4, key=1, label=m2, style=dashed];
m1_1411 -> m1_1413  [color=darkseagreen4, key=1, label=m2, style=dashed];
m1_2996 -> m1_2999  [color=darkseagreen4, key=1, label=uri, style=dashed];
m1_2708 -> m1_2712  [color=darkseagreen4, key=1, label=response, style=dashed];
m1_2710 -> m1_2712  [color=darkseagreen4, key=1, label=deserializedResponse, style=dashed];
m1_2935 -> m1_2938  [color=darkseagreen4, key=1, label=classWithException, style=dashed];
m1_1548 -> m1_1550  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_2680 -> m1_2682  [color=darkseagreen4, key=1, label=meh, style=dashed];
m1_1812 -> m1_1814  [color=darkseagreen4, key=1, label=content, style=dashed];
m1_1812 -> m1_1815  [color=darkseagreen4, key=1, label=content, style=dashed];
m1_1812 -> m1_1816  [color=darkseagreen4, key=1, label=content, style=dashed];
m1_1571 -> m1_1580  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1572 -> m1_1574  [color=darkseagreen4, key=1, label=aa, style=dashed];
m1_1572 -> m1_1575  [color=darkseagreen4, key=1, label=aa, style=dashed];
m1_1572 -> m1_1576  [color=darkseagreen4, key=1, label=aa, style=dashed];
m1_1572 -> m1_1577  [color=darkseagreen4, key=1, label=aa, style=dashed];
m1_1572 -> m1_1578  [color=darkseagreen4, key=1, label=aa, style=dashed];
m1_2208 -> m1_2211  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m1_2734 -> m1_2736  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_2734 -> m1_2737  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_1955 -> m1_1957  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_3172 -> m1_3175  [color=darkseagreen4, key=1, label=ng, style=dashed];
m1_3172 -> m1_3179  [color=darkseagreen4, key=1, label=ng, style=dashed];
m1_3173 -> m1_3175  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_3173 -> m1_3176  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_3173 -> m1_3179  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_3173 -> m1_3180  [color=darkseagreen4, key=1, label=writer, style=dashed];
m1_3174 -> m1_3179  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_533 -> m1_536  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_533 -> m1_537  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_533 -> m1_539  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_533 -> m1_542  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_533 -> m1_544  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_533 -> m1_546  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_533 -> m1_549  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_533 -> m1_550  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_533 -> m1_551  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_533 -> m1_553  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_533 -> m1_555  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_533 -> m1_557  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_533 -> m1_559  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_533 -> m1_561  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_533 -> m1_563  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_533 -> m1_565  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_533 -> m1_567  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_533 -> m1_569  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_533 -> m1_571  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_533 -> m1_573  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_533 -> m1_575  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_533 -> m1_577  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_533 -> m1_579  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_533 -> m1_581  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_533 -> m1_583  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_533 -> m1_586  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_533 -> m1_588  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_533 -> m1_591  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_533 -> m1_593  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_533 -> m1_594  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_533 -> m1_596  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_533 -> m1_598  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_533 -> m1_600  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_534 -> m1_536  [color=darkseagreen4, key=1, label=customBinder, style=dashed];
m1_534 -> m1_539  [color=darkseagreen4, key=1, label=customBinder, style=dashed];
m1_540 -> m1_611  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_547 -> m1_549  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m1_584 -> m1_586  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m1_589 -> m1_591  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m1_3872 -> m1_3874  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_1206 -> m1_1208  [color=darkseagreen4, key=1, label=values, style=dashed];
m1_1206 -> m1_1212  [color=darkseagreen4, key=1, label=values, style=dashed];
m1_31 -> m1_31  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_32 -> m1_32  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_145 -> m1_147  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_145 -> m1_148  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_145 -> m1_149  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_145 -> m1_150  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_145 -> m1_151  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_145 -> m1_152  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_145 -> m1_153  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_145 -> m1_154  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_145 -> m1_155  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_145 -> m1_156  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_145 -> m1_157  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_145 -> m1_158  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_145 -> m1_159  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_145 -> m1_160  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_145 -> m1_161  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_147 -> m1_147  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_148 -> m1_148  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_149 -> m1_149  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_150 -> m1_150  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_151 -> m1_151  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_152 -> m1_152  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_153 -> m1_153  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_154 -> m1_154  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_155 -> m1_155  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_156 -> m1_156  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_157 -> m1_157  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_158 -> m1_158  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_159 -> m1_159  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_160 -> m1_160  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_161 -> m1_161  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_4261 -> m1_4265  [color=darkseagreen4, key=1, label=JsonMessage, style=dashed];
m1_4262 -> m1_4264  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_3822 -> m1_3824  [color=darkseagreen4, key=1, label=floats, style=dashed];
m1_3822 -> m1_3825  [color=darkseagreen4, key=1, label=floats, style=dashed];
m1_3826 -> m1_3828  [color=darkseagreen4, key=1, label=doubles, style=dashed];
m1_3826 -> m1_3829  [color=darkseagreen4, key=1, label=doubles, style=dashed];
m1_504 -> m1_511  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_505 -> m1_507  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_505 -> m1_508  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_505 -> m1_509  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_505 -> m1_510  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_505 -> m1_511  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_512 -> m1_515  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_513 -> m1_515  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_516 -> m1_520  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_517 -> m1_519  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_517 -> m1_520  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_1483 -> m1_1485  [color=darkseagreen4, key=1, label=personRaw, style=dashed];
m1_1483 -> m1_1486  [color=darkseagreen4, key=1, label=personRaw, style=dashed];
m1_2008 -> m1_2010  [color=darkseagreen4, key=1, label=newFoo, style=dashed];
m1_2008 -> m1_2011  [color=darkseagreen4, key=1, label=newFoo, style=dashed];
m1_2008 -> m1_2012  [color=darkseagreen4, key=1, label=newFoo, style=dashed];
m1_2989 -> m1_2992  [color=darkseagreen4, key=1, label=uri, style=dashed];
m1_1847 -> m1_1849  [color=darkseagreen4, key=1, label=a, style=dashed];
m1_1847 -> m1_1850  [color=darkseagreen4, key=1, label=a, style=dashed];
m1_2794 -> m1_2796  [color=darkseagreen4, key=1, label=withoutParameterisedConstructor, style=dashed];
m1_4310 -> m1_4313  [color=darkseagreen4, key=1, label=encodingName, style=dashed];
m1_1783 -> m1_1785  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_1783 -> m1_1786  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_1783 -> m1_1787  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_3129 -> m1_3133  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3130 -> m1_3132  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_4249 -> m1_4251  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_849 -> m1_853  [color=darkseagreen4, key=1, label=v, style=dashed];
m1_849 -> m1_854  [color=darkseagreen4, key=1, label=v, style=dashed];
m1_852 -> m1_855  [color=darkseagreen4, key=1, label=output, style=dashed];
m1_3499 -> m1_3502  [color=darkseagreen4, key=1, label=testObj, style=dashed];
m1_3501 -> m1_3503  [color=darkseagreen4, key=1, label=objDeserialized, style=dashed];
m1_3338 -> m1_3341  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_1527 -> m1_1529  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_1278 -> m1_1280  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m1_1278 -> m1_1281  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m1_1278 -> m1_1282  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m1_1284 -> m1_1286  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m1_1284 -> m1_1287  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m1_1284 -> m1_1288  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m1_1284 -> m1_1289  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m1_1284 -> m1_1290  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m1_1284 -> m1_1291  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m1_490 -> m1_492  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_490 -> m1_493  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_490 -> m1_494  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_1928 -> m1_1932  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1929 -> m1_1931  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_3793 -> m1_3795  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_897 -> m1_899  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_897 -> m1_900  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_897 -> m1_901  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_1273 -> m1_1275  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m1_2285 -> m1_2287  [color=darkseagreen4, key=1, label=kvPairs, style=dashed];
m1_2285 -> m1_2288  [color=darkseagreen4, key=1, label=kvPairs, style=dashed];
m1_2285 -> m1_2289  [color=darkseagreen4, key=1, label=kvPairs, style=dashed];
m1_2285 -> m1_2290  [color=darkseagreen4, key=1, label=kvPairs, style=dashed];
m1_3264 -> m1_3266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_3318 -> m1_3323  [color=darkseagreen4, key=1, label=person, style=dashed];
m1_1534 -> m1_1536  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_1534 -> m1_1537  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_3903 -> m1_3905  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_2810 -> m1_2813  [color=darkseagreen4, key=1, label=cc, style=dashed];
m1_2811 -> m1_2813  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_2051 -> m1_2060  [color=darkseagreen4, key=1, label=wagePerson, style=dashed];
m1_3799 -> m1_3802  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3799 -> m1_3805  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3802 -> m1_3804  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_4242 -> m1_4244  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1261 -> m1_1263  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m1_1261 -> m1_1264  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m1_1261 -> m1_1265  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m1_1261 -> m1_1266  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m1_1261 -> m1_1267  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m1_1604 -> m1_1607  [color=darkseagreen4, key=1, label=defaultJson, style=dashed];
m1_1605 -> m1_1608  [color=darkseagreen4, key=1, label=isoJson, style=dashed];
m1_1606 -> m1_1609  [color=darkseagreen4, key=1, label=javascriptJson, style=dashed];
m1_180 -> m1_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_3071 -> m1_3074  [color=darkseagreen4, key=1, label=d1, style=dashed];
m1_3071 -> m1_3075  [color=darkseagreen4, key=1, label=d1, style=dashed];
m1_3073 -> m1_3075  [color=darkseagreen4, key=1, label=d2, style=dashed];
m1_883 -> m1_885  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_1961 -> m1_1963  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1132 -> m1_1138  [color=darkseagreen4, key=1, label=test, style=dashed];
m1_1132 -> m1_1139  [color=darkseagreen4, key=1, label=test, style=dashed];
m1_1137 -> m1_1139  [color=darkseagreen4, key=1, label=test2, style=dashed];
m1_1110 -> m1_1112  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_2133 -> m1_2135  [color=darkseagreen4, key=1, label=cISO, style=dashed];
m1_1344 -> m1_1348  [color=darkseagreen4, key=1, label=ts, style=dashed];
m1_409 -> m1_411  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_409 -> m1_412  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_3567 -> m1_3569  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_2162 -> m1_2165  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_2163 -> m1_2165  [color=darkseagreen4, key=1, label=ms, style=dashed];
m1_1454 -> m1_1456  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_3252 -> m1_3254  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_3917 -> m1_4519  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSize", style=dashed];
m1_3918 -> m1_4519  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSize", style=dashed];
m1_1948 -> m1_1950  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_3467 -> m1_3469  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m1_3467 -> m1_3470  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m1_1698 -> m1_1700  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1907 -> m1_1911  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1908 -> m1_1910  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1143 -> m1_1145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_2842 -> m1_2844  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2842 -> m1_2848  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2842 -> m1_2849  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2847 -> m1_2849  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_2847 -> m1_2850  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_2847 -> m1_2851  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_355 -> m1_4449  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImmutableStructWithConstructorAttribute", style=dashed];
m1_3280 -> m1_3282  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1613 -> m1_1621  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_1613 -> m1_1622  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_1613 -> m1_1623  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_1619 -> m1_1621  [color=darkseagreen4, key=1, label=deserializedObject, style=dashed];
m1_1619 -> m1_1622  [color=darkseagreen4, key=1, label=deserializedObject, style=dashed];
m1_1619 -> m1_1623  [color=darkseagreen4, key=1, label=deserializedObject, style=dashed];
m1_35 -> m1_45  [color=green, key=1, label=s, style=dashed];
m1_35 -> m1_46  [color=green, key=1, label=s, style=dashed];
m1_35 -> m1_47  [color=green, key=1, label=s, style=dashed];
m1_36 -> m1_39  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_36 -> m1_42  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_40 -> m1_42  [color=darkseagreen4, key=1, label=ser, style=dashed];
m1_3274 -> m1_3276  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1991 -> m1_1995  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m1_1995 -> m1_1995  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m1_1995 -> m1_1997  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m1_1997 -> m1_1997  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m1_1886 -> m1_1890  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1887 -> m1_1889  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_420 -> m1_425  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_420 -> m1_428  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_422 -> m1_425  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_424 -> m1_426  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_424 -> m1_427  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_3847 -> m1_3850  [color=darkseagreen4, key=1, label=s1, style=dashed];
m1_3847 -> m1_3851  [color=darkseagreen4, key=1, label=s1, style=dashed];
m1_3849 -> m1_3852  [color=darkseagreen4, key=1, label=s2, style=dashed];
m1_2694 -> m1_2696  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_2698 -> m1_2700  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_221 -> m1_223  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1973 -> m1_1975  [color=darkseagreen4, key=1, label=strings, style=dashed];
m1_1973 -> m1_1976  [color=darkseagreen4, key=1, label=strings, style=dashed];
m1_2123 -> m1_2123  [color=darkseagreen4, key=1, label=pair, style=dashed];
m1_2534 -> m1_2536  [color=darkseagreen4, key=1, label=z, style=dashed];
m1_2534 -> m1_2537  [color=darkseagreen4, key=1, label=z, style=dashed];
m1_479 -> m1_482  [color=darkseagreen4, key=1, label=input, style=dashed];
m1_479 -> m1_483  [color=darkseagreen4, key=1, label=input, style=dashed];
m1_479 -> m1_484  [color=darkseagreen4, key=1, label=input, style=dashed];
m1_481 -> m1_483  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_481 -> m1_484  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_352 -> m1_352  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_461 -> m1_464  [color=darkseagreen4, key=1, label=input, style=dashed];
m1_461 -> m1_465  [color=darkseagreen4, key=1, label=input, style=dashed];
m1_461 -> m1_466  [color=darkseagreen4, key=1, label=input, style=dashed];
m1_463 -> m1_465  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_463 -> m1_466  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_1018 -> m1_1021  [color=darkseagreen4, key=1, label=store, style=dashed];
m1_1018 -> m1_1022  [color=darkseagreen4, key=1, label=store, style=dashed];
m1_1019 -> m1_1023  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m1_1020 -> m1_1022  [color=darkseagreen4, key=1, label=deserializedStore, style=dashed];
m1_4126 -> m1_4132  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_4126 -> m1_4137  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_4134 -> m1_4136  [color=darkseagreen4, key=1, label=v, style=dashed];
m1_4134 -> m1_4137  [color=darkseagreen4, key=1, label=v, style=dashed];
m1_4139 -> m1_4141  [color=darkseagreen4, key=1, label=v, style=dashed];
m1_4139 -> m1_4142  [color=darkseagreen4, key=1, label=v, style=dashed];
m1_1723 -> m1_1725  [color=darkseagreen4, key=1, label=newOptInClass, style=dashed];
m1_1723 -> m1_1726  [color=darkseagreen4, key=1, label=newOptInClass, style=dashed];
m1_4106 -> m1_4112  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_4106 -> m1_4117  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_4114 -> m1_4116  [color=darkseagreen4, key=1, label=v, style=dashed];
m1_4114 -> m1_4117  [color=darkseagreen4, key=1, label=v, style=dashed];
m1_4119 -> m1_4121  [color=darkseagreen4, key=1, label=v, style=dashed];
m1_4119 -> m1_4122  [color=darkseagreen4, key=1, label=v, style=dashed];
m1_1363 -> m1_1365  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_1363 -> m1_1366  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m1_3116 -> m1_3118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_3449 -> m1_3451  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m1_3449 -> m1_3452  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m1_3458 -> m1_3460  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m1_3458 -> m1_3461  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m1_2144 -> m1_2146  [color=darkseagreen4, key=1, label=newC1, style=dashed];
m1_2144 -> m1_2147  [color=darkseagreen4, key=1, label=newC1, style=dashed];
m1_2144 -> m1_2148  [color=darkseagreen4, key=1, label=newC1, style=dashed];
m1_305 -> m1_315  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_306 -> m1_314  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_310 -> m1_317  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_2757 -> m1_2759  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_2757 -> m1_2760  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_320 -> m1_323  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_2659 -> m1_2661  [color=darkseagreen4, key=1, label=obj, style=dashed];
m1_2659 -> m1_2662  [color=darkseagreen4, key=1, label=obj, style=dashed];
m1_1090 -> m1_1092  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_2499 -> m1_2501  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_890 -> m1_892  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_2266 -> m1_2275  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m1_2268 -> m1_2271  [color=darkseagreen4, key=1, label=dateTimeOffsetText, style=dashed];
m1_2272 -> m1_2274  [color=darkseagreen4, key=1, label=o2, style=dashed];
m1_2272 -> m1_2275  [color=darkseagreen4, key=1, label=o2, style=dashed];
m1_2272 -> m1_2276  [color=darkseagreen4, key=1, label=o2, style=dashed];
m1_2272 -> m1_2277  [color=darkseagreen4, key=1, label=o2, style=dashed];
m1_2272 -> m1_2278  [color=darkseagreen4, key=1, label=o2, style=dashed];
m1_2017 -> m1_2019  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m1_2303 -> m1_2305  [color=darkseagreen4, key=1, label=myA, style=dashed];
m1_2303 -> m1_2306  [color=darkseagreen4, key=1, label=myA, style=dashed];
m1_2303 -> m1_2307  [color=darkseagreen4, key=1, label=myA, style=dashed];
m1_2303 -> m1_2308  [color=darkseagreen4, key=1, label=myA, style=dashed];
m1_2303 -> m1_2309  [color=darkseagreen4, key=1, label=myA, style=dashed];
m1_2303 -> m1_2310  [color=darkseagreen4, key=1, label=myA, style=dashed];
m1_2303 -> m1_2311  [color=darkseagreen4, key=1, label=myA, style=dashed];
m1_2312 -> m1_2314  [color=darkseagreen4, key=1, label=myB, style=dashed];
m1_2312 -> m1_2315  [color=darkseagreen4, key=1, label=myB, style=dashed];
m1_2312 -> m1_2316  [color=darkseagreen4, key=1, label=myB, style=dashed];
m1_2312 -> m1_2317  [color=darkseagreen4, key=1, label=myB, style=dashed];
m1_2312 -> m1_2318  [color=darkseagreen4, key=1, label=myB, style=dashed];
m1_2312 -> m1_2319  [color=darkseagreen4, key=1, label=myB, style=dashed];
m1_2312 -> m1_2320  [color=darkseagreen4, key=1, label=myB, style=dashed];
m1_2312 -> m1_2321  [color=darkseagreen4, key=1, label=myB, style=dashed];
m1_2312 -> m1_2322  [color=darkseagreen4, key=1, label=myB, style=dashed];
m1_2312 -> m1_2323  [color=darkseagreen4, key=1, label=myB, style=dashed];
m1_2312 -> m1_2324  [color=darkseagreen4, key=1, label=myB, style=dashed];
m1_2312 -> m1_2325  [color=darkseagreen4, key=1, label=myB, style=dashed];
m1_2312 -> m1_2326  [color=darkseagreen4, key=1, label=myB, style=dashed];
m1_2312 -> m1_2327  [color=darkseagreen4, key=1, label=myB, style=dashed];
m1_2312 -> m1_2328  [color=darkseagreen4, key=1, label=myB, style=dashed];
m1_2312 -> m1_2329  [color=darkseagreen4, key=1, label=myB, style=dashed];
m1_2312 -> m1_2330  [color=darkseagreen4, key=1, label=myB, style=dashed];
m1_2570 -> m1_2572  [color=darkseagreen4, key=1, label=deserializeObject, style=dashed];
m1_1893 -> m1_1897  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1894 -> m1_1896  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_784 -> m1_786  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_784 -> m1_787  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_784 -> m1_788  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_784 -> m1_789  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_784 -> m1_790  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m1_3559 -> m1_3561  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_1425 -> m1_1430  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m1_1425 -> m1_1431  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m1_1429 -> m1_1431  [color=darkseagreen4, key=1, label=m2, style=dashed];
m1_2040 -> m1_2042  [color=darkseagreen4, key=1, label=results, style=dashed];
m1_2041 -> m1_2044  [color=darkseagreen4, key=1, label=searchResults, style=dashed];
m1_2041 -> m1_2045  [color=darkseagreen4, key=1, label=searchResults, style=dashed];
m1_2041 -> m1_2046  [color=darkseagreen4, key=1, label=searchResults, style=dashed];
m1_2041 -> m1_2047  [color=darkseagreen4, key=1, label=searchResults, style=dashed];
m1_1858 -> m1_1860  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_1858 -> m1_1861  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_1858 -> m1_1862  [color=darkseagreen4, key=1, label=l, style=dashed];
m1_3839 -> m1_3841  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_3839 -> m1_3842  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_3839 -> m1_3843  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_3839 -> m1_3844  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_1159 -> m1_1162  [color=darkseagreen4, key=1, label=dataContractResult, style=dashed];
m1_1160 -> m1_1162  [color=darkseagreen4, key=1, label=jsonNetResult, style=dashed];
m1_3785 -> m1_3787  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_3572 -> m1_3575  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3572 -> m1_3578  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3575 -> m1_3577  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_3574 -> m1_3578  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_863 -> m1_865  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_3725 -> m1_3725  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m1_3726 -> m1_3726  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m1_4181 -> m1_4187  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_4181 -> m1_4192  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_4189 -> m1_4191  [color=darkseagreen4, key=1, label=v, style=dashed];
m1_4189 -> m1_4192  [color=darkseagreen4, key=1, label=v, style=dashed];
m1_1879 -> m1_1883  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1880 -> m1_1882  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1590 -> m1_1594  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_875 -> m1_877  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_2960 -> m1_2964  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2960 -> m1_2965  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2960 -> m1_2966  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2960 -> m1_2967  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2960 -> m1_2968  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_2963 -> m1_2965  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_2963 -> m1_2966  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_2963 -> m1_2967  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_2963 -> m1_2968  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_1355 -> m1_1357  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_2414 -> m1_2417  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_2414 -> m1_2418  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_2415 -> m1_2417  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_766 -> m1_770  [color=darkseagreen4, key=1, label=ratio, style=dashed];
m1_770 -> m1_770  [color=darkseagreen4, key=1, label=ratio, style=dashed];
m1_771 -> m1_771  [color=darkseagreen4, key=1, label=ratio, style=dashed];
m1_4145 -> m1_4151  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_2108 -> m1_2110  [color=darkseagreen4, key=1, label=dic, style=dashed];
m1_2108 -> m1_2111  [color=darkseagreen4, key=1, label=dic, style=dashed];
m1_2108 -> m1_2112  [color=darkseagreen4, key=1, label=dic, style=dashed];
m1_1218 -> m1_1220  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m1_1218 -> m1_1221  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m1_1218 -> m1_1222  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m1_1218 -> m1_1223  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m1_1218 -> m1_1224  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m1_1218 -> m1_1225  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m1_1865 -> m1_1869  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1866 -> m1_1868  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1872 -> m1_1876  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1873 -> m1_1875  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_164 -> m1_168  [color=darkseagreen4, key=1, label=foo1, style=dashed];
m1_164 -> m1_169  [color=darkseagreen4, key=1, label=foo1, style=dashed];
m1_164 -> m1_170  [color=darkseagreen4, key=1, label=foo1, style=dashed];
m1_164 -> m1_171  [color=darkseagreen4, key=1, label=foo1, style=dashed];
m1_167 -> m1_169  [color=darkseagreen4, key=1, label=foo2, style=dashed];
m1_167 -> m1_170  [color=darkseagreen4, key=1, label=foo2, style=dashed];
m1_167 -> m1_171  [color=darkseagreen4, key=1, label=foo2, style=dashed];
m1_3291 -> m1_3293  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_3291 -> m1_3294  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_3291 -> m1_3295  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_3296 -> m1_3298  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_3296 -> m1_3299  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_3296 -> m1_3300  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_1967 -> m1_1969  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_3230 -> m1_3233  [color=darkseagreen4, key=1, label=dict, style=dashed];
m1_2780 -> m1_2782  [color=darkseagreen4, key=1, label=commentTestClass, style=dashed];
m1_2780 -> m1_2783  [color=darkseagreen4, key=1, label=commentTestClass, style=dashed];
m1_3475 -> m1_3477  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_3478 -> m1_3480  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m1_3478 -> m1_3481  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m1_1750 -> m1_1752  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_1750 -> m1_1753  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_2235 -> m1_2237  [color=darkseagreen4, key=1, label=newModelStateDictionary, style=dashed];
m1_1690 -> m1_1692  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_1690 -> m1_1693  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_1690 -> m1_1694  [color=darkseagreen4, key=1, label=o, style=dashed];
m1_3506 -> m1_3511  [color=darkseagreen4, key=1, label=T, style=dashed];
m1_3508 -> m1_3511  [color=darkseagreen4, key=1, label=stringWriter, style=dashed];
m1_3508 -> m1_3512  [color=darkseagreen4, key=1, label=stringWriter, style=dashed];
m1_3509 -> m1_3511  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_1936 -> m1_1940  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1937 -> m1_1939  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_4154 -> m1_4160  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_497 -> m1_501  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_498 -> m1_500  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1251 -> m1_1253  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m1_1251 -> m1_1254  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m1_1251 -> m1_1255  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m1_1251 -> m1_1256  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m1_1251 -> m1_1257  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m1_110 -> m1_112  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1047 -> m1_1049  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_1047 -> m1_1050  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_2116 -> m1_2118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_4099 -> m1_4103  [color=darkseagreen4, key=1, label=originalUri, style=dashed];
m1_2245 -> m1_2254  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m1_2247 -> m1_2250  [color=darkseagreen4, key=1, label=dateTimeOffsetText, style=dashed];
m1_2251 -> m1_2253  [color=darkseagreen4, key=1, label=o2, style=dashed];
m1_2251 -> m1_2254  [color=darkseagreen4, key=1, label=o2, style=dashed];
m1_2251 -> m1_2255  [color=darkseagreen4, key=1, label=o2, style=dashed];
m1_2251 -> m1_2256  [color=darkseagreen4, key=1, label=o2, style=dashed];
m1_2251 -> m1_2257  [color=darkseagreen4, key=1, label=o2, style=dashed];
m1_2729 -> m1_2731  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_3157 -> m1_3159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_904 -> m1_907  [color=darkseagreen4, key=1, label=dictStore, style=dashed];
m1_904 -> m1_913  [color=darkseagreen4, key=1, label=dictStore, style=dashed];
m1_905 -> m1_907  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_905 -> m1_908  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_908 -> m1_908  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_910 -> m1_913  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m1_911 -> m1_915  [color=darkseagreen4, key=1, label=ms, style=dashed];
m1_912 -> m1_914  [color=darkseagreen4, key=1, label=streamWriter, style=dashed];
m1_916 -> m1_918  [color=darkseagreen4, key=1, label=stopWatch, style=dashed];
m1_2360 -> m1_2367  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m1_2360 -> m1_2368  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m1_2363 -> m1_2365  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_2366 -> m1_2368  [color=darkseagreen4, key=1, label=newTestObject, style=dashed];
m1_2366 -> m1_2369  [color=darkseagreen4, key=1, label=newTestObject, style=dashed];
m1_1448 -> m1_1450  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_1054 -> m1_1065  [color=darkseagreen4, key=1, label=dateValue, style=dashed];
m1_1055 -> m1_1060  [color=darkseagreen4, key=1, label=testDictionary, style=dashed];
m1_1058 -> m1_1060  [color=darkseagreen4, key=1, label=ms, style=dashed];
m1_3092 -> m1_3094  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1914 -> m1_1918  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_1915 -> m1_1917  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_2398 -> m1_2401  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_2398 -> m1_2402  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_2399 -> m1_2401  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_1035 -> m1_1037  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m1_1035 -> m1_1038  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m1_1035 -> m1_1039  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m1_1035 -> m1_1040  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m1_1035 -> m1_1041  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m1_1229 -> m1_1236  [color=darkseagreen4, key=1, label=d, style=dashed];
m1_103 -> m1_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_1068 -> m1_1074  [color=darkseagreen4, key=1, label=executorObject, style=dashed];
m1_1073 -> m1_1075  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m1_1073 -> m1_1076  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m1_1073 -> m1_1077  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m1_1073 -> m1_1078  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m1_3258 -> m1_3260  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_197 -> m1_199  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_4444 -> m1_176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired", style=dashed];
m1_4445 -> m1_293  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_4447 -> m1_315  [color=darkseagreen4, key=1, label=c1, style=dashed];
m1_4448 -> m1_323  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver", style=dashed];
m1_4452 -> m1_501  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4454 -> m1_687  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m1_4456 -> m1_785  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m1_4456 -> m1_786  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m1_4456 -> m1_787  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m1_4456 -> m1_788  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m1_4456 -> m1_789  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m1_4456 -> m1_790  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m1_4456 -> m1_796  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m1_4457 -> m1_936  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast", style=dashed];
m1_4459 -> m1_1154  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4463 -> m1_1738  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", style=dashed];
m1_4464 -> m1_1842  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4465 -> m1_1869  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4466 -> m1_1876  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4467 -> m1_1883  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4468 -> m1_1890  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4469 -> m1_1897  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4470 -> m1_1904  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4471 -> m1_1911  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4472 -> m1_1918  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4473 -> m1_1932  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4474 -> m1_1940  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4476 -> m1_2080  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", style=dashed];
m1_4476 -> m1_2083  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", style=dashed];
m1_4476 -> m1_2086  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", style=dashed];
m1_4478 -> m1_2123  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor", style=dashed];
m1_4481 -> m1_2178  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m1_4481 -> m1_2183  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m1_4481 -> m1_2186  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m1_4481 -> m1_2189  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m1_4481 -> m1_2193  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m1_4481 -> m1_2197  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m1_4481 -> m1_2201  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m1_4481 -> m1_2205  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m1_4481 -> m1_2215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m1_4481 -> m1_2219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m1_4481 -> m1_2223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m1_4481 -> m1_2227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m1_4485 -> m1_2439  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4487 -> m1_2489  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey", style=dashed];
m1_4489 -> m1_2555  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4490 -> m1_2652  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector", style=dashed];
m1_4494 -> m1_2688  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", style=dashed];
m1_4499 -> m1_2908  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", style=dashed];
m1_4503 -> m1_3133  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4504 -> m1_3187  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter", style=dashed];
m1_4504 -> m1_3188  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter", style=dashed];
m1_4505 -> m1_3398  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_4506 -> m1_3413  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_4507 -> m1_3428  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_4508 -> m1_3553  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4509 -> m1_3553  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_4510 -> m1_3578  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4511 -> m1_3578  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_4512 -> m1_3623  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m1_4513 -> m1_3623  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_4517 -> m1_3805  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_4520 -> m1_3921  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter", style=dashed];
m1_4520 -> m1_3925  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter", style=dashed];
m1_4520 -> m1_3931  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter", style=dashed];
m1_4520 -> m1_3967  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter", style=dashed];
m1_4521 -> m1_4030  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m1_4521 -> m1_4032  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m1_4521 -> m1_4034  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m1_4521 -> m1_4036  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m1_4521 -> m1_4059  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m1_4521 -> m1_4062  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m1_4521 -> m1_4065  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m1_4524 -> m1_4265  [color=darkseagreen4, key=1, label=JsonMessage, style=dashed];
m1_4525 -> m1_4324  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_4526 -> m1_4336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ChildClassWithProtectedOverridePlusJsonProperty", style=dashed];
m1_4532 -> m1_4413  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject", style=dashed];
m1_4532 -> m1_4414  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject", style=dashed];
m1_4532 -> m1_4415  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject", style=dashed];
m1_4532 -> m1_4416  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject", style=dashed];
m1_4532 -> m1_4417  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject", style=dashed];
m1_4532 -> m1_4419  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject", style=dashed];
m1_4532 -> m1_4420  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject", style=dashed];
m1_4532 -> m1_4421  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject", style=dashed];
m1_4532 -> m1_4422  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject", style=dashed];
m1_4532 -> m1_4423  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject", style=dashed];
m1_4532 -> m1_4424  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject", style=dashed];
m1_4532 -> m1_4425  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject", style=dashed];
m1_4532 -> m1_4426  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject", style=dashed];
m1_4532 -> m1_4427  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject", style=dashed];
m1_4532 -> m1_4428  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject", style=dashed];
m1_4532 -> m1_4429  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject", style=dashed];
m1_4532 -> m1_4430  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.ISerializableTestObject", style=dashed];
m2_126 -> m2_131  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m2_126 -> m2_133  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m2_126 -> m2_136  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m2_29 -> m2_31  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m2_30 -> m2_32  [color=darkseagreen4, key=1, label=chars, style=dashed];
m2_50 -> m2_54  [color=darkseagreen4, key=1, label=fixedHex, style=dashed];
m2_51 -> m2_62  [color=darkseagreen4, key=1, label=bytes, style=dashed];
m2_53 -> m2_61  [color=darkseagreen4, key=1, label=offset, style=dashed];
m2_61 -> m2_61  [color=darkseagreen4, key=1, label=offset, style=dashed];
m2_16 -> m2_19  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_17 -> m2_19  [color=darkseagreen4, key=1, label=ms, style=dashed];
m2_92 -> m2_102  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_41 -> m2_43  [color=darkseagreen4, key=1, label=bool, style=dashed];
m2_42 -> m2_45  [color=darkseagreen4, key=1, label=hex, style=dashed];
m2_105 -> m2_110  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m2_105 -> m2_112  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m2_105 -> m2_115  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m2_95 -> m2_97  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_88 -> m2_90  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_141 -> m2_39  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestFixtureBase", style=dashed];
m2_141 -> m2_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestFixtureBase", style=dashed];
}
