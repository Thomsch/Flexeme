digraph  {
n664 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", span="1632-1632", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)"];
n691 [file="DefaultContractResolver.cs.dot", label="NamingStrategy != null", span="1634-1634", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)"];
n692 [file="DefaultContractResolver.cs.dot", label="return NamingStrategy.GetPropertyName(propertyName, false);", span="1636-1636", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)"];
n693 [file="DefaultContractResolver.cs.dot", label="return propertyName;", span="1639-1639", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)"];
n663 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.NamingStrategy.GetPropertyName(string, bool)", span="57-57", cluster="Newtonsoft.Json.Serialization.NamingStrategy.GetPropertyName(string, bool)"];
n694 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", span="1632-1632", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)"];
n672 [file="DefaultContractResolver.cs.dot", label="Entry lambda expression", span="1601-1601", cluster="lambda expression"];
n673 [file="DefaultContractResolver.cs.dot", label="(bool)shouldSerializeCall(o)", span="1601-1601", cluster="lambda expression"];
n674 [file="DefaultContractResolver.cs.dot", label="Exit lambda expression", span="1601-1601", cluster="lambda expression"];
n209 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", span="27-27", cluster="Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])"];
n675 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, \\nbool)", span="1604-1604", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, \\nbool)"];
n676 [file="DefaultContractResolver.cs.dot", label="MemberInfo specifiedMember = member.DeclaringType.GetProperty(member.Name + JsonTypeReflector.SpecifiedPostfix, BindingFlags.Instance | \\nBindingFlags.Public | BindingFlags.NonPublic)", span="1606-1606", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, \\nbool)"];
n678 [file="DefaultContractResolver.cs.dot", label="specifiedMember = member.DeclaringType.GetField(member.Name + JsonTypeReflector.SpecifiedPostfix, BindingFlags.Instance | BindingFlags.Public | \\nBindingFlags.NonPublic)", span="1609-1609", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, \\nbool)"];
n682 [file="DefaultContractResolver.cs.dot", label="property.GetIsSpecified = o => (bool)specifiedPropertyGet(o)", span="1619-1619", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, \\nbool)"];
n683 [file="DefaultContractResolver.cs.dot", label="ReflectionUtils.CanSetMemberValue(specifiedMember, allowNonPublicAccess, false)", span="1621-1621", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, \\nbool)"];
n684 [file="DefaultContractResolver.cs.dot", label="property.SetIsSpecified = JsonTypeReflector.ReflectionDelegateFactory.CreateSet<object>(specifiedMember)", span="1623-1623", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, \\nbool)"];
n677 [file="DefaultContractResolver.cs.dot", label="specifiedMember == null", span="1607-1607", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, \\nbool)"];
n679 [file="DefaultContractResolver.cs.dot", label="specifiedMember == null || ReflectionUtils.GetMemberUnderlyingType(specifiedMember) != typeof(bool)", span="1612-1612", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, \\nbool)"];
n681 [file="DefaultContractResolver.cs.dot", label="Func<object, object> specifiedPropertyGet = JsonTypeReflector.ReflectionDelegateFactory.CreateGet<object>(specifiedMember)", span="1617-1617", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, \\nbool)"];
n686 [file="DefaultContractResolver.cs.dot", label="Entry System.Type.GetProperty(string, System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetProperty(string, System.Reflection.BindingFlags)"];
n687 [file="DefaultContractResolver.cs.dot", label="Entry System.Type.GetField(string, System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetField(string, System.Reflection.BindingFlags)"];
n680 [file="DefaultContractResolver.cs.dot", label="return;", span="1614-1614", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, \\nbool)"];
n186 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", span="433-433", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)"];
n685 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, \\nbool)", span="1604-1604", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, \\nbool)"];
n689 [file="DefaultContractResolver.cs.dot", label="(bool)specifiedPropertyGet(o)", span="1619-1619", cluster="lambda expression"];
n189 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateGet<T>(System.Reflection.MemberInfo)", span="38-38", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateGet<T>(System.Reflection.MemberInfo)"];
n190 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", span="590-590", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)"];
n191 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.MemberInfo)", span="59-59", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.MemberInfo)"];
n688 [file="DefaultContractResolver.cs.dot", label="Entry lambda expression", span="1619-1619", cluster="lambda expression"];
n690 [file="DefaultContractResolver.cs.dot", label="Exit lambda expression", span="1619-1619", cluster="lambda expression"];
n206 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.Func<T, TResult>.Invoke(T)", span="3037-3037", cluster="Newtonsoft.Json.Serialization.Func<T, TResult>.Invoke(T)"];
n695 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", span="1647-1647", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)"];
n696 [file="DefaultContractResolver.cs.dot", label="NamingStrategy != null", span="1649-1649", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)"];
n697 [file="DefaultContractResolver.cs.dot", label="return NamingStrategy.GetExtensionDataName(extensionDataName);", span="1651-1651", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)"];
n698 [file="DefaultContractResolver.cs.dot", label="return extensionDataName;", span="1654-1654", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)"];
n699 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", span="1647-1647", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)"];
n700 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.NamingStrategy.GetExtensionDataName(string)", span="72-72", cluster="Newtonsoft.Json.Serialization.NamingStrategy.GetExtensionDataName(string)"];
n701 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", span="1662-1662", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)"];
n702 [file="DefaultContractResolver.cs.dot", label="NamingStrategy != null", span="1664-1664", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)"];
n703 [file="DefaultContractResolver.cs.dot", label="return NamingStrategy.GetDictionaryKey(dictionaryKey);", span="1666-1666", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)"];
n704 [file="DefaultContractResolver.cs.dot", label="return ResolvePropertyName(dictionaryKey);", span="1669-1669", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)"];
n705 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", span="1662-1662", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)"];
n115 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.NamingStrategy.GetDictionaryKey(string)", span="87-87", cluster="Newtonsoft.Json.Serialization.NamingStrategy.GetDictionaryKey(string)"];
n706 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", span="1677-1677", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)"];
n707 [file="DefaultContractResolver.cs.dot", label="return ResolvePropertyName(propertyName);", span="1681-1681", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)"];
n708 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", span="1677-1677", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)"];
n0 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="175-175", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()"];
n1 [file="DefaultContractResolver.cs.dot", label="DefaultMembersSearchFlags = BindingFlags.Instance | BindingFlags.Public", span="182-182", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()"];
n2 [file="DefaultContractResolver.cs.dot", label="_contractCache = new ThreadSafeStore<Type, JsonContract>(CreateContract)", span="185-185", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()"];
n3 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="175-175", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()"];
n4;
n5 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="193-193", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)"];
n6 [file="DefaultContractResolver.cs.dot", label="type == null", span="195-195", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)"];
n7 [file="DefaultContractResolver.cs.dot", label="throw new ArgumentNullException(nameof(type));", span="197-197", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)"];
n8 [file="DefaultContractResolver.cs.dot", label="return _contractCache.Get(type);", span="200-200", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)"];
n9 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="193-193", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)"];
n10 [file="DefaultContractResolver.cs.dot", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
n11;
n12 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", span="60-60", cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)"];
n197 [file="DefaultContractResolver.cs.dot", label="Entry lambda expression", span="499-514", cluster="lambda expression"];
n198 [file="DefaultContractResolver.cs.dot", label="object dictionary = getExtensionDataDictionary(o)", span="501-501", cluster="lambda expression"];
n203 [file="DefaultContractResolver.cs.dot", label="setExtensionDataDictionary(o, dictionary)", span="510-510", cluster="lambda expression"];
n204 [file="DefaultContractResolver.cs.dot", label="setExtensionDataDictionaryValue(dictionary, key, value)", span="513-513", cluster="lambda expression"];
n199 [file="DefaultContractResolver.cs.dot", label="dictionary == null", span="502-502", cluster="lambda expression"];
n200 [file="DefaultContractResolver.cs.dot", label="setExtensionDataDictionary == null", span="504-504", cluster="lambda expression"];
n201 [file="DefaultContractResolver.cs.dot", label="throw new JsonSerializationException(''Cannot set value onto extension data member '{0}'. The extension data collection is null \\nand it cannot be set.''.FormatWith(CultureInfo.InvariantCulture, member.Name));", span="506-506", cluster="lambda expression"];
n202 [file="DefaultContractResolver.cs.dot", label="dictionary = createExtensionDataDictionary()", span="509-509", cluster="lambda expression"];
n205 [file="DefaultContractResolver.cs.dot", label="Exit lambda expression", span="499-514", cluster="lambda expression"];
n96 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52", cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)"];
n97 [file="DefaultContractResolver.cs.dot", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)"];
n207 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.Func<TResult>.Invoke()", span="3035-3035", cluster="Newtonsoft.Json.Serialization.Func<TResult>.Invoke()"];
n208 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.Action<T1, T2>.Invoke(T1, T2)", span="3047-3047", cluster="Newtonsoft.Json.Serialization.Action<T1, T2>.Invoke(T1, T2)"];
n210 [file="DefaultContractResolver.cs.dot", label="Entry lambda expression", span="525-534", cluster="lambda expression"];
n211 [file="DefaultContractResolver.cs.dot", label="object dictionary = getExtensionDataDictionary(o)", span="527-527", cluster="lambda expression"];
n212 [file="DefaultContractResolver.cs.dot", label="dictionary == null", span="528-528", cluster="lambda expression"];
n214 [file="DefaultContractResolver.cs.dot", label="return (IEnumerable<KeyValuePair<object, object>>)createEnumerableWrapper(dictionary);", span="533-533", cluster="lambda expression"];
n213 [file="DefaultContractResolver.cs.dot", label="return null;", span="530-530", cluster="lambda expression"];
n215 [file="DefaultContractResolver.cs.dot", label="Exit lambda expression", span="525-534", cluster="lambda expression"];
n216 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", span="31-31", cluster="Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])"];
n217 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(\\nSystem.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", span="548-548", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(\\nSystem.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)"];
n218 [file="DefaultContractResolver.cs.dot", label="ValidationUtils.ArgumentNotNull(e, nameof(e))", span="550-550", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(\\nSystem.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)"];
n219 [file="DefaultContractResolver.cs.dot", label="_e = e", span="551-551", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(\\nSystem.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)"];
n221 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="31-31", cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)"];
n220 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(\\nSystem.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", span="548-548", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(\\nSystem.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)"];
n47 [file="DefaultContractResolver.cs.dot", label="Entry lambda expression", span="220-220", cluster="lambda expression"];
n48 [file="DefaultContractResolver.cs.dot", label="!ReflectionUtils.IsIndexedProperty(m)", span="220-220", cluster="lambda expression"];
n49 [file="DefaultContractResolver.cs.dot", label="Exit lambda expression", span="220-220", cluster="lambda expression"];
n50;
n109 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", span="592-592", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n247 [file="DefaultContractResolver.cs.dot", label="IEnumerable<ConstructorInfo> constructors = objectType.GetConstructors()", span="594-594", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n255 [file="DefaultContractResolver.cs.dot", label="JsonProperty memberProperty = MatchProperty(memberProperties, parameterInfo.Name, parameterInfo.ParameterType)", span="606-606", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n195 [file="DefaultContractResolver.cs.dot", label="Entry System.Type.GetConstructors()", span="0-0", cluster="System.Type.GetConstructors()"];
n248 [file="DefaultContractResolver.cs.dot", label="IEnumerator<ConstructorInfo> en = constructors.GetEnumerator()", span="595-595", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n249 [file="DefaultContractResolver.cs.dot", label="en.MoveNext()", span="596-596", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n250 [file="DefaultContractResolver.cs.dot", label="ConstructorInfo constructor = en.Current", span="598-598", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n251 [file="DefaultContractResolver.cs.dot", label="!en.MoveNext()", span="599-599", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n241 [file="DefaultContractResolver.cs.dot", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()"];
n259 [file="DefaultContractResolver.cs.dot", label="return null;", span="618-618", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n242 [file="DefaultContractResolver.cs.dot", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0", cluster="System.Collections.IEnumerator.MoveNext()"];
n252 [file="DefaultContractResolver.cs.dot", label="ParameterInfo[] parameters = constructor.GetParameters()", span="601-601", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n258 [file="DefaultContractResolver.cs.dot", label="return constructor;", span="613-613", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n253 [file="DefaultContractResolver.cs.dot", label="parameters.Length > 0", span="602-602", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n254 [file="DefaultContractResolver.cs.dot", label=parameters, span="604-604", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n261 [file="DefaultContractResolver.cs.dot", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()"];
n256 [file="DefaultContractResolver.cs.dot", label="memberProperty == null || memberProperty.Writable", span="607-607", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n262 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, \\nstring, System.Type)", span="676-676", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, \\nSystem.Type)"];
n257 [file="DefaultContractResolver.cs.dot", label="return null;", span="609-609", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n260 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", span="592-592", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n51 [file="DefaultContractResolver.cs.dot", label="Entry lambda expression", span="232-232", cluster="lambda expression"];
n52 [file="DefaultContractResolver.cs.dot", label="!ReflectionUtils.IsIndexedProperty(m)", span="232-232", cluster="lambda expression"];
n53 [file="DefaultContractResolver.cs.dot", label="Exit lambda expression", span="232-232", cluster="lambda expression"];
n54 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", span="316-316", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n55 [file="DefaultContractResolver.cs.dot", label="Array.IndexOf(BlacklistedTypeNames, objectType.FullName) != -1", span="320-320", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n56 [file="DefaultContractResolver.cs.dot", label="throw new JsonSerializationException(''Unable to serialize instance of '{0}'.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="322-322", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n57 [file="DefaultContractResolver.cs.dot", label="JsonObjectContract contract = new JsonObjectContract(objectType)", span="325-325", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n95 [file="DefaultContractResolver.cs.dot", label="Entry System.Array.IndexOf<T>(T[], T)", span="0-0", cluster="System.Array.IndexOf<T>(T[], T)"];
n94 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", span="316-316", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n58 [file="DefaultContractResolver.cs.dot", label="InitializeContract(contract)", span="326-326", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n61 [file="DefaultContractResolver.cs.dot", label="contract.MemberSerialization = JsonTypeReflector.GetObjectMemberSerialization(contract.NonNullableUnderlyingType, ignoreSerializableAttribute)", span="335-335", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n62 [file="DefaultContractResolver.cs.dot", label="contract.Properties.AddRange(CreateProperties(contract.NonNullableUnderlyingType, contract.MemberSerialization))", span="336-336", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n64 [file="DefaultContractResolver.cs.dot", label="JsonObjectAttribute attribute = JsonTypeReflector.GetCachedAttribute<JsonObjectAttribute>(contract.NonNullableUnderlyingType)", span="340-340", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n66 [file="DefaultContractResolver.cs.dot", label="contract.ItemRequired = attribute._itemRequired", span="343-343", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n67 [file="DefaultContractResolver.cs.dot", label="contract.ItemNullValueHandling = attribute._itemNullValueHandling", span="344-344", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n73 [file="DefaultContractResolver.cs.dot", label="contract.ExtensionDataNameResolver = extensionDataNameResolver", span="358-358", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n74 [file="DefaultContractResolver.cs.dot", label="contract.IsInstantiable", span="360-360", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n75 [file="DefaultContractResolver.cs.dot", label="ConstructorInfo overrideConstructor = GetAttributeConstructor(contract.NonNullableUnderlyingType)", span="362-362", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n77 [file="DefaultContractResolver.cs.dot", label="contract.OverrideCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(overrideConstructor)", span="367-367", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n78 [file="DefaultContractResolver.cs.dot", label="contract.CreatorParameters.AddRange(CreateConstructorParameters(overrideConstructor, contract.Properties))", span="368-368", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n79 [file="DefaultContractResolver.cs.dot", label="contract.MemberSerialization == MemberSerialization.Fields", span="370-370", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n80 [file="DefaultContractResolver.cs.dot", label="contract.DefaultCreator == null || contract.DefaultCreatorNonPublic", span="381-381", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n81 [file="DefaultContractResolver.cs.dot", label="ConstructorInfo constructor = GetParameterizedConstructor(contract.NonNullableUnderlyingType)", span="383-383", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n83 [file="DefaultContractResolver.cs.dot", label="contract.ParameterizedCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(constructor)", span="386-386", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n84 [file="DefaultContractResolver.cs.dot", label="contract.CreatorParameters.AddRange(CreateConstructorParameters(constructor, contract.Properties))", span="387-387", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n85 [file="DefaultContractResolver.cs.dot", label="contract.NonNullableUnderlyingType.IsValueType()", span="390-390", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n86 [file="DefaultContractResolver.cs.dot", label="ConstructorInfo constructor = GetImmutableConstructor(contract.NonNullableUnderlyingType, contract.Properties)", span="394-394", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n88 [file="DefaultContractResolver.cs.dot", label="contract.OverrideCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(constructor)", span="397-397", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n89 [file="DefaultContractResolver.cs.dot", label="contract.CreatorParameters.AddRange(CreateConstructorParameters(constructor, contract.Properties))", span="398-398", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n90 [file="DefaultContractResolver.cs.dot", label="MemberInfo extensionDataMember = GetExtensionDataMemberForType(contract.NonNullableUnderlyingType)", span="403-403", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n92 [file="DefaultContractResolver.cs.dot", label="SetExtensionDataDelegates(contract, extensionDataMember)", span="406-406", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n93 [file="DefaultContractResolver.cs.dot", label="return contract;", span="409-409", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n98 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", span="168-168", cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)"];
n59 [file="DefaultContractResolver.cs.dot", label="bool ignoreSerializableAttribute", span="328-328", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n99 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", span="753-753", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)"];
n60 [file="DefaultContractResolver.cs.dot", label="ignoreSerializableAttribute = true", span="332-332", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n37 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", span="151-151", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)"];
n63 [file="DefaultContractResolver.cs.dot", label="Func<string, string> extensionDataNameResolver = null", span="338-338", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n100 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="1314-1314", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)"];
n101 [file="DefaultContractResolver.cs.dot", label="Entry System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", span="68-68", cluster="System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)"];
n71 [file="DefaultContractResolver.cs.dot", label="extensionDataNameResolver == null", span="353-353", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n65 [file="DefaultContractResolver.cs.dot", label="attribute != null", span="341-341", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n68 [file="DefaultContractResolver.cs.dot", label="attribute.NamingStrategyType != null", span="346-346", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n69 [file="DefaultContractResolver.cs.dot", label="NamingStrategy namingStrategy = JsonTypeReflector.GetContainerNamingStrategy(attribute)", span="348-348", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n102 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)", span="66-66", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)"];
n70 [file="DefaultContractResolver.cs.dot", label="extensionDataNameResolver = s => namingStrategy.GetDictionaryKey(s)", span="349-349", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n113 [file="DefaultContractResolver.cs.dot", label="namingStrategy.GetDictionaryKey(s)", span="349-349", cluster="lambda expression"];
n103 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", span="212-212", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)"];
n72 [file="DefaultContractResolver.cs.dot", label="extensionDataNameResolver = ResolveExtensionDataName", span="355-355", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n76 [file="DefaultContractResolver.cs.dot", label="overrideConstructor != null", span="365-365", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n104 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", span="568-568", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)"];
n105 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", span="75-75", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)"];
n106 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", span="650-650", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n82 [file="DefaultContractResolver.cs.dot", label="constructor != null", span="384-384", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n107 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", span="621-621", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)"];
n108 [file="DefaultContractResolver.cs.dot", label="Entry System.Type.IsValueType()", span="547-547", cluster="System.Type.IsValueType()"];
n87 [file="DefaultContractResolver.cs.dot", label="constructor != null", span="395-395", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n91 [file="DefaultContractResolver.cs.dot", label="extensionDataMember != null", span="404-404", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n110 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)", span="412-412", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)"];
n111 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)", span="461-461", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)"];
n116 [file="DefaultContractResolver.cs.dot", label="IEnumerable<MemberInfo> members = GetClassHierarchyForType(type).SelectMany(baseType =>\n            {\n                IList<MemberInfo> \\nm = new List<MemberInfo>();\n                m.AddRange(baseType.GetProperties(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | \\nBindingFlags.DeclaredOnly));\n                m.AddRange(baseType.GetFields(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | \\nBindingFlags.DeclaredOnly));\n\n                return m;\n            })", span="414-421", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)"];
n117 [file="DefaultContractResolver.cs.dot", label="MemberInfo extensionDataMember = members.LastOrDefault(m =>\n            {\n                MemberTypes memberType = m.MemberType();\n                \\nif (memberType != MemberTypes.Property && memberType != MemberTypes.Field)\n                {\n                    return false;\n                }\n\n                // \\nlast instance of attribute wins on type if there are multiple\n                if (!m.IsDefined(typeof(JsonExtensionDataAttribute), \\nfalse))\n                {\n                    return false;\n                }\n\n                if (!ReflectionUtils.CanReadMemberValue(\\nm, true))\n                {\n                    throw new JsonException(''Invalid extension data attribute on '{0}'. Member '{\\n1}' must have a getter.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(m.DeclaringType), m.Name));\n                }\n\n                \\nType t = ReflectionUtils.GetMemberUnderlyingType(m);\n\n                if (ReflectionUtils.ImplementsGenericDefinition(t, typeof(\\nIDictionary<,>), out Type dictionaryType))\n                {\n                    Type keyType = dictionaryType.GetGenericArguments()[\\n0];\n                    Type valueType = dictionaryType.GetGenericArguments()[1];\n\n                    if (keyType.IsAssignableFrom(\\ntypeof(string)) && valueType.IsAssignableFrom(typeof(JToken)))\n                    {\n                        return true;\n                    }\n                }\n\n                \\nthrow new JsonException(''Invalid extension data attribute on '{0}'. Member '{1}' type must implement IDictionary<string, JToken>\\n.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(m.DeclaringType), m.Name));\n            })", span="423-456", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)"];
n120 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", span="946-946", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)"];
n121;
n123 [file="DefaultContractResolver.cs.dot", label="Entry lambda expression", span="414-421", cluster="lambda expression"];
n118 [file="DefaultContractResolver.cs.dot", label="return extensionDataMember;", span="458-458", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)"];
n122;
n132 [file="DefaultContractResolver.cs.dot", label="Entry lambda expression", span="423-456", cluster="lambda expression"];
n119 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)", span="412-412", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)"];
n158 [file="DefaultContractResolver.cs.dot", label="JsonExtensionDataAttribute extensionDataAttribute = ReflectionUtils.GetAttribute<JsonExtensionDataAttribute>(member)", span="463-463", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)"];
n161 [file="DefaultContractResolver.cs.dot", label="Type t = ReflectionUtils.GetMemberUnderlyingType(member)", span="469-469", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)"];
n169 [file="DefaultContractResolver.cs.dot", label="Func<object, object> getExtensionDataDictionary = JsonTypeReflector.ReflectionDelegateFactory.CreateGet<object>(member)", span="488-488", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)"];
n171 [file="DefaultContractResolver.cs.dot", label="Action<object, object> setExtensionDataDictionary = (ReflectionUtils.CanSetMemberValue(member, true, false))\n                 ? \\nJsonTypeReflector.ReflectionDelegateFactory.CreateSet<object>(member)\n                 : null", span="492-494", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)"];
n175 [file="DefaultContractResolver.cs.dot", label="ExtensionDataSetter extensionDataSetter = (o, key, value) =>\n                {\n                    object dictionary = getExtensionDataDictionary(\\no);\n                    if (dictionary == null)\n                    {\n                        if (setExtensionDataDictionary == \\nnull)\n                        {\n                            throw new JsonSerializationException(''Cannot set value onto extension \\ndata member '{0}'. The extension data collection is null and it cannot be set.''.FormatWith(CultureInfo.InvariantCulture, member.Name));\n                        }\n\n                        \\ndictionary = createExtensionDataDictionary();\n                        setExtensionDataDictionary(o, dictionary);\n                    }\n\n                    \\nsetExtensionDataDictionaryValue(dictionary, key, value);\n                }", span="499-514", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)"];
n176 [file="DefaultContractResolver.cs.dot", label="contract.ExtensionDataSetter = extensionDataSetter", span="516-516", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)"];
n182 [file="DefaultContractResolver.cs.dot", label="contract.ExtensionDataGetter = extensionDataGetter", span="536-536", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)"];
n183 [file="DefaultContractResolver.cs.dot", label="contract.ExtensionDataValueType = valueType", span="539-539", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)"];
n185 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object)", span="714-714", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object)"];
n159 [file="DefaultContractResolver.cs.dot", label="extensionDataAttribute == null", span="464-464", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)"];
n170 [file="DefaultContractResolver.cs.dot", label="extensionDataAttribute.ReadData", span="490-490", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)"];
n177 [file="DefaultContractResolver.cs.dot", label="extensionDataAttribute.WriteData", span="519-519", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)"];
n160 [file="DefaultContractResolver.cs.dot", label="return;", span="466-466", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)"];
n184 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)", span="461-461", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)"];
n162 [file="DefaultContractResolver.cs.dot", label="ReflectionUtils.ImplementsGenericDefinition(t, typeof(IDictionary<,>), out Type dictionaryType)", span="471-471", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)"];
n166 [file="DefaultContractResolver.cs.dot", label="ReflectionUtils.IsGenericDefinition(t, typeof(IDictionary<,>))", span="479-479", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)"];
n168 [file="DefaultContractResolver.cs.dot", label="createdType = t", span="485-485", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)"];
n173 [file="DefaultContractResolver.cs.dot", label="MethodInfo addMethod = t.GetMethod(''Add'', new[] { keyType, valueType })", span="496-496", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)"];
n163 [file="DefaultContractResolver.cs.dot", label="Type keyType = dictionaryType.GetGenericArguments()[0]", span="473-473", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)"];
n155;
n164 [file="DefaultContractResolver.cs.dot", label="Type valueType = dictionaryType.GetGenericArguments()[1]", span="474-474", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)"];
n167 [file="DefaultContractResolver.cs.dot", label="createdType = typeof(Dictionary<,>).MakeGenericType(keyType, valueType)", span="481-481", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)"];
n178 [file="DefaultContractResolver.cs.dot", label="Type enumerableWrapper = typeof(EnumerableDictionaryWrapper<,>).MakeGenericType(keyType, valueType)", span="521-521", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)"];
n156;
n165 [file="DefaultContractResolver.cs.dot", label="Type createdType", span="476-476", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)"];
n187 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", span="277-277", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)"];
n188 [file="DefaultContractResolver.cs.dot", label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0", cluster="System.Type.MakeGenericType(params System.Type[])"];
n172 [file="DefaultContractResolver.cs.dot", label="Func<object> createExtensionDataDictionary = JsonTypeReflector.ReflectionDelegateFactory.CreateDefaultConstructor<object>(createdType)", span="495-495", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)"];
n181 [file="DefaultContractResolver.cs.dot", label="ExtensionDataGetter extensionDataGetter = o =>\n                {\n                    object dictionary = getExtensionDataDictionary(\\no);\n                    if (dictionary == null)\n                    {\n                        return null;\n                    }\n\n                    \\nreturn (IEnumerable<KeyValuePair<object, object>>)createEnumerableWrapper(dictionary);\n                }", span="525-534", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)"];
n192 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", span="76-76", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)"];
n193 [file="DefaultContractResolver.cs.dot", label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0", cluster="System.Type.GetMethod(string, System.Type[])"];
n174 [file="DefaultContractResolver.cs.dot", label="MethodCall<object, object> setExtensionDataDictionaryValue = JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(\\naddMethod)", span="497-497", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)"];
n194 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", span="74-74", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)"];
n179 [file="DefaultContractResolver.cs.dot", label="ConstructorInfo constructors = enumerableWrapper.GetConstructors().First()", span="522-522", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)"];
n196 [file="DefaultContractResolver.cs.dot", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="391-391", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()"];
n180 [file="DefaultContractResolver.cs.dot", label="ObjectConstructor<object> createEnumerableWrapper = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(constructors)", span="523-523", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.MemberInfo)"];
n112 [file="DefaultContractResolver.cs.dot", label="Entry lambda expression", span="349-349", cluster="lambda expression"];
n114 [file="DefaultContractResolver.cs.dot", label="Exit lambda expression", span="349-349", cluster="lambda expression"];
n413 [file="DefaultContractResolver.cs.dot", label="List<Type> ret = new List<Type>()", span="948-948", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)"];
n414 [file="DefaultContractResolver.cs.dot", label="Type current = type", span="950-950", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)"];
n416 [file="DefaultContractResolver.cs.dot", label="ret.Add(current)", span="953-953", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)"];
n418 [file="DefaultContractResolver.cs.dot", label="ret.Reverse()", span="958-958", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)"];
n419 [file="DefaultContractResolver.cs.dot", label="return ret;", span="959-959", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)"];
n40 [file="DefaultContractResolver.cs.dot", label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()"];
n415 [file="DefaultContractResolver.cs.dot", label="current != null && current != typeof(object)", span="951-951", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)"];
n417 [file="DefaultContractResolver.cs.dot", label="current = current.BaseType()", span="954-954", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)"];
n44 [file="DefaultContractResolver.cs.dot", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)"];
n421 [file="DefaultContractResolver.cs.dot", label="Entry System.Type.BaseType()", span="171-171", cluster="System.Type.BaseType()"];
n422 [file="DefaultContractResolver.cs.dot", label="Entry System.Collections.Generic.List<T>.Reverse()", span="0-0", cluster="System.Collections.Generic.List<T>.Reverse()"];
n420 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", span="946-946", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)"];
n124 [file="DefaultContractResolver.cs.dot", label="IList<MemberInfo> m = new List<MemberInfo>()", span="416-416", cluster="lambda expression"];
n125 [file="DefaultContractResolver.cs.dot", label="m.AddRange(baseType.GetProperties(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly))", span="417-417", cluster="lambda expression"];
n126 [file="DefaultContractResolver.cs.dot", label="m.AddRange(baseType.GetFields(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly))", span="418-418", cluster="lambda expression"];
n127 [file="DefaultContractResolver.cs.dot", label="return m;", span="420-420", cluster="lambda expression"];
n129;
n130;
n131;
n128 [file="DefaultContractResolver.cs.dot", label="Exit lambda expression", span="414-421", cluster="lambda expression"];
n133 [file="DefaultContractResolver.cs.dot", label="MemberTypes memberType = m.MemberType()", span="425-425", cluster="lambda expression"];
n136 [file="DefaultContractResolver.cs.dot", label="!m.IsDefined(typeof(JsonExtensionDataAttribute), false)", span="432-432", cluster="lambda expression"];
n138 [file="DefaultContractResolver.cs.dot", label="!ReflectionUtils.CanReadMemberValue(m, true)", span="437-437", cluster="lambda expression"];
n139 [file="DefaultContractResolver.cs.dot", label="throw new JsonException(''Invalid extension data attribute on '{0}'. Member '{1}' must have a getter.''.FormatWith(CultureInfo.InvariantCulture, \\nGetClrTypeFullName(m.DeclaringType), m.Name));", span="439-439", cluster="lambda expression"];
n140 [file="DefaultContractResolver.cs.dot", label="Type t = ReflectionUtils.GetMemberUnderlyingType(m)", span="442-442", cluster="lambda expression"];
n146 [file="DefaultContractResolver.cs.dot", label="throw new JsonException(''Invalid extension data attribute on '{0}'. Member '{1}' type must implement IDictionary<string, JToken>\\n.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(m.DeclaringType), m.Name));", span="455-455", cluster="lambda expression"];
n134 [file="DefaultContractResolver.cs.dot", label="memberType != MemberTypes.Property && memberType != MemberTypes.Field", span="426-426", cluster="lambda expression"];
n148;
n135 [file="DefaultContractResolver.cs.dot", label="return false;", span="428-428", cluster="lambda expression"];
n147 [file="DefaultContractResolver.cs.dot", label="Exit lambda expression", span="423-456", cluster="lambda expression"];
n137 [file="DefaultContractResolver.cs.dot", label="return false;", span="434-434", cluster="lambda expression"];
n149;
n150;
n151 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.JsonException.JsonException(string)", span="54-54", cluster="Newtonsoft.Json.JsonException.JsonException(string)"];
n152;
n153;
n141 [file="DefaultContractResolver.cs.dot", label="ReflectionUtils.ImplementsGenericDefinition(t, typeof(IDictionary<,>), out Type dictionaryType)", span="444-444", cluster="lambda expression"];
n154;
n142 [file="DefaultContractResolver.cs.dot", label="Type keyType = dictionaryType.GetGenericArguments()[0]", span="446-446", cluster="lambda expression"];
n143 [file="DefaultContractResolver.cs.dot", label="Type valueType = dictionaryType.GetGenericArguments()[1]", span="447-447", cluster="lambda expression"];
n144 [file="DefaultContractResolver.cs.dot", label="keyType.IsAssignableFrom(typeof(string)) && valueType.IsAssignableFrom(typeof(JToken))", span="449-449", cluster="lambda expression"];
n145 [file="DefaultContractResolver.cs.dot", label="return true;", span="451-451", cluster="lambda expression"];
n157 [file="DefaultContractResolver.cs.dot", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)"];
n13 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", span="208-208", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n14 [file="DefaultContractResolver.cs.dot", label="bool ignoreSerializableAttribute", span="210-210", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n16 [file="DefaultContractResolver.cs.dot", label="MemberSerialization memberSerialization = JsonTypeReflector.GetObjectMemberSerialization(objectType, ignoreSerializableAttribute)", span="217-217", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n17 [file="DefaultContractResolver.cs.dot", label="IEnumerable<MemberInfo> allMembers = ReflectionUtils.GetFieldsAndProperties(objectType, BindingFlags.Public | BindingFlags.NonPublic | \\nBindingFlags.Instance | BindingFlags.Static)\n                .Where(m => !ReflectionUtils.IsIndexedProperty(m))", span="219-220", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n20 [file="DefaultContractResolver.cs.dot", label="List<MemberInfo> defaultMembers = ReflectionUtils.GetFieldsAndProperties(objectType, DefaultMembersSearchFlags)\n                    \\n.Where(m => !ReflectionUtils.IsIndexedProperty(m)).ToList()", span="231-232", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n15 [file="DefaultContractResolver.cs.dot", label="ignoreSerializableAttribute = true", span="214-214", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n19 [file="DefaultContractResolver.cs.dot", label="memberSerialization != MemberSerialization.Fields", span="224-224", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n29 [file="DefaultContractResolver.cs.dot", label="memberSerialization == MemberSerialization.Fields && member.MemberType() == MemberTypes.Field", span="263-263", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n38 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", span="631-631", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)"];
n18 [file="DefaultContractResolver.cs.dot", label="List<MemberInfo> serializableMembers = new List<MemberInfo>()", span="222-222", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n21 [file="DefaultContractResolver.cs.dot", label=allMembers, span="235-235", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n31 [file="DefaultContractResolver.cs.dot", label=allMembers, span="283-283", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n39;
n24 [file="DefaultContractResolver.cs.dot", label="serializableMembers.Add(member)", span="243-243", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n26 [file="DefaultContractResolver.cs.dot", label="serializableMembers.Add(member)", span="251-251", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n28 [file="DefaultContractResolver.cs.dot", label="serializableMembers.Add(member)", span="255-255", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n30 [file="DefaultContractResolver.cs.dot", label="serializableMembers.Add(member)", span="265-265", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n34 [file="DefaultContractResolver.cs.dot", label="serializableMembers.Add(member)", span="287-287", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n35 [file="DefaultContractResolver.cs.dot", label="return serializableMembers;", span="292-292", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n41 [file="DefaultContractResolver.cs.dot", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="817-817", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()"];
n23 [file="DefaultContractResolver.cs.dot", label="defaultMembers.Contains(member)", span="240-240", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n22 [file="DefaultContractResolver.cs.dot", label="SerializeCompilerGeneratedMembers || !member.IsDefined(typeof(CompilerGeneratedAttribute), true)", span="238-238", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n25 [file="DefaultContractResolver.cs.dot", label="JsonTypeReflector.GetAttribute<JsonPropertyAttribute>(member) != null", span="249-249", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n27 [file="DefaultContractResolver.cs.dot", label="JsonTypeReflector.GetAttribute<JsonRequiredAttribute>(member) != null", span="253-253", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n42 [file="DefaultContractResolver.cs.dot", label="Entry System.Reflection.MemberInfo.IsDefined(System.Type, bool)", span="0-0", cluster="System.Reflection.MemberInfo.IsDefined(System.Type, bool)"];
n43 [file="DefaultContractResolver.cs.dot", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Contains(T)"];
n45 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", span="417-417", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)"];
n46 [file="DefaultContractResolver.cs.dot", label="Entry System.Reflection.MemberInfo.MemberType()", span="107-107", cluster="System.Reflection.MemberInfo.MemberType()"];
n32 [file="DefaultContractResolver.cs.dot", label="member is FieldInfo", span="285-285", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n33 [file="DefaultContractResolver.cs.dot", label="field && !field.IsStatic", span="285-285", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n36 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", span="208-208", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n319 [file="DefaultContractResolver.cs.dot", label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetCachedAttribute<JsonContainerAttribute>(contract.NonNullableUnderlyingType)", span="755-755", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)"];
n321 [file="DefaultContractResolver.cs.dot", label="contract.IsReference = containerAttribute._isReference", span="758-758", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)"];
n322 [file="DefaultContractResolver.cs.dot", label="contract.Converter = ResolveContractConverter(contract.NonNullableUnderlyingType)", span="772-772", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)"];
n323 [file="DefaultContractResolver.cs.dot", label="contract.InternalConverter = JsonSerializer.GetMatchingConverter(BuiltInConverters, contract.NonNullableUnderlyingType)", span="775-775", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)"];
n324 [file="DefaultContractResolver.cs.dot", label="contract.IsInstantiable\n                && (ReflectionUtils.HasDefaultConstructor(contract.CreatedType, true) || contract.CreatedType.IsValueType())", span="777-778", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)"];
n325 [file="DefaultContractResolver.cs.dot", label="contract.DefaultCreator = GetDefaultCreator(contract.CreatedType)", span="780-780", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)"];
n326 [file="DefaultContractResolver.cs.dot", label="contract.DefaultCreatorNonPublic = (!contract.CreatedType.IsValueType() &&\n                                                    \\nReflectionUtils.GetDefaultConstructor(contract.CreatedType) == null)", span="782-783", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)"];
n327 [file="DefaultContractResolver.cs.dot", label="ResolveCallbackMethods(contract, contract.NonNullableUnderlyingType)", span="786-786", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)"];
n320 [file="DefaultContractResolver.cs.dot", label="containerAttribute != null", span="756-756", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)"];
n312 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", span="740-740", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)"];
n329 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", span="1194-1194", cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)"];
n330 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", span="223-223", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)"];
n316 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", span="745-745", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)"];
n331 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", span="235-235", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)"];
n328 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", span="753-753", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)"];
n332 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="789-789", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)"];
n543 [file="DefaultContractResolver.cs.dot", label="List<MemberInfo> members = GetSerializableMembers(type)", span="1316-1316", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)"];
n547 [file="DefaultContractResolver.cs.dot", label="JsonPropertyCollection properties = new JsonPropertyCollection(type)", span="1324-1324", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)"];
n549 [file="DefaultContractResolver.cs.dot", label="JsonProperty property = CreateProperty(member, memberSerialization)", span="1328-1328", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)"];
n544 [file="DefaultContractResolver.cs.dot", label="members == null", span="1317-1317", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)"];
n548 [file="DefaultContractResolver.cs.dot", label=members, span="1326-1326", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)"];
n545 [file="DefaultContractResolver.cs.dot", label="throw new JsonSerializationException(''Null collection of serializable members returned.'');", span="1319-1319", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)"];
n546 [file="DefaultContractResolver.cs.dot", label="PropertyNameTable nameTable = GetNameTable()", span="1322-1322", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)"];
n556 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="1314-1314", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)"];
n551 [file="DefaultContractResolver.cs.dot", label=nameTable, span="1333-1333", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)"];
n552 [file="DefaultContractResolver.cs.dot", label="property.PropertyName = nameTable.Add(property.PropertyName)", span="1335-1335", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)"];
n557 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetNameTable()", span="1346-1346", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetNameTable()"];
n553 [file="DefaultContractResolver.cs.dot", label="properties.AddProperty(property)", span="1338-1338", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)"];
n554 [file="DefaultContractResolver.cs.dot", label="IList<JsonProperty> orderedProperties = properties.OrderBy(p => p.Order ?? -1).ToList()", span="1342-1342", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)"];
n278 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", span="46-46", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)"];
n550 [file="DefaultContractResolver.cs.dot", label="property != null", span="1330-1330", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)"];
n558 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", span="1385-1385", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
n559 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.PropertyNameTable.Add(string)", span="76-76", cluster="Newtonsoft.Json.Utilities.PropertyNameTable.Add(string)"];
n280 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", span="70-70", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)"];
n555 [file="DefaultContractResolver.cs.dot", label="return orderedProperties;", span="1343-1343", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)"];
n560;
n561;
n562 [file="DefaultContractResolver.cs.dot", label="Entry lambda expression", span="1342-1342", cluster="lambda expression"];
n230 [file="DefaultContractResolver.cs.dot", label="IEnumerator<ConstructorInfo> en = objectType.GetConstructors(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic)\\n.Where(c => c.IsDefined(typeof(JsonConstructorAttribute), true)).GetEnumerator()", span="570-570", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)"];
n236 [file="DefaultContractResolver.cs.dot", label="objectType == typeof(Version)", span="584-584", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)"];
n237 [file="DefaultContractResolver.cs.dot", label="return objectType.GetConstructor(new[] { typeof(int), typeof(int), typeof(int), typeof(int) });", span="586-586", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)"];
n231 [file="DefaultContractResolver.cs.dot", label="en.MoveNext()", span="572-572", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)"];
n232 [file="DefaultContractResolver.cs.dot", label="ConstructorInfo conInfo = en.Current", span="574-574", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)"];
n233 [file="DefaultContractResolver.cs.dot", label="en.MoveNext()", span="575-575", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)"];
n240 [file="DefaultContractResolver.cs.dot", label="Entry System.Type.GetConstructors(System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetConstructors(System.Reflection.BindingFlags)"];
n244 [file="DefaultContractResolver.cs.dot", label="Entry lambda expression", span="570-570", cluster="lambda expression"];
n235 [file="DefaultContractResolver.cs.dot", label="return conInfo;", span="580-580", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)"];
n234 [file="DefaultContractResolver.cs.dot", label="throw new JsonException(''Multiple constructors with the JsonConstructorAttribute.'');", span="577-577", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)"];
n239 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", span="568-568", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)"];
n238 [file="DefaultContractResolver.cs.dot", label="return null;", span="589-589", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)"];
n243 [file="DefaultContractResolver.cs.dot", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0", cluster="System.Type.GetConstructor(System.Type[])"];
n268 [file="DefaultContractResolver.cs.dot", label="ParameterInfo[] constructorParameters = constructor.GetParameters()", span="652-652", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n269 [file="DefaultContractResolver.cs.dot", label="JsonPropertyCollection parameterCollection = new JsonPropertyCollection(constructor.DeclaringType)", span="654-654", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n271 [file="DefaultContractResolver.cs.dot", label="JsonProperty matchingMemberProperty = MatchProperty(memberProperties, parameterInfo.Name, parameterInfo.ParameterType)", span="658-658", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n270 [file="DefaultContractResolver.cs.dot", label=constructorParameters, span="656-656", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n275 [file="DefaultContractResolver.cs.dot", label="parameterCollection.AddProperty(property)", span="668-668", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n276 [file="DefaultContractResolver.cs.dot", label="return parameterCollection;", span="673-673", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n272 [file="DefaultContractResolver.cs.dot", label="matchingMemberProperty != null || parameterInfo.Name != null", span="662-662", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n273 [file="DefaultContractResolver.cs.dot", label="JsonProperty property = CreatePropertyFromConstructorParameter(matchingMemberProperty, parameterInfo)", span="664-664", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n274 [file="DefaultContractResolver.cs.dot", label="property != null", span="666-666", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n279 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", span="701-701", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)"];
n277 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", span="650-650", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n263 [file="DefaultContractResolver.cs.dot", label="ConstructorInfo[] constructors = objectType.GetConstructors(BindingFlags.Public | BindingFlags.Instance)", span="635-635", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)"];
n264 [file="DefaultContractResolver.cs.dot", label="constructors.Length == 1", span="636-636", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)"];
n265 [file="DefaultContractResolver.cs.dot", label="return constructors[0];", span="638-638", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)"];
n266 [file="DefaultContractResolver.cs.dot", label="return null;", span="641-641", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)"];
n267 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", span="621-621", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)"];
n222 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", span="554-554", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()"];
n223 [file="DefaultContractResolver.cs.dot", label=_e, span="556-556", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()"];
n224 [file="DefaultContractResolver.cs.dot", label="yield return new KeyValuePair<object, object>(item.Key, item.Value);", span="558-558", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()"];
n225 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", span="554-554", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()"];
n226 [file="DefaultContractResolver.cs.dot", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)"];
n227 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", span="562-562", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()"];
n228 [file="DefaultContractResolver.cs.dot", label="return GetEnumerator();", span="564-564", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()"];
n229 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", span="562-562", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()"];
n245 [file="DefaultContractResolver.cs.dot", label="c.IsDefined(typeof(JsonConstructorAttribute), true)", span="570-570", cluster="lambda expression"];
n246 [file="DefaultContractResolver.cs.dot", label="Exit lambda expression", span="570-570", cluster="lambda expression"];
n281 [file="DefaultContractResolver.cs.dot", label="name == null", span="680-680", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, \\nSystem.Type)"];
n283 [file="DefaultContractResolver.cs.dot", label="JsonProperty property = properties.GetClosestMatchProperty(name)", span="685-685", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, \\nSystem.Type)"];
n284 [file="DefaultContractResolver.cs.dot", label="property == null || property.PropertyType != type", span="687-687", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, \\nSystem.Type)"];
n282 [file="DefaultContractResolver.cs.dot", label="return null;", span="682-682", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, \\nSystem.Type)"];
n287 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, \\nSystem.Type)", span="676-676", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, \\nSystem.Type)"];
n286 [file="DefaultContractResolver.cs.dot", label="return property;", span="692-692", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, \\nSystem.Type)"];
n288 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", span="125-125", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)"];
n285 [file="DefaultContractResolver.cs.dot", label="return null;", span="689-689", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, \\nSystem.Type)"];
n289 [file="DefaultContractResolver.cs.dot", label="JsonProperty property = new JsonProperty()", span="703-703", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)"];
n290 [file="DefaultContractResolver.cs.dot", label="property.PropertyType = parameterInfo.ParameterType", span="704-704", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)"];
n291 [file="DefaultContractResolver.cs.dot", label="property.AttributeProvider = new ReflectionAttributeProvider(parameterInfo)", span="705-705", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)"];
n292 [file="DefaultContractResolver.cs.dot", label="SetPropertySettingsFromAttributes(property, parameterInfo, parameterInfo.Name, parameterInfo.Member.DeclaringType, MemberSerialization.OptOut, \\nout _)", span="707-707", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)"];
n295 [file="DefaultContractResolver.cs.dot", label="matchingMemberProperty != null", span="713-713", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)"];
n296 [file="DefaultContractResolver.cs.dot", label="property.PropertyName = (property.PropertyName != parameterInfo.Name) ? property.PropertyName : matchingMemberProperty.PropertyName", span="715-715", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)"];
n297 [file="DefaultContractResolver.cs.dot", label="property.Converter = property.Converter ?? matchingMemberProperty.Converter", span="716-716", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)"];
n298 [file="DefaultContractResolver.cs.dot", label="!property._hasExplicitDefaultValue && matchingMemberProperty._hasExplicitDefaultValue", span="718-718", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)"];
n299 [file="DefaultContractResolver.cs.dot", label="property.DefaultValue = matchingMemberProperty.DefaultValue", span="720-720", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)"];
n300 [file="DefaultContractResolver.cs.dot", label="property._required = property._required ?? matchingMemberProperty._required", span="723-723", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)"];
n301 [file="DefaultContractResolver.cs.dot", label="property.IsReference = property.IsReference ?? matchingMemberProperty.IsReference", span="724-724", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)"];
n302 [file="DefaultContractResolver.cs.dot", label="property.NullValueHandling = property.NullValueHandling ?? matchingMemberProperty.NullValueHandling", span="725-725", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)"];
n303 [file="DefaultContractResolver.cs.dot", label="property.DefaultValueHandling = property.DefaultValueHandling ?? matchingMemberProperty.DefaultValueHandling", span="726-726", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)"];
n304 [file="DefaultContractResolver.cs.dot", label="property.ReferenceLoopHandling = property.ReferenceLoopHandling ?? matchingMemberProperty.ReferenceLoopHandling", span="727-727", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)"];
n305 [file="DefaultContractResolver.cs.dot", label="property.ObjectCreationHandling = property.ObjectCreationHandling ?? matchingMemberProperty.ObjectCreationHandling", span="728-728", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)"];
n306 [file="DefaultContractResolver.cs.dot", label="property.TypeNameHandling = property.TypeNameHandling ?? matchingMemberProperty.TypeNameHandling", span="729-729", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)"];
n293 [file="DefaultContractResolver.cs.dot", label="property.Readable = false", span="709-709", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)"];
n294 [file="DefaultContractResolver.cs.dot", label="property.Writable = true", span="710-710", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)"];
n307 [file="DefaultContractResolver.cs.dot", label="return property;", span="732-732", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)"];
n309 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", span="38-38", cluster="Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()"];
n310 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.ReflectionAttributeProvider.ReflectionAttributeProvider(object)", span="43-43", cluster="Newtonsoft.Json.Serialization.ReflectionAttributeProvider.ReflectionAttributeProvider(object)"];
n311;
n308 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", span="701-701", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)"];
n313 [file="DefaultContractResolver.cs.dot", label="return JsonTypeReflector.GetJsonConverter(objectType);", span="742-742", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)"];
n314 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", span="740-740", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)"];
n315 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", span="178-178", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)"];
n317 [file="DefaultContractResolver.cs.dot", label="return JsonTypeReflector.ReflectionDelegateFactory.CreateDefaultConstructor<object>(createdType);", span="747-747", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)"];
n318 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", span="745-745", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)"];
n333 [file="DefaultContractResolver.cs.dot", label="GetCallbackMethodsForType(\n                t,\n                out List<SerializationCallback> onSerializing,\n                \\nout List<SerializationCallback> onSerialized,\n                out List<SerializationCallback> onDeserializing,\n                \\nout List<SerializationCallback> onDeserialized,\n                out List<SerializationErrorCallback> onError)", span="791-797", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)"];
n335 [file="DefaultContractResolver.cs.dot", label="contract.OnSerializingCallbacks.AddRange(onSerializing)", span="801-801", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)"];
n337 [file="DefaultContractResolver.cs.dot", label="contract.OnSerializedCallbacks.AddRange(onSerialized)", span="806-806", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)"];
n339 [file="DefaultContractResolver.cs.dot", label="contract.OnDeserializingCallbacks.AddRange(onDeserializing)", span="811-811", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)"];
n341 [file="DefaultContractResolver.cs.dot", label="contract.OnDeserializedCallbacks.AddRange(onDeserialized)", span="816-816", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)"];
n343 [file="DefaultContractResolver.cs.dot", label="contract.OnErrorCallbacks.AddRange(onError)", span="821-821", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)"];
n334 [file="DefaultContractResolver.cs.dot", label="onSerializing != null", span="799-799", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)"];
n345;
n336 [file="DefaultContractResolver.cs.dot", label="onSerialized != null", span="804-804", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)"];
n338 [file="DefaultContractResolver.cs.dot", label="onDeserializing != null", span="809-809", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)"];
n340 [file="DefaultContractResolver.cs.dot", label="onDeserialized != null", span="814-814", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)"];
n342 [file="DefaultContractResolver.cs.dot", label="onError != null", span="819-819", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)"];
n344 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="789-789", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)"];
n346 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", span="825-825", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n347 [file="DefaultContractResolver.cs.dot", label="onSerializing = null", span="827-827", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n352 [file="DefaultContractResolver.cs.dot", label="GetClassHierarchyForType(type)", span="833-833", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n348 [file="DefaultContractResolver.cs.dot", label="onSerialized = null", span="828-828", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n365 [file="DefaultContractResolver.cs.dot", label="onSerializing = onSerializing ?? new List<SerializationCallback>()", span="859-859", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n384 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", span="825-825", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n349 [file="DefaultContractResolver.cs.dot", label="onDeserializing = null", span="829-829", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n369 [file="DefaultContractResolver.cs.dot", label="onSerialized = onSerialized ?? new List<SerializationCallback>()", span="865-865", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n350 [file="DefaultContractResolver.cs.dot", label="onDeserialized = null", span="830-830", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n373 [file="DefaultContractResolver.cs.dot", label="onDeserializing = onDeserializing ?? new List<SerializationCallback>()", span="871-871", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n351 [file="DefaultContractResolver.cs.dot", label="onError = null", span="831-831", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n377 [file="DefaultContractResolver.cs.dot", label="onDeserialized = onDeserialized ?? new List<SerializationCallback>()", span="877-877", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n381 [file="DefaultContractResolver.cs.dot", label="onError = onError ?? new List<SerializationErrorCallback>()", span="883-883", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n353 [file="DefaultContractResolver.cs.dot", label="MethodInfo currentOnSerializing = null", span="836-836", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n358 [file="DefaultContractResolver.cs.dot", label="bool skipSerializing = ShouldSkipSerializing(baseType)", span="842-842", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n359 [file="DefaultContractResolver.cs.dot", label="bool skipDeserialized = ShouldSkipDeserialized(baseType)", span="843-843", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n360 [file="DefaultContractResolver.cs.dot", label="baseType.GetMethods(BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)", span="845-845", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n354 [file="DefaultContractResolver.cs.dot", label="MethodInfo currentOnSerialized = null", span="837-837", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n364 [file="DefaultContractResolver.cs.dot", label="!skipSerializing && IsValidCallback(method, parameters, typeof(OnSerializingAttribute), currentOnSerializing, ref prevAttributeType)", span="857-857", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n355 [file="DefaultContractResolver.cs.dot", label="MethodInfo currentOnDeserializing = null", span="838-838", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n368 [file="DefaultContractResolver.cs.dot", label="IsValidCallback(method, parameters, typeof(OnSerializedAttribute), currentOnSerialized, ref prevAttributeType)", span="863-863", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n356 [file="DefaultContractResolver.cs.dot", label="MethodInfo currentOnDeserialized = null", span="839-839", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n372 [file="DefaultContractResolver.cs.dot", label="IsValidCallback(method, parameters, typeof(OnDeserializingAttribute), currentOnDeserializing, ref prevAttributeType)", span="869-869", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n357 [file="DefaultContractResolver.cs.dot", label="MethodInfo currentOnError = null", span="840-840", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n376 [file="DefaultContractResolver.cs.dot", label="!skipDeserialized && IsValidCallback(method, parameters, typeof(OnDeserializedAttribute), currentOnDeserialized, ref prevAttributeType)", span="875-875", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n380 [file="DefaultContractResolver.cs.dot", label="IsValidCallback(method, parameters, typeof(OnErrorAttribute), currentOnError, ref prevAttributeType)", span="881-881", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n385 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", span="929-929", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)"];
n386 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", span="911-911", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)"];
n361 [file="DefaultContractResolver.cs.dot", label="method.ContainsGenericParameters", span="849-849", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n363 [file="DefaultContractResolver.cs.dot", label="ParameterInfo[] parameters = method.GetParameters()", span="855-855", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n366 [file="DefaultContractResolver.cs.dot", label="onSerializing.Add(JsonContract.CreateSerializationCallback(method))", span="860-860", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n367 [file="DefaultContractResolver.cs.dot", label="currentOnSerializing = method", span="861-861", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n370 [file="DefaultContractResolver.cs.dot", label="onSerialized.Add(JsonContract.CreateSerializationCallback(method))", span="866-866", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n371 [file="DefaultContractResolver.cs.dot", label="currentOnSerialized = method", span="867-867", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n374 [file="DefaultContractResolver.cs.dot", label="onDeserializing.Add(JsonContract.CreateSerializationCallback(method))", span="872-872", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n375 [file="DefaultContractResolver.cs.dot", label="currentOnDeserializing = method", span="873-873", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n378 [file="DefaultContractResolver.cs.dot", label="onDeserialized.Add(JsonContract.CreateSerializationCallback(method))", span="878-878", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n379 [file="DefaultContractResolver.cs.dot", label="currentOnDeserialized = method", span="879-879", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n382 [file="DefaultContractResolver.cs.dot", label="onError.Add(JsonContract.CreateSerializationErrorCallback(method))", span="884-884", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n383 [file="DefaultContractResolver.cs.dot", label="currentOnError = method", span="885-885", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n387 [file="DefaultContractResolver.cs.dot", label="Entry System.Type.GetMethods(System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetMethods(System.Reflection.BindingFlags)"];
n362 [file="DefaultContractResolver.cs.dot", label="Type prevAttributeType = null", span="854-854", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<\\nNewtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, \\nout System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n388 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", span="1251-1251", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)"];
n389 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonContract.CreateSerializationCallback(System.Reflection.MethodInfo)", span="306-306", cluster="Newtonsoft.Json.Serialization.JsonContract.CreateSerializationCallback(System.Reflection.MethodInfo)"];
n390 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonContract.CreateSerializationErrorCallback(System.Reflection.MethodInfo)", span="311-311", cluster="Newtonsoft.Json.Serialization.JsonContract.CreateSerializationErrorCallback(System.Reflection.MethodInfo)"];
n409 [file="DefaultContractResolver.cs.dot", label="IsConcurrentOrObservableCollection(t)", span="931-931", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)"];
n410 [file="DefaultContractResolver.cs.dot", label="return true;", span="933-933", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)"];
n411 [file="DefaultContractResolver.cs.dot", label="return false;", span="943-943", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)"];
n391 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)", span="891-891", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)"];
n412 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", span="929-929", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)"];
n405 [file="DefaultContractResolver.cs.dot", label="IsConcurrentOrObservableCollection(t)", span="914-914", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)"];
n406 [file="DefaultContractResolver.cs.dot", label="return true;", span="916-916", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)"];
n407 [file="DefaultContractResolver.cs.dot", label="return false;", span="926-926", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)"];
n408 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", span="911-911", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)"];
n516 [file="DefaultContractResolver.cs.dot", label="!method.IsDefined(attributeType, false)", span="1253-1253", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)"];
n518 [file="DefaultContractResolver.cs.dot", label="currentCallback != null", span="1258-1258", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)"];
n519 [file="DefaultContractResolver.cs.dot", label="throw new JsonException(''Invalid attribute. Both '{0}' and '{1}' in type '{2}' have '{3}'.''.FormatWith(CultureInfo.InvariantCulture, \\nmethod, currentCallback, GetClrTypeFullName(method.DeclaringType), attributeType));", span="1260-1260", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)"];
n520 [file="DefaultContractResolver.cs.dot", label="prevAttributeType != null", span="1263-1263", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)"];
n521 [file="DefaultContractResolver.cs.dot", label="throw new JsonException(''Invalid Callback. Method '{3}' in type '{2}' has both '{0}' and '{1}'.''.FormatWith(CultureInfo.InvariantCulture, \\nprevAttributeType, attributeType, GetClrTypeFullName(method.DeclaringType), method));", span="1265-1265", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)"];
n522 [file="DefaultContractResolver.cs.dot", label="method.IsVirtual", span="1268-1268", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)"];
n523 [file="DefaultContractResolver.cs.dot", label="throw new JsonException(''Virtual Method '{0}' of type '{1}' cannot be marked with '{2}' attribute.''.FormatWith(CultureInfo.InvariantCulture, \\nmethod, GetClrTypeFullName(method.DeclaringType), attributeType));", span="1270-1270", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)"];
n524 [file="DefaultContractResolver.cs.dot", label="method.ReturnType != typeof(void)", span="1273-1273", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)"];
n525 [file="DefaultContractResolver.cs.dot", label="throw new JsonException(''Serialization Callback '{1}' in type '{0}' must return void.''.FormatWith(CultureInfo.InvariantCulture, \\nGetClrTypeFullName(method.DeclaringType), method));", span="1275-1275", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)"];
n526 [file="DefaultContractResolver.cs.dot", label="attributeType == typeof(OnErrorAttribute)", span="1278-1278", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)"];
n527 [file="DefaultContractResolver.cs.dot", label="parameters == null || parameters.Length != 2 || parameters[0].ParameterType != typeof(StreamingContext) || parameters[1].ParameterType != \\ntypeof(ErrorContext)", span="1280-1280", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)"];
n528 [file="DefaultContractResolver.cs.dot", label="throw new JsonException(''Serialization Error Callback '{1}' in type '{0}' must have two parameters of type '{2}' and '{3}'.''.FormatWith(\\nCultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method, typeof(StreamingContext), typeof(ErrorContext)));", span="1282-1282", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)"];
n529 [file="DefaultContractResolver.cs.dot", label="parameters == null || parameters.Length != 1 || parameters[0].ParameterType != typeof(StreamingContext)", span="1287-1287", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)"];
n530 [file="DefaultContractResolver.cs.dot", label="throw new JsonException(''Serialization Callback '{1}' in type '{0}' must have a single parameter of type '{2}'.''.FormatWith(CultureInfo.InvariantCulture, \\nGetClrTypeFullName(method.DeclaringType), method, typeof(StreamingContext)));", span="1289-1289", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)"];
n531 [file="DefaultContractResolver.cs.dot", label="prevAttributeType = attributeType", span="1293-1293", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)"];
n517 [file="DefaultContractResolver.cs.dot", label="return false;", span="1255-1255", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)"];
n533 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", span="1251-1251", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)"];
n534 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", span="1298-1298", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)"];
n535 [file="DefaultContractResolver.cs.dot", label="Entry string.FormatWith(System.IFormatProvider, object, object, object, object)", span="62-62", cluster="string.FormatWith(System.IFormatProvider, object, object, object, object)"];
n536 [file="DefaultContractResolver.cs.dot", label="Entry string.FormatWith(System.IFormatProvider, object, object, object)", span="57-57", cluster="string.FormatWith(System.IFormatProvider, object, object, object)"];
n444 [file="DefaultContractResolver.cs.dot", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52", cluster="string.FormatWith(System.IFormatProvider, object, object)"];
n532 [file="DefaultContractResolver.cs.dot", label="return true;", span="1295-1295", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)"];
n392 [file="DefaultContractResolver.cs.dot", label="t.IsGenericType()", span="893-893", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)"];
n393 [file="DefaultContractResolver.cs.dot", label="Type definition = t.GetGenericTypeDefinition()", span="895-895", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)"];
n401 [file="DefaultContractResolver.cs.dot", label="return false;", span="908-908", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)"];
n403 [file="DefaultContractResolver.cs.dot", label="Entry System.Type.IsGenericType()", span="153-153", cluster="System.Type.IsGenericType()"];
n394 [file="DefaultContractResolver.cs.dot", label="definition.FullName", span="897-897", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)"];
n404 [file="DefaultContractResolver.cs.dot", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0", cluster="System.Type.GetGenericTypeDefinition()"];
n395 [file="DefaultContractResolver.cs.dot", label="''System.Collections.Concurrent.ConcurrentQueue`1''", span="899-899", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)"];
n396 [file="DefaultContractResolver.cs.dot", label="''System.Collections.Concurrent.ConcurrentStack`1''", span="900-900", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)"];
n397 [file="DefaultContractResolver.cs.dot", label="''System.Collections.Concurrent.ConcurrentBag`1''", span="901-901", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)"];
n398 [color=red, community=1, file="DefaultContractResolver.cs.dot", label="''System.Collections.Concurrent.ConcurrentDictionary`2''", span="902-902", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)"];
d398 [color=green, file="DefaultContractResolver.cs.dot", label="''System.Collections.Concurrent.ConcurrentDictionary`2''", span="902-902", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)", community=0];
n399 [file="DefaultContractResolver.cs.dot", label="''System.Collections.ObjectModel.ObservableCollection`1''", span="903-903", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)"];
n400 [file="DefaultContractResolver.cs.dot", label="return true;", span="904-904", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)"];
n402 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)", span="891-891", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)"];
n423 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", span="967-967", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n424 [file="DefaultContractResolver.cs.dot", label="JsonDictionaryContract contract = new JsonDictionaryContract(objectType)", span="969-969", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n426 [file="DefaultContractResolver.cs.dot", label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetAttribute<JsonContainerAttribute>(objectType)", span="972-972", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n425 [file="DefaultContractResolver.cs.dot", label="InitializeContract(contract)", span="970-970", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n429 [file="DefaultContractResolver.cs.dot", label="contract.DictionaryKeyResolver = s => namingStrategy.GetDictionaryKey(s)", span="976-976", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n430 [file="DefaultContractResolver.cs.dot", label="contract.DictionaryKeyResolver = ResolveDictionaryKey", span="980-980", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n431 [file="DefaultContractResolver.cs.dot", label="ConstructorInfo overrideConstructor = GetAttributeConstructor(contract.NonNullableUnderlyingType)", span="983-983", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n434 [file="DefaultContractResolver.cs.dot", label="Type expectedParameterType = (contract.DictionaryKeyType != null && contract.DictionaryValueType != null)\n                    ? \\ntypeof(IEnumerable<>).MakeGenericType(typeof(KeyValuePair<,>).MakeGenericType(contract.DictionaryKeyType, contract.DictionaryValueType))\n                    : \\ntypeof(IDictionary)", span="988-990", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n436 [file="DefaultContractResolver.cs.dot", label="contract.HasParameterizedCreator = false", span="994-994", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n438 [file="DefaultContractResolver.cs.dot", label="contract.HasParameterizedCreator = true", span="998-998", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n439 [file="DefaultContractResolver.cs.dot", label="throw new JsonException(''Constructor for '{0}' must have no parameters or a single parameter that implements '{1}'.''.FormatWith(\\nCultureInfo.InvariantCulture, contract.UnderlyingType, expectedParameterType));", span="1002-1002", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n440 [file="DefaultContractResolver.cs.dot", label="contract.OverrideCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(overrideConstructor)", span="1005-1005", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n441 [file="DefaultContractResolver.cs.dot", label="return contract;", span="1008-1008", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n443 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", span="112-112", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)"];
n427 [file="DefaultContractResolver.cs.dot", label="containerAttribute?.NamingStrategyType != null", span="973-973", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n428 [file="DefaultContractResolver.cs.dot", label="NamingStrategy namingStrategy = JsonTypeReflector.GetContainerNamingStrategy(containerAttribute)", span="975-975", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n446 [file="DefaultContractResolver.cs.dot", label="namingStrategy.GetDictionaryKey(s)", span="976-976", cluster="lambda expression"];
n432 [file="DefaultContractResolver.cs.dot", label="overrideConstructor != null", span="985-985", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n433 [file="DefaultContractResolver.cs.dot", label="ParameterInfo[] parameters = overrideConstructor.GetParameters()", span="987-987", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n435 [file="DefaultContractResolver.cs.dot", label="parameters.Length == 0", span="992-992", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n437 [file="DefaultContractResolver.cs.dot", label="parameters.Length == 1 && expectedParameterType.IsAssignableFrom(parameters[0].ParameterType)", span="996-996", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n442 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", span="967-967", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n445 [file="DefaultContractResolver.cs.dot", label="Entry lambda expression", span="976-976", cluster="lambda expression"];
n447 [file="DefaultContractResolver.cs.dot", label="Exit lambda expression", span="976-976", cluster="lambda expression"];
n448 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", span="1016-1016", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)"];
n449 [file="DefaultContractResolver.cs.dot", label="JsonArrayContract contract = new JsonArrayContract(objectType)", span="1018-1018", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)"];
n450 [file="DefaultContractResolver.cs.dot", label="InitializeContract(contract)", span="1019-1019", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)"];
n451 [file="DefaultContractResolver.cs.dot", label="ConstructorInfo overrideConstructor = GetAttributeConstructor(contract.NonNullableUnderlyingType)", span="1021-1021", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)"];
n454 [file="DefaultContractResolver.cs.dot", label="Type expectedParameterType = (contract.CollectionItemType != null)\n                    ? typeof(IEnumerable<>).MakeGenericType(\\ncontract.CollectionItemType)\n                    : typeof(IEnumerable)", span="1026-1028", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)"];
n456 [file="DefaultContractResolver.cs.dot", label="contract.HasParameterizedCreator = false", span="1032-1032", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)"];
n458 [file="DefaultContractResolver.cs.dot", label="contract.HasParameterizedCreator = true", span="1036-1036", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)"];
n459 [file="DefaultContractResolver.cs.dot", label="throw new JsonException(''Constructor for '{0}' must have no parameters or a single parameter that implements '{1}'.''.FormatWith(\\nCultureInfo.InvariantCulture, contract.UnderlyingType, expectedParameterType));", span="1040-1040", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)"];
n460 [file="DefaultContractResolver.cs.dot", label="contract.OverrideCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(overrideConstructor)", span="1043-1043", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)"];
n461 [file="DefaultContractResolver.cs.dot", label="return contract;", span="1046-1046", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)"];
n463 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="114-114", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n452 [file="DefaultContractResolver.cs.dot", label="overrideConstructor != null", span="1023-1023", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)"];
n453 [file="DefaultContractResolver.cs.dot", label="ParameterInfo[] parameters = overrideConstructor.GetParameters()", span="1025-1025", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)"];
n455 [file="DefaultContractResolver.cs.dot", label="parameters.Length == 0", span="1030-1030", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)"];
n457 [file="DefaultContractResolver.cs.dot", label="parameters.Length == 1 && expectedParameterType.IsAssignableFrom(parameters[0].ParameterType)", span="1034-1034", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)"];
n462 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", span="1016-1016", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)"];
n464 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", span="1054-1054", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)"];
n465 [file="DefaultContractResolver.cs.dot", label="JsonPrimitiveContract contract = new JsonPrimitiveContract(objectType)", span="1056-1056", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)"];
n466 [file="DefaultContractResolver.cs.dot", label="InitializeContract(contract)", span="1057-1057", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)"];
n467 [file="DefaultContractResolver.cs.dot", label="return contract;", span="1059-1059", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)"];
n469 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", span="42-42", cluster="Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)"];
n468 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", span="1054-1054", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)"];
n470 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", span="1067-1067", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)"];
n471 [file="DefaultContractResolver.cs.dot", label="JsonLinqContract contract = new JsonLinqContract(objectType)", span="1069-1069", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)"];
n472 [file="DefaultContractResolver.cs.dot", label="InitializeContract(contract)", span="1070-1070", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)"];
n473 [file="DefaultContractResolver.cs.dot", label="return contract;", span="1072-1072", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)"];
n475 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonLinqContract.JsonLinqContract(System.Type)", span="38-38", cluster="Newtonsoft.Json.Serialization.JsonLinqContract.JsonLinqContract(System.Type)"];
n474 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", span="1067-1067", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)"];
n476 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", span="1131-1131", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)"];
n477 [file="DefaultContractResolver.cs.dot", label="JsonStringContract contract = new JsonStringContract(objectType)", span="1133-1133", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)"];
n478 [file="DefaultContractResolver.cs.dot", label="InitializeContract(contract)", span="1134-1134", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)"];
n479 [file="DefaultContractResolver.cs.dot", label="return contract;", span="1136-1136", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)"];
n481 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonStringContract.JsonStringContract(System.Type)", span="38-38", cluster="Newtonsoft.Json.Serialization.JsonStringContract.JsonStringContract(System.Type)"];
n480 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", span="1131-1131", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)"];
n482 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", span="1144-1144", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n483 [file="DefaultContractResolver.cs.dot", label="IsJsonPrimitiveType(objectType)", span="1146-1146", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n484 [file="DefaultContractResolver.cs.dot", label="return CreatePrimitiveContract(objectType);", span="1148-1148", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n485 [file="DefaultContractResolver.cs.dot", label="Type t = ReflectionUtils.EnsureNotNullableType(objectType)", span="1151-1151", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n488 [file="DefaultContractResolver.cs.dot", label="return CreateObjectContract(objectType);", span="1156-1156", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n490 [file="DefaultContractResolver.cs.dot", label="return CreateArrayContract(objectType);", span="1161-1161", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n492 [file="DefaultContractResolver.cs.dot", label="return CreateDictionaryContract(objectType);", span="1166-1166", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n494 [file="DefaultContractResolver.cs.dot", label="return CreateLinqContract(objectType);", span="1171-1171", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n496 [file="DefaultContractResolver.cs.dot", label="return CreateDictionaryContract(objectType);", span="1176-1176", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n500 [file="DefaultContractResolver.cs.dot", label="return CreateStringContract(objectType);", span="1186-1186", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n501 [file="DefaultContractResolver.cs.dot", label="return CreateObjectContract(objectType);", span="1211-1211", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n503 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", span="1214-1214", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)"];
n502 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", span="1144-1144", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n486 [file="DefaultContractResolver.cs.dot", label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetCachedAttribute<JsonContainerAttribute>(t)", span="1152-1152", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n493 [file="DefaultContractResolver.cs.dot", label="t == typeof(JToken) || t.IsSubclassOf(typeof(JToken))", span="1169-1169", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n495 [file="DefaultContractResolver.cs.dot", label="CollectionUtils.IsDictionaryType(t)", span="1174-1174", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n497 [file="DefaultContractResolver.cs.dot", label="typeof(IEnumerable).IsAssignableFrom(t)", span="1179-1179", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n498 [file="DefaultContractResolver.cs.dot", label="return CreateArrayContract(t);", span="1181-1181", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n499 [file="DefaultContractResolver.cs.dot", label="CanConvertToString(t)", span="1184-1184", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n504 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", span="270-270", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)"];
n487 [file="DefaultContractResolver.cs.dot", label="containerAttribute is JsonObjectAttribute", span="1154-1154", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n489 [file="DefaultContractResolver.cs.dot", label="containerAttribute is JsonArrayAttribute", span="1159-1159", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n491 [file="DefaultContractResolver.cs.dot", label="containerAttribute is JsonDictionaryAttribute", span="1164-1164", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n505 [file="DefaultContractResolver.cs.dot", label="Entry System.Type.IsSubclassOf(System.Type)", span="0-0", cluster="System.Type.IsSubclassOf(System.Type)"];
n506 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", span="96-96", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)"];
n507 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", span="1234-1234", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)"];
n508 [file="DefaultContractResolver.cs.dot", label="PrimitiveTypeCode typeCode = ConvertUtils.GetTypeCode(t)", span="1216-1216", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)"];
n509 [file="DefaultContractResolver.cs.dot", label="return (typeCode != PrimitiveTypeCode.Empty && typeCode != PrimitiveTypeCode.Object);", span="1218-1218", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)"];
n511 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", span="187-187", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)"];
n510 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", span="1214-1214", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)"];
n512 [file="DefaultContractResolver.cs.dot", label="type == typeof(Type) || type.IsSubclassOf(typeof(Type))", span="1243-1243", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)"];
n513 [file="DefaultContractResolver.cs.dot", label="return true;", span="1245-1245", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)"];
n514 [file="DefaultContractResolver.cs.dot", label="return false;", span="1248-1248", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)"];
n515 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", span="1234-1234", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)"];
n537 [file="DefaultContractResolver.cs.dot", label="type.IsGenericTypeDefinition() || !type.ContainsGenericParameters()", span="1300-1300", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)"];
n538 [file="DefaultContractResolver.cs.dot", label="return type.FullName;", span="1302-1302", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)"];
n539 [file="DefaultContractResolver.cs.dot", label="return ''{0}.{1}''.FormatWith(CultureInfo.InvariantCulture, type.Namespace, type.Name);", span="1305-1305", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)"];
n541 [file="DefaultContractResolver.cs.dot", label="Entry System.Type.IsGenericTypeDefinition()", span="162-162", cluster="System.Type.IsGenericTypeDefinition()"];
n542 [file="DefaultContractResolver.cs.dot", label="Entry System.Type.ContainsGenericParameters()", span="135-135", cluster="System.Type.ContainsGenericParameters()"];
n540 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", span="1298-1298", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)"];
n565 [file="DefaultContractResolver.cs.dot", label="return _nameTable;", span="1348-1348", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetNameTable()"];
n566 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetNameTable()", span="1346-1346", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetNameTable()"];
n576 [file="DefaultContractResolver.cs.dot", label="JsonProperty property = new JsonProperty()", span="1387-1387", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
n577 [file="DefaultContractResolver.cs.dot", label="property.PropertyType = ReflectionUtils.GetMemberUnderlyingType(member)", span="1388-1388", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
n578 [file="DefaultContractResolver.cs.dot", label="property.DeclaringType = member.DeclaringType", span="1389-1389", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
n579 [file="DefaultContractResolver.cs.dot", label="property.ValueProvider = CreateMemberValueProvider(member)", span="1390-1390", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
n580 [file="DefaultContractResolver.cs.dot", label="property.AttributeProvider = new ReflectionAttributeProvider(member)", span="1391-1391", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
n581 [file="DefaultContractResolver.cs.dot", label="SetPropertySettingsFromAttributes(property, member, member.Name, member.DeclaringType, memberSerialization, out bool allowNonPublicAccess)", span="1393-1393", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
n582 [file="DefaultContractResolver.cs.dot", label="memberSerialization != MemberSerialization.Fields", span="1395-1395", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
n583 [file="DefaultContractResolver.cs.dot", label="property.Readable = ReflectionUtils.CanReadMemberValue(member, allowNonPublicAccess)", span="1397-1397", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
n584 [file="DefaultContractResolver.cs.dot", label="property.Writable = ReflectionUtils.CanSetMemberValue(member, allowNonPublicAccess, property.HasMemberAttribute)", span="1398-1398", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
n588 [file="DefaultContractResolver.cs.dot", label="property.ShouldSerialize = CreateShouldSerializeTest(member)", span="1409-1409", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
n590 [file="DefaultContractResolver.cs.dot", label="SetIsSpecifiedActions(property, member, allowNonPublicAccess)", span="1414-1414", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
n585 [file="DefaultContractResolver.cs.dot", label="property.Readable = true", span="1403-1403", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
n586 [file="DefaultContractResolver.cs.dot", label="property.Writable = true", span="1404-1404", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
n591 [file="DefaultContractResolver.cs.dot", label="return property;", span="1417-1417", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
n567 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="1356-1356", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)"];
n587 [file="DefaultContractResolver.cs.dot", label="!IgnoreShouldSerializeMembers", span="1407-1407", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
n593;
n589 [file="DefaultContractResolver.cs.dot", label="!IgnoreIsSpecifiedMembers", span="1412-1412", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
n594 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", span="1589-1589", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)"];
n595;
n592 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", span="1385-1385", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
n563 [file="DefaultContractResolver.cs.dot", label="p.Order ?? -1", span="1342-1342", cluster="lambda expression"];
n564 [file="DefaultContractResolver.cs.dot", label="Exit lambda expression", span="1342-1342", cluster="lambda expression"];
n568 [file="DefaultContractResolver.cs.dot", label="IValueProvider valueProvider", span="1359-1359", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)"];
n570 [file="DefaultContractResolver.cs.dot", label="valueProvider = new DynamicValueProvider(member)", span="1364-1364", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)"];
n571 [file="DefaultContractResolver.cs.dot", label="valueProvider = new ReflectionValueProvider(member)", span="1368-1368", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)"];
n569 [file="DefaultContractResolver.cs.dot", label=DynamicCodeGeneration, span="1362-1362", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)"];
n572 [file="DefaultContractResolver.cs.dot", label="return valueProvider;", span="1376-1376", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)"];
n574;
n575 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", span="43-43", cluster="Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)"];
n573 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="1356-1356", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)"];
n666 [file="DefaultContractResolver.cs.dot", label="MethodInfo shouldSerializeMethod = member.DeclaringType.GetMethod(JsonTypeReflector.ShouldSerializePrefix + member.Name, ReflectionUtils.EmptyTypes)", span="1591-1591", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)"];
n667 [file="DefaultContractResolver.cs.dot", label="shouldSerializeMethod == null || shouldSerializeMethod.ReturnType != typeof(bool)", span="1593-1593", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)"];
n669 [file="DefaultContractResolver.cs.dot", label="MethodCall<object, object> shouldSerializeCall =\n                JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(\\nshouldSerializeMethod)", span="1598-1599", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)"];
n668 [file="DefaultContractResolver.cs.dot", label="return null;", span="1595-1595", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)"];
n671 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", span="1589-1589", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)"];
n670 [file="DefaultContractResolver.cs.dot", label="return o => (bool)shouldSerializeCall(o);", span="1601-1601", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)"];
n596 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", span="1420-1420", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n597 [file="DefaultContractResolver.cs.dot", label="JsonPropertyAttribute propertyAttribute = JsonTypeReflector.GetAttribute<JsonPropertyAttribute>(attributeProvider)", span="1438-1438", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n598 [file="DefaultContractResolver.cs.dot", label="JsonRequiredAttribute requiredAttribute = JsonTypeReflector.GetAttribute<JsonRequiredAttribute>(attributeProvider)", span="1439-1439", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n604 [file="DefaultContractResolver.cs.dot", label="mappedName = name", span="1457-1457", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n606 [file="DefaultContractResolver.cs.dot", label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetAttribute<JsonContainerAttribute>(declaringType)", span="1461-1461", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n614 [file="DefaultContractResolver.cs.dot", label="property.PropertyName = namingStrategy.GetPropertyName(mappedName, hasSpecifiedName)", span="1479-1479", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n615 [file="DefaultContractResolver.cs.dot", label="property.PropertyName = ResolvePropertyName(mappedName)", span="1483-1483", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n616 [file="DefaultContractResolver.cs.dot", label="property.UnderlyingName = name", span="1486-1486", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n619 [file="DefaultContractResolver.cs.dot", label="property._required = propertyAttribute._required", span="1491-1491", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n620 [file="DefaultContractResolver.cs.dot", label="property.Order = propertyAttribute._order", span="1492-1492", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n621 [file="DefaultContractResolver.cs.dot", label="property.DefaultValueHandling = propertyAttribute._defaultValueHandling", span="1493-1493", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n623 [file="DefaultContractResolver.cs.dot", label="property.NullValueHandling = propertyAttribute._nullValueHandling", span="1495-1495", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n624 [file="DefaultContractResolver.cs.dot", label="property.ReferenceLoopHandling = propertyAttribute._referenceLoopHandling", span="1496-1496", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n625 [file="DefaultContractResolver.cs.dot", label="property.ObjectCreationHandling = propertyAttribute._objectCreationHandling", span="1497-1497", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n626 [file="DefaultContractResolver.cs.dot", label="property.TypeNameHandling = propertyAttribute._typeNameHandling", span="1498-1498", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n627 [file="DefaultContractResolver.cs.dot", label="property.IsReference = propertyAttribute._isReference", span="1499-1499", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n628 [file="DefaultContractResolver.cs.dot", label="property.ItemIsReference = propertyAttribute._itemIsReference", span="1501-1501", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n629 [file="DefaultContractResolver.cs.dot", label="property.ItemConverter = propertyAttribute.ItemConverterType != null ? JsonTypeReflector.CreateJsonConverterInstance(propertyAttribute.ItemConverterType, \\npropertyAttribute.ItemConverterParameters) : null", span="1502-1502", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n630 [file="DefaultContractResolver.cs.dot", label="property.ItemReferenceLoopHandling = propertyAttribute._itemReferenceLoopHandling", span="1503-1503", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n631 [file="DefaultContractResolver.cs.dot", label="property.ItemTypeNameHandling = propertyAttribute._itemTypeNameHandling", span="1504-1504", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n632 [file="DefaultContractResolver.cs.dot", label="property.NullValueHandling = null", span="1508-1508", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n633 [file="DefaultContractResolver.cs.dot", label="property.ReferenceLoopHandling = null", span="1509-1509", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n634 [file="DefaultContractResolver.cs.dot", label="property.ObjectCreationHandling = null", span="1510-1510", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n635 [file="DefaultContractResolver.cs.dot", label="property.TypeNameHandling = null", span="1511-1511", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n636 [file="DefaultContractResolver.cs.dot", label="property.IsReference = null", span="1512-1512", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n637 [file="DefaultContractResolver.cs.dot", label="property.ItemIsReference = null", span="1513-1513", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n638 [file="DefaultContractResolver.cs.dot", label="property.ItemConverter = null", span="1514-1514", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n639 [file="DefaultContractResolver.cs.dot", label="property.ItemReferenceLoopHandling = null", span="1515-1515", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n640 [file="DefaultContractResolver.cs.dot", label="property.ItemTypeNameHandling = null", span="1516-1516", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n642 [file="DefaultContractResolver.cs.dot", label="property._required = Required.Always", span="1530-1530", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n644 [file="DefaultContractResolver.cs.dot", label="property.HasMemberAttribute = hasMemberAttribute", span="1534-1534", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n645 [file="DefaultContractResolver.cs.dot", label="bool hasJsonIgnoreAttribute =\n                JsonTypeReflector.GetAttribute<JsonIgnoreAttribute>(attributeProvider) != null\n                    // \\nautomatically ignore extension data dictionary property if it is public\n                || JsonTypeReflector.GetAttribute<JsonExtensionDataAttribute>(\\nattributeProvider) != null", span="1536-1539", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n646 [file="DefaultContractResolver.cs.dot", label="memberSerialization != MemberSerialization.OptIn", span="1545-1545", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n648 [file="DefaultContractResolver.cs.dot", label="property.Ignored = (hasJsonIgnoreAttribute || hasIgnoreDataMemberAttribute)", span="1554-1554", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n649 [file="DefaultContractResolver.cs.dot", label="property.Ignored = (hasJsonIgnoreAttribute || !hasMemberAttribute)", span="1559-1559", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n650 [file="DefaultContractResolver.cs.dot", label="property.Converter = JsonTypeReflector.GetJsonConverter(attributeProvider)", span="1564-1564", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n651 [file="DefaultContractResolver.cs.dot", label="DefaultValueAttribute defaultValueAttribute = JsonTypeReflector.GetAttribute<DefaultValueAttribute>(attributeProvider)", span="1566-1566", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n653 [file="DefaultContractResolver.cs.dot", label="property.DefaultValue = defaultValueAttribute.Value", span="1569-1569", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n659 [file="DefaultContractResolver.cs.dot", label="memberSerialization == MemberSerialization.Fields", span="1583-1583", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n601 [file="DefaultContractResolver.cs.dot", label="propertyAttribute?.PropertyName != null", span="1443-1443", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n602 [file="DefaultContractResolver.cs.dot", label="mappedName = propertyAttribute.PropertyName", span="1445-1445", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n608 [file="DefaultContractResolver.cs.dot", label="propertyAttribute?.NamingStrategyType != null", span="1464-1464", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n609 [file="DefaultContractResolver.cs.dot", label="namingStrategy = JsonTypeReflector.CreateNamingStrategyInstance(propertyAttribute.NamingStrategyType, propertyAttribute.NamingStrategyParameters)", span="1466-1466", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n618 [file="DefaultContractResolver.cs.dot", label="propertyAttribute != null", span="1489-1489", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n599 [file="DefaultContractResolver.cs.dot", label="string mappedName", span="1441-1441", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n641 [file="DefaultContractResolver.cs.dot", label="requiredAttribute != null", span="1528-1528", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n600 [file="DefaultContractResolver.cs.dot", label="bool hasSpecifiedName", span="1442-1442", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n603 [file="DefaultContractResolver.cs.dot", label="hasSpecifiedName = true", span="1446-1446", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n605 [file="DefaultContractResolver.cs.dot", label="hasSpecifiedName = false", span="1458-1458", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n607 [file="DefaultContractResolver.cs.dot", label="NamingStrategy namingStrategy", span="1463-1463", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n610 [file="DefaultContractResolver.cs.dot", label="containerAttribute?.NamingStrategyType != null", span="1468-1468", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n611 [file="DefaultContractResolver.cs.dot", label="namingStrategy = JsonTypeReflector.GetContainerNamingStrategy(containerAttribute)", span="1470-1470", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n613 [file="DefaultContractResolver.cs.dot", label="namingStrategy != null", span="1477-1477", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n662 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])", span="206-206", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])"];
n612 [file="DefaultContractResolver.cs.dot", label="namingStrategy = NamingStrategy", span="1474-1474", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n617 [file="DefaultContractResolver.cs.dot", label="bool hasMemberAttribute = false", span="1488-1488", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n657 [file="DefaultContractResolver.cs.dot", label=hasMemberAttribute, span="1579-1579", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n622 [file="DefaultContractResolver.cs.dot", label="hasMemberAttribute = true", span="1494-1494", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n665 [file="DefaultContractResolver.cs.dot", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])", span="200-200", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])"];
n643 [file="DefaultContractResolver.cs.dot", label="hasMemberAttribute = true", span="1531-1531", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n647 [file="DefaultContractResolver.cs.dot", label="bool hasIgnoreDataMemberAttribute = false", span="1547-1547", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n652 [file="DefaultContractResolver.cs.dot", label="defaultValueAttribute != null", span="1567-1567", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n654 [file="DefaultContractResolver.cs.dot", label="allowNonPublicAccess = false", span="1572-1572", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n655 [file="DefaultContractResolver.cs.dot", label="(DefaultMembersSearchFlags & BindingFlags.NonPublic) == BindingFlags.NonPublic", span="1574-1574", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n661 [file="DefaultContractResolver.cs.dot", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", span="1420-1420", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n656 [file="DefaultContractResolver.cs.dot", label="allowNonPublicAccess = true", span="1576-1576", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n658 [file="DefaultContractResolver.cs.dot", label="allowNonPublicAccess = true", span="1581-1581", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n660 [file="DefaultContractResolver.cs.dot", label="allowNonPublicAccess = true", span="1585-1585", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nobject, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n709;
n710;
n711;
n712;
n713;
n714;
n715;
n716;
n717;
n718;
n719;
n720;
m0_20 [file="Issue1576.cs", label="Entry Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="84-84", cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)"];
m0_21 [file="Issue1576.cs", label="throw new NotSupportedException();", span="86-86", cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)"];
m0_22 [file="Issue1576.cs", label="Exit Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="84-84", cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)"];
m0_23 [file="Issue1576.cs", label="Entry System.NotSupportedException.NotSupportedException()", span="0-0", cluster="System.NotSupportedException.NotSupportedException()"];
m0_42 [file="Issue1576.cs", label="Entry Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.CanConvert(System.Type)", span="114-114", cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.CanConvert(System.Type)"];
m0_43 [file="Issue1576.cs", label="return typeof(ICollection).IsAssignableFrom(objectType);", span="116-116", cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.CanConvert(System.Type)"];
m0_44 [file="Issue1576.cs", label="Exit Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.CanConvert(System.Type)", span="114-114", cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.CanConvert(System.Type)"];
m0_45 [file="Issue1576.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)"];
m0_0 [file="Issue1576.cs", label="Entry Newtonsoft.Json.Tests.Issues.Issue1576.Test()", span="46-46", cluster="Newtonsoft.Json.Tests.Issues.Issue1576.Test()"];
m0_1 [file="Issue1576.cs", label="var settings = new JsonSerializerSettings()\n            {\n                ContractResolver = new CustomContractResolver()\n            }", span="48-51", cluster="Newtonsoft.Json.Tests.Issues.Issue1576.Test()"];
m0_8 [file="Issue1576.cs", label="Entry Newtonsoft.Json.Tests.Issues.Issue1576.CustomContractResolver.CustomContractResolver()", span="65-65", cluster="Newtonsoft.Json.Tests.Issues.Issue1576.CustomContractResolver.CustomContractResolver()"];
m0_2 [file="Issue1576.cs", label="var result = JsonConvert.DeserializeObject<TestClass>(''{ 'Items': '11' }'', settings)", span="53-53", cluster="Newtonsoft.Json.Tests.Issues.Issue1576.Test()"];
m0_7 [file="Issue1576.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="447-447", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()"];
m0_9 [file="Issue1576.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="766-766", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)"];
m0_3 [file="Issue1576.cs", label="Assert.IsNotNull(result)", span="55-55", cluster="Newtonsoft.Json.Tests.Issues.Issue1576.Test()"];
m0_4 [file="Issue1576.cs", label="Assert.AreEqual(result.Items.Count, 1)", span="56-56", cluster="Newtonsoft.Json.Tests.Issues.Issue1576.Test()"];
m0_5 [file="Issue1576.cs", label="Assert.AreEqual(result.Items[0], 11)", span="57-57", cluster="Newtonsoft.Json.Tests.Issues.Issue1576.Test()"];
m0_10;
m0_11;
m0_6 [file="Issue1576.cs", label="Exit Newtonsoft.Json.Tests.Issues.Issue1576.Test()", span="46-46", cluster="Newtonsoft.Json.Tests.Issues.Issue1576.Test()"];
m0_12 [file="Issue1576.cs", label="Entry Newtonsoft.Json.Tests.Issues.Issue1576.CustomContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", span="67-67", cluster="Newtonsoft.Json.Tests.Issues.Issue1576.CustomContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
m0_13 [file="Issue1576.cs", label="var property = base.CreateProperty(member, memberSerialization)", span="69-69", cluster="Newtonsoft.Json.Tests.Issues.Issue1576.CustomContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
m0_14 [file="Issue1576.cs", label="member.Name == ''Items''", span="71-71", cluster="Newtonsoft.Json.Tests.Issues.Issue1576.CustomContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
m0_18 [file="Issue1576.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="703-703", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)"];
m0_15 [file="Issue1576.cs", label="property.Converter = new OneItemListJsonConverter()", span="73-73", cluster="Newtonsoft.Json.Tests.Issues.Issue1576.CustomContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
m0_16 [file="Issue1576.cs", label="return property;", span="76-76", cluster="Newtonsoft.Json.Tests.Issues.Issue1576.CustomContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
m0_19 [file="Issue1576.cs", label="Entry Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.OneItemListJsonConverter()", span="80-80", cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.OneItemListJsonConverter()"];
m0_17 [file="Issue1576.cs", label="Exit Newtonsoft.Json.Tests.Issues.Issue1576.CustomContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", span="67-67", cluster="Newtonsoft.Json.Tests.Issues.Issue1576.CustomContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
m0_24 [file="Issue1576.cs", label="Entry Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, \\nNewtonsoft.Json.JsonSerializer)", span="89-89", cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m0_25 [file="Issue1576.cs", label="var token = JToken.Load(reader)", span="91-91", cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m0_27 [file="Issue1576.cs", label="return token.ToObject(objectType, serializer);", span="94-94", cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m0_30 [file="Issue1576.cs", label="var list = array.ToObject(objectType, serializer) as IEnumerable", span="100-100", cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m0_31 [file="Issue1576.cs", label="var existing = existingValue as IList", span="101-101", cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m0_37 [file="Issue1576.cs", label="Entry Newtonsoft.Json.Linq.JToken.Load(Newtonsoft.Json.JsonReader)", span="2221-2221", cluster="Newtonsoft.Json.Linq.JToken.Load(Newtonsoft.Json.JsonReader)"];
m0_26 [file="Issue1576.cs", label="token.Type == JTokenType.Array", span="92-92", cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m0_29 [file="Issue1576.cs", label="array.Add(token)", span="98-98", cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m0_28 [file="Issue1576.cs", label="var array = new JArray()", span="97-97", cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m0_38 [file="Issue1576.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToObject(System.Type, Newtonsoft.Json.JsonSerializer)", span="2065-2065", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type, Newtonsoft.Json.JsonSerializer)"];
m0_36 [file="Issue1576.cs", label="Exit Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="89-89", cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m0_39 [file="Issue1576.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="59-59", cluster="Newtonsoft.Json.Linq.JArray.JArray()"];
m0_40 [file="Issue1576.cs", label="Entry Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", span="338-338", cluster="Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)"];
m0_32 [file="Issue1576.cs", label="list != null && existing != null", span="103-103", cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m0_33 [file="Issue1576.cs", label=list, span="105-105", cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m0_35 [file="Issue1576.cs", label="return list;", span="111-111", cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m0_34 [file="Issue1576.cs", label="existing.Add(item)", span="107-107", cluster="Newtonsoft.Json.Tests.Issues.Issue1576.OneItemListJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m0_41 [file="Issue1576.cs", label="Entry System.Collections.IList.Add(object)", span="0-0", cluster="System.Collections.IList.Add(object)"];
m0_46;
m1_33 [file="JsonDictionaryContract.cs", label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", span="204-204", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)"];
m1_34 [file="JsonDictionaryContract.cs", label="_genericWrapperCreator == null", span="206-206", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)"];
m1_38 [file="JsonDictionaryContract.cs", label="return (IWrappedDictionary)_genericWrapperCreator(dictionary);", span="214-214", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)"];
m1_35 [file="JsonDictionaryContract.cs", label="_genericWrapperType = typeof(DictionaryWrapper<,>).MakeGenericType(DictionaryKeyType, DictionaryValueType)", span="208-208", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)"];
m1_28 [file="JsonDictionaryContract.cs", label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0", cluster="System.Type.MakeGenericType(params System.Type[])"];
m1_36 [file="JsonDictionaryContract.cs", label="ConstructorInfo genericWrapperConstructor = _genericWrapperType.GetConstructor(new[] { _genericCollectionDefinitionType })", span="210-210", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)"];
m1_40 [file="JsonDictionaryContract.cs", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0", cluster="System.Type.GetConstructor(System.Type[])"];
m1_37 [file="JsonDictionaryContract.cs", label="_genericWrapperCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(genericWrapperConstructor)", span="211-211", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)"];
m1_41 [file="JsonDictionaryContract.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", span="75-75", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)"];
m1_42 [file="JsonDictionaryContract.cs", label="Entry Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", span="31-31", cluster="Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])"];
m1_39 [file="JsonDictionaryContract.cs", label="Exit Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", span="204-204", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)"];
m1_43 [file="JsonDictionaryContract.cs", label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", span="217-217", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()"];
m1_44 [file="JsonDictionaryContract.cs", label="_genericTemporaryDictionaryCreator == null", span="219-219", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()"];
m1_45 [file="JsonDictionaryContract.cs", label="Type temporaryDictionaryType = typeof(Dictionary<,>).MakeGenericType(DictionaryKeyType ?? typeof(object), DictionaryValueType ?? \\ntypeof(object))", span="221-221", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()"];
m1_47 [file="JsonDictionaryContract.cs", label="return (IDictionary)_genericTemporaryDictionaryCreator();", span="226-226", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()"];
m1_46 [file="JsonDictionaryContract.cs", label="_genericTemporaryDictionaryCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateDefaultConstructor<object>(temporaryDictionaryType)", span="223-223", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()"];
m1_49 [file="JsonDictionaryContract.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", span="76-76", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)"];
m1_48 [file="JsonDictionaryContract.cs", label="Exit Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", span="217-217", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()"];
m1_3 [file="JsonDictionaryContract.cs", label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", span="112-112", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)"];
m1_4 [file="JsonDictionaryContract.cs", label="ContractType = JsonContractType.Dictionary", span="115-115", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)"];
m1_7 [file="JsonDictionaryContract.cs", label="ReflectionUtils.ImplementsGenericDefinition(underlyingType, typeof(IDictionary<,>), out _genericCollectionDefinitionType)", span="120-120", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)"];
m1_20 [file="JsonDictionaryContract.cs", label="ImmutableCollectionsUtils.TryBuildImmutableForDictionaryContract(\n                underlyingType,\n                DictionaryKeyType,\n                \\nDictionaryValueType,\n                out Type immutableCreatedType,\n                out ObjectConstructor<object> immutableParameterizedCreator)", span="191-196", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)"];
m1_5 [file="JsonDictionaryContract.cs", label="Type keyType", span="117-117", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)"];
m1_6 [file="JsonDictionaryContract.cs", label="Type valueType", span="118-118", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)"];
m1_25 [file="JsonDictionaryContract.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", span="293-293", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)"];
m1_8 [file="JsonDictionaryContract.cs", label="keyType = _genericCollectionDefinitionType.GetGenericArguments()[0]", span="122-122", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)"];
m1_12 [file="JsonDictionaryContract.cs", label="ReflectionUtils.GetDictionaryKeyValueTypes(UnderlyingType, out keyType, out valueType)", span="150-150", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)"];
m1_26 [file="JsonDictionaryContract.cs", label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()"];
m1_9 [file="JsonDictionaryContract.cs", label="valueType = _genericCollectionDefinitionType.GetGenericArguments()[1]", span="123-123", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)"];
m1_11 [file="JsonDictionaryContract.cs", label="CreatedType = typeof(Dictionary<,>).MakeGenericType(keyType, valueType)", span="127-127", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)"];
m1_15 [file="JsonDictionaryContract.cs", label="keyType != null && valueType != null", span="158-158", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)"];
m1_16 [file="JsonDictionaryContract.cs", label="_parameterizedConstructor = CollectionUtils.ResolveEnumerableCollectionConstructor(\n                    CreatedType,\n                    \\ntypeof(KeyValuePair<,>).MakeGenericType(keyType, valueType),\n                    typeof(IDictionary<,>).MakeGenericType(keyType, \\nvalueType))", span="160-163", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)"];
m1_18 [file="JsonDictionaryContract.cs", label="DictionaryKeyType = keyType", span="176-176", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)"];
m1_10 [file="JsonDictionaryContract.cs", label="ReflectionUtils.IsGenericDefinition(UnderlyingType, typeof(IDictionary<,>))", span="125-125", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)"];
m1_19 [file="JsonDictionaryContract.cs", label="DictionaryValueType = valueType", span="177-177", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)"];
m1_27 [file="JsonDictionaryContract.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", span="277-277", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)"];
m1_29 [file="JsonDictionaryContract.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", span="401-401", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)"];
m1_13 [file="JsonDictionaryContract.cs", label="UnderlyingType == typeof(IDictionary)", span="152-152", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)"];
m1_14 [file="JsonDictionaryContract.cs", label="CreatedType = typeof(Dictionary<object, object>)", span="154-154", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)"];
m1_17 [color=red, community=1, file="JsonDictionaryContract.cs", label="ShouldCreateWrapper = !typeof(IDictionary).IsAssignableFrom(CreatedType)", span="174-174", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)"];
m1_30 [file="JsonDictionaryContract.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", span="125-125", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)"];
m1_31 [file="JsonDictionaryContract.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)"];
m1_32;
m1_21 [file="JsonDictionaryContract.cs", label="CreatedType = immutableCreatedType", span="198-198", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)"];
m1_24 [file="JsonDictionaryContract.cs", label="Exit Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", span="112-112", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)"];
m1_22 [file="JsonDictionaryContract.cs", label="_parameterizedCreator = immutableParameterizedCreator", span="199-199", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)"];
m1_23 [file="JsonDictionaryContract.cs", label="IsReadOnlyOrFixedSize = true", span="200-200", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)"];
m1_0 [file="JsonDictionaryContract.cs", label="Entry lambda expression", span="97-97", cluster="lambda expression"];
m1_1 [file="JsonDictionaryContract.cs", label="_overrideCreator = value", span="97-97", cluster="lambda expression"];
m1_2 [file="JsonDictionaryContract.cs", label="Exit lambda expression", span="97-97", cluster="lambda expression"];
m1_51;
m2_43 [file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetValue(string, out Newtonsoft.Json.Serialization.JsonProperty)", span="136-136", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetValue(string, out Newtonsoft.Json.Serialization.JsonProperty)"];
m2_44 [file="JsonPropertyCollection.cs", label="Dictionary == null", span="138-138", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetValue(string, out Newtonsoft.Json.Serialization.JsonProperty)"];
m2_47 [file="JsonPropertyCollection.cs", label="return Dictionary.TryGetValue(key, out item);", span="144-144", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetValue(string, out Newtonsoft.Json.Serialization.JsonProperty)"];
m2_45 [file="JsonPropertyCollection.cs", label="item = default(JsonProperty)", span="140-140", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetValue(string, out Newtonsoft.Json.Serialization.JsonProperty)"];
m2_46 [file="JsonPropertyCollection.cs", label="return false;", span="141-141", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetValue(string, out Newtonsoft.Json.Serialization.JsonProperty)"];
m2_48 [file="JsonPropertyCollection.cs", label="Exit Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetValue(string, out Newtonsoft.Json.Serialization.JsonProperty)", span="136-136", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.TryGetValue(string, out Newtonsoft.Json.Serialization.JsonProperty)"];
m2_49 [file="JsonPropertyCollection.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)"];
m2_42 [file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)", span="153-153", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)"];
m2_50 [file="JsonPropertyCollection.cs", label="comparisonType == StringComparison.Ordinal", span="156-156", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)"];
m2_51 [file="JsonPropertyCollection.cs", label="TryGetValue(propertyName, out JsonProperty property)", span="158-158", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)"];
m2_57 [file="JsonPropertyCollection.cs", label="string.Equals(propertyName, property.PropertyName, comparisonType)", span="169-169", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)"];
m2_54 [file="JsonPropertyCollection.cs", label="int i = 0", span="166-166", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)"];
m2_62;
m2_52 [file="JsonPropertyCollection.cs", label="return property;", span="160-160", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)"];
m2_53 [file="JsonPropertyCollection.cs", label="return null;", span="163-163", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)"];
m2_61 [file="JsonPropertyCollection.cs", label="Exit Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)", span="153-153", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)"];
m2_55 [file="JsonPropertyCollection.cs", label="i < _list.Count", span="166-166", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)"];
m2_56 [file="JsonPropertyCollection.cs", label="JsonProperty property = _list[i]", span="168-168", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)"];
m2_59 [file="JsonPropertyCollection.cs", label="i++", span="166-166", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)"];
m2_60 [file="JsonPropertyCollection.cs", label="return null;", span="175-175", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)"];
m2_58 [file="JsonPropertyCollection.cs", label="return property;", span="171-171", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetProperty(string, System.StringComparison)"];
m2_63 [file="JsonPropertyCollection.cs", label="Entry string.Equals(string, string, System.StringComparison)", span="0-0", cluster="string.Equals(string, string, System.StringComparison)"];
m2_6 [file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.GetKeyForItem(Newtonsoft.Json.Serialization.JsonProperty)", span="61-61", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetKeyForItem(Newtonsoft.Json.Serialization.JsonProperty)"];
m2_7 [file="JsonPropertyCollection.cs", label="return item.PropertyName;", span="63-63", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetKeyForItem(Newtonsoft.Json.Serialization.JsonProperty)"];
m2_8 [file="JsonPropertyCollection.cs", label="Exit Newtonsoft.Json.Serialization.JsonPropertyCollection.GetKeyForItem(Newtonsoft.Json.Serialization.JsonProperty)", span="61-61", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetKeyForItem(Newtonsoft.Json.Serialization.JsonProperty)"];
m2_36 [file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", span="125-125", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)"];
m2_37 [file="JsonPropertyCollection.cs", label="JsonProperty property = GetProperty(propertyName, StringComparison.Ordinal)", span="127-127", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)"];
m2_39 [file="JsonPropertyCollection.cs", label="property = GetProperty(propertyName, StringComparison.OrdinalIgnoreCase)", span="130-130", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)"];
m2_38 [file="JsonPropertyCollection.cs", label="property == null", span="128-128", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)"];
m2_40 [file="JsonPropertyCollection.cs", label="return property;", span="133-133", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)"];
m2_41 [file="JsonPropertyCollection.cs", label="Exit Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", span="125-125", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)"];
m2_9 [file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", span="70-70", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)"];
m2_10 [file="JsonPropertyCollection.cs", label="Contains(property.PropertyName)", span="72-72", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)"];
m2_11 [file="JsonPropertyCollection.cs", label="property.Ignored", span="75-75", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)"];
m2_13 [file="JsonPropertyCollection.cs", label="JsonProperty existingProperty = this[property.PropertyName]", span="80-80", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)"];
m2_18 [file="JsonPropertyCollection.cs", label="property.DeclaringType != null && existingProperty.DeclaringType != null", span="91-91", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)"];
m2_19 [file="JsonPropertyCollection.cs", label="property.DeclaringType.IsSubclassOf(existingProperty.DeclaringType)\n                            || (existingProperty.DeclaringType.IsInterface() && \\nproperty.DeclaringType.ImplementInterface(existingProperty.DeclaringType))", span="93-94", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)"];
m2_22 [file="JsonPropertyCollection.cs", label="existingProperty.DeclaringType.IsSubclassOf(property.DeclaringType)\n                            || (property.DeclaringType.IsInterface() && \\nexistingProperty.DeclaringType.ImplementInterface(property.DeclaringType))", span="100-101", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)"];
m2_25 [file="JsonPropertyCollection.cs", label="throw new JsonSerializationException(''A member with the name '{0}' already exists on '{1}'. Use the JsonPropertyAttribute to specify \\nanother name.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName, _type));", span="111-111", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)"];
m2_26 [file="JsonPropertyCollection.cs", label="Add(property)", span="115-115", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)"];
m2_28 [file="JsonPropertyCollection.cs", label="Entry System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Contains(TKey)", span="0-0", cluster="System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Contains(TKey)"];
m2_12 [file="JsonPropertyCollection.cs", label="return;", span="77-77", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)"];
m2_27 [file="JsonPropertyCollection.cs", label="Exit Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", span="70-70", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)"];
m2_14 [file="JsonPropertyCollection.cs", label="bool duplicateProperty = true", span="81-81", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)"];
m2_15 [file="JsonPropertyCollection.cs", label="existingProperty.Ignored", span="83-83", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)"];
m2_16 [file="JsonPropertyCollection.cs", label="Remove(existingProperty)", span="86-86", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)"];
m2_20 [file="JsonPropertyCollection.cs", label="Remove(existingProperty)", span="97-97", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)"];
m2_24 [file="JsonPropertyCollection.cs", label=duplicateProperty, span="109-109", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)"];
m2_29 [file="JsonPropertyCollection.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Remove(T)", span="0-0", cluster="System.Collections.ObjectModel.Collection<T>.Remove(T)"];
m2_17 [file="JsonPropertyCollection.cs", label="duplicateProperty = false", span="87-87", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)"];
m2_32 [file="JsonPropertyCollection.cs", label="Entry System.Type.ImplementInterface(System.Type)", span="602-602", cluster="System.Type.ImplementInterface(System.Type)"];
m2_31 [file="JsonPropertyCollection.cs", label="Entry System.Type.IsInterface()", span="144-144", cluster="System.Type.IsInterface()"];
m2_30 [file="JsonPropertyCollection.cs", label="Entry System.Type.IsSubclassOf(System.Type)", span="0-0", cluster="System.Type.IsSubclassOf(System.Type)"];
m2_21 [file="JsonPropertyCollection.cs", label="duplicateProperty = false", span="98-98", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)"];
m2_23 [file="JsonPropertyCollection.cs", label="return;", span="104-104", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)"];
m2_33 [file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52", cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)"];
m2_34 [file="JsonPropertyCollection.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52", cluster="string.FormatWith(System.IFormatProvider, object, object)"];
m2_35 [file="JsonPropertyCollection.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0", cluster="System.Collections.ObjectModel.Collection<T>.Add(T)"];
m2_0 [file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", span="46-46", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)"];
m2_1 [file="JsonPropertyCollection.cs", label="ValidationUtils.ArgumentNotNull(type, ''type'')", span="49-49", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)"];
m2_2 [file="JsonPropertyCollection.cs", label="_type = type", span="50-50", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)"];
m2_3 [file="JsonPropertyCollection.cs", label="_list = (List<JsonProperty>)Items", span="53-53", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)"];
m2_4 [file="JsonPropertyCollection.cs", label="Exit Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", span="46-46", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)"];
m2_64;
m3_43 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentDictionary()", span="110-110", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentDictionary()"];
m3_44 [file="JsonSerializerCollectionsTests.cs", label="ConcurrentDictionary<int, int> dic1 = new ConcurrentDictionary<int, int>()", span="112-112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentDictionary()"];
m3_45 [file="JsonSerializerCollectionsTests.cs", label="dic1[1] = int.MaxValue", span="113-113", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentDictionary()"];
m3_46 [file="JsonSerializerCollectionsTests.cs", label="string output = JsonConvert.SerializeObject(dic1)", span="115-115", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentDictionary()"];
m3_53 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()"];
m3_47 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''1'''':2147483647}'', output)", span="116-116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentDictionary()"];
m3_48 [file="JsonSerializerCollectionsTests.cs", label="ConcurrentDictionary<int, int> dic2 = JsonConvert.DeserializeObject<ConcurrentDictionary<int, int>>(output)", span="118-118", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentDictionary()"];
m3_12 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="524-524", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)"];
m3_13;
m3_49 [file="JsonSerializerCollectionsTests.cs", label="int i", span="119-119", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentDictionary()"];
m3_50 [file="JsonSerializerCollectionsTests.cs", label="Assert.IsTrue(dic2.TryGetValue(1, out i))", span="120-120", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentDictionary()"];
m3_14 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="703-703", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)"];
m3_51 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(int.MaxValue, i)", span="121-121", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentDictionary()"];
m3_16;
m3_54 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)"];
m3_52 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentDictionary()", span="110-110", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentDictionary()"];
m3_257 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", span="486-486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()"];
m3_258 [file="JsonSerializerCollectionsTests.cs", label="var onebasedArray = Array.CreateInstance(typeof(string), new[] { 3, 3 }, new[] { 1, 2 })", span="489-489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()"];
m3_259 [file="JsonSerializerCollectionsTests.cs", label="var i = onebasedArray.GetLowerBound(0)", span="492-492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()"];
m3_260 [file="JsonSerializerCollectionsTests.cs", label="i <= onebasedArray.GetUpperBound(0)", span="492-492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()"];
m3_261 [file="JsonSerializerCollectionsTests.cs", label="var j = onebasedArray.GetLowerBound(1)", span="494-494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()"];
m3_262 [file="JsonSerializerCollectionsTests.cs", label="j <= onebasedArray.GetUpperBound(1)", span="494-494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()"];
m3_263 [file="JsonSerializerCollectionsTests.cs", label="onebasedArray.SetValue(i + ''_'' + j, new[] { i, j })", span="496-496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()"];
m3_266 [file="JsonSerializerCollectionsTests.cs", label="string output = JsonConvert.SerializeObject(onebasedArray, Formatting.Indented)", span="501-501", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()"];
m3_251 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Array.CreateInstance(System.Type, int[], int[])", span="0-0", cluster="System.Array.CreateInstance(System.Type, int[], int[])"];
m3_265 [file="JsonSerializerCollectionsTests.cs", label="i++", span="492-492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()"];
m3_252 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Array.GetLowerBound(int)", span="0-0", cluster="System.Array.GetLowerBound(int)"];
m3_253 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Array.GetUpperBound(int)", span="0-0", cluster="System.Array.GetUpperBound(int)"];
m3_264 [file="JsonSerializerCollectionsTests.cs", label="j++", span="494-494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()"];
m3_255 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Array.SetValue(object, params int[])", span="0-0", cluster="System.Array.SetValue(object, params int[])"];
m3_267 [file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''[\n  [\n    ''''1_2'''',\n    ''''1_3'''',\n    ''''1_4''''\n  ],\n  [\n    ''''2_2'''',\n    ''''2_3'''',\n    ''''\\n2_4''''\n  ],\n  [\n    ''''3_2'''',\n    ''''3_3'''',\n    ''''3_4''''\n  ]\n]'', output)", span="503-519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()"];
m3_241 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="537-537", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)"];
m3_268 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()", span="486-486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedMultiArray()"];
m3_256 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="341-341", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)"];
m3_676 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", span="1480-1480", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()"];
m3_677 [file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2,1]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[\\n2,2,1],[2,2,2]]],''''After'''':''''After!''''}''", span="1482-1482", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()"];
m3_678 [file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<Exception>(() => JsonConvert.DeserializeObject<Array3D>(json), ''Cannot deserialize non-cubical array as \\nmultidimensional array.'')", span="1484-1484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()"];
m3_681 [file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<Array3D>(json)", span="1484-1484", cluster="lambda expression"];
m3_679 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", span="1480-1480", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()"];
m3_131 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="370-370", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])"];
m3_680 [file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="1484-1484", cluster="lambda expression"];
m3_432 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", span="877-877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()"];
m3_433 [file="JsonSerializerCollectionsTests.cs", label="string s = @''host\user''", span="879-879", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()"];
m3_434 [file="JsonSerializerCollectionsTests.cs", label="string serialized = JsonConvert.SerializeObject(s)", span="880-880", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()"];
m3_437 [file="JsonSerializerCollectionsTests.cs", label="d1.Add(5, s)", span="884-884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()"];
m3_440 [file="JsonSerializerCollectionsTests.cs", label="d2.Add(s, 5)", span="888-888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()"];
m3_435 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''''''host\\user'''''', serialized)", span="881-881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()"];
m3_436 [file="JsonSerializerCollectionsTests.cs", label="Dictionary<int, object> d1 = new Dictionary<int, object>()", span="883-883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()"];
m3_438 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''5'''':''''host\\user''''}'', JsonConvert.SerializeObject(d1))", span="885-885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()"];
m3_62 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()"];
m3_175 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)"];
m3_439 [file="JsonSerializerCollectionsTests.cs", label="Dictionary<string, object> d2 = new Dictionary<string, object>()", span="887-887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()"];
m3_441 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''host\\user'''':5}'', JsonConvert.SerializeObject(d2))", span="889-889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()"];
m3_442 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", span="877-877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()"];
m3_978 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.RemoveAt(int)", span="2179-2179", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.RemoveAt(int)"];
m3_979 [file="JsonSerializerCollectionsTests.cs", label="((IList<string>)_storage).RemoveAt(index)", span="2181-2181", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.RemoveAt(int)"];
m3_980 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.RemoveAt(int)", span="2179-2179", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.RemoveAt(int)"];
m3_981 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.IList<T>.RemoveAt(int)", span="0-0", cluster="System.Collections.Generic.IList<T>.RemoveAt(int)"];
m3_94 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", span="184-184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()"];
m3_95 [file="JsonSerializerCollectionsTests.cs", label="TestCollectionPrivateParameterized c1 = new TestCollectionPrivateParameterized()", span="186-186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()"];
m3_96 [file="JsonSerializerCollectionsTests.cs", label="c1.Add(0)", span="187-187", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()"];
m3_97 [file="JsonSerializerCollectionsTests.cs", label="c1.Add(1)", span="188-188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()"];
m3_98 [file="JsonSerializerCollectionsTests.cs", label="c1.Add(2)", span="189-189", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()"];
m3_99 [file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(c1)", span="190-190", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()"];
m3_78 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.TestCollectionPrivateParameterized()", span="162-162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.TestCollectionPrivateParameterized()"];
m3_86 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.Add(int)", span="173-173", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.Add(int)"];
m3_100 [file="JsonSerializerCollectionsTests.cs", label="TestCollectionPrivateParameterized c2 = JsonConvert.DeserializeObject<TestCollectionPrivateParameterized>(json)", span="191-191", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()"];
m3_101 [file="JsonSerializerCollectionsTests.cs", label="List<int> values = c2.ToList()", span="193-193", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()"];
m3_102 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, values.Count)", span="195-195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()"];
m3_103 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0, values[0])", span="196-196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()"];
m3_104 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, values[1])", span="197-197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()"];
m3_105 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, values[2])", span="198-198", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()"];
m3_107 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()"];
m3_106 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()", span="184-184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivateParameterized()"];
m3_966 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.IndexOf(string)", span="2164-2164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.IndexOf(string)"];
m3_967 [file="JsonSerializerCollectionsTests.cs", label="return ((IList<string>)_storage).IndexOf(item);", span="2166-2166", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.IndexOf(string)"];
m3_968 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.IndexOf(string)", span="2164-2164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.IndexOf(string)"];
m3_969 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.IList<T>.IndexOf(T)", span="0-0", cluster="System.Collections.Generic.IList<T>.IndexOf(T)"];
m3_931 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConstructorWithReadonlyArrayProperty()", span="2062-2062", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConstructorWithReadonlyArrayProperty()"];
m3_932 [file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Endpoint'''':''''http://localhost'''',''''Name'''':''''account1'''',''''Dimensions'''':[{''''Key'''':''''Endpoint'''',''''\\nValue'''':''''http://localhost''''},{''''Key'''':''''Name'''',''''Value'''':''''account1''''}]}''", span="2064-2064", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConstructorWithReadonlyArrayProperty()"];
m3_933 [file="JsonSerializerCollectionsTests.cs", label="AccountInfo values = JsonConvert.DeserializeObject<AccountInfo>(json)", span="2066-2066", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConstructorWithReadonlyArrayProperty()"];
m3_934 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''http://localhost'', values.Endpoint)", span="2067-2067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConstructorWithReadonlyArrayProperty()"];
m3_935 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''account1'', values.Name)", span="2068-2068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConstructorWithReadonlyArrayProperty()"];
m3_936 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, values.Dimensions.Length)", span="2069-2069", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConstructorWithReadonlyArrayProperty()"];
m3_937 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConstructorWithReadonlyArrayProperty()", span="2062-2062", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConstructorWithReadonlyArrayProperty()"];
m3_388 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", span="752-752", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()"];
m3_389 [file="JsonSerializerCollectionsTests.cs", label="ReadOnlyDictionary<string, int> dic = JsonConvert.DeserializeObject<ReadOnlyDictionary<string, int>>(''{'one':1,'two':2}'')", span="754-754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()"];
m3_390 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, dic.Count)", span="756-756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()"];
m3_391 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, dic[''one''])", span="758-758", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()"];
m3_392 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, dic[''two''])", span="759-759", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()"];
m3_393 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", span="752-752", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()"];
m3_1063 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.System.Collections.IEnumerable.GetEnumerator()", span="2441-2441", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.System.Collections.IEnumerable.GetEnumerator()"];
m3_1064 [file="JsonSerializerCollectionsTests.cs", label="return _values.GetEnumerator();", span="2443-2443", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.System.Collections.IEnumerable.GetEnumerator()"];
m3_1065 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.System.Collections.IEnumerable.GetEnumerator()", span="2441-2441", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.System.Collections.IEnumerable.GetEnumerator()"];
m3_291 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()"];
m3_816 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", span="1820-1820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()"];
m3_817 [file="JsonSerializerCollectionsTests.cs", label="ProductCollection collection = new ProductCollection()\n            {\n                new Product() { Name = ''Test1'' },\n                \\nnew Product() { Name = ''Test2'' },\n                new Product() { Name = ''Test3'' }\n            }", span="1822-1827", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()"];
m3_818 [file="JsonSerializerCollectionsTests.cs", label="JsonSerializer jsonSerializer = new JsonSerializer()", span="1829-1829", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()"];
m3_821 [file="JsonSerializerCollectionsTests.cs", label="jsonSerializer.Serialize(sw, collection)", span="1834-1834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()"];
m3_824 [file="JsonSerializerCollectionsTests.cs", label="CollectionAssert.AreEqual(collection, collectionNew)", span="1841-1841", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()"];
m3_827 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()"];
m3_826 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ProductCollection.ProductCollection()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.ProductCollection.ProductCollection()"];
m3_819 [file="JsonSerializerCollectionsTests.cs", label="jsonSerializer.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="1830-1830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()"];
m3_823 [file="JsonSerializerCollectionsTests.cs", label="ProductCollection collectionNew = (ProductCollection)jsonSerializer.Deserialize(new JsonTextReader(new StringReader(sw.GetStringBuilder()\\n.ToString())), typeof(ProductCollection))", span="1839-1839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()"];
m3_828 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="557-557", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()"];
m3_820 [file="JsonSerializerCollectionsTests.cs", label="StringWriter sw = new StringWriter()", span="1832-1832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()"];
m3_822 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''[{''''Name'''':''''Test1'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':\\nnull},{''''Name'''':''''Test2'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null},{''''Name'''':''''\\nTest3'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null}]'',\n                sw.GetStringBuilder()\\n.ToString())", span="1836-1837", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()"];
m3_829 [file="JsonSerializerCollectionsTests.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()"];
m3_830 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="1023-1023", cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)"];
m3_832 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()"];
m3_831 [file="JsonSerializerCollectionsTests.cs", label="Entry System.IO.StringWriter.GetStringBuilder()", span="0-0", cluster="System.IO.StringWriter.GetStringBuilder()"];
m3_834 [file="JsonSerializerCollectionsTests.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)"];
m3_835 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="877-877", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)"];
m3_833 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="82-82", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)"];
m3_825 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()", span="1820-1820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomCollectionSerialization()"];
m3_898 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EmptyStringInHashtableIsDeserialized()", span="2003-2003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EmptyStringInHashtableIsDeserialized()"];
m3_899 [file="JsonSerializerCollectionsTests.cs", label="string externalJson = @''{''''$type'''':''''System.Collections.Hashtable, mscorlib'''',''''testkey'''':''''''''}''", span="2005-2005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EmptyStringInHashtableIsDeserialized()"];
m3_900 [file="JsonSerializerCollectionsTests.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.All }", span="2007-2007", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EmptyStringInHashtableIsDeserialized()"];
m3_902 [file="JsonSerializerCollectionsTests.cs", label="Hashtable deserializeTest2 = JsonConvert.DeserializeObject<Hashtable>(externalJson, settings)", span="2010-2010", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EmptyStringInHashtableIsDeserialized()"];
m3_901 [file="JsonSerializerCollectionsTests.cs", label="JsonConvert.SerializeObject(new Hashtable { { ''testkey'', '''' } }, settings)", span="2009-2009", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EmptyStringInHashtableIsDeserialized()"];
m3_328 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="447-447", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()"];
m3_758 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="582-582", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)"];
m3_905 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Hashtable.Hashtable()", span="0-0", cluster="System.Collections.Hashtable.Hashtable()"];
m3_903 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(deserializeTest2[''testkey''], '''')", span="2012-2012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EmptyStringInHashtableIsDeserialized()"];
m3_329 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="766-766", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)"];
m3_904 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EmptyStringInHashtableIsDeserialized()", span="2003-2003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EmptyStringInHashtableIsDeserialized()"];
m3_321 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorList<T>.PrivateDefaultCtorList()", span="639-639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorList<T>.PrivateDefaultCtorList()"];
m3_322 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorList<T>.PrivateDefaultCtorList()", span="639-639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorList<T>.PrivateDefaultCtorList()"];
m3_292 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", span="582-582", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()"];
m3_293 [file="JsonSerializerCollectionsTests.cs", label="return GetEnumerator();", span="584-584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()"];
m3_294 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()", span="582-582", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.System.Collections.IEnumerable.GetEnumerator()"];
m3_288 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.GetEnumerator()", span="577-577", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.GetEnumerator()"];
m3_856 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", span="1869-1869", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()"];
m3_857 [file="JsonSerializerCollectionsTests.cs", label="Article a1 = new Article(''a1'')", span="1871-1871", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()"];
m3_858 [file="JsonSerializerCollectionsTests.cs", label="Article a2 = new Article(''a2'')", span="1872-1872", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()"];
m3_860 [file="JsonSerializerCollectionsTests.cs", label="articles1.Add(a1)", span="1875-1875", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()"];
m3_867 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Article.Article(string)", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.Article.Article(string)"];
m3_859 [file="JsonSerializerCollectionsTests.cs", label="ArticleCollection articles1 = new ArticleCollection()", span="1874-1874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()"];
m3_861 [file="JsonSerializerCollectionsTests.cs", label="articles1.Add(a2)", span="1876-1876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()"];
m3_862 [file="JsonSerializerCollectionsTests.cs", label="string jsonText = JsonConvert.SerializeObject(articles1)", span="1878-1878", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()"];
m3_864 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(articles1.Count, articles2.Count)", span="1882-1882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()"];
m3_865 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(articles1[0].Name, articles2[0].Name)", span="1883-1883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()"];
m3_868 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ArticleCollection.ArticleCollection()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.ArticleCollection.ArticleCollection()"];
m3_863 [file="JsonSerializerCollectionsTests.cs", label="ArticleCollection articles2 = JsonConvert.DeserializeObject<ArticleCollection>(jsonText)", span="1880-1880", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()"];
m3_866 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", span="1869-1869", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()"];
m3_920 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericIListAndOverrideConstructor()", span="2041-2041", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericIListAndOverrideConstructor()"];
m3_921 [file="JsonSerializerCollectionsTests.cs", label="MyClass deserialized = JsonConvert.DeserializeObject<MyClass>(@''[''''apple'''', ''''monkey'''', ''''goose'''']'')", span="2043-2043", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericIListAndOverrideConstructor()"];
m3_922 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''apple'', deserialized[0])", span="2045-2045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericIListAndOverrideConstructor()"];
m3_923 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''monkey'', deserialized[1])", span="2046-2046", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericIListAndOverrideConstructor()"];
m3_924 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''goose'', deserialized[2])", span="2047-2047", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericIListAndOverrideConstructor()"];
m3_925 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericIListAndOverrideConstructor()", span="2041-2041", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericIListAndOverrideConstructor()"];
m3_135 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionBadIEnumerableParameter.TestCollectionBadIEnumerableParameter(\\nSystem.Collections.Generic.List<string>)", span="251-251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionBadIEnumerableParameter.TestCollectionBadIEnumerableParameter(\\nSystem.Collections.Generic.List<string>)"];
m3_136 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionBadIEnumerableParameter.TestCollectionBadIEnumerableParameter(\\nSystem.Collections.Generic.List<string>)", span="251-251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionBadIEnumerableParameter.TestCollectionBadIEnumerableParameter(\\nSystem.Collections.Generic.List<string>)"];
m3_607 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", span="1277-1277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()"];
m3_608 [file="JsonSerializerCollectionsTests.cs", label="Array3D aa = new Array3D()", span="1279-1279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()"];
m3_609 [file="JsonSerializerCollectionsTests.cs", label="aa.Before = ''Before!''", span="1280-1280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()"];
m3_610 [file="JsonSerializerCollectionsTests.cs", label="aa.After = ''After!''", span="1281-1281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()"];
m3_611 [file="JsonSerializerCollectionsTests.cs", label="aa.Coordinates = new[,,] { { { 1, 1, 1 }, { 1, 1, 2 } }, { { 1, 2, 1 }, { 1, 2, 2 } }, { { 2, 1, 1 }, { 2, 1, 2 } }, { { 2, 2, 1 }, { \\n2, 2, 2 } } }", span="1282-1282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()"];
m3_612 [file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(aa)", span="1284-1284", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()"];
m3_615 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Array3D.Array3D()", span="2529-2529", cluster="Newtonsoft.Json.Tests.Serialization.Array3D.Array3D()"];
m3_613 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[\\n2,2,1],[2,2,2]]],''''After'''':''''After!''''}'', json)", span="1286-1286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()"];
m3_614 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", span="1277-1277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()"];
m3_663 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", span="1460-1460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()"];
m3_664 [file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,\\n2,1],[2,2,2]]],''''After'''':''''After!''''}''", span="1462-1462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()"];
m3_665 [file="JsonSerializerCollectionsTests.cs", label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="1464-1464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()"];
m3_674 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(json, after)", span="1476-1476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()"];
m3_666 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="1466-1466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()"];
m3_667 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''After!'', aa.After)", span="1467-1467", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()"];
m3_668 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(4, aa.Coordinates.GetLength(0))", span="1468-1468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()"];
m3_669 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, aa.Coordinates.GetLength(1))", span="1469-1469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()"];
m3_670 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, aa.Coordinates.GetLength(2))", span="1470-1470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()"];
m3_671 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, aa.Coordinates[0, 0, 0])", span="1471-1471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()"];
m3_672 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, aa.Coordinates[1, 1, 1])", span="1472-1472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()"];
m3_673 [file="JsonSerializerCollectionsTests.cs", label="string after = JsonConvert.SerializeObject(aa)", span="1474-1474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()"];
m3_636 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Array.GetLength(int)", span="0-0", cluster="System.Array.GetLength(int)"];
m3_675 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()", span="1460-1460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D()"];
m3_938 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.AccountInfo.AccountInfo(string, string)", span="2076-2076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.AccountInfo.AccountInfo(string, string)"];
m3_939 [file="JsonSerializerCollectionsTests.cs", label="this.Endpoint = endpoint", span="2078-2078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.AccountInfo.AccountInfo(string, string)"];
m3_940 [file="JsonSerializerCollectionsTests.cs", label="this.Name = name", span="2079-2079", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.AccountInfo.AccountInfo(string, string)"];
m3_941 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.AccountInfo.AccountInfo(string, string)", span="2076-2076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.AccountInfo.AccountInfo(string, string)"];
m3_92 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.System.Collections.IEnumerable.GetEnumerator()", span="180-180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.System.Collections.IEnumerable.GetEnumerator()"];
m3_93 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.System.Collections.IEnumerable.GetEnumerator()", span="180-180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.System.Collections.IEnumerable.GetEnumerator()"];
m3_1111 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="2592-2592", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)"];
m3_1112 [file="JsonSerializerCollectionsTests.cs", label="writer.WriteValue(value)", span="2594-2594", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)"];
m3_1113 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="2592-2592", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)"];
m3_1114 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(object)", span="1427-1427", cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)"];
m3_598 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", span="1264-1264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()"];
m3_599 [file="JsonSerializerCollectionsTests.cs", label="Array2D aa = new Array2D()", span="1266-1266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()"];
m3_600 [file="JsonSerializerCollectionsTests.cs", label="aa.Before = ''Before!''", span="1267-1267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()"];
m3_601 [file="JsonSerializerCollectionsTests.cs", label="aa.After = ''After!''", span="1268-1268", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()"];
m3_602 [file="JsonSerializerCollectionsTests.cs", label="aa.Coordinates = new[,] { { 1, 1 }, { 1, 2 }, { 2, 1 }, { 2, 2 } }", span="1269-1269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()"];
m3_603 [file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(aa)", span="1271-1271", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()"];
m3_606 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Array2D.Array2D()", span="2522-2522", cluster="Newtonsoft.Json.Tests.Serialization.Array2D.Array2D()"];
m3_604 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}'', \\njson)", span="1273-1273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()"];
m3_605 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()", span="1264-1264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray2D()"];
m3_911 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.ReadOnlyCollectionWithArrayArgument(T[])", span="2431-2431", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.ReadOnlyCollectionWithArrayArgument(T[])"];
m3_1058 [file="JsonSerializerCollectionsTests.cs", label="_values = args ?? (IList<T>)new List<T>()", span="2433-2433", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.ReadOnlyCollectionWithArrayArgument(T[])"];
m3_1059 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.ReadOnlyCollectionWithArrayArgument(T[])", span="2431-2431", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.ReadOnlyCollectionWithArrayArgument(T[])"];
m3_81 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()"];
m3_996 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractGroups()", span="2275-2275", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractGroups()"];
m3_998 [file="JsonSerializerCollectionsTests.cs", label="this.Groups = new List<string>()", span="2277-2277", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractGroups()"];
m3_999 [file="JsonSerializerCollectionsTests.cs", label="this.Person.ContainsKey(''groups'')", span="2278-2278", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractGroups()"];
m3_1000 [file="JsonSerializerCollectionsTests.cs", label="string groupsString = this.Person[''groups'']", span="2280-2280", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractGroups()"];
m3_1004 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractGroups()", span="2275-2275", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractGroups()"];
m3_1005 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)"];
m3_1001 [file="JsonSerializerCollectionsTests.cs", label="string[] stringList = groupsString.Split(',')", span="2281-2281", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractGroups()"];
m3_1006 [file="JsonSerializerCollectionsTests.cs", label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])"];
m3_1002 [file="JsonSerializerCollectionsTests.cs", label=stringList, span="2283-2283", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractGroups()"];
m3_1003 [file="JsonSerializerCollectionsTests.cs", label="this.Groups.Add(group)", span="2285-2285", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractGroups()"];
m3_380 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()", span="739-739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()"];
m3_381 [file="JsonSerializerCollectionsTests.cs", label="IReadOnlyDictionary<string, int> dic = JsonConvert.DeserializeObject<IReadOnlyDictionary<string, int>>(''{'one':1,'two':2}'')", span="741-741", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()"];
m3_382 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, dic.Count)", span="743-743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()"];
m3_383 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, dic[''one''])", span="745-745", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()"];
m3_384 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, dic[''two''])", span="746-746", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()"];
m3_385 [file="JsonSerializerCollectionsTests.cs", label="CustomAssert.IsInstanceOfType(typeof(ReadOnlyDictionary<string, int>), dic)", span="748-748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()"];
m3_386 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()", span="739-739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionaryInterface()"];
m3_387 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="314-314", cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)"];
m3_71 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.FloatKey_MaxValue()", span="148-148", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.FloatKey_MaxValue()"];
m3_72 [file="JsonSerializerCollectionsTests.cs", label="Dictionary<float, int> dictionary = new Dictionary<float, int> { { float.MaxValue, 1 } }", span="150-150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.FloatKey_MaxValue()"];
m3_73 [file="JsonSerializerCollectionsTests.cs", label="string output = JsonConvert.SerializeObject(dictionary)", span="151-151", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.FloatKey_MaxValue()"];
m3_74 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''3.40282347E+38'''':1}'', output)", span="152-152", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.FloatKey_MaxValue()"];
m3_75 [file="JsonSerializerCollectionsTests.cs", label="Dictionary<float, int> deserializedValue = JsonConvert.DeserializeObject<Dictionary<float, int>>(output)", span="154-154", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.FloatKey_MaxValue()"];
m3_76 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(float.MaxValue, deserializedValue.First().Key)", span="155-155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.FloatKey_MaxValue()"];
m3_77 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.FloatKey_MaxValue()", span="148-148", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.FloatKey_MaxValue()"];
m3_63 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()"];
m3_373 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", span="727-727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()"];
m3_374 [file="JsonSerializerCollectionsTests.cs", label="ReadOnlyCollection<int> list = JsonConvert.DeserializeObject<ReadOnlyCollection<int>>(''[1,2,3]'')", span="729-729", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()"];
m3_375 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, list.Count)", span="731-731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()"];
m3_376 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, list[0])", span="733-733", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()"];
m3_377 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, list[1])", span="734-734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()"];
m3_378 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, list[2])", span="735-735", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()"];
m3_379 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", span="727-727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()"];
m3_625 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", span="1356-1356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()"];
m3_626 [file="JsonSerializerCollectionsTests.cs", label="string json = @''{\n  ''''Before'''': ''''Before!'''',\n  ''''Coordinates'''': [\n    [\n      [\n        1.0,\n        1.0,\n        \\n1.0\n      ],\n      [\n        1.0,\n        1.0,\n        2.0\n      ]\n    ],\n    [\n      [\n        1.0,\n        2.0,\n        \\n1.0\n      ],\n      [\n        1.0,\n        2.0,\n        2.0\n      ]\n    ],\n    [\n      [\n        2.0,\n        1.0,\n        \\n1.0\n      ],\n      [\n        2.0,\n        1.0,\n        2.0\n      ]\n    ],\n    [\n      [\n        2.0,\n        2.0,\n        \\n1.0\n      ],\n      [\n        2.0,\n        2.0,\n        2.0\n      ]\n    ]\n  ],\n  ''''After'''': ''''After!''''\n}''", span="1358-1411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()"];
m3_627 [file="JsonSerializerCollectionsTests.cs", label="Array3DWithConverter aa = JsonConvert.DeserializeObject<Array3DWithConverter>(json)", span="1413-1413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()"];
m3_628 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="1415-1415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()"];
m3_629 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''After!'', aa.After)", span="1416-1416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()"];
m3_630 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(4, aa.Coordinates.GetLength(0))", span="1417-1417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()"];
m3_631 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, aa.Coordinates.GetLength(1))", span="1418-1418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()"];
m3_632 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, aa.Coordinates.GetLength(2))", span="1419-1419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()"];
m3_633 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, aa.Coordinates[0, 0, 0])", span="1420-1420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()"];
m3_634 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, aa.Coordinates[1, 1, 1])", span="1421-1421", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()"];
m3_635 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()", span="1356-1356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3DWithConverter()"];
m3_793 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", span="1773-1773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()"];
m3_794 [file="JsonSerializerCollectionsTests.cs", label="string jsonText = @''[3, ''''somestring'''',[1,2,3],{}]''", span="1775-1775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()"];
m3_795 [file="JsonSerializerCollectionsTests.cs", label="ArrayList o = JsonConvert.DeserializeObject<ArrayList>(jsonText)", span="1776-1776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()"];
m3_796 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(4, o.Count)", span="1778-1778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()"];
m3_797 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, ((JArray)o[2]).Count)", span="1779-1779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()"];
m3_798 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0, ((JObject)o[3]).Count)", span="1780-1780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()"];
m3_799 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()", span="1773-1773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArrayAsArrayList()"];
m3_959 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.CopyTo(string[], int)", span="2154-2154", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.CopyTo(string[], int)"];
m3_960 [file="JsonSerializerCollectionsTests.cs", label="((IList<string>)_storage).CopyTo(array, arrayIndex)", span="2156-2156", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.CopyTo(string[], int)"];
m3_961 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.CopyTo(string[], int)", span="2154-2154", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.CopyTo(string[], int)"];
m3_962 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)"];
m3_203 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorBadIEnumerableParameter()", span="370-370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorBadIEnumerableParameter()"];
m3_204 [file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonException>(\n                () => JsonConvert.SerializeObject(new TestDictionaryBadIEnumerableParameter(\\nnull)),\n                ''Constructor for 'Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests+TestDictionaryBadIEnumerableParameter' \\nmust have no parameters or a single parameter that implements 'System.Collections.Generic.IEnumerable`1[System.Collections.Generic.KeyValuePair`\\n2[System.String,System.Int32]]'.'')", span="372-374", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorBadIEnumerableParameter()"];
m3_205 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorBadIEnumerableParameter()", span="370-370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorBadIEnumerableParameter()"];
m3_206 [file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="373-373", cluster="lambda expression"];
m3_561 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", span="1128-1128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()"];
m3_562 [file="JsonSerializerCollectionsTests.cs", label="string json = @''[ null ]''", span="1130-1130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()"];
m3_563 [file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>>>(\\njson); }, ''Cannot convert null value to KeyValuePair. Path '[0]', line 1, position 6.'')", span="1132-1132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()"];
m3_566 [file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>>>(json)", span="1132-1132", cluster="lambda expression"];
m3_564 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", span="1128-1128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()"];
m3_565 [file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="1132-1132", cluster="lambda expression"];
m3_79 [file="JsonSerializerCollectionsTests.cs", label="_bars = new List<int>()", span="164-164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.TestCollectionPrivateParameterized()"];
m3_80 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.TestCollectionPrivateParameterized()", span="162-162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.TestCollectionPrivateParameterized()"];
m3_153 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivateParameterized.TestDictionaryPrivateParameterized()", span="289-289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivateParameterized.TestDictionaryPrivateParameterized()"];
m3_154 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivateParameterized.TestDictionaryPrivateParameterized()", span="289-289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivateParameterized.TestDictionaryPrivateParameterized()"];
m3_985 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.CASResponce.CASResponce(string)", span="2262-2262", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.CASResponce(string)"];
m3_986 [file="JsonSerializerCollectionsTests.cs", label="this.Domain = ''''", span="2264-2264", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.CASResponce(string)"];
m3_991 [file="JsonSerializerCollectionsTests.cs", label="ParseReplyXML(xmlResponce)", span="2270-2270", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.CASResponce(string)"];
m3_987 [file="JsonSerializerCollectionsTests.cs", label="this.Mail = ''''", span="2265-2265", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.CASResponce(string)"];
m3_988 [file="JsonSerializerCollectionsTests.cs", label="this.Surname = ''''", span="2266-2266", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.CASResponce(string)"];
m3_989 [file="JsonSerializerCollectionsTests.cs", label="this.Givenname = ''''", span="2267-2267", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.CASResponce(string)"];
m3_990 [file="JsonSerializerCollectionsTests.cs", label="this.CommonName = ''''", span="2268-2268", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.CASResponce(string)"];
m3_992 [file="JsonSerializerCollectionsTests.cs", label="ExtractGroups()", span="2271-2271", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.CASResponce(string)"];
m3_995 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", span="2317-2317", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)"];
m3_993 [file="JsonSerializerCollectionsTests.cs", label="ExtractLanguage()", span="2272-2272", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.CASResponce(string)"];
m3_994 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.CASResponce.CASResponce(string)", span="2262-2262", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.CASResponce(string)"];
m3_997 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractLanguage()", span="2291-2291", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractLanguage()"];
m3_974 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Remove(string)", span="2174-2174", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Remove(string)"];
m3_975 [file="JsonSerializerCollectionsTests.cs", label="return ((IList<string>)_storage).Remove(item);", span="2176-2176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Remove(string)"];
m3_976 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Remove(string)", span="2174-2174", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Remove(string)"];
m3_977 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Remove(T)"];
m3_1017 [file="JsonSerializerCollectionsTests.cs", label="System.Xml.Linq.XDocument xDoc = XDocument.Parse(xmlString)", span="2321-2321", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)"];
m3_1049 [file="JsonSerializerCollectionsTests.cs", label="this.XMLResponce = xmlString", span="2378-2378", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)"];
m3_1018 [file="JsonSerializerCollectionsTests.cs", label="var root = xDoc.Root", span="2323-2323", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)"];
m3_1052;
m3_1019 [file="JsonSerializerCollectionsTests.cs", label="string ns = ''http://www.yale.edu/tp/cas''", span="2325-2325", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)"];
m3_1020 [file="JsonSerializerCollectionsTests.cs", label="XElement auth = root.Element(XName.Get(''authenticationSuccess'', ns))", span="2327-2327", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)"];
m3_1022 [file="JsonSerializerCollectionsTests.cs", label="auth = root.Element(XName.Get(''authenticationFailure'', ns))", span="2330-2330", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)"];
m3_1023 [file="JsonSerializerCollectionsTests.cs", label="XElement xNodeUser = auth.Element(XName.Get(''user'', ns))", span="2332-2332", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)"];
m3_1021 [file="JsonSerializerCollectionsTests.cs", label="auth == null", span="2329-2329", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)"];
m3_1024 [file="JsonSerializerCollectionsTests.cs", label="XElement eduPers = auth.Element(XName.Get(''norEduPerson'', ''''))", span="2334-2334", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)"];
m3_1054;
m3_1053;
m3_1027 [file="JsonSerializerCollectionsTests.cs", label="xNodeUser != null", span="2339-2339", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)"];
m3_1028 [file="JsonSerializerCollectionsTests.cs", label="casUser = xNodeUser.Value", span="2341-2341", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)"];
m3_1025 [file="JsonSerializerCollectionsTests.cs", label="string casUser = ''''", span="2336-2336", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)"];
m3_1029 [file="JsonSerializerCollectionsTests.cs", label="eduPers != null", span="2343-2343", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)"];
m3_1030 [file="JsonSerializerCollectionsTests.cs", label="eduPers.Elements()", span="2345-2345", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)"];
m3_1026 [file="JsonSerializerCollectionsTests.cs", label="Dictionary<string, string> eduPerson = new Dictionary<string, string>()", span="2337-2337", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)"];
m3_1034 [file="JsonSerializerCollectionsTests.cs", label="casUser.Trim() != ''''", span="2359-2359", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)"];
m3_1035 [file="JsonSerializerCollectionsTests.cs", label="this.user = casUser", span="2361-2361", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)"];
m3_1031 [file="JsonSerializerCollectionsTests.cs", label="!eduPerson.ContainsKey(xPersonValue.Name.LocalName)", span="2347-2347", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)"];
m3_1032 [file="JsonSerializerCollectionsTests.cs", label="eduPerson.Add(xPersonValue.Name.LocalName, xPersonValue.Value)", span="2349-2349", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)"];
m3_1033 [file="JsonSerializerCollectionsTests.cs", label="eduPerson[xPersonValue.Name.LocalName] = eduPerson[xPersonValue.Name.LocalName] + '';'' + xPersonValue.Value", span="2353-2353", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)"];
m3_1036 [file="JsonSerializerCollectionsTests.cs", label="eduPerson.ContainsKey(''domain'')", span="2364-2364", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)"];
m3_1037 [file="JsonSerializerCollectionsTests.cs", label="this.Domain = eduPerson[''domain'']", span="2365-2365", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)"];
m3_1038 [file="JsonSerializerCollectionsTests.cs", label="eduPerson.ContainsKey(''organizationName'')", span="2366-2366", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)"];
m3_1039 [file="JsonSerializerCollectionsTests.cs", label="this.OrganizationName = eduPerson[''organizationName'']", span="2367-2367", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)"];
m3_1040 [file="JsonSerializerCollectionsTests.cs", label="eduPerson.ContainsKey(''mail'')", span="2368-2368", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)"];
m3_1041 [file="JsonSerializerCollectionsTests.cs", label="this.Mail = eduPerson[''mail'']", span="2369-2369", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)"];
m3_1042 [file="JsonSerializerCollectionsTests.cs", label="eduPerson.ContainsKey(''sn'')", span="2370-2370", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)"];
m3_1043 [file="JsonSerializerCollectionsTests.cs", label="this.Surname = eduPerson[''sn'']", span="2371-2371", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)"];
m3_1044 [file="JsonSerializerCollectionsTests.cs", label="eduPerson.ContainsKey(''gn'')", span="2372-2372", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)"];
m3_1045 [file="JsonSerializerCollectionsTests.cs", label="this.Givenname = eduPerson[''gn'']", span="2373-2373", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)"];
m3_1046 [file="JsonSerializerCollectionsTests.cs", label="eduPerson.ContainsKey(''cn'')", span="2374-2374", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)"];
m3_1047 [file="JsonSerializerCollectionsTests.cs", label="this.CommonName = eduPerson[''cn'']", span="2375-2375", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)"];
m3_1048 [file="JsonSerializerCollectionsTests.cs", label="this.Person = eduPerson", span="2377-2377", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)"];
m3_1055;
m3_1056;
m3_1057;
m3_1016 [file="JsonSerializerCollectionsTests.cs", label="Entry string.Trim()", span="0-0", cluster="string.Trim()"];
m3_1050 [file="JsonSerializerCollectionsTests.cs", label="this.user = ''''", span="2382-2382", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)"];
m3_1051 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)", span="2317-2317", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ParseReplyXML(string)"];
m3_1137 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.CanConvert(System.Type)", span="2636-2636", cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.CanConvert(System.Type)"];
m3_1138 [file="JsonSerializerCollectionsTests.cs", label="return (objectType == typeof(string));", span="2638-2638", cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.CanConvert(System.Type)"];
m3_1139 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.CanConvert(System.Type)", span="2636-2636", cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.CanConvert(System.Type)"];
m3_64 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DoubleKey_MaxValue()", span="137-137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DoubleKey_MaxValue()"];
m3_65 [file="JsonSerializerCollectionsTests.cs", label="Dictionary<double, int> dictionary = new Dictionary<double, int> { { double.MaxValue, 1 } }", span="139-139", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DoubleKey_MaxValue()"];
m3_66 [file="JsonSerializerCollectionsTests.cs", label="string output = JsonConvert.SerializeObject(dictionary)", span="140-140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DoubleKey_MaxValue()"];
m3_67 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''1.7976931348623157E+308'''':1}'', output)", span="141-141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DoubleKey_MaxValue()"];
m3_68 [file="JsonSerializerCollectionsTests.cs", label="Dictionary<double, int> deserializedValue = JsonConvert.DeserializeObject<Dictionary<double, int>>(output)", span="143-143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DoubleKey_MaxValue()"];
m3_69 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(double.MaxValue, deserializedValue.First().Key)", span="144-144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DoubleKey_MaxValue()"];
m3_70 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DoubleKey_MaxValue()", span="137-137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DoubleKey_MaxValue()"];
m3_716 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncomplete3DArray()", span="1535-1535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncomplete3DArray()"];
m3_717 [file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[/*hi*/[/*hi*/[1/*hi*/,/*hi*/1/*hi*/,1]/*hi*/,/*hi*/[1,1''", span="1537-1537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncomplete3DArray()"];
m3_718 [file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonException>(() => JsonConvert.DeserializeObject<Array3D>(json))", span="1539-1539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncomplete3DArray()"];
m3_721 [file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<Array3D>(json)", span="1539-1539", cluster="lambda expression"];
m3_719 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncomplete3DArray()", span="1535-1535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncomplete3DArray()"];
m3_720 [file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="1539-1539", cluster="lambda expression"];
m3_1108 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="2580-2580", cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()"];
m3_1109 [file="JsonSerializerCollectionsTests.cs", label="return GetEnumerator();", span="2582-2582", cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()"];
m3_1110 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="2580-2580", cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()"];
m3_1102 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", span="2565-2565", cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()"];
m3_333 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList()", span="659-659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList()"];
m3_334 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList()", span="659-659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList()"];
m3_495 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", span="1004-1004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()"];
m3_496 [file="JsonSerializerCollectionsTests.cs", label="Movie p = new Movie()", span="1006-1006", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()"];
m3_497 [file="JsonSerializerCollectionsTests.cs", label="p.Name = ''Existing,''", span="1007-1007", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()"];
m3_498 [file="JsonSerializerCollectionsTests.cs", label="JsonConvert.PopulateObject(''{'Name':'Appended'}'', p, new JsonSerializerSettings\n            {\n                Converters = new \\nList<JsonConverter> { new StringAppenderConverter() }\n            })", span="1009-1012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()"];
m3_499 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Existing,Appended'', p.Name)", span="1014-1014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()"];
m3_492 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.Movie.Movie()"];
m3_501 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.StringAppenderConverter()", span="2621-2621", cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.StringAppenderConverter()"];
m3_494 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", span="836-836", cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)"];
m3_500 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()", span="1004-1004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringAppenderConverterTest()"];
m3_800 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", span="1785-1785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()"];
m3_801 [file="JsonSerializerCollectionsTests.cs", label="Name name = new Name(''The Idiot in Next To Me'')", span="1787-1787", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()"];
m3_802 [file="JsonSerializerCollectionsTests.cs", label="PhoneNumber p1 = new PhoneNumber(''555-1212'')", span="1789-1789", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()"];
m3_804 [file="JsonSerializerCollectionsTests.cs", label="name.pNumbers.Add(p1)", span="1792-1792", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()"];
m3_805 [file="JsonSerializerCollectionsTests.cs", label="name.pNumbers.Add(p2)", span="1793-1793", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()"];
m3_806 [file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(name, Formatting.Indented)", span="1795-1795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()"];
m3_814 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Name.Name(string)", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.Name.Name(string)"];
m3_815 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PhoneNumber.PhoneNumber(string)", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.PhoneNumber.PhoneNumber(string)"];
m3_803 [file="JsonSerializerCollectionsTests.cs", label="PhoneNumber p2 = new PhoneNumber(''444-1212'')", span="1790-1790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()"];
m3_807 [file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''{\n  ''''personsName'''': ''''The Idiot in Next To Me'''',\n  ''''pNumbers'''': [\n    {\n      ''''phoneNumber'''': ''''\\n555-1212''''\n    },\n    {\n      ''''phoneNumber'''': ''''444-1212''''\n    }\n  ]\n}'', json)", span="1797-1807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()"];
m3_808 [file="JsonSerializerCollectionsTests.cs", label="Name newName = JsonConvert.DeserializeObject<Name>(json)", span="1809-1809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()"];
m3_809 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''The Idiot in Next To Me'', newName.personsName)", span="1811-1811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()"];
m3_810 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, newName.pNumbers.Count)", span="1814-1814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()"];
m3_811 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''555-1212'', newName.pNumbers[0].phoneNumber)", span="1815-1815", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()"];
m3_812 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''444-1212'', newName.pNumbers[1].phoneNumber)", span="1816-1816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()"];
m3_813 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()", span="1785-1785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeMemberGenericList()"];
m3_242 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()", span="467-467", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()"];
m3_243 [file="JsonSerializerCollectionsTests.cs", label="var onebasedArray = Array.CreateInstance(typeof(string), new[] { 3 }, new[] { 2 })", span="469-469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()"];
m3_244 [file="JsonSerializerCollectionsTests.cs", label="var i = onebasedArray.GetLowerBound(0)", span="471-471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()"];
m3_245 [file="JsonSerializerCollectionsTests.cs", label="i <= onebasedArray.GetUpperBound(0)", span="471-471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()"];
m3_246 [file="JsonSerializerCollectionsTests.cs", label="onebasedArray.SetValue(i.ToString(CultureInfo.InvariantCulture), new[] { i, })", span="473-473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()"];
m3_248 [file="JsonSerializerCollectionsTests.cs", label="string output = JsonConvert.SerializeObject(onebasedArray, Formatting.Indented)", span="476-476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()"];
m3_247 [file="JsonSerializerCollectionsTests.cs", label="i++", span="471-471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()"];
m3_254 [file="JsonSerializerCollectionsTests.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)"];
m3_249 [file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''[\n  ''''2'''',\n  ''''3'''',\n  ''''4''''\n]'', output)", span="478-482", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()"];
m3_250 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()", span="467-467", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonZeroBasedArray()"];
m3_219 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNameValueCollection()", span="407-407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNameValueCollection()"];
m3_220 [file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\n                () => JsonConvert.DeserializeObject<NameValueCollectionTestClass>(''{\\nCollection:[]}''),\n                ''Cannot create and populate list type System.Collections.Specialized.NameValueCollection. Path '\\nCollection', line 1, position 13.'')", span="409-411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNameValueCollection()"];
m3_221 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNameValueCollection()", span="407-407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNameValueCollection()"];
m3_222 [file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="410-410", cluster="lambda expression"];
m3_780 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", span="1754-1754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()"];
m3_781 [file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''action'''':''''Router'''',''''method'''':''''Navigate'''',''''data'''':[''''dashboard'''',[''''id'''', 1, ''''\\nteststring'''', ''''test''''],{''''one'''':1}],''''type'''':''''rpc'''',''''tid'''':2}''", span="1756-1756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()"];
m3_782 [file="JsonSerializerCollectionsTests.cs", label="ObjectArrayPropertyTest o = JsonConvert.DeserializeObject<ObjectArrayPropertyTest>(json)", span="1758-1758", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()"];
m3_783 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Router'', o.Action)", span="1760-1760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()"];
m3_784 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Navigate'', o.Method)", span="1761-1761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()"];
m3_785 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, o.Data.Length)", span="1762-1762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()"];
m3_786 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''dashboard'', o.Data[0])", span="1763-1763", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()"];
m3_787 [file="JsonSerializerCollectionsTests.cs", label="CustomAssert.IsInstanceOfType(typeof(JArray), o.Data[1])", span="1764-1764", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()"];
m3_788 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(4, ((JArray)o.Data[1]).Count)", span="1765-1765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()"];
m3_789 [file="JsonSerializerCollectionsTests.cs", label="CustomAssert.IsInstanceOfType(typeof(JObject), o.Data[2])", span="1766-1766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()"];
m3_790 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, ((JObject)o.Data[2]).Count)", span="1767-1767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()"];
m3_791 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, (int)((JObject)o.Data[2])[''one''])", span="1768-1768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()"];
m3_792 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", span="1754-1754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()"];
m3_942 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.MyClass()", span="2099-2099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.MyClass()"];
m3_943 [file="JsonSerializerCollectionsTests.cs", label="_storage = new List<string>()", span="2101-2101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.MyClass()"];
m3_944 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.MyClass()", span="2099-2099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.MyClass()"];
m3_338 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()", span="671-671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()"];
m3_339 [file="JsonSerializerCollectionsTests.cs", label="var list = JsonConvert.DeserializeObject<PrivateDefaultCtorWithIEnumerableCtorList<int>>(''[1,2]'')", span="673-673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()"];
m3_340 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, list.Count)", span="675-675", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()"];
m3_341 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, list[0])", span="676-676", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()"];
m3_342 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, list[1])", span="677-677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()"];
m3_343 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0, list[2])", span="678-678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()"];
m3_344 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()", span="671-671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()"];
m3_345 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonIsoDateDictionaryKey()", span="682-682", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonIsoDateDictionaryKey()"];
m3_346 [file="JsonSerializerCollectionsTests.cs", label="Dictionary<DateTime, string> d = JsonConvert.DeserializeObject<Dictionary<DateTime, string>>(@''{''''04/28/2013 00:00:00'''':''''\\ntest''''}'')", span="684-684", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonIsoDateDictionaryKey()"];
m3_347 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, d.Count)", span="686-686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonIsoDateDictionaryKey()"];
m3_349 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''test'', d[key])", span="689-689", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonIsoDateDictionaryKey()"];
m3_348 [file="JsonSerializerCollectionsTests.cs", label="DateTime key = DateTime.Parse(''04/28/2013 00:00:00'', CultureInfo.InvariantCulture)", span="688-688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonIsoDateDictionaryKey()"];
m3_351 [file="JsonSerializerCollectionsTests.cs", label="Entry System.DateTime.Parse(string, System.IFormatProvider)", span="0-0", cluster="System.DateTime.Parse(string, System.IFormatProvider)"];
m3_350 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonIsoDateDictionaryKey()", span="682-682", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonIsoDateDictionaryKey()"];
m3_145 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()", span="275-275", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()"];
m3_146 [file="JsonSerializerCollectionsTests.cs", label="string json = @''[1,2,3]''", span="277-277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()"];
m3_147 [file="JsonSerializerCollectionsTests.cs", label="TestCollectionNonGeneric l = JsonConvert.DeserializeObject<TestCollectionNonGeneric>(json)", span="278-278", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()"];
m3_148 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, l.Count)", span="280-280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()"];
m3_149 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1L, l[0])", span="281-281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()"];
m3_150 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2L, l[1])", span="282-282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()"];
m3_151 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3L, l[2])", span="283-283", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()"];
m3_152 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()", span="275-275", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorNonGeneric()"];
m3_420 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.GetEnumerator()", span="844-844", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.GetEnumerator()"];
m3_421 [file="JsonSerializerCollectionsTests.cs", label="return _values.GetEnumerator();", span="846-846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.GetEnumerator()"];
m3_422 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.GetEnumerator()", span="844-844", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.GetEnumerator()"];
m3_906 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeCollectionWithConstructorArrayArgument()", span="2017-2017", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeCollectionWithConstructorArrayArgument()"];
m3_907 [file="JsonSerializerCollectionsTests.cs", label="var v = new ReadOnlyCollectionWithArrayArgument<double>(new[] { -0.014147478859765236, -0.011419606805541858, -0.010038461483676238 })", span="2019-2019", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeCollectionWithConstructorArrayArgument()"];
m3_908 [file="JsonSerializerCollectionsTests.cs", label="var json = JsonConvert.SerializeObject(v)", span="2020-2020", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeCollectionWithConstructorArrayArgument()"];
m3_909 [file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\n            {\n                JsonConvert.DeserializeObject<ReadOnlyCollectionWithArrayArgument<\\ndouble>>(json);\n            }, ''Unable to find a constructor to use for type Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument`\\n1[System.Double]. Path '', line 1, position 1.'')", span="2022-2025", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeCollectionWithConstructorArrayArgument()"];
m3_913 [file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<ReadOnlyCollectionWithArrayArgument<double>>(json)", span="2024-2024", cluster="lambda expression"];
m3_910 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeCollectionWithConstructorArrayArgument()", span="2017-2017", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeCollectionWithConstructorArrayArgument()"];
m3_912 [file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="2022-2025", cluster="lambda expression"];
m3_113 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()", span="215-215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()"];
m3_114 [file="JsonSerializerCollectionsTests.cs", label="TestCollectionPrivate c1 = TestCollectionPrivate.Create()", span="217-217", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()"];
m3_115 [file="JsonSerializerCollectionsTests.cs", label="c1.Add(0)", span="218-218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()"];
m3_116 [file="JsonSerializerCollectionsTests.cs", label="c1.Add(1)", span="219-219", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()"];
m3_117 [file="JsonSerializerCollectionsTests.cs", label="c1.Add(2)", span="220-220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()"];
m3_118 [file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(c1)", span="221-221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()"];
m3_110 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivate.Create()", span="208-208", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivate.Create()"];
m3_119 [file="JsonSerializerCollectionsTests.cs", label="TestCollectionPrivate c2 = JsonConvert.DeserializeObject<TestCollectionPrivate>(json)", span="222-222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()"];
m3_120 [file="JsonSerializerCollectionsTests.cs", label="List<int> values = c2.ToList()", span="224-224", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()"];
m3_121 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, values.Count)", span="226-226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()"];
m3_122 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0, values[0])", span="227-227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()"];
m3_123 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, values[1])", span="228-228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()"];
m3_124 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, values[2])", span="229-229", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()"];
m3_125 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()", span="215-215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorPrivate()"];
m3_201 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryBadIEnumerableParameter.TestDictionaryBadIEnumerableParameter(\\nSystem.Collections.Generic.Dictionary<string, string>)", span="364-364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryBadIEnumerableParameter.TestDictionaryBadIEnumerableParameter(\\nSystem.Collections.Generic.Dictionary<string, string>)"];
m3_202 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryBadIEnumerableParameter.TestDictionaryBadIEnumerableParameter(\\nSystem.Collections.Generic.Dictionary<string, string>)", span="364-364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryBadIEnumerableParameter.TestDictionaryBadIEnumerableParameter(\\nSystem.Collections.Generic.Dictionary<string, string>)"];
m3_963 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.GetEnumerator()", span="2159-2159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.GetEnumerator()"];
m3_964 [file="JsonSerializerCollectionsTests.cs", label="return ((IList<string>)_storage).GetEnumerator();", span="2161-2161", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.GetEnumerator()"];
m3_965 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.GetEnumerator()", span="2159-2159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.GetEnumerator()"];
m3_1088 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.RemoveAt(int)", span="2483-2483", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.RemoveAt(int)"];
m3_1089 [file="JsonSerializerCollectionsTests.cs", label="throw new NotImplementedException();", span="2485-2485", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.RemoveAt(int)"];
m3_1090 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.RemoveAt(int)", span="2483-2483", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.RemoveAt(int)"];
m3_1069 [file="JsonSerializerCollectionsTests.cs", label="Entry System.NotImplementedException.NotImplementedException()", span="0-0", cluster="System.NotImplementedException.NotImplementedException()"];
m3_1070 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Clear()", span="2451-2451", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Clear()"];
m3_1071 [file="JsonSerializerCollectionsTests.cs", label="throw new NotImplementedException();", span="2453-2453", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Clear()"];
m3_1072 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Clear()", span="2451-2451", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Clear()"];
m3_225 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomConcurrentDictionary.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", span="424-424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomConcurrentDictionary.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)"];
m3_226 [file="JsonSerializerCollectionsTests.cs", label="((IDictionary)this).Add(''key2'', new List<SomeObject>\n                {\n                    new SomeObject\n                    {\n                        \\nText1 = ''value2''\n                    }\n                })", span="426-432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomConcurrentDictionary.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)"];
m3_228 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SomeObject.SomeObject()", span="416-416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SomeObject.SomeObject()"];
m3_227 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomConcurrentDictionary.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", span="424-424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomConcurrentDictionary.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)"];
m3_229 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.IDictionary.Add(object, object)", span="0-0", cluster="System.Collections.IDictionary.Add(object, object)"];
m3_30 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentStack()", span="95-95", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentStack()"];
m3_31 [file="JsonSerializerCollectionsTests.cs", label="ConcurrentStack<int> stack1 = new ConcurrentStack<int>()", span="97-97", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentStack()"];
m3_32 [file="JsonSerializerCollectionsTests.cs", label="stack1.Push(1)", span="98-98", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentStack()"];
m3_33 [file="JsonSerializerCollectionsTests.cs", label="string output = JsonConvert.SerializeObject(stack1)", span="100-100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentStack()"];
m3_40 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Concurrent.ConcurrentStack<T>.ConcurrentStack()", span="0-0", cluster="System.Collections.Concurrent.ConcurrentStack<T>.ConcurrentStack()"];
m3_41 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Concurrent.ConcurrentStack<T>.Push(T)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentStack<T>.Push(T)"];
m3_34 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''[1]'', output)", span="101-101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentStack()"];
m3_35 [file="JsonSerializerCollectionsTests.cs", label="ConcurrentStack<int> stack2 = JsonConvert.DeserializeObject<ConcurrentStack<int>>(output)", span="103-103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentStack()"];
m3_36 [file="JsonSerializerCollectionsTests.cs", label="int i", span="104-104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentStack()"];
m3_37 [file="JsonSerializerCollectionsTests.cs", label="Assert.IsTrue(stack2.TryPop(out i))", span="105-105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentStack()"];
m3_38 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, i)", span="106-106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentStack()"];
m3_42 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Concurrent.ConcurrentStack<T>.TryPop(out T)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentStack<T>.TryPop(out T)"];
m3_39 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentStack()", span="95-95", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentStack()"];
m3_401 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, \\nout TValue)", span="781-781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out \\nTValue)"];
m3_402 [file="JsonSerializerCollectionsTests.cs", label="return _dictionary.TryGetValue(key, out value);", span="783-783", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out \\nTValue)"];
m3_404 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)"];
m3_403 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, \\nout TValue)", span="781-781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out \\nTValue)"];
m3_568 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", span="1153-1153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()"];
m3_569 [file="JsonSerializerCollectionsTests.cs", label="NonReadOnlyList = new List<int> { 1 }", span="1155-1155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()"];
m3_570 [file="JsonSerializerCollectionsTests.cs", label="NonReadOnlyDictionary = new Dictionary<string, int> { { ''first'', 2 } }", span="1156-1156", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()"];
m3_571 [file="JsonSerializerCollectionsTests.cs", label="Array = new[] { 3 }", span="1158-1158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()"];
m3_572 [file="JsonSerializerCollectionsTests.cs", label="List = new ReadOnlyCollection<int>(new[] { 4 })", span="1160-1160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()"];
m3_580 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", span="0-0", cluster="System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)"];
m3_573 [file="JsonSerializerCollectionsTests.cs", label="Dictionary = new ReadOnlyDictionary<string, int>(new Dictionary<string, int> { { ''first'', 5 } })", span="1161-1161", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()"];
m3_574 [file="JsonSerializerCollectionsTests.cs", label="IReadOnlyCollection = new ReadOnlyCollection<int>(new[] { 6 })", span="1163-1163", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()"];
m3_581 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.ReadOnlyDictionary(System.Collections.Generic.IDictionary<\\nTKey, TValue>)", span="0-0", cluster="System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.ReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, \\nTValue>)"];
m3_575 [file="JsonSerializerCollectionsTests.cs", label="ReadOnlyCollection = new ReadOnlyCollection<int>(new[] { 7 })", span="1164-1164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()"];
m3_576 [file="JsonSerializerCollectionsTests.cs", label="IReadOnlyList = new ReadOnlyCollection<int>(new[] { 8 })", span="1165-1165", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()"];
m3_577 [file="JsonSerializerCollectionsTests.cs", label="IReadOnlyDictionary = new ReadOnlyDictionary<string, int>(new Dictionary<string, int> { { ''first'', 9 } })", span="1167-1167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()"];
m3_578 [file="JsonSerializerCollectionsTests.cs", label="ReadOnlyDictionary = new ReadOnlyDictionary<string, int>(new Dictionary<string, int> { { ''first'', 10 } })", span="1168-1168", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()"];
m3_579 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", span="1153-1153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()"];
m3_423 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", span="849-849", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()"];
m3_424 [file="JsonSerializerCollectionsTests.cs", label="return _values.GetEnumerator();", span="851-851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()"];
m3_425 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", span="849-849", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()"];
m3_1097 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.System.Collections.IEnumerable.GetEnumerator()", span="2515-2515", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.System.Collections.IEnumerable.GetEnumerator()"];
m3_1098 [file="JsonSerializerCollectionsTests.cs", label="return GetEnumerator();", span="2517-2517", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.System.Collections.IEnumerable.GetEnumerator()"];
m3_1099 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.System.Collections.IEnumerable.GetEnumerator()", span="2515-2515", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.System.Collections.IEnumerable.GetEnumerator()"];
m3_1093 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.GetEnumerator()", span="2510-2510", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.GetEnumerator()"];
m3_1103 [file="JsonSerializerCollectionsTests.cs", label="Items != null", span="2567-2567", cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()"];
m3_1105 [file="JsonSerializerCollectionsTests.cs", label="yield return item;", span="2571-2571", cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()"];
m3_1106 [file="JsonSerializerCollectionsTests.cs", label="yield break;", span="2576-2576", cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()"];
m3_1104 [file="JsonSerializerCollectionsTests.cs", label=Items, span="2569-2569", cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()"];
m3_1107 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", span="2565-2565", cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()"];
m3_759 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", span="1639-1639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()"];
m3_760 [file="JsonSerializerCollectionsTests.cs", label="Event1 e1 = new Event1\n            {\n                EventName = ''EventName!''\n            }", span="1641-1644", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()"];
m3_757 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Events.Event1.Event1()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Events.Event1.Event1()"];
m3_761 [file="JsonSerializerCollectionsTests.cs", label="Event1[,] array1 = new[,] { { e1, e1 }, { e1, e1 } }", span="1645-1645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()"];
m3_762 [file="JsonSerializerCollectionsTests.cs", label="IList<Event1[,]> values1 = new List<Event1[,]>\n            {\n                array1,\n                array1\n            }", span="1646-1650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()"];
m3_763 [file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(values1, new JsonSerializerSettings\n            {\n                TypeNameHandling = \\nTypeNameHandling.All,\n                Formatting = Formatting.Indented\n            })", span="1652-1656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()"];
m3_764 [file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''{\n  ''''$type'''': '''''' + ReflectionUtils.GetTypeName(typeof(List<Event1[,]>), 0, DefaultSerializationBinder.Instance) + @'''''',\n  ''''$\\nvalues'''': [\n    {\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Events.Event1[,], Newtonsoft.Json.Tests'''',\n      ''''$\\nvalues'''': [\n        [\n          {\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Events.Event1, Newtonsoft.Json.Tests'''',\n            ''''\\nEventName'''': ''''EventName!'''',\n            ''''Venue'''': null,\n            ''''Performances'''': null\n          },\n          {\n            ''''$\\ntype'''': ''''Newtonsoft.Json.Tests.TestObjects.Events.Event1, Newtonsoft.Json.Tests'''',\n            ''''EventName'''': ''''EventName!'''',\n            ''''\\nVenue'''': null,\n            ''''Performances'''': null\n          }\n        ],\n        [\n          {\n            ''''$type'''': ''''\\nNewtonsoft.Json.Tests.TestObjects.Events.Event1, Newtonsoft.Json.Tests'''',\n            ''''EventName'''': ''''EventName!'''',\n            ''''\\nVenue'''': null,\n            ''''Performances'''': null\n          },\n          {\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Events.Event1, \\nNewtonsoft.Json.Tests'''',\n            ''''EventName'''': ''''EventName!'''',\n            ''''Venue'''': null,\n            ''''\\nPerformances'''': null\n          }\n        ]\n      ]\n    },\n    {\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Events.Event1[,], \\nNewtonsoft.Json.Tests'''',\n      ''''$values'''': [\n        [\n          {\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Events.Event1, \\nNewtonsoft.Json.Tests'''',\n            ''''EventName'''': ''''EventName!'''',\n            ''''Venue'''': null,\n            ''''\\nPerformances'''': null\n          },\n          {\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Events.Event1, \\nNewtonsoft.Json.Tests'''',\n            ''''EventName'''': ''''EventName!'''',\n            ''''Venue'''': null,\n            ''''\\nPerformances'''': null\n          }\n        ],\n        [\n          {\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Events.Event1, \\nNewtonsoft.Json.Tests'''',\n            ''''EventName'''': ''''EventName!'''',\n            ''''Venue'''': null,\n            ''''\\nPerformances'''': null\n          },\n          {\n            ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Events.Event1, \\nNewtonsoft.Json.Tests'''',\n            ''''EventName'''': ''''EventName!'''',\n            ''''Venue'''': null,\n            ''''\\nPerformances'''': null\n          }\n        ]\n      ]\n    }\n  ]\n}'', json)", span="1658-1728", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()"];
m3_765 [file="JsonSerializerCollectionsTests.cs", label="IList<Event1[,]> values2 = (IList<Event1[,]>)JsonConvert.DeserializeObject(json, new JsonSerializerSettings\n            {\n                \\nTypeNameHandling = TypeNameHandling.All\n            })", span="1730-1733", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()"];
m3_769 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", span="145-145", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)"];
m3_770 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="681-681", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)"];
m3_766 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, values2.Count)", span="1735-1735", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()"];
m3_767 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''EventName!'', values2[0][0, 0].EventName)", span="1736-1736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()"];
m3_768 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()", span="1639-1639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeTypeName3DArray()"];
m3_582 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", span="1173-1173", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()"];
m3_583 [file="JsonSerializerCollectionsTests.cs", label="PopulateReadOnlyTestClass c1 = new PopulateReadOnlyTestClass()", span="1175-1175", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()"];
m3_584 [file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="1177-1177", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()"];
m3_585 [file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''{\n  ''''NonReadOnlyList'''': [\n    1\n  ],\n  ''''NonReadOnlyDictionary'''': {\n    ''''first'''': 2\n  },\n  ''''\\nArray'''': [\n    3\n  ],\n  ''''List'''': [\n    4\n  ],\n  ''''Dictionary'''': {\n    ''''first'''': 5\n  },\n  ''''IReadOnlyCollection'''': [\n    \\n6\n  ],\n  ''''ReadOnlyCollection'''': [\n    7\n  ],\n  ''''IReadOnlyList'''': [\n    8\n  ],\n  ''''IReadOnlyDictionary'''': {\n    ''''\\nfirst'''': 9\n  },\n  ''''ReadOnlyDictionary'''': {\n    ''''first'''': 10\n  }\n}'', json)", span="1179-1210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()"];
m3_586 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()", span="1173-1173", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReadOnlyCollections()"];
m3_1007 [file="JsonSerializerCollectionsTests.cs", label="Person.ContainsKey(''language'')", span="2293-2293", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractLanguage()"];
m3_1008 [file="JsonSerializerCollectionsTests.cs", label="Person[''language''].Trim()", span="2295-2295", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractLanguage()"];
m3_1014 [file="JsonSerializerCollectionsTests.cs", label="this.Language = ssoLanguage.Unknown", span="2310-2310", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractLanguage()"];
m3_1009 [file="JsonSerializerCollectionsTests.cs", label="''da''", span="2297-2297", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractLanguage()"];
m3_1011 [file="JsonSerializerCollectionsTests.cs", label="''en''", span="2300-2300", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractLanguage()"];
m3_1013 [file="JsonSerializerCollectionsTests.cs", label="this.Language = ssoLanguage.Unknown", span="2304-2304", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractLanguage()"];
m3_1010 [file="JsonSerializerCollectionsTests.cs", label="this.Language = ssoLanguage.Danish", span="2298-2298", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractLanguage()"];
m3_1015 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractLanguage()", span="2291-2291", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractLanguage()"];
m3_1012 [file="JsonSerializerCollectionsTests.cs", label="this.Language = ssoLanguage.English", span="2301-2301", cluster="Newtonsoft.Json.Tests.Serialization.CASResponce.ExtractLanguage()"];
m3_616 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", span="1290-1290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()"];
m3_617 [file="JsonSerializerCollectionsTests.cs", label="Array3DWithConverter aa = new Array3DWithConverter()", span="1292-1292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()"];
m3_618 [file="JsonSerializerCollectionsTests.cs", label="aa.Before = ''Before!''", span="1293-1293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()"];
m3_619 [file="JsonSerializerCollectionsTests.cs", label="aa.After = ''After!''", span="1294-1294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()"];
m3_620 [file="JsonSerializerCollectionsTests.cs", label="aa.Coordinates = new[,,] { { { 1, 1, 1 }, { 1, 1, 2 } }, { { 1, 2, 1 }, { 1, 2, 2 } }, { { 2, 1, 1 }, { 2, 1, 2 } }, { { 2, 2, 1 }, { \\n2, 2, 2 } } }", span="1295-1295", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()"];
m3_621 [file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(aa, Formatting.Indented)", span="1297-1297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()"];
m3_624 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Array3DWithConverter.Array3DWithConverter()", span="2536-2536", cluster="Newtonsoft.Json.Tests.Serialization.Array3DWithConverter.Array3DWithConverter()"];
m3_622 [file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''{\n  ''''Before'''': ''''Before!'''',\n  ''''Coordinates'''': [\n    [\n      [\n        1.0,\n        \\n1.0,\n        1.0\n      ],\n      [\n        1.0,\n        1.0,\n        2.0\n      ]\n    ],\n    [\n      [\n        1.0,\n        \\n2.0,\n        1.0\n      ],\n      [\n        1.0,\n        2.0,\n        2.0\n      ]\n    ],\n    [\n      [\n        2.0,\n        \\n1.0,\n        1.0\n      ],\n      [\n        2.0,\n        1.0,\n        2.0\n      ]\n    ],\n    [\n      [\n        2.0,\n        \\n2.0,\n        1.0\n      ],\n      [\n        2.0,\n        2.0,\n        2.0\n      ]\n    ]\n  ],\n  ''''After'''': ''''After!''''\n}'', \\njson)", span="1299-1352", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()"];
m3_623 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()", span="1290-1290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3DWithConverter()"];
m3_111 [file="JsonSerializerCollectionsTests.cs", label="return new TestCollectionPrivate();", span="210-210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivate.Create()"];
m3_112 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivate.Create()", span="208-208", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivate.Create()"];
m3_108 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivate.TestCollectionPrivate()", span="204-204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivate.TestCollectionPrivate()"];
m3_417 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<\\nT>)", span="834-834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<\\nT>)"];
m3_418 [file="JsonSerializerCollectionsTests.cs", label="_values = values", span="836-836", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<\\nT>)"];
m3_419 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<\\nT>)", span="834-834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<\\nT>)"];
m3_836 [color=green, file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", span="1845-1845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", community=0];
m3_837 [file="JsonSerializerCollectionsTests.cs", label="string json", span="1847-1847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()"];
m3_838 [file="JsonSerializerCollectionsTests.cs", label="GenericClass<GenericItem<string>, string> foo1 = new GenericClass<GenericItem<string>, string>()", span="1849-1849", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()"];
m3_839 [file="JsonSerializerCollectionsTests.cs", label="foo1.Items.Add(new GenericItem<string> { Value = ''Hello'' })", span="1850-1850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()"];
m3_840 [file="JsonSerializerCollectionsTests.cs", label="json = JsonConvert.SerializeObject(new { selectList = foo1 })", span="1852-1852", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()"];
m3_851 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GenericClass()", span="2560-2560", cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GenericClass()"];
m3_853 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)"];
m3_852 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.GenericItem<T>.GenericItem()", span="2546-2546", cluster="Newtonsoft.Json.Tests.Serialization.GenericItem<T>.GenericItem()"];
m3_841 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''selectList'''':[{''''Value'''':''''Hello''''}]}'', json)", span="1853-1853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()"];
m3_842 [file="JsonSerializerCollectionsTests.cs", label="GenericClass<NonGenericItem, string> foo2 = new GenericClass<NonGenericItem, string>()", span="1855-1855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()"];
m3_843 [file="JsonSerializerCollectionsTests.cs", label="foo2.Items.Add(new NonGenericItem { Value = ''Hello'' })", span="1856-1856", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()"];
m3_844 [file="JsonSerializerCollectionsTests.cs", label="json = JsonConvert.SerializeObject(new { selectList = foo2 })", span="1858-1858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()"];
m3_854 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.NonGenericItem.NonGenericItem()", span="2551-2551", cluster="Newtonsoft.Json.Tests.Serialization.NonGenericItem.NonGenericItem()"];
m3_845 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''selectList'''':[{''''Value'''':''''Hello''''}]}'', json)", span="1859-1859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()"];
m3_846 [file="JsonSerializerCollectionsTests.cs", label="NonGenericClass foo3 = new NonGenericClass()", span="1861-1861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()"];
m3_847 [file="JsonSerializerCollectionsTests.cs", label="foo3.Items.Add(new NonGenericItem { Value = ''Hello'' })", span="1862-1862", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()"];
m3_848 [file="JsonSerializerCollectionsTests.cs", label="json = JsonConvert.SerializeObject(new { selectList = foo3 })", span="1864-1864", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()"];
m3_855 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.NonGenericClass.NonGenericClass()", span="2586-2586", cluster="Newtonsoft.Json.Tests.Serialization.NonGenericClass.NonGenericClass()"];
m3_849 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''selectList'''':[{''''Value'''':''''Hello''''}]}'', json)", span="1865-1865", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()"];
m3_850 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", span="1845-1845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()"];
m3_308 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.GetEnumerator()", span="614-614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.GetEnumerator()"];
m3_309 [file="JsonSerializerCollectionsTests.cs", label="return _values.GetEnumerator();", span="616-616", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.GetEnumerator()"];
m3_310 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.GetEnumerator()", span="614-614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.GetEnumerator()"];
m3_455 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", span="917-917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()"];
m3_456 [file="JsonSerializerCollectionsTests.cs", label="List<KeyValuePair<string, string>> list = new List<KeyValuePair<string, string>>()", span="919-919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()"];
m3_457 [file="JsonSerializerCollectionsTests.cs", label="list.Add(new KeyValuePair<string, string>(''key1'', ''value1''))", span="920-920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()"];
m3_458 [file="JsonSerializerCollectionsTests.cs", label="list.Add(new KeyValuePair<string, string>(''key2'', ''value2''))", span="921-921", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()"];
m3_459 [file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(list)", span="923-923", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()"];
m3_282 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)"];
m3_460 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''[{''''Key'''':''''key1'''',''''Value'''':''''value1''''},{''''Key'''':''''key2'''',''''Value'''':''''value2''''}]'', \\njson)", span="925-925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()"];
m3_461 [file="JsonSerializerCollectionsTests.cs", label="List<KeyValuePair<string, string>> result = JsonConvert.DeserializeObject<List<KeyValuePair<string, string>>>(json)", span="927-927", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()"];
m3_462 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, result.Count)", span="928-928", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()"];
m3_463 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''key1'', result[0].Key)", span="929-929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()"];
m3_464 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''value1'', result[0].Value)", span="930-930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()"];
m3_465 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''key2'', result[1].Key)", span="931-931", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()"];
m3_466 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''value2'', result[1].Value)", span="932-932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()"];
m3_467 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()", span="917-917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSimpleKeyValuePair()"];
m3_730 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", span="1551-1551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()"];
m3_731 [file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':null,''''After'''':''''After!''''}''", span="1553-1553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()"];
m3_732 [file="JsonSerializerCollectionsTests.cs", label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="1555-1555", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()"];
m3_737 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(json, after)", span="1563-1563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()"];
m3_733 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="1557-1557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()"];
m3_734 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''After!'', aa.After)", span="1558-1558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()"];
m3_735 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(null, aa.Coordinates)", span="1559-1559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()"];
m3_736 [file="JsonSerializerCollectionsTests.cs", label="string after = JsonConvert.SerializeObject(aa)", span="1561-1561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()"];
m3_738 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()", span="1551-1551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNull3DArray()"];
m3_90 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.GetEnumerator()", span="178-178", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.GetEnumerator()"];
m3_91 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.GetEnumerator()", span="178-178", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.GetEnumerator()"];
m3_739 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", span="1567-1567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()"];
m3_740 [file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[]],''''After'''':''''After!''''}''", span="1569-1569", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()"];
m3_741 [file="JsonSerializerCollectionsTests.cs", label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="1571-1571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()"];
m3_748 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(json, after)", span="1581-1581", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()"];
m3_742 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="1573-1573", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()"];
m3_743 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''After!'', aa.After)", span="1574-1574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()"];
m3_744 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, aa.Coordinates.GetLength(0))", span="1575-1575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()"];
m3_745 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0, aa.Coordinates.GetLength(1))", span="1576-1576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()"];
m3_746 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0, aa.Coordinates.GetLength(2))", span="1577-1577", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()"];
m3_747 [file="JsonSerializerCollectionsTests.cs", label="string after = JsonConvert.SerializeObject(aa)", span="1579-1579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()"];
m3_749 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()", span="1567-1567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeSemiEmpty3DArray()"];
m3_1132 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="2628-2628", cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m3_1133 [file="JsonSerializerCollectionsTests.cs", label="string existingString = (string)existingValue", span="2630-2630", cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m3_1134 [file="JsonSerializerCollectionsTests.cs", label="string newString = existingString + (string)reader.Value", span="2631-2631", cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m3_1135 [file="JsonSerializerCollectionsTests.cs", label="return newString;", span="2633-2633", cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m3_1136 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="2628-2628", cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m3_1129 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="2623-2623", cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)"];
m3_1130 [file="JsonSerializerCollectionsTests.cs", label="writer.WriteValue(value)", span="2625-2625", cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)"];
m3_1131 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="2623-2623", cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)"];
m3_869 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", span="1887-1887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()"];
m3_870 [file="JsonSerializerCollectionsTests.cs", label="ReadOnlyCollection<int> r1 = new ReadOnlyCollection<int>(new int[] { 0, 1, 2, 3, 4 })", span="1889-1889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()"];
m3_871 [file="JsonSerializerCollectionsTests.cs", label="string jsonText = JsonConvert.SerializeObject(r1)", span="1891-1891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()"];
m3_874 [file="JsonSerializerCollectionsTests.cs", label="CollectionAssert.AreEqual(r1, r2)", span="1897-1897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()"];
m3_872 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''[0,1,2,3,4]'', jsonText)", span="1893-1893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()"];
m3_873 [file="JsonSerializerCollectionsTests.cs", label="ReadOnlyCollection<int> r2 = JsonConvert.DeserializeObject<ReadOnlyCollection<int>>(jsonText)", span="1895-1895", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()"];
m3_875 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", span="1887-1887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()"];
m3_323 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListCtor()", span="645-645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListCtor()"];
m3_324 [file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<PrivateDefaultCtorList<int>>(''[1,2]''), ''\\nUnable to find a constructor to use for type Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests+PrivateDefaultCtorList`\\n1[System.Int32]. Path '', line 1, position 1.'')", span="647-647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListCtor()"];
m3_325 [file="JsonSerializerCollectionsTests.cs", label="var list = JsonConvert.DeserializeObject<PrivateDefaultCtorList<int>>(''[1,2]'', new JsonSerializerSettings\n            {\n                \\nConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor\n            })", span="649-652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListCtor()"];
m3_330 [file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="647-647", cluster="lambda expression"];
m3_326 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, list.Count)", span="654-654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListCtor()"];
m3_327 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListCtor()", span="645-645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListCtor()"];
m3_948 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Add(string)", span="2139-2139", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Add(string)"];
m3_949 [file="JsonSerializerCollectionsTests.cs", label="((IList<string>)_storage).Add(item)", span="2141-2141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Add(string)"];
m3_950 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Add(string)", span="2139-2139", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Add(string)"];
m3_511 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", span="1033-1033", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()"];
m3_512 [file="JsonSerializerCollectionsTests.cs", label="IDictionary<string, int?> v1 = new Dictionary<string, int?>\n            {\n                { ''First'', 1 },\n                { ''\\nSecond'', null },\n                { ''Third'', 3 }\n            }", span="1035-1040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()"];
m3_513 [file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(v1, Formatting.Indented)", span="1042-1042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()"];
m3_514 [file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''{\n  ''''First'''': 1,\n  ''''Second'''': null,\n  ''''Third'''': 3\n}'', json)", span="1044-1048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()"];
m3_515 [file="JsonSerializerCollectionsTests.cs", label="IDictionary<string, int?> v2 = JsonConvert.DeserializeObject<IDictionary<string, int?>>(json)", span="1050-1050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()"];
m3_516 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, v2.Count)", span="1051-1051", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()"];
m3_517 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, v2[''First''])", span="1052-1052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()"];
m3_518 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(null, v2[''Second''])", span="1053-1053", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()"];
m3_519 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, v2[''Third''])", span="1054-1054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()"];
m3_520 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", span="1033-1033", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()"];
m3_637 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", span="1425-1425", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()"];
m3_638 [file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}''", span="1427-1427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()"];
m3_639 [file="JsonSerializerCollectionsTests.cs", label="Array2D aa = JsonConvert.DeserializeObject<Array2D>(json)", span="1429-1429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()"];
m3_647 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(json, after)", span="1440-1440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()"];
m3_640 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="1431-1431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()"];
m3_641 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''After!'', aa.After)", span="1432-1432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()"];
m3_642 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(4, aa.Coordinates.GetLength(0))", span="1433-1433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()"];
m3_643 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, aa.Coordinates.GetLength(1))", span="1434-1434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()"];
m3_644 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, aa.Coordinates[0, 0])", span="1435-1435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()"];
m3_645 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, aa.Coordinates[1, 1])", span="1436-1436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()"];
m3_646 [file="JsonSerializerCollectionsTests.cs", label="string after = JsonConvert.SerializeObject(aa)", span="1438-1438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()"];
m3_648 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()", span="1425-1425", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D()"];
m3_109 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivate.TestCollectionPrivate()", span="204-204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivate.TestCollectionPrivate()"];
m3_507 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()", span="1026-1026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()"];
m3_508 [file="JsonSerializerCollectionsTests.cs", label="IList list = JsonConvert.DeserializeObject<IList>(''['1', 'two', 'III']'')", span="1028-1028", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()"];
m3_509 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, list.Count)", span="1029-1029", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()"];
m3_510 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()", span="1026-1026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()"];
m3_17 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentBag()", span="80-80", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentBag()"];
m3_18 [file="JsonSerializerCollectionsTests.cs", label="ConcurrentBag<int> bag1 = new ConcurrentBag<int>()", span="82-82", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentBag()"];
m3_27 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Concurrent.ConcurrentBag<T>.ConcurrentBag()", span="0-0", cluster="System.Collections.Concurrent.ConcurrentBag<T>.ConcurrentBag()"];
m3_19 [file="JsonSerializerCollectionsTests.cs", label="bag1.Add(1)", span="83-83", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentBag()"];
m3_20 [file="JsonSerializerCollectionsTests.cs", label="string output = JsonConvert.SerializeObject(bag1)", span="85-85", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentBag()"];
m3_28 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Concurrent.ConcurrentBag<T>.Add(T)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentBag<T>.Add(T)"];
m3_21 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''[1]'', output)", span="86-86", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentBag()"];
m3_22 [file="JsonSerializerCollectionsTests.cs", label="ConcurrentBag<int> bag2 = JsonConvert.DeserializeObject<ConcurrentBag<int>>(output)", span="88-88", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentBag()"];
m3_23 [file="JsonSerializerCollectionsTests.cs", label="int i", span="89-89", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentBag()"];
m3_24 [file="JsonSerializerCollectionsTests.cs", label="Assert.IsTrue(bag2.TryTake(out i))", span="90-90", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentBag()"];
m3_25 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, i)", span="91-91", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentBag()"];
m3_29 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Concurrent.ConcurrentBag<T>.TryTake(out T)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentBag<T>.TryTake(out T)"];
m3_26 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentBag()", span="80-80", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentBag()"];
m3_547 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", span="1109-1109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()"];
m3_548 [file="JsonSerializerCollectionsTests.cs", label="string json = @''[ { ''''Value'''': [ ''''1'''', ''''2'''' ], ''''Key'''': ''''aaa'''', ''''BadContent'''': [ 0 ] }, null, { ''''\\nValue'''': [ ''''3'''', ''''4'''' ], ''''Key'''': ''''bbb'''' } ]''", span="1111-1111", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()"];
m3_549 [file="JsonSerializerCollectionsTests.cs", label="IList<KeyValuePair<string, IList<string>>?> values = JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>?>>(\\njson)", span="1113-1113", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()"];
m3_550 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, values.Count)", span="1115-1115", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()"];
m3_551 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''aaa'', values[0].Value.Key)", span="1116-1116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()"];
m3_552 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, values[0].Value.Value.Count)", span="1117-1117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()"];
m3_553 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''1'', values[0].Value.Value[0])", span="1118-1118", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()"];
m3_554 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''2'', values[0].Value.Value[1])", span="1119-1119", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()"];
m3_555 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(null, values[1])", span="1120-1120", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()"];
m3_556 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''bbb'', values[2].Value.Key)", span="1121-1121", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()"];
m3_557 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, values[2].Value.Value.Count)", span="1122-1122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()"];
m3_558 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''3'', values[2].Value.Value[0])", span="1123-1123", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()"];
m3_559 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''4'', values[2].Value.Value[1])", span="1124-1124", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()"];
m3_560 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", span="1109-1109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()"];
m3_311 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", span="619-619", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()"];
m3_312 [file="JsonSerializerCollectionsTests.cs", label="return GetEnumerator();", span="621-621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()"];
m3_313 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()", span="619-619", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.System.Collections.IEnumerable.GetEnumerator()"];
m3_305 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.EnumerableClassFailure()", span="609-609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.EnumerableClassFailure()"];
m3_306 [file="JsonSerializerCollectionsTests.cs", label="_values = new List<T>()", span="611-611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.EnumerableClassFailure()"];
m3_307 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.EnumerableClassFailure()", span="609-609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.EnumerableClassFailure()"];
m3_405 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", span="801-801", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()"];
m3_406 [file="JsonSerializerCollectionsTests.cs", label="return _dictionary.GetEnumerator();", span="803-803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()"];
m3_407 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()", span="801-801", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.GetEnumerator()"];
m3_181 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()", span="330-330", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()"];
m3_182 [file="JsonSerializerCollectionsTests.cs", label="TestDictionaryPrivate c1 = TestDictionaryPrivate.Create()", span="332-332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()"];
m3_183 [file="JsonSerializerCollectionsTests.cs", label="c1.Add(''zero'', 0)", span="333-333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()"];
m3_184 [file="JsonSerializerCollectionsTests.cs", label="c1.Add(''one'', 1)", span="334-334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()"];
m3_185 [file="JsonSerializerCollectionsTests.cs", label="c1.Add(''two'', 2)", span="335-335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()"];
m3_186 [file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(c1)", span="336-336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()"];
m3_178 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivate.Create()", span="323-323", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivate.Create()"];
m3_187 [file="JsonSerializerCollectionsTests.cs", label="TestDictionaryPrivate c2 = JsonConvert.DeserializeObject<TestDictionaryPrivate>(json)", span="337-337", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()"];
m3_188 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, c2.Count)", span="339-339", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()"];
m3_189 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0, c2[''zero''])", span="340-340", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()"];
m3_190 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, c2[''one''])", span="341-341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()"];
m3_191 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, c2[''two''])", span="342-342", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()"];
m3_192 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()", span="330-330", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivate()"];
m3_1082 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.IndexOf(T)", span="2473-2473", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.IndexOf(T)"];
m3_1083 [file="JsonSerializerCollectionsTests.cs", label="throw new NotImplementedException();", span="2475-2475", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.IndexOf(T)"];
m3_1084 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.IndexOf(T)", span="2473-2473", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.IndexOf(T)"];
m3_885 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", span="1953-1953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()"];
m3_886 [file="JsonSerializerCollectionsTests.cs", label="string json = @''[\n        {\n          ''''Name'''': ''''Product 1'''',\n          ''''ExpiryDate'''': ''''\/Date(978048000000)\/'''',\n          ''''\\nPrice'''': 99.95,\n          ''''Sizes'''': null\n        },\n        {\n          ''''Name'''': ''''Product 2'''',\n          ''''\\nExpiryDate'''': ''''\/Date(1248998400000)\/'''',\n          ''''Price'''': 12.50,\n          ''''Sizes'''': null\n        }\n      ]''", span="1955-1968", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()"];
m3_887 [file="JsonSerializerCollectionsTests.cs", label="List<Product> products = JsonConvert.DeserializeObject<List<Product>>(json)", span="1970-1970", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()"];
m3_888 [file="JsonSerializerCollectionsTests.cs", label="Product p1 = products[0]", span="1972-1972", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()"];
m3_889 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, products.Count)", span="1974-1974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()"];
m3_890 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Product 1'', p1.Name)", span="1975-1975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()"];
m3_891 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", span="1953-1953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()"];
m3_126 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionMultipleParameters.TestCollectionMultipleParameters(\\nstring, string)", span="235-235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionMultipleParameters.TestCollectionMultipleParameters(\\nstring, string)"];
m3_127 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionMultipleParameters.TestCollectionMultipleParameters(\\nstring, string)", span="235-235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionMultipleParameters.TestCollectionMultipleParameters(\\nstring, string)"];
m3_723 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncompleteNotTopLevel3DArray()", span="1543-1543", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncompleteNotTopLevel3DArray()"];
m3_724 [file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[/*hi*/[/*hi*/''", span="1545-1545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncompleteNotTopLevel3DArray()"];
m3_725 [file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonException>(() => JsonConvert.DeserializeObject<Array3D>(json))", span="1547-1547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncompleteNotTopLevel3DArray()"];
m3_728 [file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<Array3D>(json)", span="1547-1547", cluster="lambda expression"];
m3_726 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncompleteNotTopLevel3DArray()", span="1543-1543", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIncompleteNotTopLevel3DArray()"];
m3_727 [file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="1547-1547", cluster="lambda expression"];
m3_446 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", span="903-903", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()"];
m3_447 [file="JsonSerializerCollectionsTests.cs", label="GenericListTestClass c = new GenericListTestClass()", span="905-905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()"];
m3_448 [file="JsonSerializerCollectionsTests.cs", label="c.GenericList.Add(''1'')", span="906-906", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()"];
m3_449 [file="JsonSerializerCollectionsTests.cs", label="c.GenericList.Add(''2'')", span="907-907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()"];
m3_450 [file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="909-909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()"];
m3_443 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass.GenericListTestClass()", span="896-896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass.GenericListTestClass()"];
m3_451 [file="JsonSerializerCollectionsTests.cs", label="GenericListTestClass newValue = JsonConvert.DeserializeObject<GenericListTestClass>(json)", span="911-911", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()"];
m3_452 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, newValue.GenericList.Count)", span="912-912", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()"];
m3_453 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(typeof(List<string>), newValue.GenericList.GetType())", span="913-913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()"];
m3_358 [file="JsonSerializerCollectionsTests.cs", label="Entry object.GetType()", span="0-0", cluster="object.GetType()"];
m3_454 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", span="903-903", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()"];
m3_1085 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Insert(int, T)", span="2478-2478", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Insert(int, T)"];
m3_1086 [file="JsonSerializerCollectionsTests.cs", label="throw new NotImplementedException();", span="2480-2480", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Insert(int, T)"];
m3_1087 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Insert(int, T)", span="2478-2478", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Insert(int, T)"];
m3_209 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryNonGeneric.TestDictionaryNonGeneric(System.Collections.IDictionary)", span="381-381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryNonGeneric.TestDictionaryNonGeneric(System.Collections.IDictionary)"];
m3_210 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryNonGeneric.TestDictionaryNonGeneric(System.Collections.IDictionary)", span="381-381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryNonGeneric.TestDictionaryNonGeneric(System.Collections.IDictionary)"];
m3_176 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivate.TestDictionaryPrivate()", span="319-319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivate.TestDictionaryPrivate()"];
m3_177 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivate.TestDictionaryPrivate()", span="319-319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivate.TestDictionaryPrivate()"];
m3_892 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", span="1980-1980", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()"];
m3_893 [file="JsonSerializerCollectionsTests.cs", label="ReadOnlyIntegerList l = new ReadOnlyIntegerList(new List<int>\n            {\n                1,\n                2,\n                \\n3,\n                int.MaxValue\n            })", span="1982-1988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()"];
m3_894 [file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="1990-1990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()"];
m3_897 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.ReadOnlyIntegerList(System.Collections.Generic.List<int>)", span="2500-2500", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.ReadOnlyIntegerList(System.Collections.Generic.List<int>)"];
m3_895 [file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''[\n  1,\n  2,\n  3,\n  2147483647\n]'', json)", span="1992-1997", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()"];
m3_896 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", span="1980-1980", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()"];
m3_484 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", span="988-988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()"];
m3_485 [file="JsonSerializerCollectionsTests.cs", label="Movie p = new Movie()", span="990-990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()"];
m3_486 [file="JsonSerializerCollectionsTests.cs", label="p.ReleaseCountries = new List<string> { ''Existing'' }", span="991-991", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()"];
m3_487 [file="JsonSerializerCollectionsTests.cs", label="JsonConvert.PopulateObject(''{'ReleaseCountries':['Appended']}'', p, new JsonSerializerSettings\n            {\n                \\nConverters = new List<JsonConverter> { new StringListAppenderConverter() }\n            })", span="993-996", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()"];
m3_488 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, p.ReleaseCountries.Count)", span="998-998", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()"];
m3_489 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Existing'', p.ReleaseCountries[0])", span="999-999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()"];
m3_490 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Appended'', p.ReleaseCountries[1])", span="1000-1000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()"];
m3_493 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.StringListAppenderConverter()", span="2590-2590", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.StringListAppenderConverter()"];
m3_491 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()", span="988-988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.StringListAppenderConverterTest()"];
m3_137 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorBadIEnumerableParameter()", span="257-257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorBadIEnumerableParameter()"];
m3_138 [file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonException>(\n                () => JsonConvert.SerializeObject(new TestCollectionBadIEnumerableParameter(\\nnull)),\n                ''Constructor for 'Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests+TestCollectionBadIEnumerableParameter' \\nmust have no parameters or a single parameter that implements 'System.Collections.Generic.IEnumerable`1[System.Int32]'.'')", span="259-261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorBadIEnumerableParameter()"];
m3_139 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorBadIEnumerableParameter()", span="257-257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorBadIEnumerableParameter()"];
m3_140 [file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="260-260", cluster="lambda expression"];
m3_285 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<\\nT>)", span="572-572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<\\nT>)"];
m3_286 [file="JsonSerializerCollectionsTests.cs", label="_values = new List<T>(values)", span="574-574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<\\nT>)"];
m3_85 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)"];
m3_287 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<\\nT>)", span="572-572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.EnumerableClass(System.Collections.Generic.IEnumerable<\\nT>)"];
m3_128 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorMultipleParameters()", span="241-241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorMultipleParameters()"];
m3_129 [file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonException>(\n                () => JsonConvert.SerializeObject(new TestCollectionMultipleParameters(null, \\nnull)),\n                ''Constructor for 'Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests+TestCollectionMultipleParameters' \\nmust have no parameters or a single parameter that implements 'System.Collections.Generic.IEnumerable`1[System.Int32]'.'')", span="243-245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorMultipleParameters()"];
m3_130 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorMultipleParameters()", span="241-241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CollectionJsonConstructorMultipleParameters()"];
m3_132 [file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="244-244", cluster="lambda expression"];
m3_1073 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Contains(T)", span="2456-2456", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Contains(T)"];
m3_1074 [file="JsonSerializerCollectionsTests.cs", label="throw new NotImplementedException();", span="2458-2458", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Contains(T)"];
m3_1075 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Contains(T)", span="2456-2456", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Contains(T)"];
m3_521 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", span="1059-1059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()"];
m3_522 [file="JsonSerializerCollectionsTests.cs", label="IDictionary<string, TestObjects.Component> components = new Dictionary<string, TestObjects.Component>\n            {\n                { ''\\nKey!'', new TestObjects.Component() }\n            }", span="1061-1064", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()"];
m3_531 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Component.Component()", span="34-34", cluster="Newtonsoft.Json.Tests.TestObjects.Component.Component()"];
m3_523 [file="JsonSerializerCollectionsTests.cs", label="GameObject go = new GameObject\n            {\n                Components = new ConcurrentDictionary<string, TestObjects.Component>(\\ncomponents),\n                Id = ''Id!'',\n                Name = ''Name!''\n            }", span="1065-1070", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()"];
m3_533 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary(System.Collections.Generic.IEnumerable<\\nSystem.Collections.Generic.KeyValuePair<TKey, TValue>>)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<\\nTKey, TValue>>)"];
m3_524 [file="JsonSerializerCollectionsTests.cs", label="string originalJson = JsonConvert.SerializeObject(go, Formatting.Indented)", span="1072-1072", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()"];
m3_532 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GameObject.GameObject()", span="42-42", cluster="Newtonsoft.Json.Tests.TestObjects.GameObject.GameObject()"];
m3_525 [file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''{\n  ''''Components'''': {\n    ''''Key!'''': {}\n  },\n  ''''Id'''': ''''Id!'''',\n  ''''Name'''': ''''\\nName!''''\n}'', originalJson)", span="1074-1080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()"];
m3_526 [file="JsonSerializerCollectionsTests.cs", label="GameObject newObject = JsonConvert.DeserializeObject<GameObject>(originalJson)", span="1082-1082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()"];
m3_527 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, newObject.Components.Count)", span="1084-1084", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()"];
m3_528 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Id!'', newObject.Id)", span="1085-1085", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()"];
m3_529 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Name!'', newObject.Name)", span="1086-1086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()"];
m3_530 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", span="1059-1059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()"];
m3_1091 [file="JsonSerializerCollectionsTests.cs", label="_list = l", span="2502-2502", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.ReadOnlyIntegerList(System.Collections.Generic.List<int>)"];
m3_1092 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.ReadOnlyIntegerList(System.Collections.Generic.List<int>)", span="2500-2500", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.ReadOnlyIntegerList(System.Collections.Generic.List<int>)"];
m3_945 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.MyClass(System.Collections.Generic.IEnumerable<\\nstring>)", span="2104-2104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.MyClass(System.Collections.Generic.IEnumerable<string>)"];
m3_946 [file="JsonSerializerCollectionsTests.cs", label="_storage = new List<string>(source)", span="2106-2106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.MyClass(System.Collections.Generic.IEnumerable<string>)"];
m3_947 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.MyClass(System.Collections.Generic.IEnumerable<string>)", span="2104-2104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.MyClass(System.Collections.Generic.IEnumerable<string>)"];
m3_970 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Insert(int, string)", span="2169-2169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Insert(int, string)"];
m3_971 [file="JsonSerializerCollectionsTests.cs", label="((IList<string>)_storage).Insert(index, item)", span="2171-2171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Insert(int, string)"];
m3_973 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.IList<T>.Insert(int, T)", span="0-0", cluster="System.Collections.Generic.IList<T>.Insert(int, T)"];
m3_972 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Insert(int, string)", span="2169-2169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Insert(int, string)"];
m3_1066 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Add(T)", span="2446-2446", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Add(T)"];
m3_1067 [file="JsonSerializerCollectionsTests.cs", label="throw new NotImplementedException();", span="2448-2448", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Add(T)"];
m3_1068 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Add(T)", span="2446-2446", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Add(T)"];
m3_750 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", span="1585-1585", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()"];
m3_751 [file="JsonSerializerCollectionsTests.cs", label="Event1 e1 = new Event1\n            {\n                EventName = ''EventName!''\n            }", span="1587-1590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()"];
m3_752 [file="JsonSerializerCollectionsTests.cs", label="Event1[,] array1 = new[,] { { e1, e1 }, { e1, e1 } }", span="1591-1591", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()"];
m3_753 [file="JsonSerializerCollectionsTests.cs", label="IList<Event1[,]> values1 = new List<Event1[,]>\n            {\n                array1,\n                array1\n            }", span="1592-1596", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()"];
m3_754 [file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(values1, new JsonSerializerSettings\n            {\n                PreserveReferencesHandling = \\nPreserveReferencesHandling.All,\n                Formatting = Formatting.Indented\n            })", span="1598-1602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()"];
m3_755 [file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''{\n  ''''$id'''': ''''1'''',\n  ''''$values'''': [\n    {\n      ''''$id'''': ''''2'''',\n      ''''$values'''': [\n        [\n          {\n            ''''$\\nid'''': ''''3'''',\n            ''''EventName'''': ''''EventName!'''',\n            ''''Venue'''': null,\n            ''''Performances'''': \\nnull\n          },\n          {\n            ''''$ref'''': ''''3''''\n          }\n        ],\n        [\n          {\n            ''''$\\nref'''': ''''3''''\n          },\n          {\n            ''''$ref'''': ''''3''''\n          }\n        ]\n      ]\n    },\n    {\n      ''''$\\nref'''': ''''2''''\n    }\n  ]\n}'', json)", span="1604-1635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()"];
m3_756 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()", span="1585-1585", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeReferenceTracked3DArray()"];
m3_0 [color=green, file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentQueue()", span="65-65", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentQueue()", community=0];
m3_1 [file="JsonSerializerCollectionsTests.cs", label="ConcurrentQueue<int> queue1 = new ConcurrentQueue<int>()", span="67-67", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentQueue()"];
m3_10 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.ConcurrentQueue()", span="0-0", cluster="System.Collections.Concurrent.ConcurrentQueue<T>.ConcurrentQueue()"];
m3_2 [file="JsonSerializerCollectionsTests.cs", label="queue1.Enqueue(1)", span="68-68", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentQueue()"];
m3_3 [file="JsonSerializerCollectionsTests.cs", label="string output = JsonConvert.SerializeObject(queue1)", span="70-70", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentQueue()"];
m3_11 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)"];
m3_4 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''[1]'', output)", span="71-71", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentQueue()"];
m3_5 [file="JsonSerializerCollectionsTests.cs", label="ConcurrentQueue<int> queue2 = JsonConvert.DeserializeObject<ConcurrentQueue<int>>(output)", span="73-73", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentQueue()"];
m3_6 [file="JsonSerializerCollectionsTests.cs", label="int i", span="74-74", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentQueue()"];
m3_7 [file="JsonSerializerCollectionsTests.cs", label="Assert.IsTrue(queue2.TryDequeue(out i))", span="75-75", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentQueue()"];
m3_15 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)"];
m3_8 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, i)", span="76-76", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentQueue()"];
m3_9 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentQueue()", span="65-65", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeConcurrentQueue()"];
m3_163 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivateParameterized()", span="301-301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivateParameterized()"];
m3_164 [file="JsonSerializerCollectionsTests.cs", label="TestDictionaryPrivateParameterized c1 = new TestDictionaryPrivateParameterized()", span="303-303", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivateParameterized()"];
m3_165 [file="JsonSerializerCollectionsTests.cs", label="c1.Add(''zero'', 0)", span="304-304", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivateParameterized()"];
m3_166 [file="JsonSerializerCollectionsTests.cs", label="c1.Add(''one'', 1)", span="305-305", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivateParameterized()"];
m3_167 [file="JsonSerializerCollectionsTests.cs", label="c1.Add(''two'', 2)", span="306-306", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivateParameterized()"];
m3_168 [file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(c1)", span="307-307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivateParameterized()"];
m3_169 [file="JsonSerializerCollectionsTests.cs", label="TestDictionaryPrivateParameterized c2 = JsonConvert.DeserializeObject<TestDictionaryPrivateParameterized>(json)", span="308-308", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivateParameterized()"];
m3_170 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, c2.Count)", span="310-310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivateParameterized()"];
m3_171 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0, c2[''zero''])", span="311-311", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivateParameterized()"];
m3_172 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, c2[''one''])", span="312-312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivateParameterized()"];
m3_173 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, c2[''two''])", span="313-313", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivateParameterized()"];
m3_174 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivateParameterized()", span="301-301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorPrivateParameterized()"];
m3_876 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", span="1901-1901", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()"];
m3_877 [file="JsonSerializerCollectionsTests.cs", label="Product p1 = new Product\n            {\n                Name = ''Product 1'',\n                Price = 99.95m,\n                \\nExpiryDate = new DateTime(2000, 12, 29, 0, 0, 0, DateTimeKind.Utc),\n            }", span="1903-1908", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()"];
m3_482 [file="JsonSerializerCollectionsTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)"];
m3_878 [file="JsonSerializerCollectionsTests.cs", label="Product p2 = new Product\n            {\n                Name = ''Product 2'',\n                Price = 12.50m,\n                \\nExpiryDate = new DateTime(2009, 7, 31, 0, 0, 0, DateTimeKind.Utc),\n            }", span="1909-1914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()"];
m3_880 [file="JsonSerializerCollectionsTests.cs", label="products.Add(p1)", span="1917-1917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()"];
m3_879 [file="JsonSerializerCollectionsTests.cs", label="List<Product> products = new List<Product>()", span="1916-1916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()"];
m3_881 [file="JsonSerializerCollectionsTests.cs", label="products.Add(p2)", span="1918-1918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()"];
m3_882 [file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(products, Formatting.Indented)", span="1920-1920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()"];
m3_883 [file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''[\n  {\n    ''''Name'''': ''''Product 1'''',\n    ''''ExpiryDate'''': ''''2000-12-29T00:00:00Z'''',\n    ''''\\nPrice'''': 99.95,\n    ''''Sizes'''': null\n  },\n  {\n    ''''Name'''': ''''Product 2'''',\n    ''''ExpiryDate'''': ''''2009-07-31T00:\\n00:00Z'''',\n    ''''Price'''': 12.50,\n    ''''Sizes'''': null\n  }\n]'', json)", span="1936-1949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()"];
m3_884 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", span="1901-1901", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()"];
m3_656 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooFewItems()", span="1452-1452", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooFewItems()"];
m3_657 [file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1],[2,1],[2,2]],''''After'''':''''After!''''}''", span="1454-1454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooFewItems()"];
m3_658 [file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<Exception>(() => JsonConvert.DeserializeObject<Array2D>(json), ''Cannot deserialize non-cubical array as \\nmultidimensional array.'')", span="1456-1456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooFewItems()"];
m3_661 [file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<Array2D>(json)", span="1456-1456", cluster="lambda expression"];
m3_659 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooFewItems()", span="1452-1452", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooFewItems()"];
m3_660 [file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="1456-1456", cluster="lambda expression"];
m3_211 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorNonGeneric()", span="388-388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorNonGeneric()"];
m3_212 [file="JsonSerializerCollectionsTests.cs", label="string json = @''{'zero':0,'one':1,'two':2}''", span="390-390", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorNonGeneric()"];
m3_213 [file="JsonSerializerCollectionsTests.cs", label="TestDictionaryNonGeneric d = JsonConvert.DeserializeObject<TestDictionaryNonGeneric>(json)", span="391-391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorNonGeneric()"];
m3_214 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, d.Count)", span="393-393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorNonGeneric()"];
m3_215 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0L, d[''zero''])", span="394-394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorNonGeneric()"];
m3_216 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1L, d[''one''])", span="395-395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorNonGeneric()"];
m3_217 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2L, d[''two''])", span="396-396", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorNonGeneric()"];
m3_218 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorNonGeneric()", span="388-388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorNonGeneric()"];
m3_394 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(\\nSystem.Collections.Generic.IDictionary<TKey, TValue>)", span="766-766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(\\nSystem.Collections.Generic.IDictionary<TKey, TValue>)"];
m3_395 [file="JsonSerializerCollectionsTests.cs", label="_dictionary = dictionary", span="768-768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(\\nSystem.Collections.Generic.IDictionary<TKey, TValue>)"];
m3_396 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(\\nSystem.Collections.Generic.IDictionary<TKey, TValue>)", span="766-766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(\\nSystem.Collections.Generic.IDictionary<TKey, TValue>)"];
m3_82 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.TestCollectionPrivateParameterized(\\nSystem.Collections.Generic.IEnumerable<int>)", span="168-168", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.TestCollectionPrivateParameterized(\\nSystem.Collections.Generic.IEnumerable<int>)"];
m3_83 [file="JsonSerializerCollectionsTests.cs", label="_bars = new List<int>(bars)", span="170-170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.TestCollectionPrivateParameterized(\\nSystem.Collections.Generic.IEnumerable<int>)"];
m3_84 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.TestCollectionPrivateParameterized(\\nSystem.Collections.Generic.IEnumerable<int>)", span="168-168", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.TestCollectionPrivateParameterized(\\nSystem.Collections.Generic.IEnumerable<int>)"];
m3_1060 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.GetEnumerator()", span="2436-2436", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.GetEnumerator()"];
m3_1061 [file="JsonSerializerCollectionsTests.cs", label="return _values.GetEnumerator();", span="2438-2438", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.GetEnumerator()"];
m3_1062 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.GetEnumerator()", span="2436-2436", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.GetEnumerator()"];
m3_289 [file="JsonSerializerCollectionsTests.cs", label="return _values.GetEnumerator();", span="579-579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.GetEnumerator()"];
m3_290 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.GetEnumerator()", span="577-577", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.GetEnumerator()"];
m3_697 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", span="1504-1504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()"];
m3_698 [file="JsonSerializerCollectionsTests.cs", label="Array3D aa = new Array3D()", span="1506-1506", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()"];
m3_699 [file="JsonSerializerCollectionsTests.cs", label="aa.Before = ''Before!''", span="1507-1507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()"];
m3_700 [file="JsonSerializerCollectionsTests.cs", label="aa.After = ''After!''", span="1508-1508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()"];
m3_701 [file="JsonSerializerCollectionsTests.cs", label="aa.Coordinates = new int[0, 0, 0]", span="1509-1509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()"];
m3_702 [file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(aa)", span="1511-1511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()"];
m3_703 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[],''''After'''':''''After!''''}'', json)", span="1513-1513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()"];
m3_704 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", span="1504-1504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()"];
m3_444 [file="JsonSerializerCollectionsTests.cs", label="GenericList = new List<string>()", span="898-898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass.GenericListTestClass()"];
m3_445 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass.GenericListTestClass()", span="896-896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass.GenericListTestClass()"];
m3_1094 [file="JsonSerializerCollectionsTests.cs", label="return _list.GetEnumerator();", span="2512-2512", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.GetEnumerator()"];
m3_1096 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.List<T>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.List<T>.GetEnumerator()"];
m3_1095 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.GetEnumerator()", span="2510-2510", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.GetEnumerator()"];
m3_468 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", span="936-936", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()"];
m3_469 [file="JsonSerializerCollectionsTests.cs", label="DateTime dateTime = new DateTime(2000, 12, 1, 23, 1, 1, DateTimeKind.Utc)", span="938-938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()"];
m3_470 [file="JsonSerializerCollectionsTests.cs", label="List<KeyValuePair<string, WagePerson>> list = new List<KeyValuePair<string, WagePerson>>()", span="940-940", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()"];
m3_471 [file="JsonSerializerCollectionsTests.cs", label="list.Add(new KeyValuePair<string, WagePerson>(''key1'', new WagePerson\n            {\n                BirthDate = dateTime,\n                \\nDepartment = ''Department1'',\n                LastModified = dateTime,\n                HourlyWage = 1\n            }))", span="941-947", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()"];
m3_472 [file="JsonSerializerCollectionsTests.cs", label="list.Add(new KeyValuePair<string, WagePerson>(''key2'', new WagePerson\n            {\n                BirthDate = dateTime,\n                \\nDepartment = ''Department2'',\n                LastModified = dateTime,\n                HourlyWage = 2\n            }))", span="948-954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()"];
m3_473 [file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(list, Formatting.Indented)", span="956-956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()"];
m3_483 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Organization.WagePerson.WagePerson()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Organization.WagePerson.WagePerson()"];
m3_474 [file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''[\n  {\n    ''''Key'''': ''''key1'''',\n    ''''Value'''': {\n      ''''HourlyWage'''': 1.0,\n      ''''\\nName'''': null,\n      ''''BirthDate'''': ''''2000-12-01T23:01:01Z'''',\n      ''''LastModified'''': ''''2000-12-01T23:01:01Z''''\n    }\n  },\n  {\n    ''''\\nKey'''': ''''key2'''',\n    ''''Value'''': {\n      ''''HourlyWage'''': 2.0,\n      ''''Name'''': null,\n      ''''BirthDate'''': ''''\\n2000-12-01T23:01:01Z'''',\n      ''''LastModified'''': ''''2000-12-01T23:01:01Z''''\n    }\n  }\n]'', json)", span="958-977", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()"];
m3_475 [file="JsonSerializerCollectionsTests.cs", label="List<KeyValuePair<string, WagePerson>> result = JsonConvert.DeserializeObject<List<KeyValuePair<string, WagePerson>>>(json)", span="979-979", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()"];
m3_476 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, result.Count)", span="980-980", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()"];
m3_477 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''key1'', result[0].Key)", span="981-981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()"];
m3_478 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, result[0].Value.HourlyWage)", span="982-982", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()"];
m3_479 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''key2'', result[1].Key)", span="983-983", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()"];
m3_480 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, result[1].Value.HourlyWage)", span="984-984", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()"];
m3_481 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", span="936-936", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()"];
m3_426 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", span="856-856", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()"];
m3_427 [file="JsonSerializerCollectionsTests.cs", label="IList<int> l = new List<int>\n            {\n                1,\n                2,\n                3\n            }", span="858-863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()"];
m3_428 [file="JsonSerializerCollectionsTests.cs", label="CustomReadOnlyCollection<int> list = new CustomReadOnlyCollection<int>(l)", span="865-865", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()"];
m3_429 [file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(list, Formatting.Indented)", span="867-867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()"];
m3_430 [file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''[\n  1,\n  2,\n  3\n]'', json)", span="868-872", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()"];
m3_431 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", span="856-856", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()"];
m3_1115 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, \\nNewtonsoft.Json.JsonSerializer)", span="2597-2597", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m3_1116 [file="JsonSerializerCollectionsTests.cs", label="List<string> existingStrings = (List<string>)existingValue", span="2599-2599", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m3_1118 [file="JsonSerializerCollectionsTests.cs", label="reader.Read()", span="2602-2602", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m3_1119 [file="JsonSerializerCollectionsTests.cs", label="reader.TokenType != JsonToken.EndArray", span="2604-2604", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m3_1120 [file="JsonSerializerCollectionsTests.cs", label="string s = (string)reader.Value", span="2606-2606", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m3_1122 [file="JsonSerializerCollectionsTests.cs", label="reader.Read()", span="2609-2609", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m3_1117 [file="JsonSerializerCollectionsTests.cs", label="List<string> newStrings = new List<string>(existingStrings)", span="2600-2600", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m3_1121 [file="JsonSerializerCollectionsTests.cs", label="newStrings.Add(s)", span="2607-2607", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m3_1123 [file="JsonSerializerCollectionsTests.cs", label="return newStrings;", span="2612-2612", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m3_1125 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="392-392", cluster="Newtonsoft.Json.JsonReader.Read()"];
m3_1124 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="2597-2597", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m3_502 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", span="1018-1018", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()"];
m3_503 [file="JsonSerializerCollectionsTests.cs", label="IDictionary dictionary = JsonConvert.DeserializeObject<IDictionary>(''{'name':'value!'}'')", span="1020-1020", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()"];
m3_504 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, dictionary.Count)", span="1021-1021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()"];
m3_505 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''value!'', dictionary[''name''])", span="1022-1022", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()"];
m3_506 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()", span="1018-1018", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIDictionary()"];
m3_915 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonDefaultConstructor_DuplicateKeyInDictionary_Replace()", span="2030-2030", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonDefaultConstructor_DuplicateKeyInDictionary_Replace()"];
m3_916 [file="JsonSerializerCollectionsTests.cs", label="string json = @''{ ''''user'''':''''bpan'''', ''''Person'''':{ ''''groups'''':''''replaced!'''', ''''domain'''':''''adm'''', ''''\\nmail'''':''''bpan@sdu.dk'''', ''''sn'''':''''Pan'''', ''''gn'''':''''Benzhi'''', ''''cn'''':''''Benzhi Pan'''', ''''eo'''':''''BQHLJaVTMr0eWsi1jaIut4Ls/\\npSuMeNEmsWfWsfKo='''', ''''guid'''':''''9A38CE8E5B288942A8DA415CF5E687'''', ''''employeenumber'''':''''2674'''', ''''omk1'''':''''\\n930'''', ''''language'''':''''da'''' }, ''''XMLResponce'''':''''<?xml version='1.0' encoding='iso-8859-1' ?>\n<cas:serviceResponse \\nxmlns:cas='http://www.yale.edu/tp/cas'>\n\t<cas:authenticationSuccess>\n\t\t<cas:user>bpan</cas:user>\n\t\t<norEduPerson>\n\t\t\t<\\ngroups>FNC-PRI-APP-SUNDB-EDOR-A,FNC-RI-APP-SUB-EDITOR-B</groups>\n\t\t\t<domain>adm</domain>\n\t\t\t<mail>bpan@sdu.dk</mail>\n\t\t\t<\\nsn>Pan</sn>\n\t\t\t<gn>Benzhi</gn>\n\t\t\t<cn>Benzhi Pan</cn>\n\t\t\t<eo>BQHLJaVTMr0eWsi1jaIut4Lsfr/pSuMeNEmsWfWsfKo=</eo>\n\t\t\t<\\nguid>9A38CE8E5B288942A8DA415C2C687</guid>\n\t\t\t<employeenumber>274</employeenumber>\n\t\t\t<omk1>930</omk1>\n\t\t\t<language>da</\\nlanguage>\n\t\t</norEduPerson>\n\t</cas:authenticationSuccess>\n</cas:serviceResponse>\n'''', ''''Language'''':1, ''''Groups'''':[ ''''\\nFNC-PRI-APP-SNDB-EDOR-A'''', ''''FNC-PI-APP-SUNDB-EDOR-B'''' ], ''''Domain'''':''''adm'''', ''''Mail'''':''''bpan@sdu.dk'''', ''''\\nSurname'''':''''Pan'''', ''''Givenname'''':''''Benzhi'''', ''''CommonName'''':''''Benzhi Pan'''', ''''OrganizationName'''':null }''", span="2032-2032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonDefaultConstructor_DuplicateKeyInDictionary_Replace()"];
m3_917 [file="JsonSerializerCollectionsTests.cs", label="var result = JsonConvert.DeserializeObject<CASResponce>(json)", span="2034-2034", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonDefaultConstructor_DuplicateKeyInDictionary_Replace()"];
m3_918 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''replaced!'', result.Person[''groups''])", span="2036-2036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonDefaultConstructor_DuplicateKeyInDictionary_Replace()"];
m3_919 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonDefaultConstructor_DuplicateKeyInDictionary_Replace()", span="2030-2030", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NonDefaultConstructor_DuplicateKeyInDictionary_Replace()"];
m3_408 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="806-806", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()"];
m3_409 [file="JsonSerializerCollectionsTests.cs", label="return _dictionary.GetEnumerator();", span="808-808", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()"];
m3_410 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="806-806", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()"];
m3_649 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooManyItems()", span="1444-1444", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooManyItems()"];
m3_650 [file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2,3],[2,1],[2,2]],''''After'''':''''After!''''}''", span="1446-1446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooManyItems()"];
m3_651 [file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<Exception>(() => JsonConvert.DeserializeObject<Array2D>(json), ''Cannot deserialize non-cubical array as \\nmultidimensional array.'')", span="1448-1448", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooManyItems()"];
m3_654 [file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<Array2D>(json)", span="1448-1448", cluster="lambda expression"];
m3_652 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooManyItems()", span="1444-1444", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray2D_WithTooManyItems()"];
m3_653 [file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="1448-1448", cluster="lambda expression"];
m3_155 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivateParameterized.TestDictionaryPrivateParameterized(\\nSystem.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, int>>)", span="294-294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivateParameterized.TestDictionaryPrivateParameterized(\\nSystem.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, int>>)"];
m3_156 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivateParameterized.TestDictionaryPrivateParameterized(\\nSystem.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, int>>)", span="294-294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivateParameterized.TestDictionaryPrivateParameterized(\\nSystem.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, int>>)"];
m3_951 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Clear()", span="2144-2144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Clear()"];
m3_952 [file="JsonSerializerCollectionsTests.cs", label="((IList<string>)_storage).Clear()", span="2146-2146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Clear()"];
m3_954 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.ICollection<T>.Clear()", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Clear()"];
m3_953 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Clear()", span="2144-2144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Clear()"];
m3_195 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorMultipleParameters()", span="354-354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorMultipleParameters()"];
m3_196 [file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonException>(\n                () => JsonConvert.SerializeObject(new TestDictionaryMultipleParameters(null, \\nnull)),\n                ''Constructor for 'Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests+TestDictionaryMultipleParameters' \\nmust have no parameters or a single parameter that implements 'System.Collections.Generic.IEnumerable`1[System.Collections.Generic.KeyValuePair`\\n2[System.String,System.Int32]]'.'')", span="356-358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorMultipleParameters()"];
m3_197 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorMultipleParameters()", span="354-354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DictionaryJsonConstructorMultipleParameters()"];
m3_198 [file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="357-357", cluster="lambda expression"];
m3_359 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", span="704-704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()"];
m3_360 [file="JsonSerializerCollectionsTests.cs", label="IReadOnlyList<int> list = JsonConvert.DeserializeObject<IReadOnlyList<int>>(''[1,2,3]'')", span="706-706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()"];
m3_361 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, list.Count)", span="708-708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()"];
m3_362 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, list[0])", span="709-709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()"];
m3_363 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, list[1])", span="710-710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()"];
m3_364 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, list[2])", span="711-711", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()"];
m3_365 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()", span="704-704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyListInterface()"];
m3_1079 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Remove(T)", span="2466-2466", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Remove(T)"];
m3_1080 [file="JsonSerializerCollectionsTests.cs", label="throw new NotImplementedException();", span="2468-2468", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Remove(T)"];
m3_1081 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Remove(T)", span="2466-2466", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.Remove(T)"];
m3_269 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", span="523-523", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()"];
m3_270 [file="JsonSerializerCollectionsTests.cs", label="object[,] myOtherArray =\n            {\n                { new KeyValuePair<string, double>(''my value'', 0.8), ''foobar'' },\n                { \\ntrue, 0.4d },\n                { 0.05f, 6 }\n            }", span="525-530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()"];
m3_271 [file="JsonSerializerCollectionsTests.cs", label="string myOtherArrayAsString = JsonConvert.SerializeObject(myOtherArray, Formatting.Indented)", span="532-532", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()"];
m3_272 [file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''[\n  [\n    {\n      ''''Key'''': ''''my value'''',\n      ''''Value'''': 0.8\n    },\n    ''''foobar''''\n  ],\n  [\n    \\ntrue,\n    0.4\n  ],\n  [\n    0.05,\n    6\n  ]\n]'', myOtherArrayAsString)", span="534-550", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()"];
m3_274 [file="JsonSerializerCollectionsTests.cs", label="object[,] myOtherResult = JsonConvert.DeserializeObject<object[,]>(myOtherArrayAsString)", span="557-557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()"];
m3_273 [file="JsonSerializerCollectionsTests.cs", label="JObject o = JObject.Parse(@''{\n              ''''Key'''': ''''my value'''',\n              ''''Value'''': 0.8\n            }'')", span="552-555", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()"];
m3_275 [file="JsonSerializerCollectionsTests.cs", label="Assert.IsTrue(JToken.DeepEquals(o, (JToken)myOtherResult[0, 0]))", span="558-558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()"];
m3_283 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="407-407", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)"];
m3_276 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''foobar'', myOtherResult[0, 1])", span="559-559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()"];
m3_277 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(true, myOtherResult[1, 0])", span="561-561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()"];
m3_278 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0.4, myOtherResult[1, 1])", span="562-562", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()"];
m3_279 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0.05, myOtherResult[2, 0])", span="564-564", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()"];
m3_280 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(6L, myOtherResult[2, 1])", span="565-565", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()"];
m3_284 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="154-154", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)"];
m3_281 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", span="523-523", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()"];
m3_193 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryMultipleParameters.TestDictionaryMultipleParameters(\\nstring, string)", span="348-348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryMultipleParameters.TestDictionaryMultipleParameters(\\nstring, string)"];
m3_194 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryMultipleParameters.TestDictionaryMultipleParameters(\\nstring, string)", span="348-348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryMultipleParameters.TestDictionaryMultipleParameters(\\nstring, string)"];
m3_314 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor_Failure()", span="626-626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor_Failure()"];
m3_315 [file="JsonSerializerCollectionsTests.cs", label="string json = @''[\n  ''''One'''',\n  ''''II'''',\n  ''''3''''\n]''", span="628-632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor_Failure()"];
m3_316 [file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<EnumerableClassFailure<string>>(json), ''\\nCannot create and populate list type Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests+EnumerableClassFailure`1[\\nSystem.String]. Path '', line 1, position 1.'')", span="634-634", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor_Failure()"];
m3_319 [file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<EnumerableClassFailure<string>>(json)", span="634-634", cluster="lambda expression"];
m3_317 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor_Failure()", span="626-626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor_Failure()"];
m3_318 [file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="634-634", cluster="lambda expression"];
m3_1126 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.CanConvert(System.Type)", span="2615-2615", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.CanConvert(System.Type)"];
m3_1127 [file="JsonSerializerCollectionsTests.cs", label="return (objectType == typeof(List<string>));", span="2617-2617", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.CanConvert(System.Type)"];
m3_1128 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.CanConvert(System.Type)", span="2615-2615", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.CanConvert(System.Type)"];
m3_179 [file="JsonSerializerCollectionsTests.cs", label="return new TestDictionaryPrivate();", span="325-325", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivate.Create()"];
m3_180 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivate.Create()", span="323-323", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivate.Create()"];
m3_295 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", span="589-589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()"];
m3_296 [file="JsonSerializerCollectionsTests.cs", label="string json = @''[\n  1,\n  2,\n  null\n]''", span="591-595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()"];
m3_297 [file="JsonSerializerCollectionsTests.cs", label="var result = JsonConvert.DeserializeObject<EnumerableClass<int?>>(json)", span="597-597", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()"];
m3_298 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, result.Count())", span="599-599", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()"];
m3_299 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, result.ElementAt(0))", span="600-600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()"];
m3_300 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, result.ElementAt(1))", span="601-601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()"];
m3_301 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(null, result.ElementAt(2))", span="602-602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()"];
m3_303 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()"];
m3_304 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)"];
m3_302 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", span="589-589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()"];
m3_397 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", span="771-771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)"];
m3_398 [file="JsonSerializerCollectionsTests.cs", label="return _dictionary.ContainsKey(key);", span="773-773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)"];
m3_399 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", span="771-771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)"];
m3_400 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)"];
m3_534 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", span="1091-1091", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()"];
m3_535 [file="JsonSerializerCollectionsTests.cs", label="string json = @''[ { ''''Value'''': [ ''''1'''', ''''2'''' ], ''''Key'''': ''''aaa'''', ''''BadContent'''': [ 0 ] }, { ''''Value'''': [ ''''\\n3'''', ''''4'''' ], ''''Key'''': ''''bbb'''' } ]''", span="1093-1093", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()"];
m3_536 [file="JsonSerializerCollectionsTests.cs", label="IList<KeyValuePair<string, IList<string>>> values = JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>>>(json)", span="1095-1095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()"];
m3_537 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, values.Count)", span="1097-1097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()"];
m3_538 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''aaa'', values[0].Key)", span="1098-1098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()"];
m3_539 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, values[0].Value.Count)", span="1099-1099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()"];
m3_540 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''1'', values[0].Value[0])", span="1100-1100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()"];
m3_541 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''2'', values[0].Value[1])", span="1101-1101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()"];
m3_542 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''bbb'', values[1].Key)", span="1102-1102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()"];
m3_543 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, values[1].Value.Count)", span="1103-1103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()"];
m3_544 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''3'', values[1].Value[0])", span="1104-1104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()"];
m3_545 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''4'', values[1].Value[1])", span="1105-1105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()"];
m3_546 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", span="1091-1091", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()"];
m3_705 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", span="1517-1517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()"];
m3_706 [file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[],''''After'''':''''After!''''}''", span="1519-1519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()"];
m3_707 [file="JsonSerializerCollectionsTests.cs", label="Array3D aa = JsonConvert.DeserializeObject<Array3D>(json)", span="1521-1521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()"];
m3_714 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(json, after)", span="1531-1531", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()"];
m3_708 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="1523-1523", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()"];
m3_709 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''After!'', aa.After)", span="1524-1524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()"];
m3_710 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0, aa.Coordinates.GetLength(0))", span="1525-1525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()"];
m3_711 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0, aa.Coordinates.GetLength(1))", span="1526-1526", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()"];
m3_712 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(0, aa.Coordinates.GetLength(2))", span="1527-1527", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()"];
m3_713 [file="JsonSerializerCollectionsTests.cs", label="string after = JsonConvert.SerializeObject(aa)", span="1529-1529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()"];
m3_715 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()", span="1517-1517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeEmpty3DArray()"];
m3_230 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomConcurrentDictionary()", span="437-437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomConcurrentDictionary()"];
m3_231 [file="JsonSerializerCollectionsTests.cs", label="IDictionary d = new CustomConcurrentDictionary()", span="439-439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomConcurrentDictionary()"];
m3_240 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomConcurrentDictionary.CustomConcurrentDictionary()", span="421-421", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomConcurrentDictionary.CustomConcurrentDictionary()"];
m3_232 [file="JsonSerializerCollectionsTests.cs", label="d.Add(''key'', new List<SomeObject>\n            {\n                new SomeObject\n                {\n                    Text1 = ''\\nvalue1''\n                }\n            })", span="440-446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomConcurrentDictionary()"];
m3_233 [file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(d, Formatting.Indented)", span="448-448", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomConcurrentDictionary()"];
m3_234 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{\n  ''''key'''': [\n    {\n      ''''Text1'''': ''''value1''''\n    }\n  ]\n}'', json)", span="450-456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomConcurrentDictionary()"];
m3_235 [file="JsonSerializerCollectionsTests.cs", label="CustomConcurrentDictionary d2 = JsonConvert.DeserializeObject<CustomConcurrentDictionary>(json)", span="458-458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomConcurrentDictionary()"];
m3_236 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, d2.Count)", span="460-460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomConcurrentDictionary()"];
m3_237 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''value1'', d2[''key''][0].Text1)", span="461-461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomConcurrentDictionary()"];
m3_238 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''value2'', d2[''key2''][0].Text1)", span="462-462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomConcurrentDictionary()"];
m3_239 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomConcurrentDictionary()", span="437-437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomConcurrentDictionary()"];
m3_366 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", span="715-715", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()"];
m3_367 [file="JsonSerializerCollectionsTests.cs", label="IReadOnlyCollection<int> list = JsonConvert.DeserializeObject<IReadOnlyCollection<int>>(''[1,2,3]'')", span="717-717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()"];
m3_368 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, list.Count)", span="719-719", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()"];
m3_369 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, list.ElementAt(0))", span="721-721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()"];
m3_370 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, list.ElementAt(1))", span="722-722", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()"];
m3_371 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(3, list.ElementAt(2))", span="723-723", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()"];
m3_372 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", span="715-715", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()"];
m3_955 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Contains(string)", span="2149-2149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Contains(string)"];
m3_956 [file="JsonSerializerCollectionsTests.cs", label="return ((IList<string>)_storage).Contains(item);", span="2151-2151", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Contains(string)"];
m3_958 [file="JsonSerializerCollectionsTests.cs", label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Contains(T)"];
m3_957 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Contains(string)", span="2149-2149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.Contains(string)"];
m3_352 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonGenericList()", span="693-693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonGenericList()"];
m3_353 [file="JsonSerializerCollectionsTests.cs", label="IList l = JsonConvert.DeserializeObject<IList>(''['string!']'')", span="695-695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonGenericList()"];
m3_354 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(typeof(List<object>), l.GetType())", span="697-697", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonGenericList()"];
m3_355 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, l.Count)", span="698-698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonGenericList()"];
m3_356 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''string!'', l[0])", span="699-699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonGenericList()"];
m3_357 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonGenericList()", span="693-693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNonGenericList()"];
m3_143 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionNonGeneric.TestCollectionNonGeneric(System.Collections.IEnumerable)", span="268-268", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionNonGeneric.TestCollectionNonGeneric(System.Collections.IEnumerable)"];
m3_144 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionNonGeneric.TestCollectionNonGeneric(System.Collections.IEnumerable)", span="268-268", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionNonGeneric.TestCollectionNonGeneric(System.Collections.IEnumerable)"];
m3_690 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", span="1496-1496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()"];
m3_691 [file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,\\n1],[2,2,2]]],''''After'''':''''After!''''}''", span="1498-1498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()"];
m3_692 [file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<Exception>(() => JsonConvert.DeserializeObject<Array3D>(json), ''Cannot deserialize non-cubical array as \\nmultidimensional array.'')", span="1500-1500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()"];
m3_695 [file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<Array3D>(json)", span="1500-1500", cluster="lambda expression"];
m3_693 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", span="1496-1496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()"];
m3_694 [file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="1500-1500", cluster="lambda expression"];
m3_771 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", span="1740-1740", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()"];
m3_772 [file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''action'''':''''Router'''',''''method'''':''''Navigate'''',''''data'''':[''''dashboard'''',null],''''type'''':''''\\nrpc'''',''''tid'''':2}''", span="1742-1742", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()"];
m3_773 [file="JsonSerializerCollectionsTests.cs", label="ObjectArrayPropertyTest o = JsonConvert.DeserializeObject<ObjectArrayPropertyTest>(json)", span="1744-1744", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()"];
m3_774 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Router'', o.Action)", span="1746-1746", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()"];
m3_775 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''Navigate'', o.Method)", span="1747-1747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()"];
m3_776 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, o.Data.Length)", span="1748-1748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()"];
m3_777 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(''dashboard'', o.Data[0])", span="1749-1749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()"];
m3_778 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(null, o.Data[1])", span="1750-1750", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()"];
m3_779 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", span="1740-1740", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()"];
m3_335 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(\\nSystem.Collections.Generic.IEnumerable<T>)", span="663-663", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(\\nSystem.Collections.Generic.IEnumerable<T>)"];
m3_336 [file="JsonSerializerCollectionsTests.cs", label="Add(default(T))", span="666-666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(\\nSystem.Collections.Generic.IEnumerable<T>)"];
m3_337 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(\\nSystem.Collections.Generic.IEnumerable<T>)", span="663-663", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>.PrivateDefaultCtorWithIEnumerableCtorList(\\nSystem.Collections.Generic.IEnumerable<T>)"];
m3_926 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeCultureInfoKey()", span="2052-2052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeCultureInfoKey()"];
m3_927 [file="JsonSerializerCollectionsTests.cs", label="string json = @''{ ''''en-US'''': ''''Hi'''', ''''sv-SE'''': ''''Hej'''' }''", span="2054-2054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeCultureInfoKey()"];
m3_928 [file="JsonSerializerCollectionsTests.cs", label="Dictionary<CultureInfo, string> values = JsonConvert.DeserializeObject<Dictionary<CultureInfo, string>>(json)", span="2056-2056", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeCultureInfoKey()"];
m3_929 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, values.Count)", span="2057-2057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeCultureInfoKey()"];
m3_930 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeCultureInfoKey()", span="2052-2052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeCultureInfoKey()"];
m3_1100 [file="JsonSerializerCollectionsTests.cs", label="Items = new List<T>()", span="2562-2562", cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GenericClass()"];
m3_1101 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GenericClass()", span="2560-2560", cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GenericClass()"];
m3_587 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", span="1214-1214", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()"];
m3_588 [file="JsonSerializerCollectionsTests.cs", label="string json = @''{\n  ''''NonReadOnlyList'''': [\n    11\n  ],\n  ''''NonReadOnlyDictionary'''': {\n    ''''first'''': 12\n  },\n  ''''\\nArray'''': [\n    13\n  ],\n  ''''List'''': [\n    14\n  ],\n  ''''Dictionary'''': {\n    ''''first'''': 15\n  },\n  ''''IReadOnlyCollection'''': [\n    \\n16\n  ],\n  ''''ReadOnlyCollection'''': [\n    17\n  ],\n  ''''IReadOnlyList'''': [\n    18\n  ],\n  ''''IReadOnlyDictionary'''': {\n    ''''\\nfirst'''': 19\n  },\n  ''''ReadOnlyDictionary'''': {\n    ''''first'''': 20\n  }\n}''", span="1216-1247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()"];
m3_589 [file="JsonSerializerCollectionsTests.cs", label="var c2 = JsonConvert.DeserializeObject<PopulateReadOnlyTestClass>(json)", span="1249-1249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()"];
m3_590 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, c2.NonReadOnlyDictionary.Count)", span="1251-1251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()"];
m3_591 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(12, c2.NonReadOnlyDictionary[''first''])", span="1252-1252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()"];
m3_592 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(2, c2.NonReadOnlyList.Count)", span="1254-1254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()"];
m3_593 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, c2.NonReadOnlyList[0])", span="1255-1255", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()"];
m3_594 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(11, c2.NonReadOnlyList[1])", span="1256-1256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()"];
m3_595 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1, c2.Array.Count)", span="1258-1258", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()"];
m3_596 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(13, c2.Array[0])", span="1259-1259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()"];
m3_597 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", span="1214-1214", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()"];
m3_982 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.System.Collections.IEnumerable.GetEnumerator()", span="2184-2184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.System.Collections.IEnumerable.GetEnumerator()"];
m3_983 [file="JsonSerializerCollectionsTests.cs", label="return ((IList<string>)_storage).GetEnumerator();", span="2186-2186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.System.Collections.IEnumerable.GetEnumerator()"];
m3_984 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.System.Collections.IEnumerable.GetEnumerator()", span="2184-2184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass.System.Collections.IEnumerable.GetEnumerator()"];
m3_87 [file="JsonSerializerCollectionsTests.cs", label="_bars.Add(bar)", span="175-175", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.Add(int)"];
m3_88 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.Add(int)", span="173-173", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized.Add(int)"];
m3_683 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", span="1488-1488", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()"];
m3_684 [file="JsonSerializerCollectionsTests.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,\\n2,1],{}]],''''After'''':''''After!''''}''", span="1490-1490", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()"];
m3_685 [file="JsonSerializerCollectionsTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Array3D>(json), ''Unexpected token when deserializing \\nmultidimensional array: StartObject. Path 'Coordinates[3][1]', line 1, position 99.'')", span="1492-1492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()"];
m3_688 [file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<Array3D>(json)", span="1492-1492", cluster="lambda expression"];
m3_686 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", span="1488-1488", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()"];
m3_687 [file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="1492-1492", cluster="lambda expression"];
m3_1076 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.CopyTo(T[], int)", span="2461-2461", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.CopyTo(T[], int)"];
m3_1077 [file="JsonSerializerCollectionsTests.cs", label="throw new NotImplementedException();", span="2463-2463", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.CopyTo(T[], int)"];
m3_1078 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.CopyTo(T[], int)", span="2461-2461", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>.CopyTo(T[], int)"];
m3_411 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", span="813-813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()"];
m3_412 [file="JsonSerializerCollectionsTests.cs", label="IDictionary<string, int> d = new Dictionary<string, int>\n            {\n                { ''one'', 1 },\n                { ''two'', \\n2 }\n            }", span="815-819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()"];
m3_413 [file="JsonSerializerCollectionsTests.cs", label="CustomReadOnlyDictionary<string, int> dic = new CustomReadOnlyDictionary<string, int>(d)", span="821-821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()"];
m3_414 [file="JsonSerializerCollectionsTests.cs", label="string json = JsonConvert.SerializeObject(dic, Formatting.Indented)", span="823-823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()"];
m3_415 [file="JsonSerializerCollectionsTests.cs", label="StringAssert.AreEqual(@''{\n  ''''one'''': 1,\n  ''''two'''': 2\n}'', json)", span="824-827", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()"];
m3_416 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()", span="813-813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyDictionary()"];
m3_55 [file="JsonSerializerCollectionsTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DoubleKey_WholeValue()", span="126-126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DoubleKey_WholeValue()"];
m3_56 [file="JsonSerializerCollectionsTests.cs", label="Dictionary<double, int> dictionary = new Dictionary<double, int> { { 1d, 1 } }", span="128-128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DoubleKey_WholeValue()"];
m3_57 [file="JsonSerializerCollectionsTests.cs", label="string output = JsonConvert.SerializeObject(dictionary)", span="129-129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DoubleKey_WholeValue()"];
m3_58 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(@''{''''1'''':1}'', output)", span="130-130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DoubleKey_WholeValue()"];
m3_59 [file="JsonSerializerCollectionsTests.cs", label="Dictionary<double, int> deserializedValue = JsonConvert.DeserializeObject<Dictionary<double, int>>(output)", span="132-132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DoubleKey_WholeValue()"];
m3_60 [file="JsonSerializerCollectionsTests.cs", label="Assert.AreEqual(1d, deserializedValue.First().Key)", span="133-133", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DoubleKey_WholeValue()"];
m3_61 [file="JsonSerializerCollectionsTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DoubleKey_WholeValue()", span="126-126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DoubleKey_WholeValue()"];
m3_133 [file="JsonSerializerCollectionsTests.cs", label="JsonConvert.SerializeObject(new TestCollectionMultipleParameters(null, null))", span="244-244", cluster="lambda expression"];
m3_134 [file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="244-244", cluster="lambda expression"];
m3_141 [file="JsonSerializerCollectionsTests.cs", label="JsonConvert.SerializeObject(new TestCollectionBadIEnumerableParameter(null))", span="260-260", cluster="lambda expression"];
m3_142 [file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="260-260", cluster="lambda expression"];
m3_157 [file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="295-295", cluster="lambda expression"];
m3_158 [file="JsonSerializerCollectionsTests.cs", label="k.Key", span="295-295", cluster="lambda expression"];
m3_159 [file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="295-295", cluster="lambda expression"];
m3_160 [file="JsonSerializerCollectionsTests.cs", label="Entry lambda expression", span="295-295", cluster="lambda expression"];
m3_161 [file="JsonSerializerCollectionsTests.cs", label="k.Value", span="295-295", cluster="lambda expression"];
m3_162 [file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="295-295", cluster="lambda expression"];
m3_199 [file="JsonSerializerCollectionsTests.cs", label="JsonConvert.SerializeObject(new TestDictionaryMultipleParameters(null, null))", span="357-357", cluster="lambda expression"];
m3_200 [file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="357-357", cluster="lambda expression"];
m3_207 [file="JsonSerializerCollectionsTests.cs", label="JsonConvert.SerializeObject(new TestDictionaryBadIEnumerableParameter(null))", span="373-373", cluster="lambda expression"];
m3_208 [file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="373-373", cluster="lambda expression"];
m3_223 [file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<NameValueCollectionTestClass>(''{Collection:[]}'')", span="410-410", cluster="lambda expression"];
m3_224 [file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="410-410", cluster="lambda expression"];
m3_320 [file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="634-634", cluster="lambda expression"];
m3_331 [file="JsonSerializerCollectionsTests.cs", label="JsonConvert.DeserializeObject<PrivateDefaultCtorList<int>>(''[1,2]'')", span="647-647", cluster="lambda expression"];
m3_332 [file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="647-647", cluster="lambda expression"];
m3_567 [file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="1132-1132", cluster="lambda expression"];
m3_655 [file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="1448-1448", cluster="lambda expression"];
m3_662 [file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="1456-1456", cluster="lambda expression"];
m3_682 [file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="1484-1484", cluster="lambda expression"];
m3_689 [file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="1492-1492", cluster="lambda expression"];
m3_696 [file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="1500-1500", cluster="lambda expression"];
m3_722 [file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="1539-1539", cluster="lambda expression"];
m3_729 [file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="1547-1547", cluster="lambda expression"];
m3_914 [file="JsonSerializerCollectionsTests.cs", label="Exit lambda expression", span="2022-2025", cluster="lambda expression"];
m3_1140;
m3_1141;
m3_1142;
m3_1143;
m3_1144;
m3_1145;
m3_1146;
m3_1147;
m3_1148;
m3_1149;
m3_1150;
m3_1151;
m3_1152;
m3_1153;
m3_1154;
m3_1155;
m3_1156;
m3_1157;
m3_1158;
m3_1159;
m3_1160;
m3_1161;
m3_1162;
m3_1163;
m3_1164;
m4_0 [file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)", span="66-66", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)"];
m4_1 [file="JsonTypeReflector.cs", label="return CachedAttributeGetter<T>.GetAttribute(attributeProvider);", span="68-68", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)"];
m4_2 [file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)", span="66-66", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)"];
m4_3 [file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.CachedAttributeGetter<T>.GetAttribute(object)", span="35-35", cluster="Newtonsoft.Json.Serialization.CachedAttributeGetter<T>.GetAttribute(object)"];
m4_87 [file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", span="300-300", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)"];
m4_88 [file="JsonTypeReflector.cs", label="T attribute", span="302-302", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)"];
m4_89 [file="JsonTypeReflector.cs", label="Type metadataType = GetAssociatedMetadataType(type)", span="305-305", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)"];
m4_94 [file="JsonTypeReflector.cs", label="attribute = ReflectionUtils.GetAttribute<T>(type, true)", span="316-316", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)"];
m4_97 [file="JsonTypeReflector.cs", label="type.GetInterfaces()", span="322-322", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)"];
m4_90 [file="JsonTypeReflector.cs", label="metadataType != null", span="306-306", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)"];
m4_91 [file="JsonTypeReflector.cs", label="attribute = ReflectionUtils.GetAttribute<T>(metadataType, true)", span="308-308", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)"];
m4_68 [file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociatedMetadataType(System.Type)", span="268-268", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociatedMetadataType(System.Type)"];
m4_103 [file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)", span="719-719", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)"];
m4_92 [file="JsonTypeReflector.cs", label="attribute != null", span="309-309", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)"];
m4_93 [file="JsonTypeReflector.cs", label="return attribute;", span="311-311", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)"];
m4_102 [file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)", span="300-300", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)"];
m4_95 [file="JsonTypeReflector.cs", label="attribute != null", span="317-317", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)"];
m4_96 [file="JsonTypeReflector.cs", label="return attribute;", span="319-319", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)"];
m4_98 [file="JsonTypeReflector.cs", label="attribute = ReflectionUtils.GetAttribute<T>(typeInterface, true)", span="324-324", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)"];
m4_101 [file="JsonTypeReflector.cs", label="return null;", span="331-331", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)"];
m4_104 [file="JsonTypeReflector.cs", label="Entry System.Type.GetInterfaces()", span="0-0", cluster="System.Type.GetInterfaces()"];
m4_99 [file="JsonTypeReflector.cs", label="attribute != null", span="325-325", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)"];
m4_100 [file="JsonTypeReflector.cs", label="return attribute;", span="327-327", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Type)"];
m4_127 [file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", span="417-417", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)"];
m4_128 [file="JsonTypeReflector.cs", label="Type type = provider as Type", span="419-419", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)"];
m4_131 [file="JsonTypeReflector.cs", label="MemberInfo memberInfo = provider as MemberInfo", span="425-425", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)"];
m4_134 [file="JsonTypeReflector.cs", label="return ReflectionUtils.GetAttribute<T>(provider, true);", span="431-431", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)"];
m4_129 [file="JsonTypeReflector.cs", label="type != null", span="420-420", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)"];
m4_130 [file="JsonTypeReflector.cs", label="return GetAttribute<T>(type);", span="422-422", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)"];
m4_135 [file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", span="417-417", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)"];
m4_132 [file="JsonTypeReflector.cs", label="memberInfo != null", span="426-426", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)"];
m4_133 [file="JsonTypeReflector.cs", label="return GetAttribute<T>(memberInfo);", span="428-428", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)"];
m4_105 [file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", span="334-334", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)"];
m4_10 [file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", span="178-178", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)"];
m4_11 [file="JsonTypeReflector.cs", label="JsonConverterAttribute converterAttribute = GetCachedAttribute<JsonConverterAttribute>(attributeProvider)", span="180-180", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)"];
m4_12 [file="JsonTypeReflector.cs", label="converterAttribute != null", span="182-182", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)"];
m4_13 [file="JsonTypeReflector.cs", label="Func<object[], object> creator = CreatorCache.Get(converterAttribute.ConverterType)", span="184-184", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)"];
m4_15 [file="JsonTypeReflector.cs", label="return (JsonConverter)creator(converterAttribute.ConverterParameters);", span="187-187", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)"];
m4_16 [file="JsonTypeReflector.cs", label="return null;", span="191-191", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)"];
m4_14 [file="JsonTypeReflector.cs", label="creator != null", span="185-185", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)"];
m4_18 [file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", span="60-60", cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)"];
m4_17 [file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", span="178-178", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)"];
m4_19 [file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.Func<T, TResult>.Invoke(T)", span="3037-3037", cluster="Newtonsoft.Json.Serialization.Func<T, TResult>.Invoke(T)"];
m4_20 [file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])", span="200-200", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])"];
m4_21 [file="JsonTypeReflector.cs", label="Func<object[], object> converterCreator = CreatorCache.Get(converterType)", span="202-202", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])"];
m4_22 [file="JsonTypeReflector.cs", label="return (JsonConverter)converterCreator(converterArgs);", span="203-203", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])"];
m4_23 [file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])", span="200-200", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])"];
m4_24 [file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])", span="206-206", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])"];
m4_25 [file="JsonTypeReflector.cs", label="Func<object[], object> converterCreator = CreatorCache.Get(namingStrategyType)", span="208-208", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])"];
m4_26 [file="JsonTypeReflector.cs", label="return (NamingStrategy)converterCreator(converterArgs);", span="209-209", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])"];
m4_27 [file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])", span="206-206", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])"];
m4_28 [file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", span="212-212", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)"];
m4_29 [file="JsonTypeReflector.cs", label="containerAttribute.NamingStrategyInstance == null", span="214-214", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)"];
m4_30 [file="JsonTypeReflector.cs", label="containerAttribute.NamingStrategyType == null", span="216-216", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)"];
m4_32 [file="JsonTypeReflector.cs", label="containerAttribute.NamingStrategyInstance = CreateNamingStrategyInstance(containerAttribute.NamingStrategyType, containerAttribute.NamingStrategyParameters)", span="221-221", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)"];
m4_33 [file="JsonTypeReflector.cs", label="return containerAttribute.NamingStrategyInstance;", span="224-224", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)"];
m4_31 [file="JsonTypeReflector.cs", label="return null;", span="218-218", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)"];
m4_34 [file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", span="212-212", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)"];
m4_35 [file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetCreator(System.Type)", span="227-227", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetCreator(System.Type)"];
m4_36 [file="JsonTypeReflector.cs", label="Func<object> defaultConstructor = (ReflectionUtils.HasDefaultConstructor(type, false))\n                ? ReflectionDelegateFactory.CreateDefaultConstructor<\\nobject>(type)\n                : null", span="229-231", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetCreator(System.Type)"];
m4_37 [file="JsonTypeReflector.cs", label="return (parameters) =>\n            {\n                try\n                {\n                    if (parameters != null)\n                    {\n                        \\nType[] paramTypes = parameters.Select(param => param.GetType()).ToArray();\n                        ConstructorInfo parameterizedConstructorInfo = \\ntype.GetConstructor(paramTypes);\n\n                        if (null != parameterizedConstructorInfo)\n                        {\n                            \\nObjectConstructor<object> parameterizedConstructor = ReflectionDelegateFactory.CreateParameterizedConstructor(parameterizedConstructorInfo);\n                            \\nreturn parameterizedConstructor(parameters);\n                        }\n                        else\n                        {\n                            \\nthrow new JsonException(''No matching parameterized constructor found for '{0}'.''.FormatWith(CultureInfo.InvariantCulture, type));\n                        }\n                    }\n\n                    \\nif (defaultConstructor == null)\n                    {\n                        throw new JsonException(''No parameterless constructor \\ndefined for '{0}'.''.FormatWith(CultureInfo.InvariantCulture, type));\n                    }\n\n                    return defaultConstructor();\n                }\n                \\ncatch (Exception ex)\n                {\n                    throw new JsonException(''Error creating '{0}'.''.FormatWith(CultureInfo.InvariantCulture, \\ntype), ex);\n                }\n            };", span="233-264", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetCreator(System.Type)"];
m4_44 [file="JsonTypeReflector.cs", label="ConstructorInfo parameterizedConstructorInfo = type.GetConstructor(paramTypes)", span="240-240", cluster="lambda expression"];
m4_48 [file="JsonTypeReflector.cs", label="throw new JsonException(''No matching parameterized constructor found for '{0}'.''.FormatWith(CultureInfo.InvariantCulture, type));", span="249-249", cluster="lambda expression"];
m4_50 [file="JsonTypeReflector.cs", label="throw new JsonException(''No parameterless constructor defined for '{0}'.''.FormatWith(CultureInfo.InvariantCulture, type));", span="255-255", cluster="lambda expression"];
m4_53 [file="JsonTypeReflector.cs", label="throw new JsonException(''Error creating '{0}'.''.FormatWith(CultureInfo.InvariantCulture, type), ex);", span="262-262", cluster="lambda expression"];
m4_40 [file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", span="76-76", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)"];
m4_39 [file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", span="223-223", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)"];
m4_49 [file="JsonTypeReflector.cs", label="defaultConstructor == null", span="253-253", cluster="lambda expression"];
m4_51 [file="JsonTypeReflector.cs", label="return defaultConstructor();", span="258-258", cluster="lambda expression"];
m4_38 [file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetCreator(System.Type)", span="227-227", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetCreator(System.Type)"];
m4_42 [file="JsonTypeReflector.cs", label="parameters != null", span="237-237", cluster="lambda expression"];
m4_43 [file="JsonTypeReflector.cs", label="Type[] paramTypes = parameters.Select(param => param.GetType()).ToArray()", span="239-239", cluster="lambda expression"];
m4_47 [file="JsonTypeReflector.cs", label="return parameterizedConstructor(parameters);", span="245-245", cluster="lambda expression"];
m4_69 [file="JsonTypeReflector.cs", label="return AssociatedMetadataTypesCache.Get(type);", span="270-270", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociatedMetadataType(System.Type)"];
m4_70 [file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociatedMetadataType(System.Type)", span="268-268", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociatedMetadataType(System.Type)"];
m4_106 [file="JsonTypeReflector.cs", label="T attribute", span="336-336", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)"];
m4_107 [file="JsonTypeReflector.cs", label="Type metadataType = GetAssociatedMetadataType(memberInfo.DeclaringType)", span="339-339", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)"];
m4_109 [file="JsonTypeReflector.cs", label="MemberInfo metadataTypeMemberInfo = ReflectionUtils.GetMemberInfoFromType(metadataType, memberInfo)", span="342-342", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)"];
m4_114 [file="JsonTypeReflector.cs", label="attribute = ReflectionUtils.GetAttribute<T>(memberInfo, true)", span="355-355", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)"];
m4_117 [file="JsonTypeReflector.cs", label="memberInfo.DeclaringType != null", span="361-361", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)"];
m4_118 [file="JsonTypeReflector.cs", label="memberInfo.DeclaringType.GetInterfaces()", span="363-363", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)"];
m4_119 [file="JsonTypeReflector.cs", label="MemberInfo interfaceTypeMemberInfo = ReflectionUtils.GetMemberInfoFromType(typeInterface, memberInfo)", span="365-365", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)"];
m4_108 [file="JsonTypeReflector.cs", label="metadataType != null", span="340-340", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)"];
m4_110 [file="JsonTypeReflector.cs", label="metadataTypeMemberInfo != null", span="344-344", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)"];
m4_111 [file="JsonTypeReflector.cs", label="attribute = ReflectionUtils.GetAttribute<T>(metadataTypeMemberInfo, true)", span="346-346", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)"];
m4_126 [file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)", span="889-889", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberInfoFromType(System.Type, System.Reflection.MemberInfo)"];
m4_112 [file="JsonTypeReflector.cs", label="attribute != null", span="347-347", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)"];
m4_113 [file="JsonTypeReflector.cs", label="return attribute;", span="349-349", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)"];
m4_125 [file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)", span="334-334", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)"];
m4_115 [file="JsonTypeReflector.cs", label="attribute != null", span="356-356", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)"];
m4_116 [file="JsonTypeReflector.cs", label="return attribute;", span="358-358", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)"];
m4_124 [file="JsonTypeReflector.cs", label="return null;", span="378-378", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)"];
m4_120 [file="JsonTypeReflector.cs", label="interfaceTypeMemberInfo != null", span="367-367", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)"];
m4_121 [file="JsonTypeReflector.cs", label="attribute = ReflectionUtils.GetAttribute<T>(interfaceTypeMemberInfo, true)", span="369-369", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)"];
m4_122 [file="JsonTypeReflector.cs", label="attribute != null", span="370-370", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)"];
m4_123 [file="JsonTypeReflector.cs", label="return attribute;", span="372-372", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.MemberInfo)"];
m4_71 [file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", span="273-273", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)"];
m4_72 [file="JsonTypeReflector.cs", label="Attribute[] customAttributes = ReflectionUtils.GetAttributes(type, null, true)", span="275-275", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)"];
m4_82 [file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", span="740-740", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)"];
m4_73 [file="JsonTypeReflector.cs", label=customAttributes, span="277-277", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)"];
m4_74 [file="JsonTypeReflector.cs", label="Type attributeType = attribute.GetType()", span="279-279", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)"];
m4_79 [file="JsonTypeReflector.cs", label="return (Type)_metadataTypeAttributeReflectionObject.GetValue(attribute, metadataClassTypeName);", span="292-292", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)"];
m4_80 [file="JsonTypeReflector.cs", label="return null;", span="296-296", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)"];
m4_83 [file="JsonTypeReflector.cs", label="Entry object.GetType()", span="0-0", cluster="object.GetType()"];
m4_75 [file="JsonTypeReflector.cs", label="string.Equals(attributeType.FullName, ''System.ComponentModel.DataAnnotations.MetadataTypeAttribute'', StringComparison.Ordinal)", span="283-283", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)"];
m4_78 [file="JsonTypeReflector.cs", label="_metadataTypeAttributeReflectionObject = ReflectionObject.Create(attributeType, metadataClassTypeName)", span="289-289", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)"];
m4_76 [file="JsonTypeReflector.cs", label="string metadataClassTypeName = ''MetadataClassType''", span="285-285", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)"];
m4_84 [file="JsonTypeReflector.cs", label="Entry string.Equals(string, string, System.StringComparison)", span="0-0", cluster="string.Equals(string, string, System.StringComparison)"];
m4_77 [file="JsonTypeReflector.cs", label="_metadataTypeAttributeReflectionObject == null", span="287-287", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)"];
m4_85 [file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, params string[])", span="74-74", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, params string[])"];
m4_86 [file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionObject.GetValue(object, string)", span="57-57", cluster="Newtonsoft.Json.Utilities.ReflectionObject.GetValue(object, string)"];
m4_81 [file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", span="273-273", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)"];
m4_4 [file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", span="151-151", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)"];
m4_5 [file="JsonTypeReflector.cs", label="JsonObjectAttribute objectAttribute = GetCachedAttribute<JsonObjectAttribute>(objectType)", span="153-153", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)"];
m4_6 [file="JsonTypeReflector.cs", label="objectAttribute != null", span="154-154", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)"];
m4_7 [file="JsonTypeReflector.cs", label="return objectAttribute.MemberSerialization;", span="156-156", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)"];
m4_8 [file="JsonTypeReflector.cs", label="return MemberSerialization.OptOut;", span="175-175", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)"];
m4_9 [file="JsonTypeReflector.cs", label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", span="151-151", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)"];
m4_41 [file="JsonTypeReflector.cs", label="Entry lambda expression", span="233-264", cluster="lambda expression"];
m4_55;
m4_56;
m4_64 [file="JsonTypeReflector.cs", label="Entry lambda expression", span="239-239", cluster="lambda expression"];
m4_57 [file="JsonTypeReflector.cs", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0", cluster="System.Type.GetConstructor(System.Type[])"];
m4_45 [file="JsonTypeReflector.cs", label="null != parameterizedConstructorInfo", span="242-242", cluster="lambda expression"];
m4_46 [file="JsonTypeReflector.cs", label="ObjectConstructor<object> parameterizedConstructor = ReflectionDelegateFactory.CreateParameterizedConstructor(parameterizedConstructorInfo)", span="244-244", cluster="lambda expression"];
m4_58 [file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", span="75-75", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)"];
m4_54 [file="JsonTypeReflector.cs", label="Exit lambda expression", span="233-264", cluster="lambda expression"];
m4_60 [file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.JsonException.JsonException(string)", span="54-54", cluster="Newtonsoft.Json.JsonException.JsonException(string)"];
m4_61 [file="JsonTypeReflector.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)"];
m4_62 [file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.Serialization.Func<TResult>.Invoke()", span="3035-3035", cluster="Newtonsoft.Json.Serialization.Func<TResult>.Invoke()"];
m4_52 [file="JsonTypeReflector.cs", label=Exception, span="260-260", cluster="lambda expression"];
m4_63 [file="JsonTypeReflector.cs", label="Entry Newtonsoft.Json.JsonException.JsonException(string, System.Exception)", span="65-65", cluster="Newtonsoft.Json.JsonException.JsonException(string, System.Exception)"];
m4_65 [file="JsonTypeReflector.cs", label="param.GetType()", span="239-239", cluster="lambda expression"];
m4_67;
m4_66 [file="JsonTypeReflector.cs", label="Exit lambda expression", span="239-239", cluster="lambda expression"];
m4_136;
m4_137;
m5_0 [color=green, community=1, file="UnixDateTimeConverter.cs", label="Entry Newtonsoft.Json.Converters.UnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="44-44", cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)"];
m5_1 [color=green, community=1, file="UnixDateTimeConverter.cs", label="long ticks", span="46-46", cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)"];
m5_2 [color=green, community=1, file="UnixDateTimeConverter.cs", label="value is DateTime", span="48-48", cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)"];
m5_5 [color=green, community=1, file="UnixDateTimeConverter.cs", label="throw new JsonSerializationException(''Expected date object value.'');", span="60-60", cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)"];
m5_9 [color=green, community=1, file="UnixDateTimeConverter.cs", label="Exit Newtonsoft.Json.Converters.UnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="44-44", cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)"];
m5_7 [color=green, community=1, file="UnixDateTimeConverter.cs", label="throw new JsonSerializationException(''Cannot convert date value that is before Unix epoch of 00:00:00 UTC on 1 January 1970.'');", span="65-65", cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)"];
m5_3 [color=green, community=1, file="UnixDateTimeConverter.cs", label=dateTime, span="48-48", cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)"];
m5_4 [color=green, community=1, file="UnixDateTimeConverter.cs", label="ticks = (long)(dateTime.ToUniversalTime() - UnixEpoch).TotalSeconds", span="50-50", cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)"];
m5_10;
m5_6 [color=green, community=1, file="UnixDateTimeConverter.cs", label="ticks < 0", span="63-63", cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)"];
m5_8 [color=green, community=1, file="UnixDateTimeConverter.cs", label="writer.WriteValue(ticks)", span="68-68", cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)"];
m5_12 [file="UnixDateTimeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long)", span="976-976", cluster="Newtonsoft.Json.JsonWriter.WriteValue(long)"];
m5_13 [color=green, community=1, file="UnixDateTimeConverter.cs", label="Entry Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="79-79", cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m5_14 [color=green, community=1, file="UnixDateTimeConverter.cs", label="bool nullable = ReflectionUtils.IsNullable(objectType)", span="81-81", cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m5_15 [color=green, community=1, file="UnixDateTimeConverter.cs", label="reader.TokenType == JsonToken.Null", span="82-82", cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m5_17 [color=green, community=1, file="UnixDateTimeConverter.cs", label="throw JsonSerializationException.Create(reader, ''Cannot convert null value to {0}.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="86-86", cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m5_20 [color=green, community=1, file="UnixDateTimeConverter.cs", label="reader.TokenType == JsonToken.Integer", span="94-94", cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m5_21 [color=green, community=1, file="UnixDateTimeConverter.cs", label="ticks = (long)reader.Value", span="96-96", cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m5_22 [color=green, community=1, file="UnixDateTimeConverter.cs", label="reader.TokenType == JsonToken.String", span="98-98", cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m5_23 [color=green, community=1, file="UnixDateTimeConverter.cs", label="!long.TryParse((string)reader.Value, out ticks)", span="100-100", cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m5_24 [color=green, community=1, file="UnixDateTimeConverter.cs", label="throw JsonSerializationException.Create(reader, ''Cannot convert invalid value to {0}.''.FormatWith(CultureInfo.InvariantCulture, \\nobjectType));", span="102-102", cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m5_25 [color=green, community=1, file="UnixDateTimeConverter.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token parsing date. Expected Integer or String, got {0}.''.FormatWith(\\nCultureInfo.InvariantCulture, reader.TokenType));", span="107-107", cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m5_29 [color=green, community=1, file="UnixDateTimeConverter.cs", label="throw JsonSerializationException.Create(reader, ''Cannot convert value that is before Unix epoch of 00:00:00 UTC on 1 January 1970 \\nto {0}.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="127-127", cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m5_31 [file="UnixDateTimeConverter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="251-251", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)"];
m5_16 [color=green, community=1, file="UnixDateTimeConverter.cs", label="!nullable", span="84-84", cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m5_19 [color=green, community=1, file="UnixDateTimeConverter.cs", label="long ticks", span="92-92", cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m5_30 [color=green, community=1, file="UnixDateTimeConverter.cs", label="Exit Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="79-79", cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m5_33 [color=green, file="UnixDateTimeConverter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82", cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", community=0];
m5_32 [color=green, file="UnixDateTimeConverter.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", community=0];
m5_26 [color=green, community=1, file="UnixDateTimeConverter.cs", label="ticks >= 0", span="110-110", cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m5_27 [color=green, community=1, file="UnixDateTimeConverter.cs", label="DateTime d = UnixEpoch.AddSeconds(ticks)", span="112-112", cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m5_34 [color=green, file="UnixDateTimeConverter.cs", label="Entry long.TryParse(string, out long)", span="0-0", cluster="long.TryParse(string, out long)", community=0];
m5_18 [color=green, community=1, file="UnixDateTimeConverter.cs", label="return null;", span="89-89", cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m5_28 [color=green, community=1, file="UnixDateTimeConverter.cs", label="return d;", span="123-123", cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
m5_35 [color=green, file="UnixDateTimeConverter.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)", community=0];
m6_70 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidStringToDateTimeOffset()", span="154-154", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidStringToDateTimeOffset()"];
m6_71 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\n                () => JsonConvert.DeserializeObject<DateTimeOffset>(@''''''\\nPIE'''''', new UnixDateTimeConverter()),\n                ''Cannot convert invalid value to System.DateTimeOffset. Path '', line \\n1, position 5.''\n            )", span="156-159", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidStringToDateTimeOffset()"];
m6_72 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidStringToDateTimeOffset()", span="154-154", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidStringToDateTimeOffset()"];
m6_19 [file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="370-370", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])"];
m6_73 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry lambda expression", span="157-157", cluster="lambda expression"];
m6_34 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeOffset()", span="86-86", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeOffset()"];
m6_35 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="DateTimeOffset now = new DateTimeOffset(2018, 1, 1, 16, 1, 16, TimeSpan.FromHours(-5))", span="88-88", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeOffset()"];
m6_36 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="string result = JsonConvert.SerializeObject(now, new UnixDateTimeConverter())", span="90-90", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeOffset()"];
m6_37 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.AreEqual(''1514840476'', result)", span="92-92", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeOffset()"];
m6_5 [color=green, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Converters.UnixDateTimeConverter.UnixDateTimeConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.UnixDateTimeConverter()", community=0];
m6_6 [file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="548-548", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])"];
m6_40 [color=green, file="UnixDateTimeConverterTests.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", community=0];
m6_39 [color=green, file="UnixDateTimeConverterTests.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", community=0];
m6_38 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeOffset()", span="86-86", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeOffset()"];
m6_7;
m6_0 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTime()", span="44-44", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTime()"];
m6_1 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="DateTime unixEpoch = UnixDateTimeConverter.UnixEpoch", span="46-46", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTime()"];
m6_2 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="string result = JsonConvert.SerializeObject(unixEpoch, new UnixDateTimeConverter())", span="48-48", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTime()"];
m6_3 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.AreEqual(''0'', result)", span="50-50", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTime()"];
m6_4 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTime()", span="44-44", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTime()"];
m6_121 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterObject()", span="242-242", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterObject()"];
m6_122 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="UnixConverterObject obj1 = new UnixConverterObject\n            {\n                Object1 = new DateTime(1970, 1, 1, 0, 0, 3, DateTimeKind.Utc),\n                \\nObject2 = null,\n                ObjectNotHandled = new DateTime(2018, 1, 1, 21, 1, 16, DateTimeKind.Utc)\n            }", span="244-249", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterObject()"];
m6_123 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="string json = JsonConvert.SerializeObject(obj1, Formatting.Indented)", span="251-251", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterObject()"];
m6_51 [color=green, file="UnixDateTimeConverterTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", community=0];
m6_131 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixConverterObject.UnixConverterObject()", span="274-274", cluster="Newtonsoft.Json.Tests.Converters.UnixConverterObject.UnixConverterObject()"];
m6_127 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.AreEqual(new DateTime(1970, 1, 1, 0, 0, 3, DateTimeKind.Utc), obj2.Object1)", span="261-261", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterObject()"];
m6_128 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.IsNull(obj2.Object2)", span="262-262", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterObject()"];
m6_129 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.AreEqual(new DateTime(2018, 1, 1, 21, 1, 16, DateTimeKind.Utc), obj2.ObjectNotHandled)", span="263-263", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterObject()"];
m6_130 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterObject()", span="242-242", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterObject()"];
m6_124 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="StringAssert.AreEqual(@''{\n  ''''Object1'''': 3,\n  ''''Object2'''': null,\n  ''''ObjectNotHandled'''': 1514840476\n}'', json)", span="252-256", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterObject()"];
m6_125 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="UnixConverterObject obj2 = JsonConvert.DeserializeObject<UnixConverterObject>(json)", span="258-258", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterObject()"];
m6_107 [file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="537-537", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)"];
m6_108 [file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="341-341", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)"];
m6_126 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.IsNotNull(obj2)", span="259-259", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterObject()"];
m6_109 [file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="703-703", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)"];
m6_110;
m6_84;
m6_66 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeStringToDateTimeOffset()", span="146-146", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeStringToDateTimeOffset()"];
m6_67 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="DateTimeOffset result = JsonConvert.DeserializeObject<DateTimeOffset>(@''''''1514840476'''''', new UnixDateTimeConverter())", span="148-148", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeStringToDateTimeOffset()"];
m6_68 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.AreEqual(new DateTimeOffset(2018, 1, 1, 21, 1, 16, TimeSpan.Zero), result)", span="150-150", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeStringToDateTimeOffset()"];
m6_58 [file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="751-751", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])"];
m6_69 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeStringToDateTimeOffset()", span="146-146", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeStringToDateTimeOffset()"];
m6_41 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeNullableDateTimeClass()", span="96-96", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeNullableDateTimeClass()"];
m6_42 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="NullableDateTimeTestClass t = new NullableDateTimeTestClass\n            {\n                DateTimeField = null,\n                \\nDateTimeOffsetField = null\n            }", span="98-102", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeNullableDateTimeClass()"];
m6_43 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="UnixDateTimeConverter converter = new UnixDateTimeConverter()", span="104-104", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeNullableDateTimeClass()"];
m6_44 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="string result = JsonConvert.SerializeObject(t, converter)", span="106-106", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeNullableDateTimeClass()"];
m6_47 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="result = JsonConvert.SerializeObject(t, converter)", span="116-116", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeNullableDateTimeClass()"];
m6_46 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="t = new NullableDateTimeTestClass\n            {\n                DateTimeField = new DateTime(2018, 1, 1, 21, 1, 16, DateTimeKind.Utc),\n                \\nDateTimeOffsetField = new DateTimeOffset(1970, 2, 1, 20, 6, 18, TimeSpan.Zero)\n            }", span="110-114", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeNullableDateTimeClass()"];
m6_50 [color=green, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.NullableDateTimeTestClass.NullableDateTimeTestClass()", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.NullableDateTimeTestClass.NullableDateTimeTestClass()", community=0];
m6_45 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.AreEqual(@''{''''PreField'''':null,''''DateTimeField'''':null,''''DateTimeOffsetField'''':null,''''PostField'''':null}'', \\nresult)", span="108-108", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeNullableDateTimeClass()"];
m6_48 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.AreEqual(@''{''''PreField'''':null,''''DateTimeField'''':1514840476,''''DateTimeOffsetField'''':2750778,''''PostField'''':\\nnull}'', result)", span="117-117", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeNullableDateTimeClass()"];
m6_49 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeNullableDateTimeClass()", span="96-96", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeNullableDateTimeClass()"];
m6_80 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeNullToNullable()", span="172-172", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeNullToNullable()"];
m6_81 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="DateTime? result = JsonConvert.DeserializeObject<DateTime?>(''null'', new UnixDateTimeConverter())", span="174-174", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeNullToNullable()"];
m6_82 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.IsNull(result)", span="176-176", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeNullToNullable()"];
m6_83 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeNullToNullable()", span="172-172", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeNullToNullable()"];
m6_23 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.WriteJsonInvalidType()", span="74-74", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.WriteJsonInvalidType()"];
m6_24 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="UnixDateTimeConverter converter = new UnixDateTimeConverter()", span="76-76", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.WriteJsonInvalidType()"];
m6_25 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\n                () => converter.WriteJson(new JTokenWriter(), new object(), \\nnew JsonSerializer()),\n                ''Expected date object value.''\n            )", span="78-81", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.WriteJsonInvalidType()"];
m6_28 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="converter.WriteJson(new JTokenWriter(), new object(), new JsonSerializer())", span="79-79", cluster="lambda expression"];
m6_26 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.WriteJsonInvalidType()", span="74-74", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.WriteJsonInvalidType()"];
m6_27 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry lambda expression", span="79-79", cluster="lambda expression"];
m6_76 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeIntegerToDateTime()", span="164-164", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeIntegerToDateTime()"];
m6_77 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="DateTime result = JsonConvert.DeserializeObject<DateTime>(''1514840476'', new UnixDateTimeConverter())", span="166-166", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeIntegerToDateTime()"];
m6_78 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.AreEqual(new DateTime(2018, 1, 1, 21, 1, 16, DateTimeKind.Utc), result)", span="168-168", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeIntegerToDateTime()"];
m6_79 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeIntegerToDateTime()", span="164-164", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeIntegerToDateTime()"];
m6_59 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeDateTimeOffset()", span="133-133", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeDateTimeOffset()"];
m6_60 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="UnixDateTimeConverter converter = new UnixDateTimeConverter()", span="135-135", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeDateTimeOffset()"];
m6_61 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="DateTimeOffset d = new DateTimeOffset(1970, 2, 1, 20, 6, 18, TimeSpan.Zero)", span="136-136", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeDateTimeOffset()"];
m6_62 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="string json = JsonConvert.SerializeObject(d, converter)", span="138-138", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeDateTimeOffset()"];
m6_63 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="DateTimeOffset result = JsonConvert.DeserializeObject<DateTimeOffset>(json, converter)", span="140-140", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeDateTimeOffset()"];
m6_64 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.AreEqual(new DateTimeOffset(1970, 2, 1, 20, 6, 18, TimeSpan.Zero), result)", span="142-142", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeDateTimeOffset()"];
m6_65 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeDateTimeOffset()", span="133-133", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeDateTimeOffset()"];
m6_52 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeNullToNonNullable()", span="121-121", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeNullToNonNullable()"];
m6_53 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="ExceptionAssert.Throws<Exception>(\n                () => JsonConvert.DeserializeObject<DateTimeTestClass>(\n                    @''{''''\\nPreField'''':''''Pre'''',''''DateTimeField'''':null,''''DateTimeOffsetField'''':null,''''PostField'''':''''Post''''}'',\n                    \\nnew UnixDateTimeConverter()\n                ),\n                ''Cannot convert null value to System.DateTime. Path 'DateTimeField', \\nline 1, position 38.''\n            )", span="123-129", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeNullToNonNullable()"];
m6_54 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeNullToNonNullable()", span="121-121", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeNullToNonNullable()"];
m6_55 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry lambda expression", span="124-127", cluster="lambda expression"];
m6_111 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterDictionary()", span="220-220", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterDictionary()"];
m6_112 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="UnixConverterDictionary<object> l1 = new UnixConverterDictionary<object>\n            {\n                {''First'', new DateTime(\\n1970, 1, 1, 0, 0, 3, DateTimeKind.Utc)},\n                {''Second'', new DateTime(2018, 1, 1, 21, 1, 16, DateTimeKind.Utc)},\n            }", span="222-226", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterDictionary()"];
m6_120 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixConverterDictionary<T>.UnixConverterDictionary()", span="271-271", cluster="Newtonsoft.Json.Tests.Converters.UnixConverterDictionary<T>.UnixConverterDictionary()"];
m6_113 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="string json = JsonConvert.SerializeObject(l1, Formatting.Indented)", span="228-228", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterDictionary()"];
m6_117 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.AreEqual(new DateTime(1970, 1, 1, 0, 0, 3, DateTimeKind.Utc), l2[''First''])", span="237-237", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterDictionary()"];
m6_118 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.AreEqual(new DateTime(2018, 1, 1, 21, 1, 16, DateTimeKind.Utc), l2[''Second''])", span="238-238", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterDictionary()"];
m6_119 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterDictionary()", span="220-220", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterDictionary()"];
m6_114 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="StringAssert.AreEqual(@''{\n  ''''First'''': 3,\n  ''''Second'''': 1514840476\n}'', json)", span="229-232", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterDictionary()"];
m6_115 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="UnixConverterDictionary<object> l2 = JsonConvert.DeserializeObject<UnixConverterDictionary<object>>(json)", span="234-234", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterDictionary()"];
m6_116 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.IsNotNull(l2)", span="235-235", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterDictionary()"];
m6_91 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidValueType()", span="189-189", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidValueType()"];
m6_92 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\n                () => JsonConvert.DeserializeObject<DateTime>(''false'', new \\nUnixDateTimeConverter()),\n                ''Unexpected token parsing date. Expected Integer or String, got Boolean. Path '', line \\n1, position 5.''\n            )", span="191-194", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidValueType()"];
m6_93 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidValueType()", span="189-189", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidValueType()"];
m6_94 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry lambda expression", span="192-192", cluster="lambda expression"];
m6_97 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterList()", span="198-198", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterList()"];
m6_98 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="UnixConverterList<object> l1 = new UnixConverterList<object>\n            {\n                new DateTime(2018, 1, 1, 21, 1, 16, \\nDateTimeKind.Utc),\n                new DateTime(1970, 1, 1, 0, 0, 3, DateTimeKind.Utc),\n            }", span="200-204", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterList()"];
m6_106 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixConverterList<T>.UnixConverterList()", span="268-268", cluster="Newtonsoft.Json.Tests.Converters.UnixConverterList<T>.UnixConverterList()"];
m6_99 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="string json = JsonConvert.SerializeObject(l1, Formatting.Indented)", span="206-206", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterList()"];
m6_103 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.AreEqual(new DateTime(2018, 1, 1, 21, 1, 16, DateTimeKind.Utc), l2[0])", span="215-215", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterList()"];
m6_104 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.AreEqual(new DateTime(1970, 1, 1, 0, 0, 3, DateTimeKind.Utc), l2[1])", span="216-216", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterList()"];
m6_105 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterList()", span="198-198", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterList()"];
m6_100 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="StringAssert.AreEqual(@''[\n  1514840476,\n  3\n]'', json)", span="207-210", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterList()"];
m6_101 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="UnixConverterList<object> l2 = JsonConvert.DeserializeObject<UnixConverterList<object>>(json)", span="212-212", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterList()"];
m6_102 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.IsNotNull(l2)", span="213-213", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.ConverterList()"];
m6_16 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeInvalidDate()", span="65-65", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeInvalidDate()"];
m6_17 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\n                () => JsonConvert.SerializeObject(new DateTime(1964, 2, 7), \\nnew UnixDateTimeConverter()),\n                ''Cannot convert date value that is before Unix epoch of 00:00:00 UTC on 1 January \\n1970.''\n            )", span="67-70", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeInvalidDate()"];
m6_18 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeInvalidDate()", span="65-65", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeInvalidDate()"];
m6_20 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry lambda expression", span="68-68", cluster="lambda expression"];
m6_8 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeNow()", span="54-54", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeNow()"];
m6_9 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="DateTime now = DateTime.Now", span="56-56", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeNow()"];
m6_11 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="string result = JsonConvert.SerializeObject(now, new UnixDateTimeConverter())", span="59-59", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeNow()"];
m6_12 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Assert.AreEqual(nowTicks + '''', result)", span="61-61", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeNow()"];
m6_10 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="long nowTicks = (long)(now.ToUniversalTime() - new DateTime(1970, 1, 1)).TotalSeconds", span="57-57", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeNow()"];
m6_14 [color=green, file="UnixDateTimeConverterTests.cs", label="Entry System.DateTime.ToUniversalTime()", span="0-0", cluster="System.DateTime.ToUniversalTime()", community=0];
m6_15 [color=green, file="UnixDateTimeConverterTests.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", community=0];
m6_13 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeNow()", span="54-54", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.SerializeDateTimeNow()"];
m6_85 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidValue()", span="180-180", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidValue()"];
m6_86 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\n                () => JsonConvert.DeserializeObject<DateTime>(''-1'', new UnixDateTimeConverter()),\n                ''\\nCannot convert value that is before Unix epoch of 00:00:00 UTC on 1 January 1970 to System.DateTime. Path '', line 1, position 2.''\n            )", span="182-185", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidValue()"];
m6_87 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidValue()", span="180-180", cluster="Newtonsoft.Json.Tests.Converters.UnixDateTimeConverterTests.DeserializeInvalidValue()"];
m6_88 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Entry lambda expression", span="183-183", cluster="lambda expression"];
m6_95 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="JsonConvert.DeserializeObject<DateTime>(''false'', new UnixDateTimeConverter())", span="192-192", cluster="lambda expression"];
m6_21 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="JsonConvert.SerializeObject(new DateTime(1964, 2, 7), new UnixDateTimeConverter())", span="68-68", cluster="lambda expression"];
m6_22 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit lambda expression", span="68-68", cluster="lambda expression"];
m6_56 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="JsonConvert.DeserializeObject<DateTimeTestClass>(\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':null,''''\\nDateTimeOffsetField'''':null,''''PostField'''':''''Post''''}'',\n                    new UnixDateTimeConverter()\n                )", span="124-127", cluster="lambda expression"];
m6_57 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit lambda expression", span="124-127", cluster="lambda expression"];
m6_74 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="JsonConvert.DeserializeObject<DateTimeOffset>(@''''''PIE'''''', new UnixDateTimeConverter())", span="157-157", cluster="lambda expression"];
m6_75 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit lambda expression", span="157-157", cluster="lambda expression"];
m6_89 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="JsonConvert.DeserializeObject<DateTime>(''-1'', new UnixDateTimeConverter())", span="183-183", cluster="lambda expression"];
m6_90 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit lambda expression", span="183-183", cluster="lambda expression"];
m6_96 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit lambda expression", span="192-192", cluster="lambda expression"];
m6_33 [color=green, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Converters.UnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="44-44", cluster="Newtonsoft.Json.Converters.UnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", community=0];
m6_32 [file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="557-557", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()"];
m6_31 [color=green, file="UnixDateTimeConverterTests.cs", label="Entry object.Object()", span="0-0", cluster="object.Object()", community=0];
m6_30 [color=green, file="UnixDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="82-82", cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", community=0];
m6_29 [color=green, community=1, file="UnixDateTimeConverterTests.cs", label="Exit lambda expression", span="79-79", cluster="lambda expression"];
m6_132;
n664 -> n691  [key=0, style=solid];
n664 -> n692  [key=1, color=darkseagreen4, label=string, style=dashed];
n664 -> n693  [key=1, color=darkseagreen4, label=string, style=dashed];
n691 -> n692  [key=0, style=solid];
n691 -> n693  [key=0, style=solid];
n692 -> n663  [key=2, style=dotted];
n692 -> n694  [key=0, style=solid];
n693 -> n694  [key=0, style=solid];
n694 -> n664  [key=0, color=blue, style=bold];
n672 -> n673  [key=0, style=solid];
n673 -> n674  [key=0, style=solid];
n673 -> n209  [key=2, style=dotted];
n674 -> n672  [key=0, color=blue, style=bold];
n675 -> n676  [key=0, style=solid];
n675 -> n678  [key=1, color=darkseagreen4, label="System.Reflection.MemberInfo", style=dashed];
n675 -> n682  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n675 -> n683  [key=1, color=darkseagreen4, label=bool, style=dashed];
n675 -> n684  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n676 -> n677  [key=0, style=solid];
n676 -> n679  [key=1, color=darkseagreen4, label=specifiedMember, style=dashed];
n676 -> n681  [key=1, color=darkseagreen4, label=specifiedMember, style=dashed];
n676 -> n683  [key=1, color=darkseagreen4, label=specifiedMember, style=dashed];
n676 -> n684  [key=1, color=darkseagreen4, label=specifiedMember, style=dashed];
n676 -> n686  [key=2, style=dotted];
n678 -> n679  [key=0, style=solid];
n678 -> n681  [key=1, color=darkseagreen4, label=specifiedMember, style=dashed];
n678 -> n683  [key=1, color=darkseagreen4, label=specifiedMember, style=dashed];
n678 -> n684  [key=1, color=darkseagreen4, label=specifiedMember, style=dashed];
n678 -> n687  [key=2, style=dotted];
n682 -> n683  [key=0, style=solid];
n682 -> n689  [key=1, color=darkseagreen4, label=object, style=dashed];
n683 -> n684  [key=0, style=solid];
n683 -> n685  [key=0, style=solid];
n683 -> n190  [key=2, style=dotted];
n684 -> n685  [key=0, style=solid];
n684 -> n191  [key=2, style=dotted];
n677 -> n678  [key=0, style=solid];
n677 -> n679  [key=0, style=solid];
n679 -> n680  [key=0, style=solid];
n679 -> n681  [key=0, style=solid];
n679 -> n186  [key=2, style=dotted];
n681 -> n682  [key=0, style=solid];
n681 -> n689  [key=1, color=darkseagreen4, label=specifiedPropertyGet, style=dashed];
n681 -> n189  [key=2, style=dotted];
n680 -> n685  [key=0, style=solid];
n685 -> n675  [key=0, color=blue, style=bold];
n689 -> n690  [key=0, style=solid];
n689 -> n206  [key=2, style=dotted];
n688 -> n689  [key=0, style=solid];
n690 -> n688  [key=0, color=blue, style=bold];
n695 -> n696  [key=0, style=solid];
n695 -> n697  [key=1, color=darkseagreen4, label=string, style=dashed];
n695 -> n698  [key=1, color=darkseagreen4, label=string, style=dashed];
n696 -> n697  [key=0, style=solid];
n696 -> n698  [key=0, style=solid];
n697 -> n699  [key=0, style=solid];
n697 -> n700  [key=2, style=dotted];
n698 -> n699  [key=0, style=solid];
n699 -> n695  [key=0, color=blue, style=bold];
n701 -> n702  [key=0, style=solid];
n701 -> n703  [key=1, color=darkseagreen4, label=string, style=dashed];
n701 -> n704  [key=1, color=darkseagreen4, label=string, style=dashed];
n702 -> n703  [key=0, style=solid];
n702 -> n704  [key=0, style=solid];
n703 -> n705  [key=0, style=solid];
n703 -> n115  [key=2, style=dotted];
n704 -> n664  [key=2, style=dotted];
n704 -> n705  [key=0, style=solid];
n705 -> n701  [key=0, color=blue, style=bold];
n706 -> n707  [key=0, style=solid];
n707 -> n664  [key=2, style=dotted];
n707 -> n708  [key=0, style=solid];
n708 -> n706  [key=0, color=blue, style=bold];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n2 -> n3  [key=0, style=solid];
n2 -> n4  [key=2, style=dotted];
n3 -> n0  [key=0, color=blue, style=bold];
n5 -> n6  [key=0, style=solid];
n5 -> n7  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
n5 -> n8  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
n6 -> n7  [key=0, style=solid];
n6 -> n8  [key=0, style=solid];
n7 -> n9  [key=0, style=solid];
n7 -> n10  [key=2, style=dotted];
n7 -> n11  [key=2, style=dotted];
n8 -> n9  [key=0, style=solid];
n8 -> n12  [key=2, style=dotted];
n9 -> n5  [key=0, color=blue, style=bold];
n197 -> n198  [key=0, style=solid];
n197 -> n203  [key=1, color=darkseagreen4, label=object, style=dashed];
n197 -> n204  [key=1, color=darkseagreen4, label=object, style=dashed];
n198 -> n199  [key=0, style=solid];
n198 -> n204  [key=1, color=darkseagreen4, label=dictionary, style=dashed];
n198 -> n206  [key=2, style=dotted];
n203 -> n204  [key=0, style=solid];
n203 -> n208  [key=2, style=dotted];
n204 -> n205  [key=0, style=solid];
n204 -> n209  [key=2, style=dotted];
n199 -> n200  [key=0, style=solid];
n199 -> n204  [key=0, style=solid];
n200 -> n201  [key=0, style=solid];
n200 -> n202  [key=0, style=solid];
n201 -> n205  [key=0, style=solid];
n201 -> n96  [key=2, style=dotted];
n201 -> n97  [key=2, style=dotted];
n202 -> n203  [key=0, style=solid];
n202 -> n204  [key=1, color=darkseagreen4, label=dictionary, style=dashed];
n202 -> n207  [key=2, style=dotted];
n205 -> n197  [key=0, color=blue, style=bold];
n210 -> n211  [key=0, style=solid];
n211 -> n206  [key=2, style=dotted];
n211 -> n212  [key=0, style=solid];
n211 -> n214  [key=1, color=darkseagreen4, label=dictionary, style=dashed];
n212 -> n213  [key=0, style=solid];
n212 -> n214  [key=0, style=solid];
n214 -> n215  [key=0, style=solid];
n214 -> n216  [key=2, style=dotted];
n213 -> n215  [key=0, style=solid];
n215 -> n210  [key=0, color=blue, style=bold];
n217 -> n218  [key=0, style=solid];
n217 -> n219  [key=1, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>", style=dashed];
n218 -> n219  [key=0, style=solid];
n218 -> n221  [key=2, style=dotted];
n218 -> n11  [key=2, style=dotted];
n219 -> n220  [key=0, style=solid];
n220 -> n217  [key=0, color=blue, style=bold];
n47 -> n48  [key=0, style=solid];
n48 -> n49  [key=0, style=solid];
n48 -> n50  [key=2, style=dotted];
n49 -> n47  [key=0, color=blue, style=bold];
n109 -> n247  [key=0, style=solid];
n109 -> n255  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection", style=dashed];
n247 -> n195  [key=2, style=dotted];
n247 -> n248  [key=0, style=solid];
n255 -> n256  [key=0, style=solid];
n255 -> n262  [key=2, style=dotted];
n248 -> n249  [key=0, style=solid];
n248 -> n250  [key=1, color=darkseagreen4, label=en, style=dashed];
n248 -> n251  [key=1, color=darkseagreen4, label=en, style=dashed];
n248 -> n241  [key=2, style=dotted];
n249 -> n250  [key=0, style=solid];
n249 -> n259  [key=0, style=solid];
n249 -> n242  [key=2, style=dotted];
n250 -> n251  [key=0, style=solid];
n250 -> n252  [key=1, color=darkseagreen4, label=constructor, style=dashed];
n250 -> n258  [key=1, color=darkseagreen4, label=constructor, style=dashed];
n251 -> n252  [key=0, style=solid];
n251 -> n259  [key=0, style=solid];
n251 -> n242  [key=2, style=dotted];
n259 -> n260  [key=0, style=solid];
n252 -> n253  [key=0, style=solid];
n252 -> n254  [key=1, color=darkseagreen4, label=parameters, style=dashed];
n252 -> n261  [key=2, style=dotted];
n258 -> n260  [key=0, style=solid];
n253 -> n254  [key=0, style=solid];
n253 -> n259  [key=0, style=solid];
n254 -> n255  [key=0, style=solid];
n254 -> n258  [key=0, style=solid];
n256 -> n254  [key=0, style=solid];
n256 -> n257  [key=0, style=solid];
n262 -> n281  [key=0, style=solid];
n262 -> n283  [key=1, color=darkseagreen4, label=string, style=dashed];
n262 -> n284  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
n257 -> n260  [key=0, style=solid];
n260 -> n109  [key=0, color=blue, style=bold];
n51 -> n52  [key=0, style=solid];
n52 -> n50  [key=2, style=dotted];
n52 -> n53  [key=0, style=solid];
n53 -> n51  [key=0, color=blue, style=bold];
n54 -> n55  [key=0, style=solid];
n54 -> n56  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
n54 -> n57  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
n55 -> n56  [key=0, style=solid];
n55 -> n57  [key=0, style=solid];
n55 -> n95  [key=2, style=dotted];
n56 -> n94  [key=0, style=solid];
n56 -> n96  [key=2, style=dotted];
n56 -> n97  [key=2, style=dotted];
n57 -> n58  [key=0, style=solid];
n57 -> n61  [key=1, color=darkseagreen4, label=contract, style=dashed];
n57 -> n62  [key=1, color=darkseagreen4, label=contract, style=dashed];
n57 -> n64  [key=1, color=darkseagreen4, label=contract, style=dashed];
n57 -> n66  [key=1, color=darkseagreen4, label=contract, style=dashed];
n57 -> n67  [key=1, color=darkseagreen4, label=contract, style=dashed];
n57 -> n73  [key=1, color=darkseagreen4, label=contract, style=dashed];
n57 -> n74  [key=1, color=darkseagreen4, label=contract, style=dashed];
n57 -> n75  [key=1, color=darkseagreen4, label=contract, style=dashed];
n57 -> n77  [key=1, color=darkseagreen4, label=contract, style=dashed];
n57 -> n78  [key=1, color=darkseagreen4, label=contract, style=dashed];
n57 -> n79  [key=1, color=darkseagreen4, label=contract, style=dashed];
n57 -> n80  [key=1, color=darkseagreen4, label=contract, style=dashed];
n57 -> n81  [key=1, color=darkseagreen4, label=contract, style=dashed];
n57 -> n83  [key=1, color=darkseagreen4, label=contract, style=dashed];
n57 -> n84  [key=1, color=darkseagreen4, label=contract, style=dashed];
n57 -> n85  [key=1, color=darkseagreen4, label=contract, style=dashed];
n57 -> n86  [key=1, color=darkseagreen4, label=contract, style=dashed];
n57 -> n88  [key=1, color=darkseagreen4, label=contract, style=dashed];
n57 -> n89  [key=1, color=darkseagreen4, label=contract, style=dashed];
n57 -> n90  [key=1, color=darkseagreen4, label=contract, style=dashed];
n57 -> n92  [key=1, color=darkseagreen4, label=contract, style=dashed];
n57 -> n93  [key=1, color=darkseagreen4, label=contract, style=dashed];
n57 -> n98  [key=2, style=dotted];
n94 -> n54  [key=0, color=blue, style=bold];
n58 -> n59  [key=0, style=solid];
n58 -> n99  [key=2, style=dotted];
n61 -> n37  [key=2, style=dotted];
n61 -> n62  [key=0, style=solid];
n62 -> n63  [key=0, style=solid];
n62 -> n100  [key=2, style=dotted];
n62 -> n101  [key=2, style=dotted];
n64 -> n65  [key=0, style=solid];
n64 -> n66  [key=1, color=darkseagreen4, label=attribute, style=dashed];
n64 -> n67  [key=1, color=darkseagreen4, label=attribute, style=dashed];
n64 -> n68  [key=1, color=darkseagreen4, label=attribute, style=dashed];
n64 -> n69  [key=1, color=darkseagreen4, label=attribute, style=dashed];
n64 -> n102  [key=2, style=dotted];
n66 -> n67  [key=0, style=solid];
n67 -> n68  [key=0, style=solid];
n73 -> n74  [key=0, style=solid];
n74 -> n75  [key=0, style=solid];
n74 -> n90  [key=0, style=solid];
n75 -> n76  [key=0, style=solid];
n75 -> n77  [key=1, color=darkseagreen4, label=overrideConstructor, style=dashed];
n75 -> n78  [key=1, color=darkseagreen4, label=overrideConstructor, style=dashed];
n75 -> n104  [key=2, style=dotted];
n77 -> n78  [key=0, style=solid];
n77 -> n105  [key=2, style=dotted];
n78 -> n90  [key=0, style=solid];
n78 -> n101  [key=2, style=dotted];
n78 -> n106  [key=2, style=dotted];
n79 -> n80  [key=0, style=solid];
n79 -> n90  [key=0, style=solid];
n80 -> n81  [key=0, style=solid];
n80 -> n85  [key=0, style=solid];
n81 -> n82  [key=0, style=solid];
n81 -> n83  [key=1, color=darkseagreen4, label=constructor, style=dashed];
n81 -> n84  [key=1, color=darkseagreen4, label=constructor, style=dashed];
n81 -> n107  [key=2, style=dotted];
n83 -> n84  [key=0, style=solid];
n83 -> n105  [key=2, style=dotted];
n84 -> n90  [key=0, style=solid];
n84 -> n101  [key=2, style=dotted];
n84 -> n106  [key=2, style=dotted];
n85 -> n86  [key=0, style=solid];
n85 -> n90  [key=0, style=solid];
n85 -> n108  [key=2, style=dotted];
n86 -> n109  [key=2, style=dotted];
n86 -> n87  [key=0, style=solid];
n86 -> n88  [key=1, color=darkseagreen4, label=constructor, style=dashed];
n86 -> n89  [key=1, color=darkseagreen4, label=constructor, style=dashed];
n88 -> n89  [key=0, style=solid];
n88 -> n105  [key=2, style=dotted];
n89 -> n90  [key=0, style=solid];
n89 -> n101  [key=2, style=dotted];
n89 -> n106  [key=2, style=dotted];
n90 -> n91  [key=0, style=solid];
n90 -> n92  [key=1, color=darkseagreen4, label=extensionDataMember, style=dashed];
n90 -> n110  [key=2, style=dotted];
n92 -> n93  [key=0, style=solid];
n92 -> n111  [key=2, style=dotted];
n93 -> n94  [key=0, style=solid];
n59 -> n60  [key=0, style=solid];
n99 -> n319  [key=0, style=solid];
n99 -> n321  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n99 -> n322  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n99 -> n323  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n99 -> n324  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n99 -> n325  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n99 -> n326  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n99 -> n327  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n60 -> n61  [key=0, style=solid];
n63 -> n64  [key=0, style=solid];
n63 -> n71  [key=1, color=darkseagreen4, label=extensionDataNameResolver, style=dashed];
n63 -> n73  [key=1, color=darkseagreen4, label=extensionDataNameResolver, style=dashed];
n100 -> n543  [key=0, style=solid];
n100 -> n547  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
n100 -> n549  [key=1, color=darkseagreen4, label="Newtonsoft.Json.MemberSerialization", style=dashed];
n71 -> n72  [key=0, style=solid];
n71 -> n73  [key=0, style=solid];
n65 -> n66  [key=0, style=solid];
n65 -> n71  [key=0, style=solid];
n68 -> n69  [key=0, style=solid];
n68 -> n71  [key=0, style=solid];
n69 -> n70  [key=0, style=solid];
n69 -> n113  [key=1, color=darkseagreen4, label=namingStrategy, style=dashed];
n69 -> n103  [key=2, style=dotted];
n70 -> n71  [key=0, style=solid];
n70 -> n73  [key=1, color=darkseagreen4, label=extensionDataNameResolver, style=dashed];
n70 -> n113  [key=1, color=darkseagreen4, label=string, style=dashed];
n113 -> n114  [key=0, style=solid];
n113 -> n115  [key=2, style=dotted];
n72 -> n73  [key=0, style=solid];
n76 -> n77  [key=0, style=solid];
n76 -> n79  [key=0, style=solid];
n104 -> n230  [key=0, style=solid];
n104 -> n236  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
n104 -> n237  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
n106 -> n268  [key=0, style=solid];
n106 -> n269  [key=1, color=darkseagreen4, label="System.Reflection.ConstructorInfo", style=dashed];
n106 -> n271  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection", style=dashed];
n82 -> n83  [key=0, style=solid];
n82 -> n90  [key=0, style=solid];
n107 -> n263  [key=0, style=solid];
n87 -> n88  [key=0, style=solid];
n87 -> n90  [key=0, style=solid];
n91 -> n92  [key=0, style=solid];
n91 -> n93  [key=0, style=solid];
n110 -> n116  [key=0, style=solid];
n111 -> n201  [key=1, color=darkseagreen4, label="System.Reflection.MemberInfo", style=dashed];
n111 -> n158  [key=0, style=solid];
n111 -> n161  [key=1, color=darkseagreen4, label="System.Reflection.MemberInfo", style=dashed];
n111 -> n169  [key=1, color=darkseagreen4, label="System.Reflection.MemberInfo", style=dashed];
n111 -> n171  [key=1, color=darkseagreen4, label="System.Reflection.MemberInfo", style=dashed];
n111 -> n175  [key=1, color=darkseagreen4, label="System.Reflection.MemberInfo", style=dashed];
n111 -> n176  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
n111 -> n182  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
n111 -> n183  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
n116 -> n117  [key=0, style=solid];
n116 -> n120  [key=2, style=dotted];
n116 -> n121  [key=2, style=dotted];
n116 -> n123  [key=1, color=darkseagreen4, label="lambda expression", style=dashed];
n117 -> n118  [key=0, style=solid];
n117 -> n122  [key=2, style=dotted];
n117 -> n132  [key=1, color=darkseagreen4, label="lambda expression", style=dashed];
n120 -> n413  [key=0, style=solid];
n120 -> n414  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
n123 -> n124  [key=0, style=solid];
n123 -> n125  [key=1, color=darkseagreen4, label="?", style=dashed];
n123 -> n126  [key=1, color=darkseagreen4, label="?", style=dashed];
n118 -> n119  [key=0, style=solid];
n132 -> n133  [key=0, style=solid];
n132 -> n136  [key=1, color=darkseagreen4, label="?", style=dashed];
n132 -> n138  [key=1, color=darkseagreen4, label="?", style=dashed];
n132 -> n139  [key=1, color=darkseagreen4, label="?", style=dashed];
n132 -> n140  [key=1, color=darkseagreen4, label="?", style=dashed];
n132 -> n146  [key=1, color=darkseagreen4, label="?", style=dashed];
n119 -> n110  [key=0, color=blue, style=bold];
n158 -> n185  [key=2, style=dotted];
n158 -> n159  [key=0, style=solid];
n158 -> n170  [key=1, color=darkseagreen4, label=extensionDataAttribute, style=dashed];
n158 -> n177  [key=1, color=darkseagreen4, label=extensionDataAttribute, style=dashed];
n161 -> n186  [key=2, style=dotted];
n161 -> n162  [key=0, style=solid];
n161 -> n166  [key=1, color=darkseagreen4, label=t, style=dashed];
n161 -> n168  [key=1, color=darkseagreen4, label=t, style=dashed];
n161 -> n173  [key=1, color=darkseagreen4, label=t, style=dashed];
n169 -> n189  [key=2, style=dotted];
n169 -> n198  [key=1, color=darkseagreen4, label=getExtensionDataDictionary, style=dashed];
n169 -> n211  [key=1, color=darkseagreen4, label=getExtensionDataDictionary, style=dashed];
n169 -> n170  [key=0, style=solid];
n169 -> n175  [key=1, color=darkseagreen4, label=getExtensionDataDictionary, style=dashed];
n169 -> n181  [key=1, color=darkseagreen4, label=getExtensionDataDictionary, style=dashed];
n171 -> n190  [key=2, style=dotted];
n171 -> n191  [key=2, style=dotted];
n171 -> n200  [key=1, color=darkseagreen4, label=setExtensionDataDictionary, style=dashed];
n171 -> n203  [key=1, color=darkseagreen4, label=setExtensionDataDictionary, style=dashed];
n171 -> n172  [key=0, style=solid];
n171 -> n175  [key=1, color=darkseagreen4, label=setExtensionDataDictionary, style=dashed];
n175 -> n198  [key=1, color=darkseagreen4, label=object, style=dashed];
n175 -> n203  [key=1, color=darkseagreen4, label=object, style=dashed];
n175 -> n204  [key=1, color=darkseagreen4, label=object, style=dashed];
n175 -> n176  [key=0, style=solid];
n176 -> n177  [key=0, style=solid];
n182 -> n183  [key=0, style=solid];
n183 -> n184  [key=0, style=solid];
n159 -> n160  [key=0, style=solid];
n159 -> n161  [key=0, style=solid];
n170 -> n171  [key=0, style=solid];
n170 -> n177  [key=0, style=solid];
n177 -> n178  [key=0, style=solid];
n177 -> n183  [key=0, style=solid];
n160 -> n184  [key=0, style=solid];
n184 -> n111  [key=0, color=blue, style=bold];
n162 -> n163  [key=0, style=solid];
n162 -> n155  [key=2, style=dotted];
n166 -> n187  [key=2, style=dotted];
n166 -> n167  [key=0, style=solid];
n166 -> n168  [key=0, style=solid];
n168 -> n169  [key=0, style=solid];
n168 -> n172  [key=1, color=darkseagreen4, label=createdType, style=dashed];
n173 -> n193  [key=2, style=dotted];
n173 -> n174  [key=0, style=solid];
n163 -> n164  [key=0, style=solid];
n163 -> n167  [key=1, color=darkseagreen4, label=keyType, style=dashed];
n163 -> n173  [key=1, color=darkseagreen4, label=keyType, style=dashed];
n163 -> n178  [key=1, color=darkseagreen4, label=keyType, style=dashed];
n163 -> n156  [key=2, style=dotted];
n164 -> n165  [key=0, style=solid];
n164 -> n167  [key=1, color=darkseagreen4, label=valueType, style=dashed];
n164 -> n173  [key=1, color=darkseagreen4, label=valueType, style=dashed];
n164 -> n178  [key=1, color=darkseagreen4, label=valueType, style=dashed];
n164 -> n183  [key=1, color=darkseagreen4, label=valueType, style=dashed];
n164 -> n156  [key=2, style=dotted];
n167 -> n188  [key=2, style=dotted];
n167 -> n169  [key=0, style=solid];
n167 -> n172  [key=1, color=darkseagreen4, label=createdType, style=dashed];
n178 -> n188  [key=2, style=dotted];
n178 -> n179  [key=0, style=solid];
n165 -> n166  [key=0, style=solid];
n172 -> n192  [key=2, style=dotted];
n172 -> n202  [key=1, color=darkseagreen4, label=createExtensionDataDictionary, style=dashed];
n172 -> n173  [key=0, style=solid];
n172 -> n175  [key=1, color=darkseagreen4, label=createExtensionDataDictionary, style=dashed];
n181 -> n211  [key=1, color=darkseagreen4, label=object, style=dashed];
n181 -> n182  [key=0, style=solid];
n174 -> n194  [key=2, style=dotted];
n174 -> n204  [key=1, color=darkseagreen4, label=setExtensionDataDictionaryValue, style=dashed];
n174 -> n175  [key=0, style=solid];
n179 -> n195  [key=2, style=dotted];
n179 -> n196  [key=2, style=dotted];
n179 -> n180  [key=0, style=solid];
n180 -> n214  [key=1, color=darkseagreen4, label=createEnumerableWrapper, style=dashed];
n180 -> n181  [key=0, style=solid];
n180 -> n105  [key=2, style=dotted];
n112 -> n113  [key=0, style=solid];
n114 -> n112  [key=0, color=blue, style=bold];
n413 -> n414  [key=0, style=solid];
n413 -> n416  [key=1, color=darkseagreen4, label=ret, style=dashed];
n413 -> n418  [key=1, color=darkseagreen4, label=ret, style=dashed];
n413 -> n419  [key=1, color=darkseagreen4, label=ret, style=dashed];
n413 -> n40  [key=2, style=dotted];
n414 -> n415  [key=0, style=solid];
n414 -> n416  [key=1, color=darkseagreen4, label=current, style=dashed];
n414 -> n417  [key=1, color=darkseagreen4, label=current, style=dashed];
n416 -> n44  [key=2, style=dotted];
n416 -> n417  [key=0, style=solid];
n418 -> n419  [key=0, style=solid];
n418 -> n422  [key=2, style=dotted];
n419 -> n420  [key=0, style=solid];
n415 -> n416  [key=0, style=solid];
n415 -> n418  [key=0, style=solid];
n417 -> n415  [key=0, style=solid];
n417 -> n417  [key=1, color=darkseagreen4, label=current, style=dashed];
n417 -> n421  [key=2, style=dotted];
n420 -> n120  [key=0, color=blue, style=bold];
n124 -> n125  [key=0, style=solid];
n124 -> n126  [key=1, color=darkseagreen4, label=m, style=dashed];
n124 -> n127  [key=1, color=darkseagreen4, label=m, style=dashed];
n124 -> n40  [key=2, style=dotted];
n125 -> n126  [key=0, style=solid];
n125 -> n129  [key=2, style=dotted];
n125 -> n130  [key=2, style=dotted];
n126 -> n127  [key=0, style=solid];
n126 -> n130  [key=2, style=dotted];
n126 -> n131  [key=2, style=dotted];
n127 -> n128  [key=0, style=solid];
n128 -> n123  [key=0, color=blue, style=bold];
n133 -> n134  [key=0, style=solid];
n133 -> n148  [key=2, style=dotted];
n136 -> n137  [key=0, style=solid];
n136 -> n138  [key=0, style=solid];
n136 -> n149  [key=2, style=dotted];
n138 -> n139  [key=0, style=solid];
n138 -> n140  [key=0, style=solid];
n138 -> n150  [key=2, style=dotted];
n139 -> n147  [key=0, style=solid];
n139 -> n151  [key=2, style=dotted];
n139 -> n152  [key=2, style=dotted];
n139 -> n153  [key=2, style=dotted];
n140 -> n141  [key=0, style=solid];
n140 -> n154  [key=2, style=dotted];
n146 -> n147  [key=0, style=solid];
n146 -> n151  [key=2, style=dotted];
n146 -> n152  [key=2, style=dotted];
n146 -> n153  [key=2, style=dotted];
n134 -> n135  [key=0, style=solid];
n134 -> n136  [key=0, style=solid];
n135 -> n147  [key=0, style=solid];
n147 -> n132  [key=0, color=blue, style=bold];
n137 -> n147  [key=0, style=solid];
n141 -> n142  [key=0, style=solid];
n141 -> n146  [key=0, style=solid];
n141 -> n155  [key=2, style=dotted];
n142 -> n143  [key=0, style=solid];
n142 -> n144  [key=1, color=darkseagreen4, label=keyType, style=dashed];
n142 -> n156  [key=2, style=dotted];
n143 -> n144  [key=0, style=solid];
n143 -> n156  [key=2, style=dotted];
n144 -> n145  [key=0, style=solid];
n144 -> n146  [key=0, style=solid];
n144 -> n157  [key=2, style=dotted];
n145 -> n147  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n13 -> n16  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
n13 -> n17  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
n13 -> n20  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
n14 -> n15  [key=0, style=solid];
n16 -> n37  [key=2, style=dotted];
n16 -> n17  [key=0, style=solid];
n16 -> n19  [key=1, color=darkseagreen4, label=memberSerialization, style=dashed];
n16 -> n29  [key=1, color=darkseagreen4, label=memberSerialization, style=dashed];
n17 -> n47  [key=1, color=darkseagreen4, label="lambda expression", style=dashed];
n17 -> n38  [key=2, style=dotted];
n17 -> n18  [key=0, style=solid];
n17 -> n21  [key=1, color=darkseagreen4, label=allMembers, style=dashed];
n17 -> n31  [key=1, color=darkseagreen4, label=allMembers, style=dashed];
n17 -> n39  [key=2, style=dotted];
n20 -> n41  [key=2, style=dotted];
n20 -> n38  [key=2, style=dotted];
n20 -> n51  [key=1, color=darkseagreen4, label="lambda expression", style=dashed];
n20 -> n21  [key=0, style=solid];
n20 -> n23  [key=1, color=darkseagreen4, label=defaultMembers, style=dashed];
n20 -> n39  [key=2, style=dotted];
n15 -> n16  [key=0, style=solid];
n19 -> n20  [key=0, style=solid];
n19 -> n31  [key=0, style=solid];
n29 -> n46  [key=2, style=dotted];
n29 -> n21  [key=0, style=solid];
n29 -> n30  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n18 -> n24  [key=1, color=darkseagreen4, label=serializableMembers, style=dashed];
n18 -> n26  [key=1, color=darkseagreen4, label=serializableMembers, style=dashed];
n18 -> n28  [key=1, color=darkseagreen4, label=serializableMembers, style=dashed];
n18 -> n30  [key=1, color=darkseagreen4, label=serializableMembers, style=dashed];
n18 -> n34  [key=1, color=darkseagreen4, label=serializableMembers, style=dashed];
n18 -> n35  [key=1, color=darkseagreen4, label=serializableMembers, style=dashed];
n18 -> n40  [key=2, style=dotted];
n21 -> n22  [key=0, style=solid];
n21 -> n23  [key=1, color=darkseagreen4, label=member, style=dashed];
n21 -> n24  [key=1, color=darkseagreen4, label=member, style=dashed];
n21 -> n25  [key=1, color=darkseagreen4, label=member, style=dashed];
n21 -> n26  [key=1, color=darkseagreen4, label=member, style=dashed];
n21 -> n27  [key=1, color=darkseagreen4, label=member, style=dashed];
n21 -> n28  [key=1, color=darkseagreen4, label=member, style=dashed];
n21 -> n29  [key=1, color=darkseagreen4, label=member, style=dashed];
n21 -> n30  [key=1, color=darkseagreen4, label=member, style=dashed];
n21 -> n35  [key=0, style=solid];
n31 -> n32  [key=0, style=solid];
n31 -> n34  [key=1, color=darkseagreen4, label=member, style=dashed];
n31 -> n35  [key=0, style=solid];
n24 -> n44  [key=2, style=dotted];
n24 -> n21  [key=0, style=solid];
n26 -> n44  [key=2, style=dotted];
n26 -> n21  [key=0, style=solid];
n28 -> n44  [key=2, style=dotted];
n28 -> n21  [key=0, style=solid];
n30 -> n44  [key=2, style=dotted];
n30 -> n21  [key=0, style=solid];
n34 -> n44  [key=2, style=dotted];
n34 -> n31  [key=0, style=solid];
n35 -> n36  [key=0, style=solid];
n23 -> n43  [key=2, style=dotted];
n23 -> n24  [key=0, style=solid];
n23 -> n25  [key=0, style=solid];
n22 -> n42  [key=2, style=dotted];
n22 -> n21  [key=0, style=solid];
n22 -> n23  [key=0, style=solid];
n25 -> n45  [key=2, style=dotted];
n25 -> n26  [key=0, style=solid];
n25 -> n27  [key=0, style=solid];
n27 -> n45  [key=2, style=dotted];
n27 -> n28  [key=0, style=solid];
n27 -> n29  [key=0, style=solid];
n32 -> n33  [key=0, style=solid];
n32 -> n34  [key=0, style=solid];
n33 -> n34  [key=0, style=solid];
n36 -> n13  [key=0, color=blue, style=bold];
n319 -> n320  [key=0, style=solid];
n319 -> n321  [key=1, color=darkseagreen4, label=containerAttribute, style=dashed];
n319 -> n102  [key=2, style=dotted];
n321 -> n322  [key=0, style=solid];
n322 -> n323  [key=0, style=solid];
n322 -> n312  [key=2, style=dotted];
n323 -> n324  [key=0, style=solid];
n323 -> n329  [key=2, style=dotted];
n324 -> n325  [key=0, style=solid];
n324 -> n327  [key=0, style=solid];
n324 -> n108  [key=2, style=dotted];
n324 -> n330  [key=2, style=dotted];
n325 -> n326  [key=0, style=solid];
n325 -> n316  [key=2, style=dotted];
n326 -> n327  [key=0, style=solid];
n326 -> n108  [key=2, style=dotted];
n326 -> n331  [key=2, style=dotted];
n327 -> n328  [key=0, style=solid];
n327 -> n332  [key=2, style=dotted];
n320 -> n321  [key=0, style=solid];
n320 -> n322  [key=0, style=solid];
n312 -> n313  [key=0, style=solid];
n316 -> n317  [key=0, style=solid];
n328 -> n99  [key=0, color=blue, style=bold];
n332 -> n333  [key=0, style=solid];
n332 -> n335  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n332 -> n337  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n332 -> n339  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n332 -> n341  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n332 -> n343  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
n543 -> n13  [key=2, style=dotted];
n543 -> n544  [key=0, style=solid];
n543 -> n548  [key=1, color=darkseagreen4, label=members, style=dashed];
n547 -> n548  [key=0, style=solid];
n547 -> n553  [key=1, color=darkseagreen4, label=properties, style=dashed];
n547 -> n554  [key=1, color=darkseagreen4, label=properties, style=dashed];
n547 -> n278  [key=2, style=dotted];
n549 -> n550  [key=0, style=solid];
n549 -> n552  [key=1, color=darkseagreen4, label=property, style=dashed];
n549 -> n553  [key=1, color=darkseagreen4, label=property, style=dashed];
n549 -> n558  [key=2, style=dotted];
n544 -> n545  [key=0, style=solid];
n544 -> n546  [key=0, style=solid];
n548 -> n549  [key=0, style=solid];
n548 -> n554  [key=0, style=solid];
n545 -> n96  [key=2, style=dotted];
n545 -> n556  [key=0, style=solid];
n546 -> n547  [key=0, style=solid];
n546 -> n551  [key=1, color=darkseagreen4, label=nameTable, style=dashed];
n546 -> n552  [key=1, color=darkseagreen4, label=nameTable, style=dashed];
n546 -> n557  [key=2, style=dotted];
n556 -> n100  [key=0, color=blue, style=bold];
n551 -> n552  [key=0, style=solid];
n552 -> n553  [key=0, style=solid];
n552 -> n559  [key=2, style=dotted];
n557 -> n565  [key=0, style=solid];
n553 -> n548  [key=0, style=solid];
n553 -> n280  [key=2, style=dotted];
n554 -> n555  [key=0, style=solid];
n554 -> n560  [key=2, style=dotted];
n554 -> n561  [key=2, style=dotted];
n554 -> n562  [key=1, color=darkseagreen4, label="lambda expression", style=dashed];
n550 -> n548  [key=0, style=solid];
n550 -> n551  [key=0, style=solid];
n558 -> n576  [key=0, style=solid];
n558 -> n577  [key=1, color=darkseagreen4, label="System.Reflection.MemberInfo", style=dashed];
n558 -> n578  [key=1, color=darkseagreen4, label="System.Reflection.MemberInfo", style=dashed];
n558 -> n579  [key=1, color=darkseagreen4, label="System.Reflection.MemberInfo", style=dashed];
n558 -> n580  [key=1, color=darkseagreen4, label="System.Reflection.MemberInfo", style=dashed];
n558 -> n581  [key=1, color=darkseagreen4, label="Newtonsoft.Json.MemberSerialization", style=dashed];
n558 -> n582  [key=1, color=darkseagreen4, label="Newtonsoft.Json.MemberSerialization", style=dashed];
n558 -> n583  [key=1, color=darkseagreen4, label="System.Reflection.MemberInfo", style=dashed];
n558 -> n584  [key=1, color=darkseagreen4, label="System.Reflection.MemberInfo", style=dashed];
n558 -> n588  [key=1, color=darkseagreen4, label="System.Reflection.MemberInfo", style=dashed];
n558 -> n590  [key=1, color=darkseagreen4, label="System.Reflection.MemberInfo", style=dashed];
n555 -> n556  [key=0, style=solid];
n562 -> n563  [key=0, style=solid];
n230 -> n231  [key=0, style=solid];
n230 -> n232  [key=1, color=darkseagreen4, label=en, style=dashed];
n230 -> n233  [key=1, color=darkseagreen4, label=en, style=dashed];
n230 -> n39  [key=2, style=dotted];
n230 -> n240  [key=2, style=dotted];
n230 -> n241  [key=2, style=dotted];
n230 -> n244  [key=1, color=darkseagreen4, label="lambda expression", style=dashed];
n236 -> n237  [key=0, style=solid];
n236 -> n238  [key=0, style=solid];
n237 -> n239  [key=0, style=solid];
n237 -> n243  [key=2, style=dotted];
n231 -> n232  [key=0, style=solid];
n231 -> n236  [key=0, style=solid];
n231 -> n242  [key=2, style=dotted];
n232 -> n233  [key=0, style=solid];
n232 -> n235  [key=1, color=darkseagreen4, label=conInfo, style=dashed];
n233 -> n234  [key=0, style=solid];
n233 -> n235  [key=0, style=solid];
n233 -> n242  [key=2, style=dotted];
n244 -> n245  [key=0, style=solid];
n235 -> n239  [key=0, style=solid];
n234 -> n151  [key=2, style=dotted];
n234 -> n239  [key=0, style=solid];
n239 -> n104  [key=0, color=blue, style=bold];
n238 -> n239  [key=0, style=solid];
n268 -> n269  [key=0, style=solid];
n268 -> n270  [key=1, color=darkseagreen4, label=constructorParameters, style=dashed];
n268 -> n261  [key=2, style=dotted];
n269 -> n270  [key=0, style=solid];
n269 -> n275  [key=1, color=darkseagreen4, label=parameterCollection, style=dashed];
n269 -> n276  [key=1, color=darkseagreen4, label=parameterCollection, style=dashed];
n269 -> n278  [key=2, style=dotted];
n271 -> n272  [key=0, style=solid];
n271 -> n273  [key=1, color=darkseagreen4, label=matchingMemberProperty, style=dashed];
n271 -> n262  [key=2, style=dotted];
n270 -> n271  [key=0, style=solid];
n270 -> n272  [key=1, color=darkseagreen4, label=parameterInfo, style=dashed];
n270 -> n273  [key=1, color=darkseagreen4, label=parameterInfo, style=dashed];
n270 -> n276  [key=0, style=solid];
n275 -> n270  [key=0, style=solid];
n275 -> n280  [key=2, style=dotted];
n276 -> n277  [key=0, style=solid];
n272 -> n270  [key=0, style=solid];
n272 -> n273  [key=0, style=solid];
n273 -> n274  [key=0, style=solid];
n273 -> n275  [key=1, color=darkseagreen4, label=property, style=dashed];
n273 -> n279  [key=2, style=dotted];
n274 -> n270  [key=0, style=solid];
n274 -> n275  [key=0, style=solid];
n279 -> n289  [key=0, style=solid];
n279 -> n290  [key=1, color=darkseagreen4, label="System.Reflection.ParameterInfo", style=dashed];
n279 -> n291  [key=1, color=darkseagreen4, label="System.Reflection.ParameterInfo", style=dashed];
n279 -> n292  [key=1, color=darkseagreen4, label="System.Reflection.ParameterInfo", style=dashed];
n279 -> n295  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n279 -> n296  [key=1, color=darkseagreen4, label="System.Reflection.ParameterInfo", style=dashed];
n279 -> n297  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n279 -> n298  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n279 -> n299  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n279 -> n300  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n279 -> n301  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n279 -> n302  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n279 -> n303  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n279 -> n304  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n279 -> n305  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n279 -> n306  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n277 -> n106  [key=0, color=blue, style=bold];
n263 -> n264  [key=0, style=solid];
n263 -> n265  [key=1, color=darkseagreen4, label=constructors, style=dashed];
n263 -> n240  [key=2, style=dotted];
n264 -> n265  [key=0, style=solid];
n264 -> n266  [key=0, style=solid];
n265 -> n267  [key=0, style=solid];
n266 -> n267  [key=0, style=solid];
n267 -> n107  [key=0, color=blue, style=bold];
n222 -> n223  [key=0, style=solid];
n222 -> n224  [key=0, color=crimson, style=bold];
n223 -> n224  [key=0, style=solid];
n223 -> n225  [key=0, style=solid];
n224 -> n223  [key=0, style=solid];
n224 -> n224  [key=1, color=darkseagreen4, label=item, style=dashed];
n224 -> n226  [key=2, style=dotted];
n225 -> n222  [key=0, color=blue, style=bold];
n227 -> n228  [key=0, style=solid];
n228 -> n222  [key=2, style=dotted];
n228 -> n229  [key=0, style=solid];
n229 -> n227  [key=0, color=blue, style=bold];
n245 -> n149  [key=2, style=dotted];
n245 -> n246  [key=0, style=solid];
n246 -> n244  [key=0, color=blue, style=bold];
n281 -> n282  [key=0, style=solid];
n281 -> n283  [key=0, style=solid];
n283 -> n284  [key=0, style=solid];
n283 -> n286  [key=1, color=darkseagreen4, label=property, style=dashed];
n283 -> n288  [key=2, style=dotted];
n284 -> n285  [key=0, style=solid];
n284 -> n286  [key=0, style=solid];
n282 -> n287  [key=0, style=solid];
n287 -> n262  [key=0, color=blue, style=bold];
n286 -> n287  [key=0, style=solid];
n285 -> n287  [key=0, style=solid];
n289 -> n290  [key=0, style=solid];
n289 -> n291  [key=1, color=darkseagreen4, label=property, style=dashed];
n289 -> n292  [key=1, color=darkseagreen4, label=property, style=dashed];
n289 -> n293  [key=1, color=darkseagreen4, label=property, style=dashed];
n289 -> n294  [key=1, color=darkseagreen4, label=property, style=dashed];
n289 -> n296  [key=1, color=darkseagreen4, label=property, style=dashed];
n289 -> n297  [key=1, color=darkseagreen4, label=property, style=dashed];
n289 -> n298  [key=1, color=darkseagreen4, label=property, style=dashed];
n289 -> n299  [key=1, color=darkseagreen4, label=property, style=dashed];
n289 -> n300  [key=1, color=darkseagreen4, label=property, style=dashed];
n289 -> n301  [key=1, color=darkseagreen4, label=property, style=dashed];
n289 -> n302  [key=1, color=darkseagreen4, label=property, style=dashed];
n289 -> n303  [key=1, color=darkseagreen4, label=property, style=dashed];
n289 -> n304  [key=1, color=darkseagreen4, label=property, style=dashed];
n289 -> n305  [key=1, color=darkseagreen4, label=property, style=dashed];
n289 -> n306  [key=1, color=darkseagreen4, label=property, style=dashed];
n289 -> n307  [key=1, color=darkseagreen4, label=property, style=dashed];
n289 -> n309  [key=2, style=dotted];
n290 -> n291  [key=0, style=solid];
n291 -> n292  [key=0, style=solid];
n291 -> n310  [key=2, style=dotted];
n292 -> n293  [key=0, style=solid];
n292 -> n311  [key=2, style=dotted];
n295 -> n296  [key=0, style=solid];
n295 -> n307  [key=0, style=solid];
n296 -> n297  [key=0, style=solid];
n297 -> n298  [key=0, style=solid];
n298 -> n299  [key=0, style=solid];
n298 -> n300  [key=0, style=solid];
n299 -> n300  [key=0, style=solid];
n300 -> n301  [key=0, style=solid];
n301 -> n302  [key=0, style=solid];
n302 -> n303  [key=0, style=solid];
n303 -> n304  [key=0, style=solid];
n304 -> n305  [key=0, style=solid];
n305 -> n306  [key=0, style=solid];
n306 -> n307  [key=0, style=solid];
n293 -> n294  [key=0, style=solid];
n294 -> n295  [key=0, style=solid];
n307 -> n308  [key=0, style=solid];
n308 -> n279  [key=0, color=blue, style=bold];
n313 -> n314  [key=0, style=solid];
n313 -> n315  [key=2, style=dotted];
n314 -> n312  [key=0, color=blue, style=bold];
n317 -> n192  [key=2, style=dotted];
n317 -> n318  [key=0, style=solid];
n318 -> n316  [key=0, color=blue, style=bold];
n333 -> n334  [key=0, style=solid];
n333 -> n345  [key=2, style=dotted];
n335 -> n130  [key=2, style=dotted];
n335 -> n336  [key=0, style=solid];
n337 -> n130  [key=2, style=dotted];
n337 -> n338  [key=0, style=solid];
n339 -> n130  [key=2, style=dotted];
n339 -> n340  [key=0, style=solid];
n341 -> n130  [key=2, style=dotted];
n341 -> n342  [key=0, style=solid];
n343 -> n130  [key=2, style=dotted];
n343 -> n344  [key=0, style=solid];
n334 -> n335  [key=0, style=solid];
n334 -> n336  [key=0, style=solid];
n336 -> n337  [key=0, style=solid];
n336 -> n338  [key=0, style=solid];
n338 -> n339  [key=0, style=solid];
n338 -> n340  [key=0, style=solid];
n340 -> n341  [key=0, style=solid];
n340 -> n342  [key=0, style=solid];
n342 -> n343  [key=0, style=solid];
n342 -> n344  [key=0, style=solid];
n344 -> n332  [key=0, color=blue, style=bold];
n346 -> n347  [key=0, style=solid];
n346 -> n352  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
n347 -> n348  [key=0, style=solid];
n347 -> n365  [key=1, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
n347 -> n384  [key=1, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
n352 -> n120  [key=2, style=dotted];
n352 -> n353  [key=0, style=solid];
n352 -> n358  [key=1, color=darkseagreen4, label=baseType, style=dashed];
n352 -> n359  [key=1, color=darkseagreen4, label=baseType, style=dashed];
n352 -> n360  [key=1, color=darkseagreen4, label=baseType, style=dashed];
n352 -> n384  [key=0, style=solid];
n348 -> n349  [key=0, style=solid];
n348 -> n369  [key=1, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
n348 -> n384  [key=1, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
n365 -> n40  [key=2, style=dotted];
n365 -> n365  [key=1, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
n365 -> n366  [key=0, style=solid];
n365 -> n384  [key=1, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
n384 -> n346  [key=0, color=blue, style=bold];
n349 -> n350  [key=0, style=solid];
n349 -> n373  [key=1, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
n349 -> n384  [key=1, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
n369 -> n40  [key=2, style=dotted];
n369 -> n369  [key=1, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
n369 -> n370  [key=0, style=solid];
n369 -> n384  [key=1, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
n350 -> n351  [key=0, style=solid];
n350 -> n377  [key=1, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
n350 -> n384  [key=1, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
n373 -> n40  [key=2, style=dotted];
n373 -> n373  [key=1, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
n373 -> n374  [key=0, style=solid];
n373 -> n384  [key=1, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
n351 -> n352  [key=0, style=solid];
n351 -> n381  [key=1, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>", style=dashed];
n351 -> n384  [key=1, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>", style=dashed];
n377 -> n40  [key=2, style=dotted];
n377 -> n377  [key=1, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
n377 -> n378  [key=0, style=solid];
n377 -> n384  [key=1, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
n381 -> n40  [key=2, style=dotted];
n381 -> n381  [key=1, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>", style=dashed];
n381 -> n382  [key=0, style=solid];
n381 -> n384  [key=1, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>", style=dashed];
n353 -> n354  [key=0, style=solid];
n353 -> n364  [key=1, color=darkseagreen4, label=currentOnSerializing, style=dashed];
n358 -> n359  [key=0, style=solid];
n358 -> n364  [key=1, color=darkseagreen4, label=skipSerializing, style=dashed];
n358 -> n385  [key=2, style=dotted];
n359 -> n360  [key=0, style=solid];
n359 -> n376  [key=1, color=darkseagreen4, label=skipDeserialized, style=dashed];
n359 -> n386  [key=2, style=dotted];
n360 -> n352  [key=0, style=solid];
n360 -> n361  [key=0, style=solid];
n360 -> n363  [key=1, color=darkseagreen4, label=method, style=dashed];
n360 -> n364  [key=1, color=darkseagreen4, label=method, style=dashed];
n360 -> n366  [key=1, color=darkseagreen4, label=method, style=dashed];
n360 -> n367  [key=1, color=darkseagreen4, label=method, style=dashed];
n360 -> n368  [key=1, color=darkseagreen4, label=method, style=dashed];
n360 -> n370  [key=1, color=darkseagreen4, label=method, style=dashed];
n360 -> n371  [key=1, color=darkseagreen4, label=method, style=dashed];
n360 -> n372  [key=1, color=darkseagreen4, label=method, style=dashed];
n360 -> n374  [key=1, color=darkseagreen4, label=method, style=dashed];
n360 -> n375  [key=1, color=darkseagreen4, label=method, style=dashed];
n360 -> n376  [key=1, color=darkseagreen4, label=method, style=dashed];
n360 -> n378  [key=1, color=darkseagreen4, label=method, style=dashed];
n360 -> n379  [key=1, color=darkseagreen4, label=method, style=dashed];
n360 -> n380  [key=1, color=darkseagreen4, label=method, style=dashed];
n360 -> n382  [key=1, color=darkseagreen4, label=method, style=dashed];
n360 -> n383  [key=1, color=darkseagreen4, label=method, style=dashed];
n360 -> n387  [key=2, style=dotted];
n354 -> n355  [key=0, style=solid];
n354 -> n368  [key=1, color=darkseagreen4, label=currentOnSerialized, style=dashed];
n364 -> n364  [key=1, color=darkseagreen4, label=prevAttributeType, style=dashed];
n364 -> n365  [key=0, style=solid];
n364 -> n368  [key=0, style=solid];
n364 -> n388  [key=2, style=dotted];
n355 -> n356  [key=0, style=solid];
n355 -> n372  [key=1, color=darkseagreen4, label=currentOnDeserializing, style=dashed];
n368 -> n368  [key=1, color=darkseagreen4, label=prevAttributeType, style=dashed];
n368 -> n369  [key=0, style=solid];
n368 -> n372  [key=0, style=solid];
n368 -> n388  [key=2, style=dotted];
n356 -> n357  [key=0, style=solid];
n356 -> n376  [key=1, color=darkseagreen4, label=currentOnDeserialized, style=dashed];
n372 -> n372  [key=1, color=darkseagreen4, label=prevAttributeType, style=dashed];
n372 -> n373  [key=0, style=solid];
n372 -> n376  [key=0, style=solid];
n372 -> n388  [key=2, style=dotted];
n357 -> n358  [key=0, style=solid];
n357 -> n380  [key=1, color=darkseagreen4, label=currentOnError, style=dashed];
n376 -> n376  [key=1, color=darkseagreen4, label=prevAttributeType, style=dashed];
n376 -> n377  [key=0, style=solid];
n376 -> n380  [key=0, style=solid];
n376 -> n388  [key=2, style=dotted];
n380 -> n360  [key=0, style=solid];
n380 -> n380  [key=1, color=darkseagreen4, label=prevAttributeType, style=dashed];
n380 -> n381  [key=0, style=solid];
n380 -> n388  [key=2, style=dotted];
n385 -> n409  [key=0, style=solid];
n386 -> n405  [key=0, style=solid];
n361 -> n360  [key=0, style=solid];
n361 -> n362  [key=0, style=solid];
n363 -> n261  [key=2, style=dotted];
n363 -> n364  [key=0, style=solid];
n363 -> n368  [key=1, color=darkseagreen4, label=parameters, style=dashed];
n363 -> n372  [key=1, color=darkseagreen4, label=parameters, style=dashed];
n363 -> n376  [key=1, color=darkseagreen4, label=parameters, style=dashed];
n363 -> n380  [key=1, color=darkseagreen4, label=parameters, style=dashed];
n366 -> n44  [key=2, style=dotted];
n366 -> n367  [key=0, style=solid];
n366 -> n389  [key=2, style=dotted];
n367 -> n368  [key=0, style=solid];
n370 -> n44  [key=2, style=dotted];
n370 -> n371  [key=0, style=solid];
n370 -> n389  [key=2, style=dotted];
n371 -> n372  [key=0, style=solid];
n374 -> n44  [key=2, style=dotted];
n374 -> n375  [key=0, style=solid];
n374 -> n389  [key=2, style=dotted];
n375 -> n376  [key=0, style=solid];
n378 -> n44  [key=2, style=dotted];
n378 -> n379  [key=0, style=solid];
n378 -> n389  [key=2, style=dotted];
n379 -> n380  [key=0, style=solid];
n382 -> n44  [key=2, style=dotted];
n382 -> n383  [key=0, style=solid];
n382 -> n390  [key=2, style=dotted];
n383 -> n360  [key=0, style=solid];
n362 -> n363  [key=0, style=solid];
n362 -> n364  [key=1, color=darkseagreen4, label=prevAttributeType, style=dashed];
n388 -> n516  [key=0, style=solid];
n388 -> n518  [key=1, color=darkseagreen4, label="System.Reflection.MethodInfo", style=dashed];
n388 -> n519  [key=1, color=darkseagreen4, label="System.Reflection.MethodInfo", style=dashed];
n388 -> n520  [key=1, color=darkseagreen4, label="ref System.Type", style=dashed];
n388 -> n521  [key=1, color=darkseagreen4, label="ref System.Type", style=dashed];
n388 -> n522  [key=1, color=darkseagreen4, label="System.Reflection.MethodInfo", style=dashed];
n388 -> n523  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
n388 -> n524  [key=1, color=darkseagreen4, label="System.Reflection.MethodInfo", style=dashed];
n388 -> n525  [key=1, color=darkseagreen4, label="System.Reflection.MethodInfo", style=dashed];
n388 -> n526  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
n388 -> n527  [key=1, color=darkseagreen4, label="System.Reflection.ParameterInfo[]", style=dashed];
n388 -> n528  [key=1, color=darkseagreen4, label="System.Reflection.MethodInfo", style=dashed];
n388 -> n529  [key=1, color=darkseagreen4, label="System.Reflection.ParameterInfo[]", style=dashed];
n388 -> n530  [key=1, color=darkseagreen4, label="System.Reflection.MethodInfo", style=dashed];
n388 -> n531  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
n409 -> n410  [key=0, style=solid];
n409 -> n411  [key=0, style=solid];
n409 -> n391  [key=2, style=dotted];
n410 -> n412  [key=0, style=solid];
n411 -> n412  [key=0, style=solid];
n391 -> n392  [key=0, style=solid];
n391 -> n393  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
n412 -> n385  [key=0, color=blue, style=bold];
n405 -> n406  [key=0, style=solid];
n405 -> n407  [key=0, style=solid];
n405 -> n391  [key=2, style=dotted];
n406 -> n408  [key=0, style=solid];
n407 -> n408  [key=0, style=solid];
n408 -> n386  [key=0, color=blue, style=bold];
n516 -> n42  [key=2, style=dotted];
n516 -> n517  [key=0, style=solid];
n516 -> n518  [key=0, style=solid];
n518 -> n519  [key=0, style=solid];
n518 -> n520  [key=0, style=solid];
n519 -> n151  [key=2, style=dotted];
n519 -> n533  [key=0, style=solid];
n519 -> n534  [key=2, style=dotted];
n519 -> n535  [key=2, style=dotted];
n520 -> n521  [key=0, style=solid];
n520 -> n522  [key=0, style=solid];
n521 -> n151  [key=2, style=dotted];
n521 -> n533  [key=0, style=solid];
n521 -> n534  [key=2, style=dotted];
n521 -> n535  [key=2, style=dotted];
n522 -> n523  [key=0, style=solid];
n522 -> n524  [key=0, style=solid];
n523 -> n151  [key=2, style=dotted];
n523 -> n533  [key=0, style=solid];
n523 -> n534  [key=2, style=dotted];
n523 -> n536  [key=2, style=dotted];
n524 -> n525  [key=0, style=solid];
n524 -> n526  [key=0, style=solid];
n525 -> n151  [key=2, style=dotted];
n525 -> n533  [key=0, style=solid];
n525 -> n444  [key=2, style=dotted];
n525 -> n534  [key=2, style=dotted];
n526 -> n527  [key=0, style=solid];
n526 -> n529  [key=0, style=solid];
n527 -> n528  [key=0, style=solid];
n527 -> n531  [key=0, style=solid];
n528 -> n151  [key=2, style=dotted];
n528 -> n533  [key=0, style=solid];
n528 -> n534  [key=2, style=dotted];
n528 -> n535  [key=2, style=dotted];
n529 -> n530  [key=0, style=solid];
n529 -> n531  [key=0, style=solid];
n530 -> n151  [key=2, style=dotted];
n530 -> n533  [key=0, style=solid];
n530 -> n534  [key=2, style=dotted];
n530 -> n536  [key=2, style=dotted];
n531 -> n532  [key=0, style=solid];
n531 -> n533  [key=1, color=darkseagreen4, label="ref System.Type", style=dashed];
n517 -> n533  [key=0, style=solid];
n533 -> n388  [key=0, color=blue, style=bold];
n534 -> n537  [key=0, style=solid];
n534 -> n538  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
n534 -> n539  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
n532 -> n533  [key=0, style=solid];
n392 -> n393  [key=0, style=solid];
n392 -> n401  [key=0, style=solid];
n392 -> n403  [key=2, style=dotted];
n393 -> n394  [key=0, style=solid];
n393 -> n404  [key=2, style=dotted];
n401 -> n402  [key=0, style=solid];
n394 -> n395  [key=0, style=solid];
n395 -> n396  [key=0, style=solid];
n396 -> n397  [key=0, style=solid];
n397 -> n398  [key=0, color=red, style=solid];
n397 -> d398  [key=0, color=green, style=solid];
n398 -> n399  [key=0, color=red, style=solid];
d398 -> n399  [key=0, color=green, style=solid];
n399 -> n400  [key=0, style=solid];
n400 -> n402  [key=0, style=solid];
n402 -> n391  [key=0, color=blue, style=bold];
n423 -> n424  [key=0, style=solid];
n423 -> n426  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
n424 -> n425  [key=0, style=solid];
n424 -> n429  [key=1, color=darkseagreen4, label=contract, style=dashed];
n424 -> n430  [key=1, color=darkseagreen4, label=contract, style=dashed];
n424 -> n431  [key=1, color=darkseagreen4, label=contract, style=dashed];
n424 -> n434  [key=1, color=darkseagreen4, label=contract, style=dashed];
n424 -> n436  [key=1, color=darkseagreen4, label=contract, style=dashed];
n424 -> n438  [key=1, color=darkseagreen4, label=contract, style=dashed];
n424 -> n439  [key=1, color=darkseagreen4, label=contract, style=dashed];
n424 -> n440  [key=1, color=darkseagreen4, label=contract, style=dashed];
n424 -> n441  [key=1, color=darkseagreen4, label=contract, style=dashed];
n424 -> n443  [key=2, style=dotted];
n426 -> n45  [key=2, style=dotted];
n426 -> n427  [key=0, style=solid];
n426 -> n428  [key=1, color=darkseagreen4, label=containerAttribute, style=dashed];
n425 -> n99  [key=2, style=dotted];
n425 -> n426  [key=0, style=solid];
n429 -> n431  [key=0, style=solid];
n429 -> n446  [key=1, color=darkseagreen4, label=string, style=dashed];
n430 -> n431  [key=0, style=solid];
n431 -> n104  [key=2, style=dotted];
n431 -> n432  [key=0, style=solid];
n431 -> n433  [key=1, color=darkseagreen4, label=overrideConstructor, style=dashed];
n431 -> n440  [key=1, color=darkseagreen4, label=overrideConstructor, style=dashed];
n434 -> n188  [key=2, style=dotted];
n434 -> n435  [key=0, style=solid];
n434 -> n437  [key=1, color=darkseagreen4, label=expectedParameterType, style=dashed];
n434 -> n439  [key=1, color=darkseagreen4, label=expectedParameterType, style=dashed];
n436 -> n440  [key=0, style=solid];
n438 -> n440  [key=0, style=solid];
n439 -> n151  [key=2, style=dotted];
n439 -> n442  [key=0, style=solid];
n439 -> n444  [key=2, style=dotted];
n440 -> n105  [key=2, style=dotted];
n440 -> n441  [key=0, style=solid];
n441 -> n442  [key=0, style=solid];
n427 -> n428  [key=0, style=solid];
n427 -> n430  [key=0, style=solid];
n428 -> n103  [key=2, style=dotted];
n428 -> n429  [key=0, style=solid];
n428 -> n446  [key=1, color=darkseagreen4, label=namingStrategy, style=dashed];
n446 -> n115  [key=2, style=dotted];
n446 -> n447  [key=0, style=solid];
n432 -> n433  [key=0, style=solid];
n432 -> n441  [key=0, style=solid];
n433 -> n261  [key=2, style=dotted];
n433 -> n434  [key=0, style=solid];
n433 -> n435  [key=1, color=darkseagreen4, label=parameters, style=dashed];
n433 -> n437  [key=1, color=darkseagreen4, label=parameters, style=dashed];
n435 -> n436  [key=0, style=solid];
n435 -> n437  [key=0, style=solid];
n437 -> n157  [key=2, style=dotted];
n437 -> n438  [key=0, style=solid];
n437 -> n439  [key=0, style=solid];
n442 -> n423  [key=0, color=blue, style=bold];
n445 -> n446  [key=0, style=solid];
n447 -> n445  [key=0, color=blue, style=bold];
n448 -> n449  [key=0, style=solid];
n449 -> n450  [key=0, style=solid];
n449 -> n451  [key=1, color=darkseagreen4, label=contract, style=dashed];
n449 -> n454  [key=1, color=darkseagreen4, label=contract, style=dashed];
n449 -> n456  [key=1, color=darkseagreen4, label=contract, style=dashed];
n449 -> n458  [key=1, color=darkseagreen4, label=contract, style=dashed];
n449 -> n459  [key=1, color=darkseagreen4, label=contract, style=dashed];
n449 -> n460  [key=1, color=darkseagreen4, label=contract, style=dashed];
n449 -> n461  [key=1, color=darkseagreen4, label=contract, style=dashed];
n449 -> n463  [key=2, style=dotted];
n450 -> n99  [key=2, style=dotted];
n450 -> n451  [key=0, style=solid];
n451 -> n104  [key=2, style=dotted];
n451 -> n452  [key=0, style=solid];
n451 -> n453  [key=1, color=darkseagreen4, label=overrideConstructor, style=dashed];
n451 -> n460  [key=1, color=darkseagreen4, label=overrideConstructor, style=dashed];
n454 -> n188  [key=2, style=dotted];
n454 -> n455  [key=0, style=solid];
n454 -> n457  [key=1, color=darkseagreen4, label=expectedParameterType, style=dashed];
n454 -> n459  [key=1, color=darkseagreen4, label=expectedParameterType, style=dashed];
n456 -> n460  [key=0, style=solid];
n458 -> n460  [key=0, style=solid];
n459 -> n151  [key=2, style=dotted];
n459 -> n444  [key=2, style=dotted];
n459 -> n462  [key=0, style=solid];
n460 -> n105  [key=2, style=dotted];
n460 -> n461  [key=0, style=solid];
n461 -> n462  [key=0, style=solid];
n452 -> n453  [key=0, style=solid];
n452 -> n461  [key=0, style=solid];
n453 -> n261  [key=2, style=dotted];
n453 -> n454  [key=0, style=solid];
n453 -> n455  [key=1, color=darkseagreen4, label=parameters, style=dashed];
n453 -> n457  [key=1, color=darkseagreen4, label=parameters, style=dashed];
n455 -> n456  [key=0, style=solid];
n455 -> n457  [key=0, style=solid];
n457 -> n157  [key=2, style=dotted];
n457 -> n458  [key=0, style=solid];
n457 -> n459  [key=0, style=solid];
n462 -> n448  [key=0, color=blue, style=bold];
n464 -> n465  [key=0, style=solid];
n465 -> n466  [key=0, style=solid];
n465 -> n467  [key=1, color=darkseagreen4, label=contract, style=dashed];
n465 -> n469  [key=2, style=dotted];
n466 -> n99  [key=2, style=dotted];
n466 -> n467  [key=0, style=solid];
n467 -> n468  [key=0, style=solid];
n468 -> n464  [key=0, color=blue, style=bold];
n470 -> n471  [key=0, style=solid];
n471 -> n472  [key=0, style=solid];
n471 -> n473  [key=1, color=darkseagreen4, label=contract, style=dashed];
n471 -> n475  [key=2, style=dotted];
n472 -> n99  [key=2, style=dotted];
n472 -> n473  [key=0, style=solid];
n473 -> n474  [key=0, style=solid];
n474 -> n470  [key=0, color=blue, style=bold];
n476 -> n477  [key=0, style=solid];
n477 -> n478  [key=0, style=solid];
n477 -> n479  [key=1, color=darkseagreen4, label=contract, style=dashed];
n477 -> n481  [key=2, style=dotted];
n478 -> n99  [key=2, style=dotted];
n478 -> n479  [key=0, style=solid];
n479 -> n480  [key=0, style=solid];
n480 -> n476  [key=0, color=blue, style=bold];
n482 -> n483  [key=0, style=solid];
n482 -> n484  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
n482 -> n485  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
n482 -> n488  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
n482 -> n490  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
n482 -> n492  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
n482 -> n494  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
n482 -> n496  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
n482 -> n500  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
n482 -> n501  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
n483 -> n484  [key=0, style=solid];
n483 -> n485  [key=0, style=solid];
n483 -> n503  [key=2, style=dotted];
n484 -> n464  [key=2, style=dotted];
n484 -> n502  [key=0, style=solid];
n485 -> n486  [key=0, style=solid];
n485 -> n493  [key=1, color=darkseagreen4, label=t, style=dashed];
n485 -> n495  [key=1, color=darkseagreen4, label=t, style=dashed];
n485 -> n497  [key=1, color=darkseagreen4, label=t, style=dashed];
n485 -> n498  [key=1, color=darkseagreen4, label=t, style=dashed];
n485 -> n499  [key=1, color=darkseagreen4, label=t, style=dashed];
n485 -> n504  [key=2, style=dotted];
n488 -> n54  [key=2, style=dotted];
n488 -> n502  [key=0, style=solid];
n490 -> n448  [key=2, style=dotted];
n490 -> n502  [key=0, style=solid];
n492 -> n423  [key=2, style=dotted];
n492 -> n502  [key=0, style=solid];
n494 -> n470  [key=2, style=dotted];
n494 -> n502  [key=0, style=solid];
n496 -> n423  [key=2, style=dotted];
n496 -> n502  [key=0, style=solid];
n500 -> n476  [key=2, style=dotted];
n500 -> n502  [key=0, style=solid];
n501 -> n54  [key=2, style=dotted];
n501 -> n502  [key=0, style=solid];
n503 -> n508  [key=0, style=solid];
n502 -> n482  [key=0, color=blue, style=bold];
n486 -> n102  [key=2, style=dotted];
n486 -> n487  [key=0, style=solid];
n486 -> n489  [key=1, color=darkseagreen4, label=containerAttribute, style=dashed];
n486 -> n491  [key=1, color=darkseagreen4, label=containerAttribute, style=dashed];
n493 -> n494  [key=0, style=solid];
n493 -> n495  [key=0, style=solid];
n493 -> n505  [key=2, style=dotted];
n495 -> n496  [key=0, style=solid];
n495 -> n497  [key=0, style=solid];
n495 -> n506  [key=2, style=dotted];
n497 -> n157  [key=2, style=dotted];
n497 -> n498  [key=0, style=solid];
n497 -> n499  [key=0, style=solid];
n498 -> n448  [key=2, style=dotted];
n498 -> n502  [key=0, style=solid];
n499 -> n500  [key=0, style=solid];
n499 -> n501  [key=0, style=solid];
n499 -> n507  [key=2, style=dotted];
n487 -> n488  [key=0, style=solid];
n487 -> n489  [key=0, style=solid];
n489 -> n490  [key=0, style=solid];
n489 -> n491  [key=0, style=solid];
n491 -> n492  [key=0, style=solid];
n491 -> n493  [key=0, style=solid];
n507 -> n512  [key=0, style=solid];
n508 -> n509  [key=0, style=solid];
n508 -> n511  [key=2, style=dotted];
n509 -> n510  [key=0, style=solid];
n510 -> n503  [key=0, color=blue, style=bold];
n512 -> n505  [key=2, style=dotted];
n512 -> n513  [key=0, style=solid];
n512 -> n514  [key=0, style=solid];
n513 -> n515  [key=0, style=solid];
n514 -> n515  [key=0, style=solid];
n515 -> n507  [key=0, color=blue, style=bold];
n537 -> n538  [key=0, style=solid];
n537 -> n539  [key=0, style=solid];
n537 -> n541  [key=2, style=dotted];
n537 -> n542  [key=2, style=dotted];
n538 -> n540  [key=0, style=solid];
n539 -> n444  [key=2, style=dotted];
n539 -> n540  [key=0, style=solid];
n540 -> n534  [key=0, color=blue, style=bold];
n565 -> n566  [key=0, style=solid];
n566 -> n557  [key=0, color=blue, style=bold];
n576 -> n309  [key=2, style=dotted];
n576 -> n577  [key=0, style=solid];
n576 -> n578  [key=1, color=darkseagreen4, label=property, style=dashed];
n576 -> n579  [key=1, color=darkseagreen4, label=property, style=dashed];
n576 -> n580  [key=1, color=darkseagreen4, label=property, style=dashed];
n576 -> n581  [key=1, color=darkseagreen4, label=property, style=dashed];
n576 -> n583  [key=1, color=darkseagreen4, label=property, style=dashed];
n576 -> n584  [key=1, color=darkseagreen4, label=property, style=dashed];
n576 -> n585  [key=1, color=darkseagreen4, label=property, style=dashed];
n576 -> n586  [key=1, color=darkseagreen4, label=property, style=dashed];
n576 -> n588  [key=1, color=darkseagreen4, label=property, style=dashed];
n576 -> n590  [key=1, color=darkseagreen4, label=property, style=dashed];
n576 -> n591  [key=1, color=darkseagreen4, label=property, style=dashed];
n577 -> n186  [key=2, style=dotted];
n577 -> n578  [key=0, style=solid];
n578 -> n579  [key=0, style=solid];
n579 -> n580  [key=0, style=solid];
n579 -> n567  [key=2, style=dotted];
n580 -> n310  [key=2, style=dotted];
n580 -> n581  [key=0, style=solid];
n581 -> n311  [key=2, style=dotted];
n581 -> n582  [key=0, style=solid];
n582 -> n583  [key=0, style=solid];
n582 -> n585  [key=0, style=solid];
n583 -> n150  [key=2, style=dotted];
n583 -> n584  [key=0, style=solid];
n584 -> n587  [key=0, style=solid];
n584 -> n593  [key=2, style=dotted];
n588 -> n589  [key=0, style=solid];
n588 -> n594  [key=2, style=dotted];
n590 -> n591  [key=0, style=solid];
n590 -> n595  [key=2, style=dotted];
n585 -> n586  [key=0, style=solid];
n586 -> n587  [key=0, style=solid];
n591 -> n592  [key=0, style=solid];
n567 -> n568  [key=0, style=solid];
n567 -> n570  [key=1, color=darkseagreen4, label="System.Reflection.MemberInfo", style=dashed];
n567 -> n571  [key=1, color=darkseagreen4, label="System.Reflection.MemberInfo", style=dashed];
n587 -> n588  [key=0, style=solid];
n587 -> n589  [key=0, style=solid];
n589 -> n590  [key=0, style=solid];
n589 -> n591  [key=0, style=solid];
n594 -> n666  [key=0, style=solid];
n592 -> n558  [key=0, color=blue, style=bold];
n563 -> n564  [key=0, style=solid];
n564 -> n562  [key=0, color=blue, style=bold];
n568 -> n569  [key=0, style=solid];
n570 -> n572  [key=0, style=solid];
n570 -> n574  [key=2, style=dotted];
n571 -> n572  [key=0, style=solid];
n571 -> n575  [key=2, style=dotted];
n569 -> n570  [key=0, style=solid];
n569 -> n571  [key=0, style=solid];
n572 -> n573  [key=0, style=solid];
n573 -> n567  [key=0, color=blue, style=bold];
n666 -> n193  [key=2, style=dotted];
n666 -> n667  [key=0, style=solid];
n666 -> n669  [key=1, color=darkseagreen4, label=shouldSerializeMethod, style=dashed];
n667 -> n668  [key=0, style=solid];
n667 -> n669  [key=0, style=solid];
n669 -> n673  [key=1, color=darkseagreen4, label=shouldSerializeCall, style=dashed];
n669 -> n194  [key=2, style=dotted];
n669 -> n670  [key=0, style=solid];
n668 -> n671  [key=0, style=solid];
n671 -> n594  [key=0, color=blue, style=bold];
n670 -> n673  [key=1, color=darkseagreen4, label=object, style=dashed];
n670 -> n671  [key=0, style=solid];
n596 -> n597  [key=0, style=solid];
n596 -> n598  [key=1, color=darkseagreen4, label=object, style=dashed];
n596 -> n604  [key=1, color=darkseagreen4, label=string, style=dashed];
n596 -> n606  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
n596 -> n614  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n596 -> n615  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n596 -> n616  [key=1, color=darkseagreen4, label=string, style=dashed];
n596 -> n619  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n596 -> n620  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n596 -> n621  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n596 -> n623  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n596 -> n624  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n596 -> n625  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n596 -> n626  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n596 -> n627  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n596 -> n628  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n596 -> n629  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n596 -> n630  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n596 -> n631  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n596 -> n632  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n596 -> n633  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n596 -> n634  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n596 -> n635  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n596 -> n636  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n596 -> n637  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n596 -> n638  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n596 -> n639  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n596 -> n640  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n596 -> n642  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n596 -> n644  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n596 -> n645  [key=1, color=darkseagreen4, label=object, style=dashed];
n596 -> n646  [key=1, color=darkseagreen4, label="Newtonsoft.Json.MemberSerialization", style=dashed];
n596 -> n648  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n596 -> n649  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n596 -> n650  [key=1, color=darkseagreen4, label=object, style=dashed];
n596 -> n651  [key=1, color=darkseagreen4, label=object, style=dashed];
n596 -> n653  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
n596 -> n659  [key=1, color=darkseagreen4, label="Newtonsoft.Json.MemberSerialization", style=dashed];
n597 -> n45  [key=2, style=dotted];
n597 -> n598  [key=0, style=solid];
n597 -> n601  [key=1, color=darkseagreen4, label=propertyAttribute, style=dashed];
n597 -> n602  [key=1, color=darkseagreen4, label=propertyAttribute, style=dashed];
n597 -> n608  [key=1, color=darkseagreen4, label=propertyAttribute, style=dashed];
n597 -> n609  [key=1, color=darkseagreen4, label=propertyAttribute, style=dashed];
n597 -> n618  [key=1, color=darkseagreen4, label=propertyAttribute, style=dashed];
n597 -> n619  [key=1, color=darkseagreen4, label=propertyAttribute, style=dashed];
n597 -> n620  [key=1, color=darkseagreen4, label=propertyAttribute, style=dashed];
n597 -> n621  [key=1, color=darkseagreen4, label=propertyAttribute, style=dashed];
n597 -> n623  [key=1, color=darkseagreen4, label=propertyAttribute, style=dashed];
n597 -> n624  [key=1, color=darkseagreen4, label=propertyAttribute, style=dashed];
n597 -> n625  [key=1, color=darkseagreen4, label=propertyAttribute, style=dashed];
n597 -> n626  [key=1, color=darkseagreen4, label=propertyAttribute, style=dashed];
n597 -> n627  [key=1, color=darkseagreen4, label=propertyAttribute, style=dashed];
n597 -> n628  [key=1, color=darkseagreen4, label=propertyAttribute, style=dashed];
n597 -> n629  [key=1, color=darkseagreen4, label=propertyAttribute, style=dashed];
n597 -> n630  [key=1, color=darkseagreen4, label=propertyAttribute, style=dashed];
n597 -> n631  [key=1, color=darkseagreen4, label=propertyAttribute, style=dashed];
n598 -> n45  [key=2, style=dotted];
n598 -> n599  [key=0, style=solid];
n598 -> n641  [key=1, color=darkseagreen4, label=requiredAttribute, style=dashed];
n604 -> n605  [key=0, style=solid];
n604 -> n614  [key=1, color=darkseagreen4, label=mappedName, style=dashed];
n604 -> n615  [key=1, color=darkseagreen4, label=mappedName, style=dashed];
n606 -> n45  [key=2, style=dotted];
n606 -> n607  [key=0, style=solid];
n606 -> n610  [key=1, color=darkseagreen4, label=containerAttribute, style=dashed];
n606 -> n611  [key=1, color=darkseagreen4, label=containerAttribute, style=dashed];
n614 -> n663  [key=2, style=dotted];
n614 -> n616  [key=0, style=solid];
n615 -> n664  [key=2, style=dotted];
n615 -> n616  [key=0, style=solid];
n616 -> n617  [key=0, style=solid];
n619 -> n620  [key=0, style=solid];
n620 -> n621  [key=0, style=solid];
n621 -> n622  [key=0, style=solid];
n623 -> n624  [key=0, style=solid];
n624 -> n625  [key=0, style=solid];
n625 -> n626  [key=0, style=solid];
n626 -> n627  [key=0, style=solid];
n627 -> n628  [key=0, style=solid];
n628 -> n629  [key=0, style=solid];
n629 -> n665  [key=2, style=dotted];
n629 -> n630  [key=0, style=solid];
n630 -> n631  [key=0, style=solid];
n631 -> n641  [key=0, style=solid];
n632 -> n633  [key=0, style=solid];
n633 -> n634  [key=0, style=solid];
n634 -> n635  [key=0, style=solid];
n635 -> n636  [key=0, style=solid];
n636 -> n637  [key=0, style=solid];
n637 -> n638  [key=0, style=solid];
n638 -> n639  [key=0, style=solid];
n639 -> n640  [key=0, style=solid];
n640 -> n641  [key=0, style=solid];
n642 -> n643  [key=0, style=solid];
n644 -> n645  [key=0, style=solid];
n645 -> n45  [key=2, style=dotted];
n645 -> n646  [key=0, style=solid];
n645 -> n648  [key=1, color=darkseagreen4, label=hasJsonIgnoreAttribute, style=dashed];
n645 -> n649  [key=1, color=darkseagreen4, label=hasJsonIgnoreAttribute, style=dashed];
n646 -> n647  [key=0, style=solid];
n646 -> n649  [key=0, style=solid];
n648 -> n650  [key=0, style=solid];
n649 -> n650  [key=0, style=solid];
n650 -> n315  [key=2, style=dotted];
n650 -> n651  [key=0, style=solid];
n651 -> n45  [key=2, style=dotted];
n651 -> n652  [key=0, style=solid];
n651 -> n653  [key=1, color=darkseagreen4, label=defaultValueAttribute, style=dashed];
n653 -> n654  [key=0, style=solid];
n659 -> n660  [key=0, style=solid];
n659 -> n661  [key=0, style=solid];
n601 -> n602  [key=0, style=solid];
n601 -> n604  [key=0, style=solid];
n602 -> n603  [key=0, style=solid];
n602 -> n614  [key=1, color=darkseagreen4, label=mappedName, style=dashed];
n602 -> n615  [key=1, color=darkseagreen4, label=mappedName, style=dashed];
n608 -> n609  [key=0, style=solid];
n608 -> n610  [key=0, style=solid];
n609 -> n613  [key=0, style=solid];
n609 -> n614  [key=1, color=darkseagreen4, label=namingStrategy, style=dashed];
n609 -> n662  [key=2, style=dotted];
n618 -> n619  [key=0, style=solid];
n618 -> n632  [key=0, style=solid];
n599 -> n600  [key=0, style=solid];
n641 -> n642  [key=0, style=solid];
n641 -> n644  [key=0, style=solid];
n600 -> n601  [key=0, style=solid];
n603 -> n606  [key=0, style=solid];
n603 -> n614  [key=1, color=darkseagreen4, label=hasSpecifiedName, style=dashed];
n605 -> n606  [key=0, style=solid];
n605 -> n614  [key=1, color=darkseagreen4, label=hasSpecifiedName, style=dashed];
n607 -> n608  [key=0, style=solid];
n610 -> n611  [key=0, style=solid];
n610 -> n612  [key=0, style=solid];
n611 -> n103  [key=2, style=dotted];
n611 -> n613  [key=0, style=solid];
n611 -> n614  [key=1, color=darkseagreen4, label=namingStrategy, style=dashed];
n613 -> n614  [key=0, style=solid];
n613 -> n615  [key=0, style=solid];
n612 -> n613  [key=0, style=solid];
n612 -> n614  [key=1, color=darkseagreen4, label=namingStrategy, style=dashed];
n617 -> n618  [key=0, style=solid];
n617 -> n644  [key=1, color=darkseagreen4, label=hasMemberAttribute, style=dashed];
n617 -> n649  [key=1, color=darkseagreen4, label=hasMemberAttribute, style=dashed];
n617 -> n657  [key=1, color=darkseagreen4, label=hasMemberAttribute, style=dashed];
n657 -> n658  [key=0, style=solid];
n657 -> n659  [key=0, style=solid];
n622 -> n623  [key=0, style=solid];
n622 -> n644  [key=1, color=darkseagreen4, label=hasMemberAttribute, style=dashed];
n622 -> n649  [key=1, color=darkseagreen4, label=hasMemberAttribute, style=dashed];
n622 -> n657  [key=1, color=darkseagreen4, label=hasMemberAttribute, style=dashed];
n643 -> n644  [key=0, style=solid];
n643 -> n649  [key=1, color=darkseagreen4, label=hasMemberAttribute, style=dashed];
n643 -> n657  [key=1, color=darkseagreen4, label=hasMemberAttribute, style=dashed];
n647 -> n648  [key=0, style=solid];
n652 -> n653  [key=0, style=solid];
n652 -> n654  [key=0, style=solid];
n654 -> n655  [key=0, style=solid];
n654 -> n661  [key=1, color=darkseagreen4, label="out bool", style=dashed];
n655 -> n656  [key=0, style=solid];
n655 -> n657  [key=0, style=solid];
n661 -> n596  [key=0, color=blue, style=bold];
n656 -> n657  [key=0, style=solid];
n656 -> n661  [key=1, color=darkseagreen4, label="out bool", style=dashed];
n658 -> n659  [key=0, style=solid];
n658 -> n661  [key=1, color=darkseagreen4, label="out bool", style=dashed];
n660 -> n661  [key=0, style=solid];
n709 -> n691  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n692  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n696  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n697  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n702  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n703  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n704  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n707  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n1  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n2  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n8  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n255  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n58  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n62  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n72  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n75  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n78  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n81  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n84  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n86  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n89  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n90  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n116  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n117  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n139  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n146  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n20  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n22  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n322  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n325  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n327  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n543  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n546  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n549  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n271  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n273  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n292  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n333  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n352  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n425  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n430  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n431  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n450  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n451  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n466  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n472  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n478  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n484  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n488  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n490  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n492  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n494  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n496  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n498  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n500  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n501  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n565  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n579  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n581  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n587  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n588  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n589  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n590  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n569  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n612  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n615  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n709 -> n655  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
n710 -> n113  [key=1, color=darkseagreen4, label=namingStrategy, style=dashed];
n711 -> n198  [key=1, color=darkseagreen4, label=getExtensionDataDictionary, style=dashed];
n711 -> n211  [key=1, color=darkseagreen4, label=getExtensionDataDictionary, style=dashed];
n712 -> n200  [key=1, color=darkseagreen4, label=setExtensionDataDictionary, style=dashed];
n712 -> n203  [key=1, color=darkseagreen4, label=setExtensionDataDictionary, style=dashed];
n713 -> n201  [key=1, color=darkseagreen4, label="System.Reflection.MemberInfo", style=dashed];
n714 -> n202  [key=1, color=darkseagreen4, label=createExtensionDataDictionary, style=dashed];
n715 -> n204  [key=1, color=darkseagreen4, label=setExtensionDataDictionaryValue, style=dashed];
n716 -> n214  [key=1, color=darkseagreen4, label=createEnumerableWrapper, style=dashed];
n717 -> n219  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>", style=dashed];
n717 -> n223  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>", style=dashed];
n717 -> n228  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>", style=dashed];
n718 -> n446  [key=1, color=darkseagreen4, label=namingStrategy, style=dashed];
n719 -> n673  [key=1, color=darkseagreen4, label=shouldSerializeCall, style=dashed];
n720 -> n689  [key=1, color=darkseagreen4, label=specifiedPropertyGet, style=dashed];
m0_20 -> m0_21  [key=0, style=solid];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_23  [key=2, style=dotted];
m0_22 -> m0_20  [key=0, color=blue, style=bold];
m0_42 -> m0_43  [key=0, style=solid];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_45  [key=2, style=dotted];
m0_44 -> m0_42  [key=0, color=blue, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_8  [key=2, style=dotted];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_7  [key=2, style=dotted];
m0_2 -> m0_9  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_4  [key=1, color=darkseagreen4, label=result, style=dashed];
m0_2 -> m0_5  [key=1, color=darkseagreen4, label=result, style=dashed];
m0_3 -> m0_10  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_4 -> m0_11  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_11  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_6 -> m0_0  [key=0, color=blue, style=bold];
m0_12 -> m0_13  [key=0, color=green, style=solid];
m0_12 -> m0_14  [key=1, color=darkseagreen4, label="System.Reflection.MemberInfo", style=dashed];
m0_13 -> n558  [key=2, style=dotted];
m0_13 -> m0_18  [key=2, color=green, style=dotted];
m0_13 -> m0_14  [key=0, color=green, style=solid];
m0_13 -> m0_15  [key=1, color=green, label=result, style=dashed];
m0_13 -> m0_16  [key=1, color=green, label=result, style=dashed];
m0_14 -> m0_10  [key=2, color=green, style=dotted];
m0_14 -> m0_15  [key=0, color=green, style=solid];
m0_14 -> m0_16  [key=0, style=solid];
m0_15 -> m0_19  [key=2, style=dotted];
m0_15 -> m0_11  [key=2, color=green, style=dotted];
m0_15 -> m0_16  [key=0, color=green, style=solid];
m0_16 -> m0_11  [key=2, color=green, style=dotted];
m0_16 -> m0_17  [key=0, color=green, style=solid];
m0_17 -> m0_12  [key=0, color=green, style=bold];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_27  [key=1, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m0_24 -> m0_30  [key=1, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m0_24 -> m0_31  [key=1, color=darkseagreen4, label=object, style=dashed];
m0_25 -> m0_37  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_27  [key=1, color=darkseagreen4, label=token, style=dashed];
m0_25 -> m0_29  [key=1, color=darkseagreen4, label=token, style=dashed];
m0_27 -> m0_38  [key=2, style=dotted];
m0_27 -> m0_36  [key=0, style=solid];
m0_30 -> m0_38  [key=2, style=dotted];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_32  [key=1, color=darkseagreen4, label=list, style=dashed];
m0_30 -> m0_33  [key=1, color=darkseagreen4, label=list, style=dashed];
m0_30 -> m0_35  [key=1, color=darkseagreen4, label=list, style=dashed];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_34  [key=1, color=darkseagreen4, label=existing, style=dashed];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_28  [key=0, style=solid];
m0_29 -> m0_40  [key=2, style=dotted];
m0_29 -> m0_30  [key=0, style=solid];
m0_28 -> m0_39  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_30  [key=1, color=darkseagreen4, label=array, style=dashed];
m0_36 -> m0_24  [key=0, color=blue, style=bold];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_35  [key=0, style=solid];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_35  [key=0, style=solid];
m0_35 -> m0_36  [key=0, style=solid];
m0_34 -> m0_41  [key=2, style=dotted];
m0_34 -> m0_33  [key=0, style=solid];
m0_46 -> m0_13  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Issues.Issue1576.CustomContractResolver", style=dashed];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_38  [key=1, color=darkseagreen4, label=object, style=dashed];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_38  [key=0, style=solid];
m1_38 -> m1_42  [key=2, style=dotted];
m1_38 -> m1_39  [key=0, style=solid];
m1_35 -> m1_28  [key=2, style=dotted];
m1_35 -> m1_36  [key=0, style=solid];
m1_36 -> m1_40  [key=2, style=dotted];
m1_36 -> m1_37  [key=0, style=solid];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_41  [key=2, style=dotted];
m1_39 -> m1_33  [key=0, color=blue, style=bold];
m1_43 -> m1_44  [key=0, style=solid];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_47  [key=0, style=solid];
m1_45 -> m1_28  [key=2, style=dotted];
m1_45 -> m1_46  [key=0, style=solid];
m1_47 -> n207  [key=2, style=dotted];
m1_47 -> m1_48  [key=0, style=solid];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_49  [key=2, style=dotted];
m1_48 -> m1_43  [key=0, color=blue, style=bold];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_7  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
m1_3 -> m1_20  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
m1_4 -> m1_5  [key=0, style=solid];
m1_7 -> m1_25  [key=2, style=dotted];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_12  [key=0, style=solid];
m1_20 -> m1_32  [key=2, style=dotted];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_24  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_6 -> m1_7  [key=0, style=solid];
m1_8 -> m1_26  [key=2, style=dotted];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_11  [key=1, color=darkseagreen4, label=keyType, style=dashed];
m1_8 -> m1_15  [key=1, color=darkseagreen4, label=keyType, style=dashed];
m1_8 -> m1_16  [key=1, color=darkseagreen4, label=keyType, style=dashed];
m1_8 -> m1_18  [key=1, color=darkseagreen4, label=keyType, style=dashed];
m1_12 -> m1_29  [key=2, style=dotted];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_15  [key=1, color=darkseagreen4, label=valueType, style=dashed];
m1_12 -> m1_16  [key=1, color=darkseagreen4, label=valueType, style=dashed];
m1_12 -> m1_18  [key=1, color=darkseagreen4, label=keyType, style=dashed];
m1_12 -> m1_19  [key=1, color=darkseagreen4, label=valueType, style=dashed];
m1_9 -> m1_26  [key=2, style=dotted];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_11  [key=1, color=darkseagreen4, label=valueType, style=dashed];
m1_9 -> m1_15  [key=1, color=darkseagreen4, label=valueType, style=dashed];
m1_9 -> m1_16  [key=1, color=darkseagreen4, label=valueType, style=dashed];
m1_9 -> m1_19  [key=1, color=darkseagreen4, label=valueType, style=dashed];
m1_11 -> m1_28  [key=2, style=dotted];
m1_11 -> m1_15  [key=0, style=solid];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_17  [key=0, color=red, style=solid];
m1_16 -> m1_28  [key=2, style=dotted];
m1_16 -> m1_30  [key=2, style=dotted];
m1_16 -> m1_17  [key=0, color=red, style=solid];
m1_18 -> m1_19  [key=0, style=solid];
m1_10 -> m1_27  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_15  [key=0, style=solid];
m1_19 -> m1_20  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_15  [key=0, style=solid];
m1_14 -> m1_15  [key=0, style=solid];
m1_17 -> m1_31  [key=2, color=red, style=dotted];
m1_17 -> m1_18  [key=0, color=red, style=solid];
m1_21 -> m1_22  [key=0, style=solid];
m1_24 -> m1_3  [key=0, color=blue, style=bold];
m1_22 -> m1_23  [key=0, style=solid];
m1_23 -> m1_24  [key=0, style=solid];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_2 -> m1_0  [key=0, color=blue, style=bold];
m1_51 -> m1_34  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_51 -> m1_35  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_51 -> m1_36  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_51 -> m1_37  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_51 -> m1_38  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_51 -> m1_44  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_51 -> m1_45  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_51 -> m1_46  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_51 -> m1_47  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_51 -> m1_4  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_51 -> m1_7  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_51 -> m1_8  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_51 -> m1_9  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_51 -> m1_10  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_51 -> m1_11  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_51 -> m1_12  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_51 -> m1_13  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_51 -> m1_14  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_51 -> m1_16  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_51 -> m1_17  [key=1, color=red, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_51 -> m1_18  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_51 -> m1_19  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_51 -> m1_20  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_51 -> m1_21  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_51 -> m1_22  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_51 -> m1_23  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m1_51 -> m1_1  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_47  [key=1, color=darkseagreen4, label=string, style=dashed];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_47  [key=0, style=solid];
m2_47 -> m2_49  [key=2, style=dotted];
m2_47 -> m2_48  [key=0, style=solid];
m2_45 -> m2_46  [key=0, style=solid];
m2_46 -> m2_48  [key=0, style=solid];
m2_48 -> m2_43  [key=0, color=blue, style=bold];
m2_42 -> m2_50  [key=0, style=solid];
m2_42 -> m2_51  [key=1, color=darkseagreen4, label=string, style=dashed];
m2_42 -> m2_57  [key=1, color=darkseagreen4, label="System.StringComparison", style=dashed];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_54  [key=0, style=solid];
m2_51 -> m2_62  [key=2, style=dotted];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_53  [key=0, style=solid];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_59  [key=0, style=solid];
m2_57 -> m2_63  [key=2, style=dotted];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_56  [key=1, color=darkseagreen4, label=i, style=dashed];
m2_54 -> m2_59  [key=1, color=darkseagreen4, label=i, style=dashed];
m2_52 -> m2_61  [key=0, style=solid];
m2_53 -> m2_61  [key=0, style=solid];
m2_61 -> m2_42  [key=0, color=blue, style=bold];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_60  [key=0, style=solid];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_58  [key=1, color=darkseagreen4, label=property, style=dashed];
m2_59 -> m2_55  [key=0, style=solid];
m2_59 -> m2_59  [key=1, color=darkseagreen4, label=i, style=dashed];
m2_60 -> m2_61  [key=0, style=solid];
m2_58 -> m2_61  [key=0, style=solid];
m2_6 -> m2_7  [key=0, style=solid];
m2_7 -> m2_8  [key=0, style=solid];
m2_8 -> m2_6  [key=0, color=blue, style=bold];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_39  [key=1, color=darkseagreen4, label=string, style=dashed];
m2_37 -> m2_42  [key=2, style=dotted];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_40  [key=1, color=darkseagreen4, label=property, style=dashed];
m2_39 -> m2_42  [key=2, style=dotted];
m2_39 -> m2_40  [key=0, style=solid];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_40  [key=0, style=solid];
m2_40 -> m2_41  [key=0, style=solid];
m2_41 -> m2_36  [key=0, color=blue, style=bold];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_11  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m2_9 -> m2_13  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m2_9 -> m2_18  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m2_9 -> m2_19  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m2_9 -> m2_22  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m2_9 -> m2_25  [key=1, color=green, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m2_9 -> m2_26  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m2_10 -> m2_28  [key=2, style=dotted];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_26  [key=0, style=solid];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_13  [key=0, style=solid];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_15  [key=1, color=darkseagreen4, label=existingProperty, style=dashed];
m2_13 -> m2_16  [key=1, color=darkseagreen4, label=existingProperty, style=dashed];
m2_13 -> m2_18  [key=1, color=darkseagreen4, label=existingProperty, style=dashed];
m2_13 -> m2_19  [key=1, color=darkseagreen4, label=existingProperty, style=dashed];
m2_13 -> m2_20  [key=1, color=darkseagreen4, label=existingProperty, style=dashed];
m2_13 -> m2_22  [key=1, color=darkseagreen4, label=existingProperty, style=dashed];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_24  [key=0, color=green, style=solid];
m2_19 -> m2_32  [key=2, style=dotted];
m2_19 -> m2_31  [key=2, style=dotted];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_22  [key=0, style=solid];
m2_19 -> m2_30  [key=2, style=dotted];
m2_22 -> m2_32  [key=2, style=dotted];
m2_22 -> m2_31  [key=2, style=dotted];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_24  [key=0, color=green, style=solid];
m2_22 -> m2_30  [key=2, style=dotted];
m2_25 -> m2_33  [key=2, color=green, style=dotted];
m2_25 -> m2_34  [key=2, color=green, style=dotted];
m2_25 -> m2_27  [key=0, color=green, style=solid];
m2_26 -> m2_35  [key=2, style=dotted];
m2_26 -> m2_27  [key=0, style=solid];
m2_12 -> m2_27  [key=0, style=solid];
m2_27 -> m2_9  [key=0, color=blue, style=bold];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_24  [key=1, color=green, label=duplicateProperty, style=dashed];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_18  [key=0, style=solid];
m2_16 -> m2_29  [key=2, style=dotted];
m2_16 -> m2_17  [key=0, style=solid];
m2_20 -> m2_29  [key=2, style=dotted];
m2_20 -> m2_21  [key=0, style=solid];
m2_24 -> m2_25  [key=0, color=green, style=solid];
m2_24 -> m2_26  [key=0, color=green, style=solid];
m2_17 -> m2_24  [key=0, color=green, style=solid];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_24  [key=1, color=green, label=duplicateProperty, style=dashed];
m2_23 -> m2_27  [key=0, style=solid];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_3  [key=0, style=solid];
m2_3 -> m2_4  [key=0, style=solid];
m2_4 -> m2_0  [key=0, color=blue, style=bold];
m2_64 -> m2_44  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection", style=dashed];
m2_64 -> m2_47  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection", style=dashed];
m2_64 -> m2_51  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection", style=dashed];
m2_64 -> m2_55  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection", style=dashed];
m2_64 -> m2_56  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection", style=dashed];
m2_64 -> m2_37  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection", style=dashed];
m2_64 -> m2_39  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection", style=dashed];
m2_64 -> m2_10  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection", style=dashed];
m2_64 -> m2_13  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection", style=dashed];
m2_64 -> m2_16  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection", style=dashed];
m2_64 -> m2_20  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection", style=dashed];
m2_64 -> m2_25  [key=1, color=green, label="Newtonsoft.Json.Serialization.JsonPropertyCollection", style=dashed];
m2_64 -> m2_26  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection", style=dashed];
m2_64 -> m2_2  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection", style=dashed];
m2_64 -> m2_3  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection", style=dashed];
m3_43 -> m3_44  [key=0, style=solid];
m3_44 -> m3_45  [key=0, style=solid];
m3_44 -> m3_46  [key=1, color=darkseagreen4, label=dic1, style=dashed];
m3_44 -> m3_53  [key=2, style=dotted];
m3_45 -> m3_46  [key=0, style=solid];
m3_46 -> m3_47  [key=0, style=solid];
m3_46 -> m3_48  [key=1, color=darkseagreen4, label=output, style=dashed];
m3_46 -> m3_12  [key=2, style=dotted];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_13  [key=2, style=dotted];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_50  [key=1, color=darkseagreen4, label=dic2, style=dashed];
m3_48 -> m3_14  [key=2, style=dotted];
m3_49 -> m3_50  [key=0, style=solid];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_16  [key=2, style=dotted];
m3_50 -> m3_54  [key=2, style=dotted];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> m3_13  [key=2, style=dotted];
m3_52 -> m3_43  [key=0, color=blue, style=bold];
m3_257 -> m3_258  [key=0, style=solid];
m3_258 -> m3_259  [key=0, style=solid];
m3_258 -> m3_260  [key=1, color=darkseagreen4, label=onebasedArray, style=dashed];
m3_258 -> m3_261  [key=1, color=darkseagreen4, label=onebasedArray, style=dashed];
m3_258 -> m3_262  [key=1, color=darkseagreen4, label=onebasedArray, style=dashed];
m3_258 -> m3_263  [key=1, color=darkseagreen4, label=onebasedArray, style=dashed];
m3_258 -> m3_266  [key=1, color=darkseagreen4, label=onebasedArray, style=dashed];
m3_258 -> m3_251  [key=2, style=dotted];
m3_259 -> m3_260  [key=0, style=solid];
m3_259 -> m3_263  [key=1, color=darkseagreen4, label=i, style=dashed];
m3_259 -> m3_265  [key=1, color=darkseagreen4, label=i, style=dashed];
m3_259 -> m3_252  [key=2, style=dotted];
m3_260 -> m3_261  [key=0, style=solid];
m3_260 -> m3_266  [key=0, style=solid];
m3_260 -> m3_253  [key=2, style=dotted];
m3_261 -> m3_262  [key=0, style=solid];
m3_261 -> m3_263  [key=1, color=darkseagreen4, label=j, style=dashed];
m3_261 -> m3_264  [key=1, color=darkseagreen4, label=j, style=dashed];
m3_261 -> m3_252  [key=2, style=dotted];
m3_262 -> m3_263  [key=0, style=solid];
m3_262 -> m3_265  [key=0, style=solid];
m3_262 -> m3_253  [key=2, style=dotted];
m3_263 -> m3_264  [key=0, style=solid];
m3_263 -> m3_255  [key=2, style=dotted];
m3_266 -> m3_267  [key=0, style=solid];
m3_266 -> m3_241  [key=2, style=dotted];
m3_265 -> m3_260  [key=0, style=solid];
m3_265 -> m3_265  [key=1, color=darkseagreen4, label=i, style=dashed];
m3_264 -> m3_262  [key=0, style=solid];
m3_264 -> m3_264  [key=1, color=darkseagreen4, label=j, style=dashed];
m3_267 -> m3_268  [key=0, style=solid];
m3_267 -> m3_256  [key=2, style=dotted];
m3_268 -> m3_257  [key=0, color=blue, style=bold];
m3_676 -> m3_677  [key=0, style=solid];
m3_677 -> m3_678  [key=0, style=solid];
m3_677 -> m3_681  [key=1, color=darkseagreen4, label=json, style=dashed];
m3_678 -> m3_679  [key=0, style=solid];
m3_678 -> m3_131  [key=2, style=dotted];
m3_678 -> m3_680  [key=1, color=darkseagreen4, label="lambda expression", style=dashed];
m3_681 -> m3_14  [key=2, style=dotted];
m3_681 -> m3_682  [key=0, style=solid];
m3_679 -> m3_676  [key=0, color=blue, style=bold];
m3_680 -> m3_681  [key=0, style=solid];
m3_432 -> m3_433  [key=0, style=solid];
m3_433 -> m3_434  [key=0, style=solid];
m3_433 -> m3_437  [key=1, color=darkseagreen4, label=s, style=dashed];
m3_433 -> m3_440  [key=1, color=darkseagreen4, label=s, style=dashed];
m3_434 -> m3_435  [key=0, style=solid];
m3_434 -> m3_12  [key=2, style=dotted];
m3_437 -> m3_438  [key=0, style=solid];
m3_437 -> m3_175  [key=2, style=dotted];
m3_440 -> m3_441  [key=0, style=solid];
m3_440 -> m3_175  [key=2, style=dotted];
m3_435 -> m3_436  [key=0, style=solid];
m3_435 -> m3_13  [key=2, style=dotted];
m3_436 -> m3_437  [key=0, style=solid];
m3_436 -> m3_438  [key=1, color=darkseagreen4, label=d1, style=dashed];
m3_436 -> m3_62  [key=2, style=dotted];
m3_438 -> m3_439  [key=0, style=solid];
m3_438 -> m3_12  [key=2, style=dotted];
m3_438 -> m3_13  [key=2, style=dotted];
m3_439 -> m3_440  [key=0, style=solid];
m3_439 -> m3_441  [key=1, color=darkseagreen4, label=d2, style=dashed];
m3_439 -> m3_62  [key=2, style=dotted];
m3_441 -> m3_442  [key=0, style=solid];
m3_441 -> m3_12  [key=2, style=dotted];
m3_441 -> m3_13  [key=2, style=dotted];
m3_442 -> m3_432  [key=0, color=blue, style=bold];
m3_978 -> m3_979  [key=0, style=solid];
m3_979 -> m3_980  [key=0, style=solid];
m3_979 -> m3_981  [key=2, style=dotted];
m3_980 -> m3_978  [key=0, color=blue, style=bold];
m3_94 -> m3_95  [key=0, style=solid];
m3_95 -> m3_96  [key=0, style=solid];
m3_95 -> m3_97  [key=1, color=darkseagreen4, label=c1, style=dashed];
m3_95 -> m3_98  [key=1, color=darkseagreen4, label=c1, style=dashed];
m3_95 -> m3_99  [key=1, color=darkseagreen4, label=c1, style=dashed];
m3_95 -> m3_78  [key=2, style=dotted];
m3_96 -> m3_97  [key=0, style=solid];
m3_96 -> m3_86  [key=2, style=dotted];
m3_97 -> m3_98  [key=0, style=solid];
m3_97 -> m3_86  [key=2, style=dotted];
m3_98 -> m3_99  [key=0, style=solid];
m3_98 -> m3_86  [key=2, style=dotted];
m3_99 -> m3_100  [key=0, style=solid];
m3_99 -> m3_12  [key=2, style=dotted];
m3_78 -> m3_79  [key=0, style=solid];
m3_86 -> m3_87  [key=0, style=solid];
m3_100 -> m3_101  [key=0, style=solid];
m3_100 -> m3_14  [key=2, style=dotted];
m3_101 -> m3_102  [key=0, style=solid];
m3_101 -> m3_103  [key=1, color=darkseagreen4, label=values, style=dashed];
m3_101 -> m3_104  [key=1, color=darkseagreen4, label=values, style=dashed];
m3_101 -> m3_105  [key=1, color=darkseagreen4, label=values, style=dashed];
m3_101 -> m3_107  [key=2, style=dotted];
m3_102 -> m3_103  [key=0, style=solid];
m3_102 -> m3_13  [key=2, style=dotted];
m3_103 -> m3_104  [key=0, style=solid];
m3_103 -> m3_13  [key=2, style=dotted];
m3_104 -> m3_105  [key=0, style=solid];
m3_104 -> m3_13  [key=2, style=dotted];
m3_105 -> m3_106  [key=0, style=solid];
m3_105 -> m3_13  [key=2, style=dotted];
m3_106 -> m3_94  [key=0, color=blue, style=bold];
m3_966 -> m3_967  [key=0, style=solid];
m3_967 -> m3_968  [key=0, style=solid];
m3_967 -> m3_969  [key=2, style=dotted];
m3_968 -> m3_966  [key=0, color=blue, style=bold];
m3_931 -> m3_932  [key=0, style=solid];
m3_932 -> m3_933  [key=0, style=solid];
m3_933 -> m3_934  [key=0, style=solid];
m3_933 -> m3_935  [key=1, color=darkseagreen4, label=values, style=dashed];
m3_933 -> m3_936  [key=1, color=darkseagreen4, label=values, style=dashed];
m3_933 -> m3_14  [key=2, style=dotted];
m3_934 -> m3_935  [key=0, style=solid];
m3_934 -> m3_13  [key=2, style=dotted];
m3_935 -> m3_936  [key=0, style=solid];
m3_935 -> m3_13  [key=2, style=dotted];
m3_936 -> m3_937  [key=0, style=solid];
m3_936 -> m3_13  [key=2, style=dotted];
m3_937 -> m3_931  [key=0, color=blue, style=bold];
m3_388 -> m3_389  [key=0, style=solid];
m3_389 -> m3_390  [key=0, style=solid];
m3_389 -> m3_391  [key=1, color=darkseagreen4, label=dic, style=dashed];
m3_389 -> m3_392  [key=1, color=darkseagreen4, label=dic, style=dashed];
m3_389 -> m3_14  [key=2, style=dotted];
m3_390 -> m3_391  [key=0, style=solid];
m3_390 -> m3_13  [key=2, style=dotted];
m3_391 -> m3_392  [key=0, style=solid];
m3_391 -> m3_13  [key=2, style=dotted];
m3_392 -> m3_393  [key=0, style=solid];
m3_392 -> m3_13  [key=2, style=dotted];
m3_393 -> m3_388  [key=0, color=blue, style=bold];
m3_1063 -> m3_1064  [key=0, style=solid];
m3_1064 -> m3_1065  [key=0, style=solid];
m3_1064 -> m3_291  [key=2, style=dotted];
m3_1065 -> m3_1063  [key=0, color=blue, style=bold];
m3_816 -> m3_817  [key=0, style=solid];
m3_817 -> m3_818  [key=0, style=solid];
m3_817 -> m3_821  [key=1, color=green, label=collection, style=dashed];
m3_817 -> m3_824  [key=1, color=green, label=collection, style=dashed];
m3_817 -> m3_827  [key=2, style=dotted];
m3_817 -> m3_826  [key=2, style=dotted];
m3_818 -> m3_819  [key=0, style=solid];
m3_818 -> m3_821  [key=1, color=green, label=jsonSerializer, style=dashed];
m3_818 -> m3_823  [key=1, color=green, label=jsonSerializer, style=dashed];
m3_818 -> m3_828  [key=2, style=dotted];
m3_821 -> m3_822  [key=0, color=green, style=solid];
m3_821 -> m3_830  [key=2, color=green, style=dotted];
m3_824 -> m3_825  [key=0, color=green, style=solid];
m3_824 -> m3_13  [key=2, color=green, style=dotted];
m3_819 -> m3_820  [key=0, style=solid];
m3_823 -> m3_824  [key=0, color=green, style=solid];
m3_823 -> m3_834  [key=2, color=green, style=dotted];
m3_823 -> m3_835  [key=2, color=green, style=dotted];
m3_823 -> m3_832  [key=2, color=green, style=dotted];
m3_823 -> m3_833  [key=2, color=green, style=dotted];
m3_823 -> m3_831  [key=2, color=green, style=dotted];
m3_820 -> m3_821  [key=0, color=green, style=solid];
m3_820 -> m3_822  [key=1, color=green, label=sw, style=dashed];
m3_820 -> m3_823  [key=1, color=green, label=sw, style=dashed];
m3_820 -> m3_829  [key=2, style=dotted];
m3_822 -> m3_823  [key=0, color=green, style=solid];
m3_822 -> m3_832  [key=2, color=green, style=dotted];
m3_822 -> m3_831  [key=2, color=green, style=dotted];
m3_822 -> m3_13  [key=2, color=green, style=dotted];
m3_825 -> m3_816  [key=0, color=blue, style=bold];
m3_898 -> m3_899  [key=0, style=solid];
m3_899 -> m3_900  [key=0, style=solid];
m3_899 -> m3_902  [key=1, color=darkseagreen4, label=externalJson, style=dashed];
m3_900 -> m3_901  [key=0, style=solid];
m3_900 -> m3_902  [key=1, color=darkseagreen4, label=settings, style=dashed];
m3_900 -> m3_328  [key=2, style=dotted];
m3_902 -> m3_903  [key=0, style=solid];
m3_902 -> m3_329  [key=2, style=dotted];
m3_901 -> m3_902  [key=0, style=solid];
m3_901 -> m3_758  [key=2, style=dotted];
m3_901 -> m3_905  [key=2, style=dotted];
m3_903 -> m3_904  [key=0, style=solid];
m3_903 -> m3_13  [key=2, style=dotted];
m3_904 -> m3_898  [key=0, color=blue, style=bold];
m3_321 -> m3_322  [key=0, style=solid];
m3_322 -> m3_321  [key=0, color=blue, style=bold];
m3_292 -> m3_293  [key=0, style=solid];
m3_293 -> m3_294  [key=0, style=solid];
m3_293 -> m3_288  [key=2, style=dotted];
m3_294 -> m3_292  [key=0, color=blue, style=bold];
m3_288 -> m3_289  [key=0, style=solid];
m3_856 -> m3_857  [key=0, style=solid];
m3_857 -> m3_858  [key=0, style=solid];
m3_857 -> m3_860  [key=1, color=darkseagreen4, label=a1, style=dashed];
m3_857 -> m3_867  [key=2, style=dotted];
m3_858 -> m3_859  [key=0, style=solid];
m3_858 -> m3_861  [key=1, color=darkseagreen4, label=a2, style=dashed];
m3_858 -> m3_867  [key=2, style=dotted];
m3_860 -> m3_861  [key=0, style=solid];
m3_859 -> m3_860  [key=0, style=solid];
m3_859 -> m3_861  [key=1, color=darkseagreen4, label=articles1, style=dashed];
m3_859 -> m3_862  [key=1, color=darkseagreen4, label=articles1, style=dashed];
m3_859 -> m3_864  [key=1, color=darkseagreen4, label=articles1, style=dashed];
m3_859 -> m3_865  [key=1, color=darkseagreen4, label=articles1, style=dashed];
m3_859 -> m3_868  [key=2, style=dotted];
m3_861 -> m3_862  [key=0, style=solid];
m3_862 -> m3_863  [key=0, style=solid];
m3_862 -> m3_12  [key=2, style=dotted];
m3_864 -> m3_865  [key=0, style=solid];
m3_864 -> m3_13  [key=2, style=dotted];
m3_865 -> m3_866  [key=0, style=solid];
m3_865 -> m3_13  [key=2, style=dotted];
m3_863 -> m3_864  [key=0, style=solid];
m3_863 -> m3_865  [key=1, color=darkseagreen4, label=articles2, style=dashed];
m3_863 -> m3_14  [key=2, style=dotted];
m3_866 -> m3_856  [key=0, color=blue, style=bold];
m3_920 -> m3_921  [key=0, style=solid];
m3_921 -> m3_922  [key=0, style=solid];
m3_921 -> m3_923  [key=1, color=darkseagreen4, label=deserialized, style=dashed];
m3_921 -> m3_924  [key=1, color=darkseagreen4, label=deserialized, style=dashed];
m3_921 -> m3_14  [key=2, style=dotted];
m3_922 -> m3_923  [key=0, style=solid];
m3_922 -> m3_13  [key=2, style=dotted];
m3_923 -> m3_924  [key=0, style=solid];
m3_923 -> m3_13  [key=2, style=dotted];
m3_924 -> m3_925  [key=0, style=solid];
m3_924 -> m3_13  [key=2, style=dotted];
m3_925 -> m3_920  [key=0, color=blue, style=bold];
m3_135 -> m3_136  [key=0, style=solid];
m3_136 -> m3_135  [key=0, color=blue, style=bold];
m3_607 -> m3_608  [key=0, style=solid];
m3_608 -> m3_609  [key=0, style=solid];
m3_608 -> m3_610  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_608 -> m3_611  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_608 -> m3_612  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_608 -> m3_615  [key=2, style=dotted];
m3_609 -> m3_610  [key=0, style=solid];
m3_610 -> m3_611  [key=0, style=solid];
m3_611 -> m3_612  [key=0, style=solid];
m3_612 -> m3_12  [key=2, style=dotted];
m3_612 -> m3_613  [key=0, style=solid];
m3_613 -> m3_614  [key=0, style=solid];
m3_613 -> m3_13  [key=2, style=dotted];
m3_614 -> m3_607  [key=0, color=blue, style=bold];
m3_663 -> m3_664  [key=0, style=solid];
m3_664 -> m3_665  [key=0, style=solid];
m3_664 -> m3_674  [key=1, color=darkseagreen4, label=json, style=dashed];
m3_665 -> m3_666  [key=0, style=solid];
m3_665 -> m3_667  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_665 -> m3_668  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_665 -> m3_669  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_665 -> m3_670  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_665 -> m3_671  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_665 -> m3_672  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_665 -> m3_673  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_665 -> m3_14  [key=2, style=dotted];
m3_674 -> m3_675  [key=0, style=solid];
m3_674 -> m3_13  [key=2, style=dotted];
m3_666 -> m3_667  [key=0, style=solid];
m3_666 -> m3_13  [key=2, style=dotted];
m3_667 -> m3_668  [key=0, style=solid];
m3_667 -> m3_13  [key=2, style=dotted];
m3_668 -> m3_669  [key=0, style=solid];
m3_668 -> m3_636  [key=2, style=dotted];
m3_668 -> m3_13  [key=2, style=dotted];
m3_669 -> m3_670  [key=0, style=solid];
m3_669 -> m3_636  [key=2, style=dotted];
m3_669 -> m3_13  [key=2, style=dotted];
m3_670 -> m3_671  [key=0, style=solid];
m3_670 -> m3_636  [key=2, style=dotted];
m3_670 -> m3_13  [key=2, style=dotted];
m3_671 -> m3_672  [key=0, style=solid];
m3_671 -> m3_13  [key=2, style=dotted];
m3_672 -> m3_673  [key=0, style=solid];
m3_672 -> m3_13  [key=2, style=dotted];
m3_673 -> m3_12  [key=2, style=dotted];
m3_673 -> m3_674  [key=0, style=solid];
m3_675 -> m3_663  [key=0, color=blue, style=bold];
m3_938 -> m3_939  [key=0, style=solid];
m3_938 -> m3_940  [key=1, color=darkseagreen4, label=string, style=dashed];
m3_939 -> m3_940  [key=0, style=solid];
m3_940 -> m3_941  [key=0, style=solid];
m3_941 -> m3_938  [key=0, color=blue, style=bold];
m3_92 -> m3_93  [key=0, style=solid];
m3_93 -> m3_92  [key=0, color=blue, style=bold];
m3_1111 -> m3_1112  [key=0, style=solid];
m3_1112 -> m3_1113  [key=0, style=solid];
m3_1112 -> m3_1114  [key=2, style=dotted];
m3_1113 -> m3_1111  [key=0, color=blue, style=bold];
m3_598 -> m3_599  [key=0, style=solid];
m3_599 -> m3_600  [key=0, style=solid];
m3_599 -> m3_601  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_599 -> m3_602  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_599 -> m3_603  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_599 -> m3_606  [key=2, style=dotted];
m3_600 -> m3_601  [key=0, style=solid];
m3_601 -> m3_602  [key=0, style=solid];
m3_602 -> m3_603  [key=0, style=solid];
m3_603 -> m3_12  [key=2, style=dotted];
m3_603 -> m3_604  [key=0, style=solid];
m3_604 -> m3_605  [key=0, style=solid];
m3_604 -> m3_13  [key=2, style=dotted];
m3_605 -> m3_598  [key=0, color=blue, style=bold];
m3_911 -> m3_1058  [key=0, style=solid];
m3_1058 -> m3_1059  [key=0, style=solid];
m3_1058 -> m3_81  [key=2, style=dotted];
m3_1059 -> m3_911  [key=0, color=blue, style=bold];
m3_996 -> m3_998  [key=0, style=solid];
m3_998 -> m3_999  [key=0, style=solid];
m3_998 -> m3_81  [key=2, style=dotted];
m3_999 -> m3_1000  [key=0, style=solid];
m3_999 -> m3_1004  [key=0, style=solid];
m3_999 -> m3_1005  [key=2, style=dotted];
m3_1000 -> m3_1001  [key=0, style=solid];
m3_1004 -> m3_996  [key=0, color=blue, style=bold];
m3_1001 -> m3_1006  [key=2, style=dotted];
m3_1001 -> m3_1002  [key=0, style=solid];
m3_1002 -> m3_1003  [key=0, style=solid];
m3_1002 -> m3_1004  [key=0, style=solid];
m3_1003 -> m3_1002  [key=0, style=solid];
m3_380 -> m3_381  [key=0, style=solid];
m3_381 -> m3_14  [key=2, style=dotted];
m3_381 -> m3_382  [key=0, style=solid];
m3_381 -> m3_383  [key=1, color=darkseagreen4, label=dic, style=dashed];
m3_381 -> m3_384  [key=1, color=darkseagreen4, label=dic, style=dashed];
m3_381 -> m3_385  [key=1, color=darkseagreen4, label=dic, style=dashed];
m3_382 -> m3_383  [key=0, style=solid];
m3_382 -> m3_13  [key=2, style=dotted];
m3_383 -> m3_384  [key=0, style=solid];
m3_383 -> m3_13  [key=2, style=dotted];
m3_384 -> m3_385  [key=0, style=solid];
m3_384 -> m3_13  [key=2, style=dotted];
m3_385 -> m3_386  [key=0, style=solid];
m3_385 -> m3_387  [key=2, style=dotted];
m3_386 -> m3_380  [key=0, color=blue, style=bold];
m3_71 -> m3_72  [key=0, style=solid];
m3_72 -> m3_73  [key=0, style=solid];
m3_72 -> m3_62  [key=2, style=dotted];
m3_73 -> m3_12  [key=2, style=dotted];
m3_73 -> m3_74  [key=0, style=solid];
m3_73 -> m3_75  [key=1, color=darkseagreen4, label=output, style=dashed];
m3_74 -> m3_75  [key=0, style=solid];
m3_74 -> m3_13  [key=2, style=dotted];
m3_75 -> m3_14  [key=2, style=dotted];
m3_75 -> m3_76  [key=0, style=solid];
m3_76 -> m3_77  [key=0, style=solid];
m3_76 -> m3_63  [key=2, style=dotted];
m3_76 -> m3_13  [key=2, style=dotted];
m3_77 -> m3_71  [key=0, color=blue, style=bold];
m3_373 -> m3_374  [key=0, style=solid];
m3_374 -> m3_14  [key=2, style=dotted];
m3_374 -> m3_375  [key=0, style=solid];
m3_374 -> m3_376  [key=1, color=darkseagreen4, label=list, style=dashed];
m3_374 -> m3_377  [key=1, color=darkseagreen4, label=list, style=dashed];
m3_374 -> m3_378  [key=1, color=darkseagreen4, label=list, style=dashed];
m3_375 -> m3_376  [key=0, style=solid];
m3_375 -> m3_13  [key=2, style=dotted];
m3_376 -> m3_377  [key=0, style=solid];
m3_376 -> m3_13  [key=2, style=dotted];
m3_377 -> m3_378  [key=0, style=solid];
m3_377 -> m3_13  [key=2, style=dotted];
m3_378 -> m3_379  [key=0, style=solid];
m3_378 -> m3_13  [key=2, style=dotted];
m3_379 -> m3_373  [key=0, color=blue, style=bold];
m3_625 -> m3_626  [key=0, style=solid];
m3_626 -> m3_627  [key=0, style=solid];
m3_627 -> m3_14  [key=2, style=dotted];
m3_627 -> m3_628  [key=0, style=solid];
m3_627 -> m3_629  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_627 -> m3_630  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_627 -> m3_631  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_627 -> m3_632  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_627 -> m3_633  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_627 -> m3_634  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_628 -> m3_629  [key=0, style=solid];
m3_628 -> m3_13  [key=2, style=dotted];
m3_629 -> m3_630  [key=0, style=solid];
m3_629 -> m3_13  [key=2, style=dotted];
m3_630 -> m3_631  [key=0, style=solid];
m3_630 -> m3_636  [key=2, style=dotted];
m3_630 -> m3_13  [key=2, style=dotted];
m3_631 -> m3_632  [key=0, style=solid];
m3_631 -> m3_636  [key=2, style=dotted];
m3_631 -> m3_13  [key=2, style=dotted];
m3_632 -> m3_633  [key=0, style=solid];
m3_632 -> m3_636  [key=2, style=dotted];
m3_632 -> m3_13  [key=2, style=dotted];
m3_633 -> m3_634  [key=0, style=solid];
m3_633 -> m3_13  [key=2, style=dotted];
m3_634 -> m3_635  [key=0, style=solid];
m3_634 -> m3_13  [key=2, style=dotted];
m3_635 -> m3_625  [key=0, color=blue, style=bold];
m3_793 -> m3_794  [key=0, style=solid];
m3_794 -> m3_795  [key=0, style=solid];
m3_795 -> m3_14  [key=2, style=dotted];
m3_795 -> m3_796  [key=0, style=solid];
m3_795 -> m3_797  [key=1, color=darkseagreen4, label=o, style=dashed];
m3_795 -> m3_798  [key=1, color=darkseagreen4, label=o, style=dashed];
m3_796 -> m3_797  [key=0, style=solid];
m3_796 -> m3_13  [key=2, style=dotted];
m3_797 -> m3_798  [key=0, style=solid];
m3_797 -> m3_13  [key=2, style=dotted];
m3_798 -> m3_799  [key=0, style=solid];
m3_798 -> m3_13  [key=2, style=dotted];
m3_799 -> m3_793  [key=0, color=blue, style=bold];
m3_959 -> m3_960  [key=0, style=solid];
m3_960 -> m3_961  [key=0, style=solid];
m3_960 -> m3_962  [key=2, style=dotted];
m3_961 -> m3_959  [key=0, color=blue, style=bold];
m3_203 -> m3_204  [key=0, style=solid];
m3_204 -> m3_205  [key=0, style=solid];
m3_204 -> m3_131  [key=2, style=dotted];
m3_204 -> m3_206  [key=1, color=darkseagreen4, label="lambda expression", style=dashed];
m3_205 -> m3_203  [key=0, color=blue, style=bold];
m3_206 -> m3_207  [key=0, style=solid];
m3_561 -> m3_562  [key=0, style=solid];
m3_562 -> m3_563  [key=0, style=solid];
m3_562 -> m3_566  [key=1, color=darkseagreen4, label=json, style=dashed];
m3_563 -> m3_564  [key=0, style=solid];
m3_563 -> m3_131  [key=2, style=dotted];
m3_563 -> m3_565  [key=1, color=darkseagreen4, label="lambda expression", style=dashed];
m3_566 -> m3_14  [key=2, style=dotted];
m3_566 -> m3_567  [key=0, style=solid];
m3_564 -> m3_561  [key=0, color=blue, style=bold];
m3_565 -> m3_566  [key=0, style=solid];
m3_79 -> m3_80  [key=0, style=solid];
m3_79 -> m3_81  [key=2, style=dotted];
m3_80 -> m3_78  [key=0, color=blue, style=bold];
m3_153 -> m3_154  [key=0, style=solid];
m3_154 -> m3_153  [key=0, color=blue, style=bold];
m3_985 -> m3_986  [key=0, style=solid];
m3_985 -> m3_991  [key=1, color=darkseagreen4, label=string, style=dashed];
m3_986 -> m3_987  [key=0, style=solid];
m3_991 -> m3_992  [key=0, style=solid];
m3_991 -> m3_995  [key=2, style=dotted];
m3_987 -> m3_988  [key=0, style=solid];
m3_988 -> m3_989  [key=0, style=solid];
m3_989 -> m3_990  [key=0, style=solid];
m3_990 -> m3_991  [key=0, style=solid];
m3_992 -> m3_996  [key=2, style=dotted];
m3_992 -> m3_993  [key=0, style=solid];
m3_995 -> m3_1017  [key=0, style=solid];
m3_995 -> m3_1049  [key=1, color=darkseagreen4, label=string, style=dashed];
m3_993 -> m3_994  [key=0, style=solid];
m3_993 -> m3_997  [key=2, style=dotted];
m3_994 -> m3_985  [key=0, color=blue, style=bold];
m3_997 -> m3_1007  [key=0, style=solid];
m3_974 -> m3_975  [key=0, style=solid];
m3_975 -> m3_976  [key=0, style=solid];
m3_975 -> m3_977  [key=2, style=dotted];
m3_976 -> m3_974  [key=0, color=blue, style=bold];
m3_1017 -> m3_1018  [key=0, style=solid];
m3_1017 -> m3_1052  [key=2, style=dotted];
m3_1049 -> m3_1050  [key=0, style=solid];
m3_1049 -> m3_1051  [key=0, style=solid];
m3_1018 -> m3_1019  [key=0, style=solid];
m3_1018 -> m3_1020  [key=1, color=darkseagreen4, label=root, style=dashed];
m3_1018 -> m3_1022  [key=1, color=darkseagreen4, label=root, style=dashed];
m3_1019 -> m3_1020  [key=0, style=solid];
m3_1019 -> m3_1022  [key=1, color=darkseagreen4, label=ns, style=dashed];
m3_1019 -> m3_1023  [key=1, color=darkseagreen4, label=ns, style=dashed];
m3_1020 -> m3_1021  [key=0, style=solid];
m3_1020 -> m3_1023  [key=1, color=darkseagreen4, label=auth, style=dashed];
m3_1020 -> m3_1024  [key=1, color=darkseagreen4, label=auth, style=dashed];
m3_1020 -> m3_1054  [key=2, style=dotted];
m3_1020 -> m3_1053  [key=2, style=dotted];
m3_1022 -> m3_1023  [key=0, style=solid];
m3_1022 -> m3_1024  [key=1, color=darkseagreen4, label=auth, style=dashed];
m3_1022 -> m3_1054  [key=2, style=dotted];
m3_1022 -> m3_1053  [key=2, style=dotted];
m3_1023 -> m3_1024  [key=0, style=solid];
m3_1023 -> m3_1027  [key=1, color=darkseagreen4, label=xNodeUser, style=dashed];
m3_1023 -> m3_1028  [key=1, color=darkseagreen4, label=xNodeUser, style=dashed];
m3_1023 -> m3_1054  [key=2, style=dotted];
m3_1023 -> m3_1053  [key=2, style=dotted];
m3_1021 -> m3_1022  [key=0, style=solid];
m3_1021 -> m3_1023  [key=0, style=solid];
m3_1024 -> m3_1025  [key=0, style=solid];
m3_1024 -> m3_1029  [key=1, color=darkseagreen4, label=eduPers, style=dashed];
m3_1024 -> m3_1030  [key=1, color=darkseagreen4, label=eduPers, style=dashed];
m3_1024 -> m3_1054  [key=2, style=dotted];
m3_1024 -> m3_1053  [key=2, style=dotted];
m3_1027 -> m3_1028  [key=0, style=solid];
m3_1027 -> m3_1034  [key=0, style=solid];
m3_1028 -> m3_1029  [key=0, style=solid];
m3_1028 -> m3_1034  [key=1, color=darkseagreen4, label=casUser, style=dashed];
m3_1028 -> m3_1035  [key=1, color=darkseagreen4, label=casUser, style=dashed];
m3_1025 -> m3_1026  [key=0, style=solid];
m3_1025 -> m3_1034  [key=1, color=darkseagreen4, label=casUser, style=dashed];
m3_1025 -> m3_1035  [key=1, color=darkseagreen4, label=casUser, style=dashed];
m3_1029 -> m3_1030  [key=0, style=solid];
m3_1029 -> m3_1034  [key=0, style=solid];
m3_1030 -> m3_1055  [key=2, style=dotted];
m3_1030 -> m3_1031  [key=0, style=solid];
m3_1030 -> m3_1032  [key=1, color=darkseagreen4, label=xPersonValue, style=dashed];
m3_1030 -> m3_1033  [key=1, color=darkseagreen4, label=xPersonValue, style=dashed];
m3_1030 -> m3_1034  [key=0, style=solid];
m3_1026 -> m3_1027  [key=0, style=solid];
m3_1026 -> m3_1031  [key=1, color=darkseagreen4, label=eduPerson, style=dashed];
m3_1026 -> m3_1032  [key=1, color=darkseagreen4, label=eduPerson, style=dashed];
m3_1026 -> m3_1033  [key=1, color=darkseagreen4, label=eduPerson, style=dashed];
m3_1026 -> m3_1036  [key=1, color=darkseagreen4, label=eduPerson, style=dashed];
m3_1026 -> m3_1037  [key=1, color=darkseagreen4, label=eduPerson, style=dashed];
m3_1026 -> m3_1038  [key=1, color=darkseagreen4, label=eduPerson, style=dashed];
m3_1026 -> m3_1039  [key=1, color=darkseagreen4, label=eduPerson, style=dashed];
m3_1026 -> m3_1040  [key=1, color=darkseagreen4, label=eduPerson, style=dashed];
m3_1026 -> m3_1041  [key=1, color=darkseagreen4, label=eduPerson, style=dashed];
m3_1026 -> m3_1042  [key=1, color=darkseagreen4, label=eduPerson, style=dashed];
m3_1026 -> m3_1043  [key=1, color=darkseagreen4, label=eduPerson, style=dashed];
m3_1026 -> m3_1044  [key=1, color=darkseagreen4, label=eduPerson, style=dashed];
m3_1026 -> m3_1045  [key=1, color=darkseagreen4, label=eduPerson, style=dashed];
m3_1026 -> m3_1046  [key=1, color=darkseagreen4, label=eduPerson, style=dashed];
m3_1026 -> m3_1047  [key=1, color=darkseagreen4, label=eduPerson, style=dashed];
m3_1026 -> m3_1048  [key=1, color=darkseagreen4, label=eduPerson, style=dashed];
m3_1026 -> m3_62  [key=2, style=dotted];
m3_1034 -> m3_1035  [key=0, style=solid];
m3_1034 -> m3_1036  [key=0, style=solid];
m3_1034 -> m3_1016  [key=2, style=dotted];
m3_1035 -> m3_1036  [key=0, style=solid];
m3_1031 -> m3_1032  [key=0, style=solid];
m3_1031 -> m3_1033  [key=0, style=solid];
m3_1031 -> m3_1056  [key=2, style=dotted];
m3_1032 -> m3_1057  [key=2, style=dotted];
m3_1032 -> m3_1030  [key=0, style=solid];
m3_1033 -> m3_1030  [key=0, style=solid];
m3_1036 -> m3_1037  [key=0, style=solid];
m3_1036 -> m3_1038  [key=0, style=solid];
m3_1036 -> m3_1005  [key=2, style=dotted];
m3_1037 -> m3_1038  [key=0, style=solid];
m3_1038 -> m3_1039  [key=0, style=solid];
m3_1038 -> m3_1040  [key=0, style=solid];
m3_1038 -> m3_1005  [key=2, style=dotted];
m3_1039 -> m3_1040  [key=0, style=solid];
m3_1040 -> m3_1041  [key=0, style=solid];
m3_1040 -> m3_1042  [key=0, style=solid];
m3_1040 -> m3_1005  [key=2, style=dotted];
m3_1041 -> m3_1042  [key=0, style=solid];
m3_1042 -> m3_1043  [key=0, style=solid];
m3_1042 -> m3_1044  [key=0, style=solid];
m3_1042 -> m3_1005  [key=2, style=dotted];
m3_1043 -> m3_1044  [key=0, style=solid];
m3_1044 -> m3_1045  [key=0, style=solid];
m3_1044 -> m3_1046  [key=0, style=solid];
m3_1044 -> m3_1005  [key=2, style=dotted];
m3_1045 -> m3_1046  [key=0, style=solid];
m3_1046 -> m3_1047  [key=0, style=solid];
m3_1046 -> m3_1048  [key=0, style=solid];
m3_1046 -> m3_1005  [key=2, style=dotted];
m3_1047 -> m3_1048  [key=0, style=solid];
m3_1048 -> m3_1049  [key=0, style=solid];
m3_1050 -> m3_1051  [key=0, style=solid];
m3_1051 -> m3_995  [key=0, color=blue, style=bold];
m3_1137 -> m3_1138  [key=0, style=solid];
m3_1138 -> m3_1139  [key=0, style=solid];
m3_1139 -> m3_1137  [key=0, color=blue, style=bold];
m3_64 -> m3_65  [key=0, style=solid];
m3_65 -> m3_66  [key=0, style=solid];
m3_65 -> m3_62  [key=2, style=dotted];
m3_66 -> m3_12  [key=2, style=dotted];
m3_66 -> m3_67  [key=0, style=solid];
m3_66 -> m3_68  [key=1, color=darkseagreen4, label=output, style=dashed];
m3_67 -> m3_68  [key=0, style=solid];
m3_67 -> m3_13  [key=2, style=dotted];
m3_68 -> m3_14  [key=2, style=dotted];
m3_68 -> m3_69  [key=0, style=solid];
m3_69 -> m3_70  [key=0, style=solid];
m3_69 -> m3_63  [key=2, style=dotted];
m3_69 -> m3_13  [key=2, style=dotted];
m3_70 -> m3_64  [key=0, color=blue, style=bold];
m3_716 -> m3_717  [key=0, style=solid];
m3_717 -> m3_718  [key=0, style=solid];
m3_717 -> m3_721  [key=1, color=darkseagreen4, label=json, style=dashed];
m3_718 -> m3_719  [key=0, style=solid];
m3_718 -> m3_131  [key=2, style=dotted];
m3_718 -> m3_720  [key=1, color=darkseagreen4, label="lambda expression", style=dashed];
m3_721 -> m3_14  [key=2, style=dotted];
m3_721 -> m3_722  [key=0, style=solid];
m3_719 -> m3_716  [key=0, color=blue, style=bold];
m3_720 -> m3_721  [key=0, style=solid];
m3_1108 -> m3_1109  [key=0, style=solid];
m3_1109 -> m3_1110  [key=0, style=solid];
m3_1109 -> m3_1102  [key=2, style=dotted];
m3_1110 -> m3_1108  [key=0, color=blue, style=bold];
m3_1102 -> m3_1103  [key=0, style=solid];
m3_1102 -> m3_1105  [key=0, color=crimson, style=bold];
m3_1102 -> m3_1106  [key=0, color=crimson, style=bold];
m3_333 -> m3_334  [key=0, style=solid];
m3_334 -> m3_333  [key=0, color=blue, style=bold];
m3_495 -> m3_496  [key=0, style=solid];
m3_496 -> m3_497  [key=0, style=solid];
m3_496 -> m3_498  [key=1, color=darkseagreen4, label=p, style=dashed];
m3_496 -> m3_499  [key=1, color=darkseagreen4, label=p, style=dashed];
m3_496 -> m3_492  [key=2, style=dotted];
m3_497 -> m3_498  [key=0, style=solid];
m3_498 -> m3_499  [key=0, style=solid];
m3_498 -> m3_328  [key=2, style=dotted];
m3_498 -> m3_81  [key=2, style=dotted];
m3_498 -> m3_501  [key=2, style=dotted];
m3_498 -> m3_494  [key=2, style=dotted];
m3_499 -> m3_500  [key=0, style=solid];
m3_499 -> m3_13  [key=2, style=dotted];
m3_500 -> m3_495  [key=0, color=blue, style=bold];
m3_800 -> m3_801  [key=0, style=solid];
m3_801 -> m3_802  [key=0, style=solid];
m3_801 -> m3_804  [key=1, color=darkseagreen4, label=name, style=dashed];
m3_801 -> m3_805  [key=1, color=darkseagreen4, label=name, style=dashed];
m3_801 -> m3_806  [key=1, color=darkseagreen4, label=name, style=dashed];
m3_801 -> m3_814  [key=2, style=dotted];
m3_802 -> m3_815  [key=2, style=dotted];
m3_802 -> m3_803  [key=0, style=solid];
m3_802 -> m3_804  [key=1, color=darkseagreen4, label=p1, style=dashed];
m3_804 -> m3_805  [key=0, style=solid];
m3_805 -> m3_806  [key=0, style=solid];
m3_806 -> m3_807  [key=0, style=solid];
m3_806 -> m3_808  [key=1, color=darkseagreen4, label=json, style=dashed];
m3_806 -> m3_241  [key=2, style=dotted];
m3_803 -> m3_815  [key=2, style=dotted];
m3_803 -> m3_804  [key=0, style=solid];
m3_803 -> m3_805  [key=1, color=darkseagreen4, label=p2, style=dashed];
m3_807 -> m3_808  [key=0, style=solid];
m3_807 -> m3_256  [key=2, style=dotted];
m3_808 -> m3_14  [key=2, style=dotted];
m3_808 -> m3_809  [key=0, style=solid];
m3_808 -> m3_810  [key=1, color=darkseagreen4, label=newName, style=dashed];
m3_808 -> m3_811  [key=1, color=darkseagreen4, label=newName, style=dashed];
m3_808 -> m3_812  [key=1, color=darkseagreen4, label=newName, style=dashed];
m3_809 -> m3_810  [key=0, style=solid];
m3_809 -> m3_13  [key=2, style=dotted];
m3_810 -> m3_811  [key=0, style=solid];
m3_810 -> m3_13  [key=2, style=dotted];
m3_811 -> m3_812  [key=0, style=solid];
m3_811 -> m3_13  [key=2, style=dotted];
m3_812 -> m3_813  [key=0, style=solid];
m3_812 -> m3_13  [key=2, style=dotted];
m3_813 -> m3_800  [key=0, color=blue, style=bold];
m3_242 -> m3_243  [key=0, style=solid];
m3_243 -> m3_244  [key=0, style=solid];
m3_243 -> m3_245  [key=1, color=darkseagreen4, label=onebasedArray, style=dashed];
m3_243 -> m3_246  [key=1, color=darkseagreen4, label=onebasedArray, style=dashed];
m3_243 -> m3_248  [key=1, color=darkseagreen4, label=onebasedArray, style=dashed];
m3_243 -> m3_251  [key=2, style=dotted];
m3_244 -> m3_245  [key=0, style=solid];
m3_244 -> m3_246  [key=1, color=darkseagreen4, label=i, style=dashed];
m3_244 -> m3_247  [key=1, color=darkseagreen4, label=i, style=dashed];
m3_244 -> m3_252  [key=2, style=dotted];
m3_245 -> m3_246  [key=0, style=solid];
m3_245 -> m3_248  [key=0, style=solid];
m3_245 -> m3_253  [key=2, style=dotted];
m3_246 -> m3_255  [key=2, style=dotted];
m3_246 -> m3_247  [key=0, style=solid];
m3_246 -> m3_254  [key=2, style=dotted];
m3_248 -> m3_249  [key=0, style=solid];
m3_248 -> m3_241  [key=2, style=dotted];
m3_247 -> m3_245  [key=0, style=solid];
m3_247 -> m3_247  [key=1, color=darkseagreen4, label=i, style=dashed];
m3_249 -> m3_250  [key=0, style=solid];
m3_249 -> m3_256  [key=2, style=dotted];
m3_250 -> m3_242  [key=0, color=blue, style=bold];
m3_219 -> m3_220  [key=0, style=solid];
m3_220 -> m3_221  [key=0, style=solid];
m3_220 -> m3_131  [key=2, style=dotted];
m3_220 -> m3_222  [key=1, color=darkseagreen4, label="lambda expression", style=dashed];
m3_221 -> m3_219  [key=0, color=blue, style=bold];
m3_222 -> m3_223  [key=0, style=solid];
m3_780 -> m3_781  [key=0, style=solid];
m3_781 -> m3_782  [key=0, style=solid];
m3_782 -> m3_14  [key=2, style=dotted];
m3_782 -> m3_783  [key=0, style=solid];
m3_782 -> m3_784  [key=1, color=darkseagreen4, label=o, style=dashed];
m3_782 -> m3_785  [key=1, color=darkseagreen4, label=o, style=dashed];
m3_782 -> m3_786  [key=1, color=darkseagreen4, label=o, style=dashed];
m3_782 -> m3_787  [key=1, color=darkseagreen4, label=o, style=dashed];
m3_782 -> m3_788  [key=1, color=darkseagreen4, label=o, style=dashed];
m3_782 -> m3_789  [key=1, color=darkseagreen4, label=o, style=dashed];
m3_782 -> m3_790  [key=1, color=darkseagreen4, label=o, style=dashed];
m3_782 -> m3_791  [key=1, color=darkseagreen4, label=o, style=dashed];
m3_783 -> m3_784  [key=0, style=solid];
m3_783 -> m3_13  [key=2, style=dotted];
m3_784 -> m3_785  [key=0, style=solid];
m3_784 -> m3_13  [key=2, style=dotted];
m3_785 -> m3_786  [key=0, style=solid];
m3_785 -> m3_13  [key=2, style=dotted];
m3_786 -> m3_787  [key=0, style=solid];
m3_786 -> m3_13  [key=2, style=dotted];
m3_787 -> m3_788  [key=0, style=solid];
m3_787 -> m3_387  [key=2, style=dotted];
m3_788 -> m3_789  [key=0, style=solid];
m3_788 -> m3_13  [key=2, style=dotted];
m3_789 -> m3_790  [key=0, style=solid];
m3_789 -> m3_387  [key=2, style=dotted];
m3_790 -> m3_791  [key=0, style=solid];
m3_790 -> m3_13  [key=2, style=dotted];
m3_791 -> m3_792  [key=0, style=solid];
m3_791 -> m3_13  [key=2, style=dotted];
m3_792 -> m3_780  [key=0, color=blue, style=bold];
m3_942 -> m3_943  [key=0, style=solid];
m3_943 -> m3_944  [key=0, style=solid];
m3_943 -> m3_81  [key=2, style=dotted];
m3_944 -> m3_942  [key=0, color=blue, style=bold];
m3_338 -> m3_339  [key=0, style=solid];
m3_339 -> m3_14  [key=2, style=dotted];
m3_339 -> m3_340  [key=0, style=solid];
m3_339 -> m3_341  [key=1, color=darkseagreen4, label=list, style=dashed];
m3_339 -> m3_342  [key=1, color=darkseagreen4, label=list, style=dashed];
m3_339 -> m3_343  [key=1, color=darkseagreen4, label=list, style=dashed];
m3_340 -> m3_341  [key=0, style=solid];
m3_340 -> m3_13  [key=2, style=dotted];
m3_341 -> m3_342  [key=0, style=solid];
m3_341 -> m3_13  [key=2, style=dotted];
m3_342 -> m3_343  [key=0, style=solid];
m3_342 -> m3_13  [key=2, style=dotted];
m3_343 -> m3_344  [key=0, style=solid];
m3_343 -> m3_13  [key=2, style=dotted];
m3_344 -> m3_338  [key=0, color=blue, style=bold];
m3_345 -> m3_346  [key=0, style=solid];
m3_346 -> m3_14  [key=2, style=dotted];
m3_346 -> m3_347  [key=0, style=solid];
m3_346 -> m3_349  [key=1, color=darkseagreen4, label=d, style=dashed];
m3_347 -> m3_348  [key=0, style=solid];
m3_347 -> m3_13  [key=2, style=dotted];
m3_349 -> m3_350  [key=0, style=solid];
m3_349 -> m3_13  [key=2, style=dotted];
m3_348 -> m3_349  [key=0, style=solid];
m3_348 -> m3_351  [key=2, style=dotted];
m3_350 -> m3_345  [key=0, color=blue, style=bold];
m3_145 -> m3_146  [key=0, style=solid];
m3_146 -> m3_147  [key=0, style=solid];
m3_147 -> m3_14  [key=2, style=dotted];
m3_147 -> m3_148  [key=0, style=solid];
m3_147 -> m3_149  [key=1, color=darkseagreen4, label=l, style=dashed];
m3_147 -> m3_150  [key=1, color=darkseagreen4, label=l, style=dashed];
m3_147 -> m3_151  [key=1, color=darkseagreen4, label=l, style=dashed];
m3_148 -> m3_149  [key=0, style=solid];
m3_148 -> m3_13  [key=2, style=dotted];
m3_149 -> m3_150  [key=0, style=solid];
m3_149 -> m3_13  [key=2, style=dotted];
m3_150 -> m3_151  [key=0, style=solid];
m3_150 -> m3_13  [key=2, style=dotted];
m3_151 -> m3_152  [key=0, style=solid];
m3_151 -> m3_13  [key=2, style=dotted];
m3_152 -> m3_145  [key=0, color=blue, style=bold];
m3_420 -> m3_421  [key=0, style=solid];
m3_421 -> m3_422  [key=0, style=solid];
m3_421 -> m3_291  [key=2, style=dotted];
m3_422 -> m3_420  [key=0, color=blue, style=bold];
m3_906 -> m3_907  [key=0, style=solid];
m3_907 -> m3_911  [key=2, style=dotted];
m3_907 -> m3_908  [key=0, style=solid];
m3_908 -> m3_12  [key=2, style=dotted];
m3_908 -> m3_909  [key=0, style=solid];
m3_908 -> m3_913  [key=1, color=darkseagreen4, label=json, style=dashed];
m3_909 -> m3_131  [key=2, style=dotted];
m3_909 -> m3_910  [key=0, style=solid];
m3_909 -> m3_912  [key=1, color=darkseagreen4, label="lambda expression", style=dashed];
m3_913 -> m3_14  [key=2, style=dotted];
m3_913 -> m3_914  [key=0, style=solid];
m3_910 -> m3_906  [key=0, color=blue, style=bold];
m3_912 -> m3_913  [key=0, style=solid];
m3_113 -> m3_114  [key=0, style=solid];
m3_114 -> m3_115  [key=0, style=solid];
m3_114 -> m3_116  [key=1, color=darkseagreen4, label=c1, style=dashed];
m3_114 -> m3_117  [key=1, color=darkseagreen4, label=c1, style=dashed];
m3_114 -> m3_118  [key=1, color=darkseagreen4, label=c1, style=dashed];
m3_114 -> m3_110  [key=2, style=dotted];
m3_115 -> m3_116  [key=0, style=solid];
m3_116 -> m3_117  [key=0, style=solid];
m3_117 -> m3_118  [key=0, style=solid];
m3_118 -> m3_12  [key=2, style=dotted];
m3_118 -> m3_119  [key=0, style=solid];
m3_110 -> m3_111  [key=0, style=solid];
m3_119 -> m3_14  [key=2, style=dotted];
m3_119 -> m3_120  [key=0, style=solid];
m3_120 -> m3_121  [key=0, style=solid];
m3_120 -> m3_122  [key=1, color=darkseagreen4, label=values, style=dashed];
m3_120 -> m3_123  [key=1, color=darkseagreen4, label=values, style=dashed];
m3_120 -> m3_124  [key=1, color=darkseagreen4, label=values, style=dashed];
m3_120 -> m3_107  [key=2, style=dotted];
m3_121 -> m3_122  [key=0, style=solid];
m3_121 -> m3_13  [key=2, style=dotted];
m3_122 -> m3_123  [key=0, style=solid];
m3_122 -> m3_13  [key=2, style=dotted];
m3_123 -> m3_124  [key=0, style=solid];
m3_123 -> m3_13  [key=2, style=dotted];
m3_124 -> m3_125  [key=0, style=solid];
m3_124 -> m3_13  [key=2, style=dotted];
m3_125 -> m3_113  [key=0, color=blue, style=bold];
m3_201 -> m3_202  [key=0, style=solid];
m3_202 -> m3_201  [key=0, color=blue, style=bold];
m3_963 -> m3_964  [key=0, style=solid];
m3_964 -> m3_965  [key=0, style=solid];
m3_964 -> m3_291  [key=2, style=dotted];
m3_965 -> m3_963  [key=0, color=blue, style=bold];
m3_1088 -> m3_1089  [key=0, style=solid];
m3_1089 -> m3_1090  [key=0, style=solid];
m3_1089 -> m3_1069  [key=2, style=dotted];
m3_1090 -> m3_1088  [key=0, color=blue, style=bold];
m3_1070 -> m3_1071  [key=0, style=solid];
m3_1071 -> m3_1072  [key=0, style=solid];
m3_1071 -> m3_1069  [key=2, style=dotted];
m3_1072 -> m3_1070  [key=0, color=blue, style=bold];
m3_225 -> m3_226  [key=0, style=solid];
m3_226 -> m3_228  [key=2, style=dotted];
m3_226 -> m3_227  [key=0, style=solid];
m3_226 -> m3_229  [key=2, style=dotted];
m3_226 -> m3_81  [key=2, style=dotted];
m3_227 -> m3_225  [key=0, color=blue, style=bold];
m3_30 -> m3_31  [key=0, style=solid];
m3_31 -> m3_32  [key=0, style=solid];
m3_31 -> m3_33  [key=1, color=darkseagreen4, label=stack1, style=dashed];
m3_31 -> m3_40  [key=2, style=dotted];
m3_32 -> m3_41  [key=2, style=dotted];
m3_32 -> m3_33  [key=0, style=solid];
m3_33 -> m3_12  [key=2, style=dotted];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_35  [key=1, color=darkseagreen4, label=output, style=dashed];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_13  [key=2, style=dotted];
m3_35 -> m3_14  [key=2, style=dotted];
m3_35 -> m3_36  [key=0, style=solid];
m3_35 -> m3_37  [key=1, color=darkseagreen4, label=stack2, style=dashed];
m3_36 -> m3_37  [key=0, style=solid];
m3_37 -> m3_38  [key=0, style=solid];
m3_37 -> m3_16  [key=2, style=dotted];
m3_37 -> m3_42  [key=2, style=dotted];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_13  [key=2, style=dotted];
m3_39 -> m3_30  [key=0, color=blue, style=bold];
m3_401 -> m3_402  [key=0, style=solid];
m3_402 -> m3_404  [key=2, style=dotted];
m3_402 -> m3_403  [key=0, style=solid];
m3_403 -> m3_401  [key=0, color=blue, style=bold];
m3_568 -> m3_569  [key=0, style=solid];
m3_569 -> m3_570  [key=0, style=solid];
m3_569 -> m3_81  [key=2, style=dotted];
m3_570 -> m3_62  [key=2, style=dotted];
m3_570 -> m3_571  [key=0, style=solid];
m3_571 -> m3_572  [key=0, style=solid];
m3_572 -> m3_580  [key=2, style=dotted];
m3_572 -> m3_573  [key=0, style=solid];
m3_573 -> m3_62  [key=2, style=dotted];
m3_573 -> m3_574  [key=0, style=solid];
m3_573 -> m3_581  [key=2, style=dotted];
m3_574 -> m3_580  [key=2, style=dotted];
m3_574 -> m3_575  [key=0, style=solid];
m3_575 -> m3_580  [key=2, style=dotted];
m3_575 -> m3_576  [key=0, style=solid];
m3_576 -> m3_580  [key=2, style=dotted];
m3_576 -> m3_577  [key=0, style=solid];
m3_577 -> m3_62  [key=2, style=dotted];
m3_577 -> m3_578  [key=0, style=solid];
m3_577 -> m3_581  [key=2, style=dotted];
m3_578 -> m3_62  [key=2, style=dotted];
m3_578 -> m3_579  [key=0, style=solid];
m3_578 -> m3_581  [key=2, style=dotted];
m3_579 -> m3_568  [key=0, color=blue, style=bold];
m3_423 -> m3_424  [key=0, style=solid];
m3_424 -> m3_425  [key=0, style=solid];
m3_424 -> m3_291  [key=2, style=dotted];
m3_425 -> m3_423  [key=0, color=blue, style=bold];
m3_1097 -> m3_1098  [key=0, style=solid];
m3_1098 -> m3_1099  [key=0, style=solid];
m3_1098 -> m3_1093  [key=2, style=dotted];
m3_1099 -> m3_1097  [key=0, color=blue, style=bold];
m3_1093 -> m3_1094  [key=0, style=solid];
m3_1103 -> m3_1104  [key=0, style=solid];
m3_1103 -> m3_1106  [key=0, style=solid];
m3_1105 -> m3_1104  [key=0, style=solid];
m3_1106 -> m3_1107  [key=0, style=solid];
m3_1104 -> m3_1105  [key=0, style=solid];
m3_1104 -> m3_1107  [key=0, style=solid];
m3_1107 -> m3_1102  [key=0, color=blue, style=bold];
m3_759 -> m3_760  [key=0, style=solid];
m3_760 -> m3_757  [key=2, style=dotted];
m3_760 -> m3_761  [key=0, style=solid];
m3_761 -> m3_762  [key=0, style=solid];
m3_762 -> m3_763  [key=0, style=solid];
m3_762 -> m3_81  [key=2, style=dotted];
m3_763 -> m3_758  [key=2, style=dotted];
m3_763 -> m3_328  [key=2, style=dotted];
m3_763 -> m3_764  [key=0, style=solid];
m3_763 -> m3_765  [key=1, color=darkseagreen4, label=json, style=dashed];
m3_764 -> m3_256  [key=2, style=dotted];
m3_764 -> m3_765  [key=0, style=solid];
m3_764 -> m3_769  [key=2, style=dotted];
m3_765 -> m3_770  [key=2, style=dotted];
m3_765 -> m3_328  [key=2, style=dotted];
m3_765 -> m3_766  [key=0, style=solid];
m3_765 -> m3_767  [key=1, color=darkseagreen4, label=values2, style=dashed];
m3_766 -> m3_767  [key=0, style=solid];
m3_766 -> m3_13  [key=2, style=dotted];
m3_767 -> m3_768  [key=0, style=solid];
m3_767 -> m3_13  [key=2, style=dotted];
m3_768 -> m3_759  [key=0, color=blue, style=bold];
m3_582 -> m3_583  [key=0, style=solid];
m3_583 -> m3_568  [key=2, style=dotted];
m3_583 -> m3_584  [key=0, style=solid];
m3_584 -> m3_241  [key=2, style=dotted];
m3_584 -> m3_585  [key=0, style=solid];
m3_585 -> m3_256  [key=2, style=dotted];
m3_585 -> m3_586  [key=0, style=solid];
m3_586 -> m3_582  [key=0, color=blue, style=bold];
m3_1007 -> m3_1005  [key=2, style=dotted];
m3_1007 -> m3_1008  [key=0, style=solid];
m3_1007 -> m3_1014  [key=0, style=solid];
m3_1008 -> m3_1009  [key=0, style=solid];
m3_1008 -> m3_1011  [key=0, style=solid];
m3_1008 -> m3_1013  [key=0, style=solid];
m3_1008 -> m3_1016  [key=2, style=dotted];
m3_1014 -> m3_1015  [key=0, style=solid];
m3_1009 -> m3_1010  [key=0, style=solid];
m3_1011 -> m3_1012  [key=0, style=solid];
m3_1013 -> m3_1015  [key=0, style=solid];
m3_1010 -> m3_1015  [key=0, style=solid];
m3_1015 -> m3_997  [key=0, color=blue, style=bold];
m3_1012 -> m3_1015  [key=0, style=solid];
m3_616 -> m3_617  [key=0, style=solid];
m3_617 -> m3_618  [key=0, style=solid];
m3_617 -> m3_619  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_617 -> m3_620  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_617 -> m3_621  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_617 -> m3_624  [key=2, style=dotted];
m3_618 -> m3_619  [key=0, style=solid];
m3_619 -> m3_620  [key=0, style=solid];
m3_620 -> m3_621  [key=0, style=solid];
m3_621 -> m3_241  [key=2, style=dotted];
m3_621 -> m3_622  [key=0, style=solid];
m3_622 -> m3_256  [key=2, style=dotted];
m3_622 -> m3_623  [key=0, style=solid];
m3_623 -> m3_616  [key=0, color=blue, style=bold];
m3_111 -> m3_112  [key=0, style=solid];
m3_111 -> m3_108  [key=2, style=dotted];
m3_112 -> m3_110  [key=0, color=blue, style=bold];
m3_108 -> m3_109  [key=0, style=solid];
m3_417 -> m3_418  [key=0, style=solid];
m3_418 -> m3_419  [key=0, style=solid];
m3_419 -> m3_417  [key=0, color=blue, style=bold];
m3_836 -> m3_837  [key=0, color=green, style=solid];
m3_837 -> m3_838  [key=0, color=green, style=solid];
m3_838 -> m3_839  [key=0, color=green, style=solid];
m3_838 -> m3_840  [key=1, color=green, label=foo1, style=dashed];
m3_838 -> m3_851  [key=2, color=green, style=dotted];
m3_839 -> m3_853  [key=2, color=green, style=dotted];
m3_839 -> m3_852  [key=2, color=green, style=dotted];
m3_839 -> m3_840  [key=0, color=green, style=solid];
m3_840 -> m3_12  [key=2, color=green, style=dotted];
m3_840 -> m3_841  [key=0, color=green, style=solid];
m3_851 -> m3_1100  [key=0, style=solid];
m3_841 -> m3_842  [key=0, color=green, style=solid];
m3_841 -> m3_13  [key=2, color=green, style=dotted];
m3_842 -> m3_843  [key=0, color=green, style=solid];
m3_842 -> m3_844  [key=1, color=green, label=foo2, style=dashed];
m3_842 -> m3_851  [key=2, color=green, style=dotted];
m3_843 -> m3_853  [key=2, color=green, style=dotted];
m3_843 -> m3_844  [key=0, color=green, style=solid];
m3_843 -> m3_854  [key=2, color=green, style=dotted];
m3_844 -> m3_12  [key=2, color=green, style=dotted];
m3_844 -> m3_845  [key=0, color=green, style=solid];
m3_845 -> m3_846  [key=0, color=green, style=solid];
m3_845 -> m3_13  [key=2, color=green, style=dotted];
m3_846 -> m3_847  [key=0, color=green, style=solid];
m3_846 -> m3_848  [key=1, color=green, label=foo3, style=dashed];
m3_846 -> m3_855  [key=2, color=green, style=dotted];
m3_847 -> m3_853  [key=2, color=green, style=dotted];
m3_847 -> m3_848  [key=0, color=green, style=solid];
m3_847 -> m3_854  [key=2, color=green, style=dotted];
m3_848 -> m3_12  [key=2, color=green, style=dotted];
m3_848 -> m3_849  [key=0, color=green, style=solid];
m3_849 -> m3_850  [key=0, color=green, style=solid];
m3_849 -> m3_13  [key=2, color=green, style=dotted];
m3_850 -> m3_836  [key=0, color=green, style=bold];
m3_308 -> m3_309  [key=0, style=solid];
m3_309 -> m3_310  [key=0, style=solid];
m3_309 -> m3_291  [key=2, style=dotted];
m3_310 -> m3_308  [key=0, color=blue, style=bold];
m3_455 -> m3_456  [key=0, style=solid];
m3_456 -> m3_457  [key=0, style=solid];
m3_456 -> m3_458  [key=1, color=darkseagreen4, label=list, style=dashed];
m3_456 -> m3_459  [key=1, color=darkseagreen4, label=list, style=dashed];
m3_456 -> m3_81  [key=2, style=dotted];
m3_457 -> m3_282  [key=2, style=dotted];
m3_457 -> m3_458  [key=0, style=solid];
m3_458 -> m3_282  [key=2, style=dotted];
m3_458 -> m3_459  [key=0, style=solid];
m3_459 -> m3_12  [key=2, style=dotted];
m3_459 -> m3_460  [key=0, style=solid];
m3_459 -> m3_461  [key=1, color=darkseagreen4, label=json, style=dashed];
m3_460 -> m3_461  [key=0, style=solid];
m3_460 -> m3_13  [key=2, style=dotted];
m3_461 -> m3_14  [key=2, style=dotted];
m3_461 -> m3_462  [key=0, style=solid];
m3_461 -> m3_463  [key=1, color=darkseagreen4, label=result, style=dashed];
m3_461 -> m3_464  [key=1, color=darkseagreen4, label=result, style=dashed];
m3_461 -> m3_465  [key=1, color=darkseagreen4, label=result, style=dashed];
m3_461 -> m3_466  [key=1, color=darkseagreen4, label=result, style=dashed];
m3_462 -> m3_463  [key=0, style=solid];
m3_462 -> m3_13  [key=2, style=dotted];
m3_463 -> m3_464  [key=0, style=solid];
m3_463 -> m3_13  [key=2, style=dotted];
m3_464 -> m3_465  [key=0, style=solid];
m3_464 -> m3_13  [key=2, style=dotted];
m3_465 -> m3_466  [key=0, style=solid];
m3_465 -> m3_13  [key=2, style=dotted];
m3_466 -> m3_467  [key=0, style=solid];
m3_466 -> m3_13  [key=2, style=dotted];
m3_467 -> m3_455  [key=0, color=blue, style=bold];
m3_730 -> m3_731  [key=0, style=solid];
m3_731 -> m3_732  [key=0, style=solid];
m3_731 -> m3_737  [key=1, color=darkseagreen4, label=json, style=dashed];
m3_732 -> m3_14  [key=2, style=dotted];
m3_732 -> m3_733  [key=0, style=solid];
m3_732 -> m3_734  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_732 -> m3_735  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_732 -> m3_736  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_737 -> m3_738  [key=0, style=solid];
m3_737 -> m3_13  [key=2, style=dotted];
m3_733 -> m3_734  [key=0, style=solid];
m3_733 -> m3_13  [key=2, style=dotted];
m3_734 -> m3_735  [key=0, style=solid];
m3_734 -> m3_13  [key=2, style=dotted];
m3_735 -> m3_736  [key=0, style=solid];
m3_735 -> m3_13  [key=2, style=dotted];
m3_736 -> m3_12  [key=2, style=dotted];
m3_736 -> m3_737  [key=0, style=solid];
m3_738 -> m3_730  [key=0, color=blue, style=bold];
m3_90 -> m3_91  [key=0, style=solid];
m3_91 -> m3_90  [key=0, color=blue, style=bold];
m3_739 -> m3_740  [key=0, style=solid];
m3_740 -> m3_741  [key=0, style=solid];
m3_740 -> m3_748  [key=1, color=darkseagreen4, label=json, style=dashed];
m3_741 -> m3_14  [key=2, style=dotted];
m3_741 -> m3_742  [key=0, style=solid];
m3_741 -> m3_743  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_741 -> m3_744  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_741 -> m3_745  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_741 -> m3_746  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_741 -> m3_747  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_748 -> m3_749  [key=0, style=solid];
m3_748 -> m3_13  [key=2, style=dotted];
m3_742 -> m3_743  [key=0, style=solid];
m3_742 -> m3_13  [key=2, style=dotted];
m3_743 -> m3_744  [key=0, style=solid];
m3_743 -> m3_13  [key=2, style=dotted];
m3_744 -> m3_745  [key=0, style=solid];
m3_744 -> m3_636  [key=2, style=dotted];
m3_744 -> m3_13  [key=2, style=dotted];
m3_745 -> m3_746  [key=0, style=solid];
m3_745 -> m3_636  [key=2, style=dotted];
m3_745 -> m3_13  [key=2, style=dotted];
m3_746 -> m3_747  [key=0, style=solid];
m3_746 -> m3_636  [key=2, style=dotted];
m3_746 -> m3_13  [key=2, style=dotted];
m3_747 -> m3_12  [key=2, style=dotted];
m3_747 -> m3_748  [key=0, style=solid];
m3_749 -> m3_739  [key=0, color=blue, style=bold];
m3_1132 -> m3_1133  [key=0, style=solid];
m3_1132 -> m3_1134  [key=1, color=darkseagreen4, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_1133 -> m3_1134  [key=0, style=solid];
m3_1134 -> m3_1135  [key=0, style=solid];
m3_1135 -> m3_1136  [key=0, style=solid];
m3_1136 -> m3_1132  [key=0, color=blue, style=bold];
m3_1129 -> m3_1130  [key=0, style=solid];
m3_1130 -> m3_1131  [key=0, style=solid];
m3_1130 -> m3_1114  [key=2, style=dotted];
m3_1131 -> m3_1129  [key=0, color=blue, style=bold];
m3_869 -> m3_870  [key=0, style=solid];
m3_870 -> m3_580  [key=2, style=dotted];
m3_870 -> m3_871  [key=0, style=solid];
m3_870 -> m3_874  [key=1, color=darkseagreen4, label=r1, style=dashed];
m3_871 -> m3_12  [key=2, style=dotted];
m3_871 -> m3_872  [key=0, style=solid];
m3_871 -> m3_873  [key=1, color=darkseagreen4, label=jsonText, style=dashed];
m3_874 -> m3_875  [key=0, style=solid];
m3_874 -> m3_13  [key=2, style=dotted];
m3_872 -> m3_873  [key=0, style=solid];
m3_872 -> m3_13  [key=2, style=dotted];
m3_873 -> m3_14  [key=2, style=dotted];
m3_873 -> m3_874  [key=0, style=solid];
m3_875 -> m3_869  [key=0, color=blue, style=bold];
m3_323 -> m3_324  [key=0, style=solid];
m3_324 -> m3_131  [key=2, style=dotted];
m3_324 -> m3_325  [key=0, style=solid];
m3_324 -> m3_330  [key=1, color=darkseagreen4, label="lambda expression", style=dashed];
m3_325 -> m3_329  [key=2, style=dotted];
m3_325 -> m3_328  [key=2, style=dotted];
m3_325 -> m3_326  [key=0, style=solid];
m3_330 -> m3_331  [key=0, style=solid];
m3_326 -> m3_327  [key=0, style=solid];
m3_326 -> m3_13  [key=2, style=dotted];
m3_327 -> m3_323  [key=0, color=blue, style=bold];
m3_948 -> m3_949  [key=0, style=solid];
m3_949 -> m3_853  [key=2, style=dotted];
m3_949 -> m3_950  [key=0, style=solid];
m3_950 -> m3_948  [key=0, color=blue, style=bold];
m3_511 -> m3_512  [key=0, style=solid];
m3_512 -> m3_62  [key=2, style=dotted];
m3_512 -> m3_513  [key=0, style=solid];
m3_513 -> m3_241  [key=2, style=dotted];
m3_513 -> m3_514  [key=0, style=solid];
m3_513 -> m3_515  [key=1, color=darkseagreen4, label=json, style=dashed];
m3_514 -> m3_256  [key=2, style=dotted];
m3_514 -> m3_515  [key=0, style=solid];
m3_515 -> m3_14  [key=2, style=dotted];
m3_515 -> m3_516  [key=0, style=solid];
m3_515 -> m3_517  [key=1, color=darkseagreen4, label=v2, style=dashed];
m3_515 -> m3_518  [key=1, color=darkseagreen4, label=v2, style=dashed];
m3_515 -> m3_519  [key=1, color=darkseagreen4, label=v2, style=dashed];
m3_516 -> m3_517  [key=0, style=solid];
m3_516 -> m3_13  [key=2, style=dotted];
m3_517 -> m3_518  [key=0, style=solid];
m3_517 -> m3_13  [key=2, style=dotted];
m3_518 -> m3_519  [key=0, style=solid];
m3_518 -> m3_13  [key=2, style=dotted];
m3_519 -> m3_520  [key=0, style=solid];
m3_519 -> m3_13  [key=2, style=dotted];
m3_520 -> m3_511  [key=0, color=blue, style=bold];
m3_637 -> m3_638  [key=0, style=solid];
m3_638 -> m3_639  [key=0, style=solid];
m3_638 -> m3_647  [key=1, color=darkseagreen4, label=json, style=dashed];
m3_639 -> m3_14  [key=2, style=dotted];
m3_639 -> m3_640  [key=0, style=solid];
m3_639 -> m3_641  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_639 -> m3_642  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_639 -> m3_643  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_639 -> m3_644  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_639 -> m3_645  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_639 -> m3_646  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_647 -> m3_648  [key=0, style=solid];
m3_647 -> m3_13  [key=2, style=dotted];
m3_640 -> m3_641  [key=0, style=solid];
m3_640 -> m3_13  [key=2, style=dotted];
m3_641 -> m3_642  [key=0, style=solid];
m3_641 -> m3_13  [key=2, style=dotted];
m3_642 -> m3_643  [key=0, style=solid];
m3_642 -> m3_636  [key=2, style=dotted];
m3_642 -> m3_13  [key=2, style=dotted];
m3_643 -> m3_644  [key=0, style=solid];
m3_643 -> m3_636  [key=2, style=dotted];
m3_643 -> m3_13  [key=2, style=dotted];
m3_644 -> m3_645  [key=0, style=solid];
m3_644 -> m3_13  [key=2, style=dotted];
m3_645 -> m3_646  [key=0, style=solid];
m3_645 -> m3_13  [key=2, style=dotted];
m3_646 -> m3_12  [key=2, style=dotted];
m3_646 -> m3_647  [key=0, style=solid];
m3_648 -> m3_637  [key=0, color=blue, style=bold];
m3_109 -> m3_108  [key=0, color=blue, style=bold];
m3_507 -> m3_508  [key=0, style=solid];
m3_508 -> m3_14  [key=2, style=dotted];
m3_508 -> m3_509  [key=0, style=solid];
m3_509 -> m3_510  [key=0, style=solid];
m3_509 -> m3_13  [key=2, style=dotted];
m3_510 -> m3_507  [key=0, color=blue, style=bold];
m3_17 -> m3_18  [key=0, style=solid];
m3_18 -> m3_27  [key=2, style=dotted];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_20  [key=1, color=darkseagreen4, label=bag1, style=dashed];
m3_19 -> m3_28  [key=2, style=dotted];
m3_19 -> m3_20  [key=0, style=solid];
m3_20 -> m3_12  [key=2, style=dotted];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_22  [key=1, color=darkseagreen4, label=output, style=dashed];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_13  [key=2, style=dotted];
m3_22 -> m3_14  [key=2, style=dotted];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_24  [key=1, color=darkseagreen4, label=bag2, style=dashed];
m3_23 -> m3_24  [key=0, style=solid];
m3_24 -> m3_16  [key=2, style=dotted];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_29  [key=2, style=dotted];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_13  [key=2, style=dotted];
m3_26 -> m3_17  [key=0, color=blue, style=bold];
m3_547 -> m3_548  [key=0, style=solid];
m3_548 -> m3_549  [key=0, style=solid];
m3_549 -> m3_14  [key=2, style=dotted];
m3_549 -> m3_550  [key=0, style=solid];
m3_549 -> m3_551  [key=1, color=darkseagreen4, label=values, style=dashed];
m3_549 -> m3_552  [key=1, color=darkseagreen4, label=values, style=dashed];
m3_549 -> m3_553  [key=1, color=darkseagreen4, label=values, style=dashed];
m3_549 -> m3_554  [key=1, color=darkseagreen4, label=values, style=dashed];
m3_549 -> m3_555  [key=1, color=darkseagreen4, label=values, style=dashed];
m3_549 -> m3_556  [key=1, color=darkseagreen4, label=values, style=dashed];
m3_549 -> m3_557  [key=1, color=darkseagreen4, label=values, style=dashed];
m3_549 -> m3_558  [key=1, color=darkseagreen4, label=values, style=dashed];
m3_549 -> m3_559  [key=1, color=darkseagreen4, label=values, style=dashed];
m3_550 -> m3_551  [key=0, style=solid];
m3_550 -> m3_13  [key=2, style=dotted];
m3_551 -> m3_552  [key=0, style=solid];
m3_551 -> m3_13  [key=2, style=dotted];
m3_552 -> m3_553  [key=0, style=solid];
m3_552 -> m3_13  [key=2, style=dotted];
m3_553 -> m3_554  [key=0, style=solid];
m3_553 -> m3_13  [key=2, style=dotted];
m3_554 -> m3_555  [key=0, style=solid];
m3_554 -> m3_13  [key=2, style=dotted];
m3_555 -> m3_556  [key=0, style=solid];
m3_555 -> m3_13  [key=2, style=dotted];
m3_556 -> m3_557  [key=0, style=solid];
m3_556 -> m3_13  [key=2, style=dotted];
m3_557 -> m3_558  [key=0, style=solid];
m3_557 -> m3_13  [key=2, style=dotted];
m3_558 -> m3_559  [key=0, style=solid];
m3_558 -> m3_13  [key=2, style=dotted];
m3_559 -> m3_560  [key=0, style=solid];
m3_559 -> m3_13  [key=2, style=dotted];
m3_560 -> m3_547  [key=0, color=blue, style=bold];
m3_311 -> m3_312  [key=0, style=solid];
m3_312 -> m3_308  [key=2, style=dotted];
m3_312 -> m3_313  [key=0, style=solid];
m3_313 -> m3_311  [key=0, color=blue, style=bold];
m3_305 -> m3_306  [key=0, style=solid];
m3_306 -> m3_307  [key=0, style=solid];
m3_306 -> m3_81  [key=2, style=dotted];
m3_307 -> m3_305  [key=0, color=blue, style=bold];
m3_405 -> m3_406  [key=0, style=solid];
m3_406 -> m3_407  [key=0, style=solid];
m3_406 -> m3_291  [key=2, style=dotted];
m3_407 -> m3_405  [key=0, color=blue, style=bold];
m3_181 -> m3_182  [key=0, style=solid];
m3_182 -> m3_183  [key=0, style=solid];
m3_182 -> m3_184  [key=1, color=darkseagreen4, label=c1, style=dashed];
m3_182 -> m3_185  [key=1, color=darkseagreen4, label=c1, style=dashed];
m3_182 -> m3_186  [key=1, color=darkseagreen4, label=c1, style=dashed];
m3_182 -> m3_178  [key=2, style=dotted];
m3_183 -> m3_175  [key=2, style=dotted];
m3_183 -> m3_184  [key=0, style=solid];
m3_184 -> m3_175  [key=2, style=dotted];
m3_184 -> m3_185  [key=0, style=solid];
m3_185 -> m3_175  [key=2, style=dotted];
m3_185 -> m3_186  [key=0, style=solid];
m3_186 -> m3_12  [key=2, style=dotted];
m3_186 -> m3_187  [key=0, style=solid];
m3_178 -> m3_179  [key=0, style=solid];
m3_187 -> m3_14  [key=2, style=dotted];
m3_187 -> m3_188  [key=0, style=solid];
m3_187 -> m3_189  [key=1, color=darkseagreen4, label=c2, style=dashed];
m3_187 -> m3_190  [key=1, color=darkseagreen4, label=c2, style=dashed];
m3_187 -> m3_191  [key=1, color=darkseagreen4, label=c2, style=dashed];
m3_188 -> m3_189  [key=0, style=solid];
m3_188 -> m3_13  [key=2, style=dotted];
m3_189 -> m3_190  [key=0, style=solid];
m3_189 -> m3_13  [key=2, style=dotted];
m3_190 -> m3_191  [key=0, style=solid];
m3_190 -> m3_13  [key=2, style=dotted];
m3_191 -> m3_192  [key=0, style=solid];
m3_191 -> m3_13  [key=2, style=dotted];
m3_192 -> m3_181  [key=0, color=blue, style=bold];
m3_1082 -> m3_1083  [key=0, style=solid];
m3_1083 -> m3_1084  [key=0, style=solid];
m3_1083 -> m3_1069  [key=2, style=dotted];
m3_1084 -> m3_1082  [key=0, color=blue, style=bold];
m3_885 -> m3_886  [key=0, style=solid];
m3_886 -> m3_887  [key=0, style=solid];
m3_887 -> m3_14  [key=2, style=dotted];
m3_887 -> m3_888  [key=0, style=solid];
m3_887 -> m3_889  [key=1, color=darkseagreen4, label=products, style=dashed];
m3_888 -> m3_889  [key=0, style=solid];
m3_888 -> m3_890  [key=1, color=darkseagreen4, label=p1, style=dashed];
m3_889 -> m3_890  [key=0, style=solid];
m3_889 -> m3_13  [key=2, style=dotted];
m3_890 -> m3_891  [key=0, style=solid];
m3_890 -> m3_13  [key=2, style=dotted];
m3_891 -> m3_885  [key=0, color=blue, style=bold];
m3_126 -> m3_127  [key=0, style=solid];
m3_127 -> m3_126  [key=0, color=blue, style=bold];
m3_723 -> m3_724  [key=0, style=solid];
m3_724 -> m3_725  [key=0, style=solid];
m3_724 -> m3_728  [key=1, color=darkseagreen4, label=json, style=dashed];
m3_725 -> m3_131  [key=2, style=dotted];
m3_725 -> m3_726  [key=0, style=solid];
m3_725 -> m3_727  [key=1, color=darkseagreen4, label="lambda expression", style=dashed];
m3_728 -> m3_14  [key=2, style=dotted];
m3_728 -> m3_729  [key=0, style=solid];
m3_726 -> m3_723  [key=0, color=blue, style=bold];
m3_727 -> m3_728  [key=0, style=solid];
m3_446 -> m3_447  [key=0, style=solid];
m3_447 -> m3_448  [key=0, style=solid];
m3_447 -> m3_449  [key=1, color=darkseagreen4, label=c, style=dashed];
m3_447 -> m3_450  [key=1, color=darkseagreen4, label=c, style=dashed];
m3_447 -> m3_443  [key=2, style=dotted];
m3_448 -> m3_449  [key=0, style=solid];
m3_449 -> m3_450  [key=0, style=solid];
m3_450 -> m3_241  [key=2, style=dotted];
m3_450 -> m3_451  [key=0, style=solid];
m3_443 -> m3_444  [key=0, style=solid];
m3_451 -> m3_14  [key=2, style=dotted];
m3_451 -> m3_452  [key=0, style=solid];
m3_451 -> m3_453  [key=1, color=darkseagreen4, label=newValue, style=dashed];
m3_452 -> m3_453  [key=0, style=solid];
m3_452 -> m3_13  [key=2, style=dotted];
m3_453 -> m3_358  [key=2, style=dotted];
m3_453 -> m3_454  [key=0, style=solid];
m3_453 -> m3_13  [key=2, style=dotted];
m3_454 -> m3_446  [key=0, color=blue, style=bold];
m3_1085 -> m3_1086  [key=0, style=solid];
m3_1086 -> m3_1087  [key=0, style=solid];
m3_1086 -> m3_1069  [key=2, style=dotted];
m3_1087 -> m3_1085  [key=0, color=blue, style=bold];
m3_209 -> m3_210  [key=0, style=solid];
m3_210 -> m3_209  [key=0, color=blue, style=bold];
m3_176 -> m3_177  [key=0, style=solid];
m3_177 -> m3_176  [key=0, color=blue, style=bold];
m3_892 -> m3_893  [key=0, style=solid];
m3_893 -> m3_894  [key=0, style=solid];
m3_893 -> m3_897  [key=2, style=dotted];
m3_893 -> m3_81  [key=2, style=dotted];
m3_894 -> m3_241  [key=2, style=dotted];
m3_894 -> m3_895  [key=0, style=solid];
m3_897 -> m3_1091  [key=0, style=solid];
m3_895 -> m3_256  [key=2, style=dotted];
m3_895 -> m3_896  [key=0, style=solid];
m3_896 -> m3_892  [key=0, color=blue, style=bold];
m3_484 -> m3_485  [key=0, style=solid];
m3_485 -> m3_486  [key=0, style=solid];
m3_485 -> m3_487  [key=1, color=darkseagreen4, label=p, style=dashed];
m3_485 -> m3_488  [key=1, color=darkseagreen4, label=p, style=dashed];
m3_485 -> m3_489  [key=1, color=darkseagreen4, label=p, style=dashed];
m3_485 -> m3_490  [key=1, color=darkseagreen4, label=p, style=dashed];
m3_485 -> m3_492  [key=2, style=dotted];
m3_486 -> m3_487  [key=0, style=solid];
m3_486 -> m3_81  [key=2, style=dotted];
m3_487 -> m3_493  [key=2, style=dotted];
m3_487 -> m3_328  [key=2, style=dotted];
m3_487 -> m3_488  [key=0, style=solid];
m3_487 -> m3_81  [key=2, style=dotted];
m3_487 -> m3_494  [key=2, style=dotted];
m3_488 -> m3_489  [key=0, style=solid];
m3_488 -> m3_13  [key=2, style=dotted];
m3_489 -> m3_490  [key=0, style=solid];
m3_489 -> m3_13  [key=2, style=dotted];
m3_490 -> m3_491  [key=0, style=solid];
m3_490 -> m3_13  [key=2, style=dotted];
m3_491 -> m3_484  [key=0, color=blue, style=bold];
m3_137 -> m3_138  [key=0, style=solid];
m3_138 -> m3_131  [key=2, style=dotted];
m3_138 -> m3_139  [key=0, style=solid];
m3_138 -> m3_140  [key=1, color=darkseagreen4, label="lambda expression", style=dashed];
m3_139 -> m3_137  [key=0, color=blue, style=bold];
m3_140 -> m3_141  [key=0, style=solid];
m3_285 -> m3_286  [key=0, style=solid];
m3_286 -> m3_85  [key=2, style=dotted];
m3_286 -> m3_287  [key=0, style=solid];
m3_287 -> m3_285  [key=0, color=blue, style=bold];
m3_128 -> m3_129  [key=0, style=solid];
m3_129 -> m3_131  [key=2, style=dotted];
m3_129 -> m3_130  [key=0, style=solid];
m3_129 -> m3_132  [key=1, color=darkseagreen4, label="lambda expression", style=dashed];
m3_130 -> m3_128  [key=0, color=blue, style=bold];
m3_132 -> m3_133  [key=0, style=solid];
m3_1073 -> m3_1074  [key=0, style=solid];
m3_1074 -> m3_1075  [key=0, style=solid];
m3_1074 -> m3_1069  [key=2, style=dotted];
m3_1075 -> m3_1073  [key=0, color=blue, style=bold];
m3_521 -> m3_522  [key=0, style=solid];
m3_522 -> m3_531  [key=2, style=dotted];
m3_522 -> m3_62  [key=2, style=dotted];
m3_522 -> m3_523  [key=0, style=solid];
m3_523 -> m3_533  [key=2, style=dotted];
m3_523 -> m3_524  [key=0, style=solid];
m3_523 -> m3_532  [key=2, style=dotted];
m3_524 -> m3_241  [key=2, style=dotted];
m3_524 -> m3_525  [key=0, style=solid];
m3_524 -> m3_526  [key=1, color=darkseagreen4, label=originalJson, style=dashed];
m3_525 -> m3_256  [key=2, style=dotted];
m3_525 -> m3_526  [key=0, style=solid];
m3_526 -> m3_14  [key=2, style=dotted];
m3_526 -> m3_527  [key=0, style=solid];
m3_526 -> m3_528  [key=1, color=darkseagreen4, label=newObject, style=dashed];
m3_526 -> m3_529  [key=1, color=darkseagreen4, label=newObject, style=dashed];
m3_527 -> m3_528  [key=0, style=solid];
m3_527 -> m3_13  [key=2, style=dotted];
m3_528 -> m3_529  [key=0, style=solid];
m3_528 -> m3_13  [key=2, style=dotted];
m3_529 -> m3_530  [key=0, style=solid];
m3_529 -> m3_13  [key=2, style=dotted];
m3_530 -> m3_521  [key=0, color=blue, style=bold];
m3_1091 -> m3_1092  [key=0, style=solid];
m3_1092 -> m3_897  [key=0, color=blue, style=bold];
m3_945 -> m3_946  [key=0, style=solid];
m3_946 -> m3_85  [key=2, style=dotted];
m3_946 -> m3_947  [key=0, style=solid];
m3_947 -> m3_945  [key=0, color=blue, style=bold];
m3_970 -> m3_971  [key=0, style=solid];
m3_971 -> m3_973  [key=2, style=dotted];
m3_971 -> m3_972  [key=0, style=solid];
m3_972 -> m3_970  [key=0, color=blue, style=bold];
m3_1066 -> m3_1067  [key=0, style=solid];
m3_1067 -> m3_1068  [key=0, style=solid];
m3_1067 -> m3_1069  [key=2, style=dotted];
m3_1068 -> m3_1066  [key=0, color=blue, style=bold];
m3_750 -> m3_751  [key=0, style=solid];
m3_751 -> m3_757  [key=2, style=dotted];
m3_751 -> m3_752  [key=0, style=solid];
m3_752 -> m3_753  [key=0, style=solid];
m3_753 -> m3_754  [key=0, style=solid];
m3_753 -> m3_81  [key=2, style=dotted];
m3_754 -> m3_758  [key=2, style=dotted];
m3_754 -> m3_328  [key=2, style=dotted];
m3_754 -> m3_755  [key=0, style=solid];
m3_755 -> m3_256  [key=2, style=dotted];
m3_755 -> m3_756  [key=0, style=solid];
m3_756 -> m3_750  [key=0, color=blue, style=bold];
m3_0 -> m3_1  [key=0, color=green, style=solid];
m3_1 -> m3_10  [key=2, color=green, style=dotted];
m3_1 -> m3_2  [key=0, color=green, style=solid];
m3_1 -> m3_3  [key=1, color=green, label=queue1, style=dashed];
m3_2 -> m3_11  [key=2, color=green, style=dotted];
m3_2 -> m3_3  [key=0, color=green, style=solid];
m3_3 -> m3_12  [key=2, color=green, style=dotted];
m3_3 -> m3_4  [key=0, color=green, style=solid];
m3_3 -> m3_5  [key=1, color=green, label=output, style=dashed];
m3_4 -> m3_5  [key=0, color=green, style=solid];
m3_4 -> m3_13  [key=2, color=green, style=dotted];
m3_5 -> m3_14  [key=2, color=green, style=dotted];
m3_5 -> m3_6  [key=0, color=green, style=solid];
m3_5 -> m3_7  [key=1, color=green, label=queue2, style=dashed];
m3_6 -> m3_7  [key=0, color=green, style=solid];
m3_7 -> m3_15  [key=2, color=green, style=dotted];
m3_7 -> m3_16  [key=2, color=green, style=dotted];
m3_7 -> m3_8  [key=0, color=green, style=solid];
m3_8 -> m3_9  [key=0, color=green, style=solid];
m3_8 -> m3_13  [key=2, color=green, style=dotted];
m3_9 -> m3_0  [key=0, color=green, style=bold];
m3_163 -> m3_164  [key=0, style=solid];
m3_164 -> m3_153  [key=2, style=dotted];
m3_164 -> m3_165  [key=0, style=solid];
m3_164 -> m3_166  [key=1, color=darkseagreen4, label=c1, style=dashed];
m3_164 -> m3_167  [key=1, color=darkseagreen4, label=c1, style=dashed];
m3_164 -> m3_168  [key=1, color=darkseagreen4, label=c1, style=dashed];
m3_165 -> m3_175  [key=2, style=dotted];
m3_165 -> m3_166  [key=0, style=solid];
m3_166 -> m3_175  [key=2, style=dotted];
m3_166 -> m3_167  [key=0, style=solid];
m3_167 -> m3_175  [key=2, style=dotted];
m3_167 -> m3_168  [key=0, style=solid];
m3_168 -> m3_12  [key=2, style=dotted];
m3_168 -> m3_169  [key=0, style=solid];
m3_169 -> m3_14  [key=2, style=dotted];
m3_169 -> m3_170  [key=0, style=solid];
m3_169 -> m3_171  [key=1, color=darkseagreen4, label=c2, style=dashed];
m3_169 -> m3_172  [key=1, color=darkseagreen4, label=c2, style=dashed];
m3_169 -> m3_173  [key=1, color=darkseagreen4, label=c2, style=dashed];
m3_170 -> m3_171  [key=0, style=solid];
m3_170 -> m3_13  [key=2, style=dotted];
m3_171 -> m3_172  [key=0, style=solid];
m3_171 -> m3_13  [key=2, style=dotted];
m3_172 -> m3_173  [key=0, style=solid];
m3_172 -> m3_13  [key=2, style=dotted];
m3_173 -> m3_174  [key=0, style=solid];
m3_173 -> m3_13  [key=2, style=dotted];
m3_174 -> m3_163  [key=0, color=blue, style=bold];
m3_876 -> m3_877  [key=0, style=solid];
m3_877 -> m3_827  [key=2, style=dotted];
m3_877 -> m3_482  [key=2, style=dotted];
m3_877 -> m3_878  [key=0, style=solid];
m3_877 -> m3_880  [key=1, color=darkseagreen4, label=p1, style=dashed];
m3_878 -> m3_827  [key=2, style=dotted];
m3_878 -> m3_482  [key=2, style=dotted];
m3_878 -> m3_879  [key=0, style=solid];
m3_878 -> m3_881  [key=1, color=darkseagreen4, label=p2, style=dashed];
m3_880 -> m3_881  [key=0, style=solid];
m3_879 -> m3_880  [key=0, style=solid];
m3_879 -> m3_881  [key=1, color=darkseagreen4, label=products, style=dashed];
m3_879 -> m3_882  [key=1, color=darkseagreen4, label=products, style=dashed];
m3_879 -> m3_81  [key=2, style=dotted];
m3_881 -> m3_882  [key=0, style=solid];
m3_882 -> m3_241  [key=2, style=dotted];
m3_882 -> m3_883  [key=0, style=solid];
m3_883 -> m3_256  [key=2, style=dotted];
m3_883 -> m3_884  [key=0, style=solid];
m3_884 -> m3_876  [key=0, color=blue, style=bold];
m3_656 -> m3_657  [key=0, style=solid];
m3_657 -> m3_658  [key=0, style=solid];
m3_657 -> m3_661  [key=1, color=darkseagreen4, label=json, style=dashed];
m3_658 -> m3_131  [key=2, style=dotted];
m3_658 -> m3_659  [key=0, style=solid];
m3_658 -> m3_660  [key=1, color=darkseagreen4, label="lambda expression", style=dashed];
m3_661 -> m3_14  [key=2, style=dotted];
m3_661 -> m3_662  [key=0, style=solid];
m3_659 -> m3_656  [key=0, color=blue, style=bold];
m3_660 -> m3_661  [key=0, style=solid];
m3_211 -> m3_212  [key=0, style=solid];
m3_212 -> m3_213  [key=0, style=solid];
m3_213 -> m3_14  [key=2, style=dotted];
m3_213 -> m3_214  [key=0, style=solid];
m3_213 -> m3_215  [key=1, color=darkseagreen4, label=d, style=dashed];
m3_213 -> m3_216  [key=1, color=darkseagreen4, label=d, style=dashed];
m3_213 -> m3_217  [key=1, color=darkseagreen4, label=d, style=dashed];
m3_214 -> m3_215  [key=0, style=solid];
m3_214 -> m3_13  [key=2, style=dotted];
m3_215 -> m3_216  [key=0, style=solid];
m3_215 -> m3_13  [key=2, style=dotted];
m3_216 -> m3_217  [key=0, style=solid];
m3_216 -> m3_13  [key=2, style=dotted];
m3_217 -> m3_218  [key=0, style=solid];
m3_217 -> m3_13  [key=2, style=dotted];
m3_218 -> m3_211  [key=0, color=blue, style=bold];
m3_394 -> m3_395  [key=0, style=solid];
m3_395 -> m3_396  [key=0, style=solid];
m3_396 -> m3_394  [key=0, color=blue, style=bold];
m3_82 -> m3_83  [key=0, style=solid];
m3_83 -> m3_85  [key=2, style=dotted];
m3_83 -> m3_84  [key=0, style=solid];
m3_84 -> m3_82  [key=0, color=blue, style=bold];
m3_1060 -> m3_1061  [key=0, style=solid];
m3_1061 -> m3_291  [key=2, style=dotted];
m3_1061 -> m3_1062  [key=0, style=solid];
m3_1062 -> m3_1060  [key=0, color=blue, style=bold];
m3_289 -> m3_291  [key=2, style=dotted];
m3_289 -> m3_290  [key=0, style=solid];
m3_290 -> m3_288  [key=0, color=blue, style=bold];
m3_697 -> m3_698  [key=0, style=solid];
m3_698 -> m3_615  [key=2, style=dotted];
m3_698 -> m3_699  [key=0, style=solid];
m3_698 -> m3_700  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_698 -> m3_701  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_698 -> m3_702  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_699 -> m3_700  [key=0, style=solid];
m3_700 -> m3_701  [key=0, style=solid];
m3_701 -> m3_702  [key=0, style=solid];
m3_702 -> m3_12  [key=2, style=dotted];
m3_702 -> m3_703  [key=0, style=solid];
m3_703 -> m3_704  [key=0, style=solid];
m3_703 -> m3_13  [key=2, style=dotted];
m3_704 -> m3_697  [key=0, color=blue, style=bold];
m3_444 -> m3_81  [key=2, style=dotted];
m3_444 -> m3_445  [key=0, style=solid];
m3_445 -> m3_443  [key=0, color=blue, style=bold];
m3_1094 -> m3_1096  [key=2, style=dotted];
m3_1094 -> m3_1095  [key=0, style=solid];
m3_1095 -> m3_1093  [key=0, color=blue, style=bold];
m3_468 -> m3_469  [key=0, style=solid];
m3_469 -> m3_482  [key=2, style=dotted];
m3_469 -> m3_470  [key=0, style=solid];
m3_469 -> m3_471  [key=1, color=darkseagreen4, label=dateTime, style=dashed];
m3_469 -> m3_472  [key=1, color=darkseagreen4, label=dateTime, style=dashed];
m3_470 -> m3_81  [key=2, style=dotted];
m3_470 -> m3_471  [key=0, style=solid];
m3_470 -> m3_472  [key=1, color=darkseagreen4, label=list, style=dashed];
m3_470 -> m3_473  [key=1, color=darkseagreen4, label=list, style=dashed];
m3_471 -> m3_282  [key=2, style=dotted];
m3_471 -> m3_483  [key=2, style=dotted];
m3_471 -> m3_472  [key=0, style=solid];
m3_472 -> m3_282  [key=2, style=dotted];
m3_472 -> m3_483  [key=2, style=dotted];
m3_472 -> m3_473  [key=0, style=solid];
m3_473 -> m3_241  [key=2, style=dotted];
m3_473 -> m3_474  [key=0, style=solid];
m3_473 -> m3_475  [key=1, color=darkseagreen4, label=json, style=dashed];
m3_474 -> m3_256  [key=2, style=dotted];
m3_474 -> m3_475  [key=0, style=solid];
m3_475 -> m3_14  [key=2, style=dotted];
m3_475 -> m3_476  [key=0, style=solid];
m3_475 -> m3_477  [key=1, color=darkseagreen4, label=result, style=dashed];
m3_475 -> m3_478  [key=1, color=darkseagreen4, label=result, style=dashed];
m3_475 -> m3_479  [key=1, color=darkseagreen4, label=result, style=dashed];
m3_475 -> m3_480  [key=1, color=darkseagreen4, label=result, style=dashed];
m3_476 -> m3_477  [key=0, style=solid];
m3_476 -> m3_13  [key=2, style=dotted];
m3_477 -> m3_478  [key=0, style=solid];
m3_477 -> m3_13  [key=2, style=dotted];
m3_478 -> m3_479  [key=0, style=solid];
m3_478 -> m3_13  [key=2, style=dotted];
m3_479 -> m3_480  [key=0, style=solid];
m3_479 -> m3_13  [key=2, style=dotted];
m3_480 -> m3_481  [key=0, style=solid];
m3_480 -> m3_13  [key=2, style=dotted];
m3_481 -> m3_468  [key=0, color=blue, style=bold];
m3_426 -> m3_427  [key=0, style=solid];
m3_427 -> m3_81  [key=2, style=dotted];
m3_427 -> m3_428  [key=0, style=solid];
m3_428 -> m3_417  [key=2, style=dotted];
m3_428 -> m3_429  [key=0, style=solid];
m3_429 -> m3_241  [key=2, style=dotted];
m3_429 -> m3_430  [key=0, style=solid];
m3_430 -> m3_256  [key=2, style=dotted];
m3_430 -> m3_431  [key=0, style=solid];
m3_431 -> m3_426  [key=0, color=blue, style=bold];
m3_1115 -> m3_1116  [key=0, style=solid];
m3_1115 -> m3_1118  [key=1, color=darkseagreen4, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_1115 -> m3_1119  [key=1, color=darkseagreen4, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_1115 -> m3_1120  [key=1, color=darkseagreen4, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_1115 -> m3_1122  [key=1, color=darkseagreen4, label="Newtonsoft.Json.JsonReader", style=dashed];
m3_1116 -> m3_1117  [key=0, style=solid];
m3_1118 -> m3_1125  [key=2, style=dotted];
m3_1118 -> m3_1119  [key=0, style=solid];
m3_1119 -> m3_1120  [key=0, style=solid];
m3_1119 -> m3_1123  [key=0, style=solid];
m3_1120 -> m3_1121  [key=0, style=solid];
m3_1122 -> m3_1125  [key=2, style=dotted];
m3_1122 -> m3_1119  [key=0, style=solid];
m3_1117 -> m3_85  [key=2, style=dotted];
m3_1117 -> m3_1118  [key=0, style=solid];
m3_1117 -> m3_1121  [key=1, color=darkseagreen4, label=newStrings, style=dashed];
m3_1117 -> m3_1123  [key=1, color=darkseagreen4, label=newStrings, style=dashed];
m3_1121 -> m3_1122  [key=0, style=solid];
m3_1123 -> m3_1124  [key=0, style=solid];
m3_1124 -> m3_1115  [key=0, color=blue, style=bold];
m3_502 -> m3_503  [key=0, style=solid];
m3_503 -> m3_14  [key=2, style=dotted];
m3_503 -> m3_504  [key=0, style=solid];
m3_503 -> m3_505  [key=1, color=darkseagreen4, label=dictionary, style=dashed];
m3_504 -> m3_505  [key=0, style=solid];
m3_504 -> m3_13  [key=2, style=dotted];
m3_505 -> m3_506  [key=0, style=solid];
m3_505 -> m3_13  [key=2, style=dotted];
m3_506 -> m3_502  [key=0, color=blue, style=bold];
m3_915 -> m3_916  [key=0, style=solid];
m3_916 -> m3_917  [key=0, style=solid];
m3_917 -> m3_14  [key=2, style=dotted];
m3_917 -> m3_918  [key=0, style=solid];
m3_918 -> m3_919  [key=0, style=solid];
m3_918 -> m3_13  [key=2, style=dotted];
m3_919 -> m3_915  [key=0, color=blue, style=bold];
m3_408 -> m3_409  [key=0, style=solid];
m3_409 -> m3_291  [key=2, style=dotted];
m3_409 -> m3_410  [key=0, style=solid];
m3_410 -> m3_408  [key=0, color=blue, style=bold];
m3_649 -> m3_650  [key=0, style=solid];
m3_650 -> m3_651  [key=0, style=solid];
m3_650 -> m3_654  [key=1, color=darkseagreen4, label=json, style=dashed];
m3_651 -> m3_131  [key=2, style=dotted];
m3_651 -> m3_652  [key=0, style=solid];
m3_651 -> m3_653  [key=1, color=darkseagreen4, label="lambda expression", style=dashed];
m3_654 -> m3_14  [key=2, style=dotted];
m3_654 -> m3_655  [key=0, style=solid];
m3_652 -> m3_649  [key=0, color=blue, style=bold];
m3_653 -> m3_654  [key=0, style=solid];
m3_155 -> m3_156  [key=0, style=solid];
m3_156 -> m3_155  [key=0, color=blue, style=bold];
m3_951 -> m3_952  [key=0, style=solid];
m3_952 -> m3_954  [key=2, style=dotted];
m3_952 -> m3_953  [key=0, style=solid];
m3_953 -> m3_951  [key=0, color=blue, style=bold];
m3_195 -> m3_196  [key=0, style=solid];
m3_196 -> m3_131  [key=2, style=dotted];
m3_196 -> m3_197  [key=0, style=solid];
m3_196 -> m3_198  [key=1, color=darkseagreen4, label="lambda expression", style=dashed];
m3_197 -> m3_195  [key=0, color=blue, style=bold];
m3_198 -> m3_199  [key=0, style=solid];
m3_359 -> m3_360  [key=0, style=solid];
m3_360 -> m3_14  [key=2, style=dotted];
m3_360 -> m3_361  [key=0, style=solid];
m3_360 -> m3_362  [key=1, color=darkseagreen4, label=list, style=dashed];
m3_360 -> m3_363  [key=1, color=darkseagreen4, label=list, style=dashed];
m3_360 -> m3_364  [key=1, color=darkseagreen4, label=list, style=dashed];
m3_361 -> m3_362  [key=0, style=solid];
m3_361 -> m3_13  [key=2, style=dotted];
m3_362 -> m3_363  [key=0, style=solid];
m3_362 -> m3_13  [key=2, style=dotted];
m3_363 -> m3_364  [key=0, style=solid];
m3_363 -> m3_13  [key=2, style=dotted];
m3_364 -> m3_365  [key=0, style=solid];
m3_364 -> m3_13  [key=2, style=dotted];
m3_365 -> m3_359  [key=0, color=blue, style=bold];
m3_1079 -> m3_1080  [key=0, style=solid];
m3_1080 -> m3_1081  [key=0, style=solid];
m3_1080 -> m3_1069  [key=2, style=dotted];
m3_1081 -> m3_1079  [key=0, color=blue, style=bold];
m3_269 -> m3_270  [key=0, style=solid];
m3_270 -> m3_282  [key=2, style=dotted];
m3_270 -> m3_271  [key=0, style=solid];
m3_271 -> m3_241  [key=2, style=dotted];
m3_271 -> m3_272  [key=0, style=solid];
m3_271 -> m3_274  [key=1, color=darkseagreen4, label=myOtherArrayAsString, style=dashed];
m3_272 -> m3_256  [key=2, style=dotted];
m3_272 -> m3_273  [key=0, style=solid];
m3_274 -> m3_14  [key=2, style=dotted];
m3_274 -> m3_275  [key=0, style=solid];
m3_274 -> m3_276  [key=1, color=darkseagreen4, label=myOtherResult, style=dashed];
m3_274 -> m3_277  [key=1, color=darkseagreen4, label=myOtherResult, style=dashed];
m3_274 -> m3_278  [key=1, color=darkseagreen4, label=myOtherResult, style=dashed];
m3_274 -> m3_279  [key=1, color=darkseagreen4, label=myOtherResult, style=dashed];
m3_274 -> m3_280  [key=1, color=darkseagreen4, label=myOtherResult, style=dashed];
m3_273 -> m3_274  [key=0, style=solid];
m3_273 -> m3_275  [key=1, color=darkseagreen4, label=o, style=dashed];
m3_273 -> m3_283  [key=2, style=dotted];
m3_275 -> m3_284  [key=2, style=dotted];
m3_275 -> m3_16  [key=2, style=dotted];
m3_275 -> m3_276  [key=0, style=solid];
m3_276 -> m3_277  [key=0, style=solid];
m3_276 -> m3_13  [key=2, style=dotted];
m3_277 -> m3_278  [key=0, style=solid];
m3_277 -> m3_13  [key=2, style=dotted];
m3_278 -> m3_279  [key=0, style=solid];
m3_278 -> m3_13  [key=2, style=dotted];
m3_279 -> m3_280  [key=0, style=solid];
m3_279 -> m3_13  [key=2, style=dotted];
m3_280 -> m3_281  [key=0, style=solid];
m3_280 -> m3_13  [key=2, style=dotted];
m3_281 -> m3_269  [key=0, color=blue, style=bold];
m3_193 -> m3_194  [key=0, style=solid];
m3_194 -> m3_193  [key=0, color=blue, style=bold];
m3_314 -> m3_315  [key=0, style=solid];
m3_315 -> m3_316  [key=0, style=solid];
m3_315 -> m3_319  [key=1, color=darkseagreen4, label=json, style=dashed];
m3_316 -> m3_131  [key=2, style=dotted];
m3_316 -> m3_317  [key=0, style=solid];
m3_316 -> m3_318  [key=1, color=darkseagreen4, label="lambda expression", style=dashed];
m3_319 -> m3_14  [key=2, style=dotted];
m3_319 -> m3_320  [key=0, style=solid];
m3_317 -> m3_314  [key=0, color=blue, style=bold];
m3_318 -> m3_319  [key=0, style=solid];
m3_1126 -> m3_1127  [key=0, style=solid];
m3_1127 -> m3_1128  [key=0, style=solid];
m3_1128 -> m3_1126  [key=0, color=blue, style=bold];
m3_179 -> m3_176  [key=2, style=dotted];
m3_179 -> m3_180  [key=0, style=solid];
m3_180 -> m3_178  [key=0, color=blue, style=bold];
m3_295 -> m3_296  [key=0, style=solid];
m3_296 -> m3_297  [key=0, style=solid];
m3_297 -> m3_14  [key=2, style=dotted];
m3_297 -> m3_298  [key=0, style=solid];
m3_297 -> m3_299  [key=1, color=darkseagreen4, label=result, style=dashed];
m3_297 -> m3_300  [key=1, color=darkseagreen4, label=result, style=dashed];
m3_297 -> m3_301  [key=1, color=darkseagreen4, label=result, style=dashed];
m3_298 -> m3_303  [key=2, style=dotted];
m3_298 -> m3_13  [key=2, style=dotted];
m3_298 -> m3_299  [key=0, style=solid];
m3_299 -> m3_304  [key=2, style=dotted];
m3_299 -> m3_13  [key=2, style=dotted];
m3_299 -> m3_300  [key=0, style=solid];
m3_300 -> m3_304  [key=2, style=dotted];
m3_300 -> m3_13  [key=2, style=dotted];
m3_300 -> m3_301  [key=0, style=solid];
m3_301 -> m3_304  [key=2, style=dotted];
m3_301 -> m3_13  [key=2, style=dotted];
m3_301 -> m3_302  [key=0, style=solid];
m3_302 -> m3_295  [key=0, color=blue, style=bold];
m3_397 -> m3_398  [key=0, style=solid];
m3_398 -> m3_399  [key=0, style=solid];
m3_398 -> m3_400  [key=2, style=dotted];
m3_399 -> m3_397  [key=0, color=blue, style=bold];
m3_534 -> m3_535  [key=0, style=solid];
m3_535 -> m3_536  [key=0, style=solid];
m3_536 -> m3_14  [key=2, style=dotted];
m3_536 -> m3_537  [key=0, style=solid];
m3_536 -> m3_538  [key=1, color=darkseagreen4, label=values, style=dashed];
m3_536 -> m3_539  [key=1, color=darkseagreen4, label=values, style=dashed];
m3_536 -> m3_540  [key=1, color=darkseagreen4, label=values, style=dashed];
m3_536 -> m3_541  [key=1, color=darkseagreen4, label=values, style=dashed];
m3_536 -> m3_542  [key=1, color=darkseagreen4, label=values, style=dashed];
m3_536 -> m3_543  [key=1, color=darkseagreen4, label=values, style=dashed];
m3_536 -> m3_544  [key=1, color=darkseagreen4, label=values, style=dashed];
m3_536 -> m3_545  [key=1, color=darkseagreen4, label=values, style=dashed];
m3_537 -> m3_13  [key=2, style=dotted];
m3_537 -> m3_538  [key=0, style=solid];
m3_538 -> m3_13  [key=2, style=dotted];
m3_538 -> m3_539  [key=0, style=solid];
m3_539 -> m3_13  [key=2, style=dotted];
m3_539 -> m3_540  [key=0, style=solid];
m3_540 -> m3_13  [key=2, style=dotted];
m3_540 -> m3_541  [key=0, style=solid];
m3_541 -> m3_13  [key=2, style=dotted];
m3_541 -> m3_542  [key=0, style=solid];
m3_542 -> m3_13  [key=2, style=dotted];
m3_542 -> m3_543  [key=0, style=solid];
m3_543 -> m3_13  [key=2, style=dotted];
m3_543 -> m3_544  [key=0, style=solid];
m3_544 -> m3_13  [key=2, style=dotted];
m3_544 -> m3_545  [key=0, style=solid];
m3_545 -> m3_13  [key=2, style=dotted];
m3_545 -> m3_546  [key=0, style=solid];
m3_546 -> m3_534  [key=0, color=blue, style=bold];
m3_705 -> m3_706  [key=0, style=solid];
m3_706 -> m3_707  [key=0, style=solid];
m3_706 -> m3_714  [key=1, color=darkseagreen4, label=json, style=dashed];
m3_707 -> m3_14  [key=2, style=dotted];
m3_707 -> m3_708  [key=0, style=solid];
m3_707 -> m3_709  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_707 -> m3_710  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_707 -> m3_711  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_707 -> m3_712  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_707 -> m3_713  [key=1, color=darkseagreen4, label=aa, style=dashed];
m3_714 -> m3_13  [key=2, style=dotted];
m3_714 -> m3_715  [key=0, style=solid];
m3_708 -> m3_13  [key=2, style=dotted];
m3_708 -> m3_709  [key=0, style=solid];
m3_709 -> m3_13  [key=2, style=dotted];
m3_709 -> m3_710  [key=0, style=solid];
m3_710 -> m3_636  [key=2, style=dotted];
m3_710 -> m3_13  [key=2, style=dotted];
m3_710 -> m3_711  [key=0, style=solid];
m3_711 -> m3_636  [key=2, style=dotted];
m3_711 -> m3_13  [key=2, style=dotted];
m3_711 -> m3_712  [key=0, style=solid];
m3_712 -> m3_636  [key=2, style=dotted];
m3_712 -> m3_13  [key=2, style=dotted];
m3_712 -> m3_713  [key=0, style=solid];
m3_713 -> m3_12  [key=2, style=dotted];
m3_713 -> m3_714  [key=0, style=solid];
m3_715 -> m3_705  [key=0, color=blue, style=bold];
m3_230 -> m3_231  [key=0, style=solid];
m3_231 -> m3_240  [key=2, style=dotted];
m3_231 -> m3_232  [key=0, style=solid];
m3_231 -> m3_233  [key=1, color=darkseagreen4, label=d, style=dashed];
m3_232 -> m3_228  [key=2, style=dotted];
m3_232 -> m3_229  [key=2, style=dotted];
m3_232 -> m3_81  [key=2, style=dotted];
m3_232 -> m3_233  [key=0, style=solid];
m3_233 -> m3_241  [key=2, style=dotted];
m3_233 -> m3_234  [key=0, style=solid];
m3_233 -> m3_235  [key=1, color=darkseagreen4, label=json, style=dashed];
m3_234 -> m3_13  [key=2, style=dotted];
m3_234 -> m3_235  [key=0, style=solid];
m3_235 -> m3_14  [key=2, style=dotted];
m3_235 -> m3_236  [key=0, style=solid];
m3_235 -> m3_237  [key=1, color=darkseagreen4, label=d2, style=dashed];
m3_235 -> m3_238  [key=1, color=darkseagreen4, label=d2, style=dashed];
m3_236 -> m3_13  [key=2, style=dotted];
m3_236 -> m3_237  [key=0, style=solid];
m3_237 -> m3_13  [key=2, style=dotted];
m3_237 -> m3_238  [key=0, style=solid];
m3_238 -> m3_13  [key=2, style=dotted];
m3_238 -> m3_239  [key=0, style=solid];
m3_239 -> m3_230  [key=0, color=blue, style=bold];
m3_366 -> m3_367  [key=0, style=solid];
m3_367 -> m3_14  [key=2, style=dotted];
m3_367 -> m3_368  [key=0, style=solid];
m3_367 -> m3_369  [key=1, color=darkseagreen4, label=list, style=dashed];
m3_367 -> m3_370  [key=1, color=darkseagreen4, label=list, style=dashed];
m3_367 -> m3_371  [key=1, color=darkseagreen4, label=list, style=dashed];
m3_368 -> m3_13  [key=2, style=dotted];
m3_368 -> m3_369  [key=0, style=solid];
m3_369 -> m3_304  [key=2, style=dotted];
m3_369 -> m3_13  [key=2, style=dotted];
m3_369 -> m3_370  [key=0, style=solid];
m3_370 -> m3_304  [key=2, style=dotted];
m3_370 -> m3_13  [key=2, style=dotted];
m3_370 -> m3_371  [key=0, style=solid];
m3_371 -> m3_304  [key=2, style=dotted];
m3_371 -> m3_13  [key=2, style=dotted];
m3_371 -> m3_372  [key=0, style=solid];
m3_372 -> m3_366  [key=0, color=blue, style=bold];
m3_955 -> m3_956  [key=0, style=solid];
m3_956 -> m3_958  [key=2, style=dotted];
m3_956 -> m3_957  [key=0, style=solid];
m3_957 -> m3_955  [key=0, color=blue, style=bold];
m3_352 -> m3_353  [key=0, style=solid];
m3_353 -> m3_14  [key=2, style=dotted];
m3_353 -> m3_354  [key=0, style=solid];
m3_353 -> m3_355  [key=1, color=darkseagreen4, label=l, style=dashed];
m3_353 -> m3_356  [key=1, color=darkseagreen4, label=l, style=dashed];
m3_354 -> m3_358  [key=2, style=dotted];
m3_354 -> m3_13  [key=2, style=dotted];
m3_354 -> m3_355  [key=0, style=solid];
m3_355 -> m3_13  [key=2, style=dotted];
m3_355 -> m3_356  [key=0, style=solid];
m3_356 -> m3_13  [key=2, style=dotted];
m3_356 -> m3_357  [key=0, style=solid];
m3_357 -> m3_352  [key=0, color=blue, style=bold];
m3_143 -> m3_144  [key=0, style=solid];
m3_144 -> m3_143  [key=0, color=blue, style=bold];
m3_690 -> m3_691  [key=0, style=solid];
m3_691 -> m3_692  [key=0, style=solid];
m3_691 -> m3_695  [key=1, color=darkseagreen4, label=json, style=dashed];
m3_692 -> m3_131  [key=2, style=dotted];
m3_692 -> m3_693  [key=0, style=solid];
m3_692 -> m3_694  [key=1, color=darkseagreen4, label="lambda expression", style=dashed];
m3_695 -> m3_14  [key=2, style=dotted];
m3_695 -> m3_696  [key=0, style=solid];
m3_693 -> m3_690  [key=0, color=blue, style=bold];
m3_694 -> m3_695  [key=0, style=solid];
m3_771 -> m3_772  [key=0, style=solid];
m3_772 -> m3_773  [key=0, style=solid];
m3_773 -> m3_14  [key=2, style=dotted];
m3_773 -> m3_774  [key=0, style=solid];
m3_773 -> m3_775  [key=1, color=darkseagreen4, label=o, style=dashed];
m3_773 -> m3_776  [key=1, color=darkseagreen4, label=o, style=dashed];
m3_773 -> m3_777  [key=1, color=darkseagreen4, label=o, style=dashed];
m3_773 -> m3_778  [key=1, color=darkseagreen4, label=o, style=dashed];
m3_774 -> m3_13  [key=2, style=dotted];
m3_774 -> m3_775  [key=0, style=solid];
m3_775 -> m3_13  [key=2, style=dotted];
m3_775 -> m3_776  [key=0, style=solid];
m3_776 -> m3_13  [key=2, style=dotted];
m3_776 -> m3_777  [key=0, style=solid];
m3_777 -> m3_13  [key=2, style=dotted];
m3_777 -> m3_778  [key=0, style=solid];
m3_778 -> m3_13  [key=2, style=dotted];
m3_778 -> m3_779  [key=0, style=solid];
m3_779 -> m3_771  [key=0, color=blue, style=bold];
m3_335 -> m3_336  [key=0, style=solid];
m3_336 -> m3_337  [key=0, style=solid];
m3_337 -> m3_335  [key=0, color=blue, style=bold];
m3_926 -> m3_927  [key=0, style=solid];
m3_927 -> m3_928  [key=0, style=solid];
m3_928 -> m3_14  [key=2, style=dotted];
m3_928 -> m3_929  [key=0, style=solid];
m3_929 -> m3_13  [key=2, style=dotted];
m3_929 -> m3_930  [key=0, style=solid];
m3_930 -> m3_926  [key=0, color=blue, style=bold];
m3_1100 -> m3_81  [key=2, style=dotted];
m3_1100 -> m3_1101  [key=0, style=solid];
m3_1101 -> m3_851  [key=0, color=blue, style=bold];
m3_587 -> m3_588  [key=0, style=solid];
m3_588 -> m3_589  [key=0, style=solid];
m3_589 -> m3_14  [key=2, style=dotted];
m3_589 -> m3_590  [key=0, style=solid];
m3_589 -> m3_591  [key=1, color=darkseagreen4, label=c2, style=dashed];
m3_589 -> m3_592  [key=1, color=darkseagreen4, label=c2, style=dashed];
m3_589 -> m3_593  [key=1, color=darkseagreen4, label=c2, style=dashed];
m3_589 -> m3_594  [key=1, color=darkseagreen4, label=c2, style=dashed];
m3_589 -> m3_595  [key=1, color=darkseagreen4, label=c2, style=dashed];
m3_589 -> m3_596  [key=1, color=darkseagreen4, label=c2, style=dashed];
m3_590 -> m3_13  [key=2, style=dotted];
m3_590 -> m3_591  [key=0, style=solid];
m3_591 -> m3_13  [key=2, style=dotted];
m3_591 -> m3_592  [key=0, style=solid];
m3_592 -> m3_13  [key=2, style=dotted];
m3_592 -> m3_593  [key=0, style=solid];
m3_593 -> m3_13  [key=2, style=dotted];
m3_593 -> m3_594  [key=0, style=solid];
m3_594 -> m3_13  [key=2, style=dotted];
m3_594 -> m3_595  [key=0, style=solid];
m3_595 -> m3_13  [key=2, style=dotted];
m3_595 -> m3_596  [key=0, style=solid];
m3_596 -> m3_13  [key=2, style=dotted];
m3_596 -> m3_597  [key=0, style=solid];
m3_597 -> m3_587  [key=0, color=blue, style=bold];
m3_982 -> m3_983  [key=0, style=solid];
m3_983 -> m3_291  [key=2, style=dotted];
m3_983 -> m3_984  [key=0, style=solid];
m3_984 -> m3_982  [key=0, color=blue, style=bold];
m3_87 -> m3_88  [key=0, style=solid];
m3_88 -> m3_86  [key=0, color=blue, style=bold];
m3_683 -> m3_684  [key=0, style=solid];
m3_684 -> m3_685  [key=0, style=solid];
m3_684 -> m3_688  [key=1, color=darkseagreen4, label=json, style=dashed];
m3_685 -> m3_131  [key=2, style=dotted];
m3_685 -> m3_686  [key=0, style=solid];
m3_685 -> m3_687  [key=1, color=darkseagreen4, label="lambda expression", style=dashed];
m3_688 -> m3_14  [key=2, style=dotted];
m3_688 -> m3_689  [key=0, style=solid];
m3_686 -> m3_683  [key=0, color=blue, style=bold];
m3_687 -> m3_688  [key=0, style=solid];
m3_1076 -> m3_1077  [key=0, style=solid];
m3_1077 -> m3_1069  [key=2, style=dotted];
m3_1077 -> m3_1078  [key=0, style=solid];
m3_1078 -> m3_1076  [key=0, color=blue, style=bold];
m3_411 -> m3_412  [key=0, style=solid];
m3_412 -> m3_62  [key=2, style=dotted];
m3_412 -> m3_413  [key=0, style=solid];
m3_413 -> m3_394  [key=2, style=dotted];
m3_413 -> m3_414  [key=0, style=solid];
m3_414 -> m3_241  [key=2, style=dotted];
m3_414 -> m3_415  [key=0, style=solid];
m3_415 -> m3_256  [key=2, style=dotted];
m3_415 -> m3_416  [key=0, style=solid];
m3_416 -> m3_411  [key=0, color=blue, style=bold];
m3_55 -> m3_56  [key=0, style=solid];
m3_56 -> m3_62  [key=2, style=dotted];
m3_56 -> m3_57  [key=0, style=solid];
m3_57 -> m3_12  [key=2, style=dotted];
m3_57 -> m3_58  [key=0, style=solid];
m3_57 -> m3_59  [key=1, color=darkseagreen4, label=output, style=dashed];
m3_58 -> m3_13  [key=2, style=dotted];
m3_58 -> m3_59  [key=0, style=solid];
m3_59 -> m3_14  [key=2, style=dotted];
m3_59 -> m3_60  [key=0, style=solid];
m3_60 -> m3_63  [key=2, style=dotted];
m3_60 -> m3_13  [key=2, style=dotted];
m3_60 -> m3_61  [key=0, style=solid];
m3_61 -> m3_55  [key=0, color=blue, style=bold];
m3_133 -> m3_12  [key=2, style=dotted];
m3_133 -> m3_126  [key=2, style=dotted];
m3_133 -> m3_134  [key=0, style=solid];
m3_134 -> m3_132  [key=0, color=blue, style=bold];
m3_141 -> m3_135  [key=2, style=dotted];
m3_141 -> m3_12  [key=2, style=dotted];
m3_141 -> m3_142  [key=0, style=solid];
m3_142 -> m3_140  [key=0, color=blue, style=bold];
m3_157 -> m3_158  [key=0, style=solid];
m3_158 -> m3_158  [key=1, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, int>", style=dashed];
m3_158 -> m3_159  [key=0, style=solid];
m3_159 -> m3_157  [key=0, color=blue, style=bold];
m3_160 -> m3_161  [key=0, style=solid];
m3_161 -> m3_161  [key=1, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, int>", style=dashed];
m3_161 -> m3_162  [key=0, style=solid];
m3_162 -> m3_160  [key=0, color=blue, style=bold];
m3_199 -> m3_12  [key=2, style=dotted];
m3_199 -> m3_193  [key=2, style=dotted];
m3_199 -> m3_200  [key=0, style=solid];
m3_200 -> m3_198  [key=0, color=blue, style=bold];
m3_207 -> m3_12  [key=2, style=dotted];
m3_207 -> m3_201  [key=2, style=dotted];
m3_207 -> m3_208  [key=0, style=solid];
m3_208 -> m3_206  [key=0, color=blue, style=bold];
m3_223 -> m3_14  [key=2, style=dotted];
m3_223 -> m3_224  [key=0, style=solid];
m3_224 -> m3_222  [key=0, color=blue, style=bold];
m3_320 -> m3_318  [key=0, color=blue, style=bold];
m3_331 -> m3_14  [key=2, style=dotted];
m3_331 -> m3_332  [key=0, style=solid];
m3_332 -> m3_330  [key=0, color=blue, style=bold];
m3_567 -> m3_565  [key=0, color=blue, style=bold];
m3_655 -> m3_653  [key=0, color=blue, style=bold];
m3_662 -> m3_660  [key=0, color=blue, style=bold];
m3_682 -> m3_680  [key=0, color=blue, style=bold];
m3_689 -> m3_687  [key=0, color=blue, style=bold];
m3_696 -> m3_694  [key=0, color=blue, style=bold];
m3_722 -> m3_720  [key=0, color=blue, style=bold];
m3_729 -> m3_727  [key=0, color=blue, style=bold];
m3_914 -> m3_912  [key=0, color=blue, style=bold];
m3_1140 -> m3_79  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized", style=dashed];
m3_1140 -> m3_83  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized", style=dashed];
m3_1140 -> m3_87  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestCollectionPrivateParameterized", style=dashed];
m3_1141 -> m3_226  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomConcurrentDictionary", style=dashed];
m3_1142 -> m3_293  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>", style=dashed];
m3_1142 -> m3_286  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>", style=dashed];
m3_1142 -> m3_289  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>", style=dashed];
m3_1143 -> m3_309  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>", style=dashed];
m3_1143 -> m3_312  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>", style=dashed];
m3_1143 -> m3_306  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>", style=dashed];
m3_1144 -> m3_319  [key=1, color=darkseagreen4, label=json, style=dashed];
m3_1145 -> m3_336  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>", style=dashed];
m3_1146 -> m3_402  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>", style=dashed];
m3_1146 -> m3_406  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>", style=dashed];
m3_1146 -> m3_395  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>", style=dashed];
m3_1146 -> m3_409  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>", style=dashed];
m3_1146 -> m3_398  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>", style=dashed];
m3_1147 -> m3_421  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>", style=dashed];
m3_1147 -> m3_424  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>", style=dashed];
m3_1147 -> m3_418  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>", style=dashed];
m3_1148 -> m3_444  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass", style=dashed];
m3_1149 -> m3_566  [key=1, color=darkseagreen4, label=json, style=dashed];
m3_1150 -> m3_569  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass", style=dashed];
m3_1150 -> m3_570  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass", style=dashed];
m3_1150 -> m3_571  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass", style=dashed];
m3_1150 -> m3_572  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass", style=dashed];
m3_1150 -> m3_573  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass", style=dashed];
m3_1150 -> m3_574  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass", style=dashed];
m3_1150 -> m3_575  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass", style=dashed];
m3_1150 -> m3_576  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass", style=dashed];
m3_1150 -> m3_577  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass", style=dashed];
m3_1150 -> m3_578  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass", style=dashed];
m3_1151 -> m3_654  [key=1, color=darkseagreen4, label=json, style=dashed];
m3_1152 -> m3_661  [key=1, color=darkseagreen4, label=json, style=dashed];
m3_1153 -> m3_681  [key=1, color=darkseagreen4, label=json, style=dashed];
m3_1154 -> m3_688  [key=1, color=darkseagreen4, label=json, style=dashed];
m3_1155 -> m3_695  [key=1, color=darkseagreen4, label=json, style=dashed];
m3_1156 -> m3_721  [key=1, color=darkseagreen4, label=json, style=dashed];
m3_1157 -> m3_728  [key=1, color=darkseagreen4, label=json, style=dashed];
m3_1158 -> m3_913  [key=1, color=darkseagreen4, label=json, style=dashed];
m3_1159 -> m3_939  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.AccountInfo", style=dashed];
m3_1159 -> m3_940  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.AccountInfo", style=dashed];
m3_1160 -> m3_979  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass", style=dashed];
m3_1160 -> m3_967  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass", style=dashed];
m3_1160 -> m3_960  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass", style=dashed];
m3_1160 -> m3_975  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass", style=dashed];
m3_1160 -> m3_943  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass", style=dashed];
m3_1160 -> m3_964  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass", style=dashed];
m3_1160 -> m3_949  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass", style=dashed];
m3_1160 -> m3_946  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass", style=dashed];
m3_1160 -> m3_971  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass", style=dashed];
m3_1160 -> m3_952  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass", style=dashed];
m3_1160 -> m3_956  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass", style=dashed];
m3_1160 -> m3_983  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MyClass", style=dashed];
m3_1161 -> m3_998  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.CASResponce", style=dashed];
m3_1161 -> m3_999  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.CASResponce", style=dashed];
m3_1161 -> m3_1000  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.CASResponce", style=dashed];
m3_1161 -> m3_1003  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.CASResponce", style=dashed];
m3_1161 -> m3_986  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.CASResponce", style=dashed];
m3_1161 -> m3_987  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.CASResponce", style=dashed];
m3_1161 -> m3_988  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.CASResponce", style=dashed];
m3_1161 -> m3_989  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.CASResponce", style=dashed];
m3_1161 -> m3_990  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.CASResponce", style=dashed];
m3_1161 -> m3_991  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.CASResponce", style=dashed];
m3_1161 -> m3_992  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.CASResponce", style=dashed];
m3_1161 -> m3_993  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.CASResponce", style=dashed];
m3_1161 -> m3_1035  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.CASResponce", style=dashed];
m3_1161 -> m3_1037  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.CASResponce", style=dashed];
m3_1161 -> m3_1039  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.CASResponce", style=dashed];
m3_1161 -> m3_1041  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.CASResponce", style=dashed];
m3_1161 -> m3_1043  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.CASResponce", style=dashed];
m3_1161 -> m3_1045  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.CASResponce", style=dashed];
m3_1161 -> m3_1047  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.CASResponce", style=dashed];
m3_1161 -> m3_1048  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.CASResponce", style=dashed];
m3_1161 -> m3_1049  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.CASResponce", style=dashed];
m3_1161 -> m3_1050  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.CASResponce", style=dashed];
m3_1161 -> m3_1007  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.CASResponce", style=dashed];
m3_1161 -> m3_1008  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.CASResponce", style=dashed];
m3_1161 -> m3_1010  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.CASResponce", style=dashed];
m3_1161 -> m3_1012  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.CASResponce", style=dashed];
m3_1161 -> m3_1013  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.CASResponce", style=dashed];
m3_1161 -> m3_1014  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.CASResponce", style=dashed];
m3_1162 -> m3_1064  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>", style=dashed];
m3_1162 -> m3_1058  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>", style=dashed];
m3_1162 -> m3_1061  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ReadOnlyCollectionWithArrayArgument<T>", style=dashed];
m3_1163 -> m3_1098  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList", style=dashed];
m3_1163 -> m3_1091  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList", style=dashed];
m3_1163 -> m3_1094  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList", style=dashed];
m3_1164 -> m3_1109  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>", style=dashed];
m3_1164 -> m3_1103  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>", style=dashed];
m3_1164 -> m3_1104  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>", style=dashed];
m3_1164 -> m3_1100  [key=1, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>", style=dashed];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=2, style=dotted];
m4_2 -> m4_0  [key=0, color=blue, style=bold];
m4_87 -> m4_88  [key=0, style=solid];
m4_87 -> m4_89  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
m4_87 -> m4_94  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
m4_87 -> m4_97  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
m4_88 -> m4_89  [key=0, style=solid];
m4_89 -> m4_90  [key=0, style=solid];
m4_89 -> m4_91  [key=1, color=darkseagreen4, label=metadataType, style=dashed];
m4_89 -> m4_68  [key=2, style=dotted];
m4_94 -> m4_103  [key=2, style=dotted];
m4_94 -> m4_95  [key=0, style=solid];
m4_94 -> m4_96  [key=1, color=darkseagreen4, label=attribute, style=dashed];
m4_97 -> m4_98  [key=0, style=solid];
m4_97 -> m4_101  [key=0, style=solid];
m4_97 -> m4_104  [key=2, style=dotted];
m4_90 -> m4_91  [key=0, style=solid];
m4_90 -> m4_94  [key=0, style=solid];
m4_91 -> m4_103  [key=2, style=dotted];
m4_91 -> m4_92  [key=0, style=solid];
m4_91 -> m4_93  [key=1, color=darkseagreen4, label=attribute, style=dashed];
m4_68 -> m4_69  [key=0, style=solid];
m4_92 -> m4_93  [key=0, style=solid];
m4_92 -> m4_94  [key=0, style=solid];
m4_93 -> m4_102  [key=0, style=solid];
m4_102 -> m4_87  [key=0, color=blue, style=bold];
m4_95 -> m4_96  [key=0, style=solid];
m4_95 -> m4_97  [key=0, style=solid];
m4_96 -> m4_102  [key=0, style=solid];
m4_98 -> m4_103  [key=2, style=dotted];
m4_98 -> m4_99  [key=0, style=solid];
m4_98 -> m4_100  [key=1, color=darkseagreen4, label=attribute, style=dashed];
m4_101 -> m4_102  [key=0, style=solid];
m4_99 -> m4_97  [key=0, style=solid];
m4_99 -> m4_100  [key=0, style=solid];
m4_100 -> m4_102  [key=0, style=solid];
m4_127 -> m4_128  [key=0, style=solid];
m4_127 -> m4_131  [key=1, color=darkseagreen4, label=object, style=dashed];
m4_127 -> m4_134  [key=1, color=darkseagreen4, label=object, style=dashed];
m4_128 -> m4_129  [key=0, style=solid];
m4_128 -> m4_130  [key=1, color=darkseagreen4, label=type, style=dashed];
m4_131 -> m4_132  [key=0, style=solid];
m4_131 -> m4_133  [key=1, color=darkseagreen4, label=memberInfo, style=dashed];
m4_134 -> m4_103  [key=2, style=dotted];
m4_134 -> m4_135  [key=0, style=solid];
m4_129 -> m4_130  [key=0, style=solid];
m4_129 -> m4_131  [key=0, style=solid];
m4_130 -> m4_87  [key=2, style=dotted];
m4_130 -> m4_135  [key=0, style=solid];
m4_135 -> m4_127  [key=0, color=blue, style=bold];
m4_132 -> m4_133  [key=0, style=solid];
m4_132 -> m4_134  [key=0, style=solid];
m4_133 -> m4_135  [key=0, style=solid];
m4_133 -> m4_105  [key=2, style=dotted];
m4_105 -> m4_106  [key=0, style=solid];
m4_105 -> m4_107  [key=1, color=darkseagreen4, label="System.Reflection.MemberInfo", style=dashed];
m4_105 -> m4_109  [key=1, color=darkseagreen4, label="System.Reflection.MemberInfo", style=dashed];
m4_105 -> m4_114  [key=1, color=darkseagreen4, label="System.Reflection.MemberInfo", style=dashed];
m4_105 -> m4_117  [key=1, color=darkseagreen4, label="System.Reflection.MemberInfo", style=dashed];
m4_105 -> m4_118  [key=1, color=darkseagreen4, label="System.Reflection.MemberInfo", style=dashed];
m4_105 -> m4_119  [key=1, color=darkseagreen4, label="System.Reflection.MemberInfo", style=dashed];
m4_10 -> m4_11  [key=0, style=solid];
m4_11 -> m4_0  [key=2, style=dotted];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_13  [key=1, color=darkseagreen4, label=converterAttribute, style=dashed];
m4_11 -> m4_15  [key=1, color=darkseagreen4, label=converterAttribute, style=dashed];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_16  [key=0, style=solid];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_15  [key=1, color=darkseagreen4, label=creator, style=dashed];
m4_13 -> m4_18  [key=2, style=dotted];
m4_15 -> m4_17  [key=0, style=solid];
m4_15 -> m4_19  [key=2, style=dotted];
m4_16 -> m4_17  [key=0, style=solid];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> m4_16  [key=0, style=solid];
m4_17 -> m4_10  [key=0, color=blue, style=bold];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_22  [key=1, color=darkseagreen4, label="object[]", style=dashed];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_18  [key=2, style=dotted];
m4_22 -> m4_23  [key=0, style=solid];
m4_22 -> m4_19  [key=2, style=dotted];
m4_23 -> m4_20  [key=0, color=blue, style=bold];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_26  [key=1, color=darkseagreen4, label="object[]", style=dashed];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_18  [key=2, style=dotted];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_19  [key=2, style=dotted];
m4_27 -> m4_24  [key=0, color=blue, style=bold];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_30  [key=1, color=darkseagreen4, label="Newtonsoft.Json.JsonContainerAttribute", style=dashed];
m4_28 -> m4_32  [key=1, color=darkseagreen4, label="Newtonsoft.Json.JsonContainerAttribute", style=dashed];
m4_28 -> m4_33  [key=1, color=darkseagreen4, label="Newtonsoft.Json.JsonContainerAttribute", style=dashed];
m4_29 -> m4_30  [key=0, style=solid];
m4_29 -> m4_33  [key=0, style=solid];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_32  [key=0, style=solid];
m4_32 -> m4_24  [key=2, style=dotted];
m4_32 -> m4_33  [key=0, style=solid];
m4_33 -> m4_34  [key=0, style=solid];
m4_31 -> m4_34  [key=0, style=solid];
m4_34 -> m4_28  [key=0, color=blue, style=bold];
m4_35 -> m4_36  [key=0, style=solid];
m4_35 -> m4_37  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
m4_35 -> m4_44  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
m4_35 -> m4_48  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
m4_35 -> m4_50  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
m4_35 -> m4_53  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_40  [key=2, style=dotted];
m4_36 -> m4_39  [key=2, style=dotted];
m4_36 -> m4_49  [key=1, color=darkseagreen4, label=defaultConstructor, style=dashed];
m4_36 -> m4_51  [key=1, color=darkseagreen4, label=defaultConstructor, style=dashed];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_42  [key=1, color=darkseagreen4, label="object[]", style=dashed];
m4_37 -> m4_43  [key=1, color=darkseagreen4, label="object[]", style=dashed];
m4_37 -> m4_47  [key=1, color=darkseagreen4, label="object[]", style=dashed];
m4_37 -> m4_53  [key=1, color=darkseagreen4, label=ex, style=dashed];
m4_44 -> m4_57  [key=2, style=dotted];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_46  [key=1, color=darkseagreen4, label=parameterizedConstructorInfo, style=dashed];
m4_48 -> m4_60  [key=2, style=dotted];
m4_48 -> m4_61  [key=2, style=dotted];
m4_48 -> m4_54  [key=0, style=solid];
m4_50 -> m4_60  [key=2, style=dotted];
m4_50 -> m4_61  [key=2, style=dotted];
m4_50 -> m4_54  [key=0, style=solid];
m4_53 -> m4_61  [key=2, style=dotted];
m4_53 -> m4_63  [key=2, style=dotted];
m4_53 -> m4_54  [key=0, style=solid];
m4_49 -> m4_50  [key=0, style=solid];
m4_49 -> m4_51  [key=0, style=solid];
m4_51 -> m4_62  [key=2, style=dotted];
m4_51 -> m4_54  [key=0, style=solid];
m4_38 -> m4_35  [key=0, color=blue, style=bold];
m4_42 -> m4_43  [key=0, style=solid];
m4_42 -> m4_49  [key=0, style=solid];
m4_43 -> m4_55  [key=2, style=dotted];
m4_43 -> m4_56  [key=2, style=dotted];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_64  [key=1, color=darkseagreen4, label="lambda expression", style=dashed];
m4_47 -> m4_54  [key=0, style=solid];
m4_69 -> m4_18  [key=2, style=dotted];
m4_69 -> m4_70  [key=0, style=solid];
m4_70 -> m4_68  [key=0, color=blue, style=bold];
m4_106 -> m4_107  [key=0, style=solid];
m4_107 -> m4_68  [key=2, style=dotted];
m4_107 -> m4_108  [key=0, style=solid];
m4_107 -> m4_109  [key=1, color=darkseagreen4, label=metadataType, style=dashed];
m4_109 -> m4_110  [key=0, style=solid];
m4_109 -> m4_111  [key=1, color=darkseagreen4, label=metadataTypeMemberInfo, style=dashed];
m4_109 -> m4_126  [key=2, style=dotted];
m4_114 -> m4_103  [key=2, style=dotted];
m4_114 -> m4_115  [key=0, style=solid];
m4_114 -> m4_116  [key=1, color=darkseagreen4, label=attribute, style=dashed];
m4_117 -> m4_118  [key=0, style=solid];
m4_117 -> m4_124  [key=0, style=solid];
m4_118 -> m4_119  [key=0, style=solid];
m4_118 -> m4_124  [key=0, style=solid];
m4_118 -> m4_104  [key=2, style=dotted];
m4_119 -> m4_120  [key=0, style=solid];
m4_119 -> m4_121  [key=1, color=darkseagreen4, label=interfaceTypeMemberInfo, style=dashed];
m4_119 -> m4_126  [key=2, style=dotted];
m4_108 -> m4_109  [key=0, style=solid];
m4_108 -> m4_114  [key=0, style=solid];
m4_110 -> m4_111  [key=0, style=solid];
m4_110 -> m4_114  [key=0, style=solid];
m4_111 -> m4_103  [key=2, style=dotted];
m4_111 -> m4_112  [key=0, style=solid];
m4_111 -> m4_113  [key=1, color=darkseagreen4, label=attribute, style=dashed];
m4_112 -> m4_113  [key=0, style=solid];
m4_112 -> m4_114  [key=0, style=solid];
m4_113 -> m4_125  [key=0, style=solid];
m4_125 -> m4_105  [key=0, color=blue, style=bold];
m4_115 -> m4_116  [key=0, style=solid];
m4_115 -> m4_117  [key=0, style=solid];
m4_116 -> m4_125  [key=0, style=solid];
m4_124 -> m4_125  [key=0, style=solid];
m4_120 -> m4_118  [key=0, style=solid];
m4_120 -> m4_121  [key=0, style=solid];
m4_121 -> m4_103  [key=2, style=dotted];
m4_121 -> m4_122  [key=0, style=solid];
m4_121 -> m4_123  [key=1, color=darkseagreen4, label=attribute, style=dashed];
m4_122 -> m4_118  [key=0, style=solid];
m4_122 -> m4_123  [key=0, style=solid];
m4_123 -> m4_125  [key=0, style=solid];
m4_71 -> m4_72  [key=0, style=solid];
m4_72 -> m4_82  [key=2, style=dotted];
m4_72 -> m4_73  [key=0, style=solid];
m4_73 -> m4_74  [key=0, style=solid];
m4_73 -> m4_79  [key=1, color=darkseagreen4, label=attribute, style=dashed];
m4_73 -> m4_80  [key=0, style=solid];
m4_74 -> m4_83  [key=2, style=dotted];
m4_74 -> m4_75  [key=0, style=solid];
m4_74 -> m4_78  [key=1, color=darkseagreen4, label=attributeType, style=dashed];
m4_79 -> m4_86  [key=2, style=dotted];
m4_79 -> m4_81  [key=0, style=solid];
m4_80 -> m4_81  [key=0, style=solid];
m4_75 -> m4_73  [key=0, style=solid];
m4_75 -> m4_76  [key=0, style=solid];
m4_75 -> m4_84  [key=2, style=dotted];
m4_78 -> m4_85  [key=2, style=dotted];
m4_78 -> m4_79  [key=0, style=solid];
m4_76 -> m4_77  [key=0, style=solid];
m4_76 -> m4_78  [key=1, color=darkseagreen4, label=metadataClassTypeName, style=dashed];
m4_76 -> m4_79  [key=1, color=darkseagreen4, label=metadataClassTypeName, style=dashed];
m4_77 -> m4_78  [key=0, style=solid];
m4_77 -> m4_79  [key=0, style=solid];
m4_81 -> m4_71  [key=0, color=blue, style=bold];
m4_4 -> m4_5  [key=0, style=solid];
m4_5 -> m4_0  [key=2, style=dotted];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_7  [key=1, color=darkseagreen4, label=objectAttribute, style=dashed];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_8  [key=0, style=solid];
m4_7 -> m4_9  [key=0, style=solid];
m4_8 -> m4_9  [key=0, style=solid];
m4_9 -> m4_4  [key=0, color=blue, style=bold];
m4_41 -> m4_42  [key=0, style=solid];
m4_41 -> m4_43  [key=1, color=darkseagreen4, label="object[]", style=dashed];
m4_41 -> m4_47  [key=1, color=darkseagreen4, label="object[]", style=dashed];
m4_64 -> m4_65  [key=0, style=solid];
m4_45 -> m4_46  [key=0, style=solid];
m4_45 -> m4_48  [key=0, style=solid];
m4_46 -> m4_58  [key=2, style=dotted];
m4_46 -> m4_47  [key=0, style=solid];
m4_54 -> m4_41  [key=0, color=blue, style=bold];
m4_52 -> m4_53  [key=0, style=solid];
m4_65 -> m4_67  [key=2, style=dotted];
m4_65 -> m4_66  [key=0, style=solid];
m4_66 -> m4_64  [key=0, color=blue, style=bold];
m4_136 -> m4_44  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
m4_136 -> m4_48  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
m4_136 -> m4_50  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
m4_136 -> m4_53  [key=1, color=darkseagreen4, label="System.Type", style=dashed];
m4_137 -> m4_49  [key=1, color=darkseagreen4, label=defaultConstructor, style=dashed];
m4_137 -> m4_51  [key=1, color=darkseagreen4, label=defaultConstructor, style=dashed];
m5_0 -> m5_1  [key=0, color=green, style=solid];
m5_0 -> m5_2  [key=1, color=green, label=object, style=dashed];
m5_1 -> m5_2  [key=0, color=green, style=solid];
m5_2 -> m5_3  [key=0, color=green, style=solid];
m5_2 -> m5_4  [key=0, color=green, style=solid];
m5_5 -> m3_359  [key=2, color=green, style=dotted];
m5_5 -> m5_9  [key=0, color=green, style=solid];
m5_9 -> m5_0  [key=0, color=green, style=bold];
m5_7 -> m3_359  [key=2, color=green, style=dotted];
m5_7 -> m5_9  [key=0, color=green, style=solid];
m5_3 -> m5_4  [key=0, color=green, style=solid];
m5_4 -> m5_10  [key=2, color=green, style=dotted];
m5_4 -> m5_5  [key=0, color=green, style=solid];
m5_4 -> m5_6  [key=1, color=green, label=ticks, style=dashed];
m5_4 -> m5_8  [key=1, color=green, label=ticks, style=dashed];
m5_6 -> m5_7  [key=0, color=green, style=solid];
m5_6 -> m5_8  [key=0, color=green, style=solid];
m5_8 -> m5_9  [key=0, color=green, style=solid];
m5_8 -> m5_12  [key=2, color=green, style=dotted];
m5_13 -> m5_14  [key=0, color=green, label="System.Type", style=dashed];
m5_13 -> m5_15  [key=1, color=green, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_13 -> m5_17  [key=1, color=green, label="System.Type", style=dashed];
m5_13 -> m5_20  [key=1, color=green, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_13 -> m5_21  [key=1, color=green, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_13 -> m5_22  [key=1, color=green, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_13 -> m5_23  [key=1, color=green, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_13 -> m5_24  [key=1, color=green, label="System.Type", style=dashed];
m5_13 -> m5_25  [key=1, color=green, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_13 -> m5_29  [key=1, color=green, label="System.Type", style=dashed];
m5_14 -> m5_31  [key=2, color=green, style=dotted];
m5_14 -> m5_15  [key=0, color=green, style=solid];
m5_14 -> m5_16  [key=1, color=green, label=nullable, style=dashed];
m5_15 -> m5_16  [key=0, color=green, style=solid];
m5_15 -> m5_19  [key=0, color=green, style=solid];
m5_17 -> m5_30  [key=0, color=green, style=solid];
m5_17 -> m5_33  [key=2, color=green, style=dotted];
m5_17 -> m5_32  [key=2, color=green, style=dotted];
m5_20 -> m5_21  [key=0, color=green, style=solid];
m5_20 -> m5_22  [key=0, color=green, style=solid];
m5_21 -> m5_26  [key=0, color=green, style=solid];
m5_21 -> m5_27  [key=1, color=green, label=ticks, style=dashed];
m5_22 -> m5_23  [key=0, color=green, style=solid];
m5_22 -> m5_25  [key=0, color=green, style=solid];
m5_23 -> m5_34  [key=2, color=green, style=dotted];
m5_23 -> m5_24  [key=0, color=green, style=solid];
m5_23 -> m5_26  [key=0, color=green, style=solid];
m5_23 -> m5_27  [key=1, color=green, label=ticks, style=dashed];
m5_24 -> m5_30  [key=0, color=green, style=solid];
m5_24 -> m5_33  [key=2, color=green, style=dotted];
m5_24 -> m5_32  [key=2, color=green, style=dotted];
m5_25 -> m5_30  [key=0, color=green, style=solid];
m5_25 -> m5_33  [key=2, color=green, style=dotted];
m5_25 -> m5_32  [key=2, color=green, style=dotted];
m5_29 -> m5_30  [key=0, color=green, style=solid];
m5_29 -> m5_33  [key=2, color=green, style=dotted];
m5_29 -> m5_32  [key=2, color=green, style=dotted];
m5_16 -> m5_17  [key=0, color=green, style=solid];
m5_16 -> m5_18  [key=0, color=green, style=solid];
m5_19 -> m5_20  [key=0, color=green, style=solid];
m5_19 -> m5_26  [key=1, color=green, label=ticks, style=dashed];
m5_19 -> m5_27  [key=1, color=green, label=ticks, style=dashed];
m5_30 -> m5_13  [key=0, color=green, style=bold];
m5_26 -> m5_29  [key=0, color=green, style=solid];
m5_26 -> m5_27  [key=0, color=green, style=solid];
m5_27 -> m5_28  [key=0, color=green, style=solid];
m5_27 -> m5_35  [key=2, color=green, style=dotted];
m5_18 -> m5_30  [key=0, color=green, style=solid];
m5_28 -> m5_30  [key=0, color=green, style=solid];
m6_70 -> m6_71  [key=0, color=green, style=solid];
m6_71 -> m6_72  [key=0, color=green, style=solid];
m6_71 -> m6_19  [key=2, color=green, style=dotted];
m6_71 -> m6_73  [key=1, color=green, label="lambda expression", style=dashed];
m6_72 -> m6_70  [key=0, color=green, style=bold];
m6_73 -> m6_74  [key=0, color=green, style=solid];
m6_34 -> m6_35  [key=0, color=green, style=solid];
m6_35 -> m6_40  [key=2, color=green, style=dotted];
m6_35 -> m6_36  [key=0, color=green, style=solid];
m6_35 -> m6_39  [key=2, color=green, style=dotted];
m6_36 -> m6_37  [key=0, color=green, style=solid];
m6_36 -> m6_5  [key=2, color=green, style=dotted];
m6_36 -> m6_6  [key=2, color=green, style=dotted];
m6_37 -> m6_38  [key=0, color=green, style=solid];
m6_37 -> m6_7  [key=2, color=green, style=dotted];
m6_38 -> m6_34  [key=0, color=green, style=bold];
m6_0 -> m6_1  [key=0, color=green, style=solid];
m6_1 -> m6_2  [key=0, color=green, label=unixEpoch, style=dashed];
m6_2 -> m6_3  [key=0, color=green, label=result, style=dashed];
m6_2 -> m6_5  [key=2, color=green, style=dotted];
m6_2 -> m6_6  [key=2, color=green, style=dotted];
m6_3 -> m6_4  [key=0, color=green, style=solid];
m6_3 -> m6_7  [key=2, color=green, style=dotted];
m6_4 -> m6_0  [key=0, color=green, style=bold];
m6_121 -> m6_122  [key=0, color=green, style=solid];
m6_122 -> m6_123  [key=0, color=green, style=solid];
m6_122 -> m6_51  [key=2, color=green, style=dotted];
m6_122 -> m6_131  [key=2, color=green, style=dotted];
m6_123 -> m6_124  [key=0, color=green, style=solid];
m6_123 -> m6_125  [key=1, color=green, label=json, style=dashed];
m6_123 -> m6_107  [key=2, color=green, style=dotted];
m6_127 -> m6_128  [key=0, color=green, style=solid];
m6_127 -> m6_7  [key=2, color=green, style=dotted];
m6_127 -> m6_51  [key=2, color=green, style=dotted];
m6_128 -> m6_129  [key=0, color=green, style=solid];
m6_128 -> m6_84  [key=2, color=green, style=dotted];
m6_129 -> m6_130  [key=0, color=green, style=solid];
m6_129 -> m6_7  [key=2, color=green, style=dotted];
m6_129 -> m6_51  [key=2, color=green, style=dotted];
m6_130 -> m6_121  [key=0, color=green, style=bold];
m6_124 -> m6_125  [key=0, color=green, style=solid];
m6_124 -> m6_108  [key=2, color=green, style=dotted];
m6_125 -> m6_127  [key=1, color=green, label=obj2, style=dashed];
m6_125 -> m6_129  [key=1, color=green, label=obj2, style=dashed];
m6_125 -> m6_126  [key=0, color=green, style=solid];
m6_125 -> m6_128  [key=1, color=green, label=obj2, style=dashed];
m6_125 -> m6_109  [key=2, color=green, style=dotted];
m6_126 -> m6_127  [key=0, color=green, style=solid];
m6_126 -> m6_110  [key=2, color=green, style=dotted];
m6_66 -> m6_67  [key=0, color=green, style=solid];
m6_67 -> m6_68  [key=0, color=green, style=solid];
m6_67 -> m6_5  [key=2, color=green, style=dotted];
m6_67 -> m6_58  [key=2, color=green, style=dotted];
m6_68 -> m6_69  [key=0, color=green, style=solid];
m6_68 -> m6_39  [key=2, color=green, style=dotted];
m6_68 -> m6_7  [key=2, color=green, style=dotted];
m6_69 -> m6_66  [key=0, color=green, style=bold];
m6_41 -> m6_42  [key=0, color=green, style=solid];
m6_42 -> m6_50  [key=2, color=green, style=dotted];
m6_42 -> m6_43  [key=0, color=green, style=solid];
m6_42 -> m6_44  [key=1, color=green, label=t, style=dashed];
m6_43 -> m6_5  [key=2, color=green, style=dotted];
m6_43 -> m6_44  [key=0, color=green, style=solid];
m6_43 -> m6_47  [key=1, color=green, label=converter, style=dashed];
m6_44 -> m6_45  [key=0, color=green, style=solid];
m6_44 -> m6_6  [key=2, color=green, style=dotted];
m6_47 -> m6_48  [key=0, color=green, style=solid];
m6_47 -> m6_6  [key=2, color=green, style=dotted];
m6_46 -> m6_50  [key=2, color=green, style=dotted];
m6_46 -> m6_39  [key=2, color=green, style=dotted];
m6_46 -> m6_47  [key=0, color=green, style=solid];
m6_46 -> m6_51  [key=2, color=green, style=dotted];
m6_45 -> m6_7  [key=2, color=green, style=dotted];
m6_45 -> m6_46  [key=0, color=green, style=solid];
m6_48 -> m6_7  [key=2, color=green, style=dotted];
m6_48 -> m6_49  [key=0, color=green, style=solid];
m6_49 -> m6_41  [key=0, color=green, style=bold];
m6_80 -> m6_81  [key=0, color=green, style=solid];
m6_81 -> m6_5  [key=2, color=green, style=dotted];
m6_81 -> m6_58  [key=2, color=green, style=dotted];
m6_81 -> m6_82  [key=0, color=green, style=solid];
m6_82 -> m6_83  [key=0, color=green, style=solid];
m6_82 -> m6_84  [key=2, color=green, style=dotted];
m6_83 -> m6_80  [key=0, color=green, style=bold];
m6_23 -> m6_24  [key=0, color=green, style=solid];
m6_24 -> m6_5  [key=2, color=green, style=dotted];
m6_24 -> m6_25  [key=0, color=green, style=solid];
m6_24 -> m6_28  [key=1, color=green, label=converter, style=dashed];
m6_25 -> m6_26  [key=0, color=green, style=solid];
m6_25 -> m6_19  [key=2, color=green, style=dotted];
m6_25 -> m6_27  [key=1, color=green, label="lambda expression", style=dashed];
m6_28 -> m6_33  [key=2, color=green, style=dotted];
m6_28 -> m6_32  [key=2, color=green, style=dotted];
m6_28 -> m6_31  [key=2, color=green, style=dotted];
m6_28 -> m6_30  [key=2, color=green, style=dotted];
m6_28 -> m6_29  [key=0, color=green, style=solid];
m6_26 -> m6_23  [key=0, color=green, style=bold];
m6_27 -> m6_28  [key=0, color=green, style=solid];
m6_76 -> m6_77  [key=0, color=green, style=solid];
m6_77 -> m6_5  [key=2, color=green, style=dotted];
m6_77 -> m6_58  [key=2, color=green, style=dotted];
m6_77 -> m6_78  [key=0, color=green, style=solid];
m6_78 -> m6_7  [key=2, color=green, style=dotted];
m6_78 -> m6_79  [key=0, color=green, style=solid];
m6_78 -> m6_51  [key=2, color=green, style=dotted];
m6_79 -> m6_76  [key=0, color=green, style=bold];
m6_59 -> m6_60  [key=0, color=green, style=solid];
m6_60 -> m6_5  [key=2, color=green, style=dotted];
m6_60 -> m6_61  [key=0, color=green, style=solid];
m6_60 -> m6_62  [key=1, color=green, label=converter, style=dashed];
m6_60 -> m6_63  [key=1, color=green, label=converter, style=dashed];
m6_61 -> m6_39  [key=2, color=green, style=dotted];
m6_61 -> m6_62  [key=0, color=green, style=solid];
m6_62 -> m6_63  [key=0, color=green, style=solid];
m6_62 -> m6_6  [key=2, color=green, style=dotted];
m6_63 -> m6_58  [key=2, color=green, style=dotted];
m6_63 -> m6_64  [key=0, color=green, style=solid];
m6_64 -> m6_39  [key=2, color=green, style=dotted];
m6_64 -> m6_7  [key=2, color=green, style=dotted];
m6_64 -> m6_65  [key=0, color=green, style=solid];
m6_65 -> m6_59  [key=0, color=green, style=bold];
m6_52 -> m6_53  [key=0, color=green, style=solid];
m6_53 -> m6_19  [key=2, color=green, style=dotted];
m6_53 -> m6_54  [key=0, color=green, style=solid];
m6_53 -> m6_55  [key=1, color=green, label="lambda expression", style=dashed];
m6_54 -> m6_52  [key=0, color=green, style=bold];
m6_55 -> m6_56  [key=0, color=green, style=solid];
m6_111 -> m6_112  [key=0, color=green, style=solid];
m6_112 -> m6_120  [key=2, color=green, style=dotted];
m6_112 -> m6_113  [key=0, color=green, style=solid];
m6_112 -> m6_51  [key=2, color=green, style=dotted];
m6_113 -> m6_107  [key=2, color=green, style=dotted];
m6_113 -> m6_114  [key=0, color=green, style=solid];
m6_113 -> m6_115  [key=1, color=green, label=json, style=dashed];
m6_117 -> m6_7  [key=2, color=green, style=dotted];
m6_117 -> m6_118  [key=0, color=green, style=solid];
m6_117 -> m6_51  [key=2, color=green, style=dotted];
m6_118 -> m6_7  [key=2, color=green, style=dotted];
m6_118 -> m6_119  [key=0, color=green, style=solid];
m6_118 -> m6_51  [key=2, color=green, style=dotted];
m6_119 -> m6_111  [key=0, color=green, style=bold];
m6_114 -> m6_108  [key=2, color=green, style=dotted];
m6_114 -> m6_115  [key=0, color=green, style=solid];
m6_115 -> m6_109  [key=2, color=green, style=dotted];
m6_115 -> m6_117  [key=1, color=green, label=l2, style=dashed];
m6_115 -> m6_118  [key=1, color=green, label=l2, style=dashed];
m6_115 -> m6_116  [key=0, color=green, style=solid];
m6_116 -> m6_110  [key=2, color=green, style=dotted];
m6_116 -> m6_117  [key=0, color=green, style=solid];
m6_91 -> m6_92  [key=0, color=green, style=solid];
m6_92 -> m6_19  [key=2, color=green, style=dotted];
m6_92 -> m6_93  [key=0, color=green, style=solid];
m6_92 -> m6_94  [key=1, color=green, label="lambda expression", style=dashed];
m6_93 -> m6_91  [key=0, color=green, style=bold];
m6_94 -> m6_95  [key=0, color=green, style=solid];
m6_97 -> m6_98  [key=0, color=green, style=solid];
m6_98 -> m6_106  [key=2, color=green, style=dotted];
m6_98 -> m6_51  [key=2, color=green, style=dotted];
m6_98 -> m6_99  [key=0, color=green, style=solid];
m6_99 -> m6_107  [key=2, color=green, style=dotted];
m6_99 -> m6_100  [key=0, color=green, style=solid];
m6_99 -> m6_101  [key=1, color=green, label=json, style=dashed];
m6_103 -> m6_7  [key=2, color=green, style=dotted];
m6_103 -> m6_51  [key=2, color=green, style=dotted];
m6_103 -> m6_104  [key=0, color=green, style=solid];
m6_104 -> m6_7  [key=2, color=green, style=dotted];
m6_104 -> m6_51  [key=2, color=green, style=dotted];
m6_104 -> m6_105  [key=0, color=green, style=solid];
m6_105 -> m6_97  [key=0, color=green, style=bold];
m6_100 -> m6_108  [key=2, color=green, style=dotted];
m6_100 -> m6_101  [key=0, color=green, style=solid];
m6_101 -> m6_109  [key=2, color=green, style=dotted];
m6_101 -> m6_103  [key=1, color=green, label=l2, style=dashed];
m6_101 -> m6_104  [key=1, color=green, label=l2, style=dashed];
m6_101 -> m6_102  [key=0, color=green, style=solid];
m6_102 -> m6_110  [key=2, color=green, style=dotted];
m6_102 -> m6_103  [key=0, color=green, style=solid];
m6_16 -> m6_17  [key=0, color=green, style=solid];
m6_17 -> m6_19  [key=2, color=green, style=dotted];
m6_17 -> m6_18  [key=0, color=green, style=solid];
m6_17 -> m6_20  [key=1, color=green, label="lambda expression", style=dashed];
m6_18 -> m6_16  [key=0, color=green, style=bold];
m6_20 -> m6_21  [key=0, color=green, style=solid];
m6_8 -> m6_9  [key=0, color=green, style=solid];
m6_9 -> m6_11  [key=1, color=green, label=now, style=dashed];
m6_9 -> m6_10  [key=0, color=green, label=now, style=dashed];
m6_11 -> m6_5  [key=2, color=green, style=dotted];
m6_11 -> m6_6  [key=2, color=green, style=dotted];
m6_11 -> m6_12  [key=0, color=green, style=solid];
m6_12 -> m6_7  [key=2, color=green, style=dotted];
m6_12 -> m6_13  [key=0, color=green, style=solid];
m6_10 -> m6_14  [key=2, color=green, style=dotted];
m6_10 -> m6_15  [key=2, color=green, style=dotted];
m6_10 -> m6_11  [key=0, color=green, style=solid];
m6_10 -> m6_12  [key=1, color=green, label=nowTicks, style=dashed];
m6_13 -> m6_8  [key=0, color=green, style=bold];
m6_85 -> m6_86  [key=0, color=green, style=solid];
m6_86 -> m6_19  [key=2, color=green, style=dotted];
m6_86 -> m6_87  [key=0, color=green, style=solid];
m6_86 -> m6_88  [key=1, color=green, label="lambda expression", style=dashed];
m6_87 -> m6_85  [key=0, color=green, style=bold];
m6_88 -> m6_89  [key=0, color=green, style=solid];
m6_95 -> m6_5  [key=2, color=green, style=dotted];
m6_95 -> m6_58  [key=2, color=green, style=dotted];
m6_95 -> m6_96  [key=0, color=green, style=solid];
m6_21 -> m6_5  [key=2, color=green, style=dotted];
m6_21 -> m6_15  [key=2, color=green, style=dotted];
m6_21 -> m6_6  [key=2, color=green, style=dotted];
m6_21 -> m6_22  [key=0, color=green, style=solid];
m6_22 -> m6_20  [key=0, color=green, style=bold];
m6_56 -> m6_5  [key=2, color=green, style=dotted];
m6_56 -> m6_58  [key=2, color=green, style=dotted];
m6_56 -> m6_57  [key=0, color=green, style=solid];
m6_57 -> m6_55  [key=0, color=green, style=bold];
m6_74 -> m6_5  [key=2, color=green, style=dotted];
m6_74 -> m6_58  [key=2, color=green, style=dotted];
m6_74 -> m6_75  [key=0, color=green, style=solid];
m6_75 -> m6_73  [key=0, color=green, style=bold];
m6_89 -> m6_5  [key=2, color=green, style=dotted];
m6_89 -> m6_58  [key=2, color=green, style=dotted];
m6_89 -> m6_90  [key=0, color=green, style=solid];
m6_90 -> m6_88  [key=0, color=green, style=bold];
m6_96 -> m6_94  [key=0, color=green, style=bold];
m6_29 -> m6_27  [key=0, color=green, style=bold];
m6_132 -> m6_28  [key=1, color=green, label=converter, style=dashed];
}
