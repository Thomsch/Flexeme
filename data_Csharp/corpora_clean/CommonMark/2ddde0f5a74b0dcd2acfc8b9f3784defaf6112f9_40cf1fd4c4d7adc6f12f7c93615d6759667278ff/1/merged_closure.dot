digraph  {
d66 [cluster="CommonMark.Parser.BlockMethods.RemoveTrailingBlankLines(string, bool)", color=green, community=0, label="return ln.Remove(pos, ln.Length - pos);", prediction=0, span="115-115"];
d57 [cluster="CommonMark.Parser.BlockMethods.RemoveTrailingBlankLines(string, bool)", label="Entry CommonMark.Parser.BlockMethods.RemoveTrailingBlankLines(string, bool)", span="96-96"];
d62 [cluster="CommonMark.Parser.BlockMethods.RemoveTrailingBlankLines(string, bool)", label="pos = BString.bstrchrp(ln, '\n', pos)", span="109-109"];
d64 [cluster="CommonMark.Parser.BlockMethods.RemoveTrailingBlankLines(string, bool)", label=keepLastNewline, span="112-112"];
d65 [cluster="CommonMark.Parser.BlockMethods.RemoveTrailingBlankLines(string, bool)", color=green, community=0, label="pos++", prediction=0, span="113-113"];
d68 [cluster="CommonMark.Parser.BlockMethods.RemoveTrailingBlankLines(string, bool)", label="Exit CommonMark.Parser.BlockMethods.RemoveTrailingBlankLines(string, bool)", span="96-96"];
d71 [cluster="string.Remove(int, int)", label="Entry string.Remove(int, int)", span="0-0"];
d67 [cluster="CommonMark.Parser.BlockMethods.RemoveTrailingBlankLines(string, bool)", color=green, community=0, label="return ln;", prediction=0, span="119-119"];
d63 [cluster="CommonMark.Parser.BlockMethods.RemoveTrailingBlankLines(string, bool)", label="pos != -1", span="110-110"];
d112 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="b.StringContent = RemoveTrailingBlankLines(b.StringContent, true)", span="206-206"];
d58 [cluster="CommonMark.Parser.BlockMethods.RemoveTrailingBlankLines(string, bool)", label="string tofind = '' \t\r\n''", span="98-98"];
d59 [cluster="CommonMark.Parser.BlockMethods.RemoveTrailingBlankLines(string, bool)", label="var pos = BString.bninchrr(ln, ln.Length - 1, tofind)", span="100-100"];
d60 [cluster="CommonMark.Parser.BlockMethods.RemoveTrailingBlankLines(string, bool)", label="pos == -1", span="101-101"];
d70 [cluster="CommonMark.BString.bstrchrp(string, char, int)", label="Entry CommonMark.BString.bstrchrp(string, char, int)", span="90-90"];
d61 [cluster="CommonMark.Parser.BlockMethods.RemoveTrailingBlankLines(string, bool)", label="return string.Empty;", span="104-104"];
d108 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="b.StringContent = b.StringContent.Remove(0, pos)", span="197-197"];
d116 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="b.StringContent = b.StringContent.Remove(0, firstlinelen + 1)", span="213-213"];
d380 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="ln = ln.Remove(p + 1, numhashes)", span="816-816"];
d91 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="Entry CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", span="162-162"];
d111 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="BlockTag.IndentedCode", span="205-205"];
d132 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="Exit CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", span="162-162"];
d69 [cluster="CommonMark.BString.bninchrr(string, int, string)", label="Entry CommonMark.BString.bninchrr(string, int, string)", span="57-57"];
d299 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="int hashpos = BString.bstrchrp(ln, '#', first_nonspace)", span="595-595"];
d107 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="BString.bchar(b.StringContent, 0) == '[' &&\r\n                           0 != (pos = InlineMethods.parse_reference(b.StringContent,\r\n                                                  b.Top.Attributes.ReferenceMap))", span="193-195"];
d114 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="firstlinelen = BString.bstrchr(b.StringContent, '\n')", span="211-211"];
d115 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="b.Attributes.FencedCodeData.Info = BString.bmidstr(b.StringContent, 0, firstlinelen)", span="212-212"];
d117 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="b.Attributes.FencedCodeData.Info = b.Attributes.FencedCodeData.Info.Trim()", span="214-214"];
d371 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="ln = ln.TrimEnd()", span="801-801"];
d372 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="int p = ln.Length - 1", span="802-802"];
d377 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="p >= 0 && BString.bchar(ln, p) == '\\'", span="810-810"];
d373 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="int numhashes = 0", span="803-803"];
d375 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="p--", span="807-807"];
d378 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="p++", span="813-813"];
d376 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="numhashes++", span="808-808"];
d379 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="numhashes--", span="814-814"];
d381 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="add_line(container, ln, first_nonspace)", span="817-817"];
d86 [cluster="CommonMark.Parser.BlockMethods.break_out_of_lists(ref CommonMark.Syntax.Block, int)", label="finalize(container, line_number)", span="153-153"];
d88 [cluster="CommonMark.Parser.BlockMethods.break_out_of_lists(ref CommonMark.Syntax.Block, int)", label="finalize(b, line_number)", span="156-156"];
d140 [cluster="CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", label="finalize(parent, start_line)", span="264-264"];
d321 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="finalize(container, line_number)", span="645-645"];
d355 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="finalize(cur, line_number)", span="752-752"];
d364 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="finalize(container, line_number)", span="776-776"];
d382 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="finalize(container, line_number)", span="818-818"];
d92 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="int firstlinelen", span="164-164"];
d96 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="b == null", span="169-169"];
d98 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="!b.IsOpen", span="172-172"];
d100 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="b.IsOpen = false", span="178-178"];
d101 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="line_number > b.StartLine", span="179-179"];
d102 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="b.EndLine = line_number - 1", span="181-181"];
d103 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="b.EndLine = line_number", span="185-185"];
d104 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="b.Tag", span="188-188"];
d109 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="is_blank(b.StringContent, 0)", span="199-199"];
d110 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="b.Tag = BlockTag.ReferenceDefinition", span="201-201"];
d118 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="b.Attributes.FencedCodeData.Info = InlineMethods.Unescape(b.Attributes.FencedCodeData.Info)", span="215-215"];
d120 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="b.Attributes.ListData.IsTight = true", span="219-219"];
d121 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="item = b.FirstChild", span="220-220"];
d124 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="b.Attributes.ListData.IsTight = false", span="227-227"];
d128 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="b.Attributes.ListData.IsTight = false", span="238-238"];
d130 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="!(b.Attributes.ListData.IsTight)", span="243-243"];
d97 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="throw new ArgumentNullException(''b'');", span="170-170"];
d99 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="return;", span="175-175"];
d122 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="item != null", span="222-222"];
d298 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container = add_child(container, BlockTag.AtxHeader, line_number, offset + 1)", span="594-594"];
d234 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="ln = Utilities.Untabify(ln)", span="426-426"];
d282 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="first_nonspace = offset", span="557-557"];
d284 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="first_nonspace++", span="559-559"];
d300 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="hashpos == -1", span="597-597"];
d303 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="BString.bchar(ln, hashpos) == '#'", span="601-601"];
d305 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="hashpos++", span="604-604"];
d106 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="pos = 0", span="192-192"];
d37 [cluster="CommonMark.BString.bchar(string, int)", label="Entry CommonMark.BString.bchar(string, int)", span="13-13"];
d134 [cluster="CommonMark.Parser.InlineMethods.parse_reference(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="Entry CommonMark.Parser.InlineMethods.parse_reference(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", span="996-996"];
d113 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="BlockTag.FencedCode", span="209-209"];
d135 [cluster="CommonMark.BString.bstrchr(string, char)", label="Entry CommonMark.BString.bstrchr(string, char)", span="110-110"];
d54 [cluster="CommonMark.BString.bmidstr(string, int, int)", label="Entry CommonMark.BString.bmidstr(string, int, int)", span="121-121"];
d136 [cluster="string.Trim()", label="Entry string.Trim()", span="0-0"];
d370 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container.Tag == BlockTag.AtxHeader", span="797-797"];
d400 [cluster="string.TrimEnd(params char[])", label="Entry string.TrimEnd(params char[])", span="0-0"];
d374 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="p >= 0 && BString.bchar(ln, p) == '#'", span="805-805"];
d280 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="break_out_of_lists(ref container, line_number)", span="549-549"];
d290 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container = add_child(container, BlockTag.IndentedCode, line_number, offset + 1)", span="570-570"];
d295 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container = add_child(container, BlockTag.BlockQuote, line_number, offset + 1)", span="587-587"];
d308 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container = add_child(container, BlockTag.FencedCode, line_number, first_nonspace + 1)", span="612-612"];
d314 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container = add_child(container, BlockTag.HtmlBlock, line_number,\r\n                                        first_nonspace + 1)", span="622-623"];
d339 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container = add_child(container, BlockTag.ListItem, line_number,\r\n                        first_nonspace + 1)", span="689-690"];
d342 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="first_nonspace = offset", span="708-708"];
d235 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container = cur.Top", span="429-429"];
d237 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container = container.LastChild", span="436-436"];
d277 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container = container.Parent", span="539-539"];
d322 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container = container.Parent", span="646-646"];
d344 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="first_nonspace++", span="711-711"];
d44 [cluster="CommonMark.Parser.BlockMethods.add_line(CommonMark.Syntax.Block, string, int)", label="Entry CommonMark.Parser.BlockMethods.add_line(CommonMark.Syntax.Block, string, int)", span="80-80"];
d79 [cluster="CommonMark.Parser.BlockMethods.break_out_of_lists(ref CommonMark.Syntax.Block, int)", label="Entry CommonMark.Parser.BlockMethods.break_out_of_lists(ref CommonMark.Syntax.Block, int)", span="140-140"];
d80 [cluster="CommonMark.Parser.BlockMethods.break_out_of_lists(ref CommonMark.Syntax.Block, int)", label="Block container = bptr", span="142-142"];
d85 [cluster="CommonMark.Parser.BlockMethods.break_out_of_lists(ref CommonMark.Syntax.Block, int)", label="container != null && container != b", span="151-151"];
d87 [cluster="CommonMark.Parser.BlockMethods.break_out_of_lists(ref CommonMark.Syntax.Block, int)", label="container = container.Parent", span="154-154"];
d81 [cluster="CommonMark.Parser.BlockMethods.break_out_of_lists(ref CommonMark.Syntax.Block, int)", label="Block b = container.Top", span="143-143"];
d83 [cluster="CommonMark.Parser.BlockMethods.break_out_of_lists(ref CommonMark.Syntax.Block, int)", label="b = b.LastChild", span="147-147"];
d89 [cluster="CommonMark.Parser.BlockMethods.break_out_of_lists(ref CommonMark.Syntax.Block, int)", label="bptr = b.Parent", span="157-157"];
d138 [cluster="CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", label="Entry CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", span="258-258"];
d139 [cluster="CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", label="!can_contain(parent.Tag, block_type)", span="262-262"];
d141 [cluster="CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", label="parent = parent.Parent", span="265-265"];
d220 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="Entry CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", span="407-407"];
d320 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container = add_child(container, BlockTag.HorizontalRuler, line_number, first_nonspace + 1)", span="644-644"];
d230 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="Block cur = curptr", span="420-420"];
d354 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="cur != last_matched_container", span="749-749"];
d356 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="cur = cur.Parent", span="753-753"];
d363 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="matched != 0", span="773-773"];
d365 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container = container.Parent", span="777-777"];
d383 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container = container.Parent", span="819-819"];
d93 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="int pos", span="165-165"];
d95 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="Block subitem", span="167-167"];
d394 [cluster="CommonMark.Parser.Scanner.scan_atx_header_start(string, int)", label="Entry CommonMark.Parser.Scanner.scan_atx_header_start(string, int)", span="180-180"];
d105 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="BlockTag.Paragraph", span="191-191"];
d119 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="BlockTag.List", span="218-218"];
d27 [cluster="CommonMark.Parser.BlockMethods.is_blank(string, int)", label="Entry CommonMark.Parser.BlockMethods.is_blank(string, int)", span="42-42"];
d137 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="Entry CommonMark.Parser.InlineMethods.Unescape(string)", span="560-560"];
d123 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="item.IsLastLineBlank && item.Next != null", span="225-225"];
d125 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="subitem = item.FirstChild", span="232-232"];
d127 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="ends_with_blank_line(subitem) &&\r\n                                (item.Next != null || subitem.Next != null)", span="235-236"];
d131 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="item = item.Next", span="247-247"];
d126 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="subitem != null", span="233-233"];
d133 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
d297 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="offset = first_nonspace + matched", span="593-593"];
d306 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container.Attributes.HeaderLevel = level", span="606-606"];
d341 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="accepts_lines(container.Tag)", span="698-698"];
d347 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container.IsLastLineBlank = (blank &&\r\n                                          container.Tag != BlockTag.BlockQuote &&\r\n                                          container.Tag != BlockTag.FencedCode &&\r\n                                          !(container.Tag == BlockTag.ListItem &&\r\n                                            container.FirstChild == null &&\r\n                                            container.StartLine == line_number))", span="721-726"];
d348 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="Block cont = container", span="728-728"];
d352 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="cur != last_matched_container &&\r\n                container == last_matched_container &&\r\n                !blank &&\r\n                cur.Tag == BlockTag.Paragraph &&\r\n                cur.StringContent.Length > 0", span="735-739"];
d359 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container.Tag == BlockTag.IndentedCode", span="760-760"];
d360 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="add_line(container, ln, offset)", span="763-763"];
d361 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container.Tag == BlockTag.FencedCode", span="766-766"];
d362 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="matched = (indent <= 3\r\n                      && BString.bchar(ln, first_nonspace) == container.Attributes.FencedCodeData.FenceChar)\r\n                      && (0 != Scanner.scan_close_code_fence(ln, first_nonspace, container.Attributes.FencedCodeData.FenceLength))\r\n                      ? 1 : 0", span="769-772"];
d366 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="add_line(container, ln, offset)", span="781-781"];
d367 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container.Tag == BlockTag.HtmlBlock", span="785-785"];
d368 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="add_line(container, ln, offset)", span="788-788"];
d384 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="accepts_lines(container.Tag)", span="822-822"];
d385 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="add_line(container, ln, first_nonspace)", span="825-825"];
d386 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container.Tag != BlockTag.HorizontalRuler && container.Tag != BlockTag.SETextHeader", span="828-828"];
d387 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container = add_child(container, BlockTag.Paragraph, line_number, first_nonspace + 1)", span="832-832"];
d389 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="Utilities.Warning(''Line {0} with container type {1} did not match any condition:\n\''{2}\'''', line_number, container.Tag, ln)", span="839-839"];
d390 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="curptr = container", span="843-843"];
d221 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="ln += ''\n''", span="410-410"];
d233 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="int indent", span="423-423"];
d393 [cluster="CommonMark.Utilities.Untabify(string, int)", label="Entry CommonMark.Utilities.Untabify(string, int)", span="31-31"];
d239 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="BString.bchar(ln, first_nonspace) == ' '", span="439-439"];
d242 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="blank = BString.bchar(ln, first_nonspace) == '\n'", span="443-443"];
d244 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="matched = (indent <= 3 && BString.bchar(ln, first_nonspace) == '>') ? 1 : 0", span="448-448"];
d247 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="BString.bchar(ln, offset) == ' '", span="452-452"];
d266 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="i > 0 && BString.bchar(ln, offset) == ' '", span="510-510"];
d283 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="BString.bchar(ln, first_nonspace) == ' '", span="558-558"];
d286 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="blank = BString.bchar(ln, first_nonspace) == '\n'", span="562-562"];
d291 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="BString.bchar(ln, first_nonspace) == '>'", span="578-578"];
d293 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="BString.bchar(ln, offset) == ' '", span="583-583"];
d296 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="0 != (matched = Scanner.scan_atx_header_start(ln, first_nonspace))", span="590-590"];
d307 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="0 != (matched = Scanner.scan_open_code_fence(ln, first_nonspace))", span="609-609"];
d309 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container.Attributes.FencedCodeData.FenceChar = ln[first_nonspace]", span="613-613"];
d313 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="0 != (matched = Scanner.scan_html_block_tag(ln, first_nonspace))", span="619-619"];
d315 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container.Tag == BlockTag.Paragraph &&\r\n                        0 != (lev = Scanner.scan_setext_header_line(ln, first_nonspace)) &&\r\n                    // check that there is only one line in the paragraph:\r\n                         BString.bstrrchrp(container.StringContent, '\n',\r\n                                   container.StringContent.Length - 2) == -1", span="627-631"];
d318 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="offset = ln.Length - 1", span="636-636"];
d319 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="!(container.Tag == BlockTag.Paragraph && !all_matched) &&\r\n                         0 != (matched = Scanner.scan_hrule(ln, first_nonspace))", span="639-640"];
d323 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="offset = ln.Length - 1", span="647-647"];
d324 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="0 != (matched = ParseListMarker(ln, first_nonspace, out data))", span="650-650"];
d327 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="i <= 5 && BString.bchar(ln, offset + i) == ' '", span="656-656"];
d329 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="i >= 5 || i < 1 || BString.bchar(ln, offset) == '\n'", span="661-661"];
d343 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="BString.bchar(ln, first_nonspace) == ' '", span="709-709"];
d346 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="blank = BString.bchar(ln, first_nonspace) == '\n'", span="715-715"];
d353 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="add_line(cur, ln, offset)", span="742-742"];
d388 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="add_line(container, ln, first_nonspace)", span="833-833"];
d223 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="int offset = 0", span="413-413"];
d252 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="offset += container.Attributes.ListData.MarkerOffset +\r\n                          container.Attributes.ListData.Padding", span="467-468"];
d258 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="offset += CODE_INDENT", span="485-485"];
d267 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="offset++", span="512-512"];
d281 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container.Tag != BlockTag.FencedCode && container.Tag != BlockTag.IndentedCode &&\r\n                   container.Tag != BlockTag.HtmlBlock", span="553-554"];
d246 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="offset = first_nonspace + 1", span="451-451"];
d254 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="offset = first_nonspace", span="472-472"];
d260 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="offset = first_nonspace", span="489-489"];
d248 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="offset++", span="453-453"];
d285 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="indent = first_nonspace - offset", span="561-561"];
d292 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="offset = first_nonspace + 1", span="581-581"];
d311 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container.Attributes.FencedCodeData.FenceOffset = first_nonspace - offset", span="615-615"];
d312 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="offset = first_nonspace + matched", span="616-616"];
d325 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="offset = first_nonspace + matched", span="654-654"];
d337 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container = add_child(container, BlockTag.List, line_number,\r\n                      first_nonspace + 1)", span="683-684"];
d301 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="throw new CommonMarkException(''ATX header parsing with regular expression returned incorrect results.'', curptr);", span="598-598"];
d302 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="int level = 0", span="600-600"];
d304 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="level++", span="603-603"];
d29 [cluster="CommonMark.Parser.BlockMethods.is_blank(string, int)", label="null != (c = BString.bchar(s, offset))", span="45-45"];
d177 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="c = BString.bchar(ln, pos)", span="333-333"];
d191 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="char.IsDigit(BString.bchar(ln, pos).Value)", span="353-353"];
d195 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="c = BString.bchar(ln, pos)", span="366-366"];
d198 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="!char.IsWhiteSpace(BString.bchar(ln, pos).Value)", span="370-370"];
d49 [cluster="CommonMark.Parser.BlockMethods.add_line(CommonMark.Syntax.Block, string, int)", label="s = BString.bmidstr(ln, offset, len)", span="87-87"];
d369 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label=blank, span="791-791"];
d279 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="blank && container.IsLastLineBlank", span="547-547"];
d316 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container.Tag = BlockTag.SETextHeader", span="634-634"];
d317 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container.Attributes.HeaderLevel = lev", span="635-635"];
d336 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container.Tag != BlockTag.List ||\r\n                        !lists_match(container.Attributes.ListData, data)", span="680-681"];
d289 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="offset += CODE_INDENT", span="569-569"];
d294 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="offset++", span="585-585"];
d310 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container.Attributes.FencedCodeData.FenceLength = matched", span="614-614"];
d338 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container.Attributes.ListData = data", span="685-685"];
d340 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container.Attributes.ListData = data", span="691-691"];
d288 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="cur.Tag != BlockTag.Paragraph && !blank", span="567-567"];
d332 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="offset += 1", span="666-666"];
d334 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="offset += i", span="672-672"];
d345 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="indent = first_nonspace - offset", span="714-714"];
d236 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container.LastChild != null && container.LastChild.IsOpen", span="434-434"];
d278 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="last_matched_container = container", span="544-544"];
d238 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="first_nonspace = offset", span="438-438"];
d243 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container.Tag == BlockTag.BlockQuote", span="445-445"];
d250 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container.Tag == BlockTag.ListItem", span="461-461"];
d251 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="indent >= container.Attributes.ListData.MarkerOffset +\r\n                        container.Attributes.ListData.Padding", span="464-465"];
d256 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container.Tag == BlockTag.IndentedCode", span="480-480"];
d262 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container.Tag == BlockTag.AtxHeader ||\r\n                         container.Tag == BlockTag.SETextHeader", span="497-498"];
d264 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container.Tag == BlockTag.FencedCode", span="505-505"];
d265 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="i = container.Attributes.FencedCodeData.FenceOffset", span="509-509"];
d269 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container.Tag == BlockTag.HtmlBlock", span="517-517"];
d272 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container.Tag == BlockTag.Paragraph", span="526-526"];
d274 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="container.IsLastLineBlank = true", span="531-531"];
d276 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="!all_matched", span="537-537"];
d53 [cluster="CommonMark.Parser.BlockMethods.add_line(CommonMark.Syntax.Block, string, int)", label="Exit CommonMark.Parser.BlockMethods.add_line(CommonMark.Syntax.Block, string, int)", span="80-80"];
d45 [cluster="CommonMark.Parser.BlockMethods.add_line(CommonMark.Syntax.Block, string, int)", label="string s", span="82-82"];
d46 [cluster="CommonMark.Parser.BlockMethods.add_line(CommonMark.Syntax.Block, string, int)", label="var len = ln.Length - offset", span="83-83"];
d50 [cluster="CommonMark.Parser.BlockMethods.add_line(CommonMark.Syntax.Block, string, int)", label="!block.IsOpen", span="89-89"];
d51 [cluster="CommonMark.Parser.BlockMethods.add_line(CommonMark.Syntax.Block, string, int)", label="throw new CommonMarkException(string.Format(''Attempted to add line '{0}' to closed container ({1}).'', ln, block.Tag));", span="90-90"];
d52 [cluster="CommonMark.Parser.BlockMethods.add_line(CommonMark.Syntax.Block, string, int)", label="block.StringContent += s", span="92-92"];
d90 [cluster="CommonMark.Parser.BlockMethods.break_out_of_lists(ref CommonMark.Syntax.Block, int)", label="Exit CommonMark.Parser.BlockMethods.break_out_of_lists(ref CommonMark.Syntax.Block, int)", span="140-140"];
d84 [cluster="CommonMark.Parser.BlockMethods.break_out_of_lists(ref CommonMark.Syntax.Block, int)", label="b != null", span="149-149"];
d82 [cluster="CommonMark.Parser.BlockMethods.break_out_of_lists(ref CommonMark.Syntax.Block, int)", label="b != null && b.Tag != BlockTag.List", span="145-145"];
d154 [cluster="CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", label="Exit CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", span="258-258"];
d142 [cluster="CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", label="parent == null", span="268-268"];
d144 [cluster="CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", label="Block child = make_block(block_type, start_line, start_column)", span="271-271"];
d145 [cluster="CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", label="child.Parent = parent", span="272-272"];
d146 [cluster="CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", label="child.Top = parent.Top", span="273-273"];
d147 [cluster="CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", label="parent.LastChild != null", span="275-275"];
d148 [cluster="CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", label="parent.LastChild.Next = child", span="277-277"];
d149 [cluster="CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", label="child.Previous = parent.LastChild", span="278-278"];
d150 [cluster="CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", label="parent.FirstChild = child", span="282-282"];
d152 [cluster="CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", label="parent.LastChild = child", span="285-285"];
d38 [cluster="CommonMark.Parser.BlockMethods.can_contain(CommonMark.Syntax.BlockTag, CommonMark.Syntax.BlockTag)", label="Entry CommonMark.Parser.BlockMethods.can_contain(CommonMark.Syntax.BlockTag, CommonMark.Syntax.BlockTag)", span="63-63"];
d392 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="Exit CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", span="407-407"];
d229 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="Block container", span="419-419"];
d231 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="bool blank = false", span="421-421"];
d357 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="cur == null", span="755-755"];
d94 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="Block item", span="166-166"];
d36 [cluster="CommonMark.Parser.BlockMethods.is_blank(string, int)", label="Exit CommonMark.Parser.BlockMethods.is_blank(string, int)", span="42-42"];
d28 [cluster="CommonMark.Parser.BlockMethods.is_blank(string, int)", label="char? c", span="44-44"];
d33 [cluster="CommonMark.Parser.BlockMethods.is_blank(string, int)", label="offset++", span="53-53"];
d129 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", label="subitem = subitem.Next", span="241-241"];
d72 [cluster="CommonMark.Parser.BlockMethods.ends_with_blank_line(CommonMark.Syntax.Block)", label="Entry CommonMark.Parser.BlockMethods.ends_with_blank_line(CommonMark.Syntax.Block)", span="123-123"];
d143 [cluster="CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", label="throw new ArgumentNullException(''parent'');", span="269-269"];
d41 [cluster="CommonMark.Parser.BlockMethods.accepts_lines(CommonMark.Syntax.BlockTag)", label="Entry CommonMark.Parser.BlockMethods.accepts_lines(CommonMark.Syntax.BlockTag)", span="71-71"];
d349 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="cont.Parent != null", span="729-729"];
d350 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="cont.Parent.IsLastLineBlank = false", span="731-731"];
d351 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="cont = cont.Parent", span="732-732"];
d399 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int)", label="Entry CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int)", span="268-268"];
d401 [cluster="CommonMark.Utilities.Warning(string, params object[])", label="Entry CommonMark.Utilities.Warning(string, params object[])", span="17-17"];
d391 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="return 0;", span="846-846"];
d222 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="Block last_matched_container", span="412-412"];
d232 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="int first_nonspace", span="422-422"];
d240 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="first_nonspace++", span="440-440"];
d241 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="indent = first_nonspace - offset", span="442-442"];
d253 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label=blank, span="470-470"];
d259 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label=blank, span="487-487"];
d270 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label=blank, span="520-520"];
d273 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label=blank, span="529-529"];
d245 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="matched != 0", span="449-449"];
d268 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="i--", span="513-513"];
d287 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="indent >= CODE_INDENT", span="564-564"];
d395 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int)", label="Entry CommonMark.Parser.Scanner.scan_open_code_fence(string, int)", span="254-254"];
d396 [cluster="CommonMark.Parser.Scanner.scan_html_block_tag(string, int)", label="Entry CommonMark.Parser.Scanner.scan_html_block_tag(string, int)", span="122-122"];
d397 [cluster="CommonMark.Parser.Scanner.scan_setext_header_line(string, int)", label="Entry CommonMark.Parser.Scanner.scan_setext_header_line(string, int)", span="193-193"];
d398 [cluster="CommonMark.BString.bstrrchrp(string, char, int)", label="Entry CommonMark.BString.bstrrchrp(string, char, int)", span="100-100"];
d228 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="bool all_matched = true", span="418-418"];
d249 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="all_matched = false", span="457-457"];
d255 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="all_matched = false", span="476-476"];
d261 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="all_matched = false", span="493-493"];
d263 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="all_matched = false", span="502-502"];
d271 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="all_matched = false", span="522-522"];
d275 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="all_matched = false", span="532-532"];
d211 [cluster="CommonMark.Parser.Scanner.scan_hrule(string, int)", label="Entry CommonMark.Parser.Scanner.scan_hrule(string, int)", span="214-214"];
d171 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="Entry CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", span="325-325"];
d330 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="data.Padding = matched + 1", span="663-663"];
d333 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="data.Padding = matched + i", span="671-671"];
d335 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="data.MarkerOffset = indent", span="678-678"];
d326 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="i = 0", span="655-655"];
d328 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="i++", span="658-658"];
d224 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="int matched = 0", span="414-414"];
d257 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="indent >= CODE_INDENT", span="483-483"];
d169 [cluster="CommonMark.CommonMarkException.CommonMarkException(string, CommonMark.Syntax.Block, System.Exception)", label="Entry CommonMark.CommonMarkException.CommonMarkException(string, CommonMark.Syntax.Block, System.Exception)", span="38-38"];
d30 [cluster="CommonMark.Parser.BlockMethods.is_blank(string, int)", label="c == '\n'", span="47-47"];
d35 [cluster="CommonMark.Parser.BlockMethods.is_blank(string, int)", label="return true;", span="60-60"];
d32 [cluster="CommonMark.Parser.BlockMethods.is_blank(string, int)", label="c == ' '", span="51-51"];
d176 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="startpos = pos", span="332-332"];
d178 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="(c == '*' || c == '-' || c == '+') && 0 == Scanner.scan_hrule(ln, pos)", span="335-335"];
d185 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="data.BulletChar = c.Value", span="344-344"];
d189 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="c != null && char.IsDigit(c.Value)", span="349-349"];
d190 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="pos++", span="352-352"];
d192 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="pos++", span="355-355"];
d193 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="!int.TryParse(ln.Substring(startpos, pos - startpos), \r\n                    System.Globalization.NumberStyles.Integer, \r\n                    System.Globalization.CultureInfo.InvariantCulture, out start)", span="358-360"];
d214 [cluster="char.IsDigit(char)", label="Entry char.IsDigit(char)", span="0-0"];
d196 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="c == '.' || c == ')'", span="367-367"];
d205 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="data.Delimiter = (c == '.' ? ListDelimiter.Period : ListDelimiter.Parenthesis)", span="378-378"];
d197 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="pos++", span="369-369"];
d199 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="return 0;", span="371-371"];
d200 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="data = new ListData()", span="373-373"];
d212 [cluster="char.IsWhiteSpace(char)", label="Entry char.IsWhiteSpace(char)", span="0-0"];
d47 [cluster="CommonMark.Parser.BlockMethods.add_line(CommonMark.Syntax.Block, string, int)", label="len < 0", span="84-84"];
d217 [cluster="CommonMark.Parser.BlockMethods.lists_match(CommonMark.Syntax.ListData, CommonMark.Syntax.ListData)", label="Entry CommonMark.Parser.BlockMethods.lists_match(CommonMark.Syntax.ListData, CommonMark.Syntax.ListData)", span="396-396"];
d331 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="i > 0", span="664-664"];
d358 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="throw new CommonMarkException(''Cannot finalize container block. Last matched container tag = '' + last_matched_container.Tag);", span="756-756"];
d48 [cluster="CommonMark.Parser.BlockMethods.add_line(CommonMark.Syntax.Block, string, int)", label="s = string.Empty", span="85-85"];
d55 [cluster="CommonMark.CommonMarkException.CommonMarkException(string)", label="Entry CommonMark.CommonMarkException.CommonMarkException(string)", span="28-28"];
d56 [cluster="string.Format(string, object, object)", label="Entry string.Format(string, object, object)", span="0-0"];
d153 [cluster="CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", label="return child;", span="286-286"];
d0 [cluster="CommonMark.Parser.BlockMethods.make_block(CommonMark.Syntax.BlockTag, int, int)", label="Entry CommonMark.Parser.BlockMethods.make_block(CommonMark.Syntax.BlockTag, int, int)", span="11-11"];
d151 [cluster="CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", label="child.Previous = null", span="283-283"];
d40 [cluster="CommonMark.Parser.BlockMethods.can_contain(CommonMark.Syntax.BlockTag, CommonMark.Syntax.BlockTag)", label="Exit CommonMark.Parser.BlockMethods.can_contain(CommonMark.Syntax.BlockTag, CommonMark.Syntax.BlockTag)", span="63-63"];
d39 [cluster="CommonMark.Parser.BlockMethods.can_contain(CommonMark.Syntax.BlockTag, CommonMark.Syntax.BlockTag)", label="return (parent_type == BlockTag.Document ||\r\n                     parent_type == BlockTag.BlockQuote ||\r\n                     parent_type == BlockTag.ListItem ||\r\n                     (parent_type == BlockTag.List && child_type == BlockTag.ListItem));", span="65-68"];
d31 [cluster="CommonMark.Parser.BlockMethods.is_blank(string, int)", label="return true;", span="49-49"];
d34 [cluster="CommonMark.Parser.BlockMethods.is_blank(string, int)", label="return false;", span="57-57"];
d76 [cluster="CommonMark.Parser.BlockMethods.ends_with_blank_line(CommonMark.Syntax.Block)", label="return ends_with_blank_line(block.LastChild);", span="131-131"];
d78 [cluster="CommonMark.Parser.BlockMethods.ends_with_blank_line(CommonMark.Syntax.Block)", label="Exit CommonMark.Parser.BlockMethods.ends_with_blank_line(CommonMark.Syntax.Block)", span="123-123"];
d73 [cluster="CommonMark.Parser.BlockMethods.ends_with_blank_line(CommonMark.Syntax.Block)", label="block.IsLastLineBlank", span="125-125"];
d75 [cluster="CommonMark.Parser.BlockMethods.ends_with_blank_line(CommonMark.Syntax.Block)", label="(block.Tag == BlockTag.List || block.Tag == BlockTag.ListItem) && block.LastChild != null", span="129-129"];
d43 [cluster="CommonMark.Parser.BlockMethods.accepts_lines(CommonMark.Syntax.BlockTag)", label="Exit CommonMark.Parser.BlockMethods.accepts_lines(CommonMark.Syntax.BlockTag)", span="71-71"];
d42 [cluster="CommonMark.Parser.BlockMethods.accepts_lines(CommonMark.Syntax.BlockTag)", label="return (block_type == BlockTag.Paragraph ||\r\n                    block_type == BlockTag.AtxHeader ||\r\n                    block_type == BlockTag.IndentedCode ||\r\n                    block_type == BlockTag.FencedCode);", span="73-76"];
d227 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="ListData data", span="417-417"];
d210 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="Exit CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", span="325-325"];
d172 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="char? c", span="327-327"];
d179 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="pos++", span="337-337"];
d180 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="pos == ln.Length || !char.IsWhiteSpace(ln[pos])", span="338-338"];
d209 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="return (pos - startpos);", span="392-392"];
d225 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="int lev = 0", span="415-415"];
d161 [cluster="CommonMark.Parser.BlockMethods.process_inlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="throw new CommonMarkException(''The block does not contain string content.'', cur);", span="301-301"];
d175 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="data = null", span="330-330"];
d182 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="data = new ListData()", span="341-341"];
d184 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="data.ListType = ListType.Bullet", span="343-343"];
d186 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="data.Start = 1", span="345-345"];
d208 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="return 0;", span="389-389"];
d194 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="return 0;", span="363-363"];
d215 [cluster="string.Substring(int, int)", label="Entry string.Substring(int, int)", span="0-0"];
d216 [cluster="int.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out int)", label="Entry int.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out int)", span="0-0"];
d204 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="data.Start = start", span="377-377"];
d207 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="return 0;", span="383-383"];
d206 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="data.IsTight = false", span="379-379"];
d201 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="data.MarkerOffset = 0", span="374-374"];
d213 [cluster="CommonMark.Syntax.ListData.ListData()", label="Entry CommonMark.Syntax.ListData.ListData()", span="6-6"];
d202 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="data.ListType = ListType.Ordered", span="375-375"];
d203 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="data.BulletChar = '\0'", span="376-376"];
d219 [cluster="CommonMark.Parser.BlockMethods.lists_match(CommonMark.Syntax.ListData, CommonMark.Syntax.ListData)", label="Exit CommonMark.Parser.BlockMethods.lists_match(CommonMark.Syntax.ListData, CommonMark.Syntax.ListData)", span="396-396"];
d218 [cluster="CommonMark.Parser.BlockMethods.lists_match(CommonMark.Syntax.ListData, CommonMark.Syntax.ListData)", label="return (list_data.ListType == item_data.ListType &&\r\n                    list_data.Delimiter == item_data.Delimiter &&\r\n                // list_data.marker_offset == item_data.marker_offset &&\r\n                    list_data.BulletChar == item_data.BulletChar);", span="398-401"];
d18 [cluster="CommonMark.Parser.BlockMethods.make_block(CommonMark.Syntax.BlockTag, int, int)", label="Exit CommonMark.Parser.BlockMethods.make_block(CommonMark.Syntax.BlockTag, int, int)", span="11-11"];
d21 [cluster="CommonMark.Parser.BlockMethods.make_document()", label="Block e = make_block(BlockTag.Document, 1, 1)", span="35-35"];
d1 [cluster="CommonMark.Parser.BlockMethods.make_block(CommonMark.Syntax.BlockTag, int, int)", label="Block e = new Block()", span="13-13"];
d2 [cluster="CommonMark.Parser.BlockMethods.make_block(CommonMark.Syntax.BlockTag, int, int)", label="e.Tag = tag", span="14-14"];
d5 [cluster="CommonMark.Parser.BlockMethods.make_block(CommonMark.Syntax.BlockTag, int, int)", label="e.StartLine = start_line", span="17-17"];
d6 [cluster="CommonMark.Parser.BlockMethods.make_block(CommonMark.Syntax.BlockTag, int, int)", label="e.StartColumn = start_column", span="18-18"];
d7 [cluster="CommonMark.Parser.BlockMethods.make_block(CommonMark.Syntax.BlockTag, int, int)", label="e.EndLine = start_line", span="19-19"];
d74 [cluster="CommonMark.Parser.BlockMethods.ends_with_blank_line(CommonMark.Syntax.Block)", label="return true;", span="127-127"];
d77 [cluster="CommonMark.Parser.BlockMethods.ends_with_blank_line(CommonMark.Syntax.Block)", label="return false;", span="135-135"];
d226 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", label="int i", span="416-416"];
d181 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="return 0;", span="339-339"];
d173 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="int startpos", span="328-328"];
d188 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="data.IsTight = false", span="347-347"];
d155 [cluster="CommonMark.Parser.BlockMethods.process_inlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="Entry CommonMark.Parser.BlockMethods.process_inlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", span="292-292"];
d160 [cluster="CommonMark.Parser.BlockMethods.process_inlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="cur.StringContent == null", span="300-300"];
d168 [cluster="CommonMark.Parser.BlockMethods.process_inlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="Exit CommonMark.Parser.BlockMethods.process_inlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", span="292-292"];
d174 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="int start = 1", span="329-329"];
d183 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="data.MarkerOffset = 0", span="342-342"];
d187 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="data.Delimiter = ListDelimiter.Period", span="346-346"];
d17 [cluster="CommonMark.Parser.BlockMethods.make_block(CommonMark.Syntax.BlockTag, int, int)", label="return e;", span="29-29"];
d20 [cluster="CommonMark.Parser.BlockMethods.make_document()", label="Entry CommonMark.Parser.BlockMethods.make_document()", span="33-33"];
d22 [cluster="CommonMark.Parser.BlockMethods.make_document()", label="e.Attributes.ReferenceMap = new Dictionary<string, Reference>()", span="36-36"];
d23 [cluster="CommonMark.Parser.BlockMethods.make_document()", label="e.Top = e", span="37-37"];
d24 [cluster="CommonMark.Parser.BlockMethods.make_document()", label="return e;", span="38-38"];
d19 [cluster="CommonMark.Syntax.Block.Block()", label="Entry CommonMark.Syntax.Block.Block()", span="7-7"];
d3 [cluster="CommonMark.Parser.BlockMethods.make_block(CommonMark.Syntax.BlockTag, int, int)", label="e.IsOpen = true", span="15-15"];
d4 [cluster="CommonMark.Parser.BlockMethods.make_block(CommonMark.Syntax.BlockTag, int, int)", label="e.IsLastLineBlank = false", span="16-16"];
d8 [cluster="CommonMark.Parser.BlockMethods.make_block(CommonMark.Syntax.BlockTag, int, int)", label="e.FirstChild = null", span="20-20"];
d9 [cluster="CommonMark.Parser.BlockMethods.make_block(CommonMark.Syntax.BlockTag, int, int)", label="e.LastChild = null", span="21-21"];
d10 [cluster="CommonMark.Parser.BlockMethods.make_block(CommonMark.Syntax.BlockTag, int, int)", label="e.Parent = null", span="22-22"];
d11 [cluster="CommonMark.Parser.BlockMethods.make_block(CommonMark.Syntax.BlockTag, int, int)", label="e.Top = null", span="23-23"];
d12 [cluster="CommonMark.Parser.BlockMethods.make_block(CommonMark.Syntax.BlockTag, int, int)", label="e.Attributes.ReferenceMap = null", span="24-24"];
d13 [cluster="CommonMark.Parser.BlockMethods.make_block(CommonMark.Syntax.BlockTag, int, int)", label="e.StringContent = string.Empty", span="25-25"];
d14 [cluster="CommonMark.Parser.BlockMethods.make_block(CommonMark.Syntax.BlockTag, int, int)", label="e.InlineContent = null", span="26-26"];
d15 [cluster="CommonMark.Parser.BlockMethods.make_block(CommonMark.Syntax.BlockTag, int, int)", label="e.Next = null", span="27-27"];
d16 [cluster="CommonMark.Parser.BlockMethods.make_block(CommonMark.Syntax.BlockTag, int, int)", label="e.Previous = null", span="28-28"];
d166 [cluster="CommonMark.Parser.BlockMethods.process_inlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="process_inlines(child, refmap)", span="314-314"];
d156 [cluster="CommonMark.Parser.BlockMethods.process_inlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="cur.Tag", span="294-294"];
d162 [cluster="CommonMark.Parser.BlockMethods.process_inlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="cur.InlineContent = InlineMethods.parse_inlines(cur.StringContent, refmap)", span="303-303"];
d163 [cluster="CommonMark.Parser.BlockMethods.process_inlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="cur.StringContent = null", span="304-304"];
d164 [cluster="CommonMark.Parser.BlockMethods.process_inlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="Block child = cur.FirstChild", span="311-311"];
d159 [cluster="CommonMark.Parser.BlockMethods.process_inlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="BlockTag.SETextHeader", span="299-299"];
d165 [cluster="CommonMark.Parser.BlockMethods.process_inlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="child != null", span="312-312"];
d25 [cluster="CommonMark.Parser.BlockMethods.make_document()", label="Exit CommonMark.Parser.BlockMethods.make_document()", span="33-33"];
d26 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
d167 [cluster="CommonMark.Parser.BlockMethods.process_inlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="child = child.Next", span="315-315"];
d157 [cluster="CommonMark.Parser.BlockMethods.process_inlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="BlockTag.Paragraph", span="297-297"];
d170 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="Entry CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", span="974-974"];
d158 [cluster="CommonMark.Parser.BlockMethods.process_inlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", label="BlockTag.AtxHeader", span="298-298"];
m0_23 [cluster="CommonMark.Utilities.IsAsciiLetter(char)", file="Scanner.cs", label="Entry CommonMark.Utilities.IsAsciiLetter(char)", span="37-37"];
m0_100 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchWhitespaces(string, ref char, ref int, int)", file="Scanner.cs", label="Entry CommonMark.Parser.ScannerCharacterMatcher.MatchWhitespaces(string, ref char, ref int, int)", span="13-13"];
m0_101 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int, int)", file="Scanner.cs", label="Entry CommonMark.Parser.Scanner.scan_link_title(string, int, int)", span="184-184"];
m0_102 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int, int)", file="Scanner.cs", label="pos + 2 >= sourceLength", span="193-193"];
m0_104 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int, int)", file="Scanner.cs", label="var c1 = s[pos]", span="196-196"];
m0_110 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int, int)", file="Scanner.cs", label="var i = pos + 1", span="203-203"];
m0_111 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int, int)", file="Scanner.cs", label="i < sourceLength", span="203-203"];
m0_112 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int, int)", file="Scanner.cs", label="var c = s[i]", span="205-205"];
m0_114 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int, int)", file="Scanner.cs", label="return i - pos + 1;", span="207-207"];
m0_103 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int, int)", file="Scanner.cs", label="return 0;", span="194-194"];
m0_105 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int, int)", file="Scanner.cs", label="c1 != '''' && c1 != '\'' && c1 != '('", span="197-197"];
m0_107 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int, int)", file="Scanner.cs", label="c1 == '('", span="200-200"];
m0_113 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int, int)", file="Scanner.cs", label="c == c1 && !nextEscaped", span="206-206"];
m0_106 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int, int)", file="Scanner.cs", label="return 0;", span="198-198"];
m0_108 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int, int)", file="Scanner.cs", label="c1 = ')'", span="200-200"];
m0_109 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int, int)", file="Scanner.cs", label="var nextEscaped = false", span="202-202"];
m0_115 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int, int)", file="Scanner.cs", label="nextEscaped = !nextEscaped && c == '\\'", span="209-209"];
m0_116 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int, int)", file="Scanner.cs", label="i++", span="203-203"];
m0_117 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int, int)", file="Scanner.cs", label="return 0;", span="212-212"];
m0_118 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int, int)", file="Scanner.cs", label="Exit CommonMark.Parser.Scanner.scan_link_title(string, int, int)", span="184-184"];
m0_57 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetterOrDigit(string, ref char, ref int, int, char)", file="Scanner.cs", label="Entry CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetterOrDigit(string, ref char, ref int, int, char)", span="95-95"];
m0_239 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="Entry CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", span="459-459"];
m0_240 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="var lastPos = pos + length", span="467-467"];
m0_243 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="pos + 3 >= lastPos", span="472-472"];
m0_245 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="s[pos] != '&'", span="475-475"];
m0_250 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="s[pos + 1] == '#'", span="481-481"];
m0_251 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="c = s[pos + 2]", span="483-483"];
m0_253 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="i = pos + 3", span="487-487"];
m0_255 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="c = s[i]", span="489-489"];
m0_269 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="return counter == 0 ? 0 : i - pos + 1;", span="510-510"];
m0_272 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="i = pos + 2", span="518-518"];
m0_274 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="c = s[i]", span="520-520"];
m0_280 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="return counter == 0 ? 0 : i - pos + 1;", span="529-529"];
m0_283 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="c = s[pos + 1]", span="538-538"];
m0_286 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="i = pos + 2", span="542-542"];
m0_288 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="c = s[i]", span="544-544"];
m0_293 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="namedEntity = s.Substring(pos + 1, counter + 1)", span="555-555"];
m0_294 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="return counter == 0 ? 0 : i - pos + 1;", span="556-556"];
m0_241 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="namedEntity = null", span="469-469"];
m0_254 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="i < lastPos", span="487-487"];
m0_273 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="i < lastPos", span="518-518"];
m0_287 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="i < lastPos", span="542-542"];
m0_242 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="numericEntity = 0", span="470-470"];
m0_259 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="numericEntity = numericEntity * 16 + (c - '0')", span="493-493"];
m0_263 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="numericEntity = numericEntity * 16 + (c - 'A' + 10)", span="499-499"];
m0_267 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="numericEntity = numericEntity * 16 + (c - 'a' + 10)", span="505-505"];
m0_278 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="numericEntity = numericEntity * 10 + (c - '0')", span="524-524"];
m0_244 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="return 0;", span="473-473"];
m0_246 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="return 0;", span="476-476"];
m0_247 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="char c", span="478-478"];
m0_248 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="int i", span="479-479"];
m0_249 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="int counter = 0", span="480-480"];
m0_257 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="++counter == 9", span="492-492"];
m0_261 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="++counter == 9", span="498-498"];
m0_265 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="++counter == 9", span="504-504"];
m0_276 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="++counter == 9", span="523-523"];
m0_290 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="++counter == 32", span="547-547"];
m0_252 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="c == 'x' || c == 'X'", span="484-484"];
m0_271 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="i++", span="487-487"];
m0_297 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="return 0;", span="563-563"];
m0_256 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="c >= '0' && c <= '9'", span="490-490"];
m0_260 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="c >= 'A' && c <= 'F'", span="496-496"];
m0_264 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="c >= 'a' && c <= 'f'", span="502-502"];
m0_268 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="c == ';'", span="509-509"];
m0_258 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="return 0;", span="492-492"];
m0_262 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="return 0;", span="498-498"];
m0_266 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="return 0;", span="504-504"];
m0_270 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="return 0;", span="512-512"];
m0_282 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="i++", span="518-518"];
m0_275 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="c >= '0' && c <= '9'", span="521-521"];
m0_279 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="c == ';'", span="528-528"];
m0_277 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="return 0;", span="523-523"];
m0_281 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="return 0;", span="531-531"];
m0_284 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="(c < 'A' || c > 'Z') && (c < 'a' && c > 'z')", span="539-539"];
m0_285 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="return 0;", span="540-540"];
m0_296 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="i++", span="542-542"];
m0_289 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="(c >= '0' && c <= '9') || (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z')", span="545-545"];
m0_292 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="c == ';'", span="553-553"];
m0_291 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="return 0;", span="548-548"];
m0_295 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="return 0;", span="559-559"];
m0_298 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="Exit CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", span="459-459"];
m0_0 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="Entry CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", span="12-12"];
m0_1 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="var i = pos", span="16-16"];
m0_3 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="var c = s[i]", span="18-18"];
m0_6 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="++i < sourceLength", span="21-21"];
m0_9 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="c = s[i]", span="26-26"];
m0_15 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="++i < sourceLength", span="36-36"];
m0_16 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="c = s[i]", span="38-38"];
m0_18 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="return i - pos + 1;", span="40-40"];
m0_2 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="var schemeLength = 0", span="17-17"];
m0_7 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="++schemeLength > 32", span="23-23"];
m0_13 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="schemeLength < 2", span="33-33"];
m0_4 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="!Utilities.IsAsciiLetter(c)", span="19-19"];
m0_5 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="return 0;", span="19-19"];
m0_8 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="return 0;", span="24-24"];
m0_10 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="c == ':'", span="27-27"];
m0_11 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="!Utilities.IsAsciiLetter(c) && c != '+' && c != '.' && c != '-'", span="29-29"];
m0_12 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="return 0;", span="30-30"];
m0_14 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="return 0;", span="34-34"];
m0_21 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="return 0;", span="46-46"];
m0_17 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="c == '>'", span="39-39"];
m0_19 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="c == '<' || c <= 0x20", span="42-42"];
m0_20 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="return 0;", span="43-43"];
m0_22 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="Exit CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", span="12-12"];
m0_300 [cluster="CommonMark.Parser.Scanner.HasNonWhitespace(CommonMark.Syntax.StringPart)", file="Scanner.cs", label="Entry CommonMark.Parser.Scanner.HasNonWhitespace(CommonMark.Syntax.StringPart)", span="569-569"];
m0_301 [cluster="CommonMark.Parser.Scanner.HasNonWhitespace(CommonMark.Syntax.StringPart)", file="Scanner.cs", label="var s = part.Source", span="571-571"];
m0_302 [cluster="CommonMark.Parser.Scanner.HasNonWhitespace(CommonMark.Syntax.StringPart)", file="Scanner.cs", label="var i = part.StartIndex", span="572-572"];
m0_303 [cluster="CommonMark.Parser.Scanner.HasNonWhitespace(CommonMark.Syntax.StringPart)", file="Scanner.cs", label="var l = i + part.Length", span="573-573"];
m0_305 [cluster="CommonMark.Parser.Scanner.HasNonWhitespace(CommonMark.Syntax.StringPart)", file="Scanner.cs", label="!Utilities.IsWhitespace(s[i])", span="577-577"];
m0_304 [cluster="CommonMark.Parser.Scanner.HasNonWhitespace(CommonMark.Syntax.StringPart)", file="Scanner.cs", label="i < l", span="575-575"];
m0_307 [cluster="CommonMark.Parser.Scanner.HasNonWhitespace(CommonMark.Syntax.StringPart)", file="Scanner.cs", label="i++", span="580-580"];
m0_308 [cluster="CommonMark.Parser.Scanner.HasNonWhitespace(CommonMark.Syntax.StringPart)", file="Scanner.cs", label="return false;", span="583-583"];
m0_306 [cluster="CommonMark.Parser.Scanner.HasNonWhitespace(CommonMark.Syntax.StringPart)", file="Scanner.cs", label="return true;", span="578-578"];
m0_309 [cluster="CommonMark.Parser.Scanner.HasNonWhitespace(CommonMark.Syntax.StringPart)", file="Scanner.cs", label="Exit CommonMark.Parser.Scanner.HasNonWhitespace(CommonMark.Syntax.StringPart)", span="569-569"];
m0_129 [cluster="CommonMark.Utilities.IsWhitespace(char)", file="Scanner.cs", label="Entry CommonMark.Utilities.IsWhitespace(char)", span="53-53"];
m0_193 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="Entry CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", span="372-372"];
m0_194 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="pos + 3 >= sourceLength", span="380-380"];
m0_196 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="var fchar = s[pos]", span="383-383"];
m0_201 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="var i = pos + 1", span="389-389"];
m0_202 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="i < sourceLength", span="389-389"];
m0_203 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="var c = s[i]", span="391-391"];
m0_195 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="return 0;", span="381-381"];
m0_197 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="fchar != '`' && fchar != '~'", span="384-384"];
m0_204 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="c == fchar", span="393-393"];
m0_198 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="return 0;", span="385-385"];
m0_199 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="var cnt = 1", span="387-387"];
m0_200 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="var fenceDone = false", span="388-388"];
m0_207 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="cnt++", span="398-398"];
m0_209 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="cnt < 3", span="403-403"];
m0_212 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="return cnt;", span="407-407"];
m0_214 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="cnt < 3", span="410-410"];
m0_216 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="return cnt;", span="413-413"];
m0_205 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label=fenceDone, span="395-395"];
m0_213 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="i++", span="389-389"];
m0_211 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="c == '\n'", span="406-406"];
m0_208 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="fenceDone = true", span="402-402"];
m0_206 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="return 0;", span="396-396"];
m0_210 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="return 0;", span="404-404"];
m0_215 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="return 0;", span="411-411"];
m0_217 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="Exit CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", span="372-372"];
m0_56 [cluster="string.IndexOf(char)", file="Scanner.cs", label="Entry string.IndexOf(char)", span="0-0"];
m0_174 [cluster="CommonMark.Parser.Scanner.scan_thematic_break(string, int, int)", file="Scanner.cs", label="Entry CommonMark.Parser.Scanner.scan_thematic_break(string, int, int)", span="333-333"];
m0_175 [cluster="CommonMark.Parser.Scanner.scan_thematic_break(string, int, int)", file="Scanner.cs", label="var count = 0", span="339-339"];
m0_177 [cluster="CommonMark.Parser.Scanner.scan_thematic_break(string, int, int)", file="Scanner.cs", label="var ipos = pos", span="341-341"];
m0_178 [cluster="CommonMark.Parser.Scanner.scan_thematic_break(string, int, int)", file="Scanner.cs", label="ipos < sourceLength", span="342-342"];
m0_179 [cluster="CommonMark.Parser.Scanner.scan_thematic_break(string, int, int)", file="Scanner.cs", label="var c = s[ipos++]", span="344-344"];
m0_191 [cluster="CommonMark.Parser.Scanner.scan_thematic_break(string, int, int)", file="Scanner.cs", label="return sourceLength - pos;", span="366-366"];
m0_176 [cluster="CommonMark.Parser.Scanner.scan_thematic_break(string, int, int)", file="Scanner.cs", label="var x = '\0'", span="340-340"];
m0_181 [cluster="CommonMark.Parser.Scanner.scan_thematic_break(string, int, int)", file="Scanner.cs", label="count == 0", span="348-348"];
m0_187 [cluster="CommonMark.Parser.Scanner.scan_thematic_break(string, int, int)", file="Scanner.cs", label="count++", span="358-358"];
m0_189 [cluster="CommonMark.Parser.Scanner.scan_thematic_break(string, int, int)", file="Scanner.cs", label="count < 3", span="363-363"];
m0_186 [cluster="CommonMark.Parser.Scanner.scan_thematic_break(string, int, int)", file="Scanner.cs", label="c == x", span="357-357"];
m0_180 [cluster="CommonMark.Parser.Scanner.scan_thematic_break(string, int, int)", file="Scanner.cs", label="c == ' ' || c == '\t' || c == '\n'", span="346-346"];
m0_182 [cluster="CommonMark.Parser.Scanner.scan_thematic_break(string, int, int)", file="Scanner.cs", label="c == '*' || c == '_' || c == '-'", span="350-350"];
m0_183 [cluster="CommonMark.Parser.Scanner.scan_thematic_break(string, int, int)", file="Scanner.cs", label="x = c", span="351-351"];
m0_184 [cluster="CommonMark.Parser.Scanner.scan_thematic_break(string, int, int)", file="Scanner.cs", label="return 0;", span="353-353"];
m0_185 [cluster="CommonMark.Parser.Scanner.scan_thematic_break(string, int, int)", file="Scanner.cs", label="count = 1", span="355-355"];
m0_188 [cluster="CommonMark.Parser.Scanner.scan_thematic_break(string, int, int)", file="Scanner.cs", label="return 0;", span="360-360"];
m0_190 [cluster="CommonMark.Parser.Scanner.scan_thematic_break(string, int, int)", file="Scanner.cs", label="return 0;", span="364-364"];
m0_192 [cluster="CommonMark.Parser.Scanner.scan_thematic_break(string, int, int)", file="Scanner.cs", label="Exit CommonMark.Parser.Scanner.scan_thematic_break(string, int, int)", span="333-333"];
m0_58 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="Entry CommonMark.Parser.Scanner.scan_link_url(string, int, int)", span="117-117"];
m0_59 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="pos + 1 >= sourceLength", span="125-125"];
m0_61 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="var i = pos", span="128-128"];
m0_62 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="var c = s[i]", span="129-129"];
m0_64 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="var lastPos = sourceLength - 1", span="131-131"];
m0_65 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="ScannerCharacterMatcher.MatchWhitespaces(s, ref c, ref i, lastPos)", span="133-133"];
m0_69 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="c = s[++i]", span="138-138"];
m0_76 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="return i - pos + 1;", span="143-143"];
m0_80 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="c = s[++i]", span="146-146"];
m0_90 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="return i - pos;", span="163-163"];
m0_93 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="return openParens ? 0 : i - pos;", span="167-167"];
m0_95 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="return openParens ? 0 : i - pos + 1;", span="170-170"];
m0_97 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="c = s[++i]", span="173-173"];
m0_60 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="return 0;", span="126-126"];
m0_63 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="var nextEscaped = false", span="130-130"];
m0_73 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="c == '<' && !nextEscaped", span="142-142"];
m0_75 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="c == '>' && !nextEscaped", span="143-143"];
m0_79 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="nextEscaped = !nextEscaped && c == '\\'", span="145-145"];
m0_84 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="c == '(' && !nextEscaped", span="154-154"];
m0_88 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="c == ')' && !nextEscaped", span="160-160"];
m0_96 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="nextEscaped = !nextEscaped && c == '\\'", span="172-172"];
m0_67 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="i == lastPos", span="137-137"];
m0_70 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="i <= lastPos", span="139-139"];
m0_77 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="i == lastPos", span="144-144"];
m0_83 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="i <= lastPos", span="152-152"];
m0_94 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="i == lastPos", span="169-169"];
m0_66 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="c == '<'", span="135-135"];
m0_92 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="c <= 0x20", span="166-166"];
m0_82 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="bool openParens = false", span="151-151"];
m0_68 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="return 0;", span="137-137"];
m0_71 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="c == '\n' || c == ' '", span="141-141"];
m0_81 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="return 0;", span="148-148"];
m0_72 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="return 0;", span="141-141"];
m0_74 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="return 0;", span="142-142"];
m0_78 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="return 0;", span="144-144"];
m0_85 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label=openParens, span="156-156"];
m0_89 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="!openParens", span="162-162"];
m0_98 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="return 0;", span="176-176"];
m0_86 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="return 0;", span="157-157"];
m0_87 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="openParens = true", span="158-158"];
m0_91 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="openParens = false", span="164-164"];
m0_99 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="Exit CommonMark.Parser.Scanner.scan_link_url(string, int, int)", span="117-117"];
m0_130 [cluster="CommonMark.Parser.Scanner.scan_atx_heading_start(string, int, int, out int)", file="Scanner.cs", label="Entry CommonMark.Parser.Scanner.scan_atx_heading_start(string, int, int, out int)", span="239-239"];
m0_131 [cluster="CommonMark.Parser.Scanner.scan_atx_heading_start(string, int, int, out int)", file="Scanner.cs", label="headingLevel = 1", span="246-246"];
m0_132 [cluster="CommonMark.Parser.Scanner.scan_atx_heading_start(string, int, int, out int)", file="Scanner.cs", label="pos + 1 >= sourceLength", span="247-247"];
m0_134 [cluster="CommonMark.Parser.Scanner.scan_atx_heading_start(string, int, int, out int)", file="Scanner.cs", label="s[pos] != '#'", span="250-250"];
m0_137 [cluster="CommonMark.Parser.Scanner.scan_atx_heading_start(string, int, int, out int)", file="Scanner.cs", label="var i = pos + 1", span="254-254"];
m0_138 [cluster="CommonMark.Parser.Scanner.scan_atx_heading_start(string, int, int, out int)", file="Scanner.cs", label="i < sourceLength", span="254-254"];
m0_139 [cluster="CommonMark.Parser.Scanner.scan_atx_heading_start(string, int, int, out int)", file="Scanner.cs", label="var c = s[i]", span="256-256"];
m0_144 [cluster="CommonMark.Parser.Scanner.scan_atx_heading_start(string, int, int, out int)", file="Scanner.cs", label="return i - pos;", span="264-264"];
m0_149 [cluster="CommonMark.Parser.Scanner.scan_atx_heading_start(string, int, int, out int)", file="Scanner.cs", label="return i - pos + 1;", span="274-274"];
m0_150 [cluster="CommonMark.Parser.Scanner.scan_atx_heading_start(string, int, int, out int)", file="Scanner.cs", label="return spaceExists ? i - pos : 0;", span="278-278"];
m0_153 [cluster="CommonMark.Parser.Scanner.scan_atx_heading_start(string, int, int, out int)", file="Scanner.cs", label="return sourceLength - pos;", span="283-283"];
m0_141 [cluster="CommonMark.Parser.Scanner.scan_atx_heading_start(string, int, int, out int)", file="Scanner.cs", label="headingLevel == 6", span="260-260"];
m0_145 [cluster="CommonMark.Parser.Scanner.scan_atx_heading_start(string, int, int, out int)", file="Scanner.cs", label="headingLevel++", span="266-266"];
m0_133 [cluster="CommonMark.Parser.Scanner.scan_atx_heading_start(string, int, int, out int)", file="Scanner.cs", label="return 0;", span="248-248"];
m0_135 [cluster="CommonMark.Parser.Scanner.scan_atx_heading_start(string, int, int, out int)", file="Scanner.cs", label="return 0;", span="251-251"];
m0_136 [cluster="CommonMark.Parser.Scanner.scan_atx_heading_start(string, int, int, out int)", file="Scanner.cs", label="var spaceExists = false", span="253-253"];
m0_143 [cluster="CommonMark.Parser.Scanner.scan_atx_heading_start(string, int, int, out int)", file="Scanner.cs", label=spaceExists, span="263-263"];
m0_152 [cluster="CommonMark.Parser.Scanner.scan_atx_heading_start(string, int, int, out int)", file="Scanner.cs", label=spaceExists, span="282-282"];
m0_151 [cluster="CommonMark.Parser.Scanner.scan_atx_heading_start(string, int, int, out int)", file="Scanner.cs", label="i++", span="254-254"];
m0_140 [cluster="CommonMark.Parser.Scanner.scan_atx_heading_start(string, int, int, out int)", file="Scanner.cs", label="c == '#'", span="258-258"];
m0_146 [cluster="CommonMark.Parser.Scanner.scan_atx_heading_start(string, int, int, out int)", file="Scanner.cs", label="c == ' ' || c == '\t'", span="268-268"];
m0_148 [cluster="CommonMark.Parser.Scanner.scan_atx_heading_start(string, int, int, out int)", file="Scanner.cs", label="c == '\n'", span="272-272"];
m0_142 [cluster="CommonMark.Parser.Scanner.scan_atx_heading_start(string, int, int, out int)", file="Scanner.cs", label="return 0;", span="261-261"];
m0_147 [cluster="CommonMark.Parser.Scanner.scan_atx_heading_start(string, int, int, out int)", file="Scanner.cs", label="spaceExists = true", span="270-270"];
m0_154 [cluster="CommonMark.Parser.Scanner.scan_atx_heading_start(string, int, int, out int)", file="Scanner.cs", label="return 0;", span="285-285"];
m0_155 [cluster="CommonMark.Parser.Scanner.scan_atx_heading_start(string, int, int, out int)", file="Scanner.cs", label="Exit CommonMark.Parser.Scanner.scan_atx_heading_start(string, int, int, out int)", span="239-239"];
m0_119 [cluster="CommonMark.Parser.Scanner.scan_spacechars(string, int, int)", file="Scanner.cs", label="Entry CommonMark.Parser.Scanner.scan_spacechars(string, int, int)", span="218-218"];
m0_120 [cluster="CommonMark.Parser.Scanner.scan_spacechars(string, int, int)", file="Scanner.cs", label="pos >= sourceLength", span="224-224"];
m0_122 [cluster="CommonMark.Parser.Scanner.scan_spacechars(string, int, int)", file="Scanner.cs", label="var i = pos", span="227-227"];
m0_123 [cluster="CommonMark.Parser.Scanner.scan_spacechars(string, int, int)", file="Scanner.cs", label="i < sourceLength", span="227-227"];
m0_124 [cluster="CommonMark.Parser.Scanner.scan_spacechars(string, int, int)", file="Scanner.cs", label="!Utilities.IsWhitespace(s[i])", span="229-229"];
m0_125 [cluster="CommonMark.Parser.Scanner.scan_spacechars(string, int, int)", file="Scanner.cs", label="return i - pos;", span="230-230"];
m0_127 [cluster="CommonMark.Parser.Scanner.scan_spacechars(string, int, int)", file="Scanner.cs", label="return sourceLength - pos;", span="233-233"];
m0_121 [cluster="CommonMark.Parser.Scanner.scan_spacechars(string, int, int)", file="Scanner.cs", label="return 0;", span="225-225"];
m0_126 [cluster="CommonMark.Parser.Scanner.scan_spacechars(string, int, int)", file="Scanner.cs", label="i++", span="227-227"];
m0_128 [cluster="CommonMark.Parser.Scanner.scan_spacechars(string, int, int)", file="Scanner.cs", label="Exit CommonMark.Parser.Scanner.scan_spacechars(string, int, int)", span="218-218"];
m0_156 [cluster="CommonMark.Parser.Scanner.scan_setext_heading_line(string, int, int)", file="Scanner.cs", label="Entry CommonMark.Parser.Scanner.scan_setext_heading_line(string, int, int)", span="292-292"];
m0_157 [cluster="CommonMark.Parser.Scanner.scan_setext_heading_line(string, int, int)", file="Scanner.cs", label="pos >= sourceLength", span="300-300"];
m0_159 [cluster="CommonMark.Parser.Scanner.scan_setext_heading_line(string, int, int)", file="Scanner.cs", label="var c1 = s[pos]", span="303-303"];
m0_163 [cluster="CommonMark.Parser.Scanner.scan_setext_heading_line(string, int, int)", file="Scanner.cs", label="var i = pos + 1", span="309-309"];
m0_164 [cluster="CommonMark.Parser.Scanner.scan_setext_heading_line(string, int, int)", file="Scanner.cs", label="i < sourceLength", span="309-309"];
m0_165 [cluster="CommonMark.Parser.Scanner.scan_setext_heading_line(string, int, int)", file="Scanner.cs", label="var c = s[i]", span="311-311"];
m0_158 [cluster="CommonMark.Parser.Scanner.scan_setext_heading_line(string, int, int)", file="Scanner.cs", label="return 0;", span="301-301"];
m0_160 [cluster="CommonMark.Parser.Scanner.scan_setext_heading_line(string, int, int)", file="Scanner.cs", label="c1 != '=' && c1 != '-'", span="305-305"];
m0_166 [cluster="CommonMark.Parser.Scanner.scan_setext_heading_line(string, int, int)", file="Scanner.cs", label="c == c1 && !fin", span="312-312"];
m0_172 [cluster="CommonMark.Parser.Scanner.scan_setext_heading_line(string, int, int)", file="Scanner.cs", label="return c1 == '=' ? 1 : 2;", span="325-325"];
m0_161 [cluster="CommonMark.Parser.Scanner.scan_setext_heading_line(string, int, int)", file="Scanner.cs", label="return 0;", span="306-306"];
m0_162 [cluster="CommonMark.Parser.Scanner.scan_setext_heading_line(string, int, int)", file="Scanner.cs", label="var fin = false", span="308-308"];
m0_171 [cluster="CommonMark.Parser.Scanner.scan_setext_heading_line(string, int, int)", file="Scanner.cs", label="i++", span="309-309"];
m0_168 [cluster="CommonMark.Parser.Scanner.scan_setext_heading_line(string, int, int)", file="Scanner.cs", label="c == ' '", span="316-316"];
m0_169 [cluster="CommonMark.Parser.Scanner.scan_setext_heading_line(string, int, int)", file="Scanner.cs", label="c == '\n'", span="319-319"];
m0_167 [cluster="CommonMark.Parser.Scanner.scan_setext_heading_line(string, int, int)", file="Scanner.cs", label="fin = true", span="315-315"];
m0_170 [cluster="CommonMark.Parser.Scanner.scan_setext_heading_line(string, int, int)", file="Scanner.cs", label="return 0;", span="322-322"];
m0_173 [cluster="CommonMark.Parser.Scanner.scan_setext_heading_line(string, int, int)", file="Scanner.cs", label="Exit CommonMark.Parser.Scanner.scan_setext_heading_line(string, int, int)", span="292-292"];
m0_218 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="Entry CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", span="419-419"];
m0_219 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="pos + len >= sourceLength", span="430-430"];
m0_221 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="var c1 = s[pos]", span="433-433"];
m0_226 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="var i = pos + 1", span="439-439"];
m0_227 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="i < sourceLength", span="439-439"];
m0_228 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="var c = s[i]", span="441-441"];
m0_234 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="return cnt < len ? 0 : cnt;", span="447-447"];
m0_220 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="return 0;", span="431-431"];
m0_222 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="c1 != '`' && c1 != '~'", span="434-434"];
m0_229 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="c == c1 && !spaces", span="442-442"];
m0_223 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="return 0;", span="435-435"];
m0_224 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="var cnt = 1", span="437-437"];
m0_225 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="var spaces = false", span="438-438"];
m0_230 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="cnt++", span="443-443"];
m0_236 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="i++", span="439-439"];
m0_237 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="return 0;", span="452-452"];
m0_231 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="c == ' '", span="444-444"];
m0_233 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="c == '\n'", span="446-446"];
m0_232 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="spaces = true", span="445-445"];
m0_235 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="return 0;", span="449-449"];
m0_238 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="Exit CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", span="419-419"];
m0_24 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="Entry CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", span="52-52"];
m0_25 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="pos + 6 >= sourceLength", span="63-63"];
m0_27 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="char c = s[pos]", span="66-66"];
m0_30 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="int i = pos", span="70-70"];
m0_31 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="int ln = sourceLength - 1", span="71-71"];
m0_38 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="c = s[++i]", span="83-83"];
m0_41 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="c = s[++i]", span="88-88"];
m0_45 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="!ScannerCharacterMatcher.MatchAsciiLetterOrDigit(s, ref c, ref i, ln, '-')", span="94-94"];
m0_47 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="s[i - 1] == '-' || i - domainStart > 63", span="97-97"];
m0_50 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="return hadDot ? i - pos + 1 : 0;", span="101-101"];
m0_54 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="c = s[++i]", span="107-107"];
m0_26 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="return 0;", span="64-64"];
m0_28 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="c == '@'", span="67-67"];
m0_33 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="c == '@'", span="74-74"];
m0_34 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="(c < 'a' || c > 'z')\r\n                    && (c < 'A' || c > 'Z')\r\n                    && (c < '0' || c > '9')\r\n                    && ''.!#$%&'*+/=?^_`{|}~-''.IndexOf(c) == -1", span="77-80"];
m0_29 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="return 0;", span="68-68"];
m0_32 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="i <= ln", span="72-72"];
m0_36 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="i == ln", span="82-82"];
m0_39 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="i == ln", span="87-87"];
m0_51 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="c != '.' || i == ln", span="103-103"];
m0_35 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="return 0;", span="81-81"];
m0_37 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="return 0;", span="82-82"];
m0_40 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="return 0;", span="87-87"];
m0_42 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="bool hadDot = false", span="89-89"];
m0_44 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="var domainStart = i", span="93-93"];
m0_43 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label=true, span="91-91"];
m0_46 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="return 0;", span="95-95"];
m0_49 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="c == '>'", span="100-100"];
m0_48 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="return 0;", span="98-98"];
m0_52 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="return 0;", span="104-104"];
m0_53 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="hadDot = true", span="106-106"];
m0_55 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="Exit CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", span="52-52"];
d57 -> d66  [color=green, key=1, label=string, style=dashed];
d57 -> d67  [color=green, key=1, label=string, style=dashed];
d57 -> d64  [color=darkseagreen4, key=1, label=bool, style=dashed];
d62 -> d66  [color=green, key=1, label=pos, style=dashed];
d62 -> d65  [color=green, key=1, label=pos, style=dashed];
d65 -> d65  [color=green, key=1, label=pos, style=dashed];
d91 -> d96  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
d91 -> d98  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
d91 -> d101  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
d91 -> d104  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
d91 -> d109  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
d91 -> d130  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
d299 -> d303  [color=darkseagreen4, key=1, label=hashpos, style=dashed];
d299 -> d305  [color=darkseagreen4, key=1, label=hashpos, style=dashed];
d371 -> d374  [color=darkseagreen4, key=1, label=string, style=dashed];
d371 -> d377  [color=darkseagreen4, key=1, label=string, style=dashed];
d372 -> d374  [color=darkseagreen4, key=1, label=p, style=dashed];
d372 -> d375  [color=darkseagreen4, key=1, label=p, style=dashed];
d372 -> d377  [color=darkseagreen4, key=1, label=p, style=dashed];
d372 -> d378  [color=darkseagreen4, key=1, label=p, style=dashed];
d373 -> d376  [color=darkseagreen4, key=1, label=numhashes, style=dashed];
d373 -> d379  [color=darkseagreen4, key=1, label=numhashes, style=dashed];
d375 -> d377  [color=darkseagreen4, key=1, label=p, style=dashed];
d375 -> d375  [color=darkseagreen4, key=1, label=p, style=dashed];
d375 -> d378  [color=darkseagreen4, key=1, label=p, style=dashed];
d378 -> d378  [color=darkseagreen4, key=1, label=p, style=dashed];
d376 -> d376  [color=darkseagreen4, key=1, label=numhashes, style=dashed];
d376 -> d379  [color=darkseagreen4, key=1, label=numhashes, style=dashed];
d379 -> d379  [color=darkseagreen4, key=1, label=numhashes, style=dashed];
d121 -> d123  [color=darkseagreen4, key=1, label=item, style=dashed];
d121 -> d127  [color=darkseagreen4, key=1, label=item, style=dashed];
d298 -> d381  [color=darkseagreen4, key=1, label=container, style=dashed];
d298 -> d364  [color=darkseagreen4, key=1, label=container, style=dashed];
d298 -> d382  [color=darkseagreen4, key=1, label=container, style=dashed];
d298 -> d341  [color=darkseagreen4, key=1, label=container, style=dashed];
d298 -> d352  [color=darkseagreen4, key=1, label=container, style=dashed];
d298 -> d359  [color=darkseagreen4, key=1, label=container, style=dashed];
d298 -> d360  [color=darkseagreen4, key=1, label=container, style=dashed];
d298 -> d361  [color=darkseagreen4, key=1, label=container, style=dashed];
d298 -> d366  [color=darkseagreen4, key=1, label=container, style=dashed];
d298 -> d367  [color=darkseagreen4, key=1, label=container, style=dashed];
d298 -> d368  [color=darkseagreen4, key=1, label=container, style=dashed];
d298 -> d370  [color=darkseagreen4, key=1, label=container, style=dashed];
d298 -> d384  [color=darkseagreen4, key=1, label=container, style=dashed];
d298 -> d385  [color=darkseagreen4, key=1, label=container, style=dashed];
d298 -> d386  [color=darkseagreen4, key=1, label=container, style=dashed];
d298 -> d389  [color=darkseagreen4, key=1, label=container, style=dashed];
d234 -> d239  [color=darkseagreen4, key=1, label=string, style=dashed];
d234 -> d247  [color=darkseagreen4, key=1, label=string, style=dashed];
d234 -> d266  [color=darkseagreen4, key=1, label=string, style=dashed];
d234 -> d283  [color=darkseagreen4, key=1, label=string, style=dashed];
d234 -> d291  [color=darkseagreen4, key=1, label=string, style=dashed];
d234 -> d293  [color=darkseagreen4, key=1, label=string, style=dashed];
d234 -> d303  [color=darkseagreen4, key=1, label=string, style=dashed];
d234 -> d327  [color=darkseagreen4, key=1, label=string, style=dashed];
d234 -> d329  [color=darkseagreen4, key=1, label=string, style=dashed];
d234 -> d343  [color=darkseagreen4, key=1, label=string, style=dashed];
d234 -> d353  [color=darkseagreen4, key=1, label=string, style=dashed];
d234 -> d360  [color=darkseagreen4, key=1, label=string, style=dashed];
d234 -> d366  [color=darkseagreen4, key=1, label=string, style=dashed];
d234 -> d368  [color=darkseagreen4, key=1, label=string, style=dashed];
d234 -> d385  [color=darkseagreen4, key=1, label=string, style=dashed];
d234 -> d388  [color=darkseagreen4, key=1, label=string, style=dashed];
d234 -> d389  [color=darkseagreen4, key=1, label=string, style=dashed];
d282 -> d284  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
d282 -> d291  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
d284 -> d284  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
d284 -> d291  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
d305 -> d305  [color=darkseagreen4, key=1, label=hashpos, style=dashed];
d280 -> d381  [color=darkseagreen4, key=1, label=container, style=dashed];
d280 -> d364  [color=darkseagreen4, key=1, label=container, style=dashed];
d280 -> d382  [color=darkseagreen4, key=1, label=container, style=dashed];
d280 -> d370  [color=darkseagreen4, key=1, label=container, style=dashed];
d280 -> d280  [color=darkseagreen4, key=1, label=container, style=dashed];
d280 -> d336  [color=darkseagreen4, key=1, label=container, style=dashed];
d280 -> d341  [color=darkseagreen4, key=1, label=container, style=dashed];
d280 -> d352  [color=darkseagreen4, key=1, label=container, style=dashed];
d280 -> d359  [color=darkseagreen4, key=1, label=container, style=dashed];
d280 -> d360  [color=darkseagreen4, key=1, label=container, style=dashed];
d280 -> d361  [color=darkseagreen4, key=1, label=container, style=dashed];
d280 -> d366  [color=darkseagreen4, key=1, label=container, style=dashed];
d280 -> d367  [color=darkseagreen4, key=1, label=container, style=dashed];
d280 -> d368  [color=darkseagreen4, key=1, label=container, style=dashed];
d280 -> d384  [color=darkseagreen4, key=1, label=container, style=dashed];
d280 -> d385  [color=darkseagreen4, key=1, label=container, style=dashed];
d280 -> d386  [color=darkseagreen4, key=1, label=container, style=dashed];
d280 -> d389  [color=darkseagreen4, key=1, label=container, style=dashed];
d290 -> d381  [color=darkseagreen4, key=1, label=container, style=dashed];
d290 -> d364  [color=darkseagreen4, key=1, label=container, style=dashed];
d290 -> d382  [color=darkseagreen4, key=1, label=container, style=dashed];
d290 -> d370  [color=darkseagreen4, key=1, label=container, style=dashed];
d290 -> d352  [color=darkseagreen4, key=1, label=container, style=dashed];
d290 -> d359  [color=darkseagreen4, key=1, label=container, style=dashed];
d290 -> d360  [color=darkseagreen4, key=1, label=container, style=dashed];
d290 -> d361  [color=darkseagreen4, key=1, label=container, style=dashed];
d290 -> d366  [color=darkseagreen4, key=1, label=container, style=dashed];
d290 -> d367  [color=darkseagreen4, key=1, label=container, style=dashed];
d290 -> d368  [color=darkseagreen4, key=1, label=container, style=dashed];
d290 -> d384  [color=darkseagreen4, key=1, label=container, style=dashed];
d290 -> d385  [color=darkseagreen4, key=1, label=container, style=dashed];
d290 -> d386  [color=darkseagreen4, key=1, label=container, style=dashed];
d290 -> d389  [color=darkseagreen4, key=1, label=container, style=dashed];
d295 -> d381  [color=darkseagreen4, key=1, label=container, style=dashed];
d295 -> d364  [color=darkseagreen4, key=1, label=container, style=dashed];
d295 -> d382  [color=darkseagreen4, key=1, label=container, style=dashed];
d295 -> d370  [color=darkseagreen4, key=1, label=container, style=dashed];
d295 -> d352  [color=darkseagreen4, key=1, label=container, style=dashed];
d295 -> d359  [color=darkseagreen4, key=1, label=container, style=dashed];
d295 -> d360  [color=darkseagreen4, key=1, label=container, style=dashed];
d295 -> d361  [color=darkseagreen4, key=1, label=container, style=dashed];
d295 -> d366  [color=darkseagreen4, key=1, label=container, style=dashed];
d295 -> d367  [color=darkseagreen4, key=1, label=container, style=dashed];
d295 -> d368  [color=darkseagreen4, key=1, label=container, style=dashed];
d295 -> d384  [color=darkseagreen4, key=1, label=container, style=dashed];
d295 -> d385  [color=darkseagreen4, key=1, label=container, style=dashed];
d295 -> d386  [color=darkseagreen4, key=1, label=container, style=dashed];
d295 -> d389  [color=darkseagreen4, key=1, label=container, style=dashed];
d308 -> d381  [color=darkseagreen4, key=1, label=container, style=dashed];
d308 -> d364  [color=darkseagreen4, key=1, label=container, style=dashed];
d308 -> d382  [color=darkseagreen4, key=1, label=container, style=dashed];
d308 -> d370  [color=darkseagreen4, key=1, label=container, style=dashed];
d308 -> d341  [color=darkseagreen4, key=1, label=container, style=dashed];
d308 -> d352  [color=darkseagreen4, key=1, label=container, style=dashed];
d308 -> d359  [color=darkseagreen4, key=1, label=container, style=dashed];
d308 -> d360  [color=darkseagreen4, key=1, label=container, style=dashed];
d308 -> d361  [color=darkseagreen4, key=1, label=container, style=dashed];
d308 -> d366  [color=darkseagreen4, key=1, label=container, style=dashed];
d308 -> d367  [color=darkseagreen4, key=1, label=container, style=dashed];
d308 -> d368  [color=darkseagreen4, key=1, label=container, style=dashed];
d308 -> d384  [color=darkseagreen4, key=1, label=container, style=dashed];
d308 -> d385  [color=darkseagreen4, key=1, label=container, style=dashed];
d308 -> d386  [color=darkseagreen4, key=1, label=container, style=dashed];
d308 -> d389  [color=darkseagreen4, key=1, label=container, style=dashed];
d314 -> d381  [color=darkseagreen4, key=1, label=container, style=dashed];
d314 -> d364  [color=darkseagreen4, key=1, label=container, style=dashed];
d314 -> d382  [color=darkseagreen4, key=1, label=container, style=dashed];
d314 -> d370  [color=darkseagreen4, key=1, label=container, style=dashed];
d314 -> d352  [color=darkseagreen4, key=1, label=container, style=dashed];
d314 -> d359  [color=darkseagreen4, key=1, label=container, style=dashed];
d314 -> d360  [color=darkseagreen4, key=1, label=container, style=dashed];
d314 -> d361  [color=darkseagreen4, key=1, label=container, style=dashed];
d314 -> d366  [color=darkseagreen4, key=1, label=container, style=dashed];
d314 -> d367  [color=darkseagreen4, key=1, label=container, style=dashed];
d314 -> d368  [color=darkseagreen4, key=1, label=container, style=dashed];
d314 -> d384  [color=darkseagreen4, key=1, label=container, style=dashed];
d314 -> d385  [color=darkseagreen4, key=1, label=container, style=dashed];
d314 -> d386  [color=darkseagreen4, key=1, label=container, style=dashed];
d314 -> d389  [color=darkseagreen4, key=1, label=container, style=dashed];
d339 -> d381  [color=darkseagreen4, key=1, label=container, style=dashed];
d339 -> d364  [color=darkseagreen4, key=1, label=container, style=dashed];
d339 -> d382  [color=darkseagreen4, key=1, label=container, style=dashed];
d339 -> d370  [color=darkseagreen4, key=1, label=container, style=dashed];
d339 -> d341  [color=darkseagreen4, key=1, label=container, style=dashed];
d339 -> d352  [color=darkseagreen4, key=1, label=container, style=dashed];
d339 -> d359  [color=darkseagreen4, key=1, label=container, style=dashed];
d339 -> d360  [color=darkseagreen4, key=1, label=container, style=dashed];
d339 -> d361  [color=darkseagreen4, key=1, label=container, style=dashed];
d339 -> d366  [color=darkseagreen4, key=1, label=container, style=dashed];
d339 -> d367  [color=darkseagreen4, key=1, label=container, style=dashed];
d339 -> d368  [color=darkseagreen4, key=1, label=container, style=dashed];
d339 -> d384  [color=darkseagreen4, key=1, label=container, style=dashed];
d339 -> d385  [color=darkseagreen4, key=1, label=container, style=dashed];
d339 -> d386  [color=darkseagreen4, key=1, label=container, style=dashed];
d339 -> d389  [color=darkseagreen4, key=1, label=container, style=dashed];
d342 -> d381  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
d342 -> d344  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
d342 -> d385  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
d342 -> d388  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
d235 -> d381  [color=darkseagreen4, key=1, label=container, style=dashed];
d235 -> d364  [color=darkseagreen4, key=1, label=container, style=dashed];
d235 -> d382  [color=darkseagreen4, key=1, label=container, style=dashed];
d235 -> d370  [color=darkseagreen4, key=1, label=container, style=dashed];
d235 -> d280  [color=darkseagreen4, key=1, label=container, style=dashed];
d235 -> d279  [color=darkseagreen4, key=1, label=container, style=dashed];
d235 -> d281  [color=darkseagreen4, key=1, label=container, style=dashed];
d235 -> d336  [color=darkseagreen4, key=1, label=container, style=dashed];
d235 -> d341  [color=darkseagreen4, key=1, label=container, style=dashed];
d235 -> d352  [color=darkseagreen4, key=1, label=container, style=dashed];
d235 -> d359  [color=darkseagreen4, key=1, label=container, style=dashed];
d235 -> d360  [color=darkseagreen4, key=1, label=container, style=dashed];
d235 -> d361  [color=darkseagreen4, key=1, label=container, style=dashed];
d235 -> d366  [color=darkseagreen4, key=1, label=container, style=dashed];
d235 -> d367  [color=darkseagreen4, key=1, label=container, style=dashed];
d235 -> d368  [color=darkseagreen4, key=1, label=container, style=dashed];
d235 -> d384  [color=darkseagreen4, key=1, label=container, style=dashed];
d235 -> d385  [color=darkseagreen4, key=1, label=container, style=dashed];
d235 -> d386  [color=darkseagreen4, key=1, label=container, style=dashed];
d235 -> d389  [color=darkseagreen4, key=1, label=container, style=dashed];
d237 -> d381  [color=darkseagreen4, key=1, label=container, style=dashed];
d237 -> d364  [color=darkseagreen4, key=1, label=container, style=dashed];
d237 -> d382  [color=darkseagreen4, key=1, label=container, style=dashed];
d237 -> d370  [color=darkseagreen4, key=1, label=container, style=dashed];
d237 -> d280  [color=darkseagreen4, key=1, label=container, style=dashed];
d237 -> d243  [color=darkseagreen4, key=1, label=container, style=dashed];
d237 -> d250  [color=darkseagreen4, key=1, label=container, style=dashed];
d237 -> d251  [color=darkseagreen4, key=1, label=container, style=dashed];
d237 -> d256  [color=darkseagreen4, key=1, label=container, style=dashed];
d237 -> d262  [color=darkseagreen4, key=1, label=container, style=dashed];
d237 -> d264  [color=darkseagreen4, key=1, label=container, style=dashed];
d237 -> d269  [color=darkseagreen4, key=1, label=container, style=dashed];
d237 -> d272  [color=darkseagreen4, key=1, label=container, style=dashed];
d237 -> d279  [color=darkseagreen4, key=1, label=container, style=dashed];
d237 -> d281  [color=darkseagreen4, key=1, label=container, style=dashed];
d237 -> d336  [color=darkseagreen4, key=1, label=container, style=dashed];
d237 -> d341  [color=darkseagreen4, key=1, label=container, style=dashed];
d237 -> d352  [color=darkseagreen4, key=1, label=container, style=dashed];
d237 -> d359  [color=darkseagreen4, key=1, label=container, style=dashed];
d237 -> d360  [color=darkseagreen4, key=1, label=container, style=dashed];
d237 -> d361  [color=darkseagreen4, key=1, label=container, style=dashed];
d237 -> d366  [color=darkseagreen4, key=1, label=container, style=dashed];
d237 -> d367  [color=darkseagreen4, key=1, label=container, style=dashed];
d237 -> d368  [color=darkseagreen4, key=1, label=container, style=dashed];
d237 -> d384  [color=darkseagreen4, key=1, label=container, style=dashed];
d237 -> d385  [color=darkseagreen4, key=1, label=container, style=dashed];
d237 -> d386  [color=darkseagreen4, key=1, label=container, style=dashed];
d237 -> d389  [color=darkseagreen4, key=1, label=container, style=dashed];
d277 -> d381  [color=darkseagreen4, key=1, label=container, style=dashed];
d277 -> d364  [color=darkseagreen4, key=1, label=container, style=dashed];
d277 -> d382  [color=darkseagreen4, key=1, label=container, style=dashed];
d277 -> d370  [color=darkseagreen4, key=1, label=container, style=dashed];
d277 -> d280  [color=darkseagreen4, key=1, label=container, style=dashed];
d277 -> d279  [color=darkseagreen4, key=1, label=container, style=dashed];
d277 -> d281  [color=darkseagreen4, key=1, label=container, style=dashed];
d277 -> d336  [color=darkseagreen4, key=1, label=container, style=dashed];
d277 -> d341  [color=darkseagreen4, key=1, label=container, style=dashed];
d277 -> d352  [color=darkseagreen4, key=1, label=container, style=dashed];
d277 -> d359  [color=darkseagreen4, key=1, label=container, style=dashed];
d277 -> d360  [color=darkseagreen4, key=1, label=container, style=dashed];
d277 -> d361  [color=darkseagreen4, key=1, label=container, style=dashed];
d277 -> d366  [color=darkseagreen4, key=1, label=container, style=dashed];
d277 -> d367  [color=darkseagreen4, key=1, label=container, style=dashed];
d277 -> d368  [color=darkseagreen4, key=1, label=container, style=dashed];
d277 -> d384  [color=darkseagreen4, key=1, label=container, style=dashed];
d277 -> d385  [color=darkseagreen4, key=1, label=container, style=dashed];
d277 -> d386  [color=darkseagreen4, key=1, label=container, style=dashed];
d277 -> d389  [color=darkseagreen4, key=1, label=container, style=dashed];
d322 -> d381  [color=darkseagreen4, key=1, label=container, style=dashed];
d322 -> d364  [color=darkseagreen4, key=1, label=container, style=dashed];
d322 -> d382  [color=darkseagreen4, key=1, label=container, style=dashed];
d322 -> d370  [color=darkseagreen4, key=1, label=container, style=dashed];
d322 -> d341  [color=darkseagreen4, key=1, label=container, style=dashed];
d322 -> d352  [color=darkseagreen4, key=1, label=container, style=dashed];
d322 -> d359  [color=darkseagreen4, key=1, label=container, style=dashed];
d322 -> d360  [color=darkseagreen4, key=1, label=container, style=dashed];
d322 -> d361  [color=darkseagreen4, key=1, label=container, style=dashed];
d322 -> d366  [color=darkseagreen4, key=1, label=container, style=dashed];
d322 -> d367  [color=darkseagreen4, key=1, label=container, style=dashed];
d322 -> d368  [color=darkseagreen4, key=1, label=container, style=dashed];
d322 -> d384  [color=darkseagreen4, key=1, label=container, style=dashed];
d322 -> d385  [color=darkseagreen4, key=1, label=container, style=dashed];
d322 -> d386  [color=darkseagreen4, key=1, label=container, style=dashed];
d322 -> d389  [color=darkseagreen4, key=1, label=container, style=dashed];
d344 -> d381  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
d344 -> d344  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
d344 -> d385  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
d344 -> d388  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
d44 -> d50  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
d44 -> d51  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
d79 -> d86  [color=darkseagreen4, key=1, label=int, style=dashed];
d79 -> d88  [color=darkseagreen4, key=1, label=int, style=dashed];
d79 -> d90  [color=darkseagreen4, key=1, label="ref CommonMark.Syntax.Block", style=dashed];
d80 -> d86  [color=darkseagreen4, key=1, label=container, style=dashed];
d80 -> d85  [color=darkseagreen4, key=1, label=container, style=dashed];
d81 -> d88  [color=darkseagreen4, key=1, label=b, style=dashed];
d81 -> d85  [color=darkseagreen4, key=1, label=b, style=dashed];
d81 -> d84  [color=darkseagreen4, key=1, label=b, style=dashed];
d83 -> d88  [color=darkseagreen4, key=1, label=b, style=dashed];
d83 -> d85  [color=darkseagreen4, key=1, label=b, style=dashed];
d83 -> d84  [color=darkseagreen4, key=1, label=b, style=dashed];
d138 -> d140  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
d138 -> d142  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
d138 -> d147  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
d141 -> d142  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
d141 -> d147  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
d220 -> d321  [color=darkseagreen4, key=1, label=int, style=dashed];
d220 -> d355  [color=darkseagreen4, key=1, label=int, style=dashed];
d220 -> d364  [color=darkseagreen4, key=1, label=int, style=dashed];
d220 -> d382  [color=darkseagreen4, key=1, label=int, style=dashed];
d220 -> d280  [color=darkseagreen4, key=1, label=int, style=dashed];
d220 -> d301  [color=darkseagreen4, key=1, label="ref CommonMark.Syntax.Block", style=dashed];
d220 -> d389  [color=darkseagreen4, key=1, label=int, style=dashed];
d220 -> d392  [color=darkseagreen4, key=1, label="ref CommonMark.Syntax.Block", style=dashed];
d230 -> d355  [color=darkseagreen4, key=1, label=cur, style=dashed];
d230 -> d288  [color=darkseagreen4, key=1, label=cur, style=dashed];
d230 -> d352  [color=darkseagreen4, key=1, label=cur, style=dashed];
d230 -> d353  [color=darkseagreen4, key=1, label=cur, style=dashed];
d230 -> d354  [color=darkseagreen4, key=1, label=cur, style=dashed];
d27 -> d33  [color=darkseagreen4, key=1, label=int, style=dashed];
d125 -> d127  [color=darkseagreen4, key=1, label=subitem, style=dashed];
d297 -> d353  [color=darkseagreen4, key=1, label=offset, style=dashed];
d297 -> d360  [color=darkseagreen4, key=1, label=offset, style=dashed];
d297 -> d366  [color=darkseagreen4, key=1, label=offset, style=dashed];
d297 -> d368  [color=darkseagreen4, key=1, label=offset, style=dashed];
d390 -> d392  [color=darkseagreen4, key=1, label="ref CommonMark.Syntax.Block", style=dashed];
d242 -> d253  [color=darkseagreen4, key=1, label=blank, style=dashed];
d242 -> d259  [color=darkseagreen4, key=1, label=blank, style=dashed];
d242 -> d270  [color=darkseagreen4, key=1, label=blank, style=dashed];
d242 -> d273  [color=darkseagreen4, key=1, label=blank, style=dashed];
d242 -> d279  [color=darkseagreen4, key=1, label=blank, style=dashed];
d286 -> d288  [color=darkseagreen4, key=1, label=blank, style=dashed];
d318 -> d360  [color=darkseagreen4, key=1, label=offset, style=dashed];
d318 -> d366  [color=darkseagreen4, key=1, label=offset, style=dashed];
d318 -> d368  [color=darkseagreen4, key=1, label=offset, style=dashed];
d318 -> d353  [color=darkseagreen4, key=1, label=offset, style=dashed];
d323 -> d360  [color=darkseagreen4, key=1, label=offset, style=dashed];
d323 -> d366  [color=darkseagreen4, key=1, label=offset, style=dashed];
d323 -> d368  [color=darkseagreen4, key=1, label=offset, style=dashed];
d323 -> d353  [color=darkseagreen4, key=1, label=offset, style=dashed];
d324 -> d336  [color=darkseagreen4, key=1, label=data, style=dashed];
d346 -> d352  [color=darkseagreen4, key=1, label=blank, style=dashed];
d346 -> d369  [color=darkseagreen4, key=1, label=blank, style=dashed];
d223 -> d360  [color=darkseagreen4, key=1, label=offset, style=dashed];
d223 -> d366  [color=darkseagreen4, key=1, label=offset, style=dashed];
d223 -> d368  [color=darkseagreen4, key=1, label=offset, style=dashed];
d223 -> d266  [color=darkseagreen4, key=1, label=offset, style=dashed];
d223 -> d353  [color=darkseagreen4, key=1, label=offset, style=dashed];
d223 -> d267  [color=darkseagreen4, key=1, label=offset, style=dashed];
d252 -> d360  [color=darkseagreen4, key=1, label=offset, style=dashed];
d252 -> d366  [color=darkseagreen4, key=1, label=offset, style=dashed];
d252 -> d368  [color=darkseagreen4, key=1, label=offset, style=dashed];
d252 -> d353  [color=darkseagreen4, key=1, label=offset, style=dashed];
d258 -> d360  [color=darkseagreen4, key=1, label=offset, style=dashed];
d258 -> d366  [color=darkseagreen4, key=1, label=offset, style=dashed];
d258 -> d368  [color=darkseagreen4, key=1, label=offset, style=dashed];
d258 -> d353  [color=darkseagreen4, key=1, label=offset, style=dashed];
d267 -> d360  [color=darkseagreen4, key=1, label=offset, style=dashed];
d267 -> d366  [color=darkseagreen4, key=1, label=offset, style=dashed];
d267 -> d368  [color=darkseagreen4, key=1, label=offset, style=dashed];
d267 -> d353  [color=darkseagreen4, key=1, label=offset, style=dashed];
d267 -> d267  [color=darkseagreen4, key=1, label=offset, style=dashed];
d246 -> d360  [color=darkseagreen4, key=1, label=offset, style=dashed];
d246 -> d366  [color=darkseagreen4, key=1, label=offset, style=dashed];
d246 -> d368  [color=darkseagreen4, key=1, label=offset, style=dashed];
d246 -> d353  [color=darkseagreen4, key=1, label=offset, style=dashed];
d246 -> d248  [color=darkseagreen4, key=1, label=offset, style=dashed];
d254 -> d360  [color=darkseagreen4, key=1, label=offset, style=dashed];
d254 -> d366  [color=darkseagreen4, key=1, label=offset, style=dashed];
d254 -> d368  [color=darkseagreen4, key=1, label=offset, style=dashed];
d254 -> d353  [color=darkseagreen4, key=1, label=offset, style=dashed];
d260 -> d360  [color=darkseagreen4, key=1, label=offset, style=dashed];
d260 -> d366  [color=darkseagreen4, key=1, label=offset, style=dashed];
d260 -> d368  [color=darkseagreen4, key=1, label=offset, style=dashed];
d260 -> d353  [color=darkseagreen4, key=1, label=offset, style=dashed];
d248 -> d360  [color=darkseagreen4, key=1, label=offset, style=dashed];
d248 -> d366  [color=darkseagreen4, key=1, label=offset, style=dashed];
d248 -> d368  [color=darkseagreen4, key=1, label=offset, style=dashed];
d248 -> d353  [color=darkseagreen4, key=1, label=offset, style=dashed];
d248 -> d248  [color=darkseagreen4, key=1, label=offset, style=dashed];
d285 -> d287  [color=darkseagreen4, key=1, label=indent, style=dashed];
d292 -> d360  [color=darkseagreen4, key=1, label=offset, style=dashed];
d292 -> d366  [color=darkseagreen4, key=1, label=offset, style=dashed];
d292 -> d368  [color=darkseagreen4, key=1, label=offset, style=dashed];
d292 -> d353  [color=darkseagreen4, key=1, label=offset, style=dashed];
d292 -> d294  [color=darkseagreen4, key=1, label=offset, style=dashed];
d312 -> d360  [color=darkseagreen4, key=1, label=offset, style=dashed];
d312 -> d366  [color=darkseagreen4, key=1, label=offset, style=dashed];
d312 -> d368  [color=darkseagreen4, key=1, label=offset, style=dashed];
d312 -> d353  [color=darkseagreen4, key=1, label=offset, style=dashed];
d325 -> d360  [color=darkseagreen4, key=1, label=offset, style=dashed];
d325 -> d366  [color=darkseagreen4, key=1, label=offset, style=dashed];
d325 -> d368  [color=darkseagreen4, key=1, label=offset, style=dashed];
d325 -> d327  [color=darkseagreen4, key=1, label=offset, style=dashed];
d325 -> d329  [color=darkseagreen4, key=1, label=offset, style=dashed];
d325 -> d353  [color=darkseagreen4, key=1, label=offset, style=dashed];
d302 -> d304  [color=darkseagreen4, key=1, label=level, style=dashed];
d304 -> d304  [color=darkseagreen4, key=1, label=level, style=dashed];
d29 -> d32  [color=darkseagreen4, key=1, label=c, style=dashed];
d177 -> d189  [color=darkseagreen4, key=1, label=c, style=dashed];
d289 -> d360  [color=darkseagreen4, key=1, label=offset, style=dashed];
d289 -> d366  [color=darkseagreen4, key=1, label=offset, style=dashed];
d289 -> d368  [color=darkseagreen4, key=1, label=offset, style=dashed];
d289 -> d353  [color=darkseagreen4, key=1, label=offset, style=dashed];
d294 -> d360  [color=darkseagreen4, key=1, label=offset, style=dashed];
d294 -> d366  [color=darkseagreen4, key=1, label=offset, style=dashed];
d294 -> d368  [color=darkseagreen4, key=1, label=offset, style=dashed];
d294 -> d353  [color=darkseagreen4, key=1, label=offset, style=dashed];
d294 -> d294  [color=darkseagreen4, key=1, label=offset, style=dashed];
d332 -> d360  [color=darkseagreen4, key=1, label=offset, style=dashed];
d332 -> d366  [color=darkseagreen4, key=1, label=offset, style=dashed];
d332 -> d368  [color=darkseagreen4, key=1, label=offset, style=dashed];
d332 -> d353  [color=darkseagreen4, key=1, label=offset, style=dashed];
d334 -> d360  [color=darkseagreen4, key=1, label=offset, style=dashed];
d334 -> d366  [color=darkseagreen4, key=1, label=offset, style=dashed];
d334 -> d368  [color=darkseagreen4, key=1, label=offset, style=dashed];
d334 -> d353  [color=darkseagreen4, key=1, label=offset, style=dashed];
d278 -> d354  [color=darkseagreen4, key=1, label=last_matched_container, style=dashed];
d278 -> d352  [color=darkseagreen4, key=1, label=last_matched_container, style=dashed];
d238 -> d240  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
d265 -> d268  [color=darkseagreen4, key=1, label=i, style=dashed];
d144 -> d153  [color=darkseagreen4, key=1, label=child, style=dashed];
d231 -> d279  [color=darkseagreen4, key=1, label=blank, style=dashed];
d33 -> d33  [color=darkseagreen4, key=1, label=int, style=dashed];
d72 -> d75  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
d72 -> d76  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
d240 -> d240  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
d241 -> d251  [color=darkseagreen4, key=1, label=indent, style=dashed];
d241 -> d257  [color=darkseagreen4, key=1, label=indent, style=dashed];
d268 -> d268  [color=darkseagreen4, key=1, label=i, style=dashed];
d228 -> d276  [color=darkseagreen4, key=1, label=all_matched, style=dashed];
d171 -> d191  [color=darkseagreen4, key=1, label=string, style=dashed];
d171 -> d198  [color=darkseagreen4, key=1, label=string, style=dashed];
d171 -> d178  [color=darkseagreen4, key=1, label=string, style=dashed];
d171 -> d179  [color=darkseagreen4, key=1, label=int, style=dashed];
d171 -> d180  [color=darkseagreen4, key=1, label=string, style=dashed];
d171 -> d190  [color=darkseagreen4, key=1, label=int, style=dashed];
d171 -> d193  [color=darkseagreen4, key=1, label=string, style=dashed];
d171 -> d209  [color=darkseagreen4, key=1, label=int, style=dashed];
d326 -> d329  [color=darkseagreen4, key=1, label=i, style=dashed];
d326 -> d328  [color=darkseagreen4, key=1, label=i, style=dashed];
d326 -> d331  [color=darkseagreen4, key=1, label=i, style=dashed];
d328 -> d329  [color=darkseagreen4, key=1, label=i, style=dashed];
d328 -> d328  [color=darkseagreen4, key=1, label=i, style=dashed];
d328 -> d331  [color=darkseagreen4, key=1, label=i, style=dashed];
d176 -> d193  [color=darkseagreen4, key=1, label=startpos, style=dashed];
d176 -> d209  [color=darkseagreen4, key=1, label=startpos, style=dashed];
d190 -> d190  [color=darkseagreen4, key=1, label=int, style=dashed];
d190 -> d192  [color=darkseagreen4, key=1, label=int, style=dashed];
d190 -> d193  [color=darkseagreen4, key=1, label=int, style=dashed];
d190 -> d197  [color=darkseagreen4, key=1, label=int, style=dashed];
d190 -> d209  [color=darkseagreen4, key=1, label=int, style=dashed];
d192 -> d192  [color=darkseagreen4, key=1, label=int, style=dashed];
d192 -> d193  [color=darkseagreen4, key=1, label=int, style=dashed];
d192 -> d197  [color=darkseagreen4, key=1, label=int, style=dashed];
d192 -> d209  [color=darkseagreen4, key=1, label=int, style=dashed];
d197 -> d197  [color=darkseagreen4, key=1, label=int, style=dashed];
d197 -> d209  [color=darkseagreen4, key=1, label=int, style=dashed];
d200 -> d210  [color=darkseagreen4, key=1, label="out CommonMark.Syntax.ListData", style=dashed];
d179 -> d179  [color=darkseagreen4, key=1, label=int, style=dashed];
d179 -> d209  [color=darkseagreen4, key=1, label=int, style=dashed];
d175 -> d210  [color=darkseagreen4, key=1, label="out CommonMark.Syntax.ListData", style=dashed];
d182 -> d210  [color=darkseagreen4, key=1, label="out CommonMark.Syntax.ListData", style=dashed];
d21 -> d24  [color=darkseagreen4, key=1, label=e, style=dashed];
d1 -> d17  [color=darkseagreen4, key=1, label=e, style=dashed];
d155 -> d161  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
d155 -> d160  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
d155 -> d166  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>", style=dashed];
d164 -> d166  [color=darkseagreen4, key=1, label=child, style=dashed];
m0_101 -> m0_111  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_101 -> m0_114  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_104 -> m0_107  [color=darkseagreen4, key=1, label=c1, style=dashed];
m0_104 -> m0_113  [color=darkseagreen4, key=1, label=c1, style=dashed];
m0_110 -> m0_114  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_110 -> m0_116  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_108 -> m0_113  [color=darkseagreen4, key=1, label=c1, style=dashed];
m0_109 -> m0_113  [color=darkseagreen4, key=1, label=nextEscaped, style=dashed];
m0_116 -> m0_116  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_239 -> m0_243  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_239 -> m0_245  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_239 -> m0_250  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_239 -> m0_269  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_239 -> m0_280  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_239 -> m0_294  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_240 -> m0_243  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
m0_240 -> m0_254  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
m0_240 -> m0_273  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
m0_240 -> m0_287  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
m0_253 -> m0_269  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_253 -> m0_271  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_255 -> m0_260  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_255 -> m0_264  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_255 -> m0_268  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_272 -> m0_280  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_272 -> m0_282  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_274 -> m0_279  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_286 -> m0_294  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_286 -> m0_296  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_288 -> m0_292  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_293 -> m0_298  [color=darkseagreen4, key=1, label="out string", style=dashed];
m0_241 -> m0_298  [color=darkseagreen4, key=1, label="out string", style=dashed];
m0_242 -> m0_298  [color=darkseagreen4, key=1, label="out int", style=dashed];
m0_259 -> m0_298  [color=darkseagreen4, key=1, label="out int", style=dashed];
m0_263 -> m0_298  [color=darkseagreen4, key=1, label="out int", style=dashed];
m0_267 -> m0_298  [color=darkseagreen4, key=1, label="out int", style=dashed];
m0_278 -> m0_298  [color=darkseagreen4, key=1, label="out int", style=dashed];
m0_249 -> m0_257  [color=darkseagreen4, key=1, label=counter, style=dashed];
m0_249 -> m0_261  [color=darkseagreen4, key=1, label=counter, style=dashed];
m0_249 -> m0_265  [color=darkseagreen4, key=1, label=counter, style=dashed];
m0_249 -> m0_269  [color=darkseagreen4, key=1, label=counter, style=dashed];
m0_249 -> m0_276  [color=darkseagreen4, key=1, label=counter, style=dashed];
m0_249 -> m0_280  [color=darkseagreen4, key=1, label=counter, style=dashed];
m0_249 -> m0_290  [color=darkseagreen4, key=1, label=counter, style=dashed];
m0_249 -> m0_294  [color=darkseagreen4, key=1, label=counter, style=dashed];
m0_257 -> m0_257  [color=darkseagreen4, key=1, label=counter, style=dashed];
m0_257 -> m0_269  [color=darkseagreen4, key=1, label=counter, style=dashed];
m0_261 -> m0_261  [color=darkseagreen4, key=1, label=counter, style=dashed];
m0_261 -> m0_269  [color=darkseagreen4, key=1, label=counter, style=dashed];
m0_265 -> m0_265  [color=darkseagreen4, key=1, label=counter, style=dashed];
m0_265 -> m0_269  [color=darkseagreen4, key=1, label=counter, style=dashed];
m0_276 -> m0_276  [color=darkseagreen4, key=1, label=counter, style=dashed];
m0_276 -> m0_280  [color=darkseagreen4, key=1, label=counter, style=dashed];
m0_290 -> m0_290  [color=darkseagreen4, key=1, label=counter, style=dashed];
m0_290 -> m0_294  [color=darkseagreen4, key=1, label=counter, style=dashed];
m0_271 -> m0_271  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_282 -> m0_282  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_296 -> m0_296  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_0 -> m0_6  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_0 -> m0_15  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_0 -> m0_18  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_1 -> m0_6  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_6 -> m0_6  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_6 -> m0_15  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_9 -> m0_11  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_15 -> m0_15  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_15 -> m0_18  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_16 -> m0_19  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_2 -> m0_7  [color=darkseagreen4, key=1, label=schemeLength, style=dashed];
m0_2 -> m0_13  [color=darkseagreen4, key=1, label=schemeLength, style=dashed];
m0_7 -> m0_7  [color=darkseagreen4, key=1, label=schemeLength, style=dashed];
m0_7 -> m0_13  [color=darkseagreen4, key=1, label=schemeLength, style=dashed];
m0_301 -> m0_305  [color=darkseagreen4, key=1, label=s, style=dashed];
m0_302 -> m0_304  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_302 -> m0_305  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_302 -> m0_307  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_307 -> m0_307  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_193 -> m0_202  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_196 -> m0_204  [color=darkseagreen4, key=1, label=fchar, style=dashed];
m0_201 -> m0_213  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_203 -> m0_211  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_199 -> m0_207  [color=darkseagreen4, key=1, label=cnt, style=dashed];
m0_199 -> m0_209  [color=darkseagreen4, key=1, label=cnt, style=dashed];
m0_199 -> m0_212  [color=darkseagreen4, key=1, label=cnt, style=dashed];
m0_199 -> m0_214  [color=darkseagreen4, key=1, label=cnt, style=dashed];
m0_199 -> m0_216  [color=darkseagreen4, key=1, label=cnt, style=dashed];
m0_200 -> m0_205  [color=darkseagreen4, key=1, label=fenceDone, style=dashed];
m0_207 -> m0_207  [color=darkseagreen4, key=1, label=cnt, style=dashed];
m0_207 -> m0_209  [color=darkseagreen4, key=1, label=cnt, style=dashed];
m0_207 -> m0_212  [color=darkseagreen4, key=1, label=cnt, style=dashed];
m0_207 -> m0_214  [color=darkseagreen4, key=1, label=cnt, style=dashed];
m0_207 -> m0_216  [color=darkseagreen4, key=1, label=cnt, style=dashed];
m0_213 -> m0_213  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_174 -> m0_178  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_174 -> m0_191  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_175 -> m0_181  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_175 -> m0_187  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_175 -> m0_189  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_179 -> m0_182  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_179 -> m0_186  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_176 -> m0_186  [color=darkseagreen4, key=1, label=x, style=dashed];
m0_187 -> m0_187  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_187 -> m0_189  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_185 -> m0_189  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_58 -> m0_65  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_58 -> m0_76  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_58 -> m0_90  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_58 -> m0_93  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_58 -> m0_95  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_61 -> m0_65  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_62 -> m0_65  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_64 -> m0_67  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
m0_64 -> m0_70  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
m0_64 -> m0_77  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
m0_64 -> m0_83  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
m0_64 -> m0_94  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
m0_65 -> m0_65  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_65 -> m0_67  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_65 -> m0_83  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_65 -> m0_84  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_65 -> m0_88  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_65 -> m0_90  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_65 -> m0_92  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_65 -> m0_93  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_65 -> m0_94  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_65 -> m0_95  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_69 -> m0_71  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_69 -> m0_73  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_69 -> m0_75  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_69 -> m0_76  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_69 -> m0_77  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_69 -> m0_83  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_69 -> m0_84  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_69 -> m0_88  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_69 -> m0_90  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_69 -> m0_92  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_69 -> m0_93  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_69 -> m0_94  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_69 -> m0_95  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_80 -> m0_83  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_80 -> m0_84  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_80 -> m0_88  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_80 -> m0_90  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_80 -> m0_92  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_80 -> m0_93  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_80 -> m0_94  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_80 -> m0_95  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_63 -> m0_73  [color=darkseagreen4, key=1, label=nextEscaped, style=dashed];
m0_63 -> m0_75  [color=darkseagreen4, key=1, label=nextEscaped, style=dashed];
m0_63 -> m0_84  [color=darkseagreen4, key=1, label=nextEscaped, style=dashed];
m0_63 -> m0_88  [color=darkseagreen4, key=1, label=nextEscaped, style=dashed];
m0_79 -> m0_84  [color=darkseagreen4, key=1, label=nextEscaped, style=dashed];
m0_79 -> m0_88  [color=darkseagreen4, key=1, label=nextEscaped, style=dashed];
m0_82 -> m0_85  [color=darkseagreen4, key=1, label=openParens, style=dashed];
m0_82 -> m0_89  [color=darkseagreen4, key=1, label=openParens, style=dashed];
m0_82 -> m0_93  [color=darkseagreen4, key=1, label=openParens, style=dashed];
m0_82 -> m0_95  [color=darkseagreen4, key=1, label=openParens, style=dashed];
m0_87 -> m0_89  [color=darkseagreen4, key=1, label=openParens, style=dashed];
m0_87 -> m0_93  [color=darkseagreen4, key=1, label=openParens, style=dashed];
m0_87 -> m0_95  [color=darkseagreen4, key=1, label=openParens, style=dashed];
m0_91 -> m0_93  [color=darkseagreen4, key=1, label=openParens, style=dashed];
m0_91 -> m0_95  [color=darkseagreen4, key=1, label=openParens, style=dashed];
m0_130 -> m0_132  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_130 -> m0_134  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_130 -> m0_138  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_130 -> m0_144  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_130 -> m0_149  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_130 -> m0_150  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_130 -> m0_153  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_131 -> m0_141  [color=darkseagreen4, key=1, label="out int", style=dashed];
m0_131 -> m0_145  [color=darkseagreen4, key=1, label="out int", style=dashed];
m0_131 -> m0_155  [color=darkseagreen4, key=1, label="out int", style=dashed];
m0_137 -> m0_144  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_137 -> m0_149  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_137 -> m0_150  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_137 -> m0_151  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_139 -> m0_146  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_139 -> m0_148  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_145 -> m0_145  [color=darkseagreen4, key=1, label="out int", style=dashed];
m0_145 -> m0_155  [color=darkseagreen4, key=1, label="out int", style=dashed];
m0_136 -> m0_143  [color=darkseagreen4, key=1, label=spaceExists, style=dashed];
m0_136 -> m0_150  [color=darkseagreen4, key=1, label=spaceExists, style=dashed];
m0_136 -> m0_152  [color=darkseagreen4, key=1, label=spaceExists, style=dashed];
m0_151 -> m0_151  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_147 -> m0_152  [color=darkseagreen4, key=1, label=spaceExists, style=dashed];
m0_119 -> m0_123  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_119 -> m0_124  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_119 -> m0_125  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_119 -> m0_127  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_122 -> m0_124  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_122 -> m0_125  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_122 -> m0_126  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_126 -> m0_126  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_156 -> m0_164  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_159 -> m0_166  [color=darkseagreen4, key=1, label=c1, style=dashed];
m0_159 -> m0_172  [color=darkseagreen4, key=1, label=c1, style=dashed];
m0_163 -> m0_171  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_165 -> m0_168  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_165 -> m0_169  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_162 -> m0_166  [color=darkseagreen4, key=1, label=fin, style=dashed];
m0_171 -> m0_171  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_218 -> m0_227  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_218 -> m0_234  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_221 -> m0_229  [color=darkseagreen4, key=1, label=c1, style=dashed];
m0_226 -> m0_236  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_228 -> m0_231  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_228 -> m0_233  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_224 -> m0_230  [color=darkseagreen4, key=1, label=cnt, style=dashed];
m0_224 -> m0_234  [color=darkseagreen4, key=1, label=cnt, style=dashed];
m0_225 -> m0_229  [color=darkseagreen4, key=1, label=spaces, style=dashed];
m0_230 -> m0_230  [color=darkseagreen4, key=1, label=cnt, style=dashed];
m0_236 -> m0_236  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_24 -> m0_45  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_24 -> m0_47  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_24 -> m0_50  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_27 -> m0_33  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_27 -> m0_34  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_30 -> m0_32  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_30 -> m0_36  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_30 -> m0_39  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_31 -> m0_36  [color=darkseagreen4, key=1, label=ln, style=dashed];
m0_31 -> m0_39  [color=darkseagreen4, key=1, label=ln, style=dashed];
m0_31 -> m0_45  [color=darkseagreen4, key=1, label=ln, style=dashed];
m0_31 -> m0_51  [color=darkseagreen4, key=1, label=ln, style=dashed];
m0_38 -> m0_39  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_41 -> m0_45  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_45 -> m0_45  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_45 -> m0_49  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_45 -> m0_50  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_45 -> m0_51  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_42 -> m0_50  [color=darkseagreen4, key=1, label=hadDot, style=dashed];
m0_44 -> m0_47  [color=darkseagreen4, key=1, label=domainStart, style=dashed];
}
