digraph  {
m0_128 [cluster="CommonMark.Syntax.StringContent.ToString()", file="BlockMethods.cs", label="Entry CommonMark.Syntax.StringContent.ToString()", span="50-50"];
m0_163 [cluster="CommonMark.Parser.Scanner.scan_hrule(string, int)", file="BlockMethods.cs", label="Entry CommonMark.Parser.Scanner.scan_hrule(string, int)", span="388-388"];
m0_47 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="Entry CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", span="99-99"];
m0_58 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", color=green, community=0, file="BlockMethods.cs", label="b.EndLine = line_number - 1", prediction=0, span="118-118"];
m0_57 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="line_number > b.StartLine", span="116-116"];
m0_60 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="b.Tag", span="125-125"];
m0_65 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", color=green, community=0, file="BlockMethods.cs", label="b.StringContent.IsFirstLineBlank()", prediction=1, span="133-133"];
m0_63 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="b.StringContent.StartsWith('[') && 0 != (pos = InlineMethods.ParseReference(b.StringContent, b.Top.ReferenceMap))", span="130-130"];
m0_66 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="b.Tag = BlockTag.ReferenceDefinition", span="134-134"];
m0_68 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", color=green, community=0, file="BlockMethods.cs", label="b.StringContent.RemoveTrailingBlankLines()", prediction=1, span="139-139"];
m0_67 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="BlockTag.IndentedCode", span="138-138"];
m0_84 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", color=green, community=0, file="BlockMethods.cs", label="item = item.NextSibling", prediction=3, span="177-177"];
m0_74 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="item = b.FirstChild", span="150-150"];
m0_83 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="!(b.ListData.IsTight)", span="173-173"];
m0_75 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="item != null", span="152-152"];
m0_48 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="int firstlinelen", span="101-101"];
m0_52 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="b == null", span="106-106"];
m0_54 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="!b.IsOpen", span="109-109"];
m0_56 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="b.IsOpen = false", span="115-115"];
m0_59 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="b.EndLine = line_number", span="122-122"];
m0_64 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="b.StringContent.TrimStart(pos)", span="131-131"];
m0_70 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="firstlinelen = b.StringContent.IndexOf('\n') + 1", span="144-144"];
m0_71 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="b.FencedCodeData.Info = InlineMethods.Unescape(b.StringContent.TakeFromStart(firstlinelen, true).Trim())", span="145-145"];
m0_73 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="b.ListData.IsTight = true", span="149-149"];
m0_77 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="b.ListData.IsTight = false", span="157-157"];
m0_81 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="b.ListData.IsTight = false", span="168-168"];
m0_61 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="BlockTag.Paragraph", span="128-128"];
m0_69 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="BlockTag.FencedCode", span="142-142"];
m0_72 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="BlockTag.List", span="148-148"];
m0_62 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="pos = 0", span="129-129"];
m0_53 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="throw new ArgumentNullException(''b'');", span="107-107"];
m0_55 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="return;", span="112-112"];
m0_76 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="item.IsLastLineBlank && item.NextSibling != null", span="155-155"];
m0_78 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="subitem = item.FirstChild", span="162-162"];
m0_80 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="ends_with_blank_line(subitem) &&\r\n                                (item.NextSibling != null || subitem.NextSibling != null)", span="165-166"];
m0_79 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="subitem != null", span="163-163"];
m0_49 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="int pos", span="102-102"];
m0_51 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="Block subitem", span="104-104"];
m0_82 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="subitem = subitem.NextSibling", span="171-171"];
m0_50 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="Block item", span="103-103"];
m0_85 [cluster="CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="Exit CommonMark.Parser.BlockMethods.finalize(CommonMark.Syntax.Block, int)", span="99-99"];
m0_25 [cluster="string.Format(System.IFormatProvider, string, object, object)", file="BlockMethods.cs", label="Entry string.Format(System.IFormatProvider, string, object, object)", span="0-0"];
m0_338 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int)", file="BlockMethods.cs", label="Entry CommonMark.Parser.Scanner.scan_open_code_fence(string, int)", span="428-428"];
m0_26 [cluster="CommonMark.Syntax.StringContent.StringContent()", file="BlockMethods.cs", label="Entry CommonMark.Syntax.StringContent.StringContent()", span="10-10"];
m0_90 [cluster="CommonMark.Syntax.StringContent.IsFirstLineBlank()", file="BlockMethods.cs", label="Entry CommonMark.Syntax.StringContent.IsFirstLineBlank()", span="194-194"];
m0_164 [cluster="CommonMark.Syntax.ListData.ListData()", file="BlockMethods.cs", label="Entry CommonMark.Syntax.ListData.ListData()", span="6-6"];
m0_14 [cluster="CommonMark.Parser.BlockMethods.add_line(CommonMark.Syntax.Block, string, int, int)", file="BlockMethods.cs", label="Entry CommonMark.Parser.BlockMethods.add_line(CommonMark.Syntax.Block, string, int, int)", span="43-43"];
m0_18 [cluster="CommonMark.Parser.BlockMethods.add_line(CommonMark.Syntax.Block, string, int, int)", color=green, community=0, file="BlockMethods.cs", label="var curSC = block.StringContent", prediction=4, span="50-50"];
m0_17 [cluster="CommonMark.Parser.BlockMethods.add_line(CommonMark.Syntax.Block, string, int, int)", file="BlockMethods.cs", label="var len = length == -1 ? ln.Length - offset : length", span="48-48"];
m0_19 [cluster="CommonMark.Parser.BlockMethods.add_line(CommonMark.Syntax.Block, string, int, int)", file="BlockMethods.cs", label="curSC == null", span="51-51"];
m0_15 [cluster="CommonMark.Parser.BlockMethods.add_line(CommonMark.Syntax.Block, string, int, int)", file="BlockMethods.cs", label="!block.IsOpen", span="45-45"];
m0_16 [cluster="CommonMark.Parser.BlockMethods.add_line(CommonMark.Syntax.Block, string, int, int)", file="BlockMethods.cs", label="throw new CommonMarkException(string.Format(System.Globalization.CultureInfo.InvariantCulture, ''Attempted to add line '{0}' to closed container ({1}).'', ln, block.Tag));", span="46-46"];
m0_20 [cluster="CommonMark.Parser.BlockMethods.add_line(CommonMark.Syntax.Block, string, int, int)", file="BlockMethods.cs", label="block.StringContent = curSC = new StringContent()", span="52-52"];
m0_22 [cluster="CommonMark.Parser.BlockMethods.add_line(CommonMark.Syntax.Block, string, int, int)", file="BlockMethods.cs", label="block.StringContent.Append(ln, offset, len)", span="55-55"];
m0_21 [cluster="CommonMark.Parser.BlockMethods.add_line(CommonMark.Syntax.Block, string, int, int)", file="BlockMethods.cs", label="len > 0", span="54-54"];
m0_23 [cluster="CommonMark.Parser.BlockMethods.add_line(CommonMark.Syntax.Block, string, int, int)", file="BlockMethods.cs", label="Exit CommonMark.Parser.BlockMethods.add_line(CommonMark.Syntax.Block, string, int, int)", span="43-43"];
m0_0 [cluster="CommonMark.Parser.BlockMethods.make_document()", file="BlockMethods.cs", label="Entry CommonMark.Parser.BlockMethods.make_document()", span="12-12"];
m0_1 [cluster="CommonMark.Parser.BlockMethods.make_document()", file="BlockMethods.cs", label="Block e = new Block(BlockTag.Document, 1, 1)", span="14-14"];
m0_2 [cluster="CommonMark.Parser.BlockMethods.make_document()", file="BlockMethods.cs", label="e.ReferenceMap = new Dictionary<string, Reference>()", span="15-15"];
m0_3 [cluster="CommonMark.Parser.BlockMethods.make_document()", file="BlockMethods.cs", label="e.Top = e", span="16-16"];
m0_4 [cluster="CommonMark.Parser.BlockMethods.make_document()", file="BlockMethods.cs", label="return e;", span="17-17"];
m0_5 [cluster="CommonMark.Parser.BlockMethods.make_document()", file="BlockMethods.cs", label="Exit CommonMark.Parser.BlockMethods.make_document()", span="12-12"];
m0_127 [cluster="CommonMark.CommonMarkException.CommonMarkException(string, CommonMark.Syntax.Block, System.Exception)", file="BlockMethods.cs", label="Entry CommonMark.CommonMarkException.CommonMarkException(string, CommonMark.Syntax.Block, System.Exception)", span="38-38"];
m0_339 [cluster="CommonMark.Parser.Scanner.scan_html_block_tag(string, int)", file="BlockMethods.cs", label="Entry CommonMark.Parser.Scanner.scan_html_block_tag(string, int)", span="124-124"];
m0_24 [cluster="CommonMark.CommonMarkException.CommonMarkException(string)", file="BlockMethods.cs", label="Entry CommonMark.CommonMarkException.CommonMarkException(string)", span="28-28"];
m0_337 [cluster="CommonMark.Parser.Scanner.scan_atx_header_start(string, int, out int)", file="BlockMethods.cs", label="Entry CommonMark.Parser.Scanner.scan_atx_header_start(string, int, out int)", span="292-292"];
m0_35 [cluster="CommonMark.Parser.BlockMethods.break_out_of_lists(ref CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="Entry CommonMark.Parser.BlockMethods.break_out_of_lists(ref CommonMark.Syntax.Block, int)", span="77-77"];
m0_42 [cluster="CommonMark.Parser.BlockMethods.break_out_of_lists(ref CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="finalize(container, line_number)", span="90-90"];
m0_44 [cluster="CommonMark.Parser.BlockMethods.break_out_of_lists(ref CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="finalize(b, line_number)", span="93-93"];
m0_36 [cluster="CommonMark.Parser.BlockMethods.break_out_of_lists(ref CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="Block container = bptr", span="79-79"];
m0_41 [cluster="CommonMark.Parser.BlockMethods.break_out_of_lists(ref CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="container != null && container != b", span="88-88"];
m0_43 [cluster="CommonMark.Parser.BlockMethods.break_out_of_lists(ref CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="container = container.Parent", span="91-91"];
m0_37 [cluster="CommonMark.Parser.BlockMethods.break_out_of_lists(ref CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="Block b = container.Top", span="80-80"];
m0_39 [cluster="CommonMark.Parser.BlockMethods.break_out_of_lists(ref CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="b = b.LastChild", span="84-84"];
m0_45 [cluster="CommonMark.Parser.BlockMethods.break_out_of_lists(ref CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="bptr = b.Parent", span="94-94"];
m0_40 [cluster="CommonMark.Parser.BlockMethods.break_out_of_lists(ref CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="b != null", span="86-86"];
m0_38 [cluster="CommonMark.Parser.BlockMethods.break_out_of_lists(ref CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="b != null && b.Tag != BlockTag.List", span="82-82"];
m0_46 [cluster="CommonMark.Parser.BlockMethods.break_out_of_lists(ref CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="Exit CommonMark.Parser.BlockMethods.break_out_of_lists(ref CommonMark.Syntax.Block, int)", span="77-77"];
m0_27 [cluster="CommonMark.Syntax.StringContent.Append(string, int, int)", file="BlockMethods.cs", label="Entry CommonMark.Syntax.StringContent.Append(string, int, int)", span="32-32"];
m0_93 [cluster="CommonMark.Syntax.StringContent.TakeFromStart(int, bool)", file="BlockMethods.cs", label="Entry CommonMark.Syntax.StringContent.TakeFromStart(int, bool)", span="151-151"];
m0_6 [cluster="CommonMark.Syntax.Block.Block(CommonMark.Syntax.BlockTag, int, int)", file="BlockMethods.cs", label="Entry CommonMark.Syntax.Block.Block(CommonMark.Syntax.BlockTag, int, int)", span="9-9"];
m0_342 [cluster="CommonMark.Utilities.Warning(string, params object[])", file="BlockMethods.cs", label="Entry CommonMark.Utilities.Warning(string, params object[])", span="17-17"];
m0_130 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="Entry CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", span="256-256"];
m0_131 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="char c", span="258-258"];
m0_134 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="var len = ln.Length", span="261-261"];
m0_135 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="startpos = pos", span="263-263"];
m0_136 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="c = ln[pos]", span="264-264"];
m0_137 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="c == '+' || c == '•' || ((c == '*' || c == '-') && 0 == Scanner.scan_hrule(ln, pos))", span="266-266"];
m0_138 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="pos++", span="268-268"];
m0_139 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="pos == len || (ln[pos] != ' ' && ln[pos] != '\n')", span="269-269"];
m0_146 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="pos < len - 1", span="281-281"];
m0_147 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="c = ln[++pos]", span="283-283"];
m0_150 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="pos >= len - 1 || (c != '.' && c != ')')", span="290-290"];
m0_152 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="pos++", span="293-293"];
m0_153 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="pos == len || ln[pos] != ' '", span="294-294"];
m0_161 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="return (pos - startpos);", span="309-309"];
m0_133 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="data = null", span="260-260"];
m0_140 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="return 0;", span="270-270"];
m0_141 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="data = new ListData()", span="272-272"];
m0_160 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="return 0;", span="306-306"];
m0_151 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="return 0;", span="291-291"];
m0_154 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="return 0;", span="295-295"];
m0_155 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="data = new ListData()", span="297-297"];
m0_132 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="int startpos", span="259-259"];
m0_142 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="data.BulletChar = c", span="273-273"];
m0_144 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="c >= '0' && c <= '9'", span="276-276"];
m0_145 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="int start = c - '0'", span="279-279"];
m0_159 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="data.Delimiter = (c == '.' ? ListDelimiter.Period : ListDelimiter.Parenthesis)", span="301-301"];
m0_149 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="start = start * 10 + (c - '0')", span="285-285"];
m0_148 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="c >= '0' && c <= '9'", span="284-284"];
m0_143 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="data.Start = 1", span="274-274"];
m0_156 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="data.ListType = ListType.Ordered", span="298-298"];
m0_157 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="data.BulletChar = '\0'", span="299-299"];
m0_158 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="data.Start = start", span="300-300"];
m0_162 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="Exit CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", span="256-256"];
m0_89 [cluster="CommonMark.Syntax.StringContent.TrimStart(int)", file="BlockMethods.cs", label="Entry CommonMark.Syntax.StringContent.TrimStart(int)", span="108-108"];
m0_340 [cluster="CommonMark.Parser.Scanner.scan_setext_header_line(string, int)", file="BlockMethods.cs", label="Entry CommonMark.Parser.Scanner.scan_setext_header_line(string, int)", span="346-346"];
m0_171 [cluster="CommonMark.Parser.BlockMethods.lists_match(CommonMark.Syntax.ListData, CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="Entry CommonMark.Parser.BlockMethods.lists_match(CommonMark.Syntax.ListData, CommonMark.Syntax.ListData)", span="321-321"];
m0_172 [cluster="CommonMark.Parser.BlockMethods.lists_match(CommonMark.Syntax.ListData, CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="return (list_data.ListType == item_data.ListType &&\r\n                    list_data.Delimiter == item_data.Delimiter &&\r\n                // list_data.marker_offset == item_data.marker_offset &&\r\n                    list_data.BulletChar == item_data.BulletChar);", span="323-326"];
m0_173 [cluster="CommonMark.Parser.BlockMethods.lists_match(CommonMark.Syntax.ListData, CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="Exit CommonMark.Parser.BlockMethods.lists_match(CommonMark.Syntax.ListData, CommonMark.Syntax.ListData)", span="321-321"];
m0_96 [cluster="CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", file="BlockMethods.cs", label="Entry CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", span="188-188"];
m0_110 [cluster="CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", color=green, community=0, file="BlockMethods.cs", label="parent.LastChild = child", prediction=5, span="216-216"];
m0_99 [cluster="CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", file="BlockMethods.cs", label="parent = parent.Parent", span="195-195"];
m0_102 [cluster="CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", file="BlockMethods.cs", label="Block child = new Block(block_type, start_line, start_column)", span="201-201"];
m0_107 [cluster="CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", file="BlockMethods.cs", label="child.Previous = parent.LastChild", span="208-208"];
m0_109 [cluster="CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", file="BlockMethods.cs", label="child.Previous = null", span="213-213"];
m0_111 [cluster="CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", file="BlockMethods.cs", label="return child;", span="217-217"];
m0_98 [cluster="CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", file="BlockMethods.cs", label="finalize(parent, start_line)", span="194-194"];
m0_97 [cluster="CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", file="BlockMethods.cs", label="!can_contain(parent.Tag, block_type)", span="192-192"];
m0_100 [cluster="CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", file="BlockMethods.cs", label="parent == null", span="198-198"];
m0_103 [cluster="CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", file="BlockMethods.cs", label="child.Parent = parent", span="202-202"];
m0_104 [cluster="CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", file="BlockMethods.cs", label="child.Top = parent.Top", span="203-203"];
m0_105 [cluster="CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", file="BlockMethods.cs", label="parent.LastChild != null", span="205-205"];
m0_106 [cluster="CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", file="BlockMethods.cs", label="parent.LastChild.NextSibling = child", span="207-207"];
m0_108 [cluster="CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", file="BlockMethods.cs", label="parent.FirstChild = child", span="212-212"];
m0_101 [cluster="CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", file="BlockMethods.cs", label="throw new ArgumentNullException(''parent'');", span="199-199"];
m0_112 [cluster="CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", file="BlockMethods.cs", label="Exit CommonMark.Parser.BlockMethods.add_child(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", span="188-188"];
m0_165 [cluster="CommonMark.Parser.BlockMethods.ContainsSingleLine(CommonMark.Syntax.StringContent)", file="BlockMethods.cs", label="Entry CommonMark.Parser.BlockMethods.ContainsSingleLine(CommonMark.Syntax.StringContent)", span="312-312"];
m0_167 [cluster="CommonMark.Parser.BlockMethods.ContainsSingleLine(CommonMark.Syntax.StringContent)", file="BlockMethods.cs", label="return true;", span="315-315"];
m0_166 [cluster="CommonMark.Parser.BlockMethods.ContainsSingleLine(CommonMark.Syntax.StringContent)", file="BlockMethods.cs", label="content == null", span="314-314"];
m0_168 [cluster="CommonMark.Parser.BlockMethods.ContainsSingleLine(CommonMark.Syntax.StringContent)", file="BlockMethods.cs", label="var i = content.IndexOf('\n')", span="316-316"];
m0_169 [cluster="CommonMark.Parser.BlockMethods.ContainsSingleLine(CommonMark.Syntax.StringContent)", file="BlockMethods.cs", label="return (i == -1 || i == content.Length - 1);", span="317-317"];
m0_170 [cluster="CommonMark.Parser.BlockMethods.ContainsSingleLine(CommonMark.Syntax.StringContent)", file="BlockMethods.cs", label="Exit CommonMark.Parser.BlockMethods.ContainsSingleLine(CommonMark.Syntax.StringContent)", span="312-312"];
m0_28 [cluster="CommonMark.Parser.BlockMethods.ends_with_blank_line(CommonMark.Syntax.Block)", file="BlockMethods.cs", label="Entry CommonMark.Parser.BlockMethods.ends_with_blank_line(CommonMark.Syntax.Block)", span="60-60"];
m0_32 [cluster="CommonMark.Parser.BlockMethods.ends_with_blank_line(CommonMark.Syntax.Block)", file="BlockMethods.cs", label="return ends_with_blank_line(block.LastChild);", span="68-68"];
m0_29 [cluster="CommonMark.Parser.BlockMethods.ends_with_blank_line(CommonMark.Syntax.Block)", file="BlockMethods.cs", label="block.IsLastLineBlank", span="62-62"];
m0_31 [cluster="CommonMark.Parser.BlockMethods.ends_with_blank_line(CommonMark.Syntax.Block)", file="BlockMethods.cs", label="(block.Tag == BlockTag.List || block.Tag == BlockTag.ListItem) && block.LastChild != null", span="66-66"];
m0_30 [cluster="CommonMark.Parser.BlockMethods.ends_with_blank_line(CommonMark.Syntax.Block)", file="BlockMethods.cs", label="return true;", span="64-64"];
m0_33 [cluster="CommonMark.Parser.BlockMethods.ends_with_blank_line(CommonMark.Syntax.Block)", file="BlockMethods.cs", label="return false;", span="72-72"];
m0_34 [cluster="CommonMark.Parser.BlockMethods.ends_with_blank_line(CommonMark.Syntax.Block)", file="BlockMethods.cs", label="Exit CommonMark.Parser.BlockMethods.ends_with_blank_line(CommonMark.Syntax.Block)", span="60-60"];
m0_129 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="BlockMethods.cs", label="Entry CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", span="874-874"];
m0_11 [cluster="CommonMark.Parser.BlockMethods.accepts_lines(CommonMark.Syntax.BlockTag)", file="BlockMethods.cs", label="Entry CommonMark.Parser.BlockMethods.accepts_lines(CommonMark.Syntax.BlockTag)", span="34-34"];
m0_12 [cluster="CommonMark.Parser.BlockMethods.accepts_lines(CommonMark.Syntax.BlockTag)", file="BlockMethods.cs", label="return (block_type == BlockTag.Paragraph ||\r\n                    block_type == BlockTag.AtxHeader ||\r\n                    block_type == BlockTag.IndentedCode ||\r\n                    block_type == BlockTag.FencedCode);", span="36-39"];
m0_13 [cluster="CommonMark.Parser.BlockMethods.accepts_lines(CommonMark.Syntax.BlockTag)", file="BlockMethods.cs", label="Exit CommonMark.Parser.BlockMethods.accepts_lines(CommonMark.Syntax.BlockTag)", span="34-34"];
m0_113 [cluster="CommonMark.Parser.BlockMethods.process_inlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="BlockMethods.cs", label="Entry CommonMark.Parser.BlockMethods.process_inlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", span="223-223"];
m0_114 [cluster="CommonMark.Parser.BlockMethods.process_inlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", color=green, community=0, file="BlockMethods.cs", label="cur.Tag", prediction=6, span="225-225"];
m0_115 [cluster="CommonMark.Parser.BlockMethods.process_inlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="BlockMethods.cs", label="BlockTag.Paragraph", span="228-228"];
m0_122 [cluster="CommonMark.Parser.BlockMethods.process_inlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="BlockMethods.cs", label="Block child = cur.FirstChild", span="242-242"];
m0_124 [cluster="CommonMark.Parser.BlockMethods.process_inlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="BlockMethods.cs", label="process_inlines(child, refmap)", span="245-245"];
m0_118 [cluster="CommonMark.Parser.BlockMethods.process_inlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="BlockMethods.cs", label="cur.StringContent == null", span="231-231"];
m0_119 [cluster="CommonMark.Parser.BlockMethods.process_inlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="BlockMethods.cs", label="throw new CommonMarkException(''The block does not contain string content.'', cur);", span="232-232"];
m0_120 [cluster="CommonMark.Parser.BlockMethods.process_inlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="BlockMethods.cs", label="cur.InlineContent = InlineMethods.parse_inlines(cur.StringContent.ToString(), refmap)", span="234-234"];
m0_121 [cluster="CommonMark.Parser.BlockMethods.process_inlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="BlockMethods.cs", label="cur.StringContent = null", span="235-235"];
m0_116 [cluster="CommonMark.Parser.BlockMethods.process_inlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="BlockMethods.cs", label="BlockTag.AtxHeader", span="229-229"];
m0_123 [cluster="CommonMark.Parser.BlockMethods.process_inlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="BlockMethods.cs", label="child != null", span="243-243"];
m0_125 [cluster="CommonMark.Parser.BlockMethods.process_inlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="BlockMethods.cs", label="child = child.NextSibling", span="246-246"];
m0_117 [cluster="CommonMark.Parser.BlockMethods.process_inlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="BlockMethods.cs", label="BlockTag.SETextHeader", span="230-230"];
m0_126 [cluster="CommonMark.Parser.BlockMethods.process_inlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="BlockMethods.cs", label="Exit CommonMark.Parser.BlockMethods.process_inlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", span="223-223"];
m0_341 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int)", file="BlockMethods.cs", label="Entry CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int)", span="476-476"];
m0_95 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="BlockMethods.cs", label="Entry CommonMark.Parser.InlineMethods.Unescape(string)", span="497-497"];
m0_92 [cluster="CommonMark.Syntax.StringContent.IndexOf(char)", file="BlockMethods.cs", label="Entry CommonMark.Syntax.StringContent.IndexOf(char)", span="132-132"];
m0_88 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="BlockMethods.cs", label="Entry CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", span="917-917"];
m0_7 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="BlockMethods.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m0_174 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="Entry CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", span="332-332"];
m0_243 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", color=green, community=0, file="BlockMethods.cs", label="container = add_child(container, BlockTag.IndentedCode, line_number, offset + 1)", prediction=7, span="481-481"];
m0_233 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="break_out_of_lists(ref container, line_number)", span="459-459"];
m0_242 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="offset += CODE_INDENT", span="480-480"];
m0_187 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container = cur.Top", span="348-348"];
m0_189 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container = container.LastChild", span="355-355"];
m0_230 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container = container.Parent", span="449-449"];
m0_287 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="accepts_lines(container.Tag)", span="591-591"];
m0_295 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.IsLastLineBlank = (blank &&\r\n                                          container.Tag != BlockTag.BlockQuote &&\r\n                                          container.Tag != BlockTag.FencedCode &&\r\n                                          !(container.Tag == BlockTag.ListItem &&\r\n                                            container.FirstChild == null &&\r\n                                            container.StartLine == line_number))", span="615-620"];
m0_296 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="Block cont = container", span="622-622"];
m0_300 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="cur != last_matched_container &&\r\n                container == last_matched_container &&\r\n                !blank &&\r\n                cur.Tag == BlockTag.Paragraph &&\r\n                cur.StringContent.Length > 0", span="629-633"];
m0_307 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.Tag == BlockTag.IndentedCode", span="654-654"];
m0_308 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="add_line(container, ln, offset)", span="657-657"];
m0_309 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.Tag == BlockTag.FencedCode", span="660-660"];
m0_310 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="matched = (indent <= 3\r\n                      && curChar == container.FencedCodeData.FenceChar)\r\n                      && (0 != Scanner.scan_close_code_fence(ln, first_nonspace, container.FencedCodeData.FenceLength))\r\n                      ? 1 : 0", span="663-666"];
m0_312 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="finalize(container, line_number)", span="670-670"];
m0_313 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container = container.Parent", span="671-671"];
m0_314 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="add_line(container, ln, offset)", span="675-675"];
m0_315 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.Tag == BlockTag.HtmlBlock", span="679-679"];
m0_316 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="add_line(container, ln, offset)", span="682-682"];
m0_318 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.Tag == BlockTag.AtxHeader", span="691-691"];
m0_326 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="add_line(container, ln, first_nonspace, p - first_nonspace + 1)", span="708-708"];
m0_327 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="finalize(container, line_number)", span="709-709"];
m0_328 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container = container.Parent", span="710-710"];
m0_329 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="accepts_lines(container.Tag)", span="713-713"];
m0_330 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="add_line(container, ln, first_nonspace)", span="716-716"];
m0_331 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.Tag != BlockTag.HorizontalRuler && container.Tag != BlockTag.SETextHeader", span="719-719"];
m0_332 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container = add_child(container, BlockTag.Paragraph, line_number, first_nonspace + 1)", span="723-723"];
m0_334 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="Utilities.Warning(''Line {0} with container type {1} did not match any condition:\n\''{2}\'''', line_number, container.Tag, ln)", span="730-730"];
m0_335 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="curptr = container", span="734-734"];
m0_246 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", color=green, community=0, file="BlockMethods.cs", label="ln[offset] == ' '", prediction=8, span="495-495"];
m0_245 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="offset = first_nonspace + 1", span="493-493"];
m0_247 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", color=green, community=0, file="BlockMethods.cs", label="offset++", prediction=9, span="496-496"];
m0_248 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container = add_child(container, BlockTag.BlockQuote, line_number, offset + 1)", span="498-498"];
m0_234 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", color=green, community=0, file="BlockMethods.cs", label="container.Tag != BlockTag.FencedCode && \r\n                   container.Tag != BlockTag.IndentedCode &&\r\n                   container.Tag != BlockTag.HtmlBlock", prediction=10, span="463-465"];
m0_232 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="blank && container.IsLastLineBlank", span="457-457"];
m0_235 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="first_nonspace = offset", span="468-468"];
m0_288 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="first_nonspace = offset", span="601-601"];
m0_289 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="offset >= ln.Length", span="602-602"];
m0_293 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="indent = first_nonspace - offset", span="608-608"];
m0_301 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="add_line(cur, ln, offset)", span="636-636"];
m0_252 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", color=green, community=0, file="BlockMethods.cs", label="container.HeaderLevel = i", prediction=11, span="506-506"];
m0_249 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="curChar == '#' && 0 != (matched = Scanner.scan_atx_header_start(ln, first_nonspace, out i))", span="501-501"];
m0_251 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container = add_child(container, BlockTag.AtxHeader, line_number, offset + 1)", span="505-505"];
m0_279 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", color=green, community=0, file="BlockMethods.cs", label="data.Padding = matched + i", prediction=12, span="567-567"];
m0_270 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="0 != (matched = ParseListMarker(ln, first_nonspace, out data))", span="546-546"];
m0_275 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="i >= 5 || i < 1 || ln[offset] == '\n'", span="557-557"];
m0_272 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="i = 0", span="551-551"];
m0_274 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="i++", span="554-554"];
m0_280 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="offset += i", span="568-568"];
m0_278 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", color=green, community=0, file="BlockMethods.cs", label="offset += 1", prediction=13, span="562-562"];
m0_271 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="offset = first_nonspace + matched", span="550-550"];
m0_277 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="i > 0", span="560-560"];
m0_281 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="data.MarkerOffset = indent", span="574-574"];
m0_333 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="add_line(container, ln, first_nonspace)", span="724-724"];
m0_176 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="int offset = 0", span="335-335"];
m0_175 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="Block last_matched_container", span="334-334"];
m0_178 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="int i", span="337-337"];
m0_267 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="finalize(container, line_number)", span="541-541"];
m0_303 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="finalize(cur, line_number)", span="646-646"];
m0_254 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container = add_child(container, BlockTag.FencedCode, line_number, first_nonspace + 1)", span="512-512"];
m0_260 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container = add_child(container, BlockTag.HtmlBlock, line_number, first_nonspace + 1)", span="522-522"];
m0_266 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container = add_child(container, BlockTag.HorizontalRuler, line_number, first_nonspace + 1)", span="540-540"];
m0_283 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container = add_child(container, BlockTag.List, line_number, first_nonspace + 1)", span="578-578"];
m0_285 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container = add_child(container, BlockTag.ListItem, line_number, first_nonspace + 1)", span="583-583"];
m0_182 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="Block cur = curptr", span="341-341"];
m0_191 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="(curChar = ln[first_nonspace]) == ' '", span="358-358"];
m0_199 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="ln[offset] == ' '", span="371-371"];
m0_219 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="i > 0 && ln[offset] == ' '", span="418-418"];
m0_236 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="(curChar = ln[first_nonspace]) == ' '", span="469-469"];
m0_253 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="(curChar == '`' || curChar == '~') && 0 != (matched = Scanner.scan_open_code_fence(ln, first_nonspace))", span="509-509"];
m0_259 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="curChar == '<' && Scanner.scan_html_block_tag(ln, first_nonspace)", span="519-519"];
m0_261 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.Tag == BlockTag.Paragraph \r\n                        && 0 != (matched = Scanner.scan_setext_header_line(ln, first_nonspace))\r\n                        && ContainsSingleLine(container.StringContent)", span="526-528"];
m0_264 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="offset = ln.Length - 1", span="533-533"];
m0_265 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="!(container.Tag == BlockTag.Paragraph && !all_matched) && 0 != (matched = Scanner.scan_hrule(ln, first_nonspace))", span="536-536"];
m0_269 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="offset = ln.Length - 1", span="543-543"];
m0_273 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="i <= 5 && ln[offset + i] == ' '", span="552-552"];
m0_291 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="(curChar = ln[first_nonspace]) == ' '", span="605-605"];
m0_319 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="int p = ln.Length - 1", span="694-694"];
m0_320 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="p >= 0 && (ln[p] == ' ' || ln[p] == '\n')", span="697-697"];
m0_322 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="p >= 0 && ln[p] == '#'", span="701-701"];
m0_324 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="p >= 0 && ln[p] == '\\'", span="705-705"];
m0_262 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.Tag = BlockTag.SETextHeader", span="531-531"];
m0_263 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.HeaderLevel = matched", span="532-532"];
m0_282 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.Tag != BlockTag.List || !lists_match(container.ListData, data)", span="576-576"];
m0_204 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="offset += container.ListData.MarkerOffset + container.ListData.Padding", span="385-385"];
m0_210 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="offset += CODE_INDENT", span="397-397"];
m0_220 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="offset++", span="420-420"];
m0_241 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="cur.Tag != BlockTag.Paragraph && !blank", span="478-478"];
m0_198 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="offset = first_nonspace + 1", span="370-370"];
m0_206 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="offset = first_nonspace", span="387-387"];
m0_212 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="offset = first_nonspace", span="399-399"];
m0_200 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="offset++", span="372-372"];
m0_186 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="int indent", span="345-345"];
m0_188 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.LastChild != null && container.LastChild.IsOpen", span="353-353"];
m0_231 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="last_matched_container = container", span="454-454"];
m0_190 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="first_nonspace = offset", span="357-357"];
m0_195 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.Tag", span="364-364"];
m0_203 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="indent >= container.ListData.MarkerOffset + container.ListData.Padding", span="384-384"];
m0_218 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="i = container.FencedCodeData.FenceOffset", span="417-417"];
m0_227 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.IsLastLineBlank = true", span="439-439"];
m0_229 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="!all_matched", span="447-447"];
m0_258 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="offset = first_nonspace + matched", span="516-516"];
m0_268 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container = container.Parent", span="542-542"];
m0_286 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.ListData = data", span="584-584"];
m0_294 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="blank = curChar == '\n'", span="609-609"];
m0_297 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="cont.Parent != null", span="623-623"];
m0_298 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="cont.Parent.IsLastLineBlank = false", span="625-625"];
m0_299 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="cont = cont.Parent", span="626-626"];
m0_302 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="cur != last_matched_container", span="643-643"];
m0_250 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="offset = first_nonspace + matched", span="504-504"];
m0_292 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="first_nonspace++", span="606-606"];
m0_290 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="curChar = '\0'", span="603-603"];
m0_311 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="matched != 0", span="667-667"];
m0_317 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label=blank, span="685-685"];
m0_321 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="p--", span="698-698"];
m0_323 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="p--", span="702-702"];
m0_325 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="p++", span="706-706"];
m0_237 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="first_nonspace++", span="470-470"];
m0_244 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="curChar == '>'", span="490-490"];
m0_183 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="bool blank = false", span="342-342"];
m0_194 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="blank = curChar == '\n'", span="362-362"];
m0_238 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="indent = first_nonspace - offset", span="472-472"];
m0_257 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.FencedCodeData.FenceOffset = first_nonspace - offset", span="515-515"];
m0_305 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="cur == null", span="649-649"];
m0_276 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="data.Padding = matched + 1", span="559-559"];
m0_284 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.ListData = data", span="579-579"];
m0_177 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="int matched = 0", span="336-336"];
m0_193 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="indent = first_nonspace - offset", span="361-361"];
m0_179 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="ListData data", span="338-338"];
m0_304 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="cur = cur.Parent", span="647-647"];
m0_255 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.FencedCodeData.FenceChar = curChar", span="513-513"];
m0_256 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.FencedCodeData.FenceLength = matched", span="514-514"];
m0_240 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="indent >= CODE_INDENT", span="475-475"];
m0_306 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="throw new CommonMarkException(''Cannot finalize container block. Last matched container tag = '' + last_matched_container.Tag);", span="650-650"];
m0_181 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="Block container", span="340-340"];
m0_192 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="first_nonspace++", span="359-359"];
m0_197 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="indent <= 3 && curChar == '>'", span="368-368"];
m0_221 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="i--", span="421-421"];
m0_239 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="blank = curChar == '\n'", span="473-473"];
m0_180 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="bool all_matched = true", span="339-339"];
m0_216 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="all_matched = false", span="410-410"];
m0_224 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="all_matched = false", span="430-430"];
m0_228 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="all_matched = false", span="440-440"];
m0_209 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="indent >= CODE_INDENT", span="396-396"];
m0_205 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label=blank, span="386-386"];
m0_211 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label=blank, span="398-398"];
m0_185 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="char curChar", span="344-344"];
m0_196 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="BlockTag.BlockQuote", span="366-366"];
m0_202 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="BlockTag.ListItem", span="382-382"];
m0_208 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="BlockTag.IndentedCode", span="394-394"];
m0_214 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="BlockTag.AtxHeader", span="406-406"];
m0_217 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="BlockTag.FencedCode", span="414-414"];
m0_222 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="BlockTag.HtmlBlock", span="427-427"];
m0_225 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="BlockTag.Paragraph", span="435-435"];
m0_226 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label=blank, span="437-437"];
m0_223 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label=blank, span="429-429"];
m0_201 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="all_matched = false", span="376-376"];
m0_207 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="all_matched = false", span="389-389"];
m0_213 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="all_matched = false", span="401-401"];
m0_184 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="int first_nonspace", span="343-343"];
m0_215 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="BlockTag.SETextHeader", span="407-407"];
m0_336 [cluster="CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="Exit CommonMark.Parser.BlockMethods.incorporate_line(string, int, ref CommonMark.Syntax.Block)", span="332-332"];
m0_8 [cluster="CommonMark.Parser.BlockMethods.can_contain(CommonMark.Syntax.BlockTag, CommonMark.Syntax.BlockTag)", file="BlockMethods.cs", label="Entry CommonMark.Parser.BlockMethods.can_contain(CommonMark.Syntax.BlockTag, CommonMark.Syntax.BlockTag)", span="23-23"];
m0_9 [cluster="CommonMark.Parser.BlockMethods.can_contain(CommonMark.Syntax.BlockTag, CommonMark.Syntax.BlockTag)", file="BlockMethods.cs", label="return (parent_type == BlockTag.Document ||\r\n                     parent_type == BlockTag.BlockQuote ||\r\n                     parent_type == BlockTag.ListItem ||\r\n                     (parent_type == BlockTag.List && child_type == BlockTag.ListItem));", span="25-28"];
m0_10 [cluster="CommonMark.Parser.BlockMethods.can_contain(CommonMark.Syntax.BlockTag, CommonMark.Syntax.BlockTag)", file="BlockMethods.cs", label="Exit CommonMark.Parser.BlockMethods.can_contain(CommonMark.Syntax.BlockTag, CommonMark.Syntax.BlockTag)", span="23-23"];
m0_94 [cluster="string.Trim()", file="BlockMethods.cs", label="Entry string.Trim()", span="0-0"];
m0_91 [cluster="CommonMark.Syntax.StringContent.RemoveTrailingBlankLines()", file="BlockMethods.cs", label="Entry CommonMark.Syntax.StringContent.RemoveTrailingBlankLines()", span="220-220"];
m0_87 [cluster="CommonMark.Syntax.StringContent.StartsWith(char)", file="BlockMethods.cs", label="Entry CommonMark.Syntax.StringContent.StartsWith(char)", span="97-97"];
m0_86 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="BlockMethods.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m0_47 -> m0_65  [color=green, key=1, label="CommonMark.Syntax.Block", style=dashed];
m0_47 -> m0_68  [color=green, key=1, label="CommonMark.Syntax.Block", style=dashed];
m0_47 -> m0_52  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
m0_47 -> m0_54  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
m0_47 -> m0_57  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
m0_47 -> m0_60  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
m0_47 -> m0_64  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
m0_47 -> m0_83  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
m0_74 -> m0_76  [color=darkseagreen4, key=1, label=item, style=dashed];
m0_74 -> m0_80  [color=darkseagreen4, key=1, label=item, style=dashed];
m0_78 -> m0_80  [color=darkseagreen4, key=1, label=subitem, style=dashed];
m0_14 -> m0_16  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
m0_14 -> m0_22  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
m0_17 -> m0_21  [color=darkseagreen4, key=1, label=len, style=dashed];
m0_17 -> m0_22  [color=darkseagreen4, key=1, label=len, style=dashed];
m0_1 -> m0_4  [color=darkseagreen4, key=1, label=e, style=dashed];
m0_35 -> m0_42  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_35 -> m0_44  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_35 -> m0_46  [color=darkseagreen4, key=1, label="ref CommonMark.Syntax.Block", style=dashed];
m0_36 -> m0_42  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_36 -> m0_41  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_37 -> m0_44  [color=darkseagreen4, key=1, label=b, style=dashed];
m0_37 -> m0_41  [color=darkseagreen4, key=1, label=b, style=dashed];
m0_37 -> m0_40  [color=darkseagreen4, key=1, label=b, style=dashed];
m0_39 -> m0_44  [color=darkseagreen4, key=1, label=b, style=dashed];
m0_39 -> m0_41  [color=darkseagreen4, key=1, label=b, style=dashed];
m0_39 -> m0_40  [color=darkseagreen4, key=1, label=b, style=dashed];
m0_130 -> m0_137  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_130 -> m0_138  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_130 -> m0_139  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_130 -> m0_146  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_130 -> m0_150  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_130 -> m0_152  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_130 -> m0_153  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_130 -> m0_161  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_134 -> m0_139  [color=darkseagreen4, key=1, label=len, style=dashed];
m0_134 -> m0_146  [color=darkseagreen4, key=1, label=len, style=dashed];
m0_134 -> m0_150  [color=darkseagreen4, key=1, label=len, style=dashed];
m0_134 -> m0_153  [color=darkseagreen4, key=1, label=len, style=dashed];
m0_135 -> m0_161  [color=darkseagreen4, key=1, label=startpos, style=dashed];
m0_136 -> m0_144  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_136 -> m0_150  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_138 -> m0_138  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_138 -> m0_161  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_147 -> m0_150  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_147 -> m0_152  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_152 -> m0_152  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_152 -> m0_161  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_133 -> m0_162  [color=darkseagreen4, key=1, label="out CommonMark.Syntax.ListData", style=dashed];
m0_141 -> m0_162  [color=darkseagreen4, key=1, label="out CommonMark.Syntax.ListData", style=dashed];
m0_155 -> m0_162  [color=darkseagreen4, key=1, label="out CommonMark.Syntax.ListData", style=dashed];
m0_96 -> m0_98  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
m0_96 -> m0_100  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
m0_96 -> m0_105  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
m0_99 -> m0_100  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
m0_99 -> m0_105  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
m0_102 -> m0_111  [color=darkseagreen4, key=1, label=child, style=dashed];
m0_165 -> m0_169  [color=darkseagreen4, key=1, label="CommonMark.Syntax.StringContent", style=dashed];
m0_28 -> m0_31  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
m0_28 -> m0_32  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
m0_113 -> m0_118  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
m0_113 -> m0_119  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
m0_113 -> m0_124  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>", style=dashed];
m0_122 -> m0_124  [color=darkseagreen4, key=1, label=child, style=dashed];
m0_174 -> m0_246  [color=green, key=1, label=string, style=dashed];
m0_174 -> m0_199  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_174 -> m0_219  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_174 -> m0_233  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_174 -> m0_259  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_174 -> m0_267  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_174 -> m0_273  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_174 -> m0_275  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_174 -> m0_289  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_174 -> m0_301  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_174 -> m0_303  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_174 -> m0_308  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_174 -> m0_312  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_174 -> m0_314  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_174 -> m0_316  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_174 -> m0_320  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_174 -> m0_322  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_174 -> m0_324  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_174 -> m0_326  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_174 -> m0_327  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_174 -> m0_330  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_174 -> m0_333  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_174 -> m0_334  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_174 -> m0_336  [color=darkseagreen4, key=1, label="ref CommonMark.Syntax.Block", style=dashed];
m0_243 -> m0_300  [color=green, key=1, label=container, style=dashed];
m0_243 -> m0_307  [color=green, key=1, label=container, style=dashed];
m0_243 -> m0_308  [color=green, key=1, label=container, style=dashed];
m0_243 -> m0_309  [color=green, key=1, label=container, style=dashed];
m0_243 -> m0_312  [color=green, key=1, label=container, style=dashed];
m0_243 -> m0_314  [color=green, key=1, label=container, style=dashed];
m0_243 -> m0_315  [color=green, key=1, label=container, style=dashed];
m0_243 -> m0_316  [color=green, key=1, label=container, style=dashed];
m0_243 -> m0_318  [color=green, key=1, label=container, style=dashed];
m0_243 -> m0_326  [color=green, key=1, label=container, style=dashed];
m0_243 -> m0_327  [color=green, key=1, label=container, style=dashed];
m0_243 -> m0_329  [color=green, key=1, label=container, style=dashed];
m0_243 -> m0_330  [color=green, key=1, label=container, style=dashed];
m0_243 -> m0_331  [color=green, key=1, label=container, style=dashed];
m0_243 -> m0_334  [color=green, key=1, label=container, style=dashed];
m0_233 -> m0_233  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_233 -> m0_282  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_233 -> m0_287  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_233 -> m0_300  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_233 -> m0_307  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_233 -> m0_308  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_233 -> m0_309  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_233 -> m0_312  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_233 -> m0_314  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_233 -> m0_315  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_233 -> m0_316  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_233 -> m0_318  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_233 -> m0_326  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_233 -> m0_327  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_233 -> m0_329  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_233 -> m0_330  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_233 -> m0_331  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_233 -> m0_334  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_242 -> m0_289  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_242 -> m0_301  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_242 -> m0_308  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_242 -> m0_314  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_242 -> m0_316  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_187 -> m0_234  [color=green, key=1, label=container, style=dashed];
m0_187 -> m0_233  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_187 -> m0_232  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_187 -> m0_282  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_187 -> m0_287  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_187 -> m0_300  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_187 -> m0_307  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_187 -> m0_308  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_187 -> m0_309  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_187 -> m0_312  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_187 -> m0_314  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_187 -> m0_315  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_187 -> m0_316  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_187 -> m0_318  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_187 -> m0_326  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_187 -> m0_327  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_187 -> m0_329  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_187 -> m0_330  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_187 -> m0_331  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_187 -> m0_334  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_189 -> m0_234  [color=green, key=1, label=container, style=dashed];
m0_189 -> m0_233  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_189 -> m0_195  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_189 -> m0_203  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_189 -> m0_232  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_189 -> m0_282  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_189 -> m0_287  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_189 -> m0_300  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_189 -> m0_307  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_189 -> m0_308  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_189 -> m0_309  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_189 -> m0_312  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_189 -> m0_314  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_189 -> m0_315  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_189 -> m0_316  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_189 -> m0_318  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_189 -> m0_326  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_189 -> m0_327  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_189 -> m0_329  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_189 -> m0_330  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_189 -> m0_331  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_189 -> m0_334  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_230 -> m0_234  [color=green, key=1, label=container, style=dashed];
m0_230 -> m0_233  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_230 -> m0_232  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_230 -> m0_282  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_230 -> m0_287  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_230 -> m0_300  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_230 -> m0_307  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_230 -> m0_308  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_230 -> m0_309  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_230 -> m0_312  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_230 -> m0_314  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_230 -> m0_315  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_230 -> m0_316  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_230 -> m0_318  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_230 -> m0_326  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_230 -> m0_327  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_230 -> m0_329  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_230 -> m0_330  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_230 -> m0_331  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_230 -> m0_334  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_245 -> m0_247  [color=green, key=1, label=offset, style=dashed];
m0_245 -> m0_308  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_245 -> m0_314  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_245 -> m0_316  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_245 -> m0_289  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_245 -> m0_301  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_247 -> m0_247  [color=green, key=1, label=offset, style=dashed];
m0_247 -> m0_289  [color=green, key=1, label=offset, style=dashed];
m0_247 -> m0_301  [color=green, key=1, label=offset, style=dashed];
m0_247 -> m0_308  [color=green, key=1, label=offset, style=dashed];
m0_247 -> m0_314  [color=green, key=1, label=offset, style=dashed];
m0_247 -> m0_316  [color=green, key=1, label=offset, style=dashed];
m0_248 -> m0_300  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_248 -> m0_307  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_248 -> m0_308  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_248 -> m0_309  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_248 -> m0_312  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_248 -> m0_314  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_248 -> m0_315  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_248 -> m0_316  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_248 -> m0_318  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_248 -> m0_326  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_248 -> m0_327  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_248 -> m0_329  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_248 -> m0_330  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_248 -> m0_331  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_248 -> m0_334  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_235 -> m0_237  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
m0_235 -> m0_259  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
m0_288 -> m0_326  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
m0_288 -> m0_330  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
m0_288 -> m0_292  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
m0_288 -> m0_333  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
m0_251 -> m0_287  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_251 -> m0_300  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_251 -> m0_307  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_251 -> m0_308  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_251 -> m0_309  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_251 -> m0_312  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_251 -> m0_314  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_251 -> m0_315  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_251 -> m0_316  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_251 -> m0_318  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_251 -> m0_326  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_251 -> m0_327  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_251 -> m0_329  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_251 -> m0_330  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_251 -> m0_331  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_251 -> m0_334  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_270 -> m0_282  [color=darkseagreen4, key=1, label=data, style=dashed];
m0_272 -> m0_275  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_272 -> m0_274  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_272 -> m0_277  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_274 -> m0_275  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_274 -> m0_274  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_274 -> m0_277  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_280 -> m0_308  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_280 -> m0_314  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_280 -> m0_316  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_280 -> m0_289  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_280 -> m0_301  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_278 -> m0_289  [color=green, key=1, label=offset, style=dashed];
m0_278 -> m0_301  [color=green, key=1, label=offset, style=dashed];
m0_278 -> m0_308  [color=green, key=1, label=offset, style=dashed];
m0_278 -> m0_314  [color=green, key=1, label=offset, style=dashed];
m0_278 -> m0_316  [color=green, key=1, label=offset, style=dashed];
m0_271 -> m0_308  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_271 -> m0_314  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_271 -> m0_316  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_271 -> m0_289  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_271 -> m0_301  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_271 -> m0_275  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_271 -> m0_273  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_176 -> m0_308  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_176 -> m0_314  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_176 -> m0_316  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_176 -> m0_289  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_176 -> m0_301  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_176 -> m0_219  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_176 -> m0_220  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_254 -> m0_287  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_254 -> m0_300  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_254 -> m0_307  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_254 -> m0_308  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_254 -> m0_309  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_254 -> m0_312  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_254 -> m0_314  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_254 -> m0_315  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_254 -> m0_316  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_254 -> m0_318  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_254 -> m0_326  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_254 -> m0_327  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_254 -> m0_329  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_254 -> m0_330  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_254 -> m0_331  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_254 -> m0_334  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_260 -> m0_300  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_260 -> m0_307  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_260 -> m0_308  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_260 -> m0_309  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_260 -> m0_312  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_260 -> m0_314  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_260 -> m0_315  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_260 -> m0_316  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_260 -> m0_318  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_260 -> m0_326  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_260 -> m0_327  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_260 -> m0_329  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_260 -> m0_330  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_260 -> m0_331  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_260 -> m0_334  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_285 -> m0_287  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_285 -> m0_300  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_285 -> m0_307  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_285 -> m0_308  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_285 -> m0_309  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_285 -> m0_312  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_285 -> m0_314  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_285 -> m0_315  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_285 -> m0_316  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_285 -> m0_318  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_285 -> m0_326  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_285 -> m0_327  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_285 -> m0_329  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_285 -> m0_330  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_285 -> m0_331  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_285 -> m0_334  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_182 -> m0_300  [color=darkseagreen4, key=1, label=cur, style=dashed];
m0_182 -> m0_301  [color=darkseagreen4, key=1, label=cur, style=dashed];
m0_182 -> m0_303  [color=darkseagreen4, key=1, label=cur, style=dashed];
m0_182 -> m0_241  [color=darkseagreen4, key=1, label=cur, style=dashed];
m0_182 -> m0_302  [color=darkseagreen4, key=1, label=cur, style=dashed];
m0_191 -> m0_197  [color=darkseagreen4, key=1, label=curChar, style=dashed];
m0_236 -> m0_244  [color=darkseagreen4, key=1, label=curChar, style=dashed];
m0_236 -> m0_259  [color=darkseagreen4, key=1, label=curChar, style=dashed];
m0_264 -> m0_308  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_264 -> m0_314  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_264 -> m0_316  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_264 -> m0_289  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_264 -> m0_301  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_269 -> m0_308  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_269 -> m0_314  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_269 -> m0_316  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_269 -> m0_289  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_269 -> m0_301  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_319 -> m0_326  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_319 -> m0_321  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_319 -> m0_322  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_319 -> m0_323  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_319 -> m0_324  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_319 -> m0_325  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_204 -> m0_308  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_204 -> m0_314  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_204 -> m0_316  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_204 -> m0_289  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_204 -> m0_301  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_204 -> m0_219  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_204 -> m0_220  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_210 -> m0_308  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_210 -> m0_314  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_210 -> m0_316  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_210 -> m0_289  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_210 -> m0_301  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_210 -> m0_219  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_210 -> m0_220  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_220 -> m0_308  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_220 -> m0_314  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_220 -> m0_316  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_220 -> m0_289  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_220 -> m0_301  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_220 -> m0_220  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_198 -> m0_308  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_198 -> m0_314  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_198 -> m0_316  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_198 -> m0_289  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_198 -> m0_301  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_198 -> m0_219  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_198 -> m0_220  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_198 -> m0_200  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_206 -> m0_308  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_206 -> m0_314  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_206 -> m0_316  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_206 -> m0_289  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_206 -> m0_301  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_206 -> m0_219  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_206 -> m0_220  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_212 -> m0_308  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_212 -> m0_314  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_212 -> m0_316  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_212 -> m0_289  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_212 -> m0_301  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_212 -> m0_219  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_212 -> m0_220  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_200 -> m0_308  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_200 -> m0_314  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_200 -> m0_316  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_200 -> m0_289  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_200 -> m0_301  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_200 -> m0_219  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_200 -> m0_220  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_200 -> m0_200  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_231 -> m0_300  [color=darkseagreen4, key=1, label=last_matched_container, style=dashed];
m0_231 -> m0_302  [color=darkseagreen4, key=1, label=last_matched_container, style=dashed];
m0_190 -> m0_192  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
m0_218 -> m0_221  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_258 -> m0_308  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_258 -> m0_314  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_258 -> m0_316  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_258 -> m0_289  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_258 -> m0_301  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_268 -> m0_287  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_268 -> m0_300  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_268 -> m0_307  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_268 -> m0_308  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_268 -> m0_309  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_268 -> m0_312  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_268 -> m0_314  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_268 -> m0_315  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_268 -> m0_316  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_268 -> m0_318  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_268 -> m0_326  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_268 -> m0_327  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_268 -> m0_329  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_268 -> m0_330  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_268 -> m0_331  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_268 -> m0_334  [color=darkseagreen4, key=1, label=container, style=dashed];
m0_294 -> m0_300  [color=darkseagreen4, key=1, label=blank, style=dashed];
m0_294 -> m0_317  [color=darkseagreen4, key=1, label=blank, style=dashed];
m0_250 -> m0_308  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_250 -> m0_314  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_250 -> m0_316  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_250 -> m0_289  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_250 -> m0_301  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_292 -> m0_326  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
m0_292 -> m0_330  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
m0_292 -> m0_333  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
m0_292 -> m0_292  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
m0_321 -> m0_326  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_321 -> m0_322  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_321 -> m0_324  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_321 -> m0_321  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_321 -> m0_323  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_321 -> m0_325  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_323 -> m0_326  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_323 -> m0_324  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_323 -> m0_323  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_323 -> m0_325  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_325 -> m0_325  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_237 -> m0_259  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
m0_237 -> m0_237  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
m0_183 -> m0_232  [color=darkseagreen4, key=1, label=blank, style=dashed];
m0_194 -> m0_232  [color=darkseagreen4, key=1, label=blank, style=dashed];
m0_194 -> m0_205  [color=darkseagreen4, key=1, label=blank, style=dashed];
m0_194 -> m0_211  [color=darkseagreen4, key=1, label=blank, style=dashed];
m0_194 -> m0_223  [color=darkseagreen4, key=1, label=blank, style=dashed];
m0_194 -> m0_226  [color=darkseagreen4, key=1, label=blank, style=dashed];
m0_238 -> m0_240  [color=darkseagreen4, key=1, label=indent, style=dashed];
m0_193 -> m0_203  [color=darkseagreen4, key=1, label=indent, style=dashed];
m0_193 -> m0_197  [color=darkseagreen4, key=1, label=indent, style=dashed];
m0_193 -> m0_209  [color=darkseagreen4, key=1, label=indent, style=dashed];
m0_192 -> m0_192  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
m0_221 -> m0_221  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_239 -> m0_241  [color=darkseagreen4, key=1, label=blank, style=dashed];
}
