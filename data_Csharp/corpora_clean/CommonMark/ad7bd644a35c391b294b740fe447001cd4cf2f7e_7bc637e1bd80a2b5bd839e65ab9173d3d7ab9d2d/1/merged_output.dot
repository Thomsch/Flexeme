digraph  {
n8 [label="CommonMark.Syntax.Block", span=""];
n0 [cluster="CommonMark.Syntax.Block.Block(CommonMark.Syntax.BlockTag, int, int)", label="Entry CommonMark.Syntax.Block.Block(CommonMark.Syntax.BlockTag, int, int)", span="9-9"];
n1 [cluster="CommonMark.Syntax.Block.Block(CommonMark.Syntax.BlockTag, int, int)", label="this.Tag = tag", span="11-11"];
n2 [cluster="CommonMark.Syntax.Block.Block(CommonMark.Syntax.BlockTag, int, int)", label="this.StartLine = startLine", span="12-12"];
n3 [cluster="CommonMark.Syntax.Block.Block(CommonMark.Syntax.BlockTag, int, int)", label="this.EndLine = startLine", span="13-13"];
n4 [cluster="CommonMark.Syntax.Block.Block(CommonMark.Syntax.BlockTag, int, int)", label="this.StartColumn = startColumn", span="14-14"];
n5 [cluster="CommonMark.Syntax.Block.Block(CommonMark.Syntax.BlockTag, int, int)", color=red, community=0, label="6: this.StringContent = string.Empty", span="15-15"];
n6 [cluster="CommonMark.Syntax.Block.Block(CommonMark.Syntax.BlockTag, int, int)", label="this.IsOpen = true", span="16-16"];
n7 [cluster="CommonMark.Syntax.Block.Block(CommonMark.Syntax.BlockTag, int, int)", label="Exit CommonMark.Syntax.Block.Block(CommonMark.Syntax.BlockTag, int, int)", span="9-9"];
m0_6 [cluster="object.MemberwiseClone()", file="BlockMethods.cs", label="Entry object.MemberwiseClone()", span="0-0"];
m0_0 [cluster="CommonMark.CommonMarkSettings.CommonMarkSettings()", file="BlockMethods.cs", label="Entry CommonMark.CommonMarkSettings.CommonMarkSettings()", span="8-8"];
m0_1 [cluster="CommonMark.CommonMarkSettings.CommonMarkSettings()", file="BlockMethods.cs", label="this.OutputFormat = OutputFormat.Html", span="10-10"];
m0_2 [cluster="CommonMark.CommonMarkSettings.CommonMarkSettings()", file="BlockMethods.cs", label="Exit CommonMark.CommonMarkSettings.CommonMarkSettings()", span="8-8"];
m0_3 [cluster="CommonMark.CommonMarkSettings.Clone()", file="BlockMethods.cs", label="Entry CommonMark.CommonMarkSettings.Clone()", span="35-35"];
m0_4 [cluster="CommonMark.CommonMarkSettings.Clone()", file="BlockMethods.cs", label="return (CommonMarkSettings)this.MemberwiseClone();", span="37-37"];
m0_5 [cluster="CommonMark.CommonMarkSettings.Clone()", file="BlockMethods.cs", label="Exit CommonMark.CommonMarkSettings.Clone()", span="35-35"];
m0_7 [file="BlockMethods.cs", label="CommonMark.CommonMarkSettings", span=""];
m2_0 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchWhitespaces(string, ref char, ref int, int)", file="ScannerCharacterMatcher.cs", label="Entry CommonMark.Parser.ScannerCharacterMatcher.MatchWhitespaces(string, ref char, ref int, int)", span="17-17"];
m2_1 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchWhitespaces(string, ref char, ref int, int)", file="ScannerCharacterMatcher.cs", label="var matched = false", span="19-19"];
m2_2 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchWhitespaces(string, ref char, ref int, int)", file="ScannerCharacterMatcher.cs", label="char.IsWhiteSpace(currentCharacter) && currentPosition < lastPosition", span="20-20"];
m2_3 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchWhitespaces(string, ref char, ref int, int)", file="ScannerCharacterMatcher.cs", label="currentCharacter = data[++currentPosition]", span="22-22"];
m2_5 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchWhitespaces(string, ref char, ref int, int)", file="ScannerCharacterMatcher.cs", label="return matched;", span="25-25"];
m2_4 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchWhitespaces(string, ref char, ref int, int)", file="ScannerCharacterMatcher.cs", label="matched = true", span="23-23"];
m2_6 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchWhitespaces(string, ref char, ref int, int)", file="ScannerCharacterMatcher.cs", label="Exit CommonMark.Parser.ScannerCharacterMatcher.MatchWhitespaces(string, ref char, ref int, int)", span="17-17"];
m2_50 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAnythingExceptWhitespaces(string, ref char, ref int, int, char, char, char, char, char, char)", file="ScannerCharacterMatcher.cs", label="Entry CommonMark.Parser.ScannerCharacterMatcher.MatchAnythingExceptWhitespaces(string, ref char, ref int, int, char, char, char, char, char, char)", span="145-145"];
m2_51 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAnythingExceptWhitespaces(string, ref char, ref int, int, char, char, char, char, char, char)", file="ScannerCharacterMatcher.cs", label="var matched = false", span="148-148"];
m2_52 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAnythingExceptWhitespaces(string, ref char, ref int, int, char, char, char, char, char, char)", file="ScannerCharacterMatcher.cs", label="currentCharacter != invalid1\r\n                && currentCharacter != invalid2\r\n                && currentCharacter != invalid3\r\n                && currentCharacter != invalid4\r\n                && currentCharacter != invalid5\r\n                && currentCharacter != invalid6\r\n                && !char.IsWhiteSpace(currentCharacter)\r\n                && currentPosition < lastPosition", span="149-156"];
m2_53 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAnythingExceptWhitespaces(string, ref char, ref int, int, char, char, char, char, char, char)", file="ScannerCharacterMatcher.cs", label="currentCharacter = data[++currentPosition]", span="158-158"];
m2_55 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAnythingExceptWhitespaces(string, ref char, ref int, int, char, char, char, char, char, char)", file="ScannerCharacterMatcher.cs", label="return matched;", span="161-161"];
m2_54 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAnythingExceptWhitespaces(string, ref char, ref int, int, char, char, char, char, char, char)", file="ScannerCharacterMatcher.cs", label="matched = true", span="159-159"];
m2_56 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAnythingExceptWhitespaces(string, ref char, ref int, int, char, char, char, char, char, char)", file="ScannerCharacterMatcher.cs", label="Exit CommonMark.Parser.ScannerCharacterMatcher.MatchAnythingExceptWhitespaces(string, ref char, ref int, int, char, char, char, char, char, char)", span="145-145"];
m2_29 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetter(string, ref char, ref int, int, char, char)", file="ScannerCharacterMatcher.cs", label="Entry CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetter(string, ref char, ref int, int, char, char)", span="97-97"];
m2_30 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetter(string, ref char, ref int, int, char, char)", file="ScannerCharacterMatcher.cs", label="var matched = false", span="99-99"];
m2_31 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetter(string, ref char, ref int, int, char, char)", file="ScannerCharacterMatcher.cs", label="(   currentCharacter == valid1 \r\n                    || currentCharacter == valid2\r\n                    || (currentCharacter >= 'a' && currentCharacter <= 'z')\r\n                    || (currentCharacter >= 'A' && currentCharacter <= 'Z')\r\n                    || (currentCharacter >= '0' && currentCharacter <= '9'))\r\n                  && currentPosition < lastPosition", span="100-105"];
m2_32 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetter(string, ref char, ref int, int, char, char)", file="ScannerCharacterMatcher.cs", label="currentCharacter = data[++currentPosition]", span="107-107"];
m2_34 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetter(string, ref char, ref int, int, char, char)", file="ScannerCharacterMatcher.cs", label="return matched;", span="110-110"];
m2_33 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetter(string, ref char, ref int, int, char, char)", file="ScannerCharacterMatcher.cs", label="matched = true", span="108-108"];
m2_35 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetter(string, ref char, ref int, int, char, char)", file="ScannerCharacterMatcher.cs", label="Exit CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetter(string, ref char, ref int, int, char, char)", span="97-97"];
m2_7 [cluster="char.IsWhiteSpace(char)", file="ScannerCharacterMatcher.cs", label="Entry char.IsWhiteSpace(char)", span="0-0"];
m2_43 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAnythingExcept(string, ref char, ref int, int, char, char)", file="ScannerCharacterMatcher.cs", label="Entry CommonMark.Parser.ScannerCharacterMatcher.MatchAnythingExcept(string, ref char, ref int, int, char, char)", span="130-130"];
m2_44 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAnythingExcept(string, ref char, ref int, int, char, char)", file="ScannerCharacterMatcher.cs", label="var matched = false", span="132-132"];
m2_45 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAnythingExcept(string, ref char, ref int, int, char, char)", file="ScannerCharacterMatcher.cs", label="currentCharacter != invalid1 && currentCharacter != invalid2 \r\n                && currentPosition < lastPosition", span="133-134"];
m2_46 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAnythingExcept(string, ref char, ref int, int, char, char)", file="ScannerCharacterMatcher.cs", label="currentCharacter = data[++currentPosition]", span="136-136"];
m2_48 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAnythingExcept(string, ref char, ref int, int, char, char)", file="ScannerCharacterMatcher.cs", label="return matched;", span="139-139"];
m2_47 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAnythingExcept(string, ref char, ref int, int, char, char)", file="ScannerCharacterMatcher.cs", label="matched = true", span="137-137"];
m2_49 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAnythingExcept(string, ref char, ref int, int, char, char)", file="ScannerCharacterMatcher.cs", label="Exit CommonMark.Parser.ScannerCharacterMatcher.MatchAnythingExcept(string, ref char, ref int, int, char, char)", span="130-130"];
m2_15 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetterOrDigit(string, ref char, ref int, int)", file="ScannerCharacterMatcher.cs", label="Entry CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetterOrDigit(string, ref char, ref int, int)", span="53-53"];
m2_16 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetterOrDigit(string, ref char, ref int, int)", file="ScannerCharacterMatcher.cs", label="var matched = false", span="55-55"];
m2_17 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetterOrDigit(string, ref char, ref int, int)", file="ScannerCharacterMatcher.cs", label="(    (currentCharacter >= 'a' && currentCharacter <= 'z') \r\n                    || (currentCharacter >= 'A' && currentCharacter <= 'Z') \r\n                    || (currentCharacter >= '0' && currentCharacter <= '9'))\r\n                  && currentPosition < lastPosition", span="56-59"];
m2_18 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetterOrDigit(string, ref char, ref int, int)", file="ScannerCharacterMatcher.cs", label="currentCharacter = data[++currentPosition]", span="61-61"];
m2_20 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetterOrDigit(string, ref char, ref int, int)", file="ScannerCharacterMatcher.cs", label="return matched;", span="64-64"];
m2_19 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetterOrDigit(string, ref char, ref int, int)", file="ScannerCharacterMatcher.cs", label="matched = true", span="62-62"];
m2_21 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetterOrDigit(string, ref char, ref int, int)", file="ScannerCharacterMatcher.cs", label="Exit CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetterOrDigit(string, ref char, ref int, int)", span="53-53"];
m2_8 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetter(string, ref char, ref int, int)", file="ScannerCharacterMatcher.cs", label="Entry CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetter(string, ref char, ref int, int)", span="34-34"];
m2_9 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetter(string, ref char, ref int, int)", file="ScannerCharacterMatcher.cs", label="var matched = false", span="36-36"];
m2_10 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetter(string, ref char, ref int, int)", file="ScannerCharacterMatcher.cs", label="((currentCharacter >= 'a' && currentCharacter <= 'z')\r\n                    || (currentCharacter >= 'A' && currentCharacter <= 'Z'))\r\n                  && currentPosition < lastPosition", span="37-39"];
m2_11 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetter(string, ref char, ref int, int)", file="ScannerCharacterMatcher.cs", label="currentCharacter = data[++currentPosition]", span="41-41"];
m2_13 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetter(string, ref char, ref int, int)", file="ScannerCharacterMatcher.cs", label="return matched;", span="44-44"];
m2_12 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetter(string, ref char, ref int, int)", file="ScannerCharacterMatcher.cs", label="matched = true", span="42-42"];
m2_14 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetter(string, ref char, ref int, int)", file="ScannerCharacterMatcher.cs", label="Exit CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetter(string, ref char, ref int, int)", span="34-34"];
m2_36 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAnythingExcept(string, ref char, ref int, int, char)", file="ScannerCharacterMatcher.cs", label="Entry CommonMark.Parser.ScannerCharacterMatcher.MatchAnythingExcept(string, ref char, ref int, int, char)", span="116-116"];
m2_37 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAnythingExcept(string, ref char, ref int, int, char)", file="ScannerCharacterMatcher.cs", label="var matched = false", span="118-118"];
m2_38 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAnythingExcept(string, ref char, ref int, int, char)", file="ScannerCharacterMatcher.cs", label="currentCharacter != invalid1 && currentPosition < lastPosition", span="119-119"];
m2_39 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAnythingExcept(string, ref char, ref int, int, char)", file="ScannerCharacterMatcher.cs", label="currentCharacter = data[++currentPosition]", span="121-121"];
m2_41 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAnythingExcept(string, ref char, ref int, int, char)", file="ScannerCharacterMatcher.cs", label="return matched;", span="124-124"];
m2_40 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAnythingExcept(string, ref char, ref int, int, char)", file="ScannerCharacterMatcher.cs", label="matched = true", span="122-122"];
m2_42 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAnythingExcept(string, ref char, ref int, int, char)", file="ScannerCharacterMatcher.cs", label="Exit CommonMark.Parser.ScannerCharacterMatcher.MatchAnythingExcept(string, ref char, ref int, int, char)", span="116-116"];
m2_22 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetterOrDigit(string, ref char, ref int, int, char, char, char, char)", file="ScannerCharacterMatcher.cs", label="Entry CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetterOrDigit(string, ref char, ref int, int, char, char, char, char)", span="73-73"];
m2_23 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetterOrDigit(string, ref char, ref int, int, char, char, char, char)", file="ScannerCharacterMatcher.cs", label="var matched = false", span="75-75"];
m2_24 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetterOrDigit(string, ref char, ref int, int, char, char, char, char)", file="ScannerCharacterMatcher.cs", label="(   currentCharacter == valid1\r\n                    || currentCharacter == valid2\r\n                    || currentCharacter == valid3\r\n                    || currentCharacter == valid4\r\n                    || (currentCharacter >= 'a' && currentCharacter <= 'z')\r\n                    || (currentCharacter >= 'A' && currentCharacter <= 'Z')\r\n                    || (currentCharacter >= '0' && currentCharacter <= '9'))\r\n                  && currentPosition < lastPosition", span="76-83"];
m2_25 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetterOrDigit(string, ref char, ref int, int, char, char, char, char)", file="ScannerCharacterMatcher.cs", label="currentCharacter = data[++currentPosition]", span="85-85"];
m2_27 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetterOrDigit(string, ref char, ref int, int, char, char, char, char)", file="ScannerCharacterMatcher.cs", label="return matched;", span="88-88"];
m2_26 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetterOrDigit(string, ref char, ref int, int, char, char, char, char)", file="ScannerCharacterMatcher.cs", label="matched = true", span="86-86"];
m2_28 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetterOrDigit(string, ref char, ref int, int, char, char, char, char)", file="ScannerCharacterMatcher.cs", label="Exit CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetterOrDigit(string, ref char, ref int, int, char, char, char, char)", span="73-73"];
n8 -> n1  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
n8 -> n2  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
n8 -> n3  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
n8 -> n4  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
n8 -> n5  [color=red, key=1, label="CommonMark.Syntax.Block", style=dashed];
n8 -> n6  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n3  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n4  [color=darkseagreen4, key=1, label=int, style=dashed];
n1 -> n2  [key=0, style=solid];
n2 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n4 -> n5  [color=red, key=0, style=solid];
n4 -> n6  [color=green, key=0, style=solid];
n5 -> n6  [color=red, key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n7 -> n0  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_3 -> m0_4  [key=0, style=solid];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_6  [key=2, style=dotted];
m0_5 -> m0_3  [color=blue, key=0, style=bold];
m0_7 -> m0_1  [color=darkseagreen4, key=1, label="CommonMark.CommonMarkSettings", style=dashed];
m0_7 -> m0_4  [color=darkseagreen4, key=1, label="CommonMark.CommonMarkSettings", style=dashed];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [color=darkseagreen4, key=1, label="ref char", style=dashed];
m2_0 -> m2_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_0 -> m2_6  [color=darkseagreen4, key=1, label="ref char", style=dashed];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_5  [color=darkseagreen4, key=1, label=matched, style=dashed];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_5  [key=0, style=solid];
m2_2 -> m2_7  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_3  [color=darkseagreen4, key=1, label="ref int", style=dashed];
m2_3 -> m2_6  [color=darkseagreen4, key=1, label="ref char", style=dashed];
m2_5 -> m2_6  [key=0, style=solid];
m2_4 -> m2_2  [key=0, style=solid];
m2_4 -> m2_5  [color=darkseagreen4, key=1, label=matched, style=dashed];
m2_6 -> m2_0  [color=blue, key=0, style=bold];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_52  [color=darkseagreen4, key=1, label="ref char", style=dashed];
m2_50 -> m2_53  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_50 -> m2_56  [color=darkseagreen4, key=1, label="ref char", style=dashed];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_55  [color=darkseagreen4, key=1, label=matched, style=dashed];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_55  [key=0, style=solid];
m2_52 -> m2_7  [key=2, style=dotted];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_53  [color=darkseagreen4, key=1, label="ref int", style=dashed];
m2_53 -> m2_56  [color=darkseagreen4, key=1, label="ref char", style=dashed];
m2_55 -> m2_56  [key=0, style=solid];
m2_54 -> m2_52  [key=0, style=solid];
m2_54 -> m2_55  [color=darkseagreen4, key=1, label=matched, style=dashed];
m2_56 -> m2_50  [color=blue, key=0, style=bold];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_31  [color=darkseagreen4, key=1, label="ref char", style=dashed];
m2_29 -> m2_32  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_29 -> m2_35  [color=darkseagreen4, key=1, label="ref char", style=dashed];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_34  [color=darkseagreen4, key=1, label=matched, style=dashed];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_34  [key=0, style=solid];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_32  [color=darkseagreen4, key=1, label="ref int", style=dashed];
m2_32 -> m2_35  [color=darkseagreen4, key=1, label="ref char", style=dashed];
m2_34 -> m2_35  [key=0, style=solid];
m2_33 -> m2_31  [key=0, style=solid];
m2_33 -> m2_34  [color=darkseagreen4, key=1, label=matched, style=dashed];
m2_35 -> m2_29  [color=blue, key=0, style=bold];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_45  [color=darkseagreen4, key=1, label="ref char", style=dashed];
m2_43 -> m2_46  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_43 -> m2_49  [color=darkseagreen4, key=1, label="ref char", style=dashed];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_48  [color=darkseagreen4, key=1, label=matched, style=dashed];
m2_45 -> m2_46  [key=0, style=solid];
m2_45 -> m2_48  [key=0, style=solid];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_46  [color=darkseagreen4, key=1, label="ref int", style=dashed];
m2_46 -> m2_49  [color=darkseagreen4, key=1, label="ref char", style=dashed];
m2_48 -> m2_49  [key=0, style=solid];
m2_47 -> m2_45  [key=0, style=solid];
m2_47 -> m2_48  [color=darkseagreen4, key=1, label=matched, style=dashed];
m2_49 -> m2_43  [color=blue, key=0, style=bold];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_17  [color=darkseagreen4, key=1, label="ref char", style=dashed];
m2_15 -> m2_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_15 -> m2_21  [color=darkseagreen4, key=1, label="ref char", style=dashed];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_20  [color=darkseagreen4, key=1, label=matched, style=dashed];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_20  [key=0, style=solid];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_18  [color=darkseagreen4, key=1, label="ref int", style=dashed];
m2_18 -> m2_21  [color=darkseagreen4, key=1, label="ref char", style=dashed];
m2_20 -> m2_21  [key=0, style=solid];
m2_19 -> m2_17  [key=0, style=solid];
m2_19 -> m2_20  [color=darkseagreen4, key=1, label=matched, style=dashed];
m2_21 -> m2_15  [color=blue, key=0, style=bold];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_10  [color=darkseagreen4, key=1, label="ref char", style=dashed];
m2_8 -> m2_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_8 -> m2_14  [color=darkseagreen4, key=1, label="ref char", style=dashed];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_13  [color=darkseagreen4, key=1, label=matched, style=dashed];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_13  [key=0, style=solid];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_11  [color=darkseagreen4, key=1, label="ref int", style=dashed];
m2_11 -> m2_14  [color=darkseagreen4, key=1, label="ref char", style=dashed];
m2_13 -> m2_14  [key=0, style=solid];
m2_12 -> m2_10  [key=0, style=solid];
m2_12 -> m2_13  [color=darkseagreen4, key=1, label=matched, style=dashed];
m2_14 -> m2_8  [color=blue, key=0, style=bold];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_38  [color=darkseagreen4, key=1, label="ref char", style=dashed];
m2_36 -> m2_39  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_36 -> m2_42  [color=darkseagreen4, key=1, label="ref char", style=dashed];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_41  [color=darkseagreen4, key=1, label=matched, style=dashed];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_41  [key=0, style=solid];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_39  [color=darkseagreen4, key=1, label="ref int", style=dashed];
m2_39 -> m2_42  [color=darkseagreen4, key=1, label="ref char", style=dashed];
m2_41 -> m2_42  [key=0, style=solid];
m2_40 -> m2_38  [key=0, style=solid];
m2_40 -> m2_41  [color=darkseagreen4, key=1, label=matched, style=dashed];
m2_42 -> m2_36  [color=blue, key=0, style=bold];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_24  [color=darkseagreen4, key=1, label="ref char", style=dashed];
m2_22 -> m2_25  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_22 -> m2_28  [color=darkseagreen4, key=1, label="ref char", style=dashed];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_27  [color=darkseagreen4, key=1, label=matched, style=dashed];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_27  [key=0, style=solid];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_25  [color=darkseagreen4, key=1, label="ref int", style=dashed];
m2_25 -> m2_28  [color=darkseagreen4, key=1, label="ref char", style=dashed];
m2_27 -> m2_28  [key=0, style=solid];
m2_26 -> m2_24  [key=0, style=solid];
m2_26 -> m2_27  [color=darkseagreen4, key=1, label=matched, style=dashed];
m2_28 -> m2_22  [color=blue, key=0, style=bold];
}
