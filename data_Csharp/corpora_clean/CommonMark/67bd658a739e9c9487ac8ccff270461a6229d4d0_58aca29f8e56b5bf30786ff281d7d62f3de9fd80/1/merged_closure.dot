digraph  {
m0_8 [cluster="CommonMark.Syntax.Block.AsEnumerable()", file="Block.cs", label="return new Enumerable(this);", span="34-34"];
m0_69 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int)", file="Block.cs", label="Entry CommonMark.Parser.Scanner.scan_link_url(string, int)", span="210-210"];
m0_70 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int)", file="Block.cs", label="return MatchRegex(s, pos, link_url1, link_url2);", span="217-217"];
m0_71 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int)", file="Block.cs", label="Exit CommonMark.Parser.Scanner.scan_link_url(string, int)", span="210-210"];
m0_91 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int)", file="Block.cs", label="Entry CommonMark.Parser.Scanner.scan_open_code_fence(string, int)", span="293-293"];
m0_92 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int)", file="Block.cs", label="return MatchRegex(s, pos, open_code_fence1, open_code_fence2);", span="301-301"];
m0_93 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int)", file="Block.cs", label="Exit CommonMark.Parser.Scanner.scan_open_code_fence(string, int)", span="293-293"];
m0_94 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int)", file="Block.cs", label="Entry CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int)", span="307-307"];
m0_95 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int)", file="Block.cs", label="var p = MatchRegex(s, pos, close_code_fence)", span="318-318"];
m0_96 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int)", file="Block.cs", label="p > len", span="319-319"];
m0_97 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int)", file="Block.cs", label="return p;", span="320-320"];
m0_98 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int)", file="Block.cs", label="return 0;", span="322-322"];
m0_99 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int)", file="Block.cs", label="Exit CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int)", span="307-307"];
m0_34 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int)", file="Block.cs", label="Entry CommonMark.Parser.Scanner.scan_autolink_email(string, int)", span="126-126"];
m0_35 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int)", file="Block.cs", label="return MatchRegex(s, pos, autolink_email);", span="136-136"];
m0_36 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int)", file="Block.cs", label="Exit CommonMark.Parser.Scanner.scan_autolink_email(string, int)", span="126-126"];
m0_10 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int)", color=green, community=0, file="Block.cs", label="var checkLen = s.Length - pos", prediction=0, span="94-94"];
m0_0 [cluster="CommonMark.Syntax.Block.Block(CommonMark.Syntax.BlockTag, int, int)", file="Block.cs", label="Entry CommonMark.Syntax.Block.Block(CommonMark.Syntax.BlockTag, int, int)", span="18-18"];
m0_3 [cluster="CommonMark.Syntax.Block.Block(CommonMark.Syntax.BlockTag, int, int)", color=green, community=0, file="Block.cs", label="this.EndLine = startLine", prediction=1, span="22-22"];
m0_2 [cluster="CommonMark.Syntax.Block.Block(CommonMark.Syntax.BlockTag, int, int)", file="Block.cs", label="this.StartLine = startLine", span="21-21"];
m0_4 [cluster="CommonMark.Syntax.Block.Block(CommonMark.Syntax.BlockTag, int, int)", color=green, community=0, file="Block.cs", label="this.StartColumn = startColumn", prediction=2, span="23-23"];
m0_5 [cluster="CommonMark.Syntax.Block.Block(CommonMark.Syntax.BlockTag, int, int)", file="Block.cs", label="this.IsOpen = true", span="24-24"];
m0_1 [cluster="CommonMark.Syntax.Block.Block(CommonMark.Syntax.BlockTag, int, int)", file="Block.cs", label="this.Tag = tag", span="20-20"];
m0_6 [cluster="CommonMark.Syntax.Block.Block(CommonMark.Syntax.BlockTag, int, int)", file="Block.cs", label="Exit CommonMark.Syntax.Block.Block(CommonMark.Syntax.BlockTag, int, int)", span="18-18"];
m0_7 [cluster="CommonMark.Syntax.Block.AsEnumerable()", file="Block.cs", label="Entry CommonMark.Syntax.Block.AsEnumerable()", span="32-32"];
m0_100 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int)", file="Block.cs", label="Entry CommonMark.Parser.Scanner.scan_entity(string, int)", span="329-329"];
m0_101 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int)", file="Block.cs", label="return MatchRegex(s, pos, entity);", span="336-336"];
m0_102 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int)", file="Block.cs", label="Exit CommonMark.Parser.Scanner.scan_entity(string, int)", span="329-329"];
m0_33 [cluster="System.Array.BinarySearch<T>(T[], T)", file="Block.cs", label="Entry System.Array.BinarySearch<T>(T[], T)", span="0-0"];
m0_88 [cluster="CommonMark.Parser.Scanner.scan_hrule(string, int)", file="Block.cs", label="Entry CommonMark.Parser.Scanner.scan_hrule(string, int)", span="285-285"];
m0_89 [cluster="CommonMark.Parser.Scanner.scan_hrule(string, int)", file="Block.cs", label="return MatchRegex(s, pos, hrule1, hrule2, hrule3);", span="287-287"];
m0_90 [cluster="CommonMark.Parser.Scanner.scan_hrule(string, int)", file="Block.cs", label="Exit CommonMark.Parser.Scanner.scan_hrule(string, int)", span="285-285"];
m0_31 [cluster="string.Substring(int, int)", file="Block.cs", label="Entry string.Substring(int, int)", span="0-0"];
m0_9 [cluster="CommonMark.Syntax.Block.AsEnumerable()", file="Block.cs", label="Exit CommonMark.Syntax.Block.AsEnumerable()", span="32-32"];
m0_11 [cluster="CommonMark.Syntax.Block.CreateDocument()", color=green, community=0, file="Block.cs", label="Entry CommonMark.Syntax.Block.CreateDocument()", prediction=3, span="40-40"];
m0_13 [cluster="CommonMark.Syntax.Block.CreateDocument()", color=green, community=0, file="Block.cs", label="e.ReferenceMap = new Dictionary<string, Reference>()", prediction=4, span="43-43"];
m0_14 [cluster="CommonMark.Syntax.Block.CreateDocument()", color=green, community=0, file="Block.cs", label="e.Top = e", prediction=5, span="44-44"];
m0_16 [cluster="CommonMark.Syntax.Block.CreateDocument()", color=green, community=0, file="Block.cs", label="Exit CommonMark.Syntax.Block.CreateDocument()", prediction=4, span="40-40"];
m0_20 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int)", color=green, community=0, file="Block.cs", label="var i = colonpos + 1", prediction=4, span="110-110"];
m0_17 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", color=green, community=0, file="Block.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", prediction=8, span="0-0"];
m0_21 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int)", color=green, community=0, file="Block.cs", label="i < s.Length", prediction=4, span="110-110"];
m0_27 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int)", color=green, community=0, file="Block.cs", label="i++", prediction=4, span="110-110"];
m0_22 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int)", color=green, community=0, file="Block.cs", label="c = s[i]", prediction=11, span="112-112"];
m0_28 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int)", file="Block.cs", label="return 0;", span="120-120"];
m0_23 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int)", color=green, community=0, file="Block.cs", label="c == '>'", prediction=12, span="113-113"];
m0_25 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int)", file="Block.cs", label="c == '<' || c <= 0x20", span="116-116"];
m0_24 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int)", color=green, community=0, file="Block.cs", label="return i - pos + 1;", prediction=4, span="114-114"];
m0_15 [cluster="CommonMark.Syntax.Block.CreateDocument()", color=green, community=0, file="Block.cs", label="return e;", prediction=14, span="45-45"];
m0_19 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int)", color=green, community=0, file="Block.cs", label="char c", prediction=15, span="109-109"];
m0_18 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int)", color=green, community=0, file="Block.cs", label="CommonMark.Syntax.Block", prediction=16, span=""];
m0_26 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int)", file="Block.cs", label="return 0;", span="117-117"];
m0_29 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int)", file="Block.cs", label="Exit CommonMark.Parser.Scanner.scan_autolink_uri(string, int)", span="85-85"];
m0_37 [cluster="CommonMark.Parser.Scanner.scan_html_tag(string, int)", file="Block.cs", label="Entry CommonMark.Parser.Scanner.scan_html_tag(string, int)", span="142-142"];
m0_62 [cluster="CommonMark.Parser.Scanner.scan_html_tag(string, int)", file="Block.cs", label="return MatchRegex(s, pos, htmlTagRegex);", span="187-187"];
m0_38 [cluster="CommonMark.Parser.Scanner.scan_html_tag(string, int)", file="Block.cs", label="pos >= s.Length", span="149-149"];
m0_40 [cluster="CommonMark.Parser.Scanner.scan_html_tag(string, int)", file="Block.cs", label="var firstChar = s[pos]", span="152-152"];
m0_42 [cluster="CommonMark.Parser.Scanner.scan_html_tag(string, int)", file="Block.cs", label="pos + 2 >= s.Length", span="156-156"];
m0_44 [cluster="CommonMark.Parser.Scanner.scan_html_tag(string, int)", file="Block.cs", label="var nextChar = char.ToUpperInvariant(s[pos + 1])", span="159-159"];
m0_48 [cluster="CommonMark.Parser.Scanner.scan_html_tag(string, int)", file="Block.cs", label="var i = pos + 2", span="164-164"];
m0_49 [cluster="CommonMark.Parser.Scanner.scan_html_tag(string, int)", file="Block.cs", label="i < s.Length", span="164-164"];
m0_50 [cluster="CommonMark.Parser.Scanner.scan_html_tag(string, int)", file="Block.cs", label="nextChar = char.ToUpperInvariant(s[i])", span="166-166"];
m0_52 [cluster="CommonMark.Parser.Scanner.scan_html_tag(string, int)", file="Block.cs", label="return i - pos + 1;", span="168-168"];
m0_60 [cluster="CommonMark.Parser.Scanner.scan_html_tag(string, int)", file="Block.cs", label="firstChar != '!' && firstChar != '?' && (firstChar < 'A' || firstChar > 'Z')", span="184-184"];
m0_39 [cluster="CommonMark.Parser.Scanner.scan_html_tag(string, int)", file="Block.cs", label="return 0;", span="150-150"];
m0_43 [cluster="CommonMark.Parser.Scanner.scan_html_tag(string, int)", file="Block.cs", label="return 0;", span="157-157"];
m0_46 [cluster="CommonMark.Parser.Scanner.scan_html_tag(string, int)", file="Block.cs", label="return 0;", span="161-161"];
m0_58 [cluster="CommonMark.Parser.Scanner.scan_html_tag(string, int)", file="Block.cs", label="return 0;", span="180-180"];
m0_56 [cluster="CommonMark.Parser.Scanner.scan_html_tag(string, int)", file="Block.cs", label="return 0;", span="177-177"];
m0_61 [cluster="CommonMark.Parser.Scanner.scan_html_tag(string, int)", file="Block.cs", label="return 0;", span="185-185"];
m0_41 [cluster="CommonMark.Parser.Scanner.scan_html_tag(string, int)", file="Block.cs", label="firstChar == '/'", span="154-154"];
m0_59 [cluster="CommonMark.Parser.Scanner.scan_html_tag(string, int)", file="Block.cs", label="firstChar = char.ToUpperInvariant(firstChar)", span="183-183"];
m0_45 [cluster="CommonMark.Parser.Scanner.scan_html_tag(string, int)", file="Block.cs", label="nextChar < 'A' || nextChar > 'Z'", span="160-160"];
m0_47 [cluster="CommonMark.Parser.Scanner.scan_html_tag(string, int)", file="Block.cs", label="var tagNameEnded = false", span="163-163"];
m0_57 [cluster="CommonMark.Parser.Scanner.scan_html_tag(string, int)", file="Block.cs", label="i++", span="164-164"];
m0_54 [cluster="CommonMark.Parser.Scanner.scan_html_tag(string, int)", file="Block.cs", label="tagNameEnded = true", span="172-172"];
m0_51 [cluster="CommonMark.Parser.Scanner.scan_html_tag(string, int)", file="Block.cs", label="nextChar == '>'", span="167-167"];
m0_53 [cluster="CommonMark.Parser.Scanner.scan_html_tag(string, int)", file="Block.cs", label="char.IsWhiteSpace(nextChar)", span="170-170"];
m0_55 [cluster="CommonMark.Parser.Scanner.scan_html_tag(string, int)", file="Block.cs", label="tagNameEnded || nextChar < 'A' || nextChar > 'Z'", span="176-176"];
m0_63 [cluster="CommonMark.Parser.Scanner.scan_html_tag(string, int)", file="Block.cs", label="Exit CommonMark.Parser.Scanner.scan_html_tag(string, int)", span="142-142"];
m0_66 [cluster="CommonMark.Parser.Scanner.scan_html_block_tag(string, int)", file="Block.cs", label="Entry CommonMark.Parser.Scanner.scan_html_block_tag(string, int)", span="193-193"];
m0_67 [cluster="CommonMark.Parser.Scanner.scan_html_block_tag(string, int)", file="Block.cs", label="return MatchRegex(s, pos, html_block_tag1, html_block_tag2, html_block_tag3);", span="201-201"];
m0_68 [cluster="CommonMark.Parser.Scanner.scan_html_block_tag(string, int)", file="Block.cs", label="Exit CommonMark.Parser.Scanner.scan_html_block_tag(string, int)", span="193-193"];
m0_65 [cluster="char.IsWhiteSpace(char)", file="Block.cs", label="Entry char.IsWhiteSpace(char)", span="0-0"];
m0_32 [cluster="string.ToLowerInvariant()", file="Block.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m0_64 [cluster="char.ToUpperInvariant(char)", file="Block.cs", label="Entry char.ToUpperInvariant(char)", span="0-0"];
m0_81 [cluster="CommonMark.Parser.Scanner.scan_setext_header_line(string, int)", file="Block.cs", label="Entry CommonMark.Parser.Scanner.scan_setext_header_line(string, int)", span="264-264"];
m0_82 [cluster="CommonMark.Parser.Scanner.scan_setext_header_line(string, int)", file="Block.cs", label="MatchRegex(s, pos, setext_header_line1) > 0", span="271-271"];
m0_84 [cluster="CommonMark.Parser.Scanner.scan_setext_header_line(string, int)", file="Block.cs", label="MatchRegex(s, pos, setext_header_line2) > 0", span="274-274"];
m0_83 [cluster="CommonMark.Parser.Scanner.scan_setext_header_line(string, int)", file="Block.cs", label="return 1;", span="272-272"];
m0_85 [cluster="CommonMark.Parser.Scanner.scan_setext_header_line(string, int)", file="Block.cs", label="return 2;", span="275-275"];
m0_86 [cluster="CommonMark.Parser.Scanner.scan_setext_header_line(string, int)", file="Block.cs", label="return 0;", span="277-277"];
m0_87 [cluster="CommonMark.Parser.Scanner.scan_setext_header_line(string, int)", file="Block.cs", label="Exit CommonMark.Parser.Scanner.scan_setext_header_line(string, int)", span="264-264"];
m0_72 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int)", file="Block.cs", label="Entry CommonMark.Parser.Scanner.scan_link_title(string, int)", span="225-225"];
m0_73 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int)", file="Block.cs", label="return MatchRegex(s, pos, link_title1, link_title2, link_title3);", span="233-233"];
m0_74 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int)", file="Block.cs", label="Exit CommonMark.Parser.Scanner.scan_link_title(string, int)", span="225-225"];
m0_30 [cluster="string.IndexOf(char, int, int)", file="Block.cs", label="Entry string.IndexOf(char, int, int)", span="0-0"];
m0_75 [cluster="CommonMark.Parser.Scanner.scan_spacechars(string, int)", file="Block.cs", label="Entry CommonMark.Parser.Scanner.scan_spacechars(string, int)", span="239-239"];
m0_76 [cluster="CommonMark.Parser.Scanner.scan_spacechars(string, int)", file="Block.cs", label="return MatchRegex(s, pos, spacechars);", span="245-245"];
m0_77 [cluster="CommonMark.Parser.Scanner.scan_spacechars(string, int)", file="Block.cs", label="Exit CommonMark.Parser.Scanner.scan_spacechars(string, int)", span="239-239"];
m0_78 [cluster="CommonMark.Parser.Scanner.scan_atx_header_start(string, int)", file="Block.cs", label="Entry CommonMark.Parser.Scanner.scan_atx_header_start(string, int)", span="251-251"];
m0_79 [cluster="CommonMark.Parser.Scanner.scan_atx_header_start(string, int)", file="Block.cs", label="return MatchRegex(s, pos, atx_header_start);", span="257-257"];
m0_80 [cluster="CommonMark.Parser.Scanner.scan_atx_header_start(string, int)", file="Block.cs", label="Exit CommonMark.Parser.Scanner.scan_atx_header_start(string, int)", span="251-251"];
m1_21 [cluster="CommonMark.Parser.BlockMethods.EndsWithBlankLine(CommonMark.Syntax.Block)", file="BlockMethods.cs", label="Entry CommonMark.Parser.BlockMethods.EndsWithBlankLine(CommonMark.Syntax.Block)", span="52-52"];
m1_22 [cluster="CommonMark.Parser.BlockMethods.EndsWithBlankLine(CommonMark.Syntax.Block)", file="BlockMethods.cs", label=true, span="54-54"];
m1_23 [cluster="CommonMark.Parser.BlockMethods.EndsWithBlankLine(CommonMark.Syntax.Block)", file="BlockMethods.cs", label="block.IsLastLineBlank", span="56-56"];
m1_25 [cluster="CommonMark.Parser.BlockMethods.EndsWithBlankLine(CommonMark.Syntax.Block)", file="BlockMethods.cs", label="block.Tag != BlockTag.List && block.Tag != BlockTag.ListItem", span="59-59"];
m1_27 [cluster="CommonMark.Parser.BlockMethods.EndsWithBlankLine(CommonMark.Syntax.Block)", file="BlockMethods.cs", label="block = block.LastChild", span="62-62"];
m1_24 [cluster="CommonMark.Parser.BlockMethods.EndsWithBlankLine(CommonMark.Syntax.Block)", file="BlockMethods.cs", label="return true;", span="57-57"];
m1_26 [cluster="CommonMark.Parser.BlockMethods.EndsWithBlankLine(CommonMark.Syntax.Block)", file="BlockMethods.cs", label="return false;", span="60-60"];
m1_28 [cluster="CommonMark.Parser.BlockMethods.EndsWithBlankLine(CommonMark.Syntax.Block)", file="BlockMethods.cs", label="Exit CommonMark.Parser.BlockMethods.EndsWithBlankLine(CommonMark.Syntax.Block)", span="52-52"];
m1_3 [cluster="CommonMark.Parser.BlockMethods.AcceptsLines(CommonMark.Syntax.BlockTag)", file="BlockMethods.cs", label="Entry CommonMark.Parser.BlockMethods.AcceptsLines(CommonMark.Syntax.BlockTag)", span="25-25"];
m1_4 [cluster="CommonMark.Parser.BlockMethods.AcceptsLines(CommonMark.Syntax.BlockTag)", file="BlockMethods.cs", label="return (block_type == BlockTag.Paragraph ||\r\n                    block_type == BlockTag.AtxHeader ||\r\n                    block_type == BlockTag.IndentedCode ||\r\n                    block_type == BlockTag.FencedCode);", span="27-30"];
m1_5 [cluster="CommonMark.Parser.BlockMethods.AcceptsLines(CommonMark.Syntax.BlockTag)", file="BlockMethods.cs", label="Exit CommonMark.Parser.BlockMethods.AcceptsLines(CommonMark.Syntax.BlockTag)", span="25-25"];
m1_82 [cluster="string.Trim()", file="BlockMethods.cs", label="Entry string.Trim()", span="0-0"];
m1_339 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int)", file="BlockMethods.cs", label="Entry CommonMark.Parser.Scanner.scan_open_code_fence(string, int)", span="428-428"];
m1_343 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int)", file="BlockMethods.cs", label="Entry CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int)", span="476-476"];
m1_340 [cluster="CommonMark.Syntax.FencedCodeData.FencedCodeData()", file="BlockMethods.cs", label="Entry CommonMark.Syntax.FencedCodeData.FencedCodeData()", span="9-9"];
m1_124 [cluster="System.Collections.Generic.Stack<T>.Pop()", file="BlockMethods.cs", label="Entry System.Collections.Generic.Stack<T>.Pop()", span="0-0"];
m1_80 [cluster="CommonMark.Syntax.StringContent.IndexOf(char)", file="BlockMethods.cs", label="Entry CommonMark.Syntax.StringContent.IndexOf(char)", span="163-163"];
m1_79 [cluster="CommonMark.Syntax.StringContent.RemoveTrailingBlankLines()", file="BlockMethods.cs", label="Entry CommonMark.Syntax.StringContent.RemoveTrailingBlankLines()", span="263-263"];
m1_83 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", file="BlockMethods.cs", label="Entry CommonMark.Parser.InlineMethods.Unescape(string)", span="744-744"];
m1_20 [cluster="CommonMark.Syntax.StringContent.Append(string, int, int)", file="BlockMethods.cs", label="Entry CommonMark.Syntax.StringContent.Append(string, int, int)", span="38-38"];
m1_77 [cluster="CommonMark.Syntax.StringContent.TrimStart(int)", file="BlockMethods.cs", label="Entry CommonMark.Syntax.StringContent.TrimStart(int)", span="135-135"];
m1_344 [cluster="CommonMark.Utilities.Warning(string, params object[])", file="BlockMethods.cs", label="Entry CommonMark.Utilities.Warning(string, params object[])", span="17-17"];
m1_169 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="Entry CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", span="327-327"];
m1_170 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="Block last_matched_container", span="329-329"];
m1_177 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="Block cur = curptr", span="336-336"];
m1_186 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="(curChar = ln[first_nonspace]) == ' '", span="353-353"];
m1_194 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="ln[offset] == ' '", span="366-366"];
m1_220 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="i > 0 && ln[offset] == ' '", span="425-425"];
m1_238 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="(curChar = ln[first_nonspace]) == ' '", span="480-480"];
m1_248 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="ln[offset] == ' '", span="506-506"];
m1_267 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="offset = ln.Length - 1", span="545-545"];
m1_272 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="offset = ln.Length - 1", span="555-555"];
m1_273 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="0 != (matched = ParseListMarker(ln, first_nonspace, out data))", span="558-558"];
m1_276 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="i <= 5 && ln[offset + i] == ' '", span="564-564"];
m1_278 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="i >= 5 || i < 1 || ln[offset] == '\n'", span="568-568"];
m1_292 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="offset >= ln.Length", span="611-611"];
m1_294 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="(curChar = ln[first_nonspace]) == ' '", span="614-614"];
m1_298 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", color=green, community=0, file="BlockMethods.cs", label="container.IsLastLineBlank = (blank &&\r\n                                          container.Tag != BlockTag.BlockQuote &&\r\n                                          container.Tag != BlockTag.SETextHeader &&\r\n                                          container.Tag != BlockTag.FencedCode &&\r\n                                          !(container.Tag == BlockTag.ListItem &&\r\n                                            container.FirstChild == null &&\r\n                                            container.StartLine == line_number))", prediction=17, span="624-630"];
m1_320 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="int p = ln.Length - 1", span="701-701"];
m1_321 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", color=green, community=0, file="BlockMethods.cs", label="p >= 0 && (ln[p] == ' ' || ln[p] == '\n')", prediction=18, span="704-704"];
m1_323 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="p >= 0 && ln[p] == '#'", span="708-708"];
m1_325 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="p < 0 || ln[p] != ' '", span="712-712"];
m1_326 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="p = ln.Length - 1", span="713-713"];
m1_333 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", color=green, community=0, file="BlockMethods.cs", label="container = CreateChildBlock(container, BlockTag.Paragraph, line_number, first_nonspace + 1)", prediction=19, span="730-730"];
m1_337 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="Exit CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", span="327-327"];
m1_171 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="int offset = 0", span="330-330"];
m1_172 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="int matched = 0", span="331-331"];
m1_185 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="first_nonspace = offset", span="352-352"];
m1_188 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="indent = first_nonspace - offset", span="356-356"];
m1_199 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="offset += container.ListData.MarkerOffset + container.ListData.Padding", span="380-380"];
m1_205 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="offset += CODE_INDENT", span="392-392"];
m1_221 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="offset++", span="427-427"];
m1_237 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="first_nonspace = offset", span="479-479"];
m1_240 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="indent = first_nonspace - offset", span="483-483"];
m1_244 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="offset += CODE_INDENT", span="491-491"];
m1_260 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.FencedCodeData.FenceOffset = first_nonspace - offset", span="527-527"];
m1_291 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="first_nonspace = offset", span="610-610"];
m1_296 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="indent = first_nonspace - offset", span="617-617"];
m1_173 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="int i", span="332-332"];
m1_174 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="ListData data", span="333-333"];
m1_175 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="bool all_matched = true", span="334-334"];
m1_176 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", color=green, community=0, file="BlockMethods.cs", label="Block container", prediction=20, span="335-335"];
m1_178 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="bool blank = false", span="337-337"];
m1_182 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container = cur.Top", span="343-343"];
m1_243 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="cur.Tag != BlockTag.Paragraph && !blank", span="489-489"];
m1_303 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="cur != last_matched_container &&\r\n                container == last_matched_container &&\r\n                !blank &&\r\n                cur.Tag == BlockTag.Paragraph &&\r\n                cur.StringContent.Length > 0", span="639-643"];
m1_305 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="cur != last_matched_container", span="653-653"];
m1_307 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="cur = cur.Parent", span="657-657"];
m1_179 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="int first_nonspace", span="338-338"];
m1_234 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="blank && container.IsLastLineBlank", span="468-468"];
m1_180 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="char curChar", span="339-339"];
m1_181 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="int indent", span="340-340"];
m1_183 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.LastChild != null && container.LastChild.IsOpen", span="348-348"];
m1_184 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container = container.LastChild", span="350-350"];
m1_233 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="last_matched_container = container", span="465-465"];
m1_236 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.Tag != BlockTag.FencedCode &&\r\n                   container.Tag != BlockTag.IndentedCode &&\r\n                   container.Tag != BlockTag.HtmlBlock", span="474-476"];
m1_265 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.Tag = BlockTag.SETextHeader", span="543-543"];
m1_266 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", color=green, community=0, file="BlockMethods.cs", label="container.HeaderLevel = matched", prediction=21, span="544-544"];
m1_285 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", color=green, community=0, file="BlockMethods.cs", label="container.Tag != BlockTag.List || !ListsMatch(container.ListData, data)", prediction=22, span="585-585"];
m1_290 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="AcceptsLines(container.Tag)", span="600-600"];
m1_299 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="Block cont = container", span="632-632"];
m1_310 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.Tag == BlockTag.IndentedCode", span="664-664"];
m1_312 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.Tag == BlockTag.FencedCode", span="670-670"];
m1_314 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.FencedCodeData.FenceLength = -1", span="678-678"];
m1_316 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.Tag == BlockTag.HtmlBlock", span="686-686"];
m1_319 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.Tag == BlockTag.AtxHeader", span="698-698"];
m1_329 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container = container.Parent", span="717-717"];
m1_330 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", color=green, community=0, file="BlockMethods.cs", label="AcceptsLines(container.Tag)", prediction=22, span="720-720"];
m1_332 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.Tag != BlockTag.HorizontalRuler && container.Tag != BlockTag.SETextHeader", span="726-726"];
m1_336 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", color=green, community=0, file="BlockMethods.cs", label="curptr = container", prediction=24, span="741-741"];
m1_190 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.Tag", span="359-359"];
m1_198 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="indent >= container.ListData.MarkerOffset + container.ListData.Padding", span="379-379"];
m1_213 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.IsLastLineBlank = true", span="407-407"];
m1_215 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.FencedCodeData.FenceLength == -1", span="415-415"];
m1_218 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.IsLastLineBlank = true", span="419-419"];
m1_219 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="i = container.FencedCodeData.FenceOffset", span="424-424"];
m1_225 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.IsLastLineBlank = true", span="439-439"];
m1_229 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.IsLastLineBlank = true", span="450-450"];
m1_232 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container = container.Parent", span="460-460"];
m1_187 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="first_nonspace++", span="354-354"];
m1_193 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="offset = first_nonspace + 1", span="365-365"];
m1_201 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="offset = first_nonspace", span="382-382"];
m1_207 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="offset = first_nonspace", span="394-394"];
m1_189 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="blank = curChar == '\n'", span="357-357"];
m1_192 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="indent <= 3 && curChar == '>'", span="363-363"];
m1_204 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="indent >= CODE_INDENT", span="391-391"];
m1_200 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label=blank, span="381-381"];
m1_206 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label=blank, span="393-393"];
m1_212 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label=blank, span="406-406"];
m1_217 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label=blank, span="418-418"];
m1_224 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label=blank, span="437-437"];
m1_228 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label=blank, span="448-448"];
m1_191 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="BlockTag.BlockQuote", span="361-361"];
m1_197 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="BlockTag.ListItem", span="377-377"];
m1_203 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="BlockTag.IndentedCode", span="389-389"];
m1_209 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="BlockTag.AtxHeader", span="401-401"];
m1_214 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="BlockTag.FencedCode", span="412-412"];
m1_223 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="BlockTag.HtmlBlock", span="435-435"];
m1_227 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="BlockTag.Paragraph", span="446-446"];
m1_196 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="all_matched = false", span="371-371"];
m1_195 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="offset++", span="367-367"];
m1_231 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="!all_matched", span="458-458"];
m1_202 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="all_matched = false", span="384-384"];
m1_208 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="all_matched = false", span="396-396"];
m1_210 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", color=green, community=0, file="BlockMethods.cs", label="BlockTag.SETextHeader", prediction=25, span="402-402"];
m1_211 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="all_matched = false", span="405-405"];
m1_216 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="all_matched = false", span="417-417"];
m1_222 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="i--", span="428-428"];
m1_226 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="all_matched = false", span="440-440"];
m1_230 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="all_matched = false", span="451-451"];
m1_309 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="throw new CommonMarkException(''Cannot finalize container block. Last matched container tag = '' + last_matched_container.Tag);", span="660-660"];
m1_239 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="first_nonspace++", span="481-481"];
m1_247 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="offset = first_nonspace + 1", span="504-504"];
m1_252 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="offset = first_nonspace + matched", span="515-515"];
m1_261 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="offset = first_nonspace + matched", span="528-528"];
m1_274 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="offset = first_nonspace + matched", span="562-562"];
m1_241 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="blank = curChar == '\n'", span="484-484"];
m1_246 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="curChar == '>'", span="501-501"];
m1_258 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.FencedCodeData.FenceChar = curChar", span="525-525"];
m1_242 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="indent >= CODE_INDENT", span="486-486"];
m1_284 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="data.MarkerOffset = indent", span="583-583"];
m1_249 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="offset++", span="507-507"];
m1_254 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.HeaderLevel = i", span="517-517"];
m1_259 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.FencedCodeData.FenceLength = matched", span="526-526"];
m1_257 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.FencedCodeData = new FencedCodeData()", span="524-524"];
m1_271 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container = container.Parent", span="554-554"];
m1_279 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="data.Padding = matched + 1", span="570-570"];
m1_282 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="data.Padding = matched + i", span="576-576"];
m1_287 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="container.ListData = data", span="588-588"];
m1_289 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", color=green, community=0, file="BlockMethods.cs", label="container.ListData = data", prediction=26, span="593-593"];
m1_275 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="i = 0", span="563-563"];
m1_281 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="offset++", span="572-572"];
m1_283 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="offset += i", span="577-577"];
m1_277 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", color=green, community=0, file="BlockMethods.cs", label="i++", prediction=27, span="565-565"];
m1_280 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="i > 0", span="571-571"];
m1_295 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="first_nonspace++", span="615-615"];
m1_293 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="curChar = '\0'", span="612-612"];
m1_297 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="blank = curChar == '\n'", span="618-618"];
m1_318 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label=blank, span="692-692"];
m1_300 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="cont.Parent != null", span="633-633"];
m1_301 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="cont.Parent.IsLastLineBlank = false", span="635-635"];
m1_302 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="cont = cont.Parent", span="636-636"];
m1_308 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="cur == null", span="659-659"];
m1_322 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="p--", span="705-705"];
m1_324 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="BlockMethods.cs", label="p--", span="709-709"];
m1_41 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="Entry CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, int)", span="91-91"];
m1_42 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="!b.IsOpen", span="94-94"];
m1_44 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="b.IsOpen = false", span="97-97"];
m1_48 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="b.Tag", span="104-104"];
m1_51 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, int)", color=green, community=0, file="BlockMethods.cs", label="b.StringContent.StartsWith('[') && 0 != (pos = InlineMethods.ParseReference(b.StringContent, b.Top.ReferenceMap))", prediction=28, span="109-109"];
m1_52 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, int)", color=green, community=0, file="BlockMethods.cs", label="b.StringContent.TrimStart(pos)", prediction=29, span="110-110"];
m1_56 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, int)", color=green, community=0, file="BlockMethods.cs", label="b.StringContent.RemoveTrailingBlankLines()", prediction=30, span="118-118"];
m1_58 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, int)", color=green, community=0, file="BlockMethods.cs", label="var firstlinelen = b.StringContent.IndexOf('\n') + 1", prediction=31, span="123-123"];
m1_59 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, int)", color=green, community=0, file="BlockMethods.cs", label="b.FencedCodeData.Info = InlineMethods.Unescape(b.StringContent.TakeFromStart(firstlinelen, true).Trim())", prediction=32, span="124-124"];
m1_61 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, int)", color=green, community=0, file="BlockMethods.cs", label="b.ListData.IsTight = true", prediction=33, span="128-128"];
m1_62 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, int)", color=green, community=0, file="BlockMethods.cs", label="var item = b.FirstChild", prediction=34, span="129-129"];
m1_66 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, int)", color=green, community=0, file="BlockMethods.cs", label="b.ListData.IsTight = false", prediction=35, span="137-137"];
m1_70 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="b.ListData.IsTight = false", span="147-147"];
m1_72 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="!b.ListData.IsTight", span="154-154"];
m1_43 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="return;", span="95-95"];
m1_49 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, int)", color=green, community=0, file="BlockMethods.cs", label="BlockTag.Paragraph", prediction=36, span="107-107"];
m1_55 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, int)", color=green, community=0, file="BlockMethods.cs", label="BlockTag.IndentedCode", prediction=37, span="117-117"];
m1_57 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, int)", color=green, community=0, file="BlockMethods.cs", label="BlockTag.FencedCode", prediction=38, span="121-121"];
m1_60 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, int)", color=green, community=0, file="BlockMethods.cs", label="BlockTag.List", prediction=39, span="127-127"];
m1_74 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="Exit CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, int)", span="91-91"];
m1_50 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, int)", color=green, community=0, file="BlockMethods.cs", label="var pos = 0", prediction=40, span="108-108"];
m1_63 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, int)", color=green, community=0, file="BlockMethods.cs", label="Block subitem", prediction=41, span="130-130"];
m1_64 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, int)", color=green, community=0, file="BlockMethods.cs", label="item != null", prediction=34, span="132-132"];
m1_65 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, int)", color=green, community=0, file="BlockMethods.cs", label="item.IsLastLineBlank && item.NextSibling != null", prediction=34, span="135-135"];
m1_67 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="subitem = item.FirstChild", span="142-142"];
m1_69 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="EndsWithBlankLine(subitem) && (item.NextSibling != null || subitem.NextSibling != null)", span="145-145"];
m1_73 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="item = item.NextSibling", span="157-157"];
m1_68 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="subitem != null", span="143-143"];
m1_71 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="subitem = subitem.NextSibling", span="151-151"];
m1_158 [cluster="CommonMark.Parser.Scanner.scan_hrule(string, int)", file="BlockMethods.cs", label="Entry CommonMark.Parser.Scanner.scan_hrule(string, int)", span="388-388"];
m1_100 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.CommonMarkSettings)", file="BlockMethods.cs", label="Entry CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.CommonMarkSettings)", span="206-206"];
m1_101 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.CommonMarkSettings)", file="BlockMethods.cs", label="var stack = new Stack<Block>()", span="208-208"];
m1_102 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.CommonMarkSettings)", file="BlockMethods.cs", label="var parsers = settings.InlineParsers", span="209-209"];
m1_103 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.CommonMarkSettings)", file="BlockMethods.cs", label="var specialCharacters = settings.InlineParserSpecialCharacters", span="210-210"];
m1_104 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.CommonMarkSettings)", color=green, community=0, file="BlockMethods.cs", label="block != null", prediction=44, span="212-212"];
m1_105 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.CommonMarkSettings)", color=green, community=0, file="BlockMethods.cs", label="var tag = block.Tag", prediction=45, span="214-214"];
m1_109 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.CommonMarkSettings)", file="BlockMethods.cs", label="block.StringContent = null", span="220-220"];
m1_110 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.CommonMarkSettings)", file="BlockMethods.cs", label="block.FirstChild != null", span="224-224"];
m1_111 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.CommonMarkSettings)", color=green, community=0, file="BlockMethods.cs", label="block.NextSibling != null", prediction=44, span="226-226"];
m1_112 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.CommonMarkSettings)", color=green, community=0, file="BlockMethods.cs", label="stack.Push(block.NextSibling)", prediction=44, span="227-227"];
m1_113 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.CommonMarkSettings)", color=green, community=0, file="BlockMethods.cs", label="block = block.FirstChild", prediction=48, span="229-229"];
m1_114 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.CommonMarkSettings)", color=green, community=0, file="BlockMethods.cs", label="block.NextSibling != null", prediction=44, span="231-231"];
m1_115 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.CommonMarkSettings)", color=green, community=0, file="BlockMethods.cs", label="block = block.NextSibling", prediction=50, span="233-233"];
m1_116 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.CommonMarkSettings)", color=green, community=0, file="BlockMethods.cs", label="stack.Count > 0", prediction=44, span="235-235"];
m1_117 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.CommonMarkSettings)", color=green, community=0, file="BlockMethods.cs", label="block = stack.Pop()", prediction=52, span="237-237"];
m1_106 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.CommonMarkSettings)", color=green, community=0, file="BlockMethods.cs", label="tag == BlockTag.Paragraph || tag == BlockTag.AtxHeader || tag == BlockTag.SETextHeader", prediction=53, span="215-215"];
m1_118 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.CommonMarkSettings)", color=green, community=0, file="BlockMethods.cs", label="block = null", prediction=54, span="241-241"];
m1_119 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.CommonMarkSettings)", file="BlockMethods.cs", label="Exit CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.CommonMarkSettings)", span="206-206"];
m1_99 [cluster="CommonMark.Syntax.Block.Block(CommonMark.Syntax.BlockTag, int, int)", file="BlockMethods.cs", label="Entry CommonMark.Syntax.Block.Block(CommonMark.Syntax.BlockTag, int, int)", span="18-18"];
m1_19 [cluster="CommonMark.Syntax.StringContent.StringContent()", file="BlockMethods.cs", label="Entry CommonMark.Syntax.StringContent.StringContent()", span="10-10"];
m1_125 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="Entry CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", span="252-252"];
m1_126 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", color=green, community=0, file="BlockMethods.cs", label="char c", prediction=55, span="254-254"];
m1_129 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", color=green, community=0, file="BlockMethods.cs", label="var len = ln.Length", prediction=56, span="257-257"];
m1_130 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="startpos = pos", span="259-259"];
m1_131 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="c = ln[pos]", span="260-260"];
m1_133 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="pos++", span="264-264"];
m1_134 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="pos == len || (ln[pos] != ' ' && ln[pos] != '\n')", span="265-265"];
m1_141 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="pos < len - 1", span="277-277"];
m1_142 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="c = ln[++pos]", span="279-279"];
m1_145 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", color=green, community=0, file="BlockMethods.cs", label="pos >= len - 1 || (c != '.' && c != ')')", prediction=56, span="286-286"];
m1_147 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", color=green, community=0, file="BlockMethods.cs", label="pos++", prediction=56, span="289-289"];
m1_148 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", color=green, community=0, file="BlockMethods.cs", label="pos == len || (ln[pos] != ' ' && ln[pos] != '\n')", prediction=56, span="290-290"];
m1_156 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="return (pos - startpos);", span="305-305"];
m1_127 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", color=green, community=0, file="BlockMethods.cs", label="int startpos", prediction=60, span="255-255"];
m1_128 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", color=green, community=0, file="BlockMethods.cs", label="data = null", prediction=61, span="256-256"];
m1_137 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="data.BulletChar = c", span="269-269"];
m1_139 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", color=green, community=0, file="BlockMethods.cs", label="c >= '0' && c <= '9'", prediction=56, span="272-272"];
m1_140 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="int start = c - '0'", span="275-275"];
m1_154 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="data.Delimiter = (c == '.' ? ListDelimiter.Period : ListDelimiter.Parenthesis)", span="297-297"];
m1_135 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="return 0;", span="266-266"];
m1_136 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="data = new ListData()", span="268-268"];
m1_138 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="data.Start = 1", span="270-270"];
m1_155 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="return 0;", span="302-302"];
m1_144 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", color=green, community=0, file="BlockMethods.cs", label="start = start * 10 + (c - '0')", prediction=63, span="281-281"];
m1_153 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="data.Start = start", span="296-296"];
m1_143 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", color=green, community=0, file="BlockMethods.cs", label="c >= '0' && c <= '9'", prediction=64, span="280-280"];
m1_146 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="return 0;", span="287-287"];
m1_149 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", color=green, community=0, file="BlockMethods.cs", label="return 0;", prediction=65, span="291-291"];
m1_150 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", color=green, community=0, file="BlockMethods.cs", label="data = new ListData()", prediction=66, span="293-293"];
m1_151 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="data.ListType = ListType.Ordered", span="294-294"];
m1_152 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="data.BulletChar = '\0'", span="295-295"];
m1_157 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="Exit CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", span="252-252"];
m1_6 [cluster="CommonMark.Parser.BlockMethods.AddLine(CommonMark.Syntax.Block, string, int, int)", file="BlockMethods.cs", label="Entry CommonMark.Parser.BlockMethods.AddLine(CommonMark.Syntax.Block, string, int, int)", span="33-33"];
m1_7 [cluster="CommonMark.Parser.BlockMethods.AddLine(CommonMark.Syntax.Block, string, int, int)", file="BlockMethods.cs", label="!block.IsOpen", span="35-35"];
m1_8 [cluster="CommonMark.Parser.BlockMethods.AddLine(CommonMark.Syntax.Block, string, int, int)", file="BlockMethods.cs", label="throw new CommonMarkException(string.Format(System.Globalization.CultureInfo.InvariantCulture, ''Attempted to add line '{0}' to closed container ({1}).'', ln, block.Tag));", span="36-36"];
m1_9 [cluster="CommonMark.Parser.BlockMethods.AddLine(CommonMark.Syntax.Block, string, int, int)", file="BlockMethods.cs", label="var len = length == -1 ? ln.Length - offset : length", span="38-38"];
m1_12 [cluster="CommonMark.Parser.BlockMethods.AddLine(CommonMark.Syntax.Block, string, int, int)", file="BlockMethods.cs", label="var curSC = block.StringContent", span="42-42"];
m1_14 [cluster="CommonMark.Parser.BlockMethods.AddLine(CommonMark.Syntax.Block, string, int, int)", color=green, community=0, file="BlockMethods.cs", label="block.StringContent = curSC = new StringContent()", prediction=67, span="44-44"];
m1_15 [cluster="CommonMark.Parser.BlockMethods.AddLine(CommonMark.Syntax.Block, string, int, int)", color=green, community=0, file="BlockMethods.cs", label="block.StringContent.Append(ln, offset, len)", prediction=68, span="46-46"];
m1_10 [cluster="CommonMark.Parser.BlockMethods.AddLine(CommonMark.Syntax.Block, string, int, int)", file="BlockMethods.cs", label="len <= 0", span="39-39"];
m1_11 [cluster="CommonMark.Parser.BlockMethods.AddLine(CommonMark.Syntax.Block, string, int, int)", file="BlockMethods.cs", label="return;", span="40-40"];
m1_13 [cluster="CommonMark.Parser.BlockMethods.AddLine(CommonMark.Syntax.Block, string, int, int)", file="BlockMethods.cs", label="curSC == null", span="43-43"];
m1_16 [cluster="CommonMark.Parser.BlockMethods.AddLine(CommonMark.Syntax.Block, string, int, int)", file="BlockMethods.cs", label="Exit CommonMark.Parser.BlockMethods.AddLine(CommonMark.Syntax.Block, string, int, int)", span="33-33"];
m1_166 [cluster="CommonMark.Parser.BlockMethods.ListsMatch(CommonMark.Syntax.ListData, CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="Entry CommonMark.Parser.BlockMethods.ListsMatch(CommonMark.Syntax.ListData, CommonMark.Syntax.ListData)", span="316-316"];
m1_167 [cluster="CommonMark.Parser.BlockMethods.ListsMatch(CommonMark.Syntax.ListData, CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="return (list_data.ListType == item_data.ListType &&\r\n                    list_data.Delimiter == item_data.Delimiter &&\r\n                // list_data.marker_offset == item_data.marker_offset &&\r\n                    list_data.BulletChar == item_data.BulletChar);", span="318-321"];
m1_168 [cluster="CommonMark.Parser.BlockMethods.ListsMatch(CommonMark.Syntax.ListData, CommonMark.Syntax.ListData)", file="BlockMethods.cs", label="Exit CommonMark.Parser.BlockMethods.ListsMatch(CommonMark.Syntax.ListData, CommonMark.Syntax.ListData)", span="316-316"];
m1_338 [cluster="CommonMark.Parser.Scanner.scan_atx_header_start(string, int, out int)", file="BlockMethods.cs", label="Entry CommonMark.Parser.Scanner.scan_atx_header_start(string, int, out int)", span="292-292"];
m1_17 [cluster="CommonMark.CommonMarkException.CommonMarkException(string)", file="BlockMethods.cs", label="Entry CommonMark.CommonMarkException.CommonMarkException(string)", span="30-30"];
m1_341 [cluster="CommonMark.Parser.Scanner.scan_html_block_tag(string, int)", file="BlockMethods.cs", label="Entry CommonMark.Parser.Scanner.scan_html_block_tag(string, int)", span="124-124"];
m1_76 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", file="BlockMethods.cs", label="Entry CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Syntax.StringContent, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>)", span="1154-1154"];
m1_81 [cluster="CommonMark.Syntax.StringContent.TakeFromStart(int, bool)", file="BlockMethods.cs", label="Entry CommonMark.Syntax.StringContent.TakeFromStart(int, bool)", span="188-188"];
m1_29 [cluster="CommonMark.Parser.BlockMethods.BreakOutOfLists(ref CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="Entry CommonMark.Parser.BlockMethods.BreakOutOfLists(ref CommonMark.Syntax.Block, int)", span="69-69"];
m1_30 [cluster="CommonMark.Parser.BlockMethods.BreakOutOfLists(ref CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="Block container = blockRef", span="71-71"];
m1_31 [cluster="CommonMark.Parser.BlockMethods.BreakOutOfLists(ref CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="Block b = container.Top", span="72-72"];
m1_35 [cluster="CommonMark.Parser.BlockMethods.BreakOutOfLists(ref CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="container != null && container != b", span="80-80"];
m1_37 [cluster="CommonMark.Parser.BlockMethods.BreakOutOfLists(ref CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="container = container.Parent", span="83-83"];
m1_32 [cluster="CommonMark.Parser.BlockMethods.BreakOutOfLists(ref CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="b != null && b.Tag != BlockTag.List", span="75-75"];
m1_33 [cluster="CommonMark.Parser.BlockMethods.BreakOutOfLists(ref CommonMark.Syntax.Block, int)", color=green, community=0, file="BlockMethods.cs", label="b = b.LastChild", prediction=69, span="76-76"];
m1_34 [cluster="CommonMark.Parser.BlockMethods.BreakOutOfLists(ref CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="b != null", span="78-78"];
m1_39 [cluster="CommonMark.Parser.BlockMethods.BreakOutOfLists(ref CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="blockRef = b.Parent", span="87-87"];
m1_40 [cluster="CommonMark.Parser.BlockMethods.BreakOutOfLists(ref CommonMark.Syntax.Block, int)", file="BlockMethods.cs", label="Exit CommonMark.Parser.BlockMethods.BreakOutOfLists(ref CommonMark.Syntax.Block, int)", span="69-69"];
m1_121 [cluster="CommonMark.Syntax.StringContent.ToString()", file="BlockMethods.cs", label="Entry CommonMark.Syntax.StringContent.ToString()", span="56-56"];
m1_84 [cluster="CommonMark.Parser.BlockMethods.CreateChildBlock(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", file="BlockMethods.cs", label="Entry CommonMark.Parser.BlockMethods.CreateChildBlock(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", span="171-171"];
m1_85 [cluster="CommonMark.Parser.BlockMethods.CreateChildBlock(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", file="BlockMethods.cs", label="!CanContain(parent.Tag, blockType)", span="175-175"];
m1_87 [cluster="CommonMark.Parser.BlockMethods.CreateChildBlock(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", file="BlockMethods.cs", label="parent = parent.Parent", span="178-178"];
m1_89 [cluster="CommonMark.Parser.BlockMethods.CreateChildBlock(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", file="BlockMethods.cs", label="child.Parent = parent", span="182-182"];
m1_90 [cluster="CommonMark.Parser.BlockMethods.CreateChildBlock(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", file="BlockMethods.cs", label="child.Top = parent.Top", span="183-183"];
m1_94 [cluster="CommonMark.Parser.BlockMethods.CreateChildBlock(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", file="BlockMethods.cs", label="parent.FirstChild = child", span="192-192"];
m1_96 [cluster="CommonMark.Parser.BlockMethods.CreateChildBlock(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", file="BlockMethods.cs", label="parent.LastChild = child", span="196-196"];
m1_97 [cluster="CommonMark.Parser.BlockMethods.CreateChildBlock(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", file="BlockMethods.cs", label="return child;", span="197-197"];
m1_98 [cluster="CommonMark.Parser.BlockMethods.CreateChildBlock(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", file="BlockMethods.cs", label="Exit CommonMark.Parser.BlockMethods.CreateChildBlock(CommonMark.Syntax.Block, CommonMark.Syntax.BlockTag, int, int)", span="171-171"];
m1_75 [cluster="CommonMark.Syntax.StringContent.StartsWith(char)", file="BlockMethods.cs", label="Entry CommonMark.Syntax.StringContent.StartsWith(char)", span="121-121"];
m1_159 [cluster="CommonMark.Syntax.ListData.ListData()", file="BlockMethods.cs", label="Entry CommonMark.Syntax.ListData.ListData()", span="9-9"];
m1_18 [cluster="string.Format(System.IFormatProvider, string, object, object)", file="BlockMethods.cs", label="Entry string.Format(System.IFormatProvider, string, object, object)", span="0-0"];
m1_0 [cluster="CommonMark.Parser.BlockMethods.CanContain(CommonMark.Syntax.BlockTag, CommonMark.Syntax.BlockTag)", file="BlockMethods.cs", label="Entry CommonMark.Parser.BlockMethods.CanContain(CommonMark.Syntax.BlockTag, CommonMark.Syntax.BlockTag)", span="14-14"];
m1_1 [cluster="CommonMark.Parser.BlockMethods.CanContain(CommonMark.Syntax.BlockTag, CommonMark.Syntax.BlockTag)", file="BlockMethods.cs", label="return (parent_type == BlockTag.Document ||\r\n                     parent_type == BlockTag.BlockQuote ||\r\n                     parent_type == BlockTag.ListItem ||\r\n                     (parent_type == BlockTag.List && child_type == BlockTag.ListItem));", span="16-19"];
m1_2 [cluster="CommonMark.Parser.BlockMethods.CanContain(CommonMark.Syntax.BlockTag, CommonMark.Syntax.BlockTag)", file="BlockMethods.cs", label="Exit CommonMark.Parser.BlockMethods.CanContain(CommonMark.Syntax.BlockTag, CommonMark.Syntax.BlockTag)", span="14-14"];
m1_78 [cluster="CommonMark.Syntax.StringContent.IsFirstLineBlank()", file="BlockMethods.cs", label="Entry CommonMark.Syntax.StringContent.IsFirstLineBlank()", span="234-234"];
m1_342 [cluster="CommonMark.Parser.Scanner.scan_setext_header_line(string, int)", file="BlockMethods.cs", label="Entry CommonMark.Parser.Scanner.scan_setext_header_line(string, int)", span="346-346"];
m1_123 [cluster="System.Collections.Generic.Stack<T>.Push(T)", file="BlockMethods.cs", label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0"];
m1_120 [cluster="System.Collections.Generic.Stack<T>.Stack()", file="BlockMethods.cs", label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0"];
m1_122 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, System.Func<CommonMark.Parser.Subject, CommonMark.Syntax.Inline>[], char[])", file="BlockMethods.cs", label="Entry CommonMark.Parser.InlineMethods.parse_inlines(string, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, System.Func<CommonMark.Parser.Subject, CommonMark.Syntax.Inline>[], char[])", span="1030-1030"];
m1_160 [cluster="CommonMark.Parser.BlockMethods.ContainsSingleLine(CommonMark.Syntax.StringContent)", file="BlockMethods.cs", label="Entry CommonMark.Parser.BlockMethods.ContainsSingleLine(CommonMark.Syntax.StringContent)", span="308-308"];
m1_161 [cluster="CommonMark.Parser.BlockMethods.ContainsSingleLine(CommonMark.Syntax.StringContent)", file="BlockMethods.cs", label="content == null", span="310-310"];
m1_163 [cluster="CommonMark.Parser.BlockMethods.ContainsSingleLine(CommonMark.Syntax.StringContent)", file="BlockMethods.cs", label="var i = content.IndexOf('\n')", span="312-312"];
m1_164 [cluster="CommonMark.Parser.BlockMethods.ContainsSingleLine(CommonMark.Syntax.StringContent)", file="BlockMethods.cs", label="return (i == -1 || i == content.Length - 1);", span="313-313"];
m1_162 [cluster="CommonMark.Parser.BlockMethods.ContainsSingleLine(CommonMark.Syntax.StringContent)", file="BlockMethods.cs", label="return true;", span="311-311"];
m1_165 [cluster="CommonMark.Parser.BlockMethods.ContainsSingleLine(CommonMark.Syntax.StringContent)", file="BlockMethods.cs", label="Exit CommonMark.Parser.BlockMethods.ContainsSingleLine(CommonMark.Syntax.StringContent)", span="308-308"];
m2_38 [cluster="int.ToString(System.IFormatProvider)", file="CommonMarkConverter.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m2_31 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="CommonMarkConverter.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m2_55 [cluster="CommonMark.CommonMarkException.CommonMarkException(string, System.Exception)", file="CommonMarkConverter.cs", label="Entry CommonMark.CommonMarkException.CommonMarkException(string, System.Exception)", span="35-35"];
m2_0 [cluster="CommonMark.CommonMarkConverter.ProcessStage1(System.IO.TextReader, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="Entry CommonMark.CommonMarkConverter.ProcessStage1(System.IO.TextReader, CommonMark.CommonMarkSettings)", span="77-77"];
m2_5 [cluster="CommonMark.CommonMarkConverter.ProcessStage1(System.IO.TextReader, CommonMark.CommonMarkSettings)", color=green, community=0, file="CommonMarkConverter.cs", label="var reader = new Parser.TabTextReader(source)", prediction=70, span="87-87"];
m2_4 [cluster="CommonMark.CommonMarkConverter.ProcessStage1(System.IO.TextReader, CommonMark.CommonMarkSettings)", color=green, community=0, file="CommonMarkConverter.cs", label="int linenum = 1", prediction=71, span="84-84"];
m2_6 [cluster="CommonMark.CommonMarkConverter.ProcessStage1(System.IO.TextReader, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="!reader.EndOfStream()", span="88-88"];
m2_7 [cluster="CommonMark.CommonMarkConverter.ProcessStage1(System.IO.TextReader, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="BlockMethods.IncorporateLine(reader.ReadLine(), linenum, ref cur)", span="90-90"];
m2_3 [cluster="CommonMark.CommonMarkConverter.ProcessStage1(System.IO.TextReader, CommonMark.CommonMarkSettings)", color=green, community=0, file="CommonMarkConverter.cs", label="var cur = Syntax.Block.CreateDocument()", prediction=71, span="82-82"];
m2_1 [cluster="CommonMark.CommonMarkConverter.ProcessStage1(System.IO.TextReader, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="source == null", span="79-79"];
m2_14 [cluster="CommonMark.CommonMarkConverter.ProcessStage1(System.IO.TextReader, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="throw new CommonMarkException(''An error occurred while parsing line '' + linenum.ToString(CultureInfo.InvariantCulture), cur, ex);", span="104-104"];
m2_15 [cluster="CommonMark.CommonMarkConverter.ProcessStage1(System.IO.TextReader, CommonMark.CommonMarkSettings)", color=green, community=0, file="CommonMarkConverter.cs", label="cur != cur.Top", prediction=71, span="109-109"];
m2_16 [cluster="CommonMark.CommonMarkConverter.ProcessStage1(System.IO.TextReader, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="BlockMethods.Finalize(cur, linenum)", span="111-111"];
m2_17 [cluster="CommonMark.CommonMarkConverter.ProcessStage1(System.IO.TextReader, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="cur = cur.Parent", span="112-112"];
m2_21 [cluster="CommonMark.CommonMarkConverter.ProcessStage1(System.IO.TextReader, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="throw new CommonMarkException(''An error occurred while finalizing open containers.'', cur, ex);", span="121-121"];
m2_22 [cluster="CommonMark.CommonMarkConverter.ProcessStage1(System.IO.TextReader, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="cur != cur.Top", span="124-124"];
m2_23 [cluster="CommonMark.CommonMarkConverter.ProcessStage1(System.IO.TextReader, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="throw new CommonMarkException(''Unable to finalize open containers.'', cur);", span="125-125"];
m2_24 [cluster="CommonMark.CommonMarkConverter.ProcessStage1(System.IO.TextReader, CommonMark.CommonMarkSettings)", color=green, community=0, file="CommonMarkConverter.cs", label="BlockMethods.Finalize(cur, linenum)", prediction=71, span="129-129"];
m2_28 [cluster="CommonMark.CommonMarkConverter.ProcessStage1(System.IO.TextReader, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="throw new CommonMarkException(''Unable to finalize document element.'', cur, ex);", span="137-137"];
m2_29 [cluster="CommonMark.CommonMarkConverter.ProcessStage1(System.IO.TextReader, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="return cur;", span="140-140"];
m2_8 [cluster="CommonMark.CommonMarkConverter.ProcessStage1(System.IO.TextReader, CommonMark.CommonMarkSettings)", color=green, community=0, file="CommonMarkConverter.cs", label="linenum++", prediction=71, span="91-91"];
m2_18 [cluster="CommonMark.CommonMarkConverter.ProcessStage1(System.IO.TextReader, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label=CommonMarkException, span="115-115"];
m2_20 [cluster="CommonMark.CommonMarkConverter.ProcessStage1(System.IO.TextReader, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label=Exception, span="119-119"];
m2_25 [cluster="CommonMark.CommonMarkConverter.ProcessStage1(System.IO.TextReader, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label=CommonMarkException, span="131-131"];
m2_27 [cluster="CommonMark.CommonMarkConverter.ProcessStage1(System.IO.TextReader, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label=Exception, span="135-135"];
m2_10 [cluster="CommonMark.CommonMarkConverter.ProcessStage1(System.IO.TextReader, CommonMark.CommonMarkSettings)", color=green, community=0, file="CommonMarkConverter.cs", label="throw;", prediction=76, span="96-96"];
m2_9 [cluster="CommonMark.CommonMarkConverter.ProcessStage1(System.IO.TextReader, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label=IOException, span="94-94"];
m2_11 [cluster="CommonMark.CommonMarkConverter.ProcessStage1(System.IO.TextReader, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label=CommonMarkException, span="98-98"];
m2_13 [cluster="CommonMark.CommonMarkConverter.ProcessStage1(System.IO.TextReader, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label=Exception, span="102-102"];
m2_2 [cluster="CommonMark.CommonMarkConverter.ProcessStage1(System.IO.TextReader, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="throw new ArgumentNullException(''source'');", span="80-80"];
m2_19 [cluster="CommonMark.CommonMarkConverter.ProcessStage1(System.IO.TextReader, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="throw;", span="117-117"];
m2_26 [cluster="CommonMark.CommonMarkConverter.ProcessStage1(System.IO.TextReader, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="throw;", span="133-133"];
m2_12 [cluster="CommonMark.CommonMarkConverter.ProcessStage1(System.IO.TextReader, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="throw;", span="100-100"];
m2_30 [cluster="CommonMark.CommonMarkConverter.ProcessStage1(System.IO.TextReader, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="Exit CommonMark.CommonMarkConverter.ProcessStage1(System.IO.TextReader, CommonMark.CommonMarkSettings)", span="77-77"];
m2_84 [cluster="CommonMark.CommonMarkConverter.Convert(string, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="Entry CommonMark.CommonMarkConverter.Convert(string, CommonMark.CommonMarkSettings)", span="251-251"];
m2_89 [cluster="CommonMark.CommonMarkConverter.Convert(string, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="Convert(reader, writer, settings)", span="259-259"];
m2_87 [cluster="CommonMark.CommonMarkConverter.Convert(string, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="var reader = new System.IO.StringReader(source)", span="256-256"];
m2_88 [cluster="CommonMark.CommonMarkConverter.Convert(string, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="var writer = new System.IO.StringWriter(System.Globalization.CultureInfo.CurrentCulture)", span="257-257"];
m2_90 [cluster="CommonMark.CommonMarkConverter.Convert(string, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="return writer.ToString();", span="261-261"];
m2_85 [cluster="CommonMark.CommonMarkConverter.Convert(string, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="source == null", span="253-253"];
m2_86 [cluster="CommonMark.CommonMarkConverter.Convert(string, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="return null;", span="254-254"];
m2_91 [cluster="CommonMark.CommonMarkConverter.Convert(string, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="Exit CommonMark.CommonMarkConverter.Convert(string, CommonMark.CommonMarkSettings)", span="251-251"];
m2_56 [cluster="CommonMark.CommonMarkConverter.ProcessStage3(CommonMark.Syntax.Block, System.IO.TextWriter, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="Entry CommonMark.CommonMarkConverter.ProcessStage3(CommonMark.Syntax.Block, System.IO.TextWriter, CommonMark.CommonMarkSettings)", span="186-186"];
m2_57 [cluster="CommonMark.CommonMarkConverter.ProcessStage3(CommonMark.Syntax.Block, System.IO.TextWriter, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="document == null", span="188-188"];
m2_59 [cluster="CommonMark.CommonMarkConverter.ProcessStage3(CommonMark.Syntax.Block, System.IO.TextWriter, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="target == null", span="191-191"];
m2_61 [cluster="CommonMark.CommonMarkConverter.ProcessStage3(CommonMark.Syntax.Block, System.IO.TextWriter, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="document.Tag != Syntax.BlockTag.Document", span="194-194"];
m2_63 [cluster="CommonMark.CommonMarkConverter.ProcessStage3(CommonMark.Syntax.Block, System.IO.TextWriter, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="settings == null", span="197-197"];
m2_65 [cluster="CommonMark.CommonMarkConverter.ProcessStage3(CommonMark.Syntax.Block, System.IO.TextWriter, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="settings.OutputFormat == OutputFormat.SyntaxTree", span="202-202"];
m2_66 [cluster="CommonMark.CommonMarkConverter.ProcessStage3(CommonMark.Syntax.Block, System.IO.TextWriter, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="Printer.PrintBlocks(target, document, 0)", span="204-204"];
m2_67 [cluster="CommonMark.CommonMarkConverter.ProcessStage3(CommonMark.Syntax.Block, System.IO.TextWriter, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="HtmlPrinter.BlocksToHtml(target, document, settings)", span="208-208"];
m2_58 [cluster="CommonMark.CommonMarkConverter.ProcessStage3(CommonMark.Syntax.Block, System.IO.TextWriter, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="throw new ArgumentNullException(''document'');", span="189-189"];
m2_60 [cluster="CommonMark.CommonMarkConverter.ProcessStage3(CommonMark.Syntax.Block, System.IO.TextWriter, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="throw new ArgumentNullException(''target'');", span="192-192"];
m2_62 [cluster="CommonMark.CommonMarkConverter.ProcessStage3(CommonMark.Syntax.Block, System.IO.TextWriter, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="throw new ArgumentException(''The block element passed to this method must represent a top level document.'', ''document'');", span="195-195"];
m2_69 [cluster="CommonMark.CommonMarkConverter.ProcessStage3(CommonMark.Syntax.Block, System.IO.TextWriter, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="throw;", span="213-213"];
m2_71 [cluster="CommonMark.CommonMarkConverter.ProcessStage3(CommonMark.Syntax.Block, System.IO.TextWriter, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="throw;", span="217-217"];
m2_73 [cluster="CommonMark.CommonMarkConverter.ProcessStage3(CommonMark.Syntax.Block, System.IO.TextWriter, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="throw new CommonMarkException(''An error occurred during formatting of the document.'', ex);", span="221-221"];
m2_64 [cluster="CommonMark.CommonMarkConverter.ProcessStage3(CommonMark.Syntax.Block, System.IO.TextWriter, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="settings = CommonMarkSettings.Default", span="198-198"];
m2_68 [cluster="CommonMark.CommonMarkConverter.ProcessStage3(CommonMark.Syntax.Block, System.IO.TextWriter, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label=CommonMarkException, span="211-211"];
m2_70 [cluster="CommonMark.CommonMarkConverter.ProcessStage3(CommonMark.Syntax.Block, System.IO.TextWriter, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label=IOException, span="215-215"];
m2_72 [cluster="CommonMark.CommonMarkConverter.ProcessStage3(CommonMark.Syntax.Block, System.IO.TextWriter, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label=Exception, span="219-219"];
m2_74 [cluster="CommonMark.CommonMarkConverter.ProcessStage3(CommonMark.Syntax.Block, System.IO.TextWriter, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="Exit CommonMark.CommonMarkConverter.ProcessStage3(CommonMark.Syntax.Block, System.IO.TextWriter, CommonMark.CommonMarkSettings)", span="186-186"];
m2_36 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", file="CommonMarkConverter.cs", label="Entry CommonMark.Parser.BlockMethods.IncorporateLine(string, int, ref CommonMark.Syntax.Block)", span="327-327"];
m2_39 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, int)", file="CommonMarkConverter.cs", label="Entry CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, int)", span="91-91"];
m2_76 [cluster="CommonMark.Formatter.HtmlPrinter.BlocksToHtml(System.IO.TextWriter, CommonMark.Syntax.Block, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="Entry CommonMark.Formatter.HtmlPrinter.BlocksToHtml(System.IO.TextWriter, CommonMark.Syntax.Block, CommonMark.CommonMarkSettings)", span="196-196"];
m2_54 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="Entry CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, System.Collections.Generic.Dictionary<string, CommonMark.Syntax.Reference>, CommonMark.CommonMarkSettings)", span="206-206"];
m2_32 [cluster="CommonMark.Syntax.Block.CreateDocument()", file="CommonMarkConverter.cs", label="Entry CommonMark.Syntax.Block.CreateDocument()", span="40-40"];
m2_93 [cluster="System.IO.StringWriter.StringWriter(System.IFormatProvider)", file="CommonMarkConverter.cs", label="Entry System.IO.StringWriter.StringWriter(System.IFormatProvider)", span="0-0"];
m2_37 [cluster="CommonMark.CommonMarkException.CommonMarkException(string, CommonMark.Syntax.Block, System.Exception)", file="CommonMarkConverter.cs", label="Entry CommonMark.CommonMarkException.CommonMarkException(string, CommonMark.Syntax.Block, System.Exception)", span="51-51"];
m2_40 [cluster="CommonMark.CommonMarkConverter.ProcessStage2(CommonMark.Syntax.Block, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="Entry CommonMark.CommonMarkConverter.ProcessStage2(CommonMark.Syntax.Block, CommonMark.CommonMarkSettings)", span="151-151"];
m2_41 [cluster="CommonMark.CommonMarkConverter.ProcessStage2(CommonMark.Syntax.Block, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="document == null", span="153-153"];
m2_43 [cluster="CommonMark.CommonMarkConverter.ProcessStage2(CommonMark.Syntax.Block, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="document.Tag != Syntax.BlockTag.Document", span="156-156"];
m2_45 [cluster="CommonMark.CommonMarkConverter.ProcessStage2(CommonMark.Syntax.Block, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="settings == null", span="159-159"];
m2_47 [cluster="CommonMark.CommonMarkConverter.ProcessStage2(CommonMark.Syntax.Block, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="BlockMethods.ProcessInlines(document, document.ReferenceMap, settings)", span="164-164"];
m2_42 [cluster="CommonMark.CommonMarkConverter.ProcessStage2(CommonMark.Syntax.Block, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="throw new ArgumentNullException(''document'');", span="154-154"];
m2_44 [cluster="CommonMark.CommonMarkConverter.ProcessStage2(CommonMark.Syntax.Block, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="throw new ArgumentException(''The block element passed to this method must represent a top level document.'', ''document'');", span="157-157"];
m2_49 [cluster="CommonMark.CommonMarkConverter.ProcessStage2(CommonMark.Syntax.Block, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="throw;", span="168-168"];
m2_51 [cluster="CommonMark.CommonMarkConverter.ProcessStage2(CommonMark.Syntax.Block, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="throw new CommonMarkException(''An error occurred during inline parsing.'', ex);", span="172-172"];
m2_46 [cluster="CommonMark.CommonMarkConverter.ProcessStage2(CommonMark.Syntax.Block, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="settings = CommonMarkSettings.Default", span="160-160"];
m2_48 [cluster="CommonMark.CommonMarkConverter.ProcessStage2(CommonMark.Syntax.Block, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label=CommonMarkException, span="166-166"];
m2_50 [cluster="CommonMark.CommonMarkConverter.ProcessStage2(CommonMark.Syntax.Block, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label=Exception, span="170-170"];
m2_52 [cluster="CommonMark.CommonMarkConverter.ProcessStage2(CommonMark.Syntax.Block, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="Exit CommonMark.CommonMarkConverter.ProcessStage2(CommonMark.Syntax.Block, CommonMark.CommonMarkSettings)", span="151-151"];
m2_94 [cluster="System.IO.StringWriter.ToString()", file="CommonMarkConverter.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m2_92 [cluster="System.IO.StringReader.StringReader(string)", file="CommonMarkConverter.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m2_35 [cluster="CommonMark.Parser.TabTextReader.ReadLine()", file="CommonMarkConverter.cs", label="Entry CommonMark.Parser.TabTextReader.ReadLine()", span="35-35"];
m2_53 [cluster="System.ArgumentException.ArgumentException(string, string)", file="CommonMarkConverter.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m2_75 [cluster="CommonMark.Formatter.Printer.PrintBlocks(System.IO.TextWriter, CommonMark.Syntax.Block, int)", file="CommonMarkConverter.cs", label="Entry CommonMark.Formatter.Printer.PrintBlocks(System.IO.TextWriter, CommonMark.Syntax.Block, int)", span="46-46"];
m2_77 [cluster="CommonMark.CommonMarkConverter.Convert(System.IO.TextReader, System.IO.TextWriter, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="Entry CommonMark.CommonMarkConverter.Convert(System.IO.TextReader, System.IO.TextWriter, CommonMark.CommonMarkSettings)", span="234-234"];
m2_80 [cluster="CommonMark.CommonMarkConverter.Convert(System.IO.TextReader, System.IO.TextWriter, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="var document = ProcessStage1(source, settings)", span="239-239"];
m2_78 [cluster="CommonMark.CommonMarkConverter.Convert(System.IO.TextReader, System.IO.TextWriter, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="settings == null", span="236-236"];
m2_79 [cluster="CommonMark.CommonMarkConverter.Convert(System.IO.TextReader, System.IO.TextWriter, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="settings = CommonMarkSettings.Default", span="237-237"];
m2_81 [cluster="CommonMark.CommonMarkConverter.Convert(System.IO.TextReader, System.IO.TextWriter, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="ProcessStage2(document, settings)", span="240-240"];
m2_82 [cluster="CommonMark.CommonMarkConverter.Convert(System.IO.TextReader, System.IO.TextWriter, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="ProcessStage3(document, target, settings)", span="241-241"];
m2_83 [cluster="CommonMark.CommonMarkConverter.Convert(System.IO.TextReader, System.IO.TextWriter, CommonMark.CommonMarkSettings)", file="CommonMarkConverter.cs", label="Exit CommonMark.CommonMarkConverter.Convert(System.IO.TextReader, System.IO.TextWriter, CommonMark.CommonMarkSettings)", span="234-234"];
m2_34 [cluster="CommonMark.Parser.TabTextReader.EndOfStream()", file="CommonMarkConverter.cs", label="Entry CommonMark.Parser.TabTextReader.EndOfStream()", span="117-117"];
m2_33 [cluster="CommonMark.Parser.TabTextReader.TabTextReader(System.IO.TextReader)", file="CommonMarkConverter.cs", label="Entry CommonMark.Parser.TabTextReader.TabTextReader(System.IO.TextReader)", span="17-17"];
m4_4 [cluster="CommonMark.Tests.GeneralTests.Version()", file="GeneralTests.cs", label="Entry CommonMark.Tests.GeneralTests.Version()", span="27-27"];
m4_5 [cluster="CommonMark.Tests.GeneralTests.Version()", color=green, community=0, file="GeneralTests.cs", label="var version = CommonMarkConverter.Version", prediction=77, span="29-29"];
m4_6 [cluster="CommonMark.Tests.GeneralTests.Version()", color=green, community=0, file="GeneralTests.cs", label="Assert.AreEqual(0, version.Major, ''The version number is incorrect: {0}'', version)", prediction=78, span="31-31"];
m4_7 [cluster="CommonMark.Tests.GeneralTests.Version()", color=green, community=0, file="GeneralTests.cs", label="Assert.IsTrue(version.Minor > 5, ''The version number is incorrect: {0}'', version)", prediction=77, span="32-32"];
m4_8 [cluster="CommonMark.Tests.GeneralTests.Version()", file="GeneralTests.cs", label="Exit CommonMark.Tests.GeneralTests.Version()", span="27-27"];
m4_10 [cluster="Unk.IsTrue", file="GeneralTests.cs", label="Entry Unk.IsTrue", span=""];
m4_9 [cluster="Unk.AreEqual", file="GeneralTests.cs", label="Entry Unk.AreEqual", span=""];
m4_3 [cluster="CommonMark.Tests.Helpers.ExecuteTest(string, string, CommonMark.CommonMarkSettings)", file="GeneralTests.cs", label="Entry CommonMark.Tests.Helpers.ExecuteTest(string, string, CommonMark.CommonMarkSettings)", span="46-46"];
m4_0 [cluster="CommonMark.Tests.GeneralTests.TestZeroCharRemoval()", file="GeneralTests.cs", label="Entry CommonMark.Tests.GeneralTests.TestZeroCharRemoval()", span="17-17"];
m4_1 [cluster="CommonMark.Tests.GeneralTests.TestZeroCharRemoval()", file="GeneralTests.cs", label="Helpers.ExecuteTest(''\u0000*foo*\0'', ''<p><em>foo</em></p>'')", span="19-19"];
m4_2 [cluster="CommonMark.Tests.GeneralTests.TestZeroCharRemoval()", file="GeneralTests.cs", label="Exit CommonMark.Tests.GeneralTests.TestZeroCharRemoval()", span="17-17"];
m6_9 [cluster="CommonMark.Syntax.Inline.Inline(string)", file="Inline.cs", label="Entry CommonMark.Syntax.Inline.Inline(string)", span="42-42"];
m6_10 [cluster="CommonMark.Syntax.Inline.Inline(string)", file="Inline.cs", label="this.LiteralContent = content", span="47-47"];
m6_11 [cluster="CommonMark.Syntax.Inline.Inline(string)", file="Inline.cs", label="Exit CommonMark.Syntax.Inline.Inline(string)", span="42-42"];
m6_5 [cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, string)", file="Inline.cs", label="Entry CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, string)", span="32-32"];
m6_6 [cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, string)", file="Inline.cs", label="this.Tag = tag", span="34-34"];
m6_7 [cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, string)", file="Inline.cs", label="this.LiteralContent = content", span="35-35"];
m6_8 [cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, string)", file="Inline.cs", label="Exit CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, string)", span="32-32"];
m6_0 [cluster="CommonMark.Syntax.Inline.Inline()", file="Inline.cs", label="Entry CommonMark.Syntax.Inline.Inline()", span="14-14"];
m6_1 [cluster="CommonMark.Syntax.Inline.Inline()", file="Inline.cs", label="Exit CommonMark.Syntax.Inline.Inline()", span="14-14"];
m6_12 [cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)", file="Inline.cs", label="Entry CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)", span="55-55"];
m6_13 [cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)", color=green, community=0, file="Inline.cs", label="this.Tag = tag", prediction=80, span="57-57"];
m6_14 [cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)", color=green, community=0, file="Inline.cs", label="this.FirstChild = content", prediction=81, span="58-58"];
m6_15 [cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)", file="Inline.cs", label="Exit CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag, CommonMark.Syntax.Inline)", span="55-55"];
m6_2 [cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag)", file="Inline.cs", label="Entry CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag)", span="22-22"];
m6_3 [cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag)", file="Inline.cs", label="this.Tag = tag", span="24-24"];
m6_4 [cluster="CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag)", file="Inline.cs", label="Exit CommonMark.Syntax.Inline.Inline(CommonMark.Syntax.InlineTag)", span="22-22"];
m6_16 [cluster="CommonMark.Syntax.Inline.CreateLink(CommonMark.Syntax.Inline, string, string)", file="Inline.cs", label="Entry CommonMark.Syntax.Inline.CreateLink(CommonMark.Syntax.Inline, string, string)", span="61-61"];
m6_17 [cluster="CommonMark.Syntax.Inline.CreateLink(CommonMark.Syntax.Inline, string, string)", file="Inline.cs", label="return new Inline()\r\n            {\r\n                Tag = InlineTag.Link,\r\n                FirstChild = label,\r\n                TargetUrl = url,\r\n                LiteralContent = title\r\n            };", span="63-69"];
m6_18 [cluster="CommonMark.Syntax.Inline.CreateLink(CommonMark.Syntax.Inline, string, string)", file="Inline.cs", label="Exit CommonMark.Syntax.Inline.CreateLink(CommonMark.Syntax.Inline, string, string)", span="61-61"];
m6_19 [file="Inline.cs", label="CommonMark.Syntax.Inline", span=""];
m9_0 [cluster="CommonMark.Tests.ListTests.UnicodeBulletEscape()", file="ListTests.cs", label="Entry CommonMark.Tests.ListTests.UnicodeBulletEscape()", span="14-14"];
m9_1 [cluster="CommonMark.Tests.ListTests.UnicodeBulletEscape()", color=green, community=0, file="ListTests.cs", label="Helpers.ExecuteTest(''\\• foo\n\n\\* bar'', ''<p>• foo</p>\n<p>* bar</p>'')", prediction=82, span="16-16"];
m9_2 [cluster="CommonMark.Tests.ListTests.UnicodeBulletEscape()", file="ListTests.cs", label="Exit CommonMark.Tests.ListTests.UnicodeBulletEscape()", span="14-14"];
m9_10 [cluster="CommonMark.Tests.ListTests.EmptyList2()", file="ListTests.cs", label="Entry CommonMark.Tests.ListTests.EmptyList2()", span="35-35"];
m9_11 [cluster="CommonMark.Tests.ListTests.EmptyList2()", file="ListTests.cs", label="Helpers.ExecuteTest(''+\n+'', ''<ul>\n<li></li>\n<li></li>\n</ul>'')", span="37-37"];
m9_12 [cluster="CommonMark.Tests.ListTests.EmptyList2()", file="ListTests.cs", label="Exit CommonMark.Tests.ListTests.EmptyList2()", span="35-35"];
m9_4 [cluster="CommonMark.Tests.ListTests.UnicodeBulletList()", file="ListTests.cs", label="Entry CommonMark.Tests.ListTests.UnicodeBulletList()", span="21-21"];
m9_5 [cluster="CommonMark.Tests.ListTests.UnicodeBulletList()", color=green, community=0, file="ListTests.cs", label="Helpers.ExecuteTest(''• foo\n• bar'', ''<ul>\n<li>foo</li>\n<li>bar</li>\n</ul>'')", prediction=83, span="23-23"];
m9_6 [cluster="CommonMark.Tests.ListTests.UnicodeBulletList()", file="ListTests.cs", label="Exit CommonMark.Tests.ListTests.UnicodeBulletList()", span="21-21"];
m9_7 [cluster="CommonMark.Tests.ListTests.EmptyList1()", file="ListTests.cs", label="Entry CommonMark.Tests.ListTests.EmptyList1()", span="28-28"];
m9_8 [cluster="CommonMark.Tests.ListTests.EmptyList1()", file="ListTests.cs", label="Helpers.ExecuteTest(''1.\n2.'', ''<ol>\n<li></li>\n<li></li>\n</ol>'')", span="30-30"];
m9_9 [cluster="CommonMark.Tests.ListTests.EmptyList1()", file="ListTests.cs", label="Exit CommonMark.Tests.ListTests.EmptyList1()", span="28-28"];
m9_3 [cluster="CommonMark.Tests.Helpers.ExecuteTest(string, string, CommonMark.CommonMarkSettings)", file="ListTests.cs", label="Entry CommonMark.Tests.Helpers.ExecuteTest(string, string, CommonMark.CommonMarkSettings)", span="46-46"];
m15_10 [cluster="object.MemberwiseClone()", file="StringContent.cs", label="Entry object.MemberwiseClone()", span="0-0"];
m15_5 [cluster="System.Func<T, TResult>.Invoke(T)", file="StringContent.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m15_6 [cluster="CommonMark.CommonMarkException.CommonMarkException(string, System.Exception)", file="StringContent.cs", label="Entry CommonMark.CommonMarkException.CommonMarkException(string, System.Exception)", span="35-35"];
m15_7 [cluster="CommonMark.CommonMarkSettings.Clone()", file="StringContent.cs", label="Entry CommonMark.CommonMarkSettings.Clone()", span="107-107"];
m15_8 [cluster="CommonMark.CommonMarkSettings.Clone()", file="StringContent.cs", label="return (CommonMarkSettings)this.MemberwiseClone();", span="109-109"];
m15_9 [cluster="CommonMark.CommonMarkSettings.Clone()", file="StringContent.cs", label="Exit CommonMark.CommonMarkSettings.Clone()", span="107-107"];
m15_0 [cluster="lambda expression", file="StringContent.cs", label="Entry lambda expression", span="79-89"];
m15_1 [cluster="lambda expression", file="StringContent.cs", label="return orig(x);", span="83-83"];
m15_2 [cluster="lambda expression", file="StringContent.cs", label=Exception, span="85-85"];
m15_3 [cluster="lambda expression", file="StringContent.cs", label="throw new CommonMarkException(''An error occurred while executing the CommonMarkSettings.UriResolver delegate. View inner exception for details.'', ex);", span="87-87"];
m15_4 [cluster="lambda expression", file="StringContent.cs", label="Exit lambda expression", span="79-89"];
m15_11 [file="StringContent.cs", label=orig, span=""];
m15_12 [file="StringContent.cs", label="CommonMark.CommonMarkSettings", span=""];
m17_13 [cluster="CommonMark.Utilities.CheckUnicodeCategory(char, out bool, out bool)", file="Utilities.cs", label="Entry CommonMark.Utilities.CheckUnicodeCategory(char, out bool, out bool)", span="49-49"];
m17_14 [cluster="CommonMark.Utilities.CheckUnicodeCategory(char, out bool, out bool)", file="Utilities.cs", label="c <= 'ÿ'", span="58-58"];
m17_15 [cluster="CommonMark.Utilities.CheckUnicodeCategory(char, out bool, out bool)", file="Utilities.cs", label="space = c == ' ' || (c >= '\t' && c <= '\r') || c == '\u00a0' || c == '\u0085'", span="60-60"];
m17_16 [cluster="CommonMark.Utilities.CheckUnicodeCategory(char, out bool, out bool)", file="Utilities.cs", label="punctuation = (c >= 33 && c <= 47) || (c >= 58 && c <= 64) || (c >= 91 && c <= 96) || (c >= 123 && c <= 126)", span="61-61"];
m17_17 [cluster="CommonMark.Utilities.CheckUnicodeCategory(char, out bool, out bool)", file="Utilities.cs", label="var category = System.Globalization.CharUnicodeInfo.GetUnicodeCategory(c)", span="65-65"];
m17_18 [cluster="CommonMark.Utilities.CheckUnicodeCategory(char, out bool, out bool)", file="Utilities.cs", label="space = category == System.Globalization.UnicodeCategory.SpaceSeparator\r\n                    || category == System.Globalization.UnicodeCategory.LineSeparator\r\n                    || category == System.Globalization.UnicodeCategory.ParagraphSeparator", span="66-68"];
m17_19 [cluster="CommonMark.Utilities.CheckUnicodeCategory(char, out bool, out bool)", file="Utilities.cs", label="punctuation = !space &&\r\n                    (category == System.Globalization.UnicodeCategory.ConnectorPunctuation\r\n                    || category == System.Globalization.UnicodeCategory.DashPunctuation\r\n                    || category == System.Globalization.UnicodeCategory.OpenPunctuation\r\n                    || category == System.Globalization.UnicodeCategory.ClosePunctuation\r\n                    || category == System.Globalization.UnicodeCategory.InitialQuotePunctuation\r\n                    || category == System.Globalization.UnicodeCategory.FinalQuotePunctuation\r\n                    || category == System.Globalization.UnicodeCategory.OtherPunctuation)", span="69-76"];
m17_20 [cluster="CommonMark.Utilities.CheckUnicodeCategory(char, out bool, out bool)", file="Utilities.cs", label="Exit CommonMark.Utilities.CheckUnicodeCategory(char, out bool, out bool)", span="49-49"];
m17_0 [cluster="CommonMark.Utilities.Warning(string, params object[])", file="Utilities.cs", label="Entry CommonMark.Utilities.Warning(string, params object[])", span="17-17"];
m17_1 [cluster="CommonMark.Utilities.Warning(string, params object[])", file="Utilities.cs", label="args != null && args.Length > 0", span="19-19"];
m17_2 [cluster="CommonMark.Utilities.Warning(string, params object[])", file="Utilities.cs", label="message = string.Format(System.Globalization.CultureInfo.InvariantCulture, message, args)", span="20-20"];
m17_3 [cluster="CommonMark.Utilities.Warning(string, params object[])", file="Utilities.cs", label="System.Diagnostics.Debug.WriteLine(message, ''Warning'')", span="22-22"];
m17_4 [cluster="CommonMark.Utilities.Warning(string, params object[])", file="Utilities.cs", label="Exit CommonMark.Utilities.Warning(string, params object[])", span="17-17"];
m17_5 [cluster="string.Format(System.IFormatProvider, string, params object[])", file="Utilities.cs", label="Entry string.Format(System.IFormatProvider, string, params object[])", span="0-0"];
m17_21 [cluster="System.Globalization.CharUnicodeInfo.GetUnicodeCategory(char)", file="Utilities.cs", label="Entry System.Globalization.CharUnicodeInfo.GetUnicodeCategory(char)", span="0-0"];
m17_6 [cluster="System.Diagnostics.Debug.WriteLine(string, string)", file="Utilities.cs", label="Entry System.Diagnostics.Debug.WriteLine(string, string)", span="0-0"];
m17_10 [cluster="CommonMark.Utilities.IsAsciiLetterOrDigit(char)", file="Utilities.cs", label="Entry CommonMark.Utilities.IsAsciiLetterOrDigit(char)", span="37-37"];
m17_11 [cluster="CommonMark.Utilities.IsAsciiLetterOrDigit(char)", file="Utilities.cs", label="return (c >= 'a' && c <= 'z') || (c >= '0' && c <= '9') || (c >= 'A' && c <= 'Z');", span="40-40"];
m17_12 [cluster="CommonMark.Utilities.IsAsciiLetterOrDigit(char)", file="Utilities.cs", label="Exit CommonMark.Utilities.IsAsciiLetterOrDigit(char)", span="37-37"];
m17_7 [cluster="CommonMark.Utilities.IsEscapableSymbol(char)", file="Utilities.cs", label="Entry CommonMark.Utilities.IsEscapableSymbol(char)", span="28-28"];
m17_8 [cluster="CommonMark.Utilities.IsEscapableSymbol(char)", file="Utilities.cs", label="return (c > ' ' && c < '0') || (c > '9' && c < 'A') || (c > 'Z' && c < 'a') || (c > 'z' && c < 127) || c == '•';", span="31-31"];
m17_9 [cluster="CommonMark.Utilities.IsEscapableSymbol(char)", file="Utilities.cs", label="Exit CommonMark.Utilities.IsEscapableSymbol(char)", span="28-28"];
m0_94 -> m0_96  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_95 -> m0_97  [color=darkseagreen4, key=1, label=p, style=dashed];
m0_9 -> m0_16  [color=green, key=1, label=string, style=dashed];
m0_9 -> m0_21  [color=green, key=1, label=string, style=dashed];
m0_9 -> m0_24  [color=green, key=1, label=int, style=dashed];
m0_13 -> m0_16  [color=green, key=1, label=colonpos, style=dashed];
m0_20 -> m0_24  [color=green, key=1, label=i, style=dashed];
m0_20 -> m0_27  [color=green, key=1, label=i, style=dashed];
m0_27 -> m0_27  [color=green, key=1, label=i, style=dashed];
m0_22 -> m0_25  [color=green, key=1, label=c, style=dashed];
m0_18 -> m0_8  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
m0_37 -> m0_42  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_37 -> m0_49  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_37 -> m0_52  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_37 -> m0_62  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_48 -> m0_52  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_48 -> m0_57  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_50 -> m0_53  [color=darkseagreen4, key=1, label=nextChar, style=dashed];
m0_50 -> m0_55  [color=darkseagreen4, key=1, label=nextChar, style=dashed];
m0_47 -> m0_55  [color=darkseagreen4, key=1, label=tagNameEnded, style=dashed];
m0_57 -> m0_57  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_54 -> m0_55  [color=darkseagreen4, key=1, label=tagNameEnded, style=dashed];
m0_81 -> m0_84  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_21 -> m1_23  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
m1_21 -> m1_25  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
m1_169 -> m1_321  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_169 -> m1_194  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_169 -> m1_220  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_169 -> m1_248  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_169 -> m1_276  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_169 -> m1_278  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_169 -> m1_292  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_169 -> m1_323  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_169 -> m1_325  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_169 -> m1_337  [color=darkseagreen4, key=1, label="ref CommonMark.Syntax.Block", style=dashed];
m1_177 -> m1_243  [color=darkseagreen4, key=1, label=cur, style=dashed];
m1_177 -> m1_303  [color=darkseagreen4, key=1, label=cur, style=dashed];
m1_177 -> m1_305  [color=darkseagreen4, key=1, label=cur, style=dashed];
m1_186 -> m1_192  [color=darkseagreen4, key=1, label=curChar, style=dashed];
m1_238 -> m1_246  [color=darkseagreen4, key=1, label=curChar, style=dashed];
m1_267 -> m1_292  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_272 -> m1_292  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_273 -> m1_285  [color=green, key=1, label=data, style=dashed];
m1_320 -> m1_322  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_320 -> m1_323  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_320 -> m1_324  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_320 -> m1_325  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_171 -> m1_220  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_171 -> m1_221  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_171 -> m1_292  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_185 -> m1_187  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
m1_188 -> m1_192  [color=darkseagreen4, key=1, label=indent, style=dashed];
m1_188 -> m1_198  [color=darkseagreen4, key=1, label=indent, style=dashed];
m1_188 -> m1_204  [color=darkseagreen4, key=1, label=indent, style=dashed];
m1_199 -> m1_220  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_199 -> m1_221  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_199 -> m1_292  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_205 -> m1_220  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_205 -> m1_221  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_205 -> m1_292  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_221 -> m1_221  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_221 -> m1_292  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_237 -> m1_239  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
m1_240 -> m1_242  [color=darkseagreen4, key=1, label=indent, style=dashed];
m1_244 -> m1_292  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_291 -> m1_295  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
m1_178 -> m1_234  [color=darkseagreen4, key=1, label=blank, style=dashed];
m1_182 -> m1_234  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_182 -> m1_236  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_182 -> m1_285  [color=green, key=1, label=container, style=dashed];
m1_182 -> m1_290  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_182 -> m1_303  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_182 -> m1_310  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_182 -> m1_312  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_182 -> m1_316  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_182 -> m1_319  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_182 -> m1_330  [color=green, key=1, label=container, style=dashed];
m1_182 -> m1_332  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_184 -> m1_190  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_184 -> m1_198  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_184 -> m1_215  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_184 -> m1_234  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_184 -> m1_236  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_184 -> m1_285  [color=green, key=1, label=container, style=dashed];
m1_184 -> m1_290  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_184 -> m1_303  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_184 -> m1_310  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_184 -> m1_312  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_184 -> m1_316  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_184 -> m1_319  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_184 -> m1_330  [color=green, key=1, label=container, style=dashed];
m1_184 -> m1_332  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_233 -> m1_303  [color=darkseagreen4, key=1, label=last_matched_container, style=dashed];
m1_233 -> m1_305  [color=darkseagreen4, key=1, label=last_matched_container, style=dashed];
m1_219 -> m1_222  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_232 -> m1_234  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_232 -> m1_236  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_232 -> m1_285  [color=green, key=1, label=container, style=dashed];
m1_232 -> m1_290  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_232 -> m1_303  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_232 -> m1_310  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_232 -> m1_312  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_232 -> m1_316  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_232 -> m1_319  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_232 -> m1_330  [color=green, key=1, label=container, style=dashed];
m1_232 -> m1_332  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_187 -> m1_187  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
m1_193 -> m1_195  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_193 -> m1_220  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_193 -> m1_221  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_193 -> m1_292  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_201 -> m1_220  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_201 -> m1_221  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_201 -> m1_292  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_207 -> m1_220  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_207 -> m1_221  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_207 -> m1_292  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_189 -> m1_200  [color=darkseagreen4, key=1, label=blank, style=dashed];
m1_189 -> m1_206  [color=darkseagreen4, key=1, label=blank, style=dashed];
m1_189 -> m1_212  [color=darkseagreen4, key=1, label=blank, style=dashed];
m1_189 -> m1_217  [color=darkseagreen4, key=1, label=blank, style=dashed];
m1_189 -> m1_224  [color=darkseagreen4, key=1, label=blank, style=dashed];
m1_189 -> m1_228  [color=darkseagreen4, key=1, label=blank, style=dashed];
m1_189 -> m1_234  [color=darkseagreen4, key=1, label=blank, style=dashed];
m1_195 -> m1_195  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_195 -> m1_220  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_195 -> m1_221  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_195 -> m1_292  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_211 -> m1_231  [color=darkseagreen4, key=1, label=all_matched, style=dashed];
m1_216 -> m1_231  [color=darkseagreen4, key=1, label=all_matched, style=dashed];
m1_222 -> m1_222  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_239 -> m1_239  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
m1_247 -> m1_249  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_247 -> m1_292  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_252 -> m1_292  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_261 -> m1_292  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_274 -> m1_276  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_274 -> m1_278  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_274 -> m1_281  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_274 -> m1_292  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_241 -> m1_243  [color=darkseagreen4, key=1, label=blank, style=dashed];
m1_249 -> m1_249  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_249 -> m1_292  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_271 -> m1_290  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_271 -> m1_303  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_271 -> m1_310  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_271 -> m1_312  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_271 -> m1_316  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_271 -> m1_319  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_271 -> m1_330  [color=green, key=1, label=container, style=dashed];
m1_271 -> m1_332  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_275 -> m1_277  [color=green, key=1, label=i, style=dashed];
m1_275 -> m1_278  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_275 -> m1_280  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_281 -> m1_281  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_281 -> m1_292  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_283 -> m1_292  [color=darkseagreen4, key=1, label=offset, style=dashed];
m1_277 -> m1_277  [color=green, key=1, label=i, style=dashed];
m1_277 -> m1_278  [color=green, key=1, label=i, style=dashed];
m1_277 -> m1_280  [color=green, key=1, label=i, style=dashed];
m1_295 -> m1_295  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
m1_297 -> m1_303  [color=darkseagreen4, key=1, label=blank, style=dashed];
m1_297 -> m1_318  [color=darkseagreen4, key=1, label=blank, style=dashed];
m1_322 -> m1_322  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_322 -> m1_323  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_322 -> m1_324  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_322 -> m1_325  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_324 -> m1_324  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_324 -> m1_325  [color=darkseagreen4, key=1, label=p, style=dashed];
m1_324 -> m1_323  [color=green, key=1, label=p, style=dashed];
m1_41 -> m1_56  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
m1_41 -> m1_48  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
m1_41 -> m1_72  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
m1_62 -> m1_64  [color=green, key=1, label=item, style=dashed];
m1_62 -> m1_65  [color=green, key=1, label=item, style=dashed];
m1_62 -> m1_69  [color=green, key=1, label=item, style=dashed];
m1_67 -> m1_69  [color=darkseagreen4, key=1, label=subitem, style=dashed];
m1_100 -> m1_104  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
m1_100 -> m1_111  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
m1_100 -> m1_112  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
m1_100 -> m1_114  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
m1_100 -> m1_110  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
m1_101 -> m1_112  [color=green, key=1, label=stack, style=dashed];
m1_101 -> m1_116  [color=green, key=1, label=stack, style=dashed];
m1_125 -> m1_145  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_125 -> m1_147  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_125 -> m1_148  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_125 -> m1_133  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_125 -> m1_134  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_125 -> m1_141  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_125 -> m1_156  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_129 -> m1_134  [color=green, key=1, label=len, style=dashed];
m1_129 -> m1_141  [color=green, key=1, label=len, style=dashed];
m1_129 -> m1_145  [color=green, key=1, label=len, style=dashed];
m1_129 -> m1_148  [color=green, key=1, label=len, style=dashed];
m1_130 -> m1_156  [color=darkseagreen4, key=1, label=startpos, style=dashed];
m1_131 -> m1_139  [color=green, key=1, label=c, style=dashed];
m1_131 -> m1_145  [color=green, key=1, label=c, style=dashed];
m1_133 -> m1_133  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_133 -> m1_156  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_142 -> m1_145  [color=green, key=1, label=int, style=dashed];
m1_142 -> m1_147  [color=green, key=1, label=int, style=dashed];
m1_147 -> m1_147  [color=green, key=1, label=int, style=dashed];
m1_147 -> m1_156  [color=green, key=1, label=int, style=dashed];
m1_128 -> m1_157  [color=green, key=1, label="out CommonMark.Syntax.ListData", style=dashed];
m1_136 -> m1_157  [color=darkseagreen4, key=1, label="out CommonMark.Syntax.ListData", style=dashed];
m1_150 -> m1_157  [color=green, key=1, label="out CommonMark.Syntax.ListData", style=dashed];
m1_6 -> m1_8  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
m1_9 -> m1_15  [color=green, key=1, label=len, style=dashed];
m1_29 -> m1_40  [color=darkseagreen4, key=1, label="ref CommonMark.Syntax.Block", style=dashed];
m1_30 -> m1_35  [color=darkseagreen4, key=1, label=container, style=dashed];
m1_31 -> m1_34  [color=darkseagreen4, key=1, label=b, style=dashed];
m1_31 -> m1_35  [color=darkseagreen4, key=1, label=b, style=dashed];
m1_33 -> m1_34  [color=green, key=1, label=b, style=dashed];
m1_33 -> m1_35  [color=green, key=1, label=b, style=dashed];
m1_160 -> m1_164  [color=darkseagreen4, key=1, label="CommonMark.Syntax.StringContent", style=dashed];
m2_5 -> m2_7  [color=green, key=1, label=reader, style=dashed];
m2_4 -> m2_7  [color=green, key=1, label=linenum, style=dashed];
m2_4 -> m2_8  [color=green, key=1, label=linenum, style=dashed];
m2_4 -> m2_14  [color=green, key=1, label=linenum, style=dashed];
m2_4 -> m2_16  [color=green, key=1, label=linenum, style=dashed];
m2_4 -> m2_24  [color=green, key=1, label=linenum, style=dashed];
m2_7 -> m2_15  [color=green, key=1, label=cur, style=dashed];
m2_7 -> m2_24  [color=green, key=1, label=cur, style=dashed];
m2_7 -> m2_7  [color=darkseagreen4, key=1, label=cur, style=dashed];
m2_7 -> m2_14  [color=darkseagreen4, key=1, label=cur, style=dashed];
m2_7 -> m2_16  [color=darkseagreen4, key=1, label=cur, style=dashed];
m2_7 -> m2_21  [color=darkseagreen4, key=1, label=cur, style=dashed];
m2_7 -> m2_22  [color=darkseagreen4, key=1, label=cur, style=dashed];
m2_7 -> m2_23  [color=darkseagreen4, key=1, label=cur, style=dashed];
m2_7 -> m2_28  [color=darkseagreen4, key=1, label=cur, style=dashed];
m2_7 -> m2_29  [color=darkseagreen4, key=1, label=cur, style=dashed];
m2_3 -> m2_7  [color=green, key=1, label=cur, style=dashed];
m2_3 -> m2_14  [color=green, key=1, label=cur, style=dashed];
m2_3 -> m2_15  [color=green, key=1, label=cur, style=dashed];
m2_3 -> m2_16  [color=green, key=1, label=cur, style=dashed];
m2_3 -> m2_21  [color=green, key=1, label=cur, style=dashed];
m2_3 -> m2_22  [color=green, key=1, label=cur, style=dashed];
m2_3 -> m2_23  [color=green, key=1, label=cur, style=dashed];
m2_3 -> m2_24  [color=green, key=1, label=cur, style=dashed];
m2_3 -> m2_28  [color=green, key=1, label=cur, style=dashed];
m2_3 -> m2_29  [color=green, key=1, label=cur, style=dashed];
m2_17 -> m2_24  [color=green, key=1, label=cur, style=dashed];
m2_17 -> m2_21  [color=darkseagreen4, key=1, label=cur, style=dashed];
m2_17 -> m2_22  [color=darkseagreen4, key=1, label=cur, style=dashed];
m2_17 -> m2_23  [color=darkseagreen4, key=1, label=cur, style=dashed];
m2_17 -> m2_28  [color=darkseagreen4, key=1, label=cur, style=dashed];
m2_17 -> m2_29  [color=darkseagreen4, key=1, label=cur, style=dashed];
m2_8 -> m2_24  [color=green, key=1, label=linenum, style=dashed];
m2_8 -> m2_8  [color=green, key=1, label=linenum, style=dashed];
m2_8 -> m2_14  [color=green, key=1, label=linenum, style=dashed];
m2_8 -> m2_16  [color=green, key=1, label=linenum, style=dashed];
m2_84 -> m2_89  [color=darkseagreen4, key=1, label="CommonMark.CommonMarkSettings", style=dashed];
m2_87 -> m2_89  [color=darkseagreen4, key=1, label=reader, style=dashed];
m2_88 -> m2_90  [color=darkseagreen4, key=1, label=writer, style=dashed];
m2_56 -> m2_59  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m2_56 -> m2_61  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
m2_56 -> m2_63  [color=darkseagreen4, key=1, label="CommonMark.CommonMarkSettings", style=dashed];
m2_56 -> m2_65  [color=darkseagreen4, key=1, label="CommonMark.CommonMarkSettings", style=dashed];
m2_56 -> m2_66  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
m2_56 -> m2_67  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
m2_64 -> m2_67  [color=darkseagreen4, key=1, label="CommonMark.CommonMarkSettings", style=dashed];
m2_40 -> m2_43  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
m2_40 -> m2_45  [color=darkseagreen4, key=1, label="CommonMark.CommonMarkSettings", style=dashed];
m2_40 -> m2_47  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
m2_77 -> m2_81  [color=darkseagreen4, key=1, label="CommonMark.CommonMarkSettings", style=dashed];
m2_77 -> m2_82  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m2_80 -> m2_82  [color=darkseagreen4, key=1, label=document, style=dashed];
m2_79 -> m2_81  [color=darkseagreen4, key=1, label="CommonMark.CommonMarkSettings", style=dashed];
m2_79 -> m2_82  [color=darkseagreen4, key=1, label="CommonMark.CommonMarkSettings", style=dashed];
m4_5 -> m4_7  [color=green, key=1, label=version, style=dashed];
m15_11 -> m15_1  [color=darkseagreen4, key=1, label=orig, style=dashed];
m15_12 -> m15_8  [color=darkseagreen4, key=1, label="CommonMark.CommonMarkSettings", style=dashed];
m17_15 -> m17_20  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m17_18 -> m17_20  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m17_0 -> m17_3  [color=darkseagreen4, key=1, label=string, style=dashed];
}
