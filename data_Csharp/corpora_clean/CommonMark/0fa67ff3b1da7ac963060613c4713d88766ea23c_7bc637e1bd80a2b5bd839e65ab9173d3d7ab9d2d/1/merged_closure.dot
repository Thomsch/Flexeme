digraph  {
d410 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", color=green, community=0, label="p >= 0 && (ln[p] == ' ' || ln[p] == '\t' || ln[p] == '\n')", prediction=0, span="893-893"];
d252 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="var ln = line.Line", span="479-479"];
d409 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="int p = ln.Length - 1", span="890-890"];
d411 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="p--", span="894-894"];
d412 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", color=green, community=0, label="int px = p", prediction=1, span="896-896"];
d415 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", color=green, community=0, label="p < 0 || (ln[p] != ' ' && ln[p] != '\t')", prediction=0, span="903-903"];
d413 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="p >= 0 && ln[p] == '#'", span="899-899"];
d414 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="p--", span="900-900"];
d416 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", color=green, community=0, label="p = px", prediction=0, span="904-904"];
d417 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", color=green, community=0, label="p >= first_nonspace && (ln[p] == ' ' || ln[p] == '\t')", prediction=0, span="907-907"];
d379 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="FindFirstNonspace(ln, offset, column, out first_nonspace, out first_nonspace_column, out curChar)", span="795-795"];
d418 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", color=green, community=0, label="p--", prediction=0, span="908-908"];
d419 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="AddLine(container, line, ln, first_nonspace, remainingSpaces, p - first_nonspace + 1)", span="910-910"];
d6 [cluster="CommonMark.Parser.BlockMethods.AddLine(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo, string, int, int, int)", label="Entry CommonMark.Parser.BlockMethods.AddLine(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo, string, int, int, int)", span="34-34"];
d174 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="Entry CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", span="338-338"];
d213 [cluster="CommonMark.Parser.BlockMethods.AdvanceOptionalSpace(string, ref int, ref int, ref int)", label="Entry CommonMark.Parser.BlockMethods.AdvanceOptionalSpace(string, ref int, ref int, ref int)", span="403-403"];
d230 [cluster="CommonMark.Parser.BlockMethods.AdvanceOffset(string, int, bool, ref int, ref int, ref int)", label="Entry CommonMark.Parser.BlockMethods.AdvanceOffset(string, int, bool, ref int, ref int, ref int)", span="430-430"];
d251 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="Entry CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", span="477-477"];
d430 [cluster="CommonMark.Parser.BlockMethods.FindFirstNonspace(string, int, int, out int, out int, out char)", label="Entry CommonMark.Parser.BlockMethods.FindFirstNonspace(string, int, int, out int, out int, out char)", span="940-940"];
d253 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="Block last_matched_container", span="481-481"];
d270 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="FindFirstNonspace(ln, offset, column, out first_nonspace, out first_nonspace_column, out curChar)", span="517-517"];
d276 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="AdvanceOffset(ln, indent + 1, true, ref offset, ref column, ref remainingSpaces)", span="528-528"];
d277 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="AdvanceOptionalSpace(ln, ref offset, ref column, ref remainingSpaces)", span="529-529"];
d281 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="AdvanceOffset(ln, container.ListData.MarkerOffset + container.ListData.Padding, true, ref offset, ref column, ref remainingSpaces)", span="543-543"];
d283 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="AdvanceOffset(ln, first_nonspace - offset, false, ref offset, ref column, ref remainingSpaces)", span="550-550"];
d287 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="AdvanceOffset(ln, CODE_INDENT, true, ref offset, ref column, ref remainingSpaces)", span="563-563"];
d289 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="AdvanceOffset(ln, first_nonspace - offset, false, ref offset, ref column, ref remainingSpaces)", span="565-565"];
d302 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="i > 0 && ln[offset] == ' '", span="596-596"];
d321 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="FindFirstNonspace(ln, offset, column, out first_nonspace, out first_nonspace_column, out curChar)", span="652-652"];
d326 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="AdvanceOffset(ln, first_nonspace + 1 - offset, false, ref offset, ref column, ref remainingSpaces)", span="662-662"];
d327 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="AdvanceOptionalSpace(ln, ref offset, ref column, ref remainingSpaces)", span="663-663"];
d329 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="!indented && curChar == '#' && 0 != (matched = Scanner.scan_atx_heading_start(ln, first_nonspace, ln.Length, out i))", span="668-668"];
d330 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="AdvanceOffset(ln, first_nonspace + matched - offset, false, ref offset, ref column, ref remainingSpaces)", span="671-671"];
d333 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="!indented && (curChar == '`' || curChar == '~') && 0 != (matched = Scanner.scan_open_code_fence(ln, first_nonspace, ln.Length))", span="676-676"];
d339 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="AdvanceOffset(ln, first_nonspace + matched - offset, false, ref offset, ref column, ref remainingSpaces)", span="685-685"];
d340 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="!indented && curChar == '<' && \r\n                    (0 != (matched = (int)Scanner.scan_html_block_start(ln, first_nonspace, ln.Length))\r\n                    || (container.Tag != BlockTag.Paragraph && 0 != (matched = (int)Scanner.scan_html_block_start_7(ln, first_nonspace, ln.Length)))\r\n                    )", span="688-691"];
d343 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="!indented && container.Tag == BlockTag.Paragraph && (curChar == '=' || curChar == '-')\r\n                        && 0 != (matched = Scanner.scan_setext_heading_line(ln, first_nonspace, ln.Length))", span="699-700"];
d346 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="AdvanceOffset(ln, ln.Length - 1 - offset, false, ref offset, ref column, ref remainingSpaces)", span="705-705"];
d347 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="!indented \r\n                    && !(container.Tag == BlockTag.Paragraph && !all_matched) \r\n                    && 0 != (Scanner.scan_thematic_break(ln, first_nonspace, ln.Length))", span="708-710"];
d351 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="AdvanceOffset(ln, ln.Length - 1 - offset, false, ref offset, ref column, ref remainingSpaces)", span="717-717"];
d352 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="(!indented || container.Tag == BlockTag.List) \r\n                    && 0 != (matched = ParseListMarker(ln, first_nonspace, out data))", span="720-721"];
d353 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="AdvanceOffset(ln, first_nonspace + matched - offset, false, ref offset, ref column, ref remainingSpaces)", span="725-725"];
d358 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="!AdvanceOptionalSpace(ln, ref offset, ref column, ref remainingSpaces)", span="733-733"];
d361 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="column - prevColumn > CODE_INDENT || ln[offset] == '\n'", span="743-743"];
d366 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="AdvanceOptionalSpace(ln, ref offset, ref column, ref remainingSpaces)", span="751-751"];
d375 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="AdvanceOffset(ln, CODE_INDENT, true, ref offset, ref column, ref remainingSpaces)", span="775-775"];
d390 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="AddLine(cur, line, ln, offset, remainingSpaces)", span="830-830"];
d397 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="AddLine(container, line, ln, offset, remainingSpaces)", span="850-850"];
d399 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="(indent <= 3\r\n                      && curChar == container.FencedCodeData.FenceChar)\r\n                      && (0 != Scanner.scan_close_code_fence(ln, first_nonspace, container.FencedCodeData.FenceLength, ln.Length))", span="856-858"];
d401 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="AddLine(container, line, ln, offset, remainingSpaces)", span="865-865"];
d403 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="AddLine(container, line, ln, offset, remainingSpaces)", span="872-872"];
d404 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="Scanner.scan_html_block_end(container.HtmlBlockType, ln, first_nonspace, ln.Length)", span="874-874"];
d423 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="AddLine(container, line, ln, first_nonspace, remainingSpaces)", span="918-918"];
d426 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="AddLine(container, line, ln, first_nonspace, remainingSpaces)", span="926-926"];
d427 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="Utilities.Warning(''Line {0} with container type {1} did not match any condition:\n\''{2}\'''', line.LineNumber, container.Tag, ln)", span="932-932"];
d408 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container.Tag == BlockTag.AtxHeading", span="887-887"];
d254 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="var offset = 0", span="484-484"];
d255 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="var column = 0", span="487-487"];
d303 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="offset++", span="598-598"];
d304 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="column++", span="599-599"];
d320 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container.Tag != BlockTag.FencedCode &&\r\n                   container.Tag != BlockTag.IndentedCode &&\r\n                   container.Tag != BlockTag.HtmlBlock", span="647-649"];
d377 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="AcceptsLines(container.Tag)", span="783-783"];
d374 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="indented && !maybeLazy && !blank", span="773-773"];
d380 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="indent = first_nonspace_column - column", span="796-796"];
d381 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="blank = curChar == '\n'", span="797-797"];
d425 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container = CreateChildBlock(container, line, BlockTag.Paragraph,  first_nonspace)", span="925-925"];
d318 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="BreakOutOfLists(ref container, line)", span="642-642"];
d328 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container = CreateChildBlock(container, line, BlockTag.BlockQuote, first_nonspace)", span="665-665"];
d331 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container = CreateChildBlock(container, line, BlockTag.AtxHeading, first_nonspace)", span="672-672"];
d334 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container = CreateChildBlock(container, line, BlockTag.FencedCode, first_nonspace)", span="679-679"];
d341 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container = CreateChildBlock(container, line, BlockTag.HtmlBlock, first_nonspace)", span="694-694"];
d372 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container = CreateChildBlock(container, line, BlockTag.ListItem, first_nonspace)", span="770-770"];
d376 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container = CreateChildBlock(container, line, BlockTag.IndentedCode, offset)", span="776-776"];
d256 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="var remainingSpaces = 0", span="490-490"];
d267 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="var container = cur.Top", span="508-508"];
d269 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container = container.LastChild", span="515-515"];
d315 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container = container.Parent", span="633-633"];
d350 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container = container.Parent", span="716-716"];
d420 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="Finalize(container, line)", span="911-911"];
d21 [cluster="CommonMark.Parser.BlockMethods.AddLine(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo, string, int, int, int)", label="Exit CommonMark.Parser.BlockMethods.AddLine(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo, string, int, int, int)", span="34-34"];
d7 [cluster="CommonMark.Parser.BlockMethods.AddLine(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo, string, int, int, int)", label="!block.IsOpen", span="36-36"];
d8 [cluster="CommonMark.Parser.BlockMethods.AddLine(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo, string, int, int, int)", label="throw new CommonMarkException(string.Format(CultureInfo.InvariantCulture, ''Attempted to add line '{0}' to closed container ({1}).'', ln, block.Tag));", span="37-37"];
d9 [cluster="CommonMark.Parser.BlockMethods.AddLine(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo, string, int, int, int)", label="var len = length == -1 ? ln.Length - offset : length", span="39-39"];
d12 [cluster="CommonMark.Parser.BlockMethods.AddLine(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo, string, int, int, int)", label="var curSC = block.StringContent", span="43-43"];
d14 [cluster="CommonMark.Parser.BlockMethods.AddLine(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo, string, int, int, int)", label="block.StringContent = curSC = new StringContent()", span="46-46"];
d15 [cluster="CommonMark.Parser.BlockMethods.AddLine(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo, string, int, int, int)", label="lineInfo.IsTrackingPositions", span="47-47"];
d16 [cluster="CommonMark.Parser.BlockMethods.AddLine(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo, string, int, int, int)", label="curSC.PositionTracker = new PositionTracker(lineInfo.LineOffset)", span="48-48"];
d17 [cluster="CommonMark.Parser.BlockMethods.AddLine(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo, string, int, int, int)", label="lineInfo.IsTrackingPositions", span="51-51"];
d18 [cluster="CommonMark.Parser.BlockMethods.AddLine(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo, string, int, int, int)", label="curSC.PositionTracker.AddOffset(lineInfo, offset, len)", span="52-52"];
d19 [cluster="CommonMark.Parser.BlockMethods.AddLine(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo, string, int, int, int)", label="curSC.Append(Spaces, 0, remainingSpaces)", span="54-54"];
d20 [cluster="CommonMark.Parser.BlockMethods.AddLine(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo, string, int, int, int)", label="curSC.Append(ln, offset, len)", span="55-55"];
d263 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="Block cur = curptr", span="502-502"];
d257 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="int first_nonspace", span="493-493"];
d176 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="int startpos", span="341-341"];
d206 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="Exit CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", span="338-338"];
d259 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="int matched", span="498-498"];
d175 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="char c", span="340-340"];
d178 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="var len = ln.Length", span="343-343"];
d179 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="startpos = pos", span="345-345"];
d180 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="c = ln[pos]", span="346-346"];
d181 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="c == '+' || c == '•' || ((c == '*' || c == '-') && 0 == Scanner.scan_thematic_break(ln, pos, len))", span="348-348"];
d182 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="pos++", span="350-350"];
d183 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="pos == len || !Utilities.IsWhitespace(ln[pos])", span="351-351"];
d190 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="pos < len - 1", span="363-363"];
d191 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="c = ln[++pos]", span="365-365"];
d194 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="pos >= len - 1 || (c != '.' && c != ')')", span="373-373"];
d196 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="pos++", span="376-376"];
d197 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="pos == len || !Utilities.IsWhitespace(ln[pos])", span="377-377"];
d205 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="return (pos - startpos);", span="392-392"];
d261 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="ListData data", span="500-500"];
d229 [cluster="CommonMark.Parser.BlockMethods.AdvanceOptionalSpace(string, ref int, ref int, ref int)", label="Exit CommonMark.Parser.BlockMethods.AdvanceOptionalSpace(string, ref int, ref int, ref int)", span="403-403"];
d214 [cluster="CommonMark.Parser.BlockMethods.AdvanceOptionalSpace(string, ref int, ref int, ref int)", label="remainingSpaces > 0", span="405-405"];
d215 [cluster="CommonMark.Parser.BlockMethods.AdvanceOptionalSpace(string, ref int, ref int, ref int)", label="remainingSpaces--", span="407-407"];
d217 [cluster="CommonMark.Parser.BlockMethods.AdvanceOptionalSpace(string, ref int, ref int, ref int)", label="var c = line[offset]", span="411-411"];
d219 [cluster="CommonMark.Parser.BlockMethods.AdvanceOptionalSpace(string, ref int, ref int, ref int)", label="offset++", span="414-414"];
d220 [cluster="CommonMark.Parser.BlockMethods.AdvanceOptionalSpace(string, ref int, ref int, ref int)", label="column++", span="415-415"];
d223 [cluster="CommonMark.Parser.BlockMethods.AdvanceOptionalSpace(string, ref int, ref int, ref int)", label="offset++", span="420-420"];
d224 [cluster="CommonMark.Parser.BlockMethods.AdvanceOptionalSpace(string, ref int, ref int, ref int)", label="var chars_to_tab = 4 - (column % TabSize)", span="421-421"];
d225 [cluster="CommonMark.Parser.BlockMethods.AdvanceOptionalSpace(string, ref int, ref int, ref int)", label="column += chars_to_tab", span="422-422"];
d31 [cluster="CommonMark.Parser.BlockMethods.EndsWithBlankLine(CommonMark.Syntax.Block)", label="return true;", span="66-66"];
d33 [cluster="CommonMark.Parser.BlockMethods.EndsWithBlankLine(CommonMark.Syntax.Block)", label="return false;", span="69-69"];
d250 [cluster="CommonMark.Parser.BlockMethods.AdvanceOffset(string, int, bool, ref int, ref int, ref int)", label="Exit CommonMark.Parser.BlockMethods.AdvanceOffset(string, int, bool, ref int, ref int, ref int)", span="430-430"];
d231 [cluster="CommonMark.Parser.BlockMethods.AdvanceOffset(string, int, bool, ref int, ref int, ref int)", label=columns, span="432-432"];
d232 [cluster="CommonMark.Parser.BlockMethods.AdvanceOffset(string, int, bool, ref int, ref int, ref int)", label="remainingSpaces > count", span="434-434"];
d233 [cluster="CommonMark.Parser.BlockMethods.AdvanceOffset(string, int, bool, ref int, ref int, ref int)", label="remainingSpaces -= count", span="436-436"];
d235 [cluster="CommonMark.Parser.BlockMethods.AdvanceOffset(string, int, bool, ref int, ref int, ref int)", label="count -= remainingSpaces", span="441-441"];
d239 [cluster="CommonMark.Parser.BlockMethods.AdvanceOffset(string, int, bool, ref int, ref int, ref int)", label="count > 0 && (c = line[offset]) != '\n'", span="451-451"];
d241 [cluster="CommonMark.Parser.BlockMethods.AdvanceOffset(string, int, bool, ref int, ref int, ref int)", label="var chars_to_tab = 4 - (column % TabSize)", span="455-455"];
d242 [cluster="CommonMark.Parser.BlockMethods.AdvanceOffset(string, int, bool, ref int, ref int, ref int)", label="column += chars_to_tab", span="456-456"];
d243 [cluster="CommonMark.Parser.BlockMethods.AdvanceOffset(string, int, bool, ref int, ref int, ref int)", label="offset += 1", span="457-457"];
d244 [cluster="CommonMark.Parser.BlockMethods.AdvanceOffset(string, int, bool, ref int, ref int, ref int)", label="count -= columns ? chars_to_tab : 1", span="458-458"];
d247 [cluster="CommonMark.Parser.BlockMethods.AdvanceOffset(string, int, bool, ref int, ref int, ref int)", label="offset += 1", span="467-467"];
d248 [cluster="CommonMark.Parser.BlockMethods.AdvanceOffset(string, int, bool, ref int, ref int, ref int)", label="column += 1", span="468-468"];
d249 [cluster="CommonMark.Parser.BlockMethods.AdvanceOffset(string, int, bool, ref int, ref int, ref int)", label="count -= 1", span="469-469"];
d25 [cluster="CommonMark.Parser.PositionTracker.PositionTracker(int)", label="Entry CommonMark.Parser.PositionTracker.PositionTracker(int)", span="8-8"];
d38 [cluster="CommonMark.Parser.BlockMethods.BreakOutOfLists(ref CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="Entry CommonMark.Parser.BlockMethods.BreakOutOfLists(ref CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", span="81-81"];
d50 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="Entry CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", span="103-103"];
d106 [cluster="CommonMark.Parser.BlockMethods.CreateChildBlock(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo, CommonMark.Syntax.BlockTag, int)", label="Entry CommonMark.Parser.BlockMethods.CreateChildBlock(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo, CommonMark.Syntax.BlockTag, int)", span="204-204"];
d429 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="Exit CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", span="477-477"];
d348 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container = CreateChildBlock(container, line, BlockTag.ThematicBreak, first_nonspace)", span="714-714"];
d349 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="Finalize(container, line)", span="715-715"];
d370 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container = CreateChildBlock(container, line, BlockTag.List, first_nonspace)", span="765-765"];
d384 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container.IsLastLineBlank = (blank &&\r\n                                          container.Tag != BlockTag.BlockQuote &&\r\n                                          container.Tag != BlockTag.SetextHeading &&\r\n                                          container.Tag != BlockTag.FencedCode &&\r\n                                          !(container.Tag == BlockTag.ListItem &&\r\n                                            container.FirstChild == null &&\r\n                                            container.SourcePosition >= line.LineOffset))", span="808-814"];
d392 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="Finalize(cur, line)", span="840-840"];
d405 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="Finalize(container, line)", span="876-876"];
d455 [cluster="CommonMark.Parser.BlockMethods.FindFirstNonspace(string, int, int, out int, out int, out char)", label="Exit CommonMark.Parser.BlockMethods.FindFirstNonspace(string, int, int, out int, out int, out char)", span="940-940"];
d441 [cluster="CommonMark.Parser.BlockMethods.FindFirstNonspace(string, int, int, out int, out int, out char)", label="var chars_to_tab = TabSize - (column % TabSize)", span="943-943"];
d442 [cluster="CommonMark.Parser.BlockMethods.FindFirstNonspace(string, int, int, out int, out int, out char)", label="first_nonspace = offset", span="944-944"];
d443 [cluster="CommonMark.Parser.BlockMethods.FindFirstNonspace(string, int, int, out int, out int, out char)", label="first_nonspace_column = column", span="945-945"];
d444 [cluster="CommonMark.Parser.BlockMethods.FindFirstNonspace(string, int, int, out int, out int, out char)", label="(curChar = ln[first_nonspace]) != '\n'", span="946-946"];
d271 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="indent = first_nonspace_column - column + remainingSpaces", span="519-519"];
d272 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="blank = curChar == '\n'", span="520-520"];
d275 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="indent <= 3 && curChar == '>'", span="526-526"];
d314 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="!all_matched", span="631-631"];
d322 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="indent = first_nonspace_column - column", span="654-654"];
d338 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container.FencedCodeData.FenceOffset = first_nonspace - offset", span="683-683"];
d280 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="indent >= container.ListData.MarkerOffset + container.ListData.Padding", span="541-541"];
d282 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="blank && container.FirstChild != null", span="545-545"];
d286 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="indent >= CODE_INDENT", span="562-562"];
d288 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label=blank, span="564-564"];
d301 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="i = container.FencedCodeData.FenceOffset", span="595-595"];
d305 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="i--", span="600-600"];
d323 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="blank = curChar == '\n'", span="655-655"];
d325 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="!indented && curChar == '>'", span="659-659"];
d336 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container.FencedCodeData.FenceChar = curChar", span="681-681"];
d324 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="var indented = indent >= CODE_INDENT", span="657-657"];
d431 [cluster="CommonMark.Parser.Scanner.scan_atx_heading_start(string, int, int, out int)", label="Entry CommonMark.Parser.Scanner.scan_atx_heading_start(string, int, int, out int)", span="239-239"];
d332 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container.Heading = new HeadingData(i)", span="673-673"];
d433 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", label="Entry CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", span="372-372"];
d337 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container.FencedCodeData.FenceLength = matched", span="682-682"];
d435 [cluster="CommonMark.Parser.Scanner.scan_html_block_start(string, int, int)", label="Entry CommonMark.Parser.Scanner.scan_html_block_start(string, int, int)", span="9-9"];
d436 [cluster="CommonMark.Parser.Scanner.scan_html_block_start_7(string, int, int)", label="Entry CommonMark.Parser.Scanner.scan_html_block_start_7(string, int, int)", span="65-65"];
d342 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container.HtmlBlockType = (HtmlBlockType)matched", span="695-695"];
d344 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container.Tag = BlockTag.SetextHeading", span="703-703"];
d437 [cluster="CommonMark.Parser.Scanner.scan_setext_heading_line(string, int, int)", label="Entry CommonMark.Parser.Scanner.scan_setext_heading_line(string, int, int)", span="292-292"];
d345 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container.Heading = new HeadingData(matched)", span="704-704"];
d262 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="bool all_matched = true", span="501-501"];
d293 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="all_matched = false", span="576-576"];
d298 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="all_matched = false", span="588-588"];
d309 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="all_matched = false", span="613-613"];
d313 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="all_matched = false", span="624-624"];
d207 [cluster="CommonMark.Parser.Scanner.scan_thematic_break(string, int, int)", label="Entry CommonMark.Parser.Scanner.scan_thematic_break(string, int, int)", span="333-333"];
d360 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="data.Padding = matched + 1", span="741-741"];
d362 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="data.Padding = matched + 1", span="745-745"];
d367 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="data.Padding = matched + column - prevColumn", span="755-755"];
d368 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="data.MarkerOffset = indent", span="761-761"];
d369 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container.Tag != BlockTag.List || !ListsMatch(container.ListData, data)", span="763-763"];
d371 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container.ListData = data", span="766-766"];
d373 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container.ListData = data", span="771-771"];
d354 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="var prevOffset = offset", span="727-727"];
d355 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="var prevColumn = column", span="728-728"];
d356 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="var prevRemainingSpaces = remainingSpaces", span="729-729"];
d357 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="column - prevColumn <= CODE_INDENT", span="731-731"];
d359 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="column == prevColumn", span="738-738"];
d363 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="offset = prevOffset", span="748-748"];
d364 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="column = prevColumn", span="749-749"];
d365 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="remainingSpaces = prevRemainingSpaces", span="750-750"];
d389 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="cur != last_matched_container &&\r\n                container == last_matched_container &&\r\n                !blank &&\r\n                cur.Tag == BlockTag.Paragraph &&\r\n                cur.StringContent.Length > 0", span="823-827"];
d394 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="cur == null", span="843-843"];
d396 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container.Tag == BlockTag.IndentedCode", span="848-848"];
d428 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="curptr = container", span="936-936"];
d398 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container.Tag == BlockTag.FencedCode", span="853-853"];
d400 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container.FencedCodeData.FenceLength = -1", span="861-861"];
d438 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", label="Entry CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", span="419-419"];
d402 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container.Tag == BlockTag.HtmlBlock", span="869-869"];
d439 [cluster="CommonMark.Parser.Scanner.scan_html_block_end(CommonMark.Syntax.HtmlBlockType, string, int, int)", label="Entry CommonMark.Parser.Scanner.scan_html_block_end(CommonMark.Syntax.HtmlBlockType, string, int, int)", span="92-92"];
d422 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="AcceptsLines(container.Tag)", span="915-915"];
d424 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container.Tag != BlockTag.ThematicBreak && container.Tag != BlockTag.SetextHeading", span="921-921"];
d440 [cluster="CommonMark.Utilities.Warning(string, params object[])", label="Entry CommonMark.Utilities.Warning(string, params object[])", span="17-17"];
d407 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label=blank, span="881-881"];
d319 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="var maybeLazy = cur.Tag == BlockTag.Paragraph", span="644-644"];
d378 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="maybeLazy = false", span="789-789"];
d3 [cluster="CommonMark.Parser.BlockMethods.AcceptsLines(CommonMark.Syntax.BlockTag)", label="Entry CommonMark.Parser.BlockMethods.AcceptsLines(CommonMark.Syntax.BlockTag)", span="26-26"];
d382 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="blank && container.LastChild != null", span="799-799"];
d317 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="blank && container.IsLastLineBlank", span="641-641"];
d383 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container.LastChild.IsLastLineBlank = true", span="801-801"];
d385 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="Block cont = container", span="816-816"];
d406 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container = container.Parent", span="877-877"];
d421 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container = container.Parent", span="912-912"];
d335 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container.FencedCodeData = new FencedCodeData()", span="680-680"];
d266 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="int indent", span="505-505"];
d268 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container.LastChild != null && container.LastChild.IsOpen", span="513-513"];
d316 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="last_matched_container = container", span="638-638"];
d273 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container.Tag", span="522-522"];
d295 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container.IsLastLineBlank = true", span="578-578"];
d297 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container.FencedCodeData.FenceLength == -1", span="586-586"];
d300 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container.IsLastLineBlank = true", span="590-590"];
d307 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="blank && container.HtmlBlockType >= HtmlBlockType.InterruptingBlock", span="610-610"];
d308 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container.IsLastLineBlank = true", span="612-612"];
d312 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="container.IsLastLineBlank = true", span="623-623"];
d11 [cluster="CommonMark.Parser.BlockMethods.AddLine(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo, string, int, int, int)", label="return;", span="41-41"];
d22 [cluster="CommonMark.CommonMarkException.CommonMarkException(string)", label="Entry CommonMark.CommonMarkException.CommonMarkException(string)", span="30-30"];
d23 [cluster="string.Format(System.IFormatProvider, string, object, object)", label="Entry string.Format(System.IFormatProvider, string, object, object)", span="0-0"];
d10 [cluster="CommonMark.Parser.BlockMethods.AddLine(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo, string, int, int, int)", label="len <= 0", span="40-40"];
d13 [cluster="CommonMark.Parser.BlockMethods.AddLine(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo, string, int, int, int)", label="curSC == null", span="44-44"];
d24 [cluster="CommonMark.Syntax.StringContent.StringContent()", label="Entry CommonMark.Syntax.StringContent.StringContent()", span="10-10"];
d26 [cluster="CommonMark.Parser.PositionTracker.AddOffset(CommonMark.Parser.LineInfo, int, int)", label="Entry CommonMark.Parser.PositionTracker.AddOffset(CommonMark.Parser.LineInfo, int, int)", span="22-22"];
d27 [cluster="CommonMark.Syntax.StringContent.Append(string, int, int)", label="Entry CommonMark.Syntax.StringContent.Append(string, int, int)", span="40-40"];
d264 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="var blank = false", span="503-503"];
d391 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="cur != last_matched_container", span="837-837"];
d393 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="cur = cur.Parent", span="841-841"];
d258 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="int first_nonspace_column", span="496-496"];
d177 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="data = null", span="342-342"];
d184 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="return 0;", span="352-352"];
d185 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="data = new ListData()", span="354-354"];
d204 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="return 0;", span="389-389"];
d195 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="return 0;", span="374-374"];
d198 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="return 0;", span="378-378"];
d199 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="data = new ListData()", span="380-380"];
d260 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="int i", span="499-499"];
d186 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="data.BulletChar = c", span="355-355"];
d188 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="c >= '0' && c <= '9'", span="358-358"];
d189 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="int start = c - '0'", span="361-361"];
d203 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="data.Delimiter = (c == '.' ? ListDelimiter.Period : ListDelimiter.Parenthesis)", span="384-384"];
d208 [cluster="CommonMark.Utilities.IsWhitespace(char)", label="Entry CommonMark.Utilities.IsWhitespace(char)", span="53-53"];
d193 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="start = start * 10 + (c - '0')", span="368-368"];
d192 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="c >= '0' && c <= '9' && start < 100000000", span="367-367"];
d187 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="data.Start = 1", span="356-356"];
d210 [cluster="CommonMark.Parser.BlockMethods.ListsMatch(CommonMark.Syntax.ListData, CommonMark.Syntax.ListData)", label="Entry CommonMark.Parser.BlockMethods.ListsMatch(CommonMark.Syntax.ListData, CommonMark.Syntax.ListData)", span="395-395"];
d216 [cluster="CommonMark.Parser.BlockMethods.AdvanceOptionalSpace(string, ref int, ref int, ref int)", label="return true;", span="408-408"];
d221 [cluster="CommonMark.Parser.BlockMethods.AdvanceOptionalSpace(string, ref int, ref int, ref int)", label="return true;", span="416-416"];
d228 [cluster="CommonMark.Parser.BlockMethods.AdvanceOptionalSpace(string, ref int, ref int, ref int)", label="return false;", span="427-427"];
d226 [cluster="CommonMark.Parser.BlockMethods.AdvanceOptionalSpace(string, ref int, ref int, ref int)", label="remainingSpaces = chars_to_tab - 1", span="423-423"];
d227 [cluster="CommonMark.Parser.BlockMethods.AdvanceOptionalSpace(string, ref int, ref int, ref int)", label="return true;", span="424-424"];
d218 [cluster="CommonMark.Parser.BlockMethods.AdvanceOptionalSpace(string, ref int, ref int, ref int)", label="c == ' '", span="412-412"];
d222 [cluster="CommonMark.Parser.BlockMethods.AdvanceOptionalSpace(string, ref int, ref int, ref int)", label="c == '\t'", span="418-418"];
d28 [cluster="CommonMark.Parser.BlockMethods.EndsWithBlankLine(CommonMark.Syntax.Block)", label="Entry CommonMark.Parser.BlockMethods.EndsWithBlankLine(CommonMark.Syntax.Block)", span="61-61"];
d30 [cluster="CommonMark.Parser.BlockMethods.EndsWithBlankLine(CommonMark.Syntax.Block)", label="block.IsLastLineBlank", span="65-65"];
d37 [cluster="CommonMark.Parser.BlockMethods.EndsWithBlankLine(CommonMark.Syntax.Block)", label="Exit CommonMark.Parser.BlockMethods.EndsWithBlankLine(CommonMark.Syntax.Block)", span="61-61"];
d32 [cluster="CommonMark.Parser.BlockMethods.EndsWithBlankLine(CommonMark.Syntax.Block)", label="block.Tag != BlockTag.List && block.Tag != BlockTag.ListItem", span="68-68"];
d237 [cluster="CommonMark.Parser.BlockMethods.AdvanceOffset(string, int, bool, ref int, ref int, ref int)", label="remainingSpaces = 0", span="447-447"];
d236 [cluster="CommonMark.Parser.BlockMethods.AdvanceOffset(string, int, bool, ref int, ref int, ref int)", label="remainingSpaces = 0", span="442-442"];
d246 [cluster="CommonMark.Parser.BlockMethods.AdvanceOffset(string, int, bool, ref int, ref int, ref int)", label="remainingSpaces = 0 - count", span="462-462"];
d234 [cluster="CommonMark.Parser.BlockMethods.AdvanceOffset(string, int, bool, ref int, ref int, ref int)", label="count = 0", span="437-437"];
d238 [cluster="CommonMark.Parser.BlockMethods.AdvanceOffset(string, int, bool, ref int, ref int, ref int)", label="char c", span="450-450"];
d245 [cluster="CommonMark.Parser.BlockMethods.AdvanceOffset(string, int, bool, ref int, ref int, ref int)", label="count < 0", span="460-460"];
d240 [cluster="CommonMark.Parser.BlockMethods.AdvanceOffset(string, int, bool, ref int, ref int, ref int)", label="c == '\t'", span="453-453"];
d209 [cluster="CommonMark.Syntax.ListData.ListData()", label="Entry CommonMark.Syntax.ListData.ListData()", span="9-9"];
d39 [cluster="CommonMark.Parser.BlockMethods.BreakOutOfLists(ref CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="Block container = blockRef", span="83-83"];
d49 [cluster="CommonMark.Parser.BlockMethods.BreakOutOfLists(ref CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="Exit CommonMark.Parser.BlockMethods.BreakOutOfLists(ref CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", span="81-81"];
d45 [cluster="CommonMark.Parser.BlockMethods.BreakOutOfLists(ref CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="Finalize(container, line)", span="94-94"];
d47 [cluster="CommonMark.Parser.BlockMethods.BreakOutOfLists(ref CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="Finalize(b, line)", span="98-98"];
d92 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="Exit CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", span="103-103"];
d108 [cluster="CommonMark.Parser.BlockMethods.CreateChildBlock(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo, CommonMark.Syntax.BlockTag, int)", label="Finalize(parent, line)", span="210-210"];
d51 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="!b.IsOpen", span="106-106"];
d53 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="b.IsOpen = false", span="109-109"];
d54 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="line.IsTrackingPositions", span="111-111"];
d55 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="b.SourcePosition >= line.LineOffset && line.Line != null", span="114-114"];
d56 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="b.SourceLastPosition = line.CalculateOrigin(line.Line.Length, false)", span="115-115"];
d57 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="b.SourceLastPosition = line.CalculateOrigin(0, false)", span="117-117"];
d58 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="b.EndLine = (line.LineNumber > b.StartLine) ? line.LineNumber - 1 : line.LineNumber", span="121-121"];
d59 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="b.Tag", span="124-124"];
d61 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="var sc = b.StringContent", span="127-127"];
d63 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="var subj = new Subject(b.Top.Document)", span="131-131"];
d72 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="b.Tag = BlockTag.ReferenceDefinition", span="148-148"];
d74 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="b.StringContent.RemoveTrailingBlankLines()", span="154-154"];
d76 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="var firstlinelen = b.StringContent.IndexOf('\n') + 1", span="159-159"];
d77 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="b.FencedCodeData.Info = InlineMethods.Unescape(b.StringContent.TakeFromStart(firstlinelen, true).Trim())", span="160-160"];
d79 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="b.ListData.IsTight = true", span="164-164"];
d80 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="var item = b.FirstChild", span="165-165"];
d84 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="b.ListData.IsTight = false", span="173-173"];
d88 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="b.ListData.IsTight = false", span="183-183"];
d90 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="!b.ListData.IsTight", span="190-190"];
d40 [cluster="CommonMark.Parser.BlockMethods.BreakOutOfLists(ref CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="Block b = container.Top", span="84-84"];
d0 [cluster="CommonMark.Parser.BlockMethods.CanContain(CommonMark.Syntax.BlockTag, CommonMark.Syntax.BlockTag)", label="Entry CommonMark.Parser.BlockMethods.CanContain(CommonMark.Syntax.BlockTag, CommonMark.Syntax.BlockTag)", span="15-15"];
d121 [cluster="CommonMark.Parser.BlockMethods.CreateChildBlock(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo, CommonMark.Syntax.BlockTag, int)", label="Exit CommonMark.Parser.BlockMethods.CreateChildBlock(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo, CommonMark.Syntax.BlockTag, int)", span="204-204"];
d107 [cluster="CommonMark.Parser.BlockMethods.CreateChildBlock(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo, CommonMark.Syntax.BlockTag, int)", label="!CanContain(parent.Tag, blockType)", span="208-208"];
d109 [cluster="CommonMark.Parser.BlockMethods.CreateChildBlock(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo, CommonMark.Syntax.BlockTag, int)", label="parent = parent.Parent", span="211-211"];
d110 [cluster="CommonMark.Parser.BlockMethods.CreateChildBlock(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo, CommonMark.Syntax.BlockTag, int)", label="var startPosition = line.IsTrackingPositions ? line.CalculateOrigin(startColumn, true) : line.LineOffset", span="214-214"];
d111 [cluster="CommonMark.Parser.BlockMethods.CreateChildBlock(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo, CommonMark.Syntax.BlockTag, int)", label="Block child = new Block(blockType, line.LineNumber, startColumn + 1, startPosition)", span="216-216"];
d112 [cluster="CommonMark.Parser.BlockMethods.CreateChildBlock(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo, CommonMark.Syntax.BlockTag, int)", label="child.Parent = parent", span="218-218"];
d113 [cluster="CommonMark.Parser.BlockMethods.CreateChildBlock(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo, CommonMark.Syntax.BlockTag, int)", label="child.Top = parent.Top", span="219-219"];
d114 [cluster="CommonMark.Parser.BlockMethods.CreateChildBlock(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo, CommonMark.Syntax.BlockTag, int)", label="var lastChild = parent.LastChild", span="221-221"];
d118 [cluster="CommonMark.Parser.BlockMethods.CreateChildBlock(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo, CommonMark.Syntax.BlockTag, int)", label="parent.FirstChild = child", span="231-231"];
d119 [cluster="CommonMark.Parser.BlockMethods.CreateChildBlock(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo, CommonMark.Syntax.BlockTag, int)", label="parent.LastChild = child", span="234-234"];
d395 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="throw new CommonMarkException(''Cannot finalize container block. Last matched container tag = '' + last_matched_container.Tag);", span="844-844"];
d453 [cluster="CommonMark.Parser.BlockMethods.FindFirstNonspace(string, int, int, out int, out int, out char)", label="first_nonspace_column += chars_to_tab", span="958-958"];
d446 [cluster="CommonMark.Parser.BlockMethods.FindFirstNonspace(string, int, int, out int, out int, out char)", label="first_nonspace++", span="950-950"];
d452 [cluster="CommonMark.Parser.BlockMethods.FindFirstNonspace(string, int, int, out int, out int, out char)", label="first_nonspace++", span="957-957"];
d447 [cluster="CommonMark.Parser.BlockMethods.FindFirstNonspace(string, int, int, out int, out int, out char)", label="first_nonspace_column++", span="951-951"];
d451 [cluster="CommonMark.Parser.BlockMethods.FindFirstNonspace(string, int, int, out int, out int, out char)", label="curChar == '\t'", span="955-955"];
d448 [cluster="CommonMark.Parser.BlockMethods.FindFirstNonspace(string, int, int, out int, out int, out char)", label="chars_to_tab--", span="952-952"];
d449 [cluster="CommonMark.Parser.BlockMethods.FindFirstNonspace(string, int, int, out int, out int, out char)", label="chars_to_tab == 0", span="953-953"];
d450 [cluster="CommonMark.Parser.BlockMethods.FindFirstNonspace(string, int, int, out int, out int, out char)", label="chars_to_tab = TabSize", span="953-953"];
d454 [cluster="CommonMark.Parser.BlockMethods.FindFirstNonspace(string, int, int, out int, out int, out char)", label="chars_to_tab = TabSize", span="959-959"];
d445 [cluster="CommonMark.Parser.BlockMethods.FindFirstNonspace(string, int, int, out int, out int, out char)", label="curChar == ' '", span="948-948"];
d294 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label=blank, span="577-577"];
d299 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label=blank, span="589-589"];
d311 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label=blank, span="621-621"];
d274 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="BlockTag.BlockQuote", span="524-524"];
d278 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="all_matched = false", span="533-533"];
d284 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="all_matched = false", span="554-554"];
d290 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="all_matched = false", span="567-567"];
d279 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="BlockTag.ListItem", span="539-539"];
d285 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="BlockTag.IndentedCode", span="560-560"];
d432 [cluster="CommonMark.Syntax.HeadingData.HeadingData(int)", label="Entry CommonMark.Syntax.HeadingData.HeadingData(int)", span="11-11"];
d292 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="BlockTag.SetextHeading", span="573-573"];
d386 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="cont.Parent != null", span="817-817"];
d5 [cluster="CommonMark.Parser.BlockMethods.AcceptsLines(CommonMark.Syntax.BlockTag)", label="Exit CommonMark.Parser.BlockMethods.AcceptsLines(CommonMark.Syntax.BlockTag)", span="26-26"];
d4 [cluster="CommonMark.Parser.BlockMethods.AcceptsLines(CommonMark.Syntax.BlockTag)", label="return (block_type == BlockTag.Paragraph ||\r\n                    block_type == BlockTag.AtxHeading ||\r\n                    block_type == BlockTag.IndentedCode ||\r\n                    block_type == BlockTag.FencedCode);", span="28-31"];
d387 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="cont.Parent.IsLastLineBlank = false", span="819-819"];
d388 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="cont = cont.Parent", span="820-820"];
d434 [cluster="CommonMark.Syntax.FencedCodeData.FencedCodeData()", label="Entry CommonMark.Syntax.FencedCodeData.FencedCodeData()", span="9-9"];
d265 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="char curChar", span="504-504"];
d291 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="BlockTag.AtxHeading", span="572-572"];
d296 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="BlockTag.FencedCode", span="583-583"];
d306 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="BlockTag.HtmlBlock", span="607-607"];
d310 [cluster="CommonMark.Parser.BlockMethods.IncorporateLine(CommonMark.Parser.LineInfo, ref CommonMark.Syntax.Block)", label="BlockTag.Paragraph", span="619-619"];
d200 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="data.ListType = ListType.Ordered", span="381-381"];
d201 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="data.BulletChar = '\0'", span="382-382"];
d202 [cluster="CommonMark.Parser.BlockMethods.ParseListMarker(string, int, out CommonMark.Syntax.ListData)", label="data.Start = start", span="383-383"];
d212 [cluster="CommonMark.Parser.BlockMethods.ListsMatch(CommonMark.Syntax.ListData, CommonMark.Syntax.ListData)", label="Exit CommonMark.Parser.BlockMethods.ListsMatch(CommonMark.Syntax.ListData, CommonMark.Syntax.ListData)", span="395-395"];
d211 [cluster="CommonMark.Parser.BlockMethods.ListsMatch(CommonMark.Syntax.ListData, CommonMark.Syntax.ListData)", label="return (listData.ListType == itemData.ListType &&\r\n                    listData.Delimiter == itemData.Delimiter &&\r\n                // list_data.marker_offset == item_data.marker_offset &&\r\n                    listData.BulletChar == itemData.BulletChar);", span="397-400"];
d87 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="EndsWithBlankLine(subitem) && (item.NextSibling != null || subitem.NextSibling != null)", span="181-181"];
d29 [cluster="CommonMark.Parser.BlockMethods.EndsWithBlankLine(CommonMark.Syntax.Block)", label=true, span="63-63"];
d34 [cluster="CommonMark.Parser.BlockMethods.EndsWithBlankLine(CommonMark.Syntax.Block)", label="block = block.LastChild", span="71-71"];
d94 [cluster="CommonMark.Syntax.StringContent.StartsWith(char)", label="Entry CommonMark.Syntax.StringContent.StartsWith(char)", span="166-166"];
d36 [cluster="CommonMark.Parser.BlockMethods.EndsWithBlankLine(CommonMark.Syntax.Block)", label="return false;", span="74-74"];
d44 [cluster="CommonMark.Parser.BlockMethods.BreakOutOfLists(ref CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="container != null && container != b", span="92-92"];
d46 [cluster="CommonMark.Parser.BlockMethods.BreakOutOfLists(ref CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="container = container.Parent", span="95-95"];
d43 [cluster="CommonMark.Parser.BlockMethods.BreakOutOfLists(ref CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="b != null", span="90-90"];
d48 [cluster="CommonMark.Parser.BlockMethods.BreakOutOfLists(ref CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="blockRef = b.Parent", span="99-99"];
d42 [cluster="CommonMark.Parser.BlockMethods.BreakOutOfLists(ref CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="b = b.LastChild", span="88-88"];
d52 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="return;", span="107-107"];
d62 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="!sc.StartsWith('[')", span="128-128"];
d67 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="subj.Position != origPos", span="140-140"];
d71 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="Utilities.IsFirstLineBlank(subj.Buffer, subj.Position)", span="147-147"];
d82 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="item != null", span="168-168"];
d93 [cluster="CommonMark.Parser.LineInfo.CalculateOrigin(int, bool)", label="Entry CommonMark.Parser.LineInfo.CalculateOrigin(int, bool)", span="53-53"];
d60 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="BlockTag.Paragraph", span="126-126"];
d73 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="BlockTag.IndentedCode", span="153-153"];
d75 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="BlockTag.FencedCode", span="157-157"];
d78 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="BlockTag.List", span="163-163"];
d64 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="sc.FillSubject(subj)", span="132-132"];
d68 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="sc.Replace(subj.Buffer, subj.Position, subj.Buffer.Length - subj.Position)", span="142-142"];
d69 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="sc.PositionTracker != null", span="144-144"];
d70 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="sc.PositionTracker.AddBlockOffset(subj.Position - origPos)", span="145-145"];
d95 [cluster="CommonMark.Parser.Subject.Subject(CommonMark.Syntax.DocumentData)", label="Entry CommonMark.Parser.Subject.Subject(CommonMark.Syntax.DocumentData)", span="12-12"];
d65 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="var origPos = subj.Position", span="133-133"];
d66 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="subj.Position < subj.Buffer.Length \r\n                        && subj.Buffer[subj.Position] == '[' \r\n                        && 0 != InlineMethods.ParseReference(subj)", span="134-136"];
d101 [cluster="CommonMark.Syntax.StringContent.RemoveTrailingBlankLines()", label="Entry CommonMark.Syntax.StringContent.RemoveTrailingBlankLines()", span="294-294"];
d102 [cluster="CommonMark.Syntax.StringContent.IndexOf(char)", label="Entry CommonMark.Syntax.StringContent.IndexOf(char)", span="192-192"];
d103 [cluster="CommonMark.Syntax.StringContent.TakeFromStart(int, bool)", label="Entry CommonMark.Syntax.StringContent.TakeFromStart(int, bool)", span="217-217"];
d104 [cluster="string.Trim()", label="Entry string.Trim()", span="0-0"];
d105 [cluster="CommonMark.Parser.InlineMethods.Unescape(string)", label="Entry CommonMark.Parser.InlineMethods.Unescape(string)", span="721-721"];
d81 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="Block subitem", span="166-166"];
d83 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="item.IsLastLineBlank && item.NextSibling != null", span="171-171"];
d85 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="subitem = item.FirstChild", span="178-178"];
d91 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="item = item.NextSibling", span="193-193"];
d86 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="subitem != null", span="179-179"];
d41 [cluster="CommonMark.Parser.BlockMethods.BreakOutOfLists(ref CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="b != null && b.Tag != BlockTag.List", span="87-87"];
d2 [cluster="CommonMark.Parser.BlockMethods.CanContain(CommonMark.Syntax.BlockTag, CommonMark.Syntax.BlockTag)", label="Exit CommonMark.Parser.BlockMethods.CanContain(CommonMark.Syntax.BlockTag, CommonMark.Syntax.BlockTag)", span="15-15"];
d1 [cluster="CommonMark.Parser.BlockMethods.CanContain(CommonMark.Syntax.BlockTag, CommonMark.Syntax.BlockTag)", label="return (parent_type == BlockTag.Document ||\r\n                     parent_type == BlockTag.BlockQuote ||\r\n                     parent_type == BlockTag.ListItem ||\r\n                     (parent_type == BlockTag.List && child_type == BlockTag.ListItem));", span="17-20"];
d120 [cluster="CommonMark.Parser.BlockMethods.CreateChildBlock(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo, CommonMark.Syntax.BlockTag, int)", label="return child;", span="235-235"];
d122 [cluster="CommonMark.Syntax.Block.Block(CommonMark.Syntax.BlockTag, int, int, int)", label="Entry CommonMark.Syntax.Block.Block(CommonMark.Syntax.BlockTag, int, int, int)", span="30-30"];
d116 [cluster="CommonMark.Parser.BlockMethods.CreateChildBlock(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo, CommonMark.Syntax.BlockTag, int)", label="lastChild.NextSibling = child", span="224-224"];
d117 [cluster="CommonMark.Parser.BlockMethods.CreateChildBlock(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo, CommonMark.Syntax.BlockTag, int)", label="child.Previous = lastChild", span="226-226"];
d115 [cluster="CommonMark.Parser.BlockMethods.CreateChildBlock(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo, CommonMark.Syntax.BlockTag, int)", label="lastChild != null", span="222-222"];
d89 [cluster="CommonMark.Parser.BlockMethods.Finalize(CommonMark.Syntax.Block, CommonMark.Parser.LineInfo)", label="subitem = subitem.NextSibling", span="187-187"];
d35 [cluster="CommonMark.Parser.BlockMethods.EndsWithBlankLine(CommonMark.Syntax.Block)", label="block == null", span="73-73"];
d100 [cluster="CommonMark.Utilities.IsFirstLineBlank(string, int)", label="Entry CommonMark.Utilities.IsFirstLineBlank(string, int)", span="98-98"];
d96 [cluster="CommonMark.Syntax.StringContent.FillSubject(CommonMark.Parser.Subject)", label="Entry CommonMark.Syntax.StringContent.FillSubject(CommonMark.Parser.Subject)", span="96-96"];
d98 [cluster="CommonMark.Syntax.StringContent.Replace(string, int, int)", label="Entry CommonMark.Syntax.StringContent.Replace(string, int, int)", span="180-180"];
d99 [cluster="CommonMark.Parser.PositionTracker.AddBlockOffset(int)", label="Entry CommonMark.Parser.PositionTracker.AddBlockOffset(int)", span="17-17"];
d148 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, CommonMark.Syntax.DocumentData, CommonMark.CommonMarkSettings)", label="var subj = new Subject(data)", span="283-283"];
d97 [cluster="CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Parser.Subject)", label="Entry CommonMark.Parser.InlineMethods.ParseReference(CommonMark.Parser.Subject)", span="1106-1106"];
d156 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, CommonMark.Syntax.DocumentData, CommonMark.CommonMarkSettings)", label="sc.FillSubject(subj)", span="296-296"];
d161 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, CommonMark.Syntax.DocumentData, CommonMark.CommonMarkSettings)", label="sc.PositionTracker.AddBlockOffset(-delta)", span="304-304"];
d143 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, CommonMark.Syntax.DocumentData, CommonMark.CommonMarkSettings)", label="Entry CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, CommonMark.Syntax.DocumentData, CommonMark.CommonMarkSettings)", span="277-277"];
d147 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, CommonMark.Syntax.DocumentData, CommonMark.CommonMarkSettings)", label="var specialCharacters = settings.InlineParserSpecialCharacters", span="282-282"];
d149 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, CommonMark.Syntax.DocumentData, CommonMark.CommonMarkSettings)", label="StringContent sc", span="285-285"];
d157 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, CommonMark.Syntax.DocumentData, CommonMark.CommonMarkSettings)", label="delta = subj.Position", span="297-297"];
d158 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, CommonMark.Syntax.DocumentData, CommonMark.CommonMarkSettings)", label="block.InlineContent = InlineMethods.parse_inlines(subj, parsers, specialCharacters)", span="299-299"];
d154 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, CommonMark.Syntax.DocumentData, CommonMark.CommonMarkSettings)", label="sc = block.StringContent", span="293-293"];
d155 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, CommonMark.Syntax.DocumentData, CommonMark.CommonMarkSettings)", label="sc != null", span="294-294"];
d160 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, CommonMark.Syntax.DocumentData, CommonMark.CommonMarkSettings)", label="sc.PositionTracker != null", span="302-302"];
d162 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, CommonMark.Syntax.DocumentData, CommonMark.CommonMarkSettings)", label="AdjustInlineSourcePosition(block.InlineContent, sc.PositionTracker, ref inlineStack)", span="305-305"];
d172 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, CommonMark.Syntax.DocumentData, CommonMark.CommonMarkSettings)", label="Exit CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, CommonMark.Syntax.DocumentData, CommonMark.CommonMarkSettings)", span="277-277"];
d144 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, CommonMark.Syntax.DocumentData, CommonMark.CommonMarkSettings)", label="Stack<Inline> inlineStack = null", span="279-279"];
d146 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, CommonMark.Syntax.DocumentData, CommonMark.CommonMarkSettings)", label="var parsers = settings.InlineParsers", span="281-281"];
d151 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, CommonMark.Syntax.DocumentData, CommonMark.CommonMarkSettings)", label="block != null", span="288-288"];
d152 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, CommonMark.Syntax.DocumentData, CommonMark.CommonMarkSettings)", label="var tag = block.Tag", span="290-290"];
d159 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, CommonMark.Syntax.DocumentData, CommonMark.CommonMarkSettings)", label="block.StringContent = null", span="300-300"];
d163 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, CommonMark.Syntax.DocumentData, CommonMark.CommonMarkSettings)", label="block.FirstChild != null", span="310-310"];
d164 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, CommonMark.Syntax.DocumentData, CommonMark.CommonMarkSettings)", label="block.NextSibling != null", span="312-312"];
d165 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, CommonMark.Syntax.DocumentData, CommonMark.CommonMarkSettings)", label="stack.Push(block.NextSibling)", span="313-313"];
d166 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, CommonMark.Syntax.DocumentData, CommonMark.CommonMarkSettings)", label="block = block.FirstChild", span="315-315"];
d167 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, CommonMark.Syntax.DocumentData, CommonMark.CommonMarkSettings)", label="block.NextSibling != null", span="317-317"];
d168 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, CommonMark.Syntax.DocumentData, CommonMark.CommonMarkSettings)", label="block = block.NextSibling", span="319-319"];
d150 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, CommonMark.Syntax.DocumentData, CommonMark.CommonMarkSettings)", label="int delta", span="286-286"];
d173 [cluster="CommonMark.Parser.InlineMethods.parse_inlines(CommonMark.Parser.Subject, System.Func<CommonMark.Parser.Subject, CommonMark.Syntax.Inline>[], char[])", label="Entry CommonMark.Parser.InlineMethods.parse_inlines(CommonMark.Parser.Subject, System.Func<CommonMark.Parser.Subject, CommonMark.Syntax.Inline>[], char[])", span="1009-1009"];
d153 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, CommonMark.Syntax.DocumentData, CommonMark.CommonMarkSettings)", label="tag == BlockTag.Paragraph || tag == BlockTag.AtxHeading || tag == BlockTag.SetextHeading", span="291-291"];
d123 [cluster="CommonMark.Parser.BlockMethods.AdjustInlineSourcePosition(CommonMark.Syntax.Inline, CommonMark.Parser.PositionTracker, ref System.Collections.Generic.Stack<CommonMark.Syntax.Inline>)", label="Entry CommonMark.Parser.BlockMethods.AdjustInlineSourcePosition(CommonMark.Syntax.Inline, CommonMark.Parser.PositionTracker, ref System.Collections.Generic.Stack<CommonMark.Syntax.Inline>)", span="238-238"];
d145 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, CommonMark.Syntax.DocumentData, CommonMark.CommonMarkSettings)", label="var stack = new Stack<Block>()", span="280-280"];
d170 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, CommonMark.Syntax.DocumentData, CommonMark.CommonMarkSettings)", label="block = stack.Pop()", span="323-323"];
d171 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, CommonMark.Syntax.DocumentData, CommonMark.CommonMarkSettings)", label="block = null", span="327-327"];
d141 [cluster="System.Collections.Generic.Stack<T>.Push(T)", label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0"];
d169 [cluster="CommonMark.Parser.BlockMethods.ProcessInlines(CommonMark.Syntax.Block, CommonMark.Syntax.DocumentData, CommonMark.CommonMarkSettings)", label="stack.Count > 0", span="321-321"];
d138 [cluster="CommonMark.Parser.BlockMethods.AdjustInlineSourcePosition(CommonMark.Syntax.Inline, CommonMark.Parser.PositionTracker, ref System.Collections.Generic.Stack<CommonMark.Syntax.Inline>)", label="Exit CommonMark.Parser.BlockMethods.AdjustInlineSourcePosition(CommonMark.Syntax.Inline, CommonMark.Parser.PositionTracker, ref System.Collections.Generic.Stack<CommonMark.Syntax.Inline>)", span="238-238"];
d124 [cluster="CommonMark.Parser.BlockMethods.AdjustInlineSourcePosition(CommonMark.Syntax.Inline, CommonMark.Parser.PositionTracker, ref System.Collections.Generic.Stack<CommonMark.Syntax.Inline>)", label="stack == null", span="240-240"];
d126 [cluster="CommonMark.Parser.BlockMethods.AdjustInlineSourcePosition(CommonMark.Syntax.Inline, CommonMark.Parser.PositionTracker, ref System.Collections.Generic.Stack<CommonMark.Syntax.Inline>)", label="inline != null", span="243-243"];
d127 [cluster="CommonMark.Parser.BlockMethods.AdjustInlineSourcePosition(CommonMark.Syntax.Inline, CommonMark.Parser.PositionTracker, ref System.Collections.Generic.Stack<CommonMark.Syntax.Inline>)", label="inline.SourcePosition = tracker.CalculateInlineOrigin(inline.SourcePosition, true)", span="245-245"];
d128 [cluster="CommonMark.Parser.BlockMethods.AdjustInlineSourcePosition(CommonMark.Syntax.Inline, CommonMark.Parser.PositionTracker, ref System.Collections.Generic.Stack<CommonMark.Syntax.Inline>)", label="inline.SourceLastPosition = tracker.CalculateInlineOrigin(inline.SourceLastPosition, false)", span="246-246"];
d129 [cluster="CommonMark.Parser.BlockMethods.AdjustInlineSourcePosition(CommonMark.Syntax.Inline, CommonMark.Parser.PositionTracker, ref System.Collections.Generic.Stack<CommonMark.Syntax.Inline>)", label="inline.FirstChild != null", span="248-248"];
d130 [cluster="CommonMark.Parser.BlockMethods.AdjustInlineSourcePosition(CommonMark.Syntax.Inline, CommonMark.Parser.PositionTracker, ref System.Collections.Generic.Stack<CommonMark.Syntax.Inline>)", label="inline.NextSibling != null", span="250-250"];
d131 [cluster="CommonMark.Parser.BlockMethods.AdjustInlineSourcePosition(CommonMark.Syntax.Inline, CommonMark.Parser.PositionTracker, ref System.Collections.Generic.Stack<CommonMark.Syntax.Inline>)", label="stack.Push(inline.NextSibling)", span="251-251"];
d132 [cluster="CommonMark.Parser.BlockMethods.AdjustInlineSourcePosition(CommonMark.Syntax.Inline, CommonMark.Parser.PositionTracker, ref System.Collections.Generic.Stack<CommonMark.Syntax.Inline>)", label="inline = inline.FirstChild", span="253-253"];
d133 [cluster="CommonMark.Parser.BlockMethods.AdjustInlineSourcePosition(CommonMark.Syntax.Inline, CommonMark.Parser.PositionTracker, ref System.Collections.Generic.Stack<CommonMark.Syntax.Inline>)", label="inline.NextSibling != null", span="255-255"];
d134 [cluster="CommonMark.Parser.BlockMethods.AdjustInlineSourcePosition(CommonMark.Syntax.Inline, CommonMark.Parser.PositionTracker, ref System.Collections.Generic.Stack<CommonMark.Syntax.Inline>)", label="inline = inline.NextSibling", span="257-257"];
d135 [cluster="CommonMark.Parser.BlockMethods.AdjustInlineSourcePosition(CommonMark.Syntax.Inline, CommonMark.Parser.PositionTracker, ref System.Collections.Generic.Stack<CommonMark.Syntax.Inline>)", label="stack.Count > 0", span="259-259"];
d136 [cluster="CommonMark.Parser.BlockMethods.AdjustInlineSourcePosition(CommonMark.Syntax.Inline, CommonMark.Parser.PositionTracker, ref System.Collections.Generic.Stack<CommonMark.Syntax.Inline>)", label="inline = stack.Pop()", span="261-261"];
d139 [cluster="System.Collections.Generic.Stack<T>.Stack()", label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0"];
d142 [cluster="System.Collections.Generic.Stack<T>.Pop()", label="Entry System.Collections.Generic.Stack<T>.Pop()", span="0-0"];
d125 [cluster="CommonMark.Parser.BlockMethods.AdjustInlineSourcePosition(CommonMark.Syntax.Inline, CommonMark.Parser.PositionTracker, ref System.Collections.Generic.Stack<CommonMark.Syntax.Inline>)", label="stack = new Stack<Inline>()", span="241-241"];
d137 [cluster="CommonMark.Parser.BlockMethods.AdjustInlineSourcePosition(CommonMark.Syntax.Inline, CommonMark.Parser.PositionTracker, ref System.Collections.Generic.Stack<CommonMark.Syntax.Inline>)", label="inline = null", span="265-265"];
d140 [cluster="CommonMark.Parser.PositionTracker.CalculateInlineOrigin(int, bool)", label="Entry CommonMark.Parser.PositionTracker.CalculateInlineOrigin(int, bool)", span="89-89"];
m0_100 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchWhitespaces(string, ref char, ref int, int)", file="Scanner.cs", label="Entry CommonMark.Parser.ScannerCharacterMatcher.MatchWhitespaces(string, ref char, ref int, int)", span="13-13"];
m0_101 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int, int)", file="Scanner.cs", label="Entry CommonMark.Parser.Scanner.scan_link_title(string, int, int)", span="189-189"];
m0_102 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int, int)", file="Scanner.cs", label="pos + 2 >= sourceLength", span="198-198"];
m0_104 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int, int)", file="Scanner.cs", label="var c1 = s[pos]", span="201-201"];
m0_110 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int, int)", file="Scanner.cs", label="var i = pos + 1", span="208-208"];
m0_111 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int, int)", file="Scanner.cs", label="i < sourceLength", span="208-208"];
m0_112 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int, int)", file="Scanner.cs", label="var c = s[i]", span="210-210"];
m0_114 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int, int)", file="Scanner.cs", label="return i - pos + 1;", span="212-212"];
m0_103 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int, int)", file="Scanner.cs", label="return 0;", span="199-199"];
m0_105 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int, int)", file="Scanner.cs", label="c1 != '''' && c1 != '\'' && c1 != '('", span="202-202"];
m0_107 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int, int)", file="Scanner.cs", label="c1 == '('", span="205-205"];
m0_113 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int, int)", file="Scanner.cs", label="c == c1 && !nextEscaped", span="211-211"];
m0_106 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int, int)", file="Scanner.cs", label="return 0;", span="203-203"];
m0_108 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int, int)", file="Scanner.cs", label="c1 = ')'", span="205-205"];
m0_109 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int, int)", file="Scanner.cs", label="var nextEscaped = false", span="207-207"];
m0_115 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int, int)", file="Scanner.cs", label="nextEscaped = !nextEscaped && c == '\\'", span="214-214"];
m0_116 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int, int)", file="Scanner.cs", label="i++", span="208-208"];
m0_117 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int, int)", file="Scanner.cs", label="return 0;", span="217-217"];
m0_118 [cluster="CommonMark.Parser.Scanner.scan_link_title(string, int, int)", file="Scanner.cs", label="Exit CommonMark.Parser.Scanner.scan_link_title(string, int, int)", span="189-189"];
m0_130 [cluster="CommonMark.Parser.Scanner.scan_atx_header_start(string, int, int, out int)", file="Scanner.cs", label="Entry CommonMark.Parser.Scanner.scan_atx_header_start(string, int, int, out int)", span="244-244"];
m0_131 [cluster="CommonMark.Parser.Scanner.scan_atx_header_start(string, int, int, out int)", file="Scanner.cs", label="headerLevel = 1", span="251-251"];
m0_132 [cluster="CommonMark.Parser.Scanner.scan_atx_header_start(string, int, int, out int)", file="Scanner.cs", label="pos + 1 >= sourceLength", span="252-252"];
m0_134 [cluster="CommonMark.Parser.Scanner.scan_atx_header_start(string, int, int, out int)", file="Scanner.cs", label="s[pos] != '#'", span="255-255"];
m0_137 [cluster="CommonMark.Parser.Scanner.scan_atx_header_start(string, int, int, out int)", file="Scanner.cs", label="var i = pos + 1", span="259-259"];
m0_138 [cluster="CommonMark.Parser.Scanner.scan_atx_header_start(string, int, int, out int)", file="Scanner.cs", label="i < sourceLength", span="259-259"];
m0_139 [cluster="CommonMark.Parser.Scanner.scan_atx_header_start(string, int, int, out int)", file="Scanner.cs", label="var c = s[i]", span="261-261"];
m0_144 [cluster="CommonMark.Parser.Scanner.scan_atx_header_start(string, int, int, out int)", file="Scanner.cs", label="return i - pos;", span="269-269"];
m0_149 [cluster="CommonMark.Parser.Scanner.scan_atx_header_start(string, int, int, out int)", file="Scanner.cs", label="return i - pos + 1;", span="279-279"];
m0_150 [cluster="CommonMark.Parser.Scanner.scan_atx_header_start(string, int, int, out int)", file="Scanner.cs", label="return spaceExists ? i - pos : 0;", span="283-283"];
m0_153 [cluster="CommonMark.Parser.Scanner.scan_atx_header_start(string, int, int, out int)", file="Scanner.cs", label="return sourceLength - pos;", span="288-288"];
m0_141 [cluster="CommonMark.Parser.Scanner.scan_atx_header_start(string, int, int, out int)", file="Scanner.cs", label="headerLevel == 6", span="265-265"];
m0_145 [cluster="CommonMark.Parser.Scanner.scan_atx_header_start(string, int, int, out int)", file="Scanner.cs", label="headerLevel++", span="271-271"];
m0_133 [cluster="CommonMark.Parser.Scanner.scan_atx_header_start(string, int, int, out int)", file="Scanner.cs", label="return 0;", span="253-253"];
m0_135 [cluster="CommonMark.Parser.Scanner.scan_atx_header_start(string, int, int, out int)", file="Scanner.cs", label="return 0;", span="256-256"];
m0_136 [cluster="CommonMark.Parser.Scanner.scan_atx_header_start(string, int, int, out int)", file="Scanner.cs", label="var spaceExists = false", span="258-258"];
m0_143 [cluster="CommonMark.Parser.Scanner.scan_atx_header_start(string, int, int, out int)", file="Scanner.cs", label=spaceExists, span="268-268"];
m0_152 [cluster="CommonMark.Parser.Scanner.scan_atx_header_start(string, int, int, out int)", file="Scanner.cs", label=spaceExists, span="287-287"];
m0_151 [cluster="CommonMark.Parser.Scanner.scan_atx_header_start(string, int, int, out int)", file="Scanner.cs", label="i++", span="259-259"];
m0_140 [cluster="CommonMark.Parser.Scanner.scan_atx_header_start(string, int, int, out int)", file="Scanner.cs", label="c == '#'", span="263-263"];
m0_146 [cluster="CommonMark.Parser.Scanner.scan_atx_header_start(string, int, int, out int)", file="Scanner.cs", label="c == ' '", span="273-273"];
m0_148 [cluster="CommonMark.Parser.Scanner.scan_atx_header_start(string, int, int, out int)", file="Scanner.cs", label="c == '\n'", span="277-277"];
m0_147 [cluster="CommonMark.Parser.Scanner.scan_atx_header_start(string, int, int, out int)", file="Scanner.cs", label="spaceExists = true", span="275-275"];
m0_154 [cluster="CommonMark.Parser.Scanner.scan_atx_header_start(string, int, int, out int)", file="Scanner.cs", label="return 0;", span="290-290"];
m0_155 [cluster="CommonMark.Parser.Scanner.scan_atx_header_start(string, int, int, out int)", file="Scanner.cs", label="Exit CommonMark.Parser.Scanner.scan_atx_header_start(string, int, int, out int)", span="244-244"];
m0_57 [cluster="CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetterOrDigit(string, ref char, ref int, int, char)", file="Scanner.cs", label="Entry CommonMark.Parser.ScannerCharacterMatcher.MatchAsciiLetterOrDigit(string, ref char, ref int, int, char)", span="95-95"];
m0_239 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="Entry CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", span="464-464"];
m0_240 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="var lastPos = pos + length", span="472-472"];
m0_243 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="pos + 3 >= lastPos", span="477-477"];
m0_245 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="s[pos] != '&'", span="480-480"];
m0_250 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="s[pos + 1] == '#'", span="486-486"];
m0_251 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="c = s[pos + 2]", span="488-488"];
m0_253 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="i = pos + 3", span="492-492"];
m0_255 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="c = s[i]", span="494-494"];
m0_269 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="return counter == 0 ? 0 : i - pos + 1;", span="515-515"];
m0_272 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="i = pos + 2", span="523-523"];
m0_274 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="c = s[i]", span="525-525"];
m0_280 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="return counter == 0 ? 0 : i - pos + 1;", span="534-534"];
m0_283 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="c = s[pos + 1]", span="543-543"];
m0_286 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="i = pos + 2", span="547-547"];
m0_288 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="c = s[i]", span="549-549"];
m0_293 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="namedEntity = s.Substring(pos + 1, counter + 1)", span="560-560"];
m0_294 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="return counter == 0 ? 0 : i - pos + 1;", span="561-561"];
m0_241 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="namedEntity = null", span="474-474"];
m0_254 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="i < lastPos", span="492-492"];
m0_273 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="i < lastPos", span="523-523"];
m0_287 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="i < lastPos", span="547-547"];
m0_242 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="numericEntity = 0", span="475-475"];
m0_259 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="numericEntity = numericEntity * 16 + (c - '0')", span="498-498"];
m0_263 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="numericEntity = numericEntity * 16 + (c - 'A' + 10)", span="504-504"];
m0_267 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="numericEntity = numericEntity * 16 + (c - 'a' + 10)", span="510-510"];
m0_278 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="numericEntity = numericEntity * 10 + (c - '0')", span="529-529"];
m0_244 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="return 0;", span="478-478"];
m0_246 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="return 0;", span="481-481"];
m0_247 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="char c", span="483-483"];
m0_248 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="int i", span="484-484"];
m0_249 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="int counter = 0", span="485-485"];
m0_257 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="++counter == 9", span="497-497"];
m0_261 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="++counter == 9", span="503-503"];
m0_265 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="++counter == 9", span="509-509"];
m0_276 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="++counter == 9", span="528-528"];
m0_290 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="++counter == 32", span="552-552"];
m0_252 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="c == 'x' || c == 'X'", span="489-489"];
m0_271 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="i++", span="492-492"];
m0_297 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="return 0;", span="568-568"];
m0_256 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="c >= '0' && c <= '9'", span="495-495"];
m0_260 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="c >= 'A' && c <= 'F'", span="501-501"];
m0_264 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="c >= 'a' && c <= 'f'", span="507-507"];
m0_268 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="c == ';'", span="514-514"];
m0_258 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="return 0;", span="497-497"];
m0_262 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="return 0;", span="503-503"];
m0_266 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="return 0;", span="509-509"];
m0_270 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="return 0;", span="517-517"];
m0_282 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="i++", span="523-523"];
m0_275 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="c >= '0' && c <= '9'", span="526-526"];
m0_279 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="c == ';'", span="533-533"];
m0_277 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="return 0;", span="528-528"];
m0_281 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="return 0;", span="536-536"];
m0_284 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="(c < 'A' || c > 'Z') && (c < 'a' && c > 'z')", span="544-544"];
m0_285 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="return 0;", span="545-545"];
m0_296 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="i++", span="547-547"];
m0_289 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="(c >= '0' && c <= '9') || (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z')", span="550-550"];
m0_292 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="c == ';'", span="558-558"];
m0_291 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="return 0;", span="553-553"];
m0_295 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="return 0;", span="564-564"];
m0_298 [cluster="CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", file="Scanner.cs", label="Exit CommonMark.Parser.Scanner.scan_entity(string, int, int, out string, out int)", span="464-464"];
m0_0 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="Entry CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", span="17-17"];
m0_1 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="var checkLen = sourceLength - pos", span="26-26"];
m0_4 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="var colonpos = s.IndexOf(':', pos, checkLen)", span="33-33"];
m0_7 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="var potentialScheme = s.Substring(pos, colonpos - pos).ToUpperInvariant()", span="37-37"];
m0_11 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="i < sourceLength", span="41-41"];
m0_12 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="var c = s[i]", span="43-43"];
m0_14 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="return i - pos + 1;", span="45-45"];
m0_2 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="checkLen > 24", span="27-27"];
m0_3 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="checkLen = 24", span="28-28"];
m0_5 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="colonpos == -1", span="34-34"];
m0_10 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="var i = colonpos + 1", span="41-41"];
m0_6 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="return 0;", span="35-35"];
m0_8 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="Array.BinarySearch(schemeArray, potentialScheme, StringComparer.Ordinal) < 0", span="38-38"];
m0_9 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="return 0;", span="39-39"];
m0_17 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="i++", span="41-41"];
m0_18 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="return 0;", span="51-51"];
m0_13 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="c == '>'", span="44-44"];
m0_15 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="c == '<' || c <= 0x20", span="47-47"];
m0_16 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="return 0;", span="48-48"];
m0_19 [cluster="CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", file="Scanner.cs", label="Exit CommonMark.Parser.Scanner.scan_autolink_uri(string, int, int)", span="17-17"];
m0_22 [cluster="string.ToUpperInvariant()", file="Scanner.cs", label="Entry string.ToUpperInvariant()", span="0-0"];
m0_299 [cluster="CommonMark.Parser.Scanner.HasNonWhitespace(CommonMark.Syntax.StringPart)", file="Scanner.cs", label="Entry CommonMark.Parser.Scanner.HasNonWhitespace(CommonMark.Syntax.StringPart)", span="574-574"];
m0_300 [cluster="CommonMark.Parser.Scanner.HasNonWhitespace(CommonMark.Syntax.StringPart)", file="Scanner.cs", label="var s = part.Source", span="576-576"];
m0_301 [cluster="CommonMark.Parser.Scanner.HasNonWhitespace(CommonMark.Syntax.StringPart)", file="Scanner.cs", label="var i = part.StartIndex", span="577-577"];
m0_302 [cluster="CommonMark.Parser.Scanner.HasNonWhitespace(CommonMark.Syntax.StringPart)", file="Scanner.cs", label="var l = i + part.Length", span="578-578"];
m0_304 [cluster="CommonMark.Parser.Scanner.HasNonWhitespace(CommonMark.Syntax.StringPart)", file="Scanner.cs", label="!Utilities.IsWhitespace(s[i])", span="582-582"];
m0_303 [cluster="CommonMark.Parser.Scanner.HasNonWhitespace(CommonMark.Syntax.StringPart)", file="Scanner.cs", label="i < l", span="580-580"];
m0_306 [cluster="CommonMark.Parser.Scanner.HasNonWhitespace(CommonMark.Syntax.StringPart)", file="Scanner.cs", label="i++", span="585-585"];
m0_307 [cluster="CommonMark.Parser.Scanner.HasNonWhitespace(CommonMark.Syntax.StringPart)", file="Scanner.cs", label="return false;", span="588-588"];
m0_305 [cluster="CommonMark.Parser.Scanner.HasNonWhitespace(CommonMark.Syntax.StringPart)", file="Scanner.cs", label="return true;", span="583-583"];
m0_308 [cluster="CommonMark.Parser.Scanner.HasNonWhitespace(CommonMark.Syntax.StringPart)", file="Scanner.cs", label="Exit CommonMark.Parser.Scanner.HasNonWhitespace(CommonMark.Syntax.StringPart)", span="574-574"];
m0_174 [cluster="CommonMark.Parser.Scanner.scan_hrule(string, int, int)", file="Scanner.cs", label="Entry CommonMark.Parser.Scanner.scan_hrule(string, int, int)", span="338-338"];
m0_177 [cluster="CommonMark.Parser.Scanner.scan_hrule(string, int, int)", file="Scanner.cs", label="var ipos = pos", span="346-346"];
m0_178 [cluster="CommonMark.Parser.Scanner.scan_hrule(string, int, int)", file="Scanner.cs", label="ipos < sourceLength", span="347-347"];
m0_179 [cluster="CommonMark.Parser.Scanner.scan_hrule(string, int, int)", file="Scanner.cs", label="var c = s[ipos++]", span="349-349"];
m0_191 [cluster="CommonMark.Parser.Scanner.scan_hrule(string, int, int)", file="Scanner.cs", label="return sourceLength - pos;", span="371-371"];
m0_176 [cluster="CommonMark.Parser.Scanner.scan_hrule(string, int, int)", file="Scanner.cs", label="var x = '\0'", span="345-345"];
m0_181 [cluster="CommonMark.Parser.Scanner.scan_hrule(string, int, int)", file="Scanner.cs", label="count == 0", span="353-353"];
m0_187 [cluster="CommonMark.Parser.Scanner.scan_hrule(string, int, int)", file="Scanner.cs", label="count++", span="363-363"];
m0_189 [cluster="CommonMark.Parser.Scanner.scan_hrule(string, int, int)", file="Scanner.cs", label="count < 3", span="368-368"];
m0_186 [cluster="CommonMark.Parser.Scanner.scan_hrule(string, int, int)", file="Scanner.cs", label="c == x", span="362-362"];
m0_180 [cluster="CommonMark.Parser.Scanner.scan_hrule(string, int, int)", file="Scanner.cs", label="c == ' ' || c == '\n'", span="351-351"];
m0_182 [cluster="CommonMark.Parser.Scanner.scan_hrule(string, int, int)", file="Scanner.cs", label="c == '*' || c == '_' || c == '-'", span="355-355"];
m0_183 [cluster="CommonMark.Parser.Scanner.scan_hrule(string, int, int)", file="Scanner.cs", label="x = c", span="356-356"];
m0_184 [cluster="CommonMark.Parser.Scanner.scan_hrule(string, int, int)", file="Scanner.cs", label="return 0;", span="358-358"];
m0_185 [cluster="CommonMark.Parser.Scanner.scan_hrule(string, int, int)", file="Scanner.cs", label="count = 1", span="360-360"];
m0_188 [cluster="CommonMark.Parser.Scanner.scan_hrule(string, int, int)", file="Scanner.cs", label="return 0;", span="365-365"];
m0_190 [cluster="CommonMark.Parser.Scanner.scan_hrule(string, int, int)", file="Scanner.cs", label="return 0;", span="369-369"];
m0_192 [cluster="CommonMark.Parser.Scanner.scan_hrule(string, int, int)", file="Scanner.cs", label="Exit CommonMark.Parser.Scanner.scan_hrule(string, int, int)", span="338-338"];
m0_193 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="Entry CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", span="377-377"];
m0_194 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="pos + 3 >= sourceLength", span="385-385"];
m0_196 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="var fchar = s[pos]", span="388-388"];
m0_201 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="var i = pos + 1", span="394-394"];
m0_202 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="i < sourceLength", span="394-394"];
m0_203 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="var c = s[i]", span="396-396"];
m0_195 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="return 0;", span="386-386"];
m0_197 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="fchar != '`' && fchar != '~'", span="389-389"];
m0_204 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="c == fchar", span="398-398"];
m0_198 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="return 0;", span="390-390"];
m0_199 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="var cnt = 1", span="392-392"];
m0_200 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="var fenceDone = false", span="393-393"];
m0_207 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="cnt++", span="403-403"];
m0_209 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="cnt < 3", span="408-408"];
m0_212 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="return cnt;", span="412-412"];
m0_214 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="cnt < 3", span="415-415"];
m0_216 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="return cnt;", span="418-418"];
m0_205 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label=fenceDone, span="400-400"];
m0_213 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="i++", span="394-394"];
m0_211 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="c == '\n'", span="411-411"];
m0_208 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="fenceDone = true", span="407-407"];
m0_206 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="return 0;", span="401-401"];
m0_210 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="return 0;", span="409-409"];
m0_215 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="return 0;", span="416-416"];
m0_217 [cluster="CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", file="Scanner.cs", label="Exit CommonMark.Parser.Scanner.scan_open_code_fence(string, int, int)", span="377-377"];
m0_56 [cluster="string.IndexOf(char)", file="Scanner.cs", label="Entry string.IndexOf(char)", span="0-0"];
m0_23 [cluster="System.Array.BinarySearch<T>(T[], T, System.Collections.Generic.IComparer<T>)", file="Scanner.cs", label="Entry System.Array.BinarySearch<T>(T[], T, System.Collections.Generic.IComparer<T>)", span="0-0"];
m0_58 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="Entry CommonMark.Parser.Scanner.scan_link_url(string, int, int)", span="122-122"];
m0_59 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="pos + 1 >= sourceLength", span="130-130"];
m0_61 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="var i = pos", span="133-133"];
m0_62 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="var c = s[i]", span="134-134"];
m0_64 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="var lastPos = sourceLength - 1", span="136-136"];
m0_65 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="ScannerCharacterMatcher.MatchWhitespaces(s, ref c, ref i, lastPos)", span="138-138"];
m0_69 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="c = s[++i]", span="143-143"];
m0_76 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="return i - pos + 1;", span="148-148"];
m0_80 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="c = s[++i]", span="151-151"];
m0_90 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="return i - pos;", span="168-168"];
m0_93 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="return openParens ? 0 : i - pos;", span="172-172"];
m0_95 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="return openParens ? 0 : i - pos + 1;", span="175-175"];
m0_97 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="c = s[++i]", span="178-178"];
m0_60 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="return 0;", span="131-131"];
m0_63 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="var nextEscaped = false", span="135-135"];
m0_73 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="c == '<' && !nextEscaped", span="147-147"];
m0_75 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="c == '>' && !nextEscaped", span="148-148"];
m0_79 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="nextEscaped = !nextEscaped && c == '\\'", span="150-150"];
m0_84 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="c == '(' && !nextEscaped", span="159-159"];
m0_88 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="c == ')' && !nextEscaped", span="165-165"];
m0_96 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="nextEscaped = !nextEscaped && c == '\\'", span="177-177"];
m0_67 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="i == lastPos", span="142-142"];
m0_70 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="i <= lastPos", span="144-144"];
m0_77 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="i == lastPos", span="149-149"];
m0_83 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="i <= lastPos", span="157-157"];
m0_94 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="i == lastPos", span="174-174"];
m0_66 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="c == '<'", span="140-140"];
m0_92 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="c <= 0x20", span="171-171"];
m0_82 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="bool openParens = false", span="156-156"];
m0_68 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="return 0;", span="142-142"];
m0_71 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="c == '\n'", span="146-146"];
m0_81 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="return 0;", span="153-153"];
m0_72 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="return 0;", span="146-146"];
m0_74 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="return 0;", span="147-147"];
m0_78 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="return 0;", span="149-149"];
m0_85 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label=openParens, span="161-161"];
m0_89 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="!openParens", span="167-167"];
m0_98 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="return 0;", span="181-181"];
m0_86 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="return 0;", span="162-162"];
m0_87 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="openParens = true", span="163-163"];
m0_91 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="openParens = false", span="169-169"];
m0_99 [cluster="CommonMark.Parser.Scanner.scan_link_url(string, int, int)", file="Scanner.cs", label="Exit CommonMark.Parser.Scanner.scan_link_url(string, int, int)", span="122-122"];
m0_156 [cluster="CommonMark.Parser.Scanner.scan_setext_header_line(string, int, int)", file="Scanner.cs", label="Entry CommonMark.Parser.Scanner.scan_setext_header_line(string, int, int)", span="297-297"];
m0_157 [cluster="CommonMark.Parser.Scanner.scan_setext_header_line(string, int, int)", file="Scanner.cs", label="pos >= sourceLength", span="305-305"];
m0_159 [cluster="CommonMark.Parser.Scanner.scan_setext_header_line(string, int, int)", file="Scanner.cs", label="var c1 = s[pos]", span="308-308"];
m0_163 [cluster="CommonMark.Parser.Scanner.scan_setext_header_line(string, int, int)", file="Scanner.cs", label="var i = pos + 1", span="314-314"];
m0_164 [cluster="CommonMark.Parser.Scanner.scan_setext_header_line(string, int, int)", file="Scanner.cs", label="i < sourceLength", span="314-314"];
m0_165 [cluster="CommonMark.Parser.Scanner.scan_setext_header_line(string, int, int)", file="Scanner.cs", label="var c = s[i]", span="316-316"];
m0_158 [cluster="CommonMark.Parser.Scanner.scan_setext_header_line(string, int, int)", file="Scanner.cs", label="return 0;", span="306-306"];
m0_160 [cluster="CommonMark.Parser.Scanner.scan_setext_header_line(string, int, int)", file="Scanner.cs", label="c1 != '=' && c1 != '-'", span="310-310"];
m0_166 [cluster="CommonMark.Parser.Scanner.scan_setext_header_line(string, int, int)", file="Scanner.cs", label="c == c1 && !fin", span="317-317"];
m0_172 [cluster="CommonMark.Parser.Scanner.scan_setext_header_line(string, int, int)", file="Scanner.cs", label="return c1 == '=' ? 1 : 2;", span="330-330"];
m0_161 [cluster="CommonMark.Parser.Scanner.scan_setext_header_line(string, int, int)", file="Scanner.cs", label="return 0;", span="311-311"];
m0_162 [cluster="CommonMark.Parser.Scanner.scan_setext_header_line(string, int, int)", file="Scanner.cs", label="var fin = false", span="313-313"];
m0_171 [cluster="CommonMark.Parser.Scanner.scan_setext_header_line(string, int, int)", file="Scanner.cs", label="i++", span="314-314"];
m0_168 [cluster="CommonMark.Parser.Scanner.scan_setext_header_line(string, int, int)", file="Scanner.cs", label="c == ' '", span="321-321"];
m0_169 [cluster="CommonMark.Parser.Scanner.scan_setext_header_line(string, int, int)", file="Scanner.cs", label="c == '\n'", span="324-324"];
m0_167 [cluster="CommonMark.Parser.Scanner.scan_setext_header_line(string, int, int)", file="Scanner.cs", label="fin = true", span="320-320"];
m0_170 [cluster="CommonMark.Parser.Scanner.scan_setext_header_line(string, int, int)", file="Scanner.cs", label="return 0;", span="327-327"];
m0_173 [cluster="CommonMark.Parser.Scanner.scan_setext_header_line(string, int, int)", file="Scanner.cs", label="Exit CommonMark.Parser.Scanner.scan_setext_header_line(string, int, int)", span="297-297"];
m0_20 [cluster="string.IndexOf(char, int, int)", file="Scanner.cs", label="Entry string.IndexOf(char, int, int)", span="0-0"];
m0_119 [cluster="CommonMark.Parser.Scanner.scan_spacechars(string, int, int)", file="Scanner.cs", label="Entry CommonMark.Parser.Scanner.scan_spacechars(string, int, int)", span="223-223"];
m0_120 [cluster="CommonMark.Parser.Scanner.scan_spacechars(string, int, int)", file="Scanner.cs", label="pos >= sourceLength", span="229-229"];
m0_122 [cluster="CommonMark.Parser.Scanner.scan_spacechars(string, int, int)", file="Scanner.cs", label="var i = pos", span="232-232"];
m0_123 [cluster="CommonMark.Parser.Scanner.scan_spacechars(string, int, int)", file="Scanner.cs", label="i < sourceLength", span="232-232"];
m0_124 [cluster="CommonMark.Parser.Scanner.scan_spacechars(string, int, int)", file="Scanner.cs", label="!Utilities.IsWhitespace(s[i])", span="234-234"];
m0_125 [cluster="CommonMark.Parser.Scanner.scan_spacechars(string, int, int)", file="Scanner.cs", label="return i - pos;", span="235-235"];
m0_127 [cluster="CommonMark.Parser.Scanner.scan_spacechars(string, int, int)", file="Scanner.cs", label="return sourceLength - pos;", span="238-238"];
m0_121 [cluster="CommonMark.Parser.Scanner.scan_spacechars(string, int, int)", file="Scanner.cs", label="return 0;", span="230-230"];
m0_126 [cluster="CommonMark.Parser.Scanner.scan_spacechars(string, int, int)", file="Scanner.cs", label="i++", span="232-232"];
m0_128 [cluster="CommonMark.Parser.Scanner.scan_spacechars(string, int, int)", file="Scanner.cs", label="Exit CommonMark.Parser.Scanner.scan_spacechars(string, int, int)", span="223-223"];
m0_218 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="Entry CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", span="424-424"];
m0_219 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="pos + len >= sourceLength", span="435-435"];
m0_221 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="var c1 = s[pos]", span="438-438"];
m0_226 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="var i = pos + 1", span="444-444"];
m0_227 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="i < sourceLength", span="444-444"];
m0_228 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="var c = s[i]", span="446-446"];
m0_234 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="return cnt < len ? 0 : cnt;", span="452-452"];
m0_220 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="return 0;", span="436-436"];
m0_222 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="c1 != '`' && c1 != '~'", span="439-439"];
m0_229 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="c == c1 && !spaces", span="447-447"];
m0_223 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="return 0;", span="440-440"];
m0_224 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="var cnt = 1", span="442-442"];
m0_225 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="var spaces = false", span="443-443"];
m0_230 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="cnt++", span="448-448"];
m0_236 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="i++", span="444-444"];
m0_237 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="return 0;", span="457-457"];
m0_231 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="c == ' '", span="449-449"];
m0_233 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="c == '\n'", span="451-451"];
m0_232 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="spaces = true", span="450-450"];
m0_235 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="return 0;", span="454-454"];
m0_238 [cluster="CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", file="Scanner.cs", label="Exit CommonMark.Parser.Scanner.scan_close_code_fence(string, int, int, int)", span="424-424"];
m0_21 [cluster="string.Substring(int, int)", file="Scanner.cs", label="Entry string.Substring(int, int)", span="0-0"];
m0_24 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="Entry CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", span="57-57"];
m0_25 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="pos + 6 >= sourceLength", span="68-68"];
m0_27 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="char c = s[pos]", span="71-71"];
m0_30 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="int i = pos", span="75-75"];
m0_31 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="int ln = sourceLength - 1", span="76-76"];
m0_38 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="c = s[++i]", span="88-88"];
m0_41 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="c = s[++i]", span="93-93"];
m0_45 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="!ScannerCharacterMatcher.MatchAsciiLetterOrDigit(s, ref c, ref i, ln, '-')", span="99-99"];
m0_47 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="s[i - 1] == '-' || i - domainStart > 63", span="102-102"];
m0_50 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="return hadDot ? i - pos + 1 : 0;", span="106-106"];
m0_54 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="c = s[++i]", span="112-112"];
m0_26 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="return 0;", span="69-69"];
m0_28 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="c == '@'", span="72-72"];
m0_33 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="c == '@'", span="79-79"];
m0_34 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="(c < 'a' || c > 'z')\r\n                    && (c < 'A' || c > 'Z')\r\n                    && (c < '0' || c > '9')\r\n                    && ''.!#$%&'*+/=?^_`{|}~-''.IndexOf(c) == -1", span="82-85"];
m0_29 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="return 0;", span="73-73"];
m0_32 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="i <= ln", span="77-77"];
m0_36 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="i == ln", span="87-87"];
m0_39 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="i == ln", span="92-92"];
m0_51 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="c != '.' || i == ln", span="108-108"];
m0_35 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="return 0;", span="86-86"];
m0_37 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="return 0;", span="87-87"];
m0_40 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="return 0;", span="92-92"];
m0_42 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="bool hadDot = false", span="94-94"];
m0_44 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="var domainStart = i", span="98-98"];
m0_43 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label=true, span="96-96"];
m0_46 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="return 0;", span="100-100"];
m0_49 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="c == '>'", span="105-105"];
m0_48 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="return 0;", span="103-103"];
m0_52 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="return 0;", span="109-109"];
m0_53 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="hadDot = true", span="111-111"];
m0_55 [cluster="CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", file="Scanner.cs", label="Exit CommonMark.Parser.Scanner.scan_autolink_email(string, int, int)", span="57-57"];
d252 -> d410  [color=green, key=1, label=ln, style=dashed];
d252 -> d415  [color=green, key=1, label=ln, style=dashed];
d252 -> d417  [color=green, key=1, label=ln, style=dashed];
d252 -> d270  [color=darkseagreen4, key=1, label=ln, style=dashed];
d252 -> d276  [color=darkseagreen4, key=1, label=ln, style=dashed];
d252 -> d277  [color=darkseagreen4, key=1, label=ln, style=dashed];
d252 -> d281  [color=darkseagreen4, key=1, label=ln, style=dashed];
d252 -> d283  [color=darkseagreen4, key=1, label=ln, style=dashed];
d252 -> d287  [color=darkseagreen4, key=1, label=ln, style=dashed];
d252 -> d289  [color=darkseagreen4, key=1, label=ln, style=dashed];
d252 -> d302  [color=darkseagreen4, key=1, label=ln, style=dashed];
d252 -> d321  [color=darkseagreen4, key=1, label=ln, style=dashed];
d252 -> d326  [color=darkseagreen4, key=1, label=ln, style=dashed];
d252 -> d327  [color=darkseagreen4, key=1, label=ln, style=dashed];
d252 -> d330  [color=darkseagreen4, key=1, label=ln, style=dashed];
d252 -> d339  [color=darkseagreen4, key=1, label=ln, style=dashed];
d252 -> d346  [color=darkseagreen4, key=1, label=ln, style=dashed];
d252 -> d347  [color=darkseagreen4, key=1, label=ln, style=dashed];
d252 -> d351  [color=darkseagreen4, key=1, label=ln, style=dashed];
d252 -> d353  [color=darkseagreen4, key=1, label=ln, style=dashed];
d252 -> d358  [color=darkseagreen4, key=1, label=ln, style=dashed];
d252 -> d361  [color=darkseagreen4, key=1, label=ln, style=dashed];
d252 -> d366  [color=darkseagreen4, key=1, label=ln, style=dashed];
d252 -> d375  [color=darkseagreen4, key=1, label=ln, style=dashed];
d252 -> d379  [color=darkseagreen4, key=1, label=ln, style=dashed];
d252 -> d390  [color=darkseagreen4, key=1, label=ln, style=dashed];
d252 -> d397  [color=darkseagreen4, key=1, label=ln, style=dashed];
d252 -> d399  [color=darkseagreen4, key=1, label=ln, style=dashed];
d252 -> d401  [color=darkseagreen4, key=1, label=ln, style=dashed];
d252 -> d403  [color=darkseagreen4, key=1, label=ln, style=dashed];
d252 -> d404  [color=darkseagreen4, key=1, label=ln, style=dashed];
d252 -> d413  [color=darkseagreen4, key=1, label=ln, style=dashed];
d252 -> d419  [color=darkseagreen4, key=1, label=ln, style=dashed];
d252 -> d423  [color=darkseagreen4, key=1, label=ln, style=dashed];
d252 -> d426  [color=darkseagreen4, key=1, label=ln, style=dashed];
d252 -> d427  [color=darkseagreen4, key=1, label=ln, style=dashed];
d409 -> d415  [color=green, key=1, label=p, style=dashed];
d409 -> d417  [color=green, key=1, label=p, style=dashed];
d409 -> d418  [color=green, key=1, label=p, style=dashed];
d409 -> d411  [color=darkseagreen4, key=1, label=p, style=dashed];
d409 -> d413  [color=darkseagreen4, key=1, label=p, style=dashed];
d409 -> d414  [color=darkseagreen4, key=1, label=p, style=dashed];
d409 -> d419  [color=darkseagreen4, key=1, label=p, style=dashed];
d411 -> d415  [color=green, key=1, label=p, style=dashed];
d411 -> d417  [color=green, key=1, label=p, style=dashed];
d411 -> d418  [color=green, key=1, label=p, style=dashed];
d411 -> d411  [color=darkseagreen4, key=1, label=p, style=dashed];
d411 -> d413  [color=darkseagreen4, key=1, label=p, style=dashed];
d411 -> d414  [color=darkseagreen4, key=1, label=p, style=dashed];
d411 -> d419  [color=darkseagreen4, key=1, label=p, style=dashed];
d414 -> d415  [color=green, key=1, label=p, style=dashed];
d414 -> d417  [color=green, key=1, label=p, style=dashed];
d414 -> d418  [color=green, key=1, label=p, style=dashed];
d414 -> d414  [color=darkseagreen4, key=1, label=p, style=dashed];
d414 -> d419  [color=darkseagreen4, key=1, label=p, style=dashed];
d416 -> d418  [color=green, key=1, label=p, style=dashed];
d416 -> d419  [color=green, key=1, label=p, style=dashed];
d379 -> d417  [color=green, key=1, label=first_nonspace, style=dashed];
d379 -> d399  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
d379 -> d404  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
d379 -> d419  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
d379 -> d423  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
d379 -> d426  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
d418 -> d418  [color=green, key=1, label=p, style=dashed];
d418 -> d419  [color=green, key=1, label=p, style=dashed];
d6 -> d8  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
d6 -> d15  [color=darkseagreen4, key=1, label="CommonMark.Parser.LineInfo", style=dashed];
d6 -> d17  [color=darkseagreen4, key=1, label="CommonMark.Parser.LineInfo", style=dashed];
d6 -> d18  [color=darkseagreen4, key=1, label="CommonMark.Parser.LineInfo", style=dashed];
d6 -> d19  [color=darkseagreen4, key=1, label=int, style=dashed];
d6 -> d20  [color=darkseagreen4, key=1, label=string, style=dashed];
d174 -> d181  [color=darkseagreen4, key=1, label=string, style=dashed];
d174 -> d182  [color=darkseagreen4, key=1, label=int, style=dashed];
d174 -> d183  [color=darkseagreen4, key=1, label=string, style=dashed];
d174 -> d190  [color=darkseagreen4, key=1, label=int, style=dashed];
d174 -> d194  [color=darkseagreen4, key=1, label=int, style=dashed];
d174 -> d196  [color=darkseagreen4, key=1, label=int, style=dashed];
d174 -> d197  [color=darkseagreen4, key=1, label=string, style=dashed];
d174 -> d205  [color=darkseagreen4, key=1, label=int, style=dashed];
d213 -> d215  [color=darkseagreen4, key=1, label="ref int", style=dashed];
d213 -> d219  [color=darkseagreen4, key=1, label="ref int", style=dashed];
d213 -> d220  [color=darkseagreen4, key=1, label="ref int", style=dashed];
d213 -> d223  [color=darkseagreen4, key=1, label="ref int", style=dashed];
d213 -> d229  [color=darkseagreen4, key=1, label="ref int", style=dashed];
d230 -> d232  [color=darkseagreen4, key=1, label=int, style=dashed];
d230 -> d250  [color=darkseagreen4, key=1, label="ref int", style=dashed];
d251 -> d419  [color=darkseagreen4, key=1, label="CommonMark.Parser.LineInfo", style=dashed];
d251 -> d318  [color=darkseagreen4, key=1, label="CommonMark.Parser.LineInfo", style=dashed];
d251 -> d349  [color=darkseagreen4, key=1, label="CommonMark.Parser.LineInfo", style=dashed];
d251 -> d390  [color=darkseagreen4, key=1, label="CommonMark.Parser.LineInfo", style=dashed];
d251 -> d392  [color=darkseagreen4, key=1, label="CommonMark.Parser.LineInfo", style=dashed];
d251 -> d397  [color=darkseagreen4, key=1, label="CommonMark.Parser.LineInfo", style=dashed];
d251 -> d401  [color=darkseagreen4, key=1, label="CommonMark.Parser.LineInfo", style=dashed];
d251 -> d403  [color=darkseagreen4, key=1, label="CommonMark.Parser.LineInfo", style=dashed];
d251 -> d405  [color=darkseagreen4, key=1, label="CommonMark.Parser.LineInfo", style=dashed];
d251 -> d420  [color=darkseagreen4, key=1, label="CommonMark.Parser.LineInfo", style=dashed];
d251 -> d423  [color=darkseagreen4, key=1, label="CommonMark.Parser.LineInfo", style=dashed];
d251 -> d426  [color=darkseagreen4, key=1, label="CommonMark.Parser.LineInfo", style=dashed];
d251 -> d427  [color=darkseagreen4, key=1, label="CommonMark.Parser.LineInfo", style=dashed];
d251 -> d429  [color=darkseagreen4, key=1, label="ref CommonMark.Syntax.Block", style=dashed];
d270 -> d275  [color=darkseagreen4, key=1, label=curChar, style=dashed];
d270 -> d283  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
d270 -> d289  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
d276 -> d276  [color=darkseagreen4, key=1, label=offset, style=dashed];
d277 -> d379  [color=darkseagreen4, key=1, label=offset, style=dashed];
d277 -> d419  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d277 -> d277  [color=darkseagreen4, key=1, label=offset, style=dashed];
d277 -> d281  [color=darkseagreen4, key=1, label=offset, style=dashed];
d277 -> d283  [color=darkseagreen4, key=1, label=offset, style=dashed];
d277 -> d287  [color=darkseagreen4, key=1, label=offset, style=dashed];
d277 -> d289  [color=darkseagreen4, key=1, label=offset, style=dashed];
d277 -> d302  [color=darkseagreen4, key=1, label=offset, style=dashed];
d277 -> d303  [color=darkseagreen4, key=1, label=offset, style=dashed];
d277 -> d304  [color=darkseagreen4, key=1, label=column, style=dashed];
d277 -> d321  [color=darkseagreen4, key=1, label=offset, style=dashed];
d277 -> d326  [color=darkseagreen4, key=1, label=offset, style=dashed];
d277 -> d330  [color=darkseagreen4, key=1, label=offset, style=dashed];
d277 -> d339  [color=darkseagreen4, key=1, label=offset, style=dashed];
d277 -> d346  [color=darkseagreen4, key=1, label=offset, style=dashed];
d277 -> d351  [color=darkseagreen4, key=1, label=offset, style=dashed];
d277 -> d353  [color=darkseagreen4, key=1, label=offset, style=dashed];
d277 -> d375  [color=darkseagreen4, key=1, label=offset, style=dashed];
d277 -> d390  [color=darkseagreen4, key=1, label=offset, style=dashed];
d277 -> d397  [color=darkseagreen4, key=1, label=offset, style=dashed];
d277 -> d401  [color=darkseagreen4, key=1, label=offset, style=dashed];
d277 -> d403  [color=darkseagreen4, key=1, label=offset, style=dashed];
d277 -> d423  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d277 -> d426  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d281 -> d379  [color=darkseagreen4, key=1, label=offset, style=dashed];
d281 -> d419  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d281 -> d281  [color=darkseagreen4, key=1, label=offset, style=dashed];
d281 -> d287  [color=darkseagreen4, key=1, label=offset, style=dashed];
d281 -> d289  [color=darkseagreen4, key=1, label=offset, style=dashed];
d281 -> d302  [color=darkseagreen4, key=1, label=offset, style=dashed];
d281 -> d303  [color=darkseagreen4, key=1, label=offset, style=dashed];
d281 -> d304  [color=darkseagreen4, key=1, label=column, style=dashed];
d281 -> d321  [color=darkseagreen4, key=1, label=offset, style=dashed];
d281 -> d326  [color=darkseagreen4, key=1, label=offset, style=dashed];
d281 -> d330  [color=darkseagreen4, key=1, label=offset, style=dashed];
d281 -> d339  [color=darkseagreen4, key=1, label=offset, style=dashed];
d281 -> d346  [color=darkseagreen4, key=1, label=offset, style=dashed];
d281 -> d351  [color=darkseagreen4, key=1, label=offset, style=dashed];
d281 -> d353  [color=darkseagreen4, key=1, label=offset, style=dashed];
d281 -> d375  [color=darkseagreen4, key=1, label=offset, style=dashed];
d281 -> d390  [color=darkseagreen4, key=1, label=offset, style=dashed];
d281 -> d397  [color=darkseagreen4, key=1, label=offset, style=dashed];
d281 -> d401  [color=darkseagreen4, key=1, label=offset, style=dashed];
d281 -> d403  [color=darkseagreen4, key=1, label=offset, style=dashed];
d281 -> d423  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d281 -> d426  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d283 -> d379  [color=darkseagreen4, key=1, label=offset, style=dashed];
d283 -> d419  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d283 -> d283  [color=darkseagreen4, key=1, label=offset, style=dashed];
d283 -> d287  [color=darkseagreen4, key=1, label=offset, style=dashed];
d283 -> d289  [color=darkseagreen4, key=1, label=offset, style=dashed];
d283 -> d302  [color=darkseagreen4, key=1, label=offset, style=dashed];
d283 -> d303  [color=darkseagreen4, key=1, label=offset, style=dashed];
d283 -> d304  [color=darkseagreen4, key=1, label=column, style=dashed];
d283 -> d321  [color=darkseagreen4, key=1, label=offset, style=dashed];
d283 -> d326  [color=darkseagreen4, key=1, label=offset, style=dashed];
d283 -> d330  [color=darkseagreen4, key=1, label=offset, style=dashed];
d283 -> d339  [color=darkseagreen4, key=1, label=offset, style=dashed];
d283 -> d346  [color=darkseagreen4, key=1, label=offset, style=dashed];
d283 -> d351  [color=darkseagreen4, key=1, label=offset, style=dashed];
d283 -> d353  [color=darkseagreen4, key=1, label=offset, style=dashed];
d283 -> d375  [color=darkseagreen4, key=1, label=offset, style=dashed];
d283 -> d390  [color=darkseagreen4, key=1, label=offset, style=dashed];
d283 -> d397  [color=darkseagreen4, key=1, label=offset, style=dashed];
d283 -> d401  [color=darkseagreen4, key=1, label=offset, style=dashed];
d283 -> d403  [color=darkseagreen4, key=1, label=offset, style=dashed];
d283 -> d423  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d283 -> d426  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d287 -> d379  [color=darkseagreen4, key=1, label=offset, style=dashed];
d287 -> d419  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d287 -> d287  [color=darkseagreen4, key=1, label=offset, style=dashed];
d287 -> d302  [color=darkseagreen4, key=1, label=offset, style=dashed];
d287 -> d303  [color=darkseagreen4, key=1, label=offset, style=dashed];
d287 -> d304  [color=darkseagreen4, key=1, label=column, style=dashed];
d287 -> d321  [color=darkseagreen4, key=1, label=offset, style=dashed];
d287 -> d326  [color=darkseagreen4, key=1, label=offset, style=dashed];
d287 -> d330  [color=darkseagreen4, key=1, label=offset, style=dashed];
d287 -> d339  [color=darkseagreen4, key=1, label=offset, style=dashed];
d287 -> d346  [color=darkseagreen4, key=1, label=offset, style=dashed];
d287 -> d351  [color=darkseagreen4, key=1, label=offset, style=dashed];
d287 -> d353  [color=darkseagreen4, key=1, label=offset, style=dashed];
d287 -> d375  [color=darkseagreen4, key=1, label=offset, style=dashed];
d287 -> d390  [color=darkseagreen4, key=1, label=offset, style=dashed];
d287 -> d397  [color=darkseagreen4, key=1, label=offset, style=dashed];
d287 -> d401  [color=darkseagreen4, key=1, label=offset, style=dashed];
d287 -> d403  [color=darkseagreen4, key=1, label=offset, style=dashed];
d287 -> d423  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d287 -> d426  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d289 -> d379  [color=darkseagreen4, key=1, label=offset, style=dashed];
d289 -> d419  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d289 -> d289  [color=darkseagreen4, key=1, label=offset, style=dashed];
d289 -> d302  [color=darkseagreen4, key=1, label=offset, style=dashed];
d289 -> d303  [color=darkseagreen4, key=1, label=offset, style=dashed];
d289 -> d304  [color=darkseagreen4, key=1, label=column, style=dashed];
d289 -> d321  [color=darkseagreen4, key=1, label=offset, style=dashed];
d289 -> d326  [color=darkseagreen4, key=1, label=offset, style=dashed];
d289 -> d330  [color=darkseagreen4, key=1, label=offset, style=dashed];
d289 -> d339  [color=darkseagreen4, key=1, label=offset, style=dashed];
d289 -> d346  [color=darkseagreen4, key=1, label=offset, style=dashed];
d289 -> d351  [color=darkseagreen4, key=1, label=offset, style=dashed];
d289 -> d353  [color=darkseagreen4, key=1, label=offset, style=dashed];
d289 -> d375  [color=darkseagreen4, key=1, label=offset, style=dashed];
d289 -> d390  [color=darkseagreen4, key=1, label=offset, style=dashed];
d289 -> d397  [color=darkseagreen4, key=1, label=offset, style=dashed];
d289 -> d401  [color=darkseagreen4, key=1, label=offset, style=dashed];
d289 -> d403  [color=darkseagreen4, key=1, label=offset, style=dashed];
d289 -> d423  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d289 -> d426  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d321 -> d325  [color=darkseagreen4, key=1, label=curChar, style=dashed];
d321 -> d326  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
d321 -> d330  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
d321 -> d339  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
d321 -> d347  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
d321 -> d353  [color=darkseagreen4, key=1, label=first_nonspace, style=dashed];
d326 -> d326  [color=darkseagreen4, key=1, label=offset, style=dashed];
d327 -> d379  [color=darkseagreen4, key=1, label=offset, style=dashed];
d327 -> d419  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d327 -> d327  [color=darkseagreen4, key=1, label=offset, style=dashed];
d327 -> d390  [color=darkseagreen4, key=1, label=offset, style=dashed];
d327 -> d397  [color=darkseagreen4, key=1, label=offset, style=dashed];
d327 -> d401  [color=darkseagreen4, key=1, label=offset, style=dashed];
d327 -> d403  [color=darkseagreen4, key=1, label=offset, style=dashed];
d327 -> d423  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d327 -> d426  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d330 -> d379  [color=darkseagreen4, key=1, label=offset, style=dashed];
d330 -> d419  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d330 -> d330  [color=darkseagreen4, key=1, label=offset, style=dashed];
d330 -> d390  [color=darkseagreen4, key=1, label=offset, style=dashed];
d330 -> d397  [color=darkseagreen4, key=1, label=offset, style=dashed];
d330 -> d401  [color=darkseagreen4, key=1, label=offset, style=dashed];
d330 -> d403  [color=darkseagreen4, key=1, label=offset, style=dashed];
d330 -> d423  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d330 -> d426  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d333 -> d339  [color=darkseagreen4, key=1, label=matched, style=dashed];
d339 -> d379  [color=darkseagreen4, key=1, label=offset, style=dashed];
d339 -> d419  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d339 -> d339  [color=darkseagreen4, key=1, label=offset, style=dashed];
d339 -> d390  [color=darkseagreen4, key=1, label=offset, style=dashed];
d339 -> d397  [color=darkseagreen4, key=1, label=offset, style=dashed];
d339 -> d401  [color=darkseagreen4, key=1, label=offset, style=dashed];
d339 -> d403  [color=darkseagreen4, key=1, label=offset, style=dashed];
d339 -> d423  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d339 -> d426  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d346 -> d379  [color=darkseagreen4, key=1, label=offset, style=dashed];
d346 -> d419  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d346 -> d346  [color=darkseagreen4, key=1, label=offset, style=dashed];
d346 -> d390  [color=darkseagreen4, key=1, label=offset, style=dashed];
d346 -> d397  [color=darkseagreen4, key=1, label=offset, style=dashed];
d346 -> d401  [color=darkseagreen4, key=1, label=offset, style=dashed];
d346 -> d403  [color=darkseagreen4, key=1, label=offset, style=dashed];
d346 -> d423  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d346 -> d426  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d351 -> d379  [color=darkseagreen4, key=1, label=offset, style=dashed];
d351 -> d419  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d351 -> d351  [color=darkseagreen4, key=1, label=offset, style=dashed];
d351 -> d390  [color=darkseagreen4, key=1, label=offset, style=dashed];
d351 -> d397  [color=darkseagreen4, key=1, label=offset, style=dashed];
d351 -> d401  [color=darkseagreen4, key=1, label=offset, style=dashed];
d351 -> d403  [color=darkseagreen4, key=1, label=offset, style=dashed];
d351 -> d423  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d351 -> d426  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d352 -> d369  [color=darkseagreen4, key=1, label=data, style=dashed];
d353 -> d379  [color=darkseagreen4, key=1, label=offset, style=dashed];
d353 -> d419  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d353 -> d353  [color=darkseagreen4, key=1, label=offset, style=dashed];
d353 -> d357  [color=darkseagreen4, key=1, label=column, style=dashed];
d353 -> d358  [color=darkseagreen4, key=1, label=offset, style=dashed];
d353 -> d359  [color=darkseagreen4, key=1, label=column, style=dashed];
d353 -> d361  [color=darkseagreen4, key=1, label=offset, style=dashed];
d353 -> d390  [color=darkseagreen4, key=1, label=offset, style=dashed];
d353 -> d397  [color=darkseagreen4, key=1, label=offset, style=dashed];
d353 -> d401  [color=darkseagreen4, key=1, label=offset, style=dashed];
d353 -> d403  [color=darkseagreen4, key=1, label=offset, style=dashed];
d353 -> d423  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d353 -> d426  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d358 -> d379  [color=darkseagreen4, key=1, label=offset, style=dashed];
d358 -> d419  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d358 -> d358  [color=darkseagreen4, key=1, label=offset, style=dashed];
d358 -> d361  [color=darkseagreen4, key=1, label=offset, style=dashed];
d358 -> d390  [color=darkseagreen4, key=1, label=offset, style=dashed];
d358 -> d397  [color=darkseagreen4, key=1, label=offset, style=dashed];
d358 -> d401  [color=darkseagreen4, key=1, label=offset, style=dashed];
d358 -> d403  [color=darkseagreen4, key=1, label=offset, style=dashed];
d358 -> d423  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d358 -> d426  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d366 -> d379  [color=darkseagreen4, key=1, label=offset, style=dashed];
d366 -> d419  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d366 -> d366  [color=darkseagreen4, key=1, label=offset, style=dashed];
d366 -> d390  [color=darkseagreen4, key=1, label=offset, style=dashed];
d366 -> d397  [color=darkseagreen4, key=1, label=offset, style=dashed];
d366 -> d401  [color=darkseagreen4, key=1, label=offset, style=dashed];
d366 -> d403  [color=darkseagreen4, key=1, label=offset, style=dashed];
d366 -> d423  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d366 -> d426  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d375 -> d379  [color=darkseagreen4, key=1, label=offset, style=dashed];
d375 -> d419  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d375 -> d375  [color=darkseagreen4, key=1, label=offset, style=dashed];
d375 -> d390  [color=darkseagreen4, key=1, label=offset, style=dashed];
d375 -> d397  [color=darkseagreen4, key=1, label=offset, style=dashed];
d375 -> d401  [color=darkseagreen4, key=1, label=offset, style=dashed];
d375 -> d403  [color=darkseagreen4, key=1, label=offset, style=dashed];
d375 -> d423  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d375 -> d426  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d254 -> d379  [color=darkseagreen4, key=1, label=offset, style=dashed];
d254 -> d270  [color=darkseagreen4, key=1, label=offset, style=dashed];
d254 -> d276  [color=darkseagreen4, key=1, label=offset, style=dashed];
d254 -> d281  [color=darkseagreen4, key=1, label=offset, style=dashed];
d254 -> d283  [color=darkseagreen4, key=1, label=offset, style=dashed];
d254 -> d287  [color=darkseagreen4, key=1, label=offset, style=dashed];
d254 -> d289  [color=darkseagreen4, key=1, label=offset, style=dashed];
d254 -> d302  [color=darkseagreen4, key=1, label=offset, style=dashed];
d254 -> d321  [color=darkseagreen4, key=1, label=offset, style=dashed];
d254 -> d326  [color=darkseagreen4, key=1, label=offset, style=dashed];
d254 -> d330  [color=darkseagreen4, key=1, label=offset, style=dashed];
d254 -> d339  [color=darkseagreen4, key=1, label=offset, style=dashed];
d254 -> d346  [color=darkseagreen4, key=1, label=offset, style=dashed];
d254 -> d351  [color=darkseagreen4, key=1, label=offset, style=dashed];
d254 -> d353  [color=darkseagreen4, key=1, label=offset, style=dashed];
d254 -> d375  [color=darkseagreen4, key=1, label=offset, style=dashed];
d254 -> d390  [color=darkseagreen4, key=1, label=offset, style=dashed];
d254 -> d397  [color=darkseagreen4, key=1, label=offset, style=dashed];
d254 -> d401  [color=darkseagreen4, key=1, label=offset, style=dashed];
d254 -> d403  [color=darkseagreen4, key=1, label=offset, style=dashed];
d254 -> d303  [color=darkseagreen4, key=1, label=offset, style=dashed];
d255 -> d379  [color=darkseagreen4, key=1, label=column, style=dashed];
d255 -> d270  [color=darkseagreen4, key=1, label=column, style=dashed];
d255 -> d276  [color=darkseagreen4, key=1, label=column, style=dashed];
d255 -> d281  [color=darkseagreen4, key=1, label=column, style=dashed];
d255 -> d283  [color=darkseagreen4, key=1, label=column, style=dashed];
d255 -> d287  [color=darkseagreen4, key=1, label=column, style=dashed];
d255 -> d289  [color=darkseagreen4, key=1, label=column, style=dashed];
d255 -> d321  [color=darkseagreen4, key=1, label=column, style=dashed];
d255 -> d326  [color=darkseagreen4, key=1, label=column, style=dashed];
d255 -> d330  [color=darkseagreen4, key=1, label=column, style=dashed];
d255 -> d339  [color=darkseagreen4, key=1, label=column, style=dashed];
d255 -> d346  [color=darkseagreen4, key=1, label=column, style=dashed];
d255 -> d351  [color=darkseagreen4, key=1, label=column, style=dashed];
d255 -> d353  [color=darkseagreen4, key=1, label=column, style=dashed];
d255 -> d375  [color=darkseagreen4, key=1, label=column, style=dashed];
d255 -> d304  [color=darkseagreen4, key=1, label=column, style=dashed];
d303 -> d379  [color=darkseagreen4, key=1, label=offset, style=dashed];
d303 -> d321  [color=darkseagreen4, key=1, label=offset, style=dashed];
d303 -> d326  [color=darkseagreen4, key=1, label=offset, style=dashed];
d303 -> d330  [color=darkseagreen4, key=1, label=offset, style=dashed];
d303 -> d339  [color=darkseagreen4, key=1, label=offset, style=dashed];
d303 -> d346  [color=darkseagreen4, key=1, label=offset, style=dashed];
d303 -> d351  [color=darkseagreen4, key=1, label=offset, style=dashed];
d303 -> d353  [color=darkseagreen4, key=1, label=offset, style=dashed];
d303 -> d375  [color=darkseagreen4, key=1, label=offset, style=dashed];
d303 -> d390  [color=darkseagreen4, key=1, label=offset, style=dashed];
d303 -> d397  [color=darkseagreen4, key=1, label=offset, style=dashed];
d303 -> d401  [color=darkseagreen4, key=1, label=offset, style=dashed];
d303 -> d403  [color=darkseagreen4, key=1, label=offset, style=dashed];
d303 -> d303  [color=darkseagreen4, key=1, label=offset, style=dashed];
d304 -> d379  [color=darkseagreen4, key=1, label=column, style=dashed];
d304 -> d321  [color=darkseagreen4, key=1, label=column, style=dashed];
d304 -> d326  [color=darkseagreen4, key=1, label=column, style=dashed];
d304 -> d330  [color=darkseagreen4, key=1, label=column, style=dashed];
d304 -> d339  [color=darkseagreen4, key=1, label=column, style=dashed];
d304 -> d346  [color=darkseagreen4, key=1, label=column, style=dashed];
d304 -> d351  [color=darkseagreen4, key=1, label=column, style=dashed];
d304 -> d353  [color=darkseagreen4, key=1, label=column, style=dashed];
d304 -> d375  [color=darkseagreen4, key=1, label=column, style=dashed];
d304 -> d304  [color=darkseagreen4, key=1, label=column, style=dashed];
d380 -> d399  [color=darkseagreen4, key=1, label=indent, style=dashed];
d381 -> d389  [color=darkseagreen4, key=1, label=blank, style=dashed];
d381 -> d407  [color=darkseagreen4, key=1, label=blank, style=dashed];
d318 -> d419  [color=darkseagreen4, key=1, label=container, style=dashed];
d318 -> d347  [color=darkseagreen4, key=1, label=container, style=dashed];
d318 -> d397  [color=darkseagreen4, key=1, label=container, style=dashed];
d318 -> d399  [color=darkseagreen4, key=1, label=container, style=dashed];
d318 -> d401  [color=darkseagreen4, key=1, label=container, style=dashed];
d318 -> d403  [color=darkseagreen4, key=1, label=container, style=dashed];
d318 -> d404  [color=darkseagreen4, key=1, label=container, style=dashed];
d318 -> d423  [color=darkseagreen4, key=1, label=container, style=dashed];
d318 -> d427  [color=darkseagreen4, key=1, label=container, style=dashed];
d318 -> d408  [color=darkseagreen4, key=1, label=container, style=dashed];
d318 -> d320  [color=darkseagreen4, key=1, label=container, style=dashed];
d318 -> d377  [color=darkseagreen4, key=1, label=container, style=dashed];
d318 -> d318  [color=darkseagreen4, key=1, label=container, style=dashed];
d318 -> d369  [color=darkseagreen4, key=1, label=container, style=dashed];
d318 -> d382  [color=darkseagreen4, key=1, label=container, style=dashed];
d318 -> d389  [color=darkseagreen4, key=1, label=container, style=dashed];
d318 -> d396  [color=darkseagreen4, key=1, label=container, style=dashed];
d318 -> d398  [color=darkseagreen4, key=1, label=container, style=dashed];
d318 -> d402  [color=darkseagreen4, key=1, label=container, style=dashed];
d318 -> d405  [color=darkseagreen4, key=1, label=container, style=dashed];
d318 -> d420  [color=darkseagreen4, key=1, label=container, style=dashed];
d318 -> d422  [color=darkseagreen4, key=1, label=container, style=dashed];
d318 -> d424  [color=darkseagreen4, key=1, label=container, style=dashed];
d328 -> d419  [color=darkseagreen4, key=1, label=container, style=dashed];
d328 -> d397  [color=darkseagreen4, key=1, label=container, style=dashed];
d328 -> d399  [color=darkseagreen4, key=1, label=container, style=dashed];
d328 -> d401  [color=darkseagreen4, key=1, label=container, style=dashed];
d328 -> d403  [color=darkseagreen4, key=1, label=container, style=dashed];
d328 -> d404  [color=darkseagreen4, key=1, label=container, style=dashed];
d328 -> d423  [color=darkseagreen4, key=1, label=container, style=dashed];
d328 -> d427  [color=darkseagreen4, key=1, label=container, style=dashed];
d328 -> d408  [color=darkseagreen4, key=1, label=container, style=dashed];
d328 -> d382  [color=darkseagreen4, key=1, label=container, style=dashed];
d328 -> d389  [color=darkseagreen4, key=1, label=container, style=dashed];
d328 -> d396  [color=darkseagreen4, key=1, label=container, style=dashed];
d328 -> d398  [color=darkseagreen4, key=1, label=container, style=dashed];
d328 -> d402  [color=darkseagreen4, key=1, label=container, style=dashed];
d328 -> d405  [color=darkseagreen4, key=1, label=container, style=dashed];
d328 -> d420  [color=darkseagreen4, key=1, label=container, style=dashed];
d328 -> d422  [color=darkseagreen4, key=1, label=container, style=dashed];
d328 -> d424  [color=darkseagreen4, key=1, label=container, style=dashed];
d331 -> d419  [color=darkseagreen4, key=1, label=container, style=dashed];
d331 -> d397  [color=darkseagreen4, key=1, label=container, style=dashed];
d331 -> d399  [color=darkseagreen4, key=1, label=container, style=dashed];
d331 -> d401  [color=darkseagreen4, key=1, label=container, style=dashed];
d331 -> d403  [color=darkseagreen4, key=1, label=container, style=dashed];
d331 -> d404  [color=darkseagreen4, key=1, label=container, style=dashed];
d331 -> d423  [color=darkseagreen4, key=1, label=container, style=dashed];
d331 -> d427  [color=darkseagreen4, key=1, label=container, style=dashed];
d331 -> d408  [color=darkseagreen4, key=1, label=container, style=dashed];
d331 -> d377  [color=darkseagreen4, key=1, label=container, style=dashed];
d331 -> d382  [color=darkseagreen4, key=1, label=container, style=dashed];
d331 -> d389  [color=darkseagreen4, key=1, label=container, style=dashed];
d331 -> d396  [color=darkseagreen4, key=1, label=container, style=dashed];
d331 -> d398  [color=darkseagreen4, key=1, label=container, style=dashed];
d331 -> d402  [color=darkseagreen4, key=1, label=container, style=dashed];
d331 -> d405  [color=darkseagreen4, key=1, label=container, style=dashed];
d331 -> d420  [color=darkseagreen4, key=1, label=container, style=dashed];
d331 -> d422  [color=darkseagreen4, key=1, label=container, style=dashed];
d331 -> d424  [color=darkseagreen4, key=1, label=container, style=dashed];
d334 -> d419  [color=darkseagreen4, key=1, label=container, style=dashed];
d334 -> d397  [color=darkseagreen4, key=1, label=container, style=dashed];
d334 -> d399  [color=darkseagreen4, key=1, label=container, style=dashed];
d334 -> d401  [color=darkseagreen4, key=1, label=container, style=dashed];
d334 -> d403  [color=darkseagreen4, key=1, label=container, style=dashed];
d334 -> d404  [color=darkseagreen4, key=1, label=container, style=dashed];
d334 -> d423  [color=darkseagreen4, key=1, label=container, style=dashed];
d334 -> d427  [color=darkseagreen4, key=1, label=container, style=dashed];
d334 -> d408  [color=darkseagreen4, key=1, label=container, style=dashed];
d334 -> d377  [color=darkseagreen4, key=1, label=container, style=dashed];
d334 -> d382  [color=darkseagreen4, key=1, label=container, style=dashed];
d334 -> d389  [color=darkseagreen4, key=1, label=container, style=dashed];
d334 -> d396  [color=darkseagreen4, key=1, label=container, style=dashed];
d334 -> d398  [color=darkseagreen4, key=1, label=container, style=dashed];
d334 -> d402  [color=darkseagreen4, key=1, label=container, style=dashed];
d334 -> d405  [color=darkseagreen4, key=1, label=container, style=dashed];
d334 -> d420  [color=darkseagreen4, key=1, label=container, style=dashed];
d334 -> d422  [color=darkseagreen4, key=1, label=container, style=dashed];
d334 -> d424  [color=darkseagreen4, key=1, label=container, style=dashed];
d341 -> d419  [color=darkseagreen4, key=1, label=container, style=dashed];
d341 -> d397  [color=darkseagreen4, key=1, label=container, style=dashed];
d341 -> d399  [color=darkseagreen4, key=1, label=container, style=dashed];
d341 -> d401  [color=darkseagreen4, key=1, label=container, style=dashed];
d341 -> d403  [color=darkseagreen4, key=1, label=container, style=dashed];
d341 -> d404  [color=darkseagreen4, key=1, label=container, style=dashed];
d341 -> d423  [color=darkseagreen4, key=1, label=container, style=dashed];
d341 -> d427  [color=darkseagreen4, key=1, label=container, style=dashed];
d341 -> d408  [color=darkseagreen4, key=1, label=container, style=dashed];
d341 -> d377  [color=darkseagreen4, key=1, label=container, style=dashed];
d341 -> d382  [color=darkseagreen4, key=1, label=container, style=dashed];
d341 -> d389  [color=darkseagreen4, key=1, label=container, style=dashed];
d341 -> d396  [color=darkseagreen4, key=1, label=container, style=dashed];
d341 -> d398  [color=darkseagreen4, key=1, label=container, style=dashed];
d341 -> d402  [color=darkseagreen4, key=1, label=container, style=dashed];
d341 -> d405  [color=darkseagreen4, key=1, label=container, style=dashed];
d341 -> d420  [color=darkseagreen4, key=1, label=container, style=dashed];
d341 -> d422  [color=darkseagreen4, key=1, label=container, style=dashed];
d341 -> d424  [color=darkseagreen4, key=1, label=container, style=dashed];
d372 -> d419  [color=darkseagreen4, key=1, label=container, style=dashed];
d372 -> d397  [color=darkseagreen4, key=1, label=container, style=dashed];
d372 -> d399  [color=darkseagreen4, key=1, label=container, style=dashed];
d372 -> d401  [color=darkseagreen4, key=1, label=container, style=dashed];
d372 -> d403  [color=darkseagreen4, key=1, label=container, style=dashed];
d372 -> d404  [color=darkseagreen4, key=1, label=container, style=dashed];
d372 -> d423  [color=darkseagreen4, key=1, label=container, style=dashed];
d372 -> d427  [color=darkseagreen4, key=1, label=container, style=dashed];
d372 -> d408  [color=darkseagreen4, key=1, label=container, style=dashed];
d372 -> d377  [color=darkseagreen4, key=1, label=container, style=dashed];
d372 -> d382  [color=darkseagreen4, key=1, label=container, style=dashed];
d372 -> d389  [color=darkseagreen4, key=1, label=container, style=dashed];
d372 -> d396  [color=darkseagreen4, key=1, label=container, style=dashed];
d372 -> d398  [color=darkseagreen4, key=1, label=container, style=dashed];
d372 -> d402  [color=darkseagreen4, key=1, label=container, style=dashed];
d372 -> d405  [color=darkseagreen4, key=1, label=container, style=dashed];
d372 -> d420  [color=darkseagreen4, key=1, label=container, style=dashed];
d372 -> d422  [color=darkseagreen4, key=1, label=container, style=dashed];
d372 -> d424  [color=darkseagreen4, key=1, label=container, style=dashed];
d376 -> d419  [color=darkseagreen4, key=1, label=container, style=dashed];
d376 -> d397  [color=darkseagreen4, key=1, label=container, style=dashed];
d376 -> d399  [color=darkseagreen4, key=1, label=container, style=dashed];
d376 -> d401  [color=darkseagreen4, key=1, label=container, style=dashed];
d376 -> d403  [color=darkseagreen4, key=1, label=container, style=dashed];
d376 -> d404  [color=darkseagreen4, key=1, label=container, style=dashed];
d376 -> d423  [color=darkseagreen4, key=1, label=container, style=dashed];
d376 -> d427  [color=darkseagreen4, key=1, label=container, style=dashed];
d376 -> d408  [color=darkseagreen4, key=1, label=container, style=dashed];
d376 -> d382  [color=darkseagreen4, key=1, label=container, style=dashed];
d376 -> d389  [color=darkseagreen4, key=1, label=container, style=dashed];
d376 -> d396  [color=darkseagreen4, key=1, label=container, style=dashed];
d376 -> d398  [color=darkseagreen4, key=1, label=container, style=dashed];
d376 -> d402  [color=darkseagreen4, key=1, label=container, style=dashed];
d376 -> d405  [color=darkseagreen4, key=1, label=container, style=dashed];
d376 -> d420  [color=darkseagreen4, key=1, label=container, style=dashed];
d376 -> d422  [color=darkseagreen4, key=1, label=container, style=dashed];
d376 -> d424  [color=darkseagreen4, key=1, label=container, style=dashed];
d256 -> d419  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d256 -> d276  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d256 -> d281  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d256 -> d283  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d256 -> d287  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d256 -> d289  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d256 -> d326  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d256 -> d330  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d256 -> d339  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d256 -> d346  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d256 -> d351  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d256 -> d353  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d256 -> d375  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d256 -> d390  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d256 -> d397  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d256 -> d401  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d256 -> d403  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d256 -> d423  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d256 -> d426  [color=darkseagreen4, key=1, label=remainingSpaces, style=dashed];
d267 -> d419  [color=darkseagreen4, key=1, label=container, style=dashed];
d267 -> d347  [color=darkseagreen4, key=1, label=container, style=dashed];
d267 -> d397  [color=darkseagreen4, key=1, label=container, style=dashed];
d267 -> d399  [color=darkseagreen4, key=1, label=container, style=dashed];
d267 -> d401  [color=darkseagreen4, key=1, label=container, style=dashed];
d267 -> d403  [color=darkseagreen4, key=1, label=container, style=dashed];
d267 -> d404  [color=darkseagreen4, key=1, label=container, style=dashed];
d267 -> d423  [color=darkseagreen4, key=1, label=container, style=dashed];
d267 -> d427  [color=darkseagreen4, key=1, label=container, style=dashed];
d267 -> d408  [color=darkseagreen4, key=1, label=container, style=dashed];
d267 -> d320  [color=darkseagreen4, key=1, label=container, style=dashed];
d267 -> d377  [color=darkseagreen4, key=1, label=container, style=dashed];
d267 -> d318  [color=darkseagreen4, key=1, label=container, style=dashed];
d267 -> d317  [color=darkseagreen4, key=1, label=container, style=dashed];
d267 -> d369  [color=darkseagreen4, key=1, label=container, style=dashed];
d267 -> d382  [color=darkseagreen4, key=1, label=container, style=dashed];
d267 -> d389  [color=darkseagreen4, key=1, label=container, style=dashed];
d267 -> d396  [color=darkseagreen4, key=1, label=container, style=dashed];
d267 -> d398  [color=darkseagreen4, key=1, label=container, style=dashed];
d267 -> d402  [color=darkseagreen4, key=1, label=container, style=dashed];
d267 -> d405  [color=darkseagreen4, key=1, label=container, style=dashed];
d267 -> d420  [color=darkseagreen4, key=1, label=container, style=dashed];
d267 -> d422  [color=darkseagreen4, key=1, label=container, style=dashed];
d267 -> d424  [color=darkseagreen4, key=1, label=container, style=dashed];
d269 -> d419  [color=darkseagreen4, key=1, label=container, style=dashed];
d269 -> d281  [color=darkseagreen4, key=1, label=container, style=dashed];
d269 -> d347  [color=darkseagreen4, key=1, label=container, style=dashed];
d269 -> d397  [color=darkseagreen4, key=1, label=container, style=dashed];
d269 -> d399  [color=darkseagreen4, key=1, label=container, style=dashed];
d269 -> d401  [color=darkseagreen4, key=1, label=container, style=dashed];
d269 -> d403  [color=darkseagreen4, key=1, label=container, style=dashed];
d269 -> d404  [color=darkseagreen4, key=1, label=container, style=dashed];
d269 -> d423  [color=darkseagreen4, key=1, label=container, style=dashed];
d269 -> d427  [color=darkseagreen4, key=1, label=container, style=dashed];
d269 -> d408  [color=darkseagreen4, key=1, label=container, style=dashed];
d269 -> d320  [color=darkseagreen4, key=1, label=container, style=dashed];
d269 -> d377  [color=darkseagreen4, key=1, label=container, style=dashed];
d269 -> d318  [color=darkseagreen4, key=1, label=container, style=dashed];
d269 -> d273  [color=darkseagreen4, key=1, label=container, style=dashed];
d269 -> d280  [color=darkseagreen4, key=1, label=container, style=dashed];
d269 -> d282  [color=darkseagreen4, key=1, label=container, style=dashed];
d269 -> d297  [color=darkseagreen4, key=1, label=container, style=dashed];
d269 -> d307  [color=darkseagreen4, key=1, label=container, style=dashed];
d269 -> d317  [color=darkseagreen4, key=1, label=container, style=dashed];
d269 -> d369  [color=darkseagreen4, key=1, label=container, style=dashed];
d269 -> d382  [color=darkseagreen4, key=1, label=container, style=dashed];
d269 -> d389  [color=darkseagreen4, key=1, label=container, style=dashed];
d269 -> d396  [color=darkseagreen4, key=1, label=container, style=dashed];
d269 -> d398  [color=darkseagreen4, key=1, label=container, style=dashed];
d269 -> d402  [color=darkseagreen4, key=1, label=container, style=dashed];
d269 -> d405  [color=darkseagreen4, key=1, label=container, style=dashed];
d269 -> d420  [color=darkseagreen4, key=1, label=container, style=dashed];
d269 -> d422  [color=darkseagreen4, key=1, label=container, style=dashed];
d269 -> d424  [color=darkseagreen4, key=1, label=container, style=dashed];
d315 -> d419  [color=darkseagreen4, key=1, label=container, style=dashed];
d315 -> d347  [color=darkseagreen4, key=1, label=container, style=dashed];
d315 -> d397  [color=darkseagreen4, key=1, label=container, style=dashed];
d315 -> d399  [color=darkseagreen4, key=1, label=container, style=dashed];
d315 -> d401  [color=darkseagreen4, key=1, label=container, style=dashed];
d315 -> d403  [color=darkseagreen4, key=1, label=container, style=dashed];
d315 -> d404  [color=darkseagreen4, key=1, label=container, style=dashed];
d315 -> d423  [color=darkseagreen4, key=1, label=container, style=dashed];
d315 -> d427  [color=darkseagreen4, key=1, label=container, style=dashed];
d315 -> d408  [color=darkseagreen4, key=1, label=container, style=dashed];
d315 -> d320  [color=darkseagreen4, key=1, label=container, style=dashed];
d315 -> d377  [color=darkseagreen4, key=1, label=container, style=dashed];
d315 -> d318  [color=darkseagreen4, key=1, label=container, style=dashed];
d315 -> d317  [color=darkseagreen4, key=1, label=container, style=dashed];
d315 -> d369  [color=darkseagreen4, key=1, label=container, style=dashed];
d315 -> d382  [color=darkseagreen4, key=1, label=container, style=dashed];
d315 -> d389  [color=darkseagreen4, key=1, label=container, style=dashed];
d315 -> d396  [color=darkseagreen4, key=1, label=container, style=dashed];
d315 -> d398  [color=darkseagreen4, key=1, label=container, style=dashed];
d315 -> d402  [color=darkseagreen4, key=1, label=container, style=dashed];
d315 -> d405  [color=darkseagreen4, key=1, label=container, style=dashed];
d315 -> d420  [color=darkseagreen4, key=1, label=container, style=dashed];
d315 -> d422  [color=darkseagreen4, key=1, label=container, style=dashed];
d315 -> d424  [color=darkseagreen4, key=1, label=container, style=dashed];
d350 -> d419  [color=darkseagreen4, key=1, label=container, style=dashed];
d350 -> d397  [color=darkseagreen4, key=1, label=container, style=dashed];
d350 -> d399  [color=darkseagreen4, key=1, label=container, style=dashed];
d350 -> d401  [color=darkseagreen4, key=1, label=container, style=dashed];
d350 -> d403  [color=darkseagreen4, key=1, label=container, style=dashed];
d350 -> d404  [color=darkseagreen4, key=1, label=container, style=dashed];
d350 -> d423  [color=darkseagreen4, key=1, label=container, style=dashed];
d350 -> d427  [color=darkseagreen4, key=1, label=container, style=dashed];
d350 -> d408  [color=darkseagreen4, key=1, label=container, style=dashed];
d350 -> d377  [color=darkseagreen4, key=1, label=container, style=dashed];
d350 -> d382  [color=darkseagreen4, key=1, label=container, style=dashed];
d350 -> d389  [color=darkseagreen4, key=1, label=container, style=dashed];
d350 -> d396  [color=darkseagreen4, key=1, label=container, style=dashed];
d350 -> d398  [color=darkseagreen4, key=1, label=container, style=dashed];
d350 -> d402  [color=darkseagreen4, key=1, label=container, style=dashed];
d350 -> d405  [color=darkseagreen4, key=1, label=container, style=dashed];
d350 -> d420  [color=darkseagreen4, key=1, label=container, style=dashed];
d350 -> d422  [color=darkseagreen4, key=1, label=container, style=dashed];
d350 -> d424  [color=darkseagreen4, key=1, label=container, style=dashed];
d9 -> d18  [color=darkseagreen4, key=1, label=len, style=dashed];
d9 -> d20  [color=darkseagreen4, key=1, label=len, style=dashed];
d12 -> d18  [color=darkseagreen4, key=1, label=curSC, style=dashed];
d12 -> d19  [color=darkseagreen4, key=1, label=curSC, style=dashed];
d12 -> d20  [color=darkseagreen4, key=1, label=curSC, style=dashed];
d14 -> d18  [color=darkseagreen4, key=1, label=curSC, style=dashed];
d14 -> d19  [color=darkseagreen4, key=1, label=curSC, style=dashed];
d14 -> d20  [color=darkseagreen4, key=1, label=curSC, style=dashed];
d263 -> d390  [color=darkseagreen4, key=1, label=cur, style=dashed];
d263 -> d389  [color=darkseagreen4, key=1, label=cur, style=dashed];
d263 -> d391  [color=darkseagreen4, key=1, label=cur, style=dashed];
d263 -> d392  [color=darkseagreen4, key=1, label=cur, style=dashed];
d178 -> d181  [color=darkseagreen4, key=1, label=len, style=dashed];
d178 -> d183  [color=darkseagreen4, key=1, label=len, style=dashed];
d178 -> d190  [color=darkseagreen4, key=1, label=len, style=dashed];
d178 -> d194  [color=darkseagreen4, key=1, label=len, style=dashed];
d178 -> d197  [color=darkseagreen4, key=1, label=len, style=dashed];
d179 -> d205  [color=darkseagreen4, key=1, label=startpos, style=dashed];
d180 -> d188  [color=darkseagreen4, key=1, label=c, style=dashed];
d180 -> d194  [color=darkseagreen4, key=1, label=c, style=dashed];
d182 -> d182  [color=darkseagreen4, key=1, label=int, style=dashed];
d182 -> d205  [color=darkseagreen4, key=1, label=int, style=dashed];
d191 -> d194  [color=darkseagreen4, key=1, label=int, style=dashed];
d191 -> d196  [color=darkseagreen4, key=1, label=int, style=dashed];
d196 -> d196  [color=darkseagreen4, key=1, label=int, style=dashed];
d196 -> d205  [color=darkseagreen4, key=1, label=int, style=dashed];
d215 -> d229  [color=darkseagreen4, key=1, label="ref int", style=dashed];
d215 -> d215  [color=darkseagreen4, key=1, label="ref int", style=dashed];
d217 -> d222  [color=darkseagreen4, key=1, label=c, style=dashed];
d219 -> d229  [color=darkseagreen4, key=1, label="ref int", style=dashed];
d219 -> d219  [color=darkseagreen4, key=1, label="ref int", style=dashed];
d220 -> d229  [color=darkseagreen4, key=1, label="ref int", style=dashed];
d220 -> d220  [color=darkseagreen4, key=1, label="ref int", style=dashed];
d223 -> d229  [color=darkseagreen4, key=1, label="ref int", style=dashed];
d223 -> d223  [color=darkseagreen4, key=1, label="ref int", style=dashed];
d225 -> d229  [color=darkseagreen4, key=1, label="ref int", style=dashed];
d233 -> d250  [color=darkseagreen4, key=1, label="ref int", style=dashed];
d242 -> d250  [color=darkseagreen4, key=1, label="ref int", style=dashed];
d243 -> d250  [color=darkseagreen4, key=1, label="ref int", style=dashed];
d247 -> d250  [color=darkseagreen4, key=1, label="ref int", style=dashed];
d248 -> d250  [color=darkseagreen4, key=1, label="ref int", style=dashed];
d38 -> d45  [color=darkseagreen4, key=1, label="CommonMark.Parser.LineInfo", style=dashed];
d38 -> d47  [color=darkseagreen4, key=1, label="CommonMark.Parser.LineInfo", style=dashed];
d38 -> d49  [color=darkseagreen4, key=1, label="ref CommonMark.Syntax.Block", style=dashed];
d50 -> d54  [color=darkseagreen4, key=1, label="CommonMark.Parser.LineInfo", style=dashed];
d50 -> d55  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
d50 -> d59  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
d50 -> d74  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
d50 -> d90  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
d106 -> d108  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
d441 -> d448  [color=darkseagreen4, key=1, label=chars_to_tab, style=dashed];
d442 -> d455  [color=darkseagreen4, key=1, label="out int", style=dashed];
d442 -> d446  [color=darkseagreen4, key=1, label="out int", style=dashed];
d442 -> d452  [color=darkseagreen4, key=1, label="out int", style=dashed];
d443 -> d455  [color=darkseagreen4, key=1, label="out int", style=dashed];
d443 -> d447  [color=darkseagreen4, key=1, label="out int", style=dashed];
d444 -> d451  [color=darkseagreen4, key=1, label="out char", style=dashed];
d271 -> d276  [color=darkseagreen4, key=1, label=indent, style=dashed];
d271 -> d275  [color=darkseagreen4, key=1, label=indent, style=dashed];
d271 -> d280  [color=darkseagreen4, key=1, label=indent, style=dashed];
d271 -> d286  [color=darkseagreen4, key=1, label=indent, style=dashed];
d272 -> d282  [color=darkseagreen4, key=1, label=blank, style=dashed];
d272 -> d288  [color=darkseagreen4, key=1, label=blank, style=dashed];
d272 -> d294  [color=darkseagreen4, key=1, label=blank, style=dashed];
d272 -> d299  [color=darkseagreen4, key=1, label=blank, style=dashed];
d272 -> d307  [color=darkseagreen4, key=1, label=blank, style=dashed];
d272 -> d311  [color=darkseagreen4, key=1, label=blank, style=dashed];
d272 -> d317  [color=darkseagreen4, key=1, label=blank, style=dashed];
d301 -> d305  [color=darkseagreen4, key=1, label=i, style=dashed];
d305 -> d305  [color=darkseagreen4, key=1, label=i, style=dashed];
d323 -> d374  [color=darkseagreen4, key=1, label=blank, style=dashed];
d324 -> d347  [color=darkseagreen4, key=1, label=indented, style=dashed];
d324 -> d374  [color=darkseagreen4, key=1, label=indented, style=dashed];
d262 -> d347  [color=darkseagreen4, key=1, label=all_matched, style=dashed];
d293 -> d347  [color=darkseagreen4, key=1, label=all_matched, style=dashed];
d293 -> d314  [color=darkseagreen4, key=1, label=all_matched, style=dashed];
d298 -> d347  [color=darkseagreen4, key=1, label=all_matched, style=dashed];
d298 -> d314  [color=darkseagreen4, key=1, label=all_matched, style=dashed];
d309 -> d347  [color=darkseagreen4, key=1, label=all_matched, style=dashed];
d313 -> d347  [color=darkseagreen4, key=1, label=all_matched, style=dashed];
d355 -> d361  [color=darkseagreen4, key=1, label=prevColumn, style=dashed];
d355 -> d357  [color=darkseagreen4, key=1, label=prevColumn, style=dashed];
d355 -> d359  [color=darkseagreen4, key=1, label=prevColumn, style=dashed];
d363 -> d366  [color=darkseagreen4, key=1, label=offset, style=dashed];
d364 -> d366  [color=darkseagreen4, key=1, label=column, style=dashed];
d319 -> d374  [color=darkseagreen4, key=1, label=maybeLazy, style=dashed];
d316 -> d389  [color=darkseagreen4, key=1, label=last_matched_container, style=dashed];
d316 -> d391  [color=darkseagreen4, key=1, label=last_matched_container, style=dashed];
d264 -> d317  [color=darkseagreen4, key=1, label=blank, style=dashed];
d177 -> d206  [color=darkseagreen4, key=1, label="out CommonMark.Syntax.ListData", style=dashed];
d185 -> d206  [color=darkseagreen4, key=1, label="out CommonMark.Syntax.ListData", style=dashed];
d199 -> d206  [color=darkseagreen4, key=1, label="out CommonMark.Syntax.ListData", style=dashed];
d189 -> d192  [color=darkseagreen4, key=1, label=start, style=dashed];
d226 -> d229  [color=darkseagreen4, key=1, label="ref int", style=dashed];
d28 -> d30  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
d28 -> d32  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
d237 -> d250  [color=darkseagreen4, key=1, label="ref int", style=dashed];
d236 -> d250  [color=darkseagreen4, key=1, label="ref int", style=dashed];
d246 -> d250  [color=darkseagreen4, key=1, label="ref int", style=dashed];
d39 -> d44  [color=darkseagreen4, key=1, label=container, style=dashed];
d39 -> d45  [color=darkseagreen4, key=1, label=container, style=dashed];
d61 -> d64  [color=darkseagreen4, key=1, label=sc, style=dashed];
d61 -> d68  [color=darkseagreen4, key=1, label=sc, style=dashed];
d61 -> d69  [color=darkseagreen4, key=1, label=sc, style=dashed];
d61 -> d70  [color=darkseagreen4, key=1, label=sc, style=dashed];
d63 -> d66  [color=darkseagreen4, key=1, label=subj, style=dashed];
d63 -> d67  [color=darkseagreen4, key=1, label=subj, style=dashed];
d63 -> d68  [color=darkseagreen4, key=1, label=subj, style=dashed];
d63 -> d70  [color=darkseagreen4, key=1, label=subj, style=dashed];
d63 -> d71  [color=darkseagreen4, key=1, label=subj, style=dashed];
d80 -> d82  [color=darkseagreen4, key=1, label=item, style=dashed];
d80 -> d83  [color=darkseagreen4, key=1, label=item, style=dashed];
d80 -> d87  [color=darkseagreen4, key=1, label=item, style=dashed];
d40 -> d47  [color=darkseagreen4, key=1, label=b, style=dashed];
d40 -> d43  [color=darkseagreen4, key=1, label=b, style=dashed];
d40 -> d44  [color=darkseagreen4, key=1, label=b, style=dashed];
d111 -> d120  [color=darkseagreen4, key=1, label=child, style=dashed];
d453 -> d455  [color=darkseagreen4, key=1, label="out int", style=dashed];
d446 -> d455  [color=darkseagreen4, key=1, label="out int", style=dashed];
d446 -> d446  [color=darkseagreen4, key=1, label="out int", style=dashed];
d452 -> d455  [color=darkseagreen4, key=1, label="out int", style=dashed];
d452 -> d452  [color=darkseagreen4, key=1, label="out int", style=dashed];
d447 -> d455  [color=darkseagreen4, key=1, label="out int", style=dashed];
d447 -> d447  [color=darkseagreen4, key=1, label="out int", style=dashed];
d448 -> d448  [color=darkseagreen4, key=1, label=chars_to_tab, style=dashed];
d42 -> d47  [color=darkseagreen4, key=1, label=b, style=dashed];
d42 -> d44  [color=darkseagreen4, key=1, label=b, style=dashed];
d42 -> d43  [color=darkseagreen4, key=1, label=b, style=dashed];
d65 -> d67  [color=darkseagreen4, key=1, label=origPos, style=dashed];
d65 -> d70  [color=darkseagreen4, key=1, label=origPos, style=dashed];
d85 -> d87  [color=darkseagreen4, key=1, label=subitem, style=dashed];
d148 -> d156  [color=darkseagreen4, key=1, label=subj, style=dashed];
d143 -> d151  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
d143 -> d162  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
d143 -> d163  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
d143 -> d164  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
d143 -> d165  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
d143 -> d167  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Block", style=dashed];
d157 -> d161  [color=darkseagreen4, key=1, label=delta, style=dashed];
d154 -> d156  [color=darkseagreen4, key=1, label=sc, style=dashed];
d154 -> d161  [color=darkseagreen4, key=1, label=sc, style=dashed];
d154 -> d160  [color=darkseagreen4, key=1, label=sc, style=dashed];
d154 -> d162  [color=darkseagreen4, key=1, label=sc, style=dashed];
d162 -> d162  [color=darkseagreen4, key=1, label=inlineStack, style=dashed];
d144 -> d162  [color=darkseagreen4, key=1, label=inlineStack, style=dashed];
d123 -> d126  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Inline", style=dashed];
d123 -> d129  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Inline", style=dashed];
d123 -> d130  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Inline", style=dashed];
d123 -> d131  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Inline", style=dashed];
d123 -> d133  [color=darkseagreen4, key=1, label="CommonMark.Syntax.Inline", style=dashed];
d123 -> d135  [color=darkseagreen4, key=1, label="ref System.Collections.Generic.Stack<CommonMark.Syntax.Inline>", style=dashed];
d123 -> d138  [color=darkseagreen4, key=1, label="ref System.Collections.Generic.Stack<CommonMark.Syntax.Inline>", style=dashed];
d145 -> d165  [color=darkseagreen4, key=1, label=stack, style=dashed];
d145 -> d169  [color=darkseagreen4, key=1, label=stack, style=dashed];
d125 -> d138  [color=darkseagreen4, key=1, label="ref System.Collections.Generic.Stack<CommonMark.Syntax.Inline>", style=dashed];
d125 -> d131  [color=darkseagreen4, key=1, label="ref System.Collections.Generic.Stack<CommonMark.Syntax.Inline>", style=dashed];
d125 -> d135  [color=darkseagreen4, key=1, label="ref System.Collections.Generic.Stack<CommonMark.Syntax.Inline>", style=dashed];
m0_101 -> m0_111  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_101 -> m0_114  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_104 -> m0_107  [color=darkseagreen4, key=1, label=c1, style=dashed];
m0_104 -> m0_113  [color=darkseagreen4, key=1, label=c1, style=dashed];
m0_110 -> m0_114  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_110 -> m0_116  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_108 -> m0_113  [color=darkseagreen4, key=1, label=c1, style=dashed];
m0_109 -> m0_113  [color=darkseagreen4, key=1, label=nextEscaped, style=dashed];
m0_116 -> m0_116  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_130 -> m0_132  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_130 -> m0_134  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_130 -> m0_138  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_130 -> m0_144  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_130 -> m0_149  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_130 -> m0_150  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_130 -> m0_153  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_131 -> m0_141  [color=darkseagreen4, key=1, label="out int", style=dashed];
m0_131 -> m0_145  [color=darkseagreen4, key=1, label="out int", style=dashed];
m0_131 -> m0_155  [color=darkseagreen4, key=1, label="out int", style=dashed];
m0_137 -> m0_144  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_137 -> m0_149  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_137 -> m0_150  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_137 -> m0_151  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_139 -> m0_146  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_139 -> m0_148  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_145 -> m0_145  [color=darkseagreen4, key=1, label="out int", style=dashed];
m0_145 -> m0_155  [color=darkseagreen4, key=1, label="out int", style=dashed];
m0_136 -> m0_143  [color=darkseagreen4, key=1, label=spaceExists, style=dashed];
m0_136 -> m0_150  [color=darkseagreen4, key=1, label=spaceExists, style=dashed];
m0_136 -> m0_152  [color=darkseagreen4, key=1, label=spaceExists, style=dashed];
m0_151 -> m0_151  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_147 -> m0_152  [color=darkseagreen4, key=1, label=spaceExists, style=dashed];
m0_239 -> m0_243  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_239 -> m0_245  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_239 -> m0_250  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_239 -> m0_269  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_239 -> m0_280  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_239 -> m0_294  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_240 -> m0_243  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
m0_240 -> m0_254  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
m0_240 -> m0_273  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
m0_240 -> m0_287  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
m0_253 -> m0_269  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_253 -> m0_271  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_255 -> m0_260  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_255 -> m0_264  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_255 -> m0_268  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_272 -> m0_280  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_272 -> m0_282  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_274 -> m0_279  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_286 -> m0_294  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_286 -> m0_296  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_288 -> m0_292  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_293 -> m0_298  [color=darkseagreen4, key=1, label="out string", style=dashed];
m0_241 -> m0_298  [color=darkseagreen4, key=1, label="out string", style=dashed];
m0_242 -> m0_298  [color=darkseagreen4, key=1, label="out int", style=dashed];
m0_259 -> m0_298  [color=darkseagreen4, key=1, label="out int", style=dashed];
m0_263 -> m0_298  [color=darkseagreen4, key=1, label="out int", style=dashed];
m0_267 -> m0_298  [color=darkseagreen4, key=1, label="out int", style=dashed];
m0_278 -> m0_298  [color=darkseagreen4, key=1, label="out int", style=dashed];
m0_249 -> m0_257  [color=darkseagreen4, key=1, label=counter, style=dashed];
m0_249 -> m0_261  [color=darkseagreen4, key=1, label=counter, style=dashed];
m0_249 -> m0_265  [color=darkseagreen4, key=1, label=counter, style=dashed];
m0_249 -> m0_269  [color=darkseagreen4, key=1, label=counter, style=dashed];
m0_249 -> m0_276  [color=darkseagreen4, key=1, label=counter, style=dashed];
m0_249 -> m0_280  [color=darkseagreen4, key=1, label=counter, style=dashed];
m0_249 -> m0_290  [color=darkseagreen4, key=1, label=counter, style=dashed];
m0_249 -> m0_294  [color=darkseagreen4, key=1, label=counter, style=dashed];
m0_257 -> m0_257  [color=darkseagreen4, key=1, label=counter, style=dashed];
m0_257 -> m0_269  [color=darkseagreen4, key=1, label=counter, style=dashed];
m0_261 -> m0_261  [color=darkseagreen4, key=1, label=counter, style=dashed];
m0_261 -> m0_269  [color=darkseagreen4, key=1, label=counter, style=dashed];
m0_265 -> m0_265  [color=darkseagreen4, key=1, label=counter, style=dashed];
m0_265 -> m0_269  [color=darkseagreen4, key=1, label=counter, style=dashed];
m0_276 -> m0_276  [color=darkseagreen4, key=1, label=counter, style=dashed];
m0_276 -> m0_280  [color=darkseagreen4, key=1, label=counter, style=dashed];
m0_290 -> m0_290  [color=darkseagreen4, key=1, label=counter, style=dashed];
m0_290 -> m0_294  [color=darkseagreen4, key=1, label=counter, style=dashed];
m0_271 -> m0_271  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_282 -> m0_282  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_296 -> m0_296  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_0 -> m0_11  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_0 -> m0_14  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_12 -> m0_15  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_10 -> m0_14  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_10 -> m0_17  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_17 -> m0_17  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_300 -> m0_304  [color=darkseagreen4, key=1, label=s, style=dashed];
m0_301 -> m0_303  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_301 -> m0_304  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_301 -> m0_306  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_306 -> m0_306  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_174 -> m0_178  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_174 -> m0_191  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_179 -> m0_182  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_179 -> m0_186  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_176 -> m0_186  [color=darkseagreen4, key=1, label=x, style=dashed];
m0_187 -> m0_187  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_187 -> m0_189  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_185 -> m0_189  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_193 -> m0_202  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_196 -> m0_204  [color=darkseagreen4, key=1, label=fchar, style=dashed];
m0_201 -> m0_213  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_203 -> m0_211  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_199 -> m0_207  [color=darkseagreen4, key=1, label=cnt, style=dashed];
m0_199 -> m0_209  [color=darkseagreen4, key=1, label=cnt, style=dashed];
m0_199 -> m0_212  [color=darkseagreen4, key=1, label=cnt, style=dashed];
m0_199 -> m0_214  [color=darkseagreen4, key=1, label=cnt, style=dashed];
m0_199 -> m0_216  [color=darkseagreen4, key=1, label=cnt, style=dashed];
m0_200 -> m0_205  [color=darkseagreen4, key=1, label=fenceDone, style=dashed];
m0_207 -> m0_207  [color=darkseagreen4, key=1, label=cnt, style=dashed];
m0_207 -> m0_209  [color=darkseagreen4, key=1, label=cnt, style=dashed];
m0_207 -> m0_212  [color=darkseagreen4, key=1, label=cnt, style=dashed];
m0_207 -> m0_214  [color=darkseagreen4, key=1, label=cnt, style=dashed];
m0_207 -> m0_216  [color=darkseagreen4, key=1, label=cnt, style=dashed];
m0_213 -> m0_213  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_58 -> m0_65  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_58 -> m0_76  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_58 -> m0_90  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_58 -> m0_93  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_58 -> m0_95  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_61 -> m0_65  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_62 -> m0_65  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_64 -> m0_67  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
m0_64 -> m0_70  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
m0_64 -> m0_77  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
m0_64 -> m0_83  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
m0_64 -> m0_94  [color=darkseagreen4, key=1, label=lastPos, style=dashed];
m0_65 -> m0_65  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_65 -> m0_67  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_65 -> m0_83  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_65 -> m0_84  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_65 -> m0_88  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_65 -> m0_90  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_65 -> m0_92  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_65 -> m0_93  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_65 -> m0_94  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_65 -> m0_95  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_69 -> m0_71  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_69 -> m0_73  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_69 -> m0_75  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_69 -> m0_76  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_69 -> m0_77  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_69 -> m0_83  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_69 -> m0_84  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_69 -> m0_88  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_69 -> m0_90  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_69 -> m0_92  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_69 -> m0_93  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_69 -> m0_94  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_69 -> m0_95  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_80 -> m0_83  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_80 -> m0_84  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_80 -> m0_88  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_80 -> m0_90  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_80 -> m0_92  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_80 -> m0_93  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_80 -> m0_94  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_80 -> m0_95  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_63 -> m0_73  [color=darkseagreen4, key=1, label=nextEscaped, style=dashed];
m0_63 -> m0_75  [color=darkseagreen4, key=1, label=nextEscaped, style=dashed];
m0_63 -> m0_84  [color=darkseagreen4, key=1, label=nextEscaped, style=dashed];
m0_63 -> m0_88  [color=darkseagreen4, key=1, label=nextEscaped, style=dashed];
m0_79 -> m0_84  [color=darkseagreen4, key=1, label=nextEscaped, style=dashed];
m0_79 -> m0_88  [color=darkseagreen4, key=1, label=nextEscaped, style=dashed];
m0_82 -> m0_85  [color=darkseagreen4, key=1, label=openParens, style=dashed];
m0_82 -> m0_89  [color=darkseagreen4, key=1, label=openParens, style=dashed];
m0_82 -> m0_93  [color=darkseagreen4, key=1, label=openParens, style=dashed];
m0_82 -> m0_95  [color=darkseagreen4, key=1, label=openParens, style=dashed];
m0_87 -> m0_89  [color=darkseagreen4, key=1, label=openParens, style=dashed];
m0_87 -> m0_93  [color=darkseagreen4, key=1, label=openParens, style=dashed];
m0_87 -> m0_95  [color=darkseagreen4, key=1, label=openParens, style=dashed];
m0_91 -> m0_93  [color=darkseagreen4, key=1, label=openParens, style=dashed];
m0_91 -> m0_95  [color=darkseagreen4, key=1, label=openParens, style=dashed];
m0_156 -> m0_164  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_159 -> m0_166  [color=darkseagreen4, key=1, label=c1, style=dashed];
m0_159 -> m0_172  [color=darkseagreen4, key=1, label=c1, style=dashed];
m0_163 -> m0_171  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_165 -> m0_168  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_165 -> m0_169  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_162 -> m0_166  [color=darkseagreen4, key=1, label=fin, style=dashed];
m0_171 -> m0_171  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_119 -> m0_123  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_119 -> m0_124  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_119 -> m0_125  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_119 -> m0_127  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_122 -> m0_124  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_122 -> m0_125  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_122 -> m0_126  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_126 -> m0_126  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_218 -> m0_227  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_218 -> m0_234  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_221 -> m0_229  [color=darkseagreen4, key=1, label=c1, style=dashed];
m0_226 -> m0_236  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_228 -> m0_231  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_228 -> m0_233  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_224 -> m0_230  [color=darkseagreen4, key=1, label=cnt, style=dashed];
m0_224 -> m0_234  [color=darkseagreen4, key=1, label=cnt, style=dashed];
m0_225 -> m0_229  [color=darkseagreen4, key=1, label=spaces, style=dashed];
m0_230 -> m0_230  [color=darkseagreen4, key=1, label=cnt, style=dashed];
m0_236 -> m0_236  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_24 -> m0_45  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_24 -> m0_47  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_24 -> m0_50  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_27 -> m0_33  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_27 -> m0_34  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_30 -> m0_32  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_30 -> m0_36  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_30 -> m0_39  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_31 -> m0_36  [color=darkseagreen4, key=1, label=ln, style=dashed];
m0_31 -> m0_39  [color=darkseagreen4, key=1, label=ln, style=dashed];
m0_31 -> m0_45  [color=darkseagreen4, key=1, label=ln, style=dashed];
m0_31 -> m0_51  [color=darkseagreen4, key=1, label=ln, style=dashed];
m0_38 -> m0_39  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_41 -> m0_45  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_45 -> m0_45  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_45 -> m0_49  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_45 -> m0_50  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_45 -> m0_51  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_42 -> m0_50  [color=darkseagreen4, key=1, label=hadDot, style=dashed];
m0_44 -> m0_47  [color=darkseagreen4, key=1, label=domainStart, style=dashed];
}
