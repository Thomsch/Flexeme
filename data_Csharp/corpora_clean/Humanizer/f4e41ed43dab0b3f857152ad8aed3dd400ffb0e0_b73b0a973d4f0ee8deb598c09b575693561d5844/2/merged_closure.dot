digraph  {
d1 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="number == 0", prediction=0, span="9-9"];
d0 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", label="Entry Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", span="7-7"];
d2 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="return ''zero'';", prediction=1, span="10-10"];
d3 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="number < 0", prediction=2, span="12-12"];
d4 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="return string.Format(''minus {0}'', Math.Abs(number).ToWords());", prediction=2, span="13-13"];
d5 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="var parts = new List<string>()", prediction=2, span="15-15"];
d30 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", label="Exit Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", span="7-7"];
d31 [cluster="System.Math.Abs(int)", label="Entry System.Math.Abs(int)", span="0-0"];
d32 [cluster="int.ToWords()", label="Entry int.ToWords()", span="25-25"];
d33 [cluster="string.Format(string, object)", label="Entry string.Format(string, object)", span="0-0"];
d6 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="(number / 1000000000) > 0", prediction=2, span="17-17"];
d7 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="parts.Add(string.Format(''{0} billion'', (number / 1000000000).ToWords()))", prediction=2, span="19-19"];
d9 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="(number / 1000000) > 0", prediction=2, span="23-23"];
d8 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="number %= 1000000000", prediction=2, span="20-20"];
d35 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
d10 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="parts.Add(string.Format(''{0} million'', (number / 1000000).ToWords()))", prediction=2, span="25-25"];
d11 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="number %= 1000000", prediction=2, span="26-26"];
d12 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="(number / 1000) > 0", prediction=2, span="29-29"];
d13 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="parts.Add(string.Format(''{0} thousand'', NumberToWordsExtension.ToWords(number / 1000)))", prediction=2, span="31-31"];
d14 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="number %= 1000", prediction=2, span="32-32"];
d15 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="(number / 100) > 0", prediction=2, span="35-35"];
d16 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="parts.Add(string.Format(''{0} hundred'', NumberToWordsExtension.ToWords(number / 100)))", prediction=2, span="37-37"];
d17 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="number %= 100", prediction=2, span="38-38"];
d18 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="number > 0", prediction=2, span="41-41"];
d23 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="number < 20", prediction=2, span="49-49"];
d24 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="parts.Add(unitsMap[number])", prediction=2, span="50-50"];
d25 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="var lastPart = tensMap[number / 10]", prediction=2, span="53-53"];
d26 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="(number % 10) > 0", prediction=2, span="54-54"];
d27 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="lastPart += string.Format(''-{0}'', unitsMap[number % 10])", prediction=22, span="55-55"];
d36 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", label="Entry Humanizer.NumberToWordsExtension.ToWords(int)", span="25-25"];
d19 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="parts.Count != 0", prediction=2, span="43-43"];
d29 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="return string.Join('' '', parts.ToArray());", prediction=2, span="61-61"];
d22 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="var tensMap = new[] { ''zero'', ''ten'', ''twenty'', ''thirty'', ''forty'', ''fifty'', ''sixty'', ''seventy'', ''eighty'', ''ninety'' }", prediction=25, span="47-47"];
d21 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="var unitsMap = new[] { ''zero'', ''one'', ''two'', ''three'', ''four'', ''five'', ''six'', ''seven'', ''eight'', ''nine'', ''ten'', ''eleven'', ''twelve'', ''thirteen'', ''fourteen'', ''fifteen'', ''sixteen'', ''seventeen'', ''eighteen'', ''nineteen'' }", prediction=2, span="46-46"];
d28 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="parts.Add(lastPart)", prediction=2, span="57-57"];
d34 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
d20 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="parts.Add(''and'')", prediction=2, span="44-44"];
d37 [cluster="System.Collections.Generic.List<T>.ToArray()", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
d38 [cluster="string.Join(string, params string[])", label="Entry string.Join(string, params string[])", span="0-0"];
d0 -> d3  [color=green, key=1, label=int, style=dashed];
d0 -> d4  [color=green, key=1, label=int, style=dashed];
d0 -> d6  [color=green, key=1, label=int, style=dashed];
d0 -> d7  [color=green, key=1, label=int, style=dashed];
d0 -> d9  [color=green, key=1, label=int, style=dashed];
d0 -> d10  [color=green, key=1, label=int, style=dashed];
d0 -> d12  [color=green, key=1, label=int, style=dashed];
d0 -> d13  [color=green, key=1, label=int, style=dashed];
d0 -> d15  [color=green, key=1, label=int, style=dashed];
d0 -> d16  [color=green, key=1, label=int, style=dashed];
d0 -> d18  [color=green, key=1, label=int, style=dashed];
d0 -> d23  [color=green, key=1, label=int, style=dashed];
d0 -> d24  [color=green, key=1, label=int, style=dashed];
d0 -> d26  [color=green, key=1, label=int, style=dashed];
d5 -> d7  [color=green, key=1, label=parts, style=dashed];
d5 -> d10  [color=green, key=1, label=parts, style=dashed];
d5 -> d13  [color=green, key=1, label=parts, style=dashed];
d5 -> d16  [color=green, key=1, label=parts, style=dashed];
d5 -> d24  [color=green, key=1, label=parts, style=dashed];
d5 -> d19  [color=green, key=1, label=parts, style=dashed];
d5 -> d20  [color=green, key=1, label=parts, style=dashed];
d5 -> d28  [color=green, key=1, label=parts, style=dashed];
d5 -> d29  [color=green, key=1, label=parts, style=dashed];
d8 -> d10  [color=green, key=1, label=int, style=dashed];
d8 -> d12  [color=green, key=1, label=int, style=dashed];
d8 -> d13  [color=green, key=1, label=int, style=dashed];
d8 -> d15  [color=green, key=1, label=int, style=dashed];
d8 -> d16  [color=green, key=1, label=int, style=dashed];
d8 -> d18  [color=green, key=1, label=int, style=dashed];
d8 -> d23  [color=green, key=1, label=int, style=dashed];
d8 -> d24  [color=green, key=1, label=int, style=dashed];
d8 -> d26  [color=green, key=1, label=int, style=dashed];
d11 -> d13  [color=green, key=1, label=int, style=dashed];
d11 -> d15  [color=green, key=1, label=int, style=dashed];
d11 -> d16  [color=green, key=1, label=int, style=dashed];
d11 -> d18  [color=green, key=1, label=int, style=dashed];
d11 -> d23  [color=green, key=1, label=int, style=dashed];
d11 -> d24  [color=green, key=1, label=int, style=dashed];
d11 -> d26  [color=green, key=1, label=int, style=dashed];
d14 -> d16  [color=green, key=1, label=int, style=dashed];
d14 -> d18  [color=green, key=1, label=int, style=dashed];
d14 -> d23  [color=green, key=1, label=int, style=dashed];
d14 -> d24  [color=green, key=1, label=int, style=dashed];
d14 -> d26  [color=green, key=1, label=int, style=dashed];
d17 -> d23  [color=green, key=1, label=int, style=dashed];
d17 -> d24  [color=green, key=1, label=int, style=dashed];
d17 -> d26  [color=green, key=1, label=int, style=dashed];
d25 -> d28  [color=green, key=1, label=lastPart, style=dashed];
d21 -> d24  [color=green, key=1, label=unitsMap, style=dashed];
}
