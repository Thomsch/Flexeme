digraph  {
d1 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: number == 0", span="9-9"];
d0 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", label="Entry Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", span="7-7"];
d2 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: return ''zero'';", span="10-10"];
d3 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: number < 0", span="12-12"];
d4 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: return string.Format(''minus {0}'', Math.Abs(number).ToWords());", span="13-13"];
d5 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: var parts = new List<string>()", span="15-15"];
d30 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", label="Exit Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", span="7-7"];
d31 [cluster="System.Math.Abs(int)", label="Entry System.Math.Abs(int)", span="0-0"];
d32 [cluster="int.ToWords()", label="Entry int.ToWords()", span="25-25"];
d33 [cluster="string.Format(string, object)", label="Entry string.Format(string, object)", span="0-0"];
d6 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: (number / 1000000000) > 0", span="17-17"];
d7 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: parts.Add(string.Format(''{0} billion'', (number / 1000000000).ToWords()))", span="19-19"];
d9 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: (number / 1000000) > 0", span="23-23"];
d8 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: number %= 1000000000", span="20-20"];
d35 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
d10 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: parts.Add(string.Format(''{0} million'', (number / 1000000).ToWords()))", span="25-25"];
d11 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: number %= 1000000", span="26-26"];
d12 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: (number / 1000) > 0", span="29-29"];
d13 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: parts.Add(string.Format(''{0} thousand'', NumberToWordsExtension.ToWords(number / 1000)))", span="31-31"];
d14 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: number %= 1000", span="32-32"];
d15 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: (number / 100) > 0", span="35-35"];
d16 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: parts.Add(string.Format(''{0} hundred'', NumberToWordsExtension.ToWords(number / 100)))", span="37-37"];
d17 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: number %= 100", span="38-38"];
d18 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: number > 0", span="41-41"];
d23 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: number < 20", span="49-49"];
d24 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: parts.Add(unitsMap[number])", span="50-50"];
d25 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: var lastPart = tensMap[number / 10]", span="53-53"];
d26 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: (number % 10) > 0", span="54-54"];
d27 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: lastPart += string.Format(''-{0}'', unitsMap[number % 10])", span="55-55"];
d36 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", label="Entry Humanizer.NumberToWordsExtension.ToWords(int)", span="25-25"];
d19 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: parts.Count != 0", span="43-43"];
d29 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: return string.Join('' '', parts.ToArray());", span="61-61"];
d22 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: var tensMap = new[] { ''zero'', ''ten'', ''twenty'', ''thirty'', ''forty'', ''fifty'', ''sixty'', ''seventy'', ''eighty'', ''ninety'' }", span="47-47"];
d21 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: var unitsMap = new[] { ''zero'', ''one'', ''two'', ''three'', ''four'', ''five'', ''six'', ''seven'', ''eight'', ''nine'', ''ten'', ''eleven'', ''twelve'', ''thirteen'', ''fourteen'', ''fifteen'', ''sixteen'', ''seventeen'', ''eighteen'', ''nineteen'' }", span="46-46"];
d28 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: parts.Add(lastPart)", span="57-57"];
d34 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
d20 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: parts.Add(''and'')", span="44-44"];
d37 [cluster="System.Collections.Generic.List<T>.ToArray()", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
d38 [cluster="string.Join(string, params string[])", label="Entry string.Join(string, params string[])", span="0-0"];
d1 -> d2  [color=green, key=0, style=solid];
d1 -> d3  [color=green, key=0, style=solid];
d0 -> d1  [color=green, key=0, style=solid];
d0 -> d3  [color=green, key=1, label=int, style=dashed];
d0 -> d4  [color=green, key=1, label=int, style=dashed];
d0 -> d6  [color=green, key=1, label=int, style=dashed];
d0 -> d7  [color=green, key=1, label=int, style=dashed];
d0 -> d8  [color=green, key=1, label=int, style=dashed];
d0 -> d9  [color=green, key=1, label=int, style=dashed];
d0 -> d10  [color=green, key=1, label=int, style=dashed];
d0 -> d11  [color=green, key=1, label=int, style=dashed];
d0 -> d12  [color=green, key=1, label=int, style=dashed];
d0 -> d13  [color=green, key=1, label=int, style=dashed];
d0 -> d14  [color=green, key=1, label=int, style=dashed];
d0 -> d15  [color=green, key=1, label=int, style=dashed];
d0 -> d16  [color=green, key=1, label=int, style=dashed];
d0 -> d17  [color=green, key=1, label=int, style=dashed];
d0 -> d18  [color=green, key=1, label=int, style=dashed];
d0 -> d23  [color=green, key=1, label=int, style=dashed];
d0 -> d24  [color=green, key=1, label=int, style=dashed];
d0 -> d25  [color=green, key=1, label=int, style=dashed];
d0 -> d26  [color=green, key=1, label=int, style=dashed];
d0 -> d27  [color=green, key=1, label=int, style=dashed];
d0 -> d2  [color=green, key=3, label="method methodReturn string Convert", style=bold];
d2 -> d30  [color=green, key=0, style=solid];
d3 -> d4  [color=green, key=0, style=solid];
d3 -> d5  [color=green, key=0, style=solid];
d4 -> d30  [color=green, key=0, style=solid];
d4 -> d31  [color=green, key=2, style=dotted];
d4 -> d32  [color=green, key=2, style=dotted];
d4 -> d33  [color=green, key=2, style=dotted];
d5 -> d6  [color=green, key=0, style=solid];
d5 -> d7  [color=green, key=1, label=parts, style=dashed];
d5 -> d10  [color=green, key=1, label=parts, style=dashed];
d5 -> d13  [color=green, key=1, label=parts, style=dashed];
d5 -> d16  [color=green, key=1, label=parts, style=dashed];
d5 -> d24  [color=green, key=1, label=parts, style=dashed];
d5 -> d34  [color=green, key=2, style=dotted];
d5 -> d19  [color=green, key=1, label=parts, style=dashed];
d5 -> d20  [color=green, key=1, label=parts, style=dashed];
d5 -> d28  [color=green, key=1, label=parts, style=dashed];
d5 -> d29  [color=green, key=1, label=parts, style=dashed];
d30 -> d0  [color=blue, key=0, style=bold];
d6 -> d7  [color=green, key=0, style=solid];
d6 -> d9  [color=green, key=0, style=solid];
d7 -> d8  [color=green, key=0, style=solid];
d7 -> d32  [color=green, key=2, style=dotted];
d7 -> d33  [color=green, key=2, style=dotted];
d7 -> d35  [color=green, key=2, style=dotted];
d9 -> d10  [color=green, key=0, style=solid];
d9 -> d12  [color=green, key=0, style=solid];
d8 -> d8  [color=green, key=1, label=int, style=dashed];
d8 -> d9  [color=green, key=0, style=solid];
d8 -> d10  [color=green, key=1, label=int, style=dashed];
d8 -> d11  [color=green, key=1, label=int, style=dashed];
d8 -> d12  [color=green, key=1, label=int, style=dashed];
d8 -> d13  [color=green, key=1, label=int, style=dashed];
d8 -> d14  [color=green, key=1, label=int, style=dashed];
d8 -> d15  [color=green, key=1, label=int, style=dashed];
d8 -> d16  [color=green, key=1, label=int, style=dashed];
d8 -> d17  [color=green, key=1, label=int, style=dashed];
d8 -> d18  [color=green, key=1, label=int, style=dashed];
d8 -> d23  [color=green, key=1, label=int, style=dashed];
d8 -> d24  [color=green, key=1, label=int, style=dashed];
d8 -> d25  [color=green, key=1, label=int, style=dashed];
d8 -> d26  [color=green, key=1, label=int, style=dashed];
d8 -> d27  [color=green, key=1, label=int, style=dashed];
d10 -> d11  [color=green, key=0, style=solid];
d10 -> d32  [color=green, key=2, style=dotted];
d10 -> d33  [color=green, key=2, style=dotted];
d10 -> d35  [color=green, key=2, style=dotted];
d11 -> d11  [color=green, key=1, label=int, style=dashed];
d11 -> d12  [color=green, key=0, style=solid];
d11 -> d13  [color=green, key=1, label=int, style=dashed];
d11 -> d14  [color=green, key=1, label=int, style=dashed];
d11 -> d15  [color=green, key=1, label=int, style=dashed];
d11 -> d16  [color=green, key=1, label=int, style=dashed];
d11 -> d17  [color=green, key=1, label=int, style=dashed];
d11 -> d18  [color=green, key=1, label=int, style=dashed];
d11 -> d23  [color=green, key=1, label=int, style=dashed];
d11 -> d24  [color=green, key=1, label=int, style=dashed];
d11 -> d25  [color=green, key=1, label=int, style=dashed];
d11 -> d26  [color=green, key=1, label=int, style=dashed];
d11 -> d27  [color=green, key=1, label=int, style=dashed];
d12 -> d13  [color=green, key=0, style=solid];
d12 -> d15  [color=green, key=0, style=solid];
d13 -> d14  [color=green, key=0, style=solid];
d13 -> d36  [color=green, key=2, style=dotted];
d13 -> d33  [color=green, key=2, style=dotted];
d13 -> d35  [color=green, key=2, style=dotted];
d14 -> d14  [color=green, key=1, label=int, style=dashed];
d14 -> d15  [color=green, key=0, style=solid];
d14 -> d16  [color=green, key=1, label=int, style=dashed];
d14 -> d17  [color=green, key=1, label=int, style=dashed];
d14 -> d18  [color=green, key=1, label=int, style=dashed];
d14 -> d23  [color=green, key=1, label=int, style=dashed];
d14 -> d24  [color=green, key=1, label=int, style=dashed];
d14 -> d25  [color=green, key=1, label=int, style=dashed];
d14 -> d26  [color=green, key=1, label=int, style=dashed];
d14 -> d27  [color=green, key=1, label=int, style=dashed];
d15 -> d16  [color=green, key=0, style=solid];
d15 -> d18  [color=green, key=0, style=solid];
d16 -> d17  [color=green, key=0, style=solid];
d16 -> d36  [color=green, key=2, style=dotted];
d16 -> d33  [color=green, key=2, style=dotted];
d16 -> d35  [color=green, key=2, style=dotted];
d17 -> d17  [color=green, key=1, label=int, style=dashed];
d17 -> d18  [color=green, key=0, style=solid];
d17 -> d23  [color=green, key=1, label=int, style=dashed];
d17 -> d24  [color=green, key=1, label=int, style=dashed];
d17 -> d25  [color=green, key=1, label=int, style=dashed];
d17 -> d26  [color=green, key=1, label=int, style=dashed];
d17 -> d27  [color=green, key=1, label=int, style=dashed];
d18 -> d19  [color=green, key=0, style=solid];
d18 -> d29  [color=green, key=0, style=solid];
d23 -> d24  [color=green, key=0, style=solid];
d23 -> d25  [color=green, key=0, style=solid];
d24 -> d29  [color=green, key=0, style=solid];
d24 -> d35  [color=green, key=2, style=dotted];
d25 -> d26  [color=green, key=0, style=solid];
d25 -> d27  [color=green, key=1, label=lastPart, style=dashed];
d25 -> d28  [color=green, key=1, label=lastPart, style=dashed];
d26 -> d27  [color=green, key=0, style=solid];
d26 -> d28  [color=green, key=0, style=solid];
d27 -> d27  [color=green, key=1, label=lastPart, style=dashed];
d27 -> d28  [color=green, key=0, style=solid];
d27 -> d33  [color=green, key=2, style=dotted];
d19 -> d20  [color=green, key=0, style=solid];
d19 -> d21  [color=green, key=0, style=solid];
d29 -> d30  [color=green, key=0, style=solid];
d29 -> d37  [color=green, key=2, style=dotted];
d29 -> d38  [color=green, key=2, style=dotted];
d22 -> d23  [color=green, key=0, style=solid];
d22 -> d25  [color=green, key=1, label=tensMap, style=dashed];
d21 -> d24  [color=green, key=1, label=unitsMap, style=dashed];
d21 -> d27  [color=green, key=1, label=unitsMap, style=dashed];
d21 -> d22  [color=green, key=0, style=solid];
d28 -> d29  [color=green, key=0, style=solid];
d28 -> d35  [color=green, key=2, style=dotted];
d20 -> d21  [color=green, key=0, style=solid];
d20 -> d35  [color=green, key=2, style=dotted];
}
