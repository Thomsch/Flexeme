digraph  {
n206 [label="Humanizer.Tests.PluralTestSource", span=""];
n0 [cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)", label="Entry Humanizer.Tests.InflectorTests.Pluralize(string, string)", span="35-35"];
n1 [cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)", label="Assert.Equal(plural, singular.Pluralize())", span="37-37"];
n2 [cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)", label="Exit Humanizer.Tests.InflectorTests.Pluralize(string, string)", span="35-35"];
n3 [cluster="string.Pluralize(bool)", label="Entry string.Pluralize(bool)", span="40-40"];
n4 [cluster="Unk.Equal", label="Entry Unk.Equal", span=""];
n5 [cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", label="Entry Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", span="42-42"];
n6 [cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", label="Assert.Equal(plural, plural.Pluralize(false))", span="44-44"];
n7 [cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", label="Assert.Equal(plural, singular.Pluralize(false))", span="45-45"];
n8 [cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", label="Exit Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", span="42-42"];
n9 [cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", label="Entry Humanizer.Tests.InflectorTests.Singularize(string, string)", span="50-50"];
n10 [cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", label="Assert.Equal(singular, plural.Singularize())", span="52-52"];
n11 [cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", label="Exit Humanizer.Tests.InflectorTests.Singularize(string, string)", span="50-50"];
n12 [cluster="string.Singularize(bool)", label="Entry string.Singularize(bool)", span="51-51"];
n13 [cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", label="Entry Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", span="57-57"];
n14 [cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", label="Assert.Equal(singular, singular.Singularize(false))", span="59-59"];
n15 [cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", label="Assert.Equal(singular, plural.Singularize(false))", span="60-60"];
n16 [cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", label="Exit Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", span="57-57"];
n17 [cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", label="Entry Humanizer.Tests.InflectorTests.Titleize(string, string)", span="71-71"];
n18 [cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", label="Assert.Equal(expectedOuput, input.Titleize())", span="73-73"];
n19 [cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", label="Exit Humanizer.Tests.InflectorTests.Titleize(string, string)", span="71-71"];
n20 [cluster="string.Titleize()", label="Entry string.Titleize()", span="61-61"];
n21 [cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", label="Entry Humanizer.Tests.InflectorTests.Dasherize(string, string)", span="81-81"];
n22 [cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", label="Assert.Equal(input.Dasherize(), expectedOutput)", span="83-83"];
n23 [cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", label="Exit Humanizer.Tests.InflectorTests.Dasherize(string, string)", span="81-81"];
n24 [cluster="string.Dasherize()", label="Entry string.Dasherize()", span="104-104"];
n25 [cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)", label="Entry Humanizer.Tests.InflectorTests.Hyphenate(string, string)", span="91-91"];
n26 [cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)", label="Assert.Equal(input.Hyphenate(), expectedOutput)", span="93-93"];
n27 [cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)", label="Exit Humanizer.Tests.InflectorTests.Hyphenate(string, string)", span="91-91"];
n28 [cluster="string.Hyphenate()", label="Entry string.Hyphenate()", span="114-114"];
n29 [cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", label="Entry Humanizer.Tests.InflectorTests.Pascalize(string, string)", span="104-104"];
n30 [cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", label="Assert.Equal(expectedOutput, input.Pascalize())", span="106-106"];
n31 [cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", label="Exit Humanizer.Tests.InflectorTests.Pascalize(string, string)", span="104-104"];
n32 [cluster="string.Pascalize()", label="Entry string.Pascalize()", span="71-71"];
n33 [cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)", label="Entry Humanizer.Tests.InflectorTests.Camelize(string, string)", span="118-118"];
n34 [cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)", label="Assert.Equal(expectedOutput, input.Camelize())", span="120-120"];
n35 [cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)", label="Exit Humanizer.Tests.InflectorTests.Camelize(string, string)", span="118-118"];
n36 [cluster="string.Camelize()", label="Entry string.Camelize()", span="81-81"];
n37 [cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)", label="Entry Humanizer.Tests.InflectorTests.Underscore(string, string)", span="131-131"];
n38 [cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)", label="Assert.Equal(expectedOuput, input.Underscore())", span="133-133"];
n39 [cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)", label="Exit Humanizer.Tests.InflectorTests.Underscore(string, string)", span="131-131"];
n40 [cluster="string.Underscore()", label="Entry string.Underscore()", span="92-92"];
n41 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="Entry Humanizer.Tests.PluralTestSource.GetEnumerator()", span="139-139"];
n42 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''search'', ''searches''};", span="141-141"];
n43 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''switch'', ''switches''};", span="142-142"];
n44 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''fix'', ''fixes''};", span="143-143"];
n45 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''box'', ''boxes''};", span="144-144"];
n46 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''process'', ''processes''};", span="145-145"];
n47 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''address'', ''addresses''};", span="146-146"];
n48 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''case'', ''cases''};", span="147-147"];
n49 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''stack'', ''stacks''};", span="148-148"];
n50 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''wish'', ''wishes''};", span="149-149"];
n51 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''fish'', ''fish''};", span="150-150"];
n52 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''category'', ''categories''};", span="152-152"];
n53 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''query'', ''queries''};", span="153-153"];
n54 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''ability'', ''abilities''};", span="154-154"];
n55 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''agency'', ''agencies''};", span="155-155"];
n56 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''movie'', ''movies''};", span="156-156"];
n57 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''archive'', ''archives''};", span="158-158"];
n58 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''index'', ''indices''};", span="160-160"];
n59 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''wife'', ''wives''};", span="162-162"];
n60 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''safe'', ''saves''};", span="163-163"];
n61 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''half'', ''halves''};", span="164-164"];
n62 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''move'', ''moves''};", span="166-166"];
n63 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''salesperson'', ''salespeople''};", span="168-168"];
n64 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''person'', ''people''};", span="169-169"];
n65 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''spokesman'', ''spokesmen''};", span="171-171"];
n66 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''man'', ''men''};", span="172-172"];
n67 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''woman'', ''women''};", span="173-173"];
n68 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''basis'', ''bases''};", span="175-175"];
n69 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''diagnosis'', ''diagnoses''};", span="176-176"];
n70 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''datum'', ''data''};", span="178-178"];
n71 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''medium'', ''media''};", span="179-179"];
n72 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''analysis'', ''analyses''};", span="180-180"];
n73 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''node_child'', ''node_children''};", span="182-182"];
n74 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''child'', ''children''};", span="183-183"];
n75 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''experience'', ''experiences''};", span="185-185"];
n76 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''day'', ''days''};", span="186-186"];
n77 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''comment'', ''comments''};", span="188-188"];
n78 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''foobar'', ''foobars''};", span="189-189"];
n79 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''newsletter'', ''newsletters''};", span="190-190"];
n80 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''old_news'', ''old_news''};", span="192-192"];
n81 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''news'', ''news''};", span="193-193"];
n82 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''series'', ''series''};", span="195-195"];
n83 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''species'', ''species''};", span="196-196"];
n84 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''quiz'', ''quizzes''};", span="198-198"];
n85 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''perspective'', ''perspectives''};", span="200-200"];
n86 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''ox'', ''oxen''};", span="202-202"];
n87 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''photo'', ''photos''};", span="203-203"];
n88 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''buffalo'', ''buffaloes''};", span="204-204"];
n89 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''tomato'', ''tomatoes''};", span="205-205"];
n90 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''dwarf'', ''dwarves''};", span="206-206"];
n91 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''elf'', ''elves''};", span="207-207"];
n92 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''information'', ''information''};", span="208-208"];
n93 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''equipment'', ''equipment''};", span="209-209"];
n94 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''bus'', ''buses''};", span="210-210"];
n95 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''status'', ''statuses''};", span="211-211"];
n96 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''status_code'', ''status_codes''};", span="212-212"];
n97 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''mouse'', ''mice''};", span="213-213"];
n98 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''louse'', ''lice''};", span="215-215"];
n99 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''house'', ''houses''};", span="216-216"];
n100 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''octopus'', ''octopi''};", span="217-217"];
n101 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''virus'', ''viri''};", span="218-218"];
n102 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''alias'', ''aliases''};", span="219-219"];
n103 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''portfolio'', ''portfolios''};", span="220-220"];
n104 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''criterion'', ''criteria''};", span="221-221"];
n105 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''vertex'', ''vertices''};", span="223-223"];
n106 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''matrix'', ''matrices''};", span="224-224"];
n107 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''axis'', ''axes''};", span="226-226"];
n108 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''testis'', ''testes''};", span="227-227"];
n109 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''crisis'', ''crises''};", span="228-228"];
n110 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''rice'', ''rice''};", span="230-230"];
n111 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''shoe'', ''shoes''};", span="231-231"];
n112 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''horse'', ''horses''};", span="233-233"];
n113 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''prize'', ''prizes''};", span="234-234"];
n114 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''edge'', ''edges''};", span="235-235"];
n115 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''goose'', ''geese''};", span="238-238"];
n116 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''deer'', ''deer''};", span="239-239"];
n117 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''sheep'', ''sheep''};", span="240-240"];
n118 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''wolf'', ''wolves''};", span="241-241"];
n119 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''volcano'', ''volcanoes''};", span="242-242"];
n120 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''aircraft'', ''aircraft''};", span="243-243"];
n121 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''alumna'', ''alumnae''};", span="244-244"];
n122 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''alumnus'', ''alumni''};", span="245-245"];
n123 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''fungus'', ''fungi''};", span="246-246"];
n124 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''water'', ''water''};", span="247-247"];
n125 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''waters'', ''waters''};", span="248-248"];
n126 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''semen'', ''semen''};", span="249-249"];
n127 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''sperm'', ''sperm''};", span="250-250"];
n128 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''wave'',''waves''};", span="252-252"];
n129 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''campus'', ''campuses''};", span="254-254"];
n130 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''is'', ''are''};", span="256-256"];
n131 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''addendum'',''addenda''};", span="259-259"];
n132 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''alga'',''algae''};", span="260-260"];
n133 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''apparatus'',''apparatuses''};", span="261-261"];
n134 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''appendix'',''appendices''};", span="262-262"];
n135 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''bias'',''biases''};", span="263-263"];
n136 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''bison'',''bison''};", span="264-264"];
n137 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''blitz'',''blitzes''};", span="265-265"];
n138 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''buzz'',''buzzes''};", span="266-266"];
n139 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''cactus'',''cacti''};", span="267-267"];
n140 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''codex'',''codices''};", span="268-268"];
n141 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''corps'',''corps''};", span="269-269"];
n142 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=red, community=0, label="3: yield return new object[] {''corpus'',''corpora''};", span="270-270"];
n143 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''curriculum'',''curricula''};", span="271-271"];
n144 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''database'',''databases''};", span="272-272"];
n145 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''die'',''dice''};", span="273-273"];
n146 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''echo'',''echoes''};", span="274-274"];
n147 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''ellipsis'',''ellipses''};", span="275-275"];
n148 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''elk'',''elk''};", span="276-276"];
n149 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''emphasis'',''emphases''};", span="277-277"];
n150 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''embargo'',''embargoes''};", span="278-278"];
n151 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''focus'',''foci''};", span="279-279"];
n152 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''foot'',''feet''};", span="280-280"];
n153 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''genus'',''genera''};", span="281-281"];
n154 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''grass'',''grass''};", span="282-282"];
n155 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''hair'',''hair''};", span="283-283"];
n156 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''hero'',''heroes''};", span="284-284"];
n157 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''hippopotamus'',''hippopotami''};", span="285-285"];
n158 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''hoof'',''hooves''};", span="286-286"];
n159 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''iris'',''irises''};", span="287-287"];
n160 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''larva'',''larvae''};", span="288-288"];
n161 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''leaf'',''leaves''};", span="289-289"];
n162 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''loaf'',''loaves''};", span="290-290"];
n163 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''luggage'',''luggage''};", span="291-291"];
n164 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''means'',''means''};", span="292-292"];
n165 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=red, community=0, label="5: yield return new object[] {''millennium'',''milennia''};", span="293-293"];
n166 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''minutia'',''minutiae''};", span="294-294"];
n167 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''moose'',''moose''};", span="295-295"];
n168 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''mosquito'',''mosquitoes''};", span="296-296"];
n169 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''mud'',''mud''};", span="297-297"];
n170 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''nucleus'',''nuclei''};", span="298-298"];
n171 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''neurosis'',''neuroses''};", span="299-299"];
n172 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''oasis'',''oases''};", span="300-300"];
n173 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''offspring'',''offspring''};", span="301-301"];
n174 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''paralysis'',''paralyses''};", span="302-302"];
n175 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''phenomenon'',''phenomena''};", span="303-303"];
n176 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''potato'',''potatoes''};", span="304-304"];
n177 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''radius'',''radii''};", span="305-305"];
n178 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''salmon'',''salmon''};", span="306-306"];
n179 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''scissors'',''scissors''};", span="307-307"];
n180 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''shoe'',''shoees''};", span="308-308"];
n181 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''shrimp'',''shrimp''};", span="309-309"];
n182 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''someone'',''someone''};", span="310-310"];
n183 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''stimulus'',''stimuli''};", span="311-311"];
n184 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''swine'',''swine''};", span="312-312"];
n185 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''syllabus'',''syllabi''};", span="313-313"];
n186 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''that'',''those''};", span="314-314"];
n187 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''thief'',''thieves''};", span="315-315"];
n188 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''this'',''these''};", span="316-316"];
n189 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''tooth'',''teeth''};", span="317-317"];
n190 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''torpedo'',''torpedoes''};", span="318-318"];
n191 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''trellis'',''trellises''};", span="319-319"];
n192 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''trout'',''trout''};", span="320-320"];
n193 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''tuna'',''tuna''};", span="321-321"];
n194 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''vertebra'',''vertebrae''};", span="322-322"];
n195 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''veto'',''vetoes''};", span="323-323"];
n196 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''virus'',''viruses''};", span="324-324"];
n197 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''vita'',''vitae''};", span="325-325"];
n198 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''walrus'',''walruses''};", span="326-326"];
n199 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''waltz'',''waltzes''};", span="327-327"];
n200 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''water'',''water''};", span="328-328"];
n201 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''zombie'',''zombies''};", span="329-329"];
n202 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="Exit Humanizer.Tests.PluralTestSource.GetEnumerator()", span="139-139"];
n203 [cluster="Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", label="Entry Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", span="332-332"];
n204 [cluster="Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", label="return GetEnumerator();", span="334-334"];
n205 [cluster="Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", label="Exit Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", span="332-332"];
d164 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="23: yield return new object[] {''means'',''means''};", span="292-292"];
d41 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="Entry Humanizer.Tests.PluralTestSource.GetEnumerator()", span="139-139"];
d165 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''millennium'',''milennia''};", span="293-293"];
d142 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''corpus'',''corpora''};", span="270-270"];
m0_17 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddPlural(''([^aeiouy]|qu)y$'', ''$1ies'')", span="39-39"];
m0_22 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddPlural(''(quiz)$'', ''$1zes'')", span="44-44"];
m0_99 [cluster="Humanizer.Inflections.Vocabulary.Vocabulary()", file="Vocabularies.cs", label="Entry Humanizer.Inflections.Vocabulary.Vocabulary()", span="13-13"];
m0_3 [cluster="string.ToQuantity(int, Humanizer.ShowQuantityAs)", file="Vocabularies.cs", label="Entry string.ToQuantity(int, Humanizer.ShowQuantityAs)", span="46-46"];
m0_0 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", file="Vocabularies.cs", label="Entry Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", span="22-22"];
m0_1 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", file="Vocabularies.cs", label="Assert.Equal(expected, word.ToQuantity(quantity))", span="24-24"];
m0_2 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", file="Vocabularies.cs", label="Exit Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", span="22-22"];
m0_11 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddPlural(''(bu)s$'', ''$1ses'')", span="33-33"];
m0_12 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddPlural(''(buffal|tomat|volcan|ech|embarg|her|mosquit|potat|torped|vet)o$'', ''$1oes'')", span="34-34"];
m0_13 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=green, community=0, file="Vocabularies.cs", label="26: _default.AddPlural(''([dti])um$'', ''$1a'')", span="35-35"];
m0_14 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddPlural(''sis$'', ''ses'')", span="36-36"];
m0_15 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=green, community=0, file="Vocabularies.cs", label="14: _default.AddPlural(''(?:([^f])fe|([lr])f)$'', ''$1$2ves'')", span="37-37"];
m0_16 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddPlural(''(hive)$'', ''$1s'')", span="38-38"];
m0_23 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddPlural(''(buz|blit|walt)z$'', ''$1zes'')", span="45-45"];
m0_24 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddPlural(''(hoo|lea|loa|thie)f$'', ''$1ves'')", span="46-46"];
m0_25 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''s$'', '''')", span="48-48"];
m0_102 [cluster="Humanizer.Inflections.Vocabulary.AddIrregular(string, string)", file="Vocabularies.cs", label="Entry Humanizer.Inflections.Vocabulary.AddIrregular(string, string)", span="26-26"];
m0_26 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''(n)ews$'', ''$1ews'')", span="49-49"];
m0_103 [cluster="Humanizer.Inflections.Vocabulary.AddUncountable(string)", file="Vocabularies.cs", label="Entry Humanizer.Inflections.Vocabulary.AddUncountable(string)", span="36-36"];
m0_4 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="Entry Humanizer.Inflections.Vocabularies.BuildDefault()", span="24-24"];
m0_10 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityNumeric(string, int, string)", color=green, community=0, file="Vocabularies.cs", label="23: Exit Humanizer.Tests.ToQuantityTests.ToQuantityNumeric(string, int, string)", span="56-56"];
m0_5 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", file="Vocabularies.cs", label="Entry Humanizer.Tests.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", span="39-39"];
m0_9 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityNumeric(string, int, string)", file="Vocabularies.cs", label="Assert.Equal(expected, word.ToQuantity(quantity, ShowQuantityAs.Numeric))", span="59-59"];
m0_27 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=green, community=0, file="Vocabularies.cs", label="20: _default.AddSingular(''([dti])a$'', ''$1um'')", span="50-50"];
m0_28 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$'', ''$1$2sis'')", span="51-51"];
m0_44 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=green, community=0, file="Vocabularies.cs", label="20: _default.AddSingular(''(alias|status|campus|apparatus|virus|walrus)es$'', ''$1'')", span="67-67"];
m0_43 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''(octop|vir|alumn|fung|cact|foc|hippopotam|radi|stimul|syllab})i$'', ''$1us'')", span="66-66"];
m0_45 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''^(ox)en'', ''$1'')", span="68-68"];
m0_62 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=green, community=0, file="Vocabularies.cs", label="0: _default.AddIrregular(''curriculum'', ''curricula'')", span="86-86"];
m0_61 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddIrregular(''tooth'', ''teeth'')", span="85-85"];
m0_63 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=green, community=0, file="Vocabularies.cs", label="20: _default.AddUncountable(''equipment'')", span="88-88"];
m0_64 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=green, community=0, file="Vocabularies.cs", label="20: _default.AddUncountable(''information'')", span="89-89"];
m0_65 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=green, community=0, file="Vocabularies.cs", label="20: _default.AddUncountable(''rice'')", span="90-90"];
m0_66 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''money'')", span="91-91"];
m0_6 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", file="Vocabularies.cs", label="Assert.Equal(expected, word.ToQuantity(quantity, ShowQuantityAs.None))", span="41-41"];
m0_7 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", file="Vocabularies.cs", label="Exit Humanizer.Tests.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", span="39-39"];
m0_8 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityNumeric(string, int, string)", file="Vocabularies.cs", label="Entry Humanizer.Tests.ToQuantityTests.ToQuantityNumeric(string, int, string)", span="56-56"];
m0_18 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWordsWithCustomCultureFormatting(string, int, string, string, string)", file="Vocabularies.cs", label="Entry Humanizer.Tests.ToQuantityTests.ToQuantityWordsWithCustomCultureFormatting(string, int, string, string, string)", span="107-107"];
m0_19 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWordsWithCustomCultureFormatting(string, int, string, string, string)", file="Vocabularies.cs", label="var culture = new CultureInfo(cultureCode)", span="109-109"];
m0_20 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWordsWithCustomCultureFormatting(string, int, string, string, string)", file="Vocabularies.cs", label="Assert.Equal(expected, word.ToQuantity(quantity, format, culture), GetStringComparer(culture))", span="111-111"];
m0_21 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWordsWithCustomCultureFormatting(string, int, string, string, string)", file="Vocabularies.cs", label="Exit Humanizer.Tests.ToQuantityTests.ToQuantityWordsWithCustomCultureFormatting(string, int, string, string, string)", span="107-107"];
m0_29 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''(^analy)ses$'', ''$1sis'')", span="52-52"];
m0_30 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''([^f])ves$'', ''$1fe'')", span="53-53"];
m0_31 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''(hive)s$'', ''$1'')", span="54-54"];
m0_32 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''(tive)s$'', ''$1'')", span="55-55"];
m0_33 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''([lr]|hoo|lea|loa|thie)ves$'', ''$1f'')", span="56-56"];
m0_34 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''([^aeiouy]|qu)ies$'', ''$1y'')", span="57-57"];
m0_35 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''(s)eries$'', ''$1eries'')", span="58-58"];
m0_36 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''(m)ovies$'', ''$1ovie'')", span="59-59"];
m0_37 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''(x|ch|ss|sh)es$'', ''$1'')", span="60-60"];
m0_38 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''([m|l])ice$'', ''$1ouse'')", span="61-61"];
m0_39 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''(bus)es$'', ''$1'')", span="62-62"];
m0_40 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''(o)es$'', ''$1'')", span="63-63"];
m0_41 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''(shoe)s$'', ''$1'')", span="64-64"];
m0_42 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''(cris|ax|test)es$'', ''$1is'')", span="65-65"];
m0_46 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''(vert|ind)ices$'', ''$1ex'')", span="69-69"];
m0_47 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''(matr)ices$'', ''$1ix'')", span="70-70"];
m0_48 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''(quiz)zes$'', ''$1'')", span="71-71"];
m0_49 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''(buz|blit|walt)zes$'', ''$1z'')", span="72-72"];
m0_50 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddIrregular(''person'', ''people'')", span="74-74"];
m0_51 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddIrregular(''man'', ''men'')", span="75-75"];
m0_52 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddIrregular(''child'', ''children'')", span="76-76"];
m0_53 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddIrregular(''sex'', ''sexes'')", span="77-77"];
m0_54 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddIrregular(''move'', ''moves'')", span="78-78"];
m0_55 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddIrregular(''goose'', ''geese'')", span="79-79"];
m0_56 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddIrregular(''alumna'', ''alumnae'')", span="80-80"];
m0_57 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddIrregular(''criterion'', ''criteria'')", span="81-81"];
m0_58 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddIrregular(''wave'', ''waves'')", span="82-82"];
m0_59 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddIrregular(''die'', ''dice'')", span="83-83"];
m0_60 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddIrregular(''foot'', ''feet'')", span="84-84"];
m0_67 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''species'')", span="92-92"];
m0_68 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''series'')", span="93-93"];
m0_69 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''fish'')", span="94-94"];
m0_70 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''sheep'')", span="95-95"];
m0_71 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''deer'')", span="96-96"];
m0_72 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''aircraft'')", span="97-97"];
m0_73 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''oz'')", span="98-98"];
m0_74 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''tsp'')", span="99-99"];
m0_75 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''tbsp'')", span="100-100"];
m0_76 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''ml'')", span="101-101"];
m0_77 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''l'')", span="102-102"];
m0_78 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''water'')", span="103-103"];
m0_79 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''waters'')", span="104-104"];
m0_80 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''semen'')", span="105-105"];
m0_81 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''sperm'')", span="106-106"];
m0_82 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''bison'')", span="107-107"];
m0_83 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''grass'')", span="108-108"];
m0_84 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''hair'')", span="109-109"];
m0_85 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''mud'')", span="110-110"];
m0_86 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''elk'')", span="111-111"];
m0_87 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''luggage'')", span="112-112"];
m0_88 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''moose'')", span="113-113"];
m0_89 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''offspring'')", span="114-114"];
m0_90 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''salmon'')", span="115-115"];
m0_91 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''shrimp'')", span="116-116"];
m0_92 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''someone'')", span="117-117"];
m0_93 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''swine'')", span="118-118"];
m0_94 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''trout'')", span="119-119"];
m0_95 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''tuna'')", span="120-120"];
m0_96 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''corps'')", span="121-121"];
m0_97 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="return _default;", span="123-123"];
m0_98 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="Exit Humanizer.Inflections.Vocabularies.BuildDefault()", span="24-24"];
m0_100 [cluster="Humanizer.Inflections.Vocabulary.AddPlural(string, string)", file="Vocabularies.cs", label="Entry Humanizer.Inflections.Vocabulary.AddPlural(string, string)", span="46-46"];
m0_101 [cluster="Humanizer.Inflections.Vocabulary.AddSingular(string, string)", file="Vocabularies.cs", label="Entry Humanizer.Inflections.Vocabulary.AddSingular(string, string)", span="56-56"];
m1_19 [cluster="Humanizer.Inflections.Vocabulary.Pluralize(string, bool)", file="Vocabulary.cs", label="Entry Humanizer.Inflections.Vocabulary.Pluralize(string, bool)", span="67-67"];
m1_20 [cluster="Humanizer.Inflections.Vocabulary.Pluralize(string, bool)", file="Vocabulary.cs", label="var result = ApplyRules(_plurals, word)", span="69-69"];
m1_21 [cluster="Humanizer.Inflections.Vocabulary.Pluralize(string, bool)", file="Vocabulary.cs", label=inputIsKnownToBeSingular, span="71-71"];
m1_23 [cluster="Humanizer.Inflections.Vocabulary.Pluralize(string, bool)", file="Vocabulary.cs", label="var asSingular = ApplyRules(_singulars, word)", span="74-74"];
m1_25 [cluster="Humanizer.Inflections.Vocabulary.Pluralize(string, bool)", file="Vocabulary.cs", label="asSingular != null && asSingular != word && asSingular + ''s'' != word && asSingularAsPlural == word && result != word", span="76-76"];
m1_26 [cluster="Humanizer.Inflections.Vocabulary.Pluralize(string, bool)", file="Vocabulary.cs", label="return word;", span="77-77"];
m1_22 [cluster="Humanizer.Inflections.Vocabulary.Pluralize(string, bool)", file="Vocabulary.cs", label="return result;", span="72-72"];
m1_27 [cluster="Humanizer.Inflections.Vocabulary.Pluralize(string, bool)", file="Vocabulary.cs", label="return result;", span="79-79"];
m1_24 [cluster="Humanizer.Inflections.Vocabulary.Pluralize(string, bool)", file="Vocabulary.cs", label="var asSingularAsPlural = ApplyRules(_plurals, asSingular)", span="75-75"];
m1_28 [cluster="Humanizer.Inflections.Vocabulary.Pluralize(string, bool)", file="Vocabulary.cs", label="Exit Humanizer.Inflections.Vocabulary.Pluralize(string, bool)", span="67-67"];
m1_0 [cluster="Humanizer.Inflections.Vocabulary.Vocabulary()", file="Vocabulary.cs", label="Entry Humanizer.Inflections.Vocabulary.Vocabulary()", span="13-13"];
m1_1 [cluster="Humanizer.Inflections.Vocabulary.Vocabulary()", file="Vocabulary.cs", label="Exit Humanizer.Inflections.Vocabulary.Vocabulary()", span="13-13"];
m1_30 [cluster="Humanizer.Inflections.Vocabulary.Singularize(string, bool)", file="Vocabulary.cs", label="Entry Humanizer.Inflections.Vocabulary.Singularize(string, bool)", span="88-88"];
m1_31 [cluster="Humanizer.Inflections.Vocabulary.Singularize(string, bool)", file="Vocabulary.cs", label="var result = ApplyRules(_singulars, word)", span="90-90"];
m1_32 [cluster="Humanizer.Inflections.Vocabulary.Singularize(string, bool)", file="Vocabulary.cs", label=inputIsKnownToBePlural, span="92-92"];
m1_34 [cluster="Humanizer.Inflections.Vocabulary.Singularize(string, bool)", file="Vocabulary.cs", label="var asPlural = ApplyRules(_plurals, word)", span="96-96"];
m1_36 [cluster="Humanizer.Inflections.Vocabulary.Singularize(string, bool)", file="Vocabulary.cs", label="asPlural != word && word + ''s'' != asPlural && asPluralAsSingular == word && result != word", span="98-98"];
m1_37 [cluster="Humanizer.Inflections.Vocabulary.Singularize(string, bool)", file="Vocabulary.cs", label="return word;", span="99-99"];
m1_38 [cluster="Humanizer.Inflections.Vocabulary.Singularize(string, bool)", file="Vocabulary.cs", label="return result ?? word;", span="101-101"];
m1_33 [cluster="Humanizer.Inflections.Vocabulary.Singularize(string, bool)", file="Vocabulary.cs", label="return result;", span="93-93"];
m1_35 [cluster="Humanizer.Inflections.Vocabulary.Singularize(string, bool)", file="Vocabulary.cs", label="var asPluralAsSingular = ApplyRules(_singulars, asPlural)", span="97-97"];
m1_39 [cluster="Humanizer.Inflections.Vocabulary.Singularize(string, bool)", file="Vocabulary.cs", label="Exit Humanizer.Inflections.Vocabulary.Singularize(string, bool)", span="88-88"];
m1_59 [cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", file="Vocabulary.cs", label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", span="0-0"];
m1_64 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string)", file="Vocabulary.cs", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string)", span="0-0"];
m1_13 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Vocabulary.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m1_52 [cluster="Humanizer.Inflections.Vocabulary.Rule.Apply(string)", file="Vocabulary.cs", label="Entry Humanizer.Inflections.Vocabulary.Rule.Apply(string)", span="137-137"];
m1_60 [cluster="Humanizer.Inflections.Vocabulary.Rule.Apply(string)", file="Vocabulary.cs", label="!_regex.IsMatch(word)", span="139-139"];
m1_62 [cluster="Humanizer.Inflections.Vocabulary.Rule.Apply(string)", file="Vocabulary.cs", label="return _regex.Replace(word, _replacement);", span="142-142"];
m1_61 [cluster="Humanizer.Inflections.Vocabulary.Rule.Apply(string)", file="Vocabulary.cs", label="return null;", span="140-140"];
m1_63 [cluster="Humanizer.Inflections.Vocabulary.Rule.Apply(string)", file="Vocabulary.cs", label="Exit Humanizer.Inflections.Vocabulary.Rule.Apply(string)", span="137-137"];
m1_55 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="Vocabulary.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m1_16 [cluster="Humanizer.Inflections.Vocabulary.Rule.Rule(string, string)", file="Vocabulary.cs", label="Entry Humanizer.Inflections.Vocabulary.Rule.Rule(string, string)", span="131-131"];
m1_56 [cluster="Humanizer.Inflections.Vocabulary.Rule.Rule(string, string)", file="Vocabulary.cs", label="_regex = new Regex(pattern, RegexOptions.IgnoreCase | RegexOptionsUtil.Compiled)", span="133-133"];
m1_57 [cluster="Humanizer.Inflections.Vocabulary.Rule.Rule(string, string)", file="Vocabulary.cs", label="_replacement = replacement", span="134-134"];
m1_58 [cluster="Humanizer.Inflections.Vocabulary.Rule.Rule(string, string)", file="Vocabulary.cs", label="Exit Humanizer.Inflections.Vocabulary.Rule.Rule(string, string)", span="131-131"];
m1_2 [cluster="Humanizer.Inflections.Vocabulary.AddIrregular(string, string)", file="Vocabulary.cs", label="Entry Humanizer.Inflections.Vocabulary.AddIrregular(string, string)", span="26-26"];
m1_3 [cluster="Humanizer.Inflections.Vocabulary.AddIrregular(string, string)", color=green, community=0, file="Vocabulary.cs", label="7: AddPlural(''('' + singular[0] + '')'' + singular.Substring(1) + ''$'', ''$1'' + plural.Substring(1))", span="28-28"];
m1_4 [cluster="Humanizer.Inflections.Vocabulary.AddIrregular(string, string)", color=green, community=0, file="Vocabulary.cs", label="7: AddSingular(''('' + plural[0] + '')'' + plural.Substring(1) + ''$'', ''$1'' + singular.Substring(1))", span="29-29"];
m1_5 [cluster="Humanizer.Inflections.Vocabulary.AddIrregular(string, string)", file="Vocabulary.cs", label="Exit Humanizer.Inflections.Vocabulary.AddIrregular(string, string)", span="26-26"];
m1_29 [cluster="Humanizer.Inflections.Vocabulary.ApplyRules(System.Collections.Generic.IList<Humanizer.Inflections.Vocabulary.Rule>, string)", file="Vocabulary.cs", label="Entry Humanizer.Inflections.Vocabulary.ApplyRules(System.Collections.Generic.IList<Humanizer.Inflections.Vocabulary.Rule>, string)", span="104-104"];
m1_40 [cluster="Humanizer.Inflections.Vocabulary.ApplyRules(System.Collections.Generic.IList<Humanizer.Inflections.Vocabulary.Rule>, string)", file="Vocabulary.cs", label="word == null", span="106-106"];
m1_42 [cluster="Humanizer.Inflections.Vocabulary.ApplyRules(System.Collections.Generic.IList<Humanizer.Inflections.Vocabulary.Rule>, string)", file="Vocabulary.cs", label="IsUncountable(word)", span="109-109"];
m1_43 [cluster="Humanizer.Inflections.Vocabulary.ApplyRules(System.Collections.Generic.IList<Humanizer.Inflections.Vocabulary.Rule>, string)", file="Vocabulary.cs", label="return word;", span="110-110"];
m1_44 [cluster="Humanizer.Inflections.Vocabulary.ApplyRules(System.Collections.Generic.IList<Humanizer.Inflections.Vocabulary.Rule>, string)", file="Vocabulary.cs", label="var result = word", span="112-112"];
m1_45 [cluster="Humanizer.Inflections.Vocabulary.ApplyRules(System.Collections.Generic.IList<Humanizer.Inflections.Vocabulary.Rule>, string)", file="Vocabulary.cs", label="var i = rules.Count - 1", span="113-113"];
m1_47 [cluster="Humanizer.Inflections.Vocabulary.ApplyRules(System.Collections.Generic.IList<Humanizer.Inflections.Vocabulary.Rule>, string)", file="Vocabulary.cs", label="(result = rules[i].Apply(word)) != null", span="115-115"];
m1_41 [cluster="Humanizer.Inflections.Vocabulary.ApplyRules(System.Collections.Generic.IList<Humanizer.Inflections.Vocabulary.Rule>, string)", file="Vocabulary.cs", label="return null;", span="107-107"];
m1_49 [cluster="Humanizer.Inflections.Vocabulary.ApplyRules(System.Collections.Generic.IList<Humanizer.Inflections.Vocabulary.Rule>, string)", file="Vocabulary.cs", label="return result;", span="118-118"];
m1_46 [cluster="Humanizer.Inflections.Vocabulary.ApplyRules(System.Collections.Generic.IList<Humanizer.Inflections.Vocabulary.Rule>, string)", file="Vocabulary.cs", label="i >= 0", span="113-113"];
m1_48 [cluster="Humanizer.Inflections.Vocabulary.ApplyRules(System.Collections.Generic.IList<Humanizer.Inflections.Vocabulary.Rule>, string)", file="Vocabulary.cs", label="i--", span="113-113"];
m1_50 [cluster="Humanizer.Inflections.Vocabulary.ApplyRules(System.Collections.Generic.IList<Humanizer.Inflections.Vocabulary.Rule>, string)", file="Vocabulary.cs", label="Exit Humanizer.Inflections.Vocabulary.ApplyRules(System.Collections.Generic.IList<Humanizer.Inflections.Vocabulary.Rule>, string)", span="104-104"];
m1_51 [cluster="Humanizer.Inflections.Vocabulary.IsUncountable(string)", file="Vocabulary.cs", label="Entry Humanizer.Inflections.Vocabulary.IsUncountable(string)", span="121-121"];
m1_53 [cluster="Humanizer.Inflections.Vocabulary.IsUncountable(string)", file="Vocabulary.cs", label="return _uncountables.Contains(word.ToLower());", span="123-123"];
m1_54 [cluster="Humanizer.Inflections.Vocabulary.IsUncountable(string)", file="Vocabulary.cs", label="Exit Humanizer.Inflections.Vocabulary.IsUncountable(string)", span="121-121"];
m1_9 [cluster="Humanizer.Inflections.Vocabulary.AddUncountable(string)", file="Vocabulary.cs", label="Entry Humanizer.Inflections.Vocabulary.AddUncountable(string)", span="36-36"];
m1_10 [cluster="Humanizer.Inflections.Vocabulary.AddUncountable(string)", file="Vocabulary.cs", label="_uncountables.Add(word.ToLower())", span="38-38"];
m1_11 [cluster="Humanizer.Inflections.Vocabulary.AddUncountable(string)", file="Vocabulary.cs", label="Exit Humanizer.Inflections.Vocabulary.AddUncountable(string)", span="36-36"];
m1_65 [cluster="System.Text.RegularExpressions.Regex.Replace(string, string)", file="Vocabulary.cs", label="Entry System.Text.RegularExpressions.Regex.Replace(string, string)", span="0-0"];
m1_7 [cluster="Humanizer.Inflections.Vocabulary.AddPlural(string, string)", file="Vocabulary.cs", label="Entry Humanizer.Inflections.Vocabulary.AddPlural(string, string)", span="46-46"];
m1_14 [cluster="Humanizer.Inflections.Vocabulary.AddPlural(string, string)", file="Vocabulary.cs", label="_plurals.Add(new Rule(rule, replacement))", span="48-48"];
m1_15 [cluster="Humanizer.Inflections.Vocabulary.AddPlural(string, string)", file="Vocabulary.cs", label="Exit Humanizer.Inflections.Vocabulary.AddPlural(string, string)", span="46-46"];
m1_12 [cluster="string.ToLower()", file="Vocabulary.cs", label="Entry string.ToLower()", span="0-0"];
m1_6 [cluster="string.Substring(int)", file="Vocabulary.cs", label="Entry string.Substring(int)", span="0-0"];
m1_8 [cluster="Humanizer.Inflections.Vocabulary.AddSingular(string, string)", file="Vocabulary.cs", label="Entry Humanizer.Inflections.Vocabulary.AddSingular(string, string)", span="56-56"];
m1_17 [cluster="Humanizer.Inflections.Vocabulary.AddSingular(string, string)", file="Vocabulary.cs", label="_singulars.Add(new Rule(rule, replacement))", span="58-58"];
m1_18 [cluster="Humanizer.Inflections.Vocabulary.AddSingular(string, string)", file="Vocabulary.cs", label="Exit Humanizer.Inflections.Vocabulary.AddSingular(string, string)", span="56-56"];
m1_66 [file="Vocabulary.cs", label="Humanizer.Inflections.Vocabulary", span=""];
m1_67 [file="Vocabulary.cs", label="Humanizer.Inflections.Vocabulary.Rule", span=""];
n206 -> n204  [color=darkseagreen4, key=1, label="Humanizer.Tests.PluralTestSource", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=2, style=dotted];
n1 -> n4  [key=2, style=dotted];
n2 -> n0  [color=blue, key=0, style=bold];
n5 -> n6  [key=0, style=solid];
n5 -> n7  [color=darkseagreen4, key=1, label=string, style=dashed];
n6 -> n7  [key=0, style=solid];
n6 -> n3  [key=2, style=dotted];
n6 -> n4  [key=2, style=dotted];
n7 -> n8  [key=0, style=solid];
n7 -> n3  [key=2, style=dotted];
n7 -> n4  [key=2, style=dotted];
n8 -> n5  [color=blue, key=0, style=bold];
n9 -> n10  [key=0, style=solid];
n10 -> n11  [key=0, style=solid];
n10 -> n12  [key=2, style=dotted];
n10 -> n4  [key=2, style=dotted];
n11 -> n9  [color=blue, key=0, style=bold];
n13 -> n14  [key=0, style=solid];
n13 -> n15  [color=darkseagreen4, key=1, label=string, style=dashed];
n14 -> n15  [key=0, style=solid];
n14 -> n12  [key=2, style=dotted];
n14 -> n4  [key=2, style=dotted];
n15 -> n16  [key=0, style=solid];
n15 -> n12  [key=2, style=dotted];
n15 -> n4  [key=2, style=dotted];
n16 -> n13  [color=blue, key=0, style=bold];
n17 -> n18  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n18 -> n20  [key=2, style=dotted];
n18 -> n4  [key=2, style=dotted];
n19 -> n17  [color=blue, key=0, style=bold];
n21 -> n22  [key=0, style=solid];
n22 -> n23  [key=0, style=solid];
n22 -> n24  [key=2, style=dotted];
n22 -> n4  [key=2, style=dotted];
n23 -> n21  [color=blue, key=0, style=bold];
n25 -> n26  [key=0, style=solid];
n26 -> n27  [key=0, style=solid];
n26 -> n28  [key=2, style=dotted];
n26 -> n4  [key=2, style=dotted];
n27 -> n25  [color=blue, key=0, style=bold];
n29 -> n30  [key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n30 -> n32  [key=2, style=dotted];
n30 -> n4  [key=2, style=dotted];
n31 -> n29  [color=blue, key=0, style=bold];
n33 -> n34  [key=0, style=solid];
n34 -> n35  [key=0, style=solid];
n34 -> n36  [key=2, style=dotted];
n34 -> n4  [key=2, style=dotted];
n35 -> n33  [color=blue, key=0, style=bold];
n37 -> n38  [key=0, style=solid];
n38 -> n39  [key=0, style=solid];
n38 -> n40  [key=2, style=dotted];
n38 -> n4  [key=2, style=dotted];
n39 -> n37  [color=blue, key=0, style=bold];
n41 -> n42  [key=0, style=solid];
n41 -> n43  [color=crimson, key=0, style=bold];
n41 -> n44  [color=crimson, key=0, style=bold];
n41 -> n45  [color=crimson, key=0, style=bold];
n41 -> n46  [color=crimson, key=0, style=bold];
n41 -> n47  [color=crimson, key=0, style=bold];
n41 -> n48  [color=crimson, key=0, style=bold];
n41 -> n49  [color=crimson, key=0, style=bold];
n41 -> n50  [color=crimson, key=0, style=bold];
n41 -> n51  [color=crimson, key=0, style=bold];
n41 -> n52  [color=crimson, key=0, style=bold];
n41 -> n53  [color=crimson, key=0, style=bold];
n41 -> n54  [color=crimson, key=0, style=bold];
n41 -> n55  [color=crimson, key=0, style=bold];
n41 -> n56  [color=crimson, key=0, style=bold];
n41 -> n57  [color=crimson, key=0, style=bold];
n41 -> n58  [color=crimson, key=0, style=bold];
n41 -> n59  [color=crimson, key=0, style=bold];
n41 -> n60  [color=crimson, key=0, style=bold];
n41 -> n61  [color=crimson, key=0, style=bold];
n41 -> n62  [color=crimson, key=0, style=bold];
n41 -> n63  [color=crimson, key=0, style=bold];
n41 -> n64  [color=crimson, key=0, style=bold];
n41 -> n65  [color=crimson, key=0, style=bold];
n41 -> n66  [color=crimson, key=0, style=bold];
n41 -> n67  [color=crimson, key=0, style=bold];
n41 -> n68  [color=crimson, key=0, style=bold];
n41 -> n69  [color=crimson, key=0, style=bold];
n41 -> n70  [color=crimson, key=0, style=bold];
n41 -> n71  [color=crimson, key=0, style=bold];
n41 -> n72  [color=crimson, key=0, style=bold];
n41 -> n73  [color=crimson, key=0, style=bold];
n41 -> n74  [color=crimson, key=0, style=bold];
n41 -> n75  [color=crimson, key=0, style=bold];
n41 -> n76  [color=crimson, key=0, style=bold];
n41 -> n77  [color=crimson, key=0, style=bold];
n41 -> n78  [color=crimson, key=0, style=bold];
n41 -> n79  [color=crimson, key=0, style=bold];
n41 -> n80  [color=crimson, key=0, style=bold];
n41 -> n81  [color=crimson, key=0, style=bold];
n41 -> n82  [color=crimson, key=0, style=bold];
n41 -> n83  [color=crimson, key=0, style=bold];
n41 -> n84  [color=crimson, key=0, style=bold];
n41 -> n85  [color=crimson, key=0, style=bold];
n41 -> n86  [color=crimson, key=0, style=bold];
n41 -> n87  [color=crimson, key=0, style=bold];
n41 -> n88  [color=crimson, key=0, style=bold];
n41 -> n89  [color=crimson, key=0, style=bold];
n41 -> n90  [color=crimson, key=0, style=bold];
n41 -> n91  [color=crimson, key=0, style=bold];
n41 -> n92  [color=crimson, key=0, style=bold];
n41 -> n93  [color=crimson, key=0, style=bold];
n41 -> n94  [color=crimson, key=0, style=bold];
n41 -> n95  [color=crimson, key=0, style=bold];
n41 -> n96  [color=crimson, key=0, style=bold];
n41 -> n97  [color=crimson, key=0, style=bold];
n41 -> n98  [color=crimson, key=0, style=bold];
n41 -> n99  [color=crimson, key=0, style=bold];
n41 -> n100  [color=crimson, key=0, style=bold];
n41 -> n101  [color=crimson, key=0, style=bold];
n41 -> n102  [color=crimson, key=0, style=bold];
n41 -> n103  [color=crimson, key=0, style=bold];
n41 -> n104  [color=crimson, key=0, style=bold];
n41 -> n105  [color=crimson, key=0, style=bold];
n41 -> n106  [color=crimson, key=0, style=bold];
n41 -> n107  [color=crimson, key=0, style=bold];
n41 -> n108  [color=crimson, key=0, style=bold];
n41 -> n109  [color=crimson, key=0, style=bold];
n41 -> n110  [color=crimson, key=0, style=bold];
n41 -> n111  [color=crimson, key=0, style=bold];
n41 -> n112  [color=crimson, key=0, style=bold];
n41 -> n113  [color=crimson, key=0, style=bold];
n41 -> n114  [color=crimson, key=0, style=bold];
n41 -> n115  [color=crimson, key=0, style=bold];
n41 -> n116  [color=crimson, key=0, style=bold];
n41 -> n117  [color=crimson, key=0, style=bold];
n41 -> n118  [color=crimson, key=0, style=bold];
n41 -> n119  [color=crimson, key=0, style=bold];
n41 -> n120  [color=crimson, key=0, style=bold];
n41 -> n121  [color=crimson, key=0, style=bold];
n41 -> n122  [color=crimson, key=0, style=bold];
n41 -> n123  [color=crimson, key=0, style=bold];
n41 -> n124  [color=crimson, key=0, style=bold];
n41 -> n125  [color=crimson, key=0, style=bold];
n41 -> n126  [color=crimson, key=0, style=bold];
n41 -> n127  [color=crimson, key=0, style=bold];
n41 -> n128  [color=crimson, key=0, style=bold];
n41 -> n129  [color=crimson, key=0, style=bold];
n41 -> n130  [color=crimson, key=0, style=bold];
n41 -> n131  [color=crimson, key=0, style=bold];
n41 -> n132  [color=crimson, key=0, style=bold];
n41 -> n133  [color=crimson, key=0, style=bold];
n41 -> n134  [color=crimson, key=0, style=bold];
n41 -> n135  [color=crimson, key=0, style=bold];
n41 -> n136  [color=crimson, key=0, style=bold];
n41 -> n137  [color=crimson, key=0, style=bold];
n41 -> n138  [color=crimson, key=0, style=bold];
n41 -> n139  [color=crimson, key=0, style=bold];
n41 -> n140  [color=crimson, key=0, style=bold];
n41 -> n141  [color=crimson, key=0, style=bold];
n41 -> n142  [color=red, key=0, style=bold];
n41 -> n143  [color=crimson, key=0, style=bold];
n41 -> n144  [color=crimson, key=0, style=bold];
n41 -> n145  [color=crimson, key=0, style=bold];
n41 -> n146  [color=crimson, key=0, style=bold];
n41 -> n147  [color=crimson, key=0, style=bold];
n41 -> n148  [color=crimson, key=0, style=bold];
n41 -> n149  [color=crimson, key=0, style=bold];
n41 -> n150  [color=crimson, key=0, style=bold];
n41 -> n151  [color=crimson, key=0, style=bold];
n41 -> n152  [color=crimson, key=0, style=bold];
n41 -> n153  [color=crimson, key=0, style=bold];
n41 -> n154  [color=crimson, key=0, style=bold];
n41 -> n155  [color=crimson, key=0, style=bold];
n41 -> n156  [color=crimson, key=0, style=bold];
n41 -> n157  [color=crimson, key=0, style=bold];
n41 -> n158  [color=crimson, key=0, style=bold];
n41 -> n159  [color=crimson, key=0, style=bold];
n41 -> n160  [color=crimson, key=0, style=bold];
n41 -> n161  [color=crimson, key=0, style=bold];
n41 -> n162  [color=crimson, key=0, style=bold];
n41 -> n163  [color=crimson, key=0, style=bold];
n41 -> n164  [color=crimson, key=0, style=bold];
n41 -> n165  [color=red, key=0, style=bold];
n41 -> n166  [color=crimson, key=0, style=bold];
n41 -> n167  [color=crimson, key=0, style=bold];
n41 -> n168  [color=crimson, key=0, style=bold];
n41 -> n169  [color=crimson, key=0, style=bold];
n41 -> n170  [color=crimson, key=0, style=bold];
n41 -> n171  [color=crimson, key=0, style=bold];
n41 -> n172  [color=crimson, key=0, style=bold];
n41 -> n173  [color=crimson, key=0, style=bold];
n41 -> n174  [color=crimson, key=0, style=bold];
n41 -> n175  [color=crimson, key=0, style=bold];
n41 -> n176  [color=crimson, key=0, style=bold];
n41 -> n177  [color=crimson, key=0, style=bold];
n41 -> n178  [color=crimson, key=0, style=bold];
n41 -> n179  [color=crimson, key=0, style=bold];
n41 -> n180  [color=crimson, key=0, style=bold];
n41 -> n181  [color=crimson, key=0, style=bold];
n41 -> n182  [color=crimson, key=0, style=bold];
n41 -> n183  [color=crimson, key=0, style=bold];
n41 -> n184  [color=crimson, key=0, style=bold];
n41 -> n185  [color=crimson, key=0, style=bold];
n41 -> n186  [color=crimson, key=0, style=bold];
n41 -> n187  [color=crimson, key=0, style=bold];
n41 -> n188  [color=crimson, key=0, style=bold];
n41 -> n189  [color=crimson, key=0, style=bold];
n41 -> n190  [color=crimson, key=0, style=bold];
n41 -> n191  [color=crimson, key=0, style=bold];
n41 -> n192  [color=crimson, key=0, style=bold];
n41 -> n193  [color=crimson, key=0, style=bold];
n41 -> n194  [color=crimson, key=0, style=bold];
n41 -> n195  [color=crimson, key=0, style=bold];
n41 -> n196  [color=crimson, key=0, style=bold];
n41 -> n197  [color=crimson, key=0, style=bold];
n41 -> n198  [color=crimson, key=0, style=bold];
n41 -> n199  [color=crimson, key=0, style=bold];
n41 -> n200  [color=crimson, key=0, style=bold];
n41 -> n201  [color=crimson, key=0, style=bold];
n42 -> n43  [key=0, style=solid];
n43 -> n44  [key=0, style=solid];
n44 -> n45  [key=0, style=solid];
n45 -> n46  [key=0, style=solid];
n46 -> n47  [key=0, style=solid];
n47 -> n48  [key=0, style=solid];
n48 -> n49  [key=0, style=solid];
n49 -> n50  [key=0, style=solid];
n50 -> n51  [key=0, style=solid];
n51 -> n52  [key=0, style=solid];
n52 -> n53  [key=0, style=solid];
n53 -> n54  [key=0, style=solid];
n54 -> n55  [key=0, style=solid];
n55 -> n56  [key=0, style=solid];
n56 -> n57  [key=0, style=solid];
n57 -> n58  [key=0, style=solid];
n58 -> n59  [key=0, style=solid];
n59 -> n60  [key=0, style=solid];
n60 -> n61  [key=0, style=solid];
n61 -> n62  [key=0, style=solid];
n62 -> n63  [key=0, style=solid];
n63 -> n64  [key=0, style=solid];
n64 -> n65  [key=0, style=solid];
n65 -> n66  [key=0, style=solid];
n66 -> n67  [key=0, style=solid];
n67 -> n68  [key=0, style=solid];
n68 -> n69  [key=0, style=solid];
n69 -> n70  [key=0, style=solid];
n70 -> n71  [key=0, style=solid];
n71 -> n72  [key=0, style=solid];
n72 -> n73  [key=0, style=solid];
n73 -> n74  [key=0, style=solid];
n74 -> n75  [key=0, style=solid];
n75 -> n76  [key=0, style=solid];
n76 -> n77  [key=0, style=solid];
n77 -> n78  [key=0, style=solid];
n78 -> n79  [key=0, style=solid];
n79 -> n80  [key=0, style=solid];
n80 -> n81  [key=0, style=solid];
n81 -> n82  [key=0, style=solid];
n82 -> n83  [key=0, style=solid];
n83 -> n84  [key=0, style=solid];
n84 -> n85  [key=0, style=solid];
n85 -> n86  [key=0, style=solid];
n86 -> n87  [key=0, style=solid];
n87 -> n88  [key=0, style=solid];
n88 -> n89  [key=0, style=solid];
n89 -> n90  [key=0, style=solid];
n90 -> n91  [key=0, style=solid];
n91 -> n92  [key=0, style=solid];
n92 -> n93  [key=0, style=solid];
n93 -> n94  [key=0, style=solid];
n94 -> n95  [key=0, style=solid];
n95 -> n96  [key=0, style=solid];
n96 -> n97  [key=0, style=solid];
n97 -> n98  [key=0, style=solid];
n98 -> n99  [key=0, style=solid];
n99 -> n100  [key=0, style=solid];
n100 -> n101  [key=0, style=solid];
n101 -> n102  [key=0, style=solid];
n102 -> n103  [key=0, style=solid];
n103 -> n104  [key=0, style=solid];
n104 -> n105  [key=0, style=solid];
n105 -> n106  [key=0, style=solid];
n106 -> n107  [key=0, style=solid];
n107 -> n108  [key=0, style=solid];
n108 -> n109  [key=0, style=solid];
n109 -> n110  [key=0, style=solid];
n110 -> n111  [key=0, style=solid];
n111 -> n112  [key=0, style=solid];
n112 -> n113  [key=0, style=solid];
n113 -> n114  [key=0, style=solid];
n114 -> n115  [key=0, style=solid];
n115 -> n116  [key=0, style=solid];
n116 -> n117  [key=0, style=solid];
n117 -> n118  [key=0, style=solid];
n118 -> n119  [key=0, style=solid];
n119 -> n120  [key=0, style=solid];
n120 -> n121  [key=0, style=solid];
n121 -> n122  [key=0, style=solid];
n122 -> n123  [key=0, style=solid];
n123 -> n124  [key=0, style=solid];
n124 -> n125  [key=0, style=solid];
n125 -> n126  [key=0, style=solid];
n126 -> n127  [key=0, style=solid];
n127 -> n128  [key=0, style=solid];
n128 -> n129  [key=0, style=solid];
n129 -> n130  [key=0, style=solid];
n130 -> n131  [key=0, style=solid];
n131 -> n132  [key=0, style=solid];
n132 -> n133  [key=0, style=solid];
n133 -> n134  [key=0, style=solid];
n134 -> n135  [key=0, style=solid];
n135 -> n136  [key=0, style=solid];
n136 -> n137  [key=0, style=solid];
n137 -> n138  [key=0, style=solid];
n138 -> n139  [key=0, style=solid];
n139 -> n140  [key=0, style=solid];
n140 -> n141  [key=0, style=solid];
n141 -> n142  [color=red, key=0, style=solid];
n141 -> d142  [key=0, style=solid];
n142 -> n143  [color=red, key=0, style=solid];
n143 -> n144  [key=0, style=solid];
n144 -> n145  [key=0, style=solid];
n145 -> n146  [key=0, style=solid];
n146 -> n147  [key=0, style=solid];
n147 -> n148  [key=0, style=solid];
n148 -> n149  [key=0, style=solid];
n149 -> n150  [key=0, style=solid];
n150 -> n151  [key=0, style=solid];
n151 -> n152  [key=0, style=solid];
n152 -> n153  [key=0, style=solid];
n153 -> n154  [key=0, style=solid];
n154 -> n155  [key=0, style=solid];
n155 -> n156  [key=0, style=solid];
n156 -> n157  [key=0, style=solid];
n157 -> n158  [key=0, style=solid];
n158 -> n159  [key=0, style=solid];
n159 -> n160  [key=0, style=solid];
n160 -> n161  [key=0, style=solid];
n161 -> n162  [key=0, style=solid];
n162 -> n163  [key=0, style=solid];
n163 -> n164  [key=0, style=solid];
n163 -> d164  [color=green, key=0, style=solid];
n164 -> n165  [color=red, key=0, style=solid];
n165 -> n166  [color=red, key=0, style=solid];
n166 -> n167  [key=0, style=solid];
n167 -> n168  [key=0, style=solid];
n168 -> n169  [key=0, style=solid];
n169 -> n170  [key=0, style=solid];
n170 -> n171  [key=0, style=solid];
n171 -> n172  [key=0, style=solid];
n172 -> n173  [key=0, style=solid];
n173 -> n174  [key=0, style=solid];
n174 -> n175  [key=0, style=solid];
n175 -> n176  [key=0, style=solid];
n176 -> n177  [key=0, style=solid];
n177 -> n178  [key=0, style=solid];
n178 -> n179  [key=0, style=solid];
n179 -> n180  [key=0, style=solid];
n180 -> n181  [key=0, style=solid];
n181 -> n182  [key=0, style=solid];
n182 -> n183  [key=0, style=solid];
n183 -> n184  [key=0, style=solid];
n184 -> n185  [key=0, style=solid];
n185 -> n186  [key=0, style=solid];
n186 -> n187  [key=0, style=solid];
n187 -> n188  [key=0, style=solid];
n188 -> n189  [key=0, style=solid];
n189 -> n190  [key=0, style=solid];
n190 -> n191  [key=0, style=solid];
n191 -> n192  [key=0, style=solid];
n192 -> n193  [key=0, style=solid];
n193 -> n194  [key=0, style=solid];
n194 -> n195  [key=0, style=solid];
n195 -> n196  [key=0, style=solid];
n196 -> n197  [key=0, style=solid];
n197 -> n198  [key=0, style=solid];
n198 -> n199  [key=0, style=solid];
n199 -> n200  [key=0, style=solid];
n200 -> n201  [key=0, style=solid];
n201 -> n202  [key=0, style=solid];
n202 -> n41  [color=blue, key=0, style=bold];
n202 -> d41  [color=blue, key=0, style=bold];
n203 -> n204  [key=0, style=solid];
n203 -> n41  [color=darkorchid, key=3, label="method methodReturn System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator", style=bold];
n203 -> d41  [color=darkorchid, key=3, label="method methodReturn System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator", style=bold];
n204 -> n205  [key=0, style=solid];
n204 -> n41  [key=2, style=dotted];
n204 -> d41  [key=2, style=dotted];
n205 -> n203  [color=blue, key=0, style=bold];
d164 -> d165  [color=green, key=0, style=solid];
d41 -> d164  [color=green, key=0, style=bold];
d41 -> n42  [key=0, style=solid];
d41 -> n43  [color=crimson, key=0, style=bold];
d41 -> n44  [color=crimson, key=0, style=bold];
d41 -> n45  [color=crimson, key=0, style=bold];
d41 -> n46  [color=crimson, key=0, style=bold];
d41 -> n47  [color=crimson, key=0, style=bold];
d41 -> n48  [color=crimson, key=0, style=bold];
d41 -> n49  [color=crimson, key=0, style=bold];
d41 -> n50  [color=crimson, key=0, style=bold];
d41 -> n51  [color=crimson, key=0, style=bold];
d41 -> n52  [color=crimson, key=0, style=bold];
d41 -> n53  [color=crimson, key=0, style=bold];
d41 -> n54  [color=crimson, key=0, style=bold];
d41 -> n55  [color=crimson, key=0, style=bold];
d41 -> n56  [color=crimson, key=0, style=bold];
d41 -> n57  [color=crimson, key=0, style=bold];
d41 -> n58  [color=crimson, key=0, style=bold];
d41 -> n59  [color=crimson, key=0, style=bold];
d41 -> n60  [color=crimson, key=0, style=bold];
d41 -> n61  [color=crimson, key=0, style=bold];
d41 -> n62  [color=crimson, key=0, style=bold];
d41 -> n63  [color=crimson, key=0, style=bold];
d41 -> n64  [color=crimson, key=0, style=bold];
d41 -> n65  [color=crimson, key=0, style=bold];
d41 -> n66  [color=crimson, key=0, style=bold];
d41 -> n67  [color=crimson, key=0, style=bold];
d41 -> n68  [color=crimson, key=0, style=bold];
d41 -> n69  [color=crimson, key=0, style=bold];
d41 -> n70  [color=crimson, key=0, style=bold];
d41 -> n71  [color=crimson, key=0, style=bold];
d41 -> n72  [color=crimson, key=0, style=bold];
d41 -> n73  [color=crimson, key=0, style=bold];
d41 -> n74  [color=crimson, key=0, style=bold];
d41 -> n75  [color=crimson, key=0, style=bold];
d41 -> n76  [color=crimson, key=0, style=bold];
d41 -> n77  [color=crimson, key=0, style=bold];
d41 -> n78  [color=crimson, key=0, style=bold];
d41 -> n79  [color=crimson, key=0, style=bold];
d41 -> n80  [color=crimson, key=0, style=bold];
d41 -> n81  [color=crimson, key=0, style=bold];
d41 -> n82  [color=crimson, key=0, style=bold];
d41 -> n83  [color=crimson, key=0, style=bold];
d41 -> n84  [color=crimson, key=0, style=bold];
d41 -> n85  [color=crimson, key=0, style=bold];
d41 -> n86  [color=crimson, key=0, style=bold];
d41 -> n87  [color=crimson, key=0, style=bold];
d41 -> n88  [color=crimson, key=0, style=bold];
d41 -> n89  [color=crimson, key=0, style=bold];
d41 -> n90  [color=crimson, key=0, style=bold];
d41 -> n91  [color=crimson, key=0, style=bold];
d41 -> n92  [color=crimson, key=0, style=bold];
d41 -> n93  [color=crimson, key=0, style=bold];
d41 -> n94  [color=crimson, key=0, style=bold];
d41 -> n95  [color=crimson, key=0, style=bold];
d41 -> n96  [color=crimson, key=0, style=bold];
d41 -> n97  [color=crimson, key=0, style=bold];
d41 -> n98  [color=crimson, key=0, style=bold];
d41 -> n99  [color=crimson, key=0, style=bold];
d41 -> n100  [color=crimson, key=0, style=bold];
d41 -> n101  [color=crimson, key=0, style=bold];
d41 -> n102  [color=crimson, key=0, style=bold];
d41 -> n103  [color=crimson, key=0, style=bold];
d41 -> n104  [color=crimson, key=0, style=bold];
d41 -> n105  [color=crimson, key=0, style=bold];
d41 -> n106  [color=crimson, key=0, style=bold];
d41 -> n107  [color=crimson, key=0, style=bold];
d41 -> n108  [color=crimson, key=0, style=bold];
d41 -> n109  [color=crimson, key=0, style=bold];
d41 -> n110  [color=crimson, key=0, style=bold];
d41 -> n111  [color=crimson, key=0, style=bold];
d41 -> n112  [color=crimson, key=0, style=bold];
d41 -> n113  [color=crimson, key=0, style=bold];
d41 -> n114  [color=crimson, key=0, style=bold];
d41 -> n115  [color=crimson, key=0, style=bold];
d41 -> n116  [color=crimson, key=0, style=bold];
d41 -> n117  [color=crimson, key=0, style=bold];
d41 -> n118  [color=crimson, key=0, style=bold];
d41 -> n119  [color=crimson, key=0, style=bold];
d41 -> n120  [color=crimson, key=0, style=bold];
d41 -> n121  [color=crimson, key=0, style=bold];
d41 -> n122  [color=crimson, key=0, style=bold];
d41 -> n123  [color=crimson, key=0, style=bold];
d41 -> n124  [color=crimson, key=0, style=bold];
d41 -> n125  [color=crimson, key=0, style=bold];
d41 -> n126  [color=crimson, key=0, style=bold];
d41 -> n127  [color=crimson, key=0, style=bold];
d41 -> n128  [color=crimson, key=0, style=bold];
d41 -> n129  [color=crimson, key=0, style=bold];
d41 -> n130  [color=crimson, key=0, style=bold];
d41 -> n131  [color=crimson, key=0, style=bold];
d41 -> n132  [color=crimson, key=0, style=bold];
d41 -> n133  [color=crimson, key=0, style=bold];
d41 -> n134  [color=crimson, key=0, style=bold];
d41 -> n135  [color=crimson, key=0, style=bold];
d41 -> n136  [color=crimson, key=0, style=bold];
d41 -> n137  [color=crimson, key=0, style=bold];
d41 -> n138  [color=crimson, key=0, style=bold];
d41 -> n139  [color=crimson, key=0, style=bold];
d41 -> n140  [color=crimson, key=0, style=bold];
d41 -> n141  [color=crimson, key=0, style=bold];
d41 -> d142  [color=crimson, key=0, style=bold];
d41 -> n143  [color=crimson, key=0, style=bold];
d41 -> n144  [color=crimson, key=0, style=bold];
d41 -> n145  [color=crimson, key=0, style=bold];
d41 -> n146  [color=crimson, key=0, style=bold];
d41 -> n147  [color=crimson, key=0, style=bold];
d41 -> n148  [color=crimson, key=0, style=bold];
d41 -> n149  [color=crimson, key=0, style=bold];
d41 -> n150  [color=crimson, key=0, style=bold];
d41 -> n151  [color=crimson, key=0, style=bold];
d41 -> n152  [color=crimson, key=0, style=bold];
d41 -> n153  [color=crimson, key=0, style=bold];
d41 -> n154  [color=crimson, key=0, style=bold];
d41 -> n155  [color=crimson, key=0, style=bold];
d41 -> n156  [color=crimson, key=0, style=bold];
d41 -> n157  [color=crimson, key=0, style=bold];
d41 -> n158  [color=crimson, key=0, style=bold];
d41 -> n159  [color=crimson, key=0, style=bold];
d41 -> n160  [color=crimson, key=0, style=bold];
d41 -> n161  [color=crimson, key=0, style=bold];
d41 -> n162  [color=crimson, key=0, style=bold];
d41 -> n163  [color=crimson, key=0, style=bold];
d41 -> d165  [color=crimson, key=0, style=bold];
d41 -> n166  [color=crimson, key=0, style=bold];
d41 -> n167  [color=crimson, key=0, style=bold];
d41 -> n168  [color=crimson, key=0, style=bold];
d41 -> n169  [color=crimson, key=0, style=bold];
d41 -> n170  [color=crimson, key=0, style=bold];
d41 -> n171  [color=crimson, key=0, style=bold];
d41 -> n172  [color=crimson, key=0, style=bold];
d41 -> n173  [color=crimson, key=0, style=bold];
d41 -> n174  [color=crimson, key=0, style=bold];
d41 -> n175  [color=crimson, key=0, style=bold];
d41 -> n176  [color=crimson, key=0, style=bold];
d41 -> n177  [color=crimson, key=0, style=bold];
d41 -> n178  [color=crimson, key=0, style=bold];
d41 -> n179  [color=crimson, key=0, style=bold];
d41 -> n180  [color=crimson, key=0, style=bold];
d41 -> n181  [color=crimson, key=0, style=bold];
d41 -> n182  [color=crimson, key=0, style=bold];
d41 -> n183  [color=crimson, key=0, style=bold];
d41 -> n184  [color=crimson, key=0, style=bold];
d41 -> n185  [color=crimson, key=0, style=bold];
d41 -> n186  [color=crimson, key=0, style=bold];
d41 -> n187  [color=crimson, key=0, style=bold];
d41 -> n188  [color=crimson, key=0, style=bold];
d41 -> n189  [color=crimson, key=0, style=bold];
d41 -> n190  [color=crimson, key=0, style=bold];
d41 -> n191  [color=crimson, key=0, style=bold];
d41 -> n192  [color=crimson, key=0, style=bold];
d41 -> n193  [color=crimson, key=0, style=bold];
d41 -> n194  [color=crimson, key=0, style=bold];
d41 -> n195  [color=crimson, key=0, style=bold];
d41 -> n196  [color=crimson, key=0, style=bold];
d41 -> n197  [color=crimson, key=0, style=bold];
d41 -> n198  [color=crimson, key=0, style=bold];
d41 -> n199  [color=crimson, key=0, style=bold];
d41 -> n200  [color=crimson, key=0, style=bold];
d41 -> n201  [color=crimson, key=0, style=bold];
d165 -> n166  [key=0, style=solid];
d142 -> n143  [key=0, style=solid];
m0_17 -> m0_100  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid];
m0_22 -> m0_100  [key=2, style=dotted];
m0_22 -> m0_23  [key=0, style=solid];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=2, style=dotted];
m0_1 -> n4  [key=2, style=dotted];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_100  [key=2, style=dotted];
m0_12 -> m0_13  [color=green, key=0, style=solid];
m0_12 -> m0_3  [key=2, style=dotted];
m0_12 -> n4  [key=2, style=dotted];
m0_12 -> m0_100  [key=2, style=dotted];
m0_13 -> m0_11  [color=blue, key=0, style=bold];
m0_13 -> m0_14  [color=green, key=0, style=solid];
m0_13 -> m0_100  [color=green, key=2, style=dotted];
m0_14 -> m0_15  [color=green, key=0, style=solid];
m0_14 -> m0_100  [key=2, style=dotted];
m0_15 -> m0_16  [color=green, key=0, style=solid];
m0_15 -> m0_17  [key=2, style=dotted];
m0_15 -> n4  [key=2, style=dotted];
m0_15 -> m0_100  [color=green, key=2, style=dotted];
m0_16 -> m0_14  [color=blue, key=0, style=bold];
m0_16 -> m0_100  [key=2, style=dotted];
m0_16 -> m0_17  [key=0, style=solid];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_19  [color=darkorchid, key=3, label="Parameter variable System.Globalization.CultureInfo culture", style=bold];
m0_23 -> m0_100  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_26  [key=2, style=dotted];
m0_24 -> m0_100  [key=2, style=dotted];
m0_25 -> m0_23  [color=blue, key=0, style=bold];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_101  [key=2, style=dotted];
m0_26 -> m0_27  [color=green, key=0, style=solid];
m0_26 -> m0_101  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_10 -> m0_11  [color=green, key=0, style=solid];
m0_10 -> m0_100  [color=green, key=2, style=dotted];
m0_10 -> m0_8  [color=blue, key=0, style=bold];
m0_5 -> m0_10  [color=green, key=1, label=_default, style=dashed];
m0_5 -> m0_13  [color=green, key=1, label=_default, style=dashed];
m0_5 -> m0_15  [color=green, key=1, label=_default, style=dashed];
m0_5 -> m0_27  [color=green, key=1, label=_default, style=dashed];
m0_5 -> m0_44  [color=green, key=1, label=_default, style=dashed];
m0_5 -> m0_62  [color=green, key=1, label=_default, style=dashed];
m0_5 -> m0_63  [color=green, key=1, label=_default, style=dashed];
m0_5 -> m0_64  [color=green, key=1, label=_default, style=dashed];
m0_5 -> m0_65  [color=green, key=1, label=_default, style=dashed];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_99  [key=2, style=dotted];
m0_5 -> m0_7  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_8  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_9  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_11  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_12  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_14  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_16  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_17  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_18  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_19  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_20  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_21  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_22  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_23  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_24  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_25  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_26  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_28  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_29  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_30  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_31  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_32  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_33  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_34  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_35  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_36  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_37  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_38  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_39  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_40  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_41  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_42  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_43  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_45  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_46  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_47  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_48  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_49  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_50  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_51  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_52  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_53  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_54  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_55  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_56  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_57  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_58  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_59  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_60  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_61  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_66  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_67  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_68  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_69  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_70  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_71  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_72  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_73  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_74  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_75  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_76  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_77  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_78  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_79  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_80  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_81  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_82  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_83  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_84  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_85  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_86  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_87  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_88  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_89  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_90  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_91  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_92  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_93  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_94  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_95  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_96  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_5 -> m0_97  [color=darkseagreen4, key=1, label=_default, style=dashed];
m0_9 -> m0_10  [color=green, key=0, style=solid];
m0_9 -> m0_100  [key=2, style=dotted];
m0_9 -> m0_3  [key=2, style=dotted];
m0_9 -> n4  [key=2, style=dotted];
m0_27 -> m0_28  [color=green, key=0, style=solid];
m0_27 -> m0_101  [color=green, key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_101  [key=2, style=dotted];
m0_44 -> m0_45  [color=green, key=0, style=solid];
m0_44 -> m0_101  [color=green, key=2, style=dotted];
m0_43 -> m0_44  [color=green, key=0, style=solid];
m0_43 -> m0_101  [key=2, style=dotted];
m0_45 -> m0_101  [key=2, style=dotted];
m0_45 -> m0_46  [key=0, style=solid];
m0_62 -> m0_63  [color=green, key=0, style=solid];
m0_62 -> m0_102  [color=green, key=2, style=dotted];
m0_61 -> m0_62  [color=green, key=0, style=solid];
m0_61 -> m0_102  [key=2, style=dotted];
m0_63 -> m0_64  [color=green, key=0, style=solid];
m0_63 -> m0_103  [color=green, key=2, style=dotted];
m0_64 -> m0_65  [color=green, key=0, style=solid];
m0_64 -> m0_103  [color=green, key=2, style=dotted];
m0_65 -> m0_66  [color=green, key=0, style=solid];
m0_65 -> m0_103  [color=green, key=2, style=dotted];
m0_66 -> m0_103  [key=2, style=dotted];
m0_66 -> m0_67  [key=0, style=solid];
m0_6 -> m0_100  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_3  [key=2, style=dotted];
m0_6 -> n4  [key=2, style=dotted];
m0_7 -> m0_100  [key=2, style=dotted];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_5  [color=blue, key=0, style=bold];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_100  [key=2, style=dotted];
m0_18 -> m0_100  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_20  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_19 -> m0_100  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_22  [key=2, style=dotted];
m0_20 -> m0_100  [key=2, style=dotted];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_17  [key=2, style=dotted];
m0_20 -> m0_23  [key=2, style=dotted];
m0_20 -> n4  [key=2, style=dotted];
m0_21 -> m0_100  [key=2, style=dotted];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_18  [color=blue, key=0, style=bold];
m0_29 -> m0_101  [key=2, style=dotted];
m0_29 -> m0_30  [key=0, style=solid];
m0_30 -> m0_101  [key=2, style=dotted];
m0_30 -> m0_31  [key=0, style=solid];
m0_31 -> m0_101  [key=2, style=dotted];
m0_31 -> m0_32  [key=0, style=solid];
m0_32 -> m0_101  [key=2, style=dotted];
m0_32 -> m0_33  [key=0, style=solid];
m0_33 -> m0_101  [key=2, style=dotted];
m0_33 -> m0_34  [key=0, style=solid];
m0_34 -> m0_101  [key=2, style=dotted];
m0_34 -> m0_35  [key=0, style=solid];
m0_35 -> m0_101  [key=2, style=dotted];
m0_35 -> m0_36  [key=0, style=solid];
m0_36 -> m0_101  [key=2, style=dotted];
m0_36 -> m0_37  [key=0, style=solid];
m0_37 -> m0_101  [key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_38 -> m0_101  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid];
m0_39 -> m0_101  [key=2, style=dotted];
m0_39 -> m0_40  [key=0, style=solid];
m0_40 -> m0_101  [key=2, style=dotted];
m0_40 -> m0_41  [key=0, style=solid];
m0_41 -> m0_101  [key=2, style=dotted];
m0_41 -> m0_42  [key=0, style=solid];
m0_42 -> m0_101  [key=2, style=dotted];
m0_42 -> m0_43  [key=0, style=solid];
m0_46 -> m0_101  [key=2, style=dotted];
m0_46 -> m0_47  [key=0, style=solid];
m0_47 -> m0_101  [key=2, style=dotted];
m0_47 -> m0_48  [key=0, style=solid];
m0_48 -> m0_101  [key=2, style=dotted];
m0_48 -> m0_49  [key=0, style=solid];
m0_49 -> m0_101  [key=2, style=dotted];
m0_49 -> m0_50  [key=0, style=solid];
m0_50 -> m0_102  [key=2, style=dotted];
m0_50 -> m0_51  [key=0, style=solid];
m0_51 -> m0_102  [key=2, style=dotted];
m0_51 -> m0_52  [key=0, style=solid];
m0_52 -> m0_102  [key=2, style=dotted];
m0_52 -> m0_53  [key=0, style=solid];
m0_53 -> m0_102  [key=2, style=dotted];
m0_53 -> m0_54  [key=0, style=solid];
m0_54 -> m0_102  [key=2, style=dotted];
m0_54 -> m0_55  [key=0, style=solid];
m0_55 -> m0_102  [key=2, style=dotted];
m0_55 -> m0_56  [key=0, style=solid];
m0_56 -> m0_102  [key=2, style=dotted];
m0_56 -> m0_57  [key=0, style=solid];
m0_57 -> m0_102  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_58 -> m0_102  [key=2, style=dotted];
m0_58 -> m0_59  [key=0, style=solid];
m0_59 -> m0_102  [key=2, style=dotted];
m0_59 -> m0_60  [key=0, style=solid];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_102  [key=2, style=dotted];
m0_67 -> m0_103  [key=2, style=dotted];
m0_67 -> m0_68  [key=0, style=solid];
m0_68 -> m0_103  [key=2, style=dotted];
m0_68 -> m0_69  [key=0, style=solid];
m0_69 -> m0_103  [key=2, style=dotted];
m0_69 -> m0_70  [key=0, style=solid];
m0_70 -> m0_103  [key=2, style=dotted];
m0_70 -> m0_71  [key=0, style=solid];
m0_71 -> m0_103  [key=2, style=dotted];
m0_71 -> m0_72  [key=0, style=solid];
m0_72 -> m0_103  [key=2, style=dotted];
m0_72 -> m0_73  [key=0, style=solid];
m0_73 -> m0_103  [key=2, style=dotted];
m0_73 -> m0_74  [key=0, style=solid];
m0_74 -> m0_103  [key=2, style=dotted];
m0_74 -> m0_75  [key=0, style=solid];
m0_75 -> m0_103  [key=2, style=dotted];
m0_75 -> m0_76  [key=0, style=solid];
m0_76 -> m0_103  [key=2, style=dotted];
m0_76 -> m0_77  [key=0, style=solid];
m0_77 -> m0_103  [key=2, style=dotted];
m0_77 -> m0_78  [key=0, style=solid];
m0_78 -> m0_103  [key=2, style=dotted];
m0_78 -> m0_79  [key=0, style=solid];
m0_79 -> m0_103  [key=2, style=dotted];
m0_79 -> m0_80  [key=0, style=solid];
m0_80 -> m0_103  [key=2, style=dotted];
m0_80 -> m0_81  [key=0, style=solid];
m0_81 -> m0_103  [key=2, style=dotted];
m0_81 -> m0_82  [key=0, style=solid];
m0_82 -> m0_103  [key=2, style=dotted];
m0_82 -> m0_83  [key=0, style=solid];
m0_83 -> m0_103  [key=2, style=dotted];
m0_83 -> m0_84  [key=0, style=solid];
m0_84 -> m0_103  [key=2, style=dotted];
m0_84 -> m0_85  [key=0, style=solid];
m0_85 -> m0_103  [key=2, style=dotted];
m0_85 -> m0_86  [key=0, style=solid];
m0_86 -> m0_103  [key=2, style=dotted];
m0_86 -> m0_87  [key=0, style=solid];
m0_87 -> m0_103  [key=2, style=dotted];
m0_87 -> m0_88  [key=0, style=solid];
m0_88 -> m0_103  [key=2, style=dotted];
m0_88 -> m0_89  [key=0, style=solid];
m0_89 -> m0_103  [key=2, style=dotted];
m0_89 -> m0_90  [key=0, style=solid];
m0_90 -> m0_103  [key=2, style=dotted];
m0_90 -> m0_91  [key=0, style=solid];
m0_91 -> m0_103  [key=2, style=dotted];
m0_91 -> m0_92  [key=0, style=solid];
m0_92 -> m0_103  [key=2, style=dotted];
m0_92 -> m0_93  [key=0, style=solid];
m0_93 -> m0_103  [key=2, style=dotted];
m0_93 -> m0_94  [key=0, style=solid];
m0_94 -> m0_103  [key=2, style=dotted];
m0_94 -> m0_95  [key=0, style=solid];
m0_95 -> m0_103  [key=2, style=dotted];
m0_95 -> m0_96  [key=0, style=solid];
m0_96 -> m0_103  [key=2, style=dotted];
m0_96 -> m0_97  [key=0, style=solid];
m0_97 -> m0_98  [key=0, style=solid];
m0_98 -> m0_4  [color=blue, key=0, style=bold];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_21  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_19 -> m1_23  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_19 -> m1_25  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_19 -> m1_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_19 -> m1_19  [color=darkorchid, key=3, label="method methodReturn string Pluralize", style=bold];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_29  [key=2, style=dotted];
m1_20 -> m1_22  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_20 -> m1_25  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_20 -> m1_27  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_23  [key=0, style=solid];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_29  [key=2, style=dotted];
m1_23 -> m1_25  [color=darkseagreen4, key=1, label=asSingular, style=dashed];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_27  [key=0, style=solid];
m1_26 -> m1_28  [key=0, style=solid];
m1_22 -> m1_28  [key=0, style=solid];
m1_27 -> m1_28  [key=0, style=solid];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_29  [key=2, style=dotted];
m1_28 -> m1_19  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [color=blue, key=0, style=bold];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_32  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_30 -> m1_34  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_30 -> m1_36  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_30 -> m1_37  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_30 -> m1_38  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_30 -> m1_30  [color=darkorchid, key=3, label="method methodReturn string Singularize", style=bold];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_29  [key=2, style=dotted];
m1_31 -> m1_33  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_31 -> m1_36  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_31 -> m1_38  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_34  [key=0, style=solid];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_29  [key=2, style=dotted];
m1_34 -> m1_36  [color=darkseagreen4, key=1, label=asPlural, style=dashed];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_38  [key=0, style=solid];
m1_37 -> m1_39  [key=0, style=solid];
m1_38 -> m1_39  [key=0, style=solid];
m1_33 -> m1_39  [key=0, style=solid];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_29  [key=2, style=dotted];
m1_39 -> m1_30  [color=blue, key=0, style=bold];
m1_52 -> m1_60  [key=0, style=solid];
m1_52 -> m1_62  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_52 -> m1_29  [color=darkorchid, key=3, label="Parameter variable string word", style=bold];
m1_52 -> m1_41  [color=darkorchid, key=3, label="method methodReturn string Apply", style=bold];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_62  [key=0, style=solid];
m1_60 -> m1_64  [key=2, style=dotted];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_65  [key=2, style=dotted];
m1_61 -> m1_63  [key=0, style=solid];
m1_63 -> m1_52  [color=blue, key=0, style=bold];
m1_16 -> m1_56  [key=0, style=solid];
m1_16 -> m1_57  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_59  [key=2, style=dotted];
m1_57 -> m1_58  [key=0, style=solid];
m1_58 -> m1_16  [color=blue, key=0, style=bold];
m1_2 -> m1_3  [color=green, key=0, style=solid];
m1_2 -> m1_4  [color=green, key=1, label=string, style=dashed];
m1_3 -> m1_4  [color=green, key=0, style=solid];
m1_3 -> m1_6  [color=green, key=2, style=dotted];
m1_3 -> m1_7  [color=green, key=2, style=dotted];
m1_4 -> m1_5  [color=green, key=0, style=solid];
m1_4 -> m1_6  [color=green, key=2, style=dotted];
m1_4 -> m1_8  [color=green, key=2, style=dotted];
m1_5 -> m1_2  [color=blue, key=0, style=bold];
m1_29 -> m1_40  [key=0, style=solid];
m1_29 -> m1_42  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_29 -> m1_43  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_29 -> m1_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_29 -> m1_45  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<Humanizer.Inflections.Vocabulary.Rule>", style=dashed];
m1_29 -> m1_47  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<Humanizer.Inflections.Vocabulary.Rule>", style=dashed];
m1_29 -> m1_19  [color=darkorchid, key=3, label="Parameter variable string word", style=bold];
m1_29 -> m1_23  [color=darkorchid, key=3, label="Parameter variable string word", style=bold];
m1_29 -> m1_30  [color=darkorchid, key=3, label="Parameter variable string word", style=bold];
m1_29 -> m1_34  [color=darkorchid, key=3, label="Parameter variable string word", style=bold];
m1_29 -> m1_41  [color=darkorchid, key=3, label="method methodReturn string ApplyRules", style=bold];
m1_29 -> m1_29  [color=darkorchid, key=3, label="method methodReturn string ApplyRules", style=bold];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_42  [key=0, style=solid];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_44  [key=0, style=solid];
m1_42 -> m1_51  [key=2, style=dotted];
m1_43 -> m1_50  [key=0, style=solid];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_49  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_44 -> m1_29  [color=darkorchid, key=3, label="Local variable string result", style=bold];
m1_44 -> m1_52  [color=darkorchid, key=3, label="Local variable string result", style=bold];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_47  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_45 -> m1_48  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_49  [key=0, style=solid];
m1_47 -> m1_52  [key=2, style=dotted];
m1_41 -> m1_50  [key=0, style=solid];
m1_49 -> m1_50  [key=0, style=solid];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_49  [key=0, style=solid];
m1_48 -> m1_46  [key=0, style=solid];
m1_48 -> m1_48  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_50 -> m1_29  [color=blue, key=0, style=bold];
m1_51 -> m1_53  [key=0, style=solid];
m1_51 -> m1_29  [color=darkorchid, key=3, label="Parameter variable string word", style=bold];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_12  [key=2, style=dotted];
m1_53 -> m1_55  [key=2, style=dotted];
m1_54 -> m1_51  [color=blue, key=0, style=bold];
m1_9 -> m1_10  [key=0, style=solid];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_12  [key=2, style=dotted];
m1_10 -> m1_13  [key=2, style=dotted];
m1_11 -> m1_9  [color=blue, key=0, style=bold];
m1_7 -> m1_14  [key=0, style=solid];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_16  [key=2, style=dotted];
m1_14 -> m1_13  [key=2, style=dotted];
m1_15 -> m1_7  [color=blue, key=0, style=bold];
m1_8 -> m1_17  [key=0, style=solid];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_16  [key=2, style=dotted];
m1_17 -> m1_13  [key=2, style=dotted];
m1_18 -> m1_8  [color=blue, key=0, style=bold];
m1_66 -> m1_3  [color=green, key=1, label="Humanizer.Inflections.Vocabulary", style=dashed];
m1_66 -> m1_4  [color=green, key=1, label="Humanizer.Inflections.Vocabulary", style=dashed];
m1_66 -> m1_10  [color=darkseagreen4, key=1, label="Humanizer.Inflections.Vocabulary", style=dashed];
m1_66 -> m1_14  [color=darkseagreen4, key=1, label="Humanizer.Inflections.Vocabulary", style=dashed];
m1_66 -> m1_17  [color=darkseagreen4, key=1, label="Humanizer.Inflections.Vocabulary", style=dashed];
m1_66 -> m1_20  [color=darkseagreen4, key=1, label="Humanizer.Inflections.Vocabulary", style=dashed];
m1_66 -> m1_23  [color=darkseagreen4, key=1, label="Humanizer.Inflections.Vocabulary", style=dashed];
m1_66 -> m1_24  [color=darkseagreen4, key=1, label="Humanizer.Inflections.Vocabulary", style=dashed];
m1_66 -> m1_31  [color=darkseagreen4, key=1, label="Humanizer.Inflections.Vocabulary", style=dashed];
m1_66 -> m1_34  [color=darkseagreen4, key=1, label="Humanizer.Inflections.Vocabulary", style=dashed];
m1_66 -> m1_35  [color=darkseagreen4, key=1, label="Humanizer.Inflections.Vocabulary", style=dashed];
m1_66 -> m1_42  [color=darkseagreen4, key=1, label="Humanizer.Inflections.Vocabulary", style=dashed];
m1_66 -> m1_53  [color=darkseagreen4, key=1, label="Humanizer.Inflections.Vocabulary", style=dashed];
m1_67 -> m1_56  [color=darkseagreen4, key=1, label="Humanizer.Inflections.Vocabulary.Rule", style=dashed];
m1_67 -> m1_57  [color=darkseagreen4, key=1, label="Humanizer.Inflections.Vocabulary.Rule", style=dashed];
m1_67 -> m1_60  [color=darkseagreen4, key=1, label="Humanizer.Inflections.Vocabulary.Rule", style=dashed];
m1_67 -> m1_62  [color=darkseagreen4, key=1, label="Humanizer.Inflections.Vocabulary.Rule", style=dashed];
}
