digraph  {
m1_148 [cluster="Humanizer.InflectorExtensions.Camelize(string)", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.Camelize(string)", span="286-286"];
m1_149 [cluster="Humanizer.InflectorExtensions.Camelize(string)", file="DateHumanizeTests.cs", label="string word = Pascalize(input)", span="288-288"];
m1_150 [cluster="Humanizer.InflectorExtensions.Camelize(string)", file="DateHumanizeTests.cs", label="return word.Substring(0, 1).ToLower() + word.Substring(1);", span="289-289"];
m1_151 [cluster="Humanizer.InflectorExtensions.Camelize(string)", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.Camelize(string)", span="286-286"];
m1_79 [cluster="System.Text.RegularExpressions.Regex.Replace(string, string)", file="DateHumanizeTests.cs", label="Entry System.Text.RegularExpressions.Regex.Replace(string, string)", span="0-0"];
m1_153 [cluster="Humanizer.InflectorExtensions.Underscore(string)", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.Underscore(string)", span="297-297"];
m1_154 [cluster="Humanizer.InflectorExtensions.Underscore(string)", file="DateHumanizeTests.cs", label="return Regex.Replace(\r\n                Regex.Replace(\r\n                    Regex.Replace(input, @''([A-Z]+)([A-Z][a-z])'', ''$1_$2''), @''([a-z\d])([A-Z])'', ''$1_$2''), @''[-\s]'', ''_'').ToLower();", span="299-301"];
m1_155 [cluster="Humanizer.InflectorExtensions.Underscore(string)", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.Underscore(string)", span="297-297"];
m1_161 [cluster="Humanizer.InflectorExtensions.Hyphenate(string)", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.Hyphenate(string)", span="319-319"];
m1_162 [cluster="Humanizer.InflectorExtensions.Hyphenate(string)", file="DateHumanizeTests.cs", label="return Dasherize(underscoredWord);", span="321-321"];
m1_163 [cluster="Humanizer.InflectorExtensions.Hyphenate(string)", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.Hyphenate(string)", span="319-319"];
m1_160 [cluster="string.Replace(char, char)", file="DateHumanizeTests.cs", label="Entry string.Replace(char, char)", span="0-0"];
m1_156 [cluster="System.Text.RegularExpressions.Regex.Replace(string, string, string)", file="DateHumanizeTests.cs", label="Entry System.Text.RegularExpressions.Regex.Replace(string, string, string)", span="0-0"];
m1_65 [cluster="Humanizer.InflectorExtensions.AddSingular(string, string)", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.AddSingular(string, string)", span="160-160"];
m1_90 [cluster="Humanizer.InflectorExtensions.AddSingular(string, string)", file="DateHumanizeTests.cs", label="Singulars.Add(new Rule(rule, replacement))", span="162-162"];
m1_91 [cluster="Humanizer.InflectorExtensions.AddSingular(string, string)", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.AddSingular(string, string)", span="160-160"];
m1_135 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="DateHumanizeTests.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m1_140 [cluster="Humanizer.InflectorExtensions.Pascalize(string)", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.Pascalize(string)", span="276-276"];
m1_141 [cluster="Humanizer.InflectorExtensions.Pascalize(string)", file="DateHumanizeTests.cs", label="return Regex.Replace(input, ''(?:^|_)(.)'', match => match.Groups[1].Value.ToUpper());", span="278-278"];
m1_142 [cluster="Humanizer.InflectorExtensions.Pascalize(string)", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.Pascalize(string)", span="276-276"];
m1_147 [cluster="string.ToUpper()", file="DateHumanizeTests.cs", label="Entry string.ToUpper()", span="0-0"];
m1_152 [cluster="string.Substring(int, int)", file="DateHumanizeTests.cs", label="Entry string.Substring(int, int)", span="0-0"];
m1_95 [cluster="string.Pluralize(bool)", file="DateHumanizeTests.cs", label="Entry string.Pluralize(bool)", span="187-187"];
m1_106 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.IList<Humanizer.InflectorExtensions.Rule>, string)", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.IList<Humanizer.InflectorExtensions.Rule>, string)", span="237-237"];
m1_121 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.IList<Humanizer.InflectorExtensions.Rule>, string)", file="DateHumanizeTests.cs", label="word == null", span="239-239"];
m1_123 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.IList<Humanizer.InflectorExtensions.Rule>, string)", file="DateHumanizeTests.cs", label="IsUncountable(word)", span="242-242"];
m1_124 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.IList<Humanizer.InflectorExtensions.Rule>, string)", file="DateHumanizeTests.cs", label="return word;", span="243-243"];
m1_125 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.IList<Humanizer.InflectorExtensions.Rule>, string)", file="DateHumanizeTests.cs", label="var result = word", span="245-245"];
m1_126 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.IList<Humanizer.InflectorExtensions.Rule>, string)", file="DateHumanizeTests.cs", label="int i = rules.Count - 1", span="246-246"];
m1_128 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.IList<Humanizer.InflectorExtensions.Rule>, string)", file="DateHumanizeTests.cs", label="(result = rules[i].Apply(word)) != null", span="248-248"];
m1_122 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.IList<Humanizer.InflectorExtensions.Rule>, string)", file="DateHumanizeTests.cs", label="return null;", span="240-240"];
m1_130 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.IList<Humanizer.InflectorExtensions.Rule>, string)", file="DateHumanizeTests.cs", label="return result;", span="253-253"];
m1_127 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.IList<Humanizer.InflectorExtensions.Rule>, string)", file="DateHumanizeTests.cs", label="i >= 0", span="246-246"];
m1_129 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.IList<Humanizer.InflectorExtensions.Rule>, string)", file="DateHumanizeTests.cs", label="i--", span="246-246"];
m1_131 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.IList<Humanizer.InflectorExtensions.Rule>, string)", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.IList<Humanizer.InflectorExtensions.Rule>, string)", span="237-237"];
m1_66 [cluster="Humanizer.InflectorExtensions.AddIrregular(string, string)", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.AddIrregular(string, string)", span="144-144"];
m1_80 [cluster="Humanizer.InflectorExtensions.AddIrregular(string, string)", file="DateHumanizeTests.cs", label="AddPlural(''('' + singular[0] + '')'' + singular.Substring(1) + ''$'', ''$1'' + plural.Substring(1))", span="146-146"];
m1_81 [cluster="Humanizer.InflectorExtensions.AddIrregular(string, string)", file="DateHumanizeTests.cs", label="AddSingular(''('' + plural[0] + '')'' + plural.Substring(1) + ''$'', ''$1'' + singular.Substring(1))", span="147-147"];
m1_82 [cluster="Humanizer.InflectorExtensions.AddIrregular(string, string)", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.AddIrregular(string, string)", span="144-144"];
m1_96 [cluster="Humanizer.InflectorExtensions.Pluralize(string, bool)", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.Pluralize(string, bool)", span="187-187"];
m1_97 [cluster="Humanizer.InflectorExtensions.Pluralize(string, bool)", file="DateHumanizeTests.cs", label="var result = ApplyRules(Plurals, word)", span="189-189"];
m1_98 [cluster="Humanizer.InflectorExtensions.Pluralize(string, bool)", file="DateHumanizeTests.cs", label=inputIsKnownToBeSingular, span="191-191"];
m1_100 [cluster="Humanizer.InflectorExtensions.Pluralize(string, bool)", file="DateHumanizeTests.cs", label="var asSingular = ApplyRules(Singulars, word)", span="194-194"];
m1_102 [cluster="Humanizer.InflectorExtensions.Pluralize(string, bool)", file="DateHumanizeTests.cs", label="asSingular != null && asSingular != word && asSingular + ''s'' != word && asSingularAsPlural == word && result != word", span="196-196"];
m1_103 [cluster="Humanizer.InflectorExtensions.Pluralize(string, bool)", file="DateHumanizeTests.cs", label="return word;", span="197-197"];
m1_99 [cluster="Humanizer.InflectorExtensions.Pluralize(string, bool)", file="DateHumanizeTests.cs", label="return result;", span="192-192"];
m1_104 [cluster="Humanizer.InflectorExtensions.Pluralize(string, bool)", file="DateHumanizeTests.cs", label="return result;", span="199-199"];
m1_101 [cluster="Humanizer.InflectorExtensions.Pluralize(string, bool)", file="DateHumanizeTests.cs", label="var asSingularAsPlural = ApplyRules(Plurals, asSingular)", span="195-195"];
m1_105 [cluster="Humanizer.InflectorExtensions.Pluralize(string, bool)", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.Pluralize(string, bool)", span="187-187"];
m1_0 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.InflectorExtensions()", span="53-53"];
m1_1 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddPlural(''$'', ''s'')", span="55-55"];
m1_2 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddPlural(''s$'', ''s'')", span="56-56"];
m1_3 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddPlural(''(ax|test)is$'', ''$1es'')", span="57-57"];
m1_4 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddPlural(''(octop|vir|alumn|fung)us$'', ''$1i'')", span="58-58"];
m1_5 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddPlural(''(alias|status)$'', ''$1es'')", span="59-59"];
m1_6 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddPlural(''(bu)s$'', ''$1ses'')", span="60-60"];
m1_7 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddPlural(''(buffal|tomat|volcan)o$'', ''$1oes'')", span="61-61"];
m1_8 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddPlural(''([ti])um$'', ''$1a'')", span="62-62"];
m1_9 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddPlural(''sis$'', ''ses'')", span="63-63"];
m1_10 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddPlural(''(?:([^f])fe|([lr])f)$'', ''$1$2ves'')", span="64-64"];
m1_11 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddPlural(''(hive)$'', ''$1s'')", span="65-65"];
m1_12 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddPlural(''([^aeiouy]|qu)y$'', ''$1ies'')", span="66-66"];
m1_13 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddPlural(''(x|ch|ss|sh)$'', ''$1es'')", span="67-67"];
m1_14 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddPlural(''(matr|vert|ind)ix|ex$'', ''$1ices'')", span="68-68"];
m1_15 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddPlural(''([m|l])ouse$'', ''$1ice'')", span="69-69"];
m1_16 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddPlural(''^(ox)$'', ''$1en'')", span="70-70"];
m1_17 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddPlural(''(quiz)$'', ''$1zes'')", span="71-71"];
m1_18 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddPlural(''(campus)$'', ''$1es'')", span="72-72"];
m1_19 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''s$'', '''')", span="74-74"];
m1_20 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''(n)ews$'', ''$1ews'')", span="75-75"];
m1_21 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''([ti])a$'', ''$1um'')", span="76-76"];
m1_22 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$'', ''$1$2sis'')", span="77-77"];
m1_23 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''(^analy)ses$'', ''$1sis'')", span="78-78"];
m1_24 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''([^f])ves$'', ''$1fe'')", span="79-79"];
m1_25 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''(hive)s$'', ''$1'')", span="80-80"];
m1_26 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''(tive)s$'', ''$1'')", span="81-81"];
m1_27 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''([lr])ves$'', ''$1f'')", span="82-82"];
m1_28 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''([^aeiouy]|qu)ies$'', ''$1y'')", span="83-83"];
m1_29 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''(s)eries$'', ''$1eries'')", span="84-84"];
m1_30 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''(m)ovies$'', ''$1ovie'')", span="85-85"];
m1_31 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''(x|ch|ss|sh)es$'', ''$1'')", span="86-86"];
m1_32 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''([m|l])ice$'', ''$1ouse'')", span="87-87"];
m1_33 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''(bus)es$'', ''$1'')", span="88-88"];
m1_34 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''(o)es$'', ''$1'')", span="89-89"];
m1_35 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''(shoe)s$'', ''$1'')", span="90-90"];
m1_36 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''(cris|ax|test)es$'', ''$1is'')", span="91-91"];
m1_37 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''(octop|vir|alumn|fung)i$'', ''$1us'')", span="92-92"];
m1_38 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''(alias|status)es$'', ''$1'')", span="93-93"];
m1_39 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''^(ox)en'', ''$1'')", span="94-94"];
m1_40 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''(vert|ind)ices$'', ''$1ex'')", span="95-95"];
m1_41 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''(matr)ices$'', ''$1ix'')", span="96-96"];
m1_42 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''(quiz)zes$'', ''$1'')", span="97-97"];
m1_43 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''(campus)es$'', ''$1'')", span="98-98"];
m1_44 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddIrregular(''person'', ''people'')", span="100-100"];
m1_45 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddIrregular(''man'', ''men'')", span="101-101"];
m1_46 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddIrregular(''child'', ''children'')", span="102-102"];
m1_47 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddIrregular(''sex'', ''sexes'')", span="103-103"];
m1_48 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddIrregular(''move'', ''moves'')", span="104-104"];
m1_49 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddIrregular(''goose'', ''geese'')", span="105-105"];
m1_50 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddIrregular(''alumna'', ''alumnae'')", span="106-106"];
m1_51 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddIrregular(''criterion'', ''criteria'')", span="107-107"];
m1_52 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddIrregular(''wave'',''waves'')", span="108-108"];
m1_53 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddUncountable(''equipment'')", span="110-110"];
m1_54 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddUncountable(''information'')", span="111-111"];
m1_55 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddUncountable(''rice'')", span="112-112"];
m1_56 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddUncountable(''money'')", span="113-113"];
m1_57 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddUncountable(''species'')", span="114-114"];
m1_58 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddUncountable(''series'')", span="115-115"];
m1_59 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddUncountable(''fish'')", span="116-116"];
m1_60 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddUncountable(''sheep'')", span="117-117"];
m1_61 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddUncountable(''deer'')", span="118-118"];
m1_62 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddUncountable(''aircraft'')", span="119-119"];
m1_63 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.InflectorExtensions()", span="53-53"];
m1_67 [cluster="Humanizer.InflectorExtensions.AddUncountable(string)", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.AddUncountable(string)", span="150-150"];
m1_84 [cluster="Humanizer.InflectorExtensions.AddUncountable(string)", file="DateHumanizeTests.cs", label="Uncountables.Add(word.ToLower())", span="152-152"];
m1_85 [cluster="Humanizer.InflectorExtensions.AddUncountable(string)", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.AddUncountable(string)", span="150-150"];
m1_110 [cluster="string.Singularize(bool)", file="DateHumanizeTests.cs", label="Entry string.Singularize(bool)", span="220-220"];
m1_139 [cluster="string.Humanize(Humanizer.LetterCasing)", file="DateHumanizeTests.cs", label="Entry string.Humanize(Humanizer.LetterCasing)", span="67-67"];
m1_157 [cluster="Humanizer.InflectorExtensions.Dasherize(string)", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.Dasherize(string)", span="309-309"];
m1_158 [cluster="Humanizer.InflectorExtensions.Dasherize(string)", file="DateHumanizeTests.cs", label="return underscoredWord.Replace('_', '-');", span="311-311"];
m1_159 [cluster="Humanizer.InflectorExtensions.Dasherize(string)", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.Dasherize(string)", span="309-309"];
m1_143 [cluster="System.Text.RegularExpressions.Regex.Replace(string, string, System.Text.RegularExpressions.MatchEvaluator)", file="DateHumanizeTests.cs", label="Entry System.Text.RegularExpressions.Regex.Replace(string, string, System.Text.RegularExpressions.MatchEvaluator)", span="0-0"];
m1_68 [cluster="Humanizer.InflectorExtensions.Rule.Rule(string, string)", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.Rule.Rule(string, string)", span="127-127"];
m1_69 [cluster="Humanizer.InflectorExtensions.Rule.Rule(string, string)", file="DateHumanizeTests.cs", label="_regex = new Regex(pattern, RegexOptions.IgnoreCase | RegexOptionsUtil.Compiled)", span="129-129"];
m1_70 [cluster="Humanizer.InflectorExtensions.Rule.Rule(string, string)", file="DateHumanizeTests.cs", label="_replacement = replacement", span="130-130"];
m1_71 [cluster="Humanizer.InflectorExtensions.Rule.Rule(string, string)", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.Rule.Rule(string, string)", span="127-127"];
m1_144 [cluster="lambda expression", file="DateHumanizeTests.cs", label="Entry lambda expression", span="278-278"];
m1_145 [cluster="lambda expression", file="DateHumanizeTests.cs", label="match.Groups[1].Value.ToUpper()", span="278-278"];
m1_146 [cluster="lambda expression", file="DateHumanizeTests.cs", label="Exit lambda expression", span="278-278"];
m1_73 [cluster="Humanizer.InflectorExtensions.Rule.Apply(string)", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.Rule.Apply(string)", span="133-133"];
m1_74 [cluster="Humanizer.InflectorExtensions.Rule.Apply(string)", file="DateHumanizeTests.cs", label="!_regex.IsMatch(word)", span="135-135"];
m1_76 [cluster="Humanizer.InflectorExtensions.Rule.Apply(string)", file="DateHumanizeTests.cs", label="return _regex.Replace(word, _replacement);", span="140-140"];
m1_75 [cluster="Humanizer.InflectorExtensions.Rule.Apply(string)", file="DateHumanizeTests.cs", label="return null;", span="137-137"];
m1_77 [cluster="Humanizer.InflectorExtensions.Rule.Apply(string)", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.Rule.Apply(string)", span="133-133"];
m1_92 [cluster="Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", span="176-176"];
m1_93 [cluster="Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", file="DateHumanizeTests.cs", label="return plurality == Plurality.Plural ? word : word.Pluralize(inputIsKnownToBeSingular: false);", span="178-178"];
m1_94 [cluster="Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", span="176-176"];
m1_72 [cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", file="DateHumanizeTests.cs", label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", span="0-0"];
m1_78 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string)", file="DateHumanizeTests.cs", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string)", span="0-0"];
m1_136 [cluster="Humanizer.InflectorExtensions.Titleize(string)", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.Titleize(string)", span="266-266"];
m1_137 [cluster="Humanizer.InflectorExtensions.Titleize(string)", file="DateHumanizeTests.cs", label="return input.Humanize(LetterCasing.Title);", span="268-268"];
m1_138 [cluster="Humanizer.InflectorExtensions.Titleize(string)", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.Titleize(string)", span="266-266"];
m1_87 [cluster="System.Collections.Generic.List<T>.Add(T)", file="DateHumanizeTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m1_111 [cluster="Humanizer.InflectorExtensions.Singularize(string, bool)", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.Singularize(string, bool)", span="220-220"];
m1_112 [cluster="Humanizer.InflectorExtensions.Singularize(string, bool)", file="DateHumanizeTests.cs", label="var result = ApplyRules(Singulars, word)", span="223-223"];
m1_113 [cluster="Humanizer.InflectorExtensions.Singularize(string, bool)", file="DateHumanizeTests.cs", label=inputIsKnownToBePlural, span="225-225"];
m1_115 [cluster="Humanizer.InflectorExtensions.Singularize(string, bool)", file="DateHumanizeTests.cs", label="var asPlural = ApplyRules(Plurals, word)", span="229-229"];
m1_117 [cluster="Humanizer.InflectorExtensions.Singularize(string, bool)", file="DateHumanizeTests.cs", label="asPlural != word && word + ''s'' != asPlural && asPluralAsSingular == word && result != word", span="231-231"];
m1_118 [cluster="Humanizer.InflectorExtensions.Singularize(string, bool)", file="DateHumanizeTests.cs", label="return word;", span="232-232"];
m1_119 [cluster="Humanizer.InflectorExtensions.Singularize(string, bool)", file="DateHumanizeTests.cs", label="return result ?? word;", span="234-234"];
m1_114 [cluster="Humanizer.InflectorExtensions.Singularize(string, bool)", file="DateHumanizeTests.cs", label="return result;", span="226-226"];
m1_116 [cluster="Humanizer.InflectorExtensions.Singularize(string, bool)", file="DateHumanizeTests.cs", label="var asPluralAsSingular = ApplyRules(Singulars, asPlural)", span="230-230"];
m1_120 [cluster="Humanizer.InflectorExtensions.Singularize(string, bool)", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.Singularize(string, bool)", span="220-220"];
m1_132 [cluster="Humanizer.InflectorExtensions.IsUncountable(string)", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.IsUncountable(string)", span="256-256"];
m1_133 [cluster="Humanizer.InflectorExtensions.IsUncountable(string)", file="DateHumanizeTests.cs", label="return Uncountables.Contains(word.ToLower());", span="258-258"];
m1_134 [cluster="Humanizer.InflectorExtensions.IsUncountable(string)", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.IsUncountable(string)", span="256-256"];
m1_64 [cluster="Humanizer.InflectorExtensions.AddPlural(string, string)", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.AddPlural(string, string)", span="155-155"];
m1_88 [cluster="Humanizer.InflectorExtensions.AddPlural(string, string)", file="DateHumanizeTests.cs", label="Plurals.Add(new Rule(rule, replacement))", span="157-157"];
m1_89 [cluster="Humanizer.InflectorExtensions.AddPlural(string, string)", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.AddPlural(string, string)", span="155-155"];
m1_86 [cluster="string.ToLower()", file="DateHumanizeTests.cs", label="Entry string.ToLower()", span="0-0"];
m1_107 [cluster="Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", span="209-209"];
m1_108 [cluster="Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", file="DateHumanizeTests.cs", label="return plurality == Plurality.Singular ? word : word.Singularize(inputIsKnownToBePlural: false);", span="211-211"];
m1_109 [cluster="Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", span="209-209"];
m1_83 [cluster="string.Substring(int)", file="DateHumanizeTests.cs", label="Entry string.Substring(int)", span="0-0"];
m1_164 [file="DateHumanizeTests.cs", label="Humanizer.InflectorExtensions.Rule", span=""];
m2_49 [cluster="System.StringComparer.Equals(string, string)", file="In.cs", label="Entry System.StringComparer.Equals(string, string)", span="0-0"];
m2_54 [cluster="CommandLine.Core.Specification.IsOption()", file="In.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="10-10"];
m2_125 [cluster="CommandLine.Infrastructure.Maybe<T>.MatchNothing()", file="In.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.MatchNothing()", span="26-26"];
m2_118 [cluster="CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", file="In.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", span="144-144"];
m2_71 [cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="In.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12"];
m2_10 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", file="In.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", span="44-44"];
m2_44 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="In.cs", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="15-15"];
m2_0 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="In.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12"];
m2_1 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="In.cs", label="return Build(\r\n                factory,\r\n                (args, optionSpecs) =>\r\n                    {\r\n                        var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer));\r\n                        var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer));\r\n                        return explodedTokens;\r\n                    },\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture);", span="18-30"];
m2_2 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="In.cs", label="Exit CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12"];
m2_79 [cluster="object.GetType()", file="In.cs", label="Entry object.GetType()", span="0-0"];
m2_110 [cluster="CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", file="In.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", span="149-149"];
m2_56 [cluster="CommandLine.Core.Specification.IsValue()", file="In.cs", label="Entry CommandLine.Core.Specification.IsValue()", span="15-15"];
m2_45 [cluster="Unk.ThrowingValidate", file="In.cs", label="Entry Unk.ThrowingValidate", span=""];
m2_51 [cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="In.cs", label="Entry CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="100-100"];
m2_83 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="In.cs", label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="82-82"];
m2_96 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="In.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="12-12"];
m2_131 [cluster="System.Type.CreateEmptyArray()", file="In.cs", label="Entry System.Type.CreateEmptyArray()", span="79-79"];
m2_84 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="In.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63"];
m2_47 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="In.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m2_59 [cluster="Unk.FromOptionSpecification", file="In.cs", label="Entry Unk.FromOptionSpecification", span=""];
m2_68 [cluster="System.Type.GetDefaultValue()", file="In.cs", label="Entry System.Type.GetDefaultValue()", span="84-84"];
m2_63 [cluster="T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="In.cs", label="Entry T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="36-36"];
m2_114 [cluster="CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", file="In.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", span="134-134"];
m2_130 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="In.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m2_85 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="In.cs", label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", span="21-21"];
m2_64 [cluster="Unk.ToArray", file="In.cs", label="Entry Unk.ToArray", span=""];
m2_18 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="In.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m2_61 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsTypeMutable(System.Type)", file="In.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.IsTypeMutable(System.Type)", span="39-39"];
m2_57 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="In.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="265-265"];
m2_60 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="In.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m2_55 [cluster="Unk.MapValues", file="In.cs", label="Entry Unk.MapValues", span=""];
m2_14 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="In.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m2_53 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="In.cs", label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12"];
m2_129 [cluster="System.Type.GetGenericArguments()", file="In.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m2_48 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="In.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m2_46 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="In.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m2_86 [cluster="lambda expression", file="In.cs", label="Entry lambda expression", span="55-55"];
m2_5 [cluster="lambda expression", file="In.cs", label="var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer))", span="22-22"];
m2_12 [cluster="lambda expression", file="In.cs", label="NameLookup.Contains(name, optionSpecs, nameComparer)", span="22-22"];
m2_6 [cluster="lambda expression", file="In.cs", label="var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer))", span="23-25"];
m2_16 [cluster="lambda expression", file="In.cs", label="NameLookup.HavingSeparator(name, optionSpecs, nameComparer)", span="25-25"];
m2_4 [cluster="lambda expression", file="In.cs", label="Entry lambda expression", span="20-27"];
m2_11 [cluster="lambda expression", file="In.cs", label="Entry lambda expression", span="22-22"];
m2_7 [cluster="lambda expression", file="In.cs", label="return explodedTokens;", span="26-26"];
m2_15 [cluster="lambda expression", file="In.cs", label="Entry lambda expression", span="25-25"];
m2_8 [cluster="lambda expression", file="In.cs", label="Exit lambda expression", span="20-27"];
m2_13 [cluster="lambda expression", file="In.cs", label="Exit lambda expression", span="22-22"];
m2_17 [cluster="lambda expression", file="In.cs", label="Exit lambda expression", span="25-25"];
m2_90 [cluster="lambda expression", file="In.cs", label="TypeLookup.FindTypeDescriptorAndSibling(name, optionSpecs, nameComparer)", span="65-65"];
m2_94 [cluster="lambda expression", file="In.cs", label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="70-70"];
m2_98 [cluster="lambda expression", file="In.cs", label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="76-76"];
m2_101 [cluster="lambda expression", file="In.cs", label="token.Text.MatchName(o.ShortName, o.LongName, nameComparer)", span="80-80"];
m2_75 [cluster="lambda expression", file="In.cs", label="Entry lambda expression", span="40-40"];
m2_80 [cluster="lambda expression", file="In.cs", label="Entry lambda expression", span="42-43"];
m2_89 [cluster="lambda expression", file="In.cs", label="Entry lambda expression", span="65-65"];
m2_93 [cluster="lambda expression", file="In.cs", label="Entry lambda expression", span="70-70"];
m2_97 [cluster="lambda expression", file="In.cs", label="Entry lambda expression", span="76-76"];
m2_100 [cluster="lambda expression", file="In.cs", label="Entry lambda expression", span="80-80"];
m2_104 [cluster="lambda expression", file="In.cs", label="Entry lambda expression", span="87-87"];
m2_132 [cluster="lambda expression", file="In.cs", label="Entry lambda expression", span="107-107"];
m2_135 [cluster="lambda expression", file="In.cs", label="Entry lambda expression", span="108-108"];
m2_107 [cluster="lambda expression", file="In.cs", label="Entry lambda expression", span="90-90"];
m2_111 [cluster="lambda expression", file="In.cs", label="Entry lambda expression", span="91-91"];
m2_115 [cluster="lambda expression", file="In.cs", label="Entry lambda expression", span="93-93"];
m2_119 [cluster="lambda expression", file="In.cs", label="Entry lambda expression", span="94-94"];
m2_122 [cluster="lambda expression", file="In.cs", label="Entry lambda expression", span="96-98"];
m2_126 [cluster="lambda expression", file="In.cs", label="Entry lambda expression", span="99-99"];
m2_76 [cluster="lambda expression", file="In.cs", label="f().GetType()", span="40-40"];
m2_77 [cluster="lambda expression", file="In.cs", label="Exit lambda expression", span="40-40"];
m2_81 [cluster="lambda expression", file="In.cs", label="SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>())", span="42-43"];
m2_82 [cluster="lambda expression", file="In.cs", label="Exit lambda expression", span="42-43"];
m2_87 [cluster="lambda expression", file="In.cs", label="f()", span="55-55"];
m2_88 [cluster="lambda expression", file="In.cs", label="Exit lambda expression", span="55-55"];
m2_91 [cluster="lambda expression", file="In.cs", label="Exit lambda expression", span="65-65"];
m2_95 [cluster="lambda expression", file="In.cs", label="Exit lambda expression", span="70-70"];
m2_99 [cluster="lambda expression", file="In.cs", label="Exit lambda expression", span="76-76"];
m2_102 [cluster="lambda expression", file="In.cs", label="Exit lambda expression", span="80-80"];
m2_105 [cluster="lambda expression", file="In.cs", label="f()", span="87-87"];
m2_106 [cluster="lambda expression", file="In.cs", label="Exit lambda expression", span="87-87"];
m2_108 [cluster="lambda expression", file="In.cs", label="sp.Value.IsJust()", span="90-90"];
m2_109 [cluster="lambda expression", file="In.cs", label="Exit lambda expression", span="90-90"];
m2_112 [cluster="lambda expression", file="In.cs", label="sp.Value.FromJust()", span="91-91"];
m2_113 [cluster="lambda expression", file="In.cs", label="Exit lambda expression", span="91-91"];
m2_116 [cluster="lambda expression", file="In.cs", label="sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust()", span="93-93"];
m2_117 [cluster="lambda expression", file="In.cs", label="Exit lambda expression", span="93-93"];
m2_120 [cluster="lambda expression", file="In.cs", label="sp.Specification.DefaultValue.FromJust()", span="94-94"];
m2_121 [cluster="lambda expression", file="In.cs", label="Exit lambda expression", span="94-94"];
m2_123 [cluster="lambda expression", file="In.cs", label="sp.Value.IsNothing()\r\n                            && sp.Specification.TargetType == TargetType.Sequence\r\n                            && sp.Specification.DefaultValue.MatchNothing()", span="96-98"];
m2_124 [cluster="lambda expression", file="In.cs", label="Exit lambda expression", span="96-98"];
m2_127 [cluster="lambda expression", file="In.cs", label="sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray()", span="99-99"];
m2_128 [cluster="lambda expression", file="In.cs", label="Exit lambda expression", span="99-99"];
m2_133 [cluster="lambda expression", file="In.cs", label=v, span="107-107"];
m2_134 [cluster="lambda expression", file="In.cs", label="Exit lambda expression", span="107-107"];
m2_136 [cluster="lambda expression", file="In.cs", label=d, span="108-108"];
m2_137 [cluster="lambda expression", file="In.cs", label="Exit lambda expression", span="108-108"];
m2_72 [cluster="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="In.cs", label="Entry System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="40-40"];
m2_62 [cluster="System.Activator.CreateInstance<T>()", file="In.cs", label="Entry System.Activator.CreateInstance<T>()", span="0-0"];
m2_58 [cluster="Unk.Single", file="In.cs", label="Entry Unk.Single", span=""];
m2_9 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="In.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11"];
m2_3 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="In.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="33-33"];
m2_19 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="In.cs", label="var typeInfo = factory.Return(f => f().GetType(), typeof(T))", span="40-40"];
m2_23 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="In.cs", label="arguments.Any() && nameComparer.Equals(''--help'', arguments.First())", span="51-51"];
m2_24 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="In.cs", label="return ParserResult.Create(\r\n                    ParserResultType.Options,\r\n                    factory.Return(f => f(), default(T)),\r\n                    new[] { new HelpRequestedError() });", span="53-56"];
m2_25 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="In.cs", label="var tokenizerResult = tokenizer(arguments, optionSpecs)", span="59-59"];
m2_27 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="In.cs", label="var partitions = TokenPartitioner.Partition(\r\n                tokens,\r\n                name => TypeLookup.FindTypeDescriptorAndSibling(name, optionSpecs, nameComparer))", span="63-65"];
m2_28 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="In.cs", label="var optionSpecProps = OptionMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsOption() select pt),\r\n                partitions.Options,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture),\r\n                nameComparer)", span="67-71"];
m2_29 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="In.cs", label="var valueSpecProps = ValueMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsValue() select pt),\r\n                    partitions.Values,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture))", span="73-76"];
m2_30 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="In.cs", label="var missingValueErrors = from token in partitions.Errors\r\n                                     select new MissingValueOptionError(\r\n                                         optionSpecs.Single(o => token.Text.MatchName(o.ShortName, o.LongName, nameComparer)).FromOptionSpecification())", span="78-80"];
m2_34 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="In.cs", label="instance = factory.Return(f => f(), Activator.CreateInstance<T>())", span="87-87"];
m2_20 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="In.cs", label="var specProps = typeInfo.GetSpecifications(pi => SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>()))", span="42-43"];
m2_33 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="In.cs", label="ReflectionHelper.IsTypeMutable(typeInfo)", span="85-85"];
m2_21 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="In.cs", label="var specs = from pt in specProps select pt.Specification", span="45-45"];
m2_37 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="In.cs", label="var ctor = t.GetConstructor((from p in specProps select p.Specification.ConversionType).ToArray())", span="104-104"];
m2_22 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="In.cs", label="var optionSpecs = specs\r\n                .ThrowingValidate(SpecificationGuards.Lookup)\r\n                .OfType<OptionSpecification>()", span="47-49"];
m2_26 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="In.cs", label="var tokens = tokenizerResult.Value", span="61-61"];
m2_41 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="In.cs", label="return ParserResult.Create(\r\n                ParserResultType.Options,\r\n                instance,\r\n                tokenizerResult.Errors\r\n                    .Concat(missingValueErrors)\r\n                    .Concat(optionSpecProps.Errors)\r\n                    .Concat(valueSpecProps.Errors)\r\n                    .Concat(validationErrors));", span="116-123"];
m2_40 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="In.cs", label="var validationErrors = specPropsWithValue.Validate(\r\n                SpecificationPropertyRules.Lookup(tokens))", span="113-114"];
m2_31 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="In.cs", label="var specPropsWithValue = optionSpecProps.Value.Concat(valueSpecProps.Value)", span="82-82"];
m2_32 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="In.cs", label="T instance", span="84-84"];
m2_35 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="In.cs", label="instance = instance\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsJust(),\r\n                        sp => sp.Value.FromJust())\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust(),\r\n                        sp => sp.Specification.DefaultValue.FromJust())\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsNothing()\r\n                            && sp.Specification.TargetType == TargetType.Sequence\r\n                            && sp.Specification.DefaultValue.MatchNothing(),\r\n                        sp => sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray())", span="88-99"];
m2_38 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="In.cs", label="var values = (from prms in ctor.GetParameters()\r\n                              join sp in specPropsWithValue on prms.Name.ToLower() equals sp.Property.Name.ToLower()\r\n                              select sp.Value.Return(v => v,\r\n                                    sp.Specification.DefaultValue.Return(d => d,\r\n                                        sp.Specification.ConversionType.GetDefaultValue()))).ToArray()", span="105-109"];
m2_36 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="In.cs", label="var t = typeof(T)", span="103-103"];
m2_39 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="In.cs", label="instance = (T)ctor.Invoke(values)", span="110-110"];
m2_42 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="In.cs", label="Exit CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="33-33"];
m2_65 [cluster="Unk.GetConstructor", file="In.cs", label="Entry Unk.GetConstructor", span=""];
m2_70 [cluster="System.Reflection.ConstructorInfo.Invoke(object[])", file="In.cs", label="Entry System.Reflection.ConstructorInfo.Invoke(object[])", span="0-0"];
m2_73 [cluster="Unk.Concat", file="In.cs", label="Entry Unk.Concat", span=""];
m2_50 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="In.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="353-353"];
m2_74 [cluster="Unk.Create", file="In.cs", label="Entry Unk.Create", span=""];
m2_103 [cluster="string.MatchName(string, string, System.StringComparer)", file="In.cs", label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8"];
m2_66 [cluster="System.Reflection.MethodBase.GetParameters()", file="In.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m2_52 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="In.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m2_69 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="In.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m2_92 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="In.cs", label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="23-23"];
m2_67 [cluster="string.ToLower()", file="In.cs", label="Entry string.ToLower()", span="0-0"];
m2_78 [cluster="System.Func<TResult>.Invoke()", file="In.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m2_43 [cluster="CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="In.cs", label="Entry CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="100-100"];
m2_138 [file="In.cs", label="System.StringComparer", span=""];
m2_139 [file="In.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m2_140 [file="In.cs", label="System.StringComparer", span=""];
m2_141 [file="In.cs", label=optionSpecs, span=""];
m2_142 [file="In.cs", label="System.Globalization.CultureInfo", span=""];
m2_143 [file="In.cs", label=token, span=""];
m7_27 [cluster="System.Math.Abs(int)", file="NumberToWordsExtension.cs", label="Entry System.Math.Abs(int)", span="0-0"];
m7_28 [cluster="System.Text.StringBuilder.StringBuilder()", file="NumberToWordsExtension.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m7_30 [cluster="System.Text.StringBuilder.ToString()", file="NumberToWordsExtension.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m7_0 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs", label="Entry Humanizer.NumberToWordsExtension.ToWords(int)", span="13-13"];
m7_1 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", color=green, community=0, file="NumberToWordsExtension.cs", label="0: number == 0", span="15-15"];
m7_2 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", color=green, community=0, file="NumberToWordsExtension.cs", label="1: return ''zero'';", span="16-16"];
m7_3 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", color=green, community=0, file="NumberToWordsExtension.cs", label="0: number < 0", span="18-18"];
m7_4 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", color=green, community=0, file="NumberToWordsExtension.cs", label="0: return ''minus '' + ToWords(Math.Abs(number));", span="19-19"];
m7_5 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", color=green, community=0, file="NumberToWordsExtension.cs", label="0: var words = new StringBuilder()", span="21-21"];
m7_6 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", color=green, community=0, file="NumberToWordsExtension.cs", label="0: (number / 1000000) > 0", span="23-23"];
m7_7 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", color=green, community=0, file="NumberToWordsExtension.cs", label="0: words.Append(ToWords(number / 1000000) + '' million '')", span="25-25"];
m7_9 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", color=green, community=0, file="NumberToWordsExtension.cs", label="0: (number / 1000) > 0", span="29-29"];
m7_8 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", color=green, community=0, file="NumberToWordsExtension.cs", label="0: number %= 1000000", span="26-26"];
m7_10 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", color=green, community=0, file="NumberToWordsExtension.cs", label="0: words.Append(ToWords(number / 1000) + '' thousand '')", span="31-31"];
m7_11 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", color=green, community=0, file="NumberToWordsExtension.cs", label="0: number %= 1000", span="32-32"];
m7_12 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", color=green, community=0, file="NumberToWordsExtension.cs", label="0: (number / 100) > 0", span="35-35"];
m7_13 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", color=green, community=0, file="NumberToWordsExtension.cs", label="0: words.Append(ToWords(number / 100) + '' hundred '')", span="37-37"];
m7_14 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", color=green, community=0, file="NumberToWordsExtension.cs", label="0: number %= 100", span="38-38"];
m7_15 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", color=green, community=0, file="NumberToWordsExtension.cs", label="0: number > 0", span="41-41"];
m7_20 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", color=green, community=0, file="NumberToWordsExtension.cs", label="0: number < 20", span="49-49"];
m7_21 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", color=green, community=0, file="NumberToWordsExtension.cs", label="0: words.Append(unitsMap[number])", span="50-50"];
m7_22 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", color=green, community=0, file="NumberToWordsExtension.cs", label="0: words.Append(tensMap[number / 10])", span="53-53"];
m7_23 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", color=green, community=0, file="NumberToWordsExtension.cs", label="0: (number % 10) > 0", span="54-54"];
m7_24 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", color=green, community=0, file="NumberToWordsExtension.cs", label="0: words.Append(''-'' + unitsMap[number % 10])", span="55-55"];
m7_16 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", color=green, community=0, file="NumberToWordsExtension.cs", label="0: words.Length != 0", span="43-43"];
m7_25 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", color=green, community=0, file="NumberToWordsExtension.cs", label="0: return words.ToString();", span="59-59"];
m7_19 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", color=green, community=0, file="NumberToWordsExtension.cs", label="0: var tensMap = new[] { ''zero'', ''ten'', ''twenty'', ''thirty'', ''forty'', ''fifty'', ''sixty'', ''seventy'', ''eighty'', ''ninety'' }", span="47-47"];
m7_18 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", color=green, community=0, file="NumberToWordsExtension.cs", label="0: var unitsMap = new[] { ''zero'', ''one'', ''two'', ''three'', ''four'', ''five'', ''six'', ''seven'', ''eight'', ''nine'', ''ten'', ''eleven'', ''twelve'', ''thirteen'', ''fourteen'', ''fifteen'', ''sixteen'', ''seventeen'', ''eighteen'', ''nineteen'' }", span="46-46"];
m7_17 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", color=green, community=0, file="NumberToWordsExtension.cs", label="0: words.Append(''and '')", span="44-44"];
m7_26 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs", label="Exit Humanizer.NumberToWordsExtension.ToWords(int)", span="13-13"];
m7_29 [cluster="System.Text.StringBuilder.Append(string)", file="NumberToWordsExtension.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m13_35 [cluster="System.DateTime.ToLocalTime()", file="Resources.Designer.cs", label="Entry System.DateTime.ToLocalTime()", span="0-0"];
m13_36 [cluster="System.TimeSpan.TimeSpan(long)", file="Resources.Designer.cs", label="Entry System.TimeSpan.TimeSpan(long)", span="0-0"];
m13_37 [cluster="System.Math.Abs(double)", file="Resources.Designer.cs", label="Entry System.Math.Abs(double)", span="0-0"];
m13_40 [cluster="System.Convert.ToInt32(double)", file="Resources.Designer.cs", label="Entry System.Convert.ToInt32(double)", span="0-0"];
m13_0 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="Resources.Designer.cs", label="Entry Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", span="34-34"];
m13_1 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="Resources.Designer.cs", label="now == null", span="36-36"];
m13_39 [cluster="System.Math.Floor(double)", file="Resources.Designer.cs", label="Entry System.Math.Floor(double)", span="0-0"];
m13_38 [cluster="string.Format(string, object)", file="Resources.Designer.cs", label="Entry string.Format(string, object)", span="0-0"];
m13_4 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="Resources.Designer.cs", label="0: int minute = 60 * second", span="41-41"];
m13_3 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="Resources.Designer.cs", label="int second = 1", span="40-40"];
m13_5 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="Resources.Designer.cs", label="int hour = 60 * minute", span="42-42"];
m13_15 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="Resources.Designer.cs", label="delta < 1 * minute", span="56-56"];
m13_17 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="Resources.Designer.cs", label="delta < 2 * minute", span="59-59"];
m13_19 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="Resources.Designer.cs", label="delta < 45 * minute", span="62-62"];
m13_21 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="Resources.Designer.cs", label="delta < 90 * minute", span="65-65"];
m13_2 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="Resources.Designer.cs", label="now = DateTime.UtcNow", span="38-38"];
m13_6 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="Resources.Designer.cs", label="int day = 24 * hour", span="43-43"];
m13_23 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="Resources.Designer.cs", label="delta < 24 * hour", span="68-68"];
m13_25 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="Resources.Designer.cs", label="delta < 48 * hour", span="71-71"];
m13_14 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="Resources.Designer.cs", label="double delta = Math.Abs(ts.TotalSeconds)", span="54-54"];
m13_16 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="Resources.Designer.cs", label="return ts.Seconds == 1 ? Resources.DateExtensions_OneSecondAgo_one_second_ago : string.Format(Resources.DateExtensions_SecondsAgo__seconds_ago, ts.Seconds);", span="57-57"];
m13_18 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="Resources.Designer.cs", label="return Resources.DateExtensions_OneMinuteAgo_a_minute_ago;", span="60-60"];
m13_20 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="Resources.Designer.cs", label="return string.Format(Resources.DateExtensions_MinutesAgo__minutes_ago, ts.Minutes);", span="63-63"];
m13_22 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="Resources.Designer.cs", label="return Resources.DateExtensions_OneHourAgo_an_hour_ago;", span="66-66"];
m13_8 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="Resources.Designer.cs", label="var comparisonBase = now.Value", span="46-46"];
m13_7 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="Resources.Designer.cs", label="int month = 30 * day", span="44-44"];
m13_27 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="Resources.Designer.cs", label="delta < 30 * day", span="74-74"];
m13_24 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="Resources.Designer.cs", label="return string.Format(Resources.DateExtensions_HoursAgo__hours_ago, ts.Hours);", span="69-69"];
m13_26 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="Resources.Designer.cs", label="return Resources.DateExtensions_Yesterday_yesterday;", span="72-72"];
m13_13 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="Resources.Designer.cs", label="var ts = new TimeSpan(comparisonBase.Ticks - input.Ticks)", span="53-53"];
m13_28 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="Resources.Designer.cs", label="return string.Format(Resources.DateExtensions_DaysAgo__days_ago, ts.Days);", span="75-75"];
m13_29 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="Resources.Designer.cs", label="delta < 12 * month", span="77-77"];
m13_30 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="Resources.Designer.cs", label="int months = Convert.ToInt32(Math.Floor((double)ts.Days / 30))", span="79-79"];
m13_32 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="Resources.Designer.cs", label="int years = Convert.ToInt32(Math.Floor((double)ts.Days / 365))", span="83-83"];
m13_9 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="Resources.Designer.cs", label="!utcDate", span="47-47"];
m13_11 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="Resources.Designer.cs", label="input > comparisonBase", span="50-50"];
m13_10 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="Resources.Designer.cs", label="comparisonBase = comparisonBase.ToLocalTime()", span="48-48"];
m13_31 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="Resources.Designer.cs", label="return months <= 1 ? Resources.DateExtensions_OneMonthAgo_one_month_ago : string.Format(Resources.DateExtensions_MonthsAgo__months_ago, months);", span="80-80"];
m13_33 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="Resources.Designer.cs", label="return years <= 1 ? Resources.DateExtensions_OneYearAgo_one_year_ago : string.Format(Resources.DateExtensions_YearsAgo__years_ago, years);", span="84-84"];
m13_12 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="Resources.Designer.cs", label="return Resources.DateExtensions_FutureDate_not_yet;", span="51-51"];
m13_34 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="Resources.Designer.cs", label="Exit Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", span="34-34"];
m1_148 -> m1_149  [key=0, style=solid];
m1_149 -> m1_150  [key=0, style=solid];
m1_149 -> m1_140  [key=2, style=dotted];
m1_150 -> m1_151  [key=0, style=solid];
m1_150 -> m1_152  [key=2, style=dotted];
m1_150 -> m1_86  [key=2, style=dotted];
m1_150 -> m1_83  [key=2, style=dotted];
m1_151 -> m1_148  [color=blue, key=0, style=bold];
m1_153 -> m1_154  [key=0, style=solid];
m1_154 -> m1_155  [key=0, style=solid];
m1_154 -> m1_156  [key=2, style=dotted];
m1_154 -> m1_86  [key=2, style=dotted];
m1_155 -> m1_153  [color=blue, key=0, style=bold];
m1_161 -> m1_162  [key=0, style=solid];
m1_162 -> m1_163  [key=0, style=solid];
m1_162 -> m1_157  [key=2, style=dotted];
m1_163 -> m1_161  [color=blue, key=0, style=bold];
m1_65 -> m1_90  [key=0, style=solid];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_68  [key=2, style=dotted];
m1_90 -> m1_87  [key=2, style=dotted];
m1_91 -> m1_65  [color=blue, key=0, style=bold];
m1_140 -> m1_141  [key=0, style=solid];
m1_141 -> m1_142  [key=0, style=solid];
m1_141 -> m1_143  [key=2, style=dotted];
m1_141 -> m1_144  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_142 -> m1_140  [color=blue, key=0, style=bold];
m1_106 -> m1_121  [key=0, style=solid];
m1_106 -> m1_123  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_106 -> m1_124  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_106 -> m1_125  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_106 -> m1_126  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<Humanizer.InflectorExtensions.Rule>", style=dashed];
m1_106 -> m1_128  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<Humanizer.InflectorExtensions.Rule>", style=dashed];
m1_121 -> m1_122  [key=0, style=solid];
m1_121 -> m1_123  [key=0, style=solid];
m1_123 -> m1_124  [key=0, style=solid];
m1_123 -> m1_125  [key=0, style=solid];
m1_123 -> m1_132  [key=2, style=dotted];
m1_124 -> m1_131  [key=0, style=solid];
m1_125 -> m1_126  [key=0, style=solid];
m1_125 -> m1_130  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_126 -> m1_127  [key=0, style=solid];
m1_126 -> m1_128  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_126 -> m1_129  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_128 -> m1_129  [key=0, style=solid];
m1_128 -> m1_130  [key=0, style=solid];
m1_128 -> m1_73  [key=2, style=dotted];
m1_122 -> m1_131  [key=0, style=solid];
m1_130 -> m1_131  [key=0, style=solid];
m1_127 -> m1_128  [key=0, style=solid];
m1_127 -> m1_130  [key=0, style=solid];
m1_129 -> m1_127  [key=0, style=solid];
m1_129 -> m1_129  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_131 -> m1_106  [color=blue, key=0, style=bold];
m1_66 -> m1_80  [key=0, style=solid];
m1_66 -> m1_81  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_80 -> m1_81  [key=0, style=solid];
m1_80 -> m1_83  [key=2, style=dotted];
m1_80 -> m1_64  [key=2, style=dotted];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_83  [key=2, style=dotted];
m1_81 -> m1_65  [key=2, style=dotted];
m1_82 -> m1_66  [color=blue, key=0, style=bold];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_98  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_96 -> m1_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_96 -> m1_102  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_96 -> m1_103  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_106  [key=2, style=dotted];
m1_97 -> m1_99  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_97 -> m1_102  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_97 -> m1_104  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_98 -> m1_99  [key=0, style=solid];
m1_98 -> m1_100  [key=0, style=solid];
m1_100 -> m1_101  [key=0, style=solid];
m1_100 -> m1_106  [key=2, style=dotted];
m1_100 -> m1_102  [color=darkseagreen4, key=1, label=asSingular, style=dashed];
m1_102 -> m1_103  [key=0, style=solid];
m1_102 -> m1_104  [key=0, style=solid];
m1_103 -> m1_105  [key=0, style=solid];
m1_99 -> m1_105  [key=0, style=solid];
m1_104 -> m1_105  [key=0, style=solid];
m1_101 -> m1_102  [key=0, style=solid];
m1_101 -> m1_106  [key=2, style=dotted];
m1_105 -> m1_96  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_64  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_64  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_64  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_64  [key=2, style=dotted];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_64  [key=2, style=dotted];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_64  [key=2, style=dotted];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_64  [key=2, style=dotted];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_64  [key=2, style=dotted];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_64  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_64  [key=2, style=dotted];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_64  [key=2, style=dotted];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_64  [key=2, style=dotted];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_64  [key=2, style=dotted];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_64  [key=2, style=dotted];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_64  [key=2, style=dotted];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_64  [key=2, style=dotted];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_64  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_64  [key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_65  [key=2, style=dotted];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_65  [key=2, style=dotted];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_65  [key=2, style=dotted];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_65  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_65  [key=2, style=dotted];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_65  [key=2, style=dotted];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_65  [key=2, style=dotted];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_65  [key=2, style=dotted];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_65  [key=2, style=dotted];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_65  [key=2, style=dotted];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_65  [key=2, style=dotted];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_65  [key=2, style=dotted];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_65  [key=2, style=dotted];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_65  [key=2, style=dotted];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_65  [key=2, style=dotted];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_65  [key=2, style=dotted];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_65  [key=2, style=dotted];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_65  [key=2, style=dotted];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_65  [key=2, style=dotted];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_65  [key=2, style=dotted];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_65  [key=2, style=dotted];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_65  [key=2, style=dotted];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_65  [key=2, style=dotted];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_65  [key=2, style=dotted];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_65  [key=2, style=dotted];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_66  [key=2, style=dotted];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_66  [key=2, style=dotted];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_66  [key=2, style=dotted];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_66  [key=2, style=dotted];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_66  [key=2, style=dotted];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_66  [key=2, style=dotted];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_66  [key=2, style=dotted];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_66  [key=2, style=dotted];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_66  [key=2, style=dotted];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_67  [key=2, style=dotted];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_67  [key=2, style=dotted];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_67  [key=2, style=dotted];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_67  [key=2, style=dotted];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_67  [key=2, style=dotted];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_67  [key=2, style=dotted];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_67  [key=2, style=dotted];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_67  [key=2, style=dotted];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_67  [key=2, style=dotted];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_67  [key=2, style=dotted];
m1_63 -> m1_0  [color=blue, key=0, style=bold];
m1_67 -> m1_84  [key=0, style=solid];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_86  [key=2, style=dotted];
m1_84 -> m1_87  [key=2, style=dotted];
m1_85 -> m1_67  [color=blue, key=0, style=bold];
m1_157 -> m1_158  [key=0, style=solid];
m1_158 -> m1_159  [key=0, style=solid];
m1_158 -> m1_160  [key=2, style=dotted];
m1_159 -> m1_157  [color=blue, key=0, style=bold];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_70  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_72  [key=2, style=dotted];
m1_70 -> m1_71  [key=0, style=solid];
m1_71 -> m1_68  [color=blue, key=0, style=bold];
m1_144 -> m1_145  [key=0, style=solid];
m1_145 -> m1_146  [key=0, style=solid];
m1_145 -> m1_147  [key=2, style=dotted];
m1_146 -> m1_144  [color=blue, key=0, style=bold];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_76  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_76  [key=0, style=solid];
m1_74 -> m1_78  [key=2, style=dotted];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_79  [key=2, style=dotted];
m1_75 -> m1_77  [key=0, style=solid];
m1_77 -> m1_73  [color=blue, key=0, style=bold];
m1_92 -> m1_93  [key=0, style=solid];
m1_93 -> m1_94  [key=0, style=solid];
m1_93 -> m1_95  [key=2, style=dotted];
m1_94 -> m1_92  [color=blue, key=0, style=bold];
m1_136 -> m1_137  [key=0, style=solid];
m1_137 -> m1_138  [key=0, style=solid];
m1_137 -> m1_139  [key=2, style=dotted];
m1_138 -> m1_136  [color=blue, key=0, style=bold];
m1_111 -> m1_112  [key=0, style=solid];
m1_111 -> m1_113  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_111 -> m1_115  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_111 -> m1_117  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_111 -> m1_118  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_111 -> m1_119  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_112 -> m1_113  [key=0, style=solid];
m1_112 -> m1_106  [key=2, style=dotted];
m1_112 -> m1_114  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_112 -> m1_117  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_112 -> m1_119  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_113 -> m1_114  [key=0, style=solid];
m1_113 -> m1_115  [key=0, style=solid];
m1_115 -> m1_116  [key=0, style=solid];
m1_115 -> m1_106  [key=2, style=dotted];
m1_115 -> m1_117  [color=darkseagreen4, key=1, label=asPlural, style=dashed];
m1_117 -> m1_118  [key=0, style=solid];
m1_117 -> m1_119  [key=0, style=solid];
m1_118 -> m1_120  [key=0, style=solid];
m1_119 -> m1_120  [key=0, style=solid];
m1_114 -> m1_120  [key=0, style=solid];
m1_116 -> m1_117  [key=0, style=solid];
m1_116 -> m1_106  [key=2, style=dotted];
m1_120 -> m1_111  [color=blue, key=0, style=bold];
m1_132 -> m1_133  [key=0, style=solid];
m1_133 -> m1_134  [key=0, style=solid];
m1_133 -> m1_86  [key=2, style=dotted];
m1_133 -> m1_135  [key=2, style=dotted];
m1_134 -> m1_132  [color=blue, key=0, style=bold];
m1_64 -> m1_88  [key=0, style=solid];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_68  [key=2, style=dotted];
m1_88 -> m1_87  [key=2, style=dotted];
m1_89 -> m1_64  [color=blue, key=0, style=bold];
m1_107 -> m1_108  [key=0, style=solid];
m1_108 -> m1_109  [key=0, style=solid];
m1_108 -> m1_110  [key=2, style=dotted];
m1_109 -> m1_107  [color=blue, key=0, style=bold];
m1_164 -> m1_69  [color=darkseagreen4, key=1, label="Humanizer.InflectorExtensions.Rule", style=dashed];
m1_164 -> m1_70  [color=darkseagreen4, key=1, label="Humanizer.InflectorExtensions.Rule", style=dashed];
m1_164 -> m1_74  [color=darkseagreen4, key=1, label="Humanizer.InflectorExtensions.Rule", style=dashed];
m1_164 -> m1_76  [color=darkseagreen4, key=1, label="Humanizer.InflectorExtensions.Rule", style=dashed];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_5  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m2_0 -> m2_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m2_0 -> m2_6  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m2_0 -> m2_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_1 -> m2_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_2 -> m2_0  [color=blue, key=0, style=bold];
m2_86 -> m2_87  [key=0, style=solid];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_9  [key=2, style=dotted];
m2_5 -> m2_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_14  [key=2, style=dotted];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_10  [key=2, style=dotted];
m2_6 -> m2_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_18  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m2_4 -> m2_6  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m2_4 -> m2_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m2_11 -> m2_12  [key=0, style=solid];
m2_7 -> m2_8  [key=0, style=solid];
m2_15 -> m2_16  [key=0, style=solid];
m2_8 -> m2_4  [color=blue, key=0, style=bold];
m2_13 -> m2_11  [color=blue, key=0, style=bold];
m2_17 -> m2_15  [color=blue, key=0, style=bold];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_92  [key=2, style=dotted];
m2_94 -> m2_95  [key=0, style=solid];
m2_94 -> m2_96  [key=2, style=dotted];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_96  [key=2, style=dotted];
m2_101 -> m2_102  [key=0, style=solid];
m2_101 -> m2_103  [key=2, style=dotted];
m2_75 -> m2_76  [key=0, style=solid];
m2_80 -> m2_81  [key=0, style=solid];
m2_89 -> m2_90  [key=0, style=solid];
m2_93 -> m2_94  [key=0, style=solid];
m2_97 -> m2_98  [key=0, style=solid];
m2_100 -> m2_101  [key=0, style=solid];
m2_104 -> m2_105  [key=0, style=solid];
m2_132 -> m2_133  [key=0, style=solid];
m2_135 -> m2_136  [key=0, style=solid];
m2_107 -> m2_108  [key=0, style=solid];
m2_111 -> m2_112  [key=0, style=solid];
m2_115 -> m2_116  [key=0, style=solid];
m2_119 -> m2_120  [key=0, style=solid];
m2_122 -> m2_123  [key=0, style=solid];
m2_126 -> m2_127  [key=0, style=solid];
m2_76 -> m2_77  [key=0, style=solid];
m2_76 -> m2_78  [key=2, style=dotted];
m2_76 -> m2_79  [key=2, style=dotted];
m2_77 -> m2_75  [color=blue, key=0, style=bold];
m2_81 -> m2_82  [key=0, style=solid];
m2_81 -> m2_83  [key=2, style=dotted];
m2_81 -> m2_84  [key=2, style=dotted];
m2_81 -> m2_85  [key=2, style=dotted];
m2_82 -> m2_80  [color=blue, key=0, style=bold];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_78  [key=2, style=dotted];
m2_88 -> m2_86  [color=blue, key=0, style=bold];
m2_91 -> m2_89  [color=blue, key=0, style=bold];
m2_95 -> m2_93  [color=blue, key=0, style=bold];
m2_99 -> m2_97  [color=blue, key=0, style=bold];
m2_102 -> m2_100  [color=blue, key=0, style=bold];
m2_105 -> m2_106  [key=0, style=solid];
m2_105 -> m2_78  [key=2, style=dotted];
m2_106 -> m2_104  [color=blue, key=0, style=bold];
m2_108 -> m2_109  [key=0, style=solid];
m2_108 -> m2_110  [key=2, style=dotted];
m2_109 -> m2_107  [color=blue, key=0, style=bold];
m2_112 -> m2_113  [key=0, style=solid];
m2_112 -> m2_114  [key=2, style=dotted];
m2_113 -> m2_111  [color=blue, key=0, style=bold];
m2_116 -> m2_117  [key=0, style=solid];
m2_116 -> m2_118  [key=2, style=dotted];
m2_116 -> m2_110  [key=2, style=dotted];
m2_117 -> m2_115  [color=blue, key=0, style=bold];
m2_120 -> m2_121  [key=0, style=solid];
m2_120 -> m2_114  [key=2, style=dotted];
m2_121 -> m2_119  [color=blue, key=0, style=bold];
m2_123 -> m2_124  [key=0, style=solid];
m2_123 -> m2_118  [key=2, style=dotted];
m2_123 -> m2_125  [key=2, style=dotted];
m2_124 -> m2_122  [color=blue, key=0, style=bold];
m2_127 -> m2_128  [key=0, style=solid];
m2_127 -> m2_129  [key=2, style=dotted];
m2_127 -> m2_130  [key=2, style=dotted];
m2_127 -> m2_131  [key=2, style=dotted];
m2_128 -> m2_126  [color=blue, key=0, style=bold];
m2_133 -> m2_134  [key=0, style=solid];
m2_134 -> m2_132  [color=blue, key=0, style=bold];
m2_136 -> m2_137  [key=0, style=solid];
m2_137 -> m2_135  [color=blue, key=0, style=bold];
m2_3 -> m2_19  [key=0, style=solid];
m2_3 -> m2_23  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m2_3 -> m2_24  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.Maybe<System.Func<T>>", style=dashed];
m2_3 -> m2_25  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>", style=dashed];
m2_3 -> m2_27  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m2_3 -> m2_90  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m2_3 -> m2_28  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m2_3 -> m2_94  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m2_3 -> m2_29  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m2_3 -> m2_98  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m2_3 -> m2_30  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m2_3 -> m2_101  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m2_3 -> m2_34  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.Maybe<System.Func<T>>", style=dashed];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_43  [key=2, style=dotted];
m2_19 -> m2_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_19 -> m2_33  [color=darkseagreen4, key=1, label=typeInfo, style=dashed];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_25  [key=0, style=solid];
m2_23 -> m2_47  [key=2, style=dotted];
m2_23 -> m2_48  [key=2, style=dotted];
m2_23 -> m2_49  [key=2, style=dotted];
m2_24 -> m2_42  [key=0, style=solid];
m2_24 -> m2_43  [key=2, style=dotted];
m2_24 -> m2_50  [key=2, style=dotted];
m2_24 -> m2_51  [key=2, style=dotted];
m2_24 -> m2_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_52  [key=2, style=dotted];
m2_25 -> m2_41  [color=darkseagreen4, key=1, label=tokenizerResult, style=dashed];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_53  [key=2, style=dotted];
m2_27 -> m2_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_27 -> m2_29  [color=darkseagreen4, key=1, label=partitions, style=dashed];
m2_27 -> m2_30  [color=darkseagreen4, key=1, label=partitions, style=dashed];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_54  [key=2, style=dotted];
m2_28 -> m2_55  [key=2, style=dotted];
m2_28 -> m2_28  [color=darkseagreen4, key=1, label=pt, style=dashed];
m2_28 -> m2_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_28 -> m2_31  [color=darkseagreen4, key=1, label=optionSpecProps, style=dashed];
m2_28 -> m2_41  [color=darkseagreen4, key=1, label=optionSpecProps, style=dashed];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_56  [key=2, style=dotted];
m2_29 -> m2_55  [key=2, style=dotted];
m2_29 -> m2_29  [color=darkseagreen4, key=1, label=pt, style=dashed];
m2_29 -> m2_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_29 -> m2_31  [color=darkseagreen4, key=1, label=valueSpecProps, style=dashed];
m2_29 -> m2_41  [color=darkseagreen4, key=1, label=valueSpecProps, style=dashed];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_57  [key=2, style=dotted];
m2_30 -> m2_58  [key=2, style=dotted];
m2_30 -> m2_59  [key=2, style=dotted];
m2_30 -> m2_30  [color=darkseagreen4, key=1, label=token, style=dashed];
m2_30 -> m2_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_30 -> m2_101  [color=darkseagreen4, key=1, label=token, style=dashed];
m2_30 -> m2_41  [color=darkseagreen4, key=1, label=missingValueErrors, style=dashed];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_62  [key=2, style=dotted];
m2_34 -> m2_43  [key=2, style=dotted];
m2_34 -> m2_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_44  [key=2, style=dotted];
m2_20 -> m2_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_20 -> m2_28  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m2_20 -> m2_29  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m2_20 -> m2_37  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_36  [key=0, style=solid];
m2_33 -> m2_61  [key=2, style=dotted];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_21  [color=darkseagreen4, key=1, label=pt, style=dashed];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_64  [key=2, style=dotted];
m2_37 -> m2_65  [key=2, style=dotted];
m2_37 -> m2_37  [color=darkseagreen4, key=1, label=p, style=dashed];
m2_37 -> m2_39  [color=darkseagreen4, key=1, label=ctor, style=dashed];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_45  [key=2, style=dotted];
m2_22 -> m2_46  [key=2, style=dotted];
m2_22 -> m2_25  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m2_22 -> m2_27  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m2_22 -> m2_90  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m2_22 -> m2_30  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_40  [color=darkseagreen4, key=1, label=tokens, style=dashed];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_73  [key=2, style=dotted];
m2_41 -> m2_74  [key=2, style=dotted];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_71  [key=2, style=dotted];
m2_40 -> m2_72  [key=2, style=dotted];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_60  [key=2, style=dotted];
m2_31 -> m2_35  [color=darkseagreen4, key=1, label=specPropsWithValue, style=dashed];
m2_31 -> m2_38  [color=darkseagreen4, key=1, label=specPropsWithValue, style=dashed];
m2_31 -> m2_40  [color=darkseagreen4, key=1, label=specPropsWithValue, style=dashed];
m2_32 -> m2_33  [key=0, style=solid];
m2_35 -> m2_40  [key=0, style=solid];
m2_35 -> m2_63  [key=2, style=dotted];
m2_35 -> m2_35  [color=darkseagreen4, key=1, label=instance, style=dashed];
m2_35 -> m2_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_35 -> m2_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_35 -> m2_115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_35 -> m2_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_35 -> m2_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_35 -> m2_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_35 -> m2_41  [color=darkseagreen4, key=1, label=instance, style=dashed];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_66  [key=2, style=dotted];
m2_38 -> m2_67  [key=2, style=dotted];
m2_38 -> m2_68  [key=2, style=dotted];
m2_38 -> m2_43  [key=2, style=dotted];
m2_38 -> m2_69  [key=2, style=dotted];
m2_38 -> m2_38  [color=darkseagreen4, key=1, label=prms, style=dashed];
m2_38 -> m2_132  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_38 -> m2_135  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_36 -> m2_37  [key=0, style=solid];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_70  [key=2, style=dotted];
m2_39 -> m2_41  [color=darkseagreen4, key=1, label=instance, style=dashed];
m2_42 -> m2_3  [color=blue, key=0, style=bold];
m2_138 -> m2_5  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m2_138 -> m2_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m2_138 -> m2_6  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m2_138 -> m2_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m2_139 -> m2_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m2_139 -> m2_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m2_140 -> m2_90  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m2_140 -> m2_101  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m2_141 -> m2_90  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m2_142 -> m2_94  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m2_142 -> m2_98  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m2_143 -> m2_101  [color=darkseagreen4, key=1, label=token, style=dashed];
m7_0 -> m7_1  [color=green, key=0, style=solid];
m7_0 -> m7_3  [color=green, key=1, label=int, style=dashed];
m7_0 -> m7_4  [color=green, key=1, label=int, style=dashed];
m7_0 -> m7_6  [color=green, key=1, label=int, style=dashed];
m7_0 -> m7_7  [color=green, key=1, label=int, style=dashed];
m7_0 -> m7_8  [color=green, key=1, label=int, style=dashed];
m7_0 -> m7_9  [color=green, key=1, label=int, style=dashed];
m7_0 -> m7_10  [color=green, key=1, label=int, style=dashed];
m7_0 -> m7_11  [color=green, key=1, label=int, style=dashed];
m7_0 -> m7_12  [color=green, key=1, label=int, style=dashed];
m7_0 -> m7_13  [color=green, key=1, label=int, style=dashed];
m7_0 -> m7_14  [color=green, key=1, label=int, style=dashed];
m7_0 -> m7_15  [color=green, key=1, label=int, style=dashed];
m7_0 -> m7_20  [color=green, key=1, label=int, style=dashed];
m7_0 -> m7_21  [color=green, key=1, label=int, style=dashed];
m7_0 -> m7_22  [color=green, key=1, label=int, style=dashed];
m7_0 -> m7_23  [color=green, key=1, label=int, style=dashed];
m7_0 -> m7_24  [color=green, key=1, label=int, style=dashed];
m7_0 -> m7_2  [color=green, key=3, label="method methodReturn string ToWords", style=bold];
m7_1 -> m7_2  [color=green, key=0, style=solid];
m7_1 -> m7_3  [color=green, key=0, style=solid];
m7_2 -> m7_26  [color=green, key=0, style=solid];
m7_3 -> m7_4  [color=green, key=0, style=solid];
m7_3 -> m7_5  [color=green, key=0, style=solid];
m7_4 -> m7_26  [color=green, key=0, style=solid];
m7_4 -> m7_27  [color=green, key=2, style=dotted];
m7_4 -> m7_0  [color=green, key=2, style=dotted];
m7_5 -> m7_6  [color=green, key=0, style=solid];
m7_5 -> m7_7  [color=green, key=1, label=words, style=dashed];
m7_5 -> m7_10  [color=green, key=1, label=words, style=dashed];
m7_5 -> m7_13  [color=green, key=1, label=words, style=dashed];
m7_5 -> m7_21  [color=green, key=1, label=words, style=dashed];
m7_5 -> m7_22  [color=green, key=1, label=words, style=dashed];
m7_5 -> m7_24  [color=green, key=1, label=words, style=dashed];
m7_5 -> m7_28  [color=green, key=2, style=dotted];
m7_5 -> m7_16  [color=green, key=1, label=words, style=dashed];
m7_5 -> m7_17  [color=green, key=1, label=words, style=dashed];
m7_5 -> m7_25  [color=green, key=1, label=words, style=dashed];
m7_6 -> m7_7  [color=green, key=0, style=solid];
m7_6 -> m7_9  [color=green, key=0, style=solid];
m7_7 -> m7_8  [color=green, key=0, style=solid];
m7_7 -> m7_0  [color=green, key=2, style=dotted];
m7_7 -> m7_29  [color=green, key=2, style=dotted];
m7_9 -> m7_10  [color=green, key=0, style=solid];
m7_9 -> m7_12  [color=green, key=0, style=solid];
m7_8 -> m7_8  [color=green, key=1, label=int, style=dashed];
m7_8 -> m7_9  [color=green, key=0, style=solid];
m7_8 -> m7_10  [color=green, key=1, label=int, style=dashed];
m7_8 -> m7_11  [color=green, key=1, label=int, style=dashed];
m7_8 -> m7_12  [color=green, key=1, label=int, style=dashed];
m7_8 -> m7_13  [color=green, key=1, label=int, style=dashed];
m7_8 -> m7_14  [color=green, key=1, label=int, style=dashed];
m7_8 -> m7_15  [color=green, key=1, label=int, style=dashed];
m7_8 -> m7_20  [color=green, key=1, label=int, style=dashed];
m7_8 -> m7_21  [color=green, key=1, label=int, style=dashed];
m7_8 -> m7_22  [color=green, key=1, label=int, style=dashed];
m7_8 -> m7_23  [color=green, key=1, label=int, style=dashed];
m7_8 -> m7_24  [color=green, key=1, label=int, style=dashed];
m7_10 -> m7_11  [color=green, key=0, style=solid];
m7_10 -> m7_0  [color=green, key=2, style=dotted];
m7_10 -> m7_29  [color=green, key=2, style=dotted];
m7_11 -> m7_11  [color=green, key=1, label=int, style=dashed];
m7_11 -> m7_12  [color=green, key=0, style=solid];
m7_11 -> m7_13  [color=green, key=1, label=int, style=dashed];
m7_11 -> m7_14  [color=green, key=1, label=int, style=dashed];
m7_11 -> m7_15  [color=green, key=1, label=int, style=dashed];
m7_11 -> m7_20  [color=green, key=1, label=int, style=dashed];
m7_11 -> m7_21  [color=green, key=1, label=int, style=dashed];
m7_11 -> m7_22  [color=green, key=1, label=int, style=dashed];
m7_11 -> m7_23  [color=green, key=1, label=int, style=dashed];
m7_11 -> m7_24  [color=green, key=1, label=int, style=dashed];
m7_12 -> m7_13  [color=green, key=0, style=solid];
m7_12 -> m7_15  [color=green, key=0, style=solid];
m7_13 -> m7_14  [color=green, key=0, style=solid];
m7_13 -> m7_0  [color=green, key=2, style=dotted];
m7_13 -> m7_29  [color=green, key=2, style=dotted];
m7_14 -> m7_14  [color=green, key=1, label=int, style=dashed];
m7_14 -> m7_15  [color=green, key=0, style=solid];
m7_14 -> m7_20  [color=green, key=1, label=int, style=dashed];
m7_14 -> m7_21  [color=green, key=1, label=int, style=dashed];
m7_14 -> m7_22  [color=green, key=1, label=int, style=dashed];
m7_14 -> m7_23  [color=green, key=1, label=int, style=dashed];
m7_14 -> m7_24  [color=green, key=1, label=int, style=dashed];
m7_15 -> m7_16  [color=green, key=0, style=solid];
m7_15 -> m7_25  [color=green, key=0, style=solid];
m7_20 -> m7_21  [color=green, key=0, style=solid];
m7_20 -> m7_22  [color=green, key=0, style=solid];
m7_21 -> m7_25  [color=green, key=0, style=solid];
m7_21 -> m7_29  [color=green, key=2, style=dotted];
m7_22 -> m7_23  [color=green, key=0, style=solid];
m7_22 -> m7_29  [color=green, key=2, style=dotted];
m7_23 -> m7_24  [color=green, key=0, style=solid];
m7_23 -> m7_25  [color=green, key=0, style=solid];
m7_24 -> m7_25  [color=green, key=0, style=solid];
m7_24 -> m7_29  [color=green, key=2, style=dotted];
m7_16 -> m7_17  [color=green, key=0, style=solid];
m7_16 -> m7_18  [color=green, key=0, style=solid];
m7_25 -> m7_26  [color=green, key=0, style=solid];
m7_25 -> m7_30  [color=green, key=2, style=dotted];
m7_19 -> m7_20  [color=green, key=0, style=solid];
m7_19 -> m7_22  [color=green, key=1, label=tensMap, style=dashed];
m7_18 -> m7_21  [color=green, key=1, label=unitsMap, style=dashed];
m7_18 -> m7_24  [color=green, key=1, label=unitsMap, style=dashed];
m7_18 -> m7_19  [color=green, key=0, style=solid];
m7_17 -> m7_18  [color=green, key=0, style=solid];
m7_17 -> m7_29  [color=green, key=2, style=dotted];
m7_26 -> m7_0  [color=blue, key=0, style=bold];
m13_0 -> m13_1  [key=0, style=solid];
m13_0 -> m13_8  [color=darkseagreen4, key=1, label="System.DateTime?", style=dashed];
m13_0 -> m13_9  [color=darkseagreen4, key=1, label=bool, style=dashed];
m13_0 -> m13_11  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_0 -> m13_13  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m13_1 -> m13_0  [color=blue, key=0, style=bold];
m13_1 -> m13_3  [key=0, style=solid];
m13_1 -> m13_2  [key=0, style=solid];
m13_4 -> m13_4  [color=green, key=3, label="Local variable int minute", style=bold];
m13_4 -> m13_5  [color=green, key=0, style=solid];
m13_4 -> m13_15  [color=green, key=1, label=minute, style=dashed];
m13_4 -> m13_17  [color=green, key=1, label=minute, style=dashed];
m13_4 -> m13_19  [color=green, key=1, label=minute, style=dashed];
m13_4 -> m13_21  [color=green, key=1, label=minute, style=dashed];
m13_3 -> m13_4  [color=green, key=0, style=solid];
m13_3 -> m13_3  [color=darkorchid, key=3, label="Local variable int second", style=bold];
m13_5 -> m13_5  [color=darkorchid, key=3, label="Local variable int hour", style=bold];
m13_5 -> m13_6  [key=0, style=solid];
m13_5 -> m13_23  [color=darkseagreen4, key=1, label=hour, style=dashed];
m13_5 -> m13_25  [color=darkseagreen4, key=1, label=hour, style=dashed];
m13_15 -> m13_16  [key=0, style=solid];
m13_15 -> m13_17  [key=0, style=solid];
m13_17 -> m13_18  [key=0, style=solid];
m13_17 -> m13_19  [key=0, style=solid];
m13_19 -> m13_20  [key=0, style=solid];
m13_19 -> m13_21  [key=0, style=solid];
m13_21 -> m13_22  [key=0, style=solid];
m13_21 -> m13_23  [key=0, style=solid];
m13_2 -> m13_3  [key=0, style=solid];
m13_2 -> m13_8  [color=darkseagreen4, key=1, label="System.DateTime?", style=dashed];
m13_6 -> m13_6  [color=darkorchid, key=3, label="Local variable int day", style=bold];
m13_6 -> m13_7  [key=0, style=solid];
m13_6 -> m13_27  [color=darkseagreen4, key=1, label=day, style=dashed];
m13_23 -> m13_24  [key=0, style=solid];
m13_23 -> m13_25  [key=0, style=solid];
m13_25 -> m13_26  [key=0, style=solid];
m13_25 -> m13_27  [key=0, style=solid];
m13_14 -> m13_15  [key=0, style=solid];
m13_14 -> m13_17  [color=darkseagreen4, key=1, label=delta, style=dashed];
m13_14 -> m13_19  [color=darkseagreen4, key=1, label=delta, style=dashed];
m13_14 -> m13_21  [color=darkseagreen4, key=1, label=delta, style=dashed];
m13_14 -> m13_23  [color=darkseagreen4, key=1, label=delta, style=dashed];
m13_14 -> m13_25  [color=darkseagreen4, key=1, label=delta, style=dashed];
m13_14 -> m13_14  [color=darkseagreen4, key=1, label=ts, style=dashed];
m13_14 -> m13_37  [key=2, style=dotted];
m13_14 -> m13_16  [color=darkseagreen4, key=1, label=ts, style=dashed];
m13_14 -> m13_20  [color=darkseagreen4, key=1, label=ts, style=dashed];
m13_14 -> m13_24  [color=darkseagreen4, key=1, label=ts, style=dashed];
m13_14 -> m13_27  [color=darkseagreen4, key=1, label=delta, style=dashed];
m13_14 -> m13_28  [color=darkseagreen4, key=1, label=ts, style=dashed];
m13_14 -> m13_29  [color=darkseagreen4, key=1, label=delta, style=dashed];
m13_14 -> m13_30  [color=darkseagreen4, key=1, label=ts, style=dashed];
m13_14 -> m13_32  [color=darkseagreen4, key=1, label=ts, style=dashed];
m13_16 -> m13_16  [color=darkseagreen4, key=1, label=ts, style=dashed];
m13_16 -> m13_34  [key=0, style=solid];
m13_16 -> m13_38  [key=2, style=dotted];
m13_16 -> m13_20  [color=darkseagreen4, key=1, label=ts, style=dashed];
m13_16 -> m13_24  [color=darkseagreen4, key=1, label=ts, style=dashed];
m13_16 -> m13_28  [color=darkseagreen4, key=1, label=ts, style=dashed];
m13_16 -> m13_30  [color=darkseagreen4, key=1, label=ts, style=dashed];
m13_16 -> m13_32  [color=darkseagreen4, key=1, label=ts, style=dashed];
m13_18 -> m13_34  [key=0, style=solid];
m13_20 -> m13_20  [color=darkseagreen4, key=1, label=ts, style=dashed];
m13_20 -> m13_34  [key=0, style=solid];
m13_20 -> m13_38  [key=2, style=dotted];
m13_20 -> m13_24  [color=darkseagreen4, key=1, label=ts, style=dashed];
m13_20 -> m13_28  [color=darkseagreen4, key=1, label=ts, style=dashed];
m13_20 -> m13_30  [color=darkseagreen4, key=1, label=ts, style=dashed];
m13_20 -> m13_32  [color=darkseagreen4, key=1, label=ts, style=dashed];
m13_22 -> m13_34  [key=0, style=solid];
m13_8 -> m13_9  [key=0, style=solid];
m13_8 -> m13_10  [color=darkseagreen4, key=1, label=comparisonBase, style=dashed];
m13_8 -> m13_11  [color=darkseagreen4, key=1, label=comparisonBase, style=dashed];
m13_8 -> m13_13  [color=darkseagreen4, key=1, label=comparisonBase, style=dashed];
m13_7 -> m13_8  [key=0, style=solid];
m13_7 -> m13_7  [color=darkorchid, key=3, label="Local variable int month", style=bold];
m13_7 -> m13_29  [color=darkseagreen4, key=1, label=month, style=dashed];
m13_27 -> m13_28  [key=0, style=solid];
m13_27 -> m13_29  [key=0, style=solid];
m13_24 -> m13_24  [color=darkseagreen4, key=1, label=ts, style=dashed];
m13_24 -> m13_34  [key=0, style=solid];
m13_24 -> m13_38  [key=2, style=dotted];
m13_24 -> m13_28  [color=darkseagreen4, key=1, label=ts, style=dashed];
m13_24 -> m13_30  [color=darkseagreen4, key=1, label=ts, style=dashed];
m13_24 -> m13_32  [color=darkseagreen4, key=1, label=ts, style=dashed];
m13_26 -> m13_34  [key=0, style=solid];
m13_13 -> m13_14  [key=0, style=solid];
m13_13 -> m13_36  [key=2, style=dotted];
m13_28 -> m13_28  [color=darkseagreen4, key=1, label=ts, style=dashed];
m13_28 -> m13_34  [key=0, style=solid];
m13_28 -> m13_38  [key=2, style=dotted];
m13_28 -> m13_30  [color=darkseagreen4, key=1, label=ts, style=dashed];
m13_28 -> m13_32  [color=darkseagreen4, key=1, label=ts, style=dashed];
m13_29 -> m13_30  [key=0, style=solid];
m13_29 -> m13_32  [key=0, style=solid];
m13_30 -> m13_30  [color=darkseagreen4, key=1, label=ts, style=dashed];
m13_30 -> m13_31  [key=0, style=solid];
m13_30 -> m13_39  [key=2, style=dotted];
m13_30 -> m13_40  [key=2, style=dotted];
m13_30 -> m13_32  [color=darkseagreen4, key=1, label=ts, style=dashed];
m13_32 -> m13_32  [color=darkseagreen4, key=1, label=ts, style=dashed];
m13_32 -> m13_33  [key=0, style=solid];
m13_32 -> m13_39  [key=2, style=dotted];
m13_32 -> m13_40  [key=2, style=dotted];
m13_9 -> m13_10  [key=0, style=solid];
m13_9 -> m13_11  [key=0, style=solid];
m13_11 -> m13_13  [key=0, style=solid];
m13_11 -> m13_12  [key=0, style=solid];
m13_10 -> m13_13  [color=darkseagreen4, key=1, label=comparisonBase, style=dashed];
m13_10 -> m13_11  [key=0, style=solid];
m13_10 -> m13_10  [color=darkseagreen4, key=1, label=comparisonBase, style=dashed];
m13_10 -> m13_35  [key=2, style=dotted];
m13_31 -> m13_34  [key=0, style=solid];
m13_31 -> m13_38  [key=2, style=dotted];
m13_33 -> m13_34  [key=0, style=solid];
m13_33 -> m13_38  [key=2, style=dotted];
m13_12 -> m13_34  [key=0, style=solid];
m13_34 -> m13_0  [color=blue, key=0, style=bold];
}
