digraph  {
d3 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", color=green, community=0, label="return input.Transform(To.TitleCase);", prediction=0, span="20-20"];
d0 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", label="Entry Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", span="15-15"];
d2 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", label="LetterCasing.Title", span="19-19"];
d11 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", label="Exit Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", span="15-15"];
d12 [cluster="string.Transform(params Humanizer.IStringTransformer[])", label="Entry string.Transform(params Humanizer.IStringTransformer[])", span="15-15"];
d5 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", color=green, community=0, label="return input.Transform(To.LowerCase);", prediction=0, span="23-23"];
d4 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", label="LetterCasing.LowerCase", span="22-22"];
d7 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", color=green, community=0, label="return input.Transform(To.UpperCase);", prediction=0, span="26-26"];
d6 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", label="LetterCasing.AllCaps", span="25-25"];
d9 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", color=green, community=0, label="return input.Transform(To.SentenceCase);", prediction=0, span="29-29"];
d8 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", label="LetterCasing.Sentence", span="28-28"];
d1 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", label=casing, span="17-17"];
d10 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", label="throw new ArgumentOutOfRangeException(''casing'');", span="32-32"];
d13 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m1_4 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", color=green, community=0, file="EnumHumanizeExtensions.cs", label="Type type = input.GetType()", prediction=4, span="17-17"];
m1_26 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="EnumHumanizeExtensions.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m1_9 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", color=green, community=0, file="EnumHumanizeExtensions.cs", label="return customDescription;", prediction=5, span="25-25"];
m1_3 [cluster="System.Enum.ToString()", file="EnumHumanizeExtensions.cs", label="Entry System.Enum.ToString()", span="0-0"];
m1_29 [cluster="Unk.GetValue", file="EnumHumanizeExtensions.cs", label="Entry Unk.GetValue", span=""];
m1_14 [cluster="System.Type.GetMember(string)", file="EnumHumanizeExtensions.cs", label="Entry System.Type.GetMember(string)", span="0-0"];
m1_15 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="EnumHumanizeExtensions.cs", label="Entry Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", span="32-32"];
m1_17 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", color=green, community=0, file="EnumHumanizeExtensions.cs", label="var attrs = memberInfo.GetCustomAttributes(true)", prediction=6, span="34-34"];
m1_18 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", color=green, community=0, file="EnumHumanizeExtensions.cs", label=attrs, prediction=7, span="36-36"];
m1_20 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", color=green, community=0, file="EnumHumanizeExtensions.cs", label="attrType.FullName == ''System.ComponentModel.DescriptionAttribute''", prediction=8, span="39-39"];
m1_22 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", color=green, community=0, file="EnumHumanizeExtensions.cs", label="descriptionProperty != null", prediction=9, span="42-42"];
m1_19 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", color=green, community=0, file="EnumHumanizeExtensions.cs", label="var attrType = attr.GetType()", prediction=10, span="38-38"];
m1_24 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", color=green, community=0, file="EnumHumanizeExtensions.cs", label="return null;", prediction=11, span="50-50"];
m1_23 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", color=green, community=0, file="EnumHumanizeExtensions.cs", label="return descriptionProperty.GetValue(attr, null).ToString();", prediction=7, span="45-45"];
m1_21 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", color=green, community=0, file="EnumHumanizeExtensions.cs", label="var descriptionProperty = attrType.GetProperties().FirstOrDefault(DescriptionProperty)", prediction=7, span="41-41"];
m1_25 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="EnumHumanizeExtensions.cs", label="Exit Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", span="32-32"];
m1_28 [cluster="Unk.FirstOrDefault", file="EnumHumanizeExtensions.cs", label="Entry Unk.FirstOrDefault", span=""];
m1_12 [cluster="object.GetType()", file="EnumHumanizeExtensions.cs", label="Entry object.GetType()", span="0-0"];
m1_27 [cluster="System.Type.GetProperties()", file="EnumHumanizeExtensions.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m1_5 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", color=green, community=0, file="EnumHumanizeExtensions.cs", label="var memInfo = type.GetMember(input.ToString())", prediction=14, span="18-18"];
m1_6 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", color=green, community=0, file="EnumHumanizeExtensions.cs", label="memInfo.Length > 0", prediction=15, span="20-20"];
m1_7 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", color=green, community=0, file="EnumHumanizeExtensions.cs", label="var customDescription = GetCustomDescription(memInfo[0])", prediction=16, span="22-22"];
m1_8 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", color=green, community=0, file="EnumHumanizeExtensions.cs", label="customDescription != null", prediction=17, span="24-24"];
m1_0 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="EnumHumanizeExtensions.cs", label="Entry Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", span="13-13"];
m1_1 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", color=green, community=0, file="EnumHumanizeExtensions.cs", label="return input.ToString().Humanize();", prediction=18, span="30-30"];
m1_2 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="EnumHumanizeExtensions.cs", label="Exit Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", span="13-13"];
m1_30 [cluster="Unk.ToString", file="EnumHumanizeExtensions.cs", label="Entry Unk.ToString", span=""];
m4_31 [cluster="System.Math.Abs(int)", file="On.Days.cs", label="Entry System.Math.Abs(int)", span="0-0"];
m4_34 [cluster="System.Collections.Generic.List<T>.List()", file="On.Days.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m4_0 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", file="On.Days.cs", label="Entry Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", span="7-7"];
m4_1 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", file="On.Days.cs", label="number == 0", span="9-9"];
m4_3 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", file="On.Days.cs", label="number < 0", span="12-12"];
m4_4 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", file="On.Days.cs", label="return string.Format(''minus {0}'', Math.Abs(number).ToWords());", span="13-13"];
m4_6 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", file="On.Days.cs", label="(number / 1000000000) > 0", span="17-17"];
m4_7 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", file="On.Days.cs", label="parts.Add(string.Format(''{0} billion'', (number / 1000000000).ToWords()))", span="19-19"];
m4_8 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", file="On.Days.cs", label="number %= 1000000000", span="20-20"];
m4_9 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", file="On.Days.cs", label="(number / 1000000) > 0", span="23-23"];
m4_10 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", file="On.Days.cs", label="parts.Add(string.Format(''{0} million'', (number / 1000000).ToWords()))", span="25-25"];
m4_11 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", file="On.Days.cs", label="number %= 1000000", span="26-26"];
m4_12 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", file="On.Days.cs", label="(number / 1000) > 0", span="29-29"];
m4_13 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", file="On.Days.cs", label="parts.Add(string.Format(''{0} thousand'', NumberToWordsExtension.ToWords(number / 1000)))", span="31-31"];
m4_14 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", file="On.Days.cs", label="number %= 1000", span="32-32"];
m4_15 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", file="On.Days.cs", label="(number / 100) > 0", span="35-35"];
m4_16 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", file="On.Days.cs", label="parts.Add(string.Format(''{0} hundred'', NumberToWordsExtension.ToWords(number / 100)))", span="37-37"];
m4_17 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", file="On.Days.cs", label="number %= 100", span="38-38"];
m4_18 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", file="On.Days.cs", label="number > 0", span="41-41"];
m4_23 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", file="On.Days.cs", label="number < 20", span="49-49"];
m4_24 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", file="On.Days.cs", label="parts.Add(unitsMap[number])", span="50-50"];
m4_25 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", file="On.Days.cs", label="var lastPart = tensMap[number / 10]", span="53-53"];
m4_26 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", file="On.Days.cs", label="(number % 10) > 0", span="54-54"];
m4_27 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", file="On.Days.cs", label="lastPart += string.Format(''-{0}'', unitsMap[number % 10])", span="55-55"];
m4_2 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", file="On.Days.cs", label="return ''zero'';", span="10-10"];
m4_5 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", file="On.Days.cs", label="var parts = new List<string>()", span="15-15"];
m4_19 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", file="On.Days.cs", label="parts.Count != 0", span="43-43"];
m4_20 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", file="On.Days.cs", label="parts.Add(''and'')", span="44-44"];
m4_28 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", file="On.Days.cs", label="parts.Add(lastPart)", span="57-57"];
m4_29 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", file="On.Days.cs", label="return string.Join('' '', parts.ToArray());", span="61-61"];
m4_21 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", file="On.Days.cs", label="var unitsMap = new[] { ''zero'', ''one'', ''two'', ''three'', ''four'', ''five'', ''six'', ''seven'', ''eight'', ''nine'', ''ten'', ''eleven'', ''twelve'', ''thirteen'', ''fourteen'', ''fifteen'', ''sixteen'', ''seventeen'', ''eighteen'', ''nineteen'' }", span="46-46"];
m4_22 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", file="On.Days.cs", label="var tensMap = new[] { ''zero'', ''ten'', ''twenty'', ''thirty'', ''forty'', ''fifty'', ''sixty'', ''seventy'', ''eighty'', ''ninety'' }", span="47-47"];
m4_30 [cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", file="On.Days.cs", label="Exit Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", span="7-7"];
m4_37 [cluster="System.Collections.Generic.List<T>.ToArray()", file="On.Days.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m4_35 [cluster="System.Collections.Generic.List<T>.Add(T)", file="On.Days.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m4_38 [cluster="string.Join(string, params string[])", file="On.Days.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m4_36 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="On.Days.cs", label="Entry Humanizer.NumberToWordsExtension.ToWords(int)", span="25-25"];
m4_32 [cluster="int.ToWords()", file="On.Days.cs", label="Entry int.ToWords()", span="25-25"];
m4_33 [cluster="string.Format(string, object)", file="On.Days.cs", label="Entry string.Format(string, object)", span="0-0"];
m5_7 [cluster="Humanizer.IStringTransformer.Transform(string)", file="To.cs", label="Entry Humanizer.IStringTransformer.Transform(string)", span="12-12"];
m5_4 [cluster="lambda expression", file="To.cs", label="Entry lambda expression", span="17-17"];
m5_5 [cluster="lambda expression", file="To.cs", label="stringTransformer.Transform(current)", span="17-17"];
m5_6 [cluster="lambda expression", file="To.cs", label="Exit lambda expression", span="17-17"];
m5_3 [cluster="Unk.Aggregate", file="To.cs", label="Entry Unk.Aggregate", span=""];
m5_0 [cluster="Humanizer.To.Transform(string, params Humanizer.IStringTransformer[])", file="To.cs", label="Entry Humanizer.To.Transform(string, params Humanizer.IStringTransformer[])", span="15-15"];
m5_1 [cluster="Humanizer.To.Transform(string, params Humanizer.IStringTransformer[])", file="To.cs", label="return transformers.Aggregate(input, (current, stringTransformer) => stringTransformer.Transform(current));", span="17-17"];
m5_2 [cluster="Humanizer.To.Transform(string, params Humanizer.IStringTransformer[])", file="To.cs", label="Exit Humanizer.To.Transform(string, params Humanizer.IStringTransformer[])", span="15-15"];
m7_8 [cluster="Humanizer.Tests.TransformersTests.TransformToUpperCase(string, string)", file="TransformersTests.cs", label="Entry Humanizer.Tests.TransformersTests.TransformToUpperCase(string, string)", span="40-40"];
m7_9 [cluster="Humanizer.Tests.TransformersTests.TransformToUpperCase(string, string)", file="TransformersTests.cs", label="Assert.Equal(expectedOutput, input.Transform(To.UpperCase))", span="42-42"];
m7_10 [cluster="Humanizer.Tests.TransformersTests.TransformToUpperCase(string, string)", file="TransformersTests.cs", label="Exit Humanizer.Tests.TransformersTests.TransformToUpperCase(string, string)", span="40-40"];
m7_4 [cluster="Unk.Equal", file="TransformersTests.cs", label="Entry Unk.Equal", span=""];
m7_0 [cluster="Humanizer.Tests.TransformersTests.TransformToTitleCase(string, string)", file="TransformersTests.cs", label="Entry Humanizer.Tests.TransformersTests.TransformToTitleCase(string, string)", span="15-15"];
m7_1 [cluster="Humanizer.Tests.TransformersTests.TransformToTitleCase(string, string)", color=green, community=0, file="TransformersTests.cs", label="Assert.Equal(expectedOutput, input.Transform(To.TitleCase))", prediction=19, span="17-17"];
m7_2 [cluster="Humanizer.Tests.TransformersTests.TransformToTitleCase(string, string)", file="TransformersTests.cs", label="Exit Humanizer.Tests.TransformersTests.TransformToTitleCase(string, string)", span="15-15"];
m7_5 [cluster="Humanizer.Tests.TransformersTests.TransformToSentenceCase(string, string)", file="TransformersTests.cs", label="Entry Humanizer.Tests.TransformersTests.TransformToSentenceCase(string, string)", span="31-31"];
m7_6 [cluster="Humanizer.Tests.TransformersTests.TransformToSentenceCase(string, string)", file="TransformersTests.cs", label="Assert.Equal(expectedOutput, input.Transform(To.SentenceCase))", span="33-33"];
m7_7 [cluster="Humanizer.Tests.TransformersTests.TransformToSentenceCase(string, string)", file="TransformersTests.cs", label="Exit Humanizer.Tests.TransformersTests.TransformToSentenceCase(string, string)", span="31-31"];
d0 -> d3  [color=green, key=1, label=string, style=dashed];
d0 -> d5  [color=green, key=1, label=string, style=dashed];
d0 -> d7  [color=green, key=1, label=string, style=dashed];
d0 -> d9  [color=green, key=1, label=string, style=dashed];
m1_18 -> m1_23  [color=green, key=1, label=attr, style=dashed];
m1_21 -> m1_23  [color=green, key=1, label=descriptionProperty, style=dashed];
m4_0 -> m4_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_4  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_6  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_7  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_9  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_10  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_12  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_13  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_15  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_16  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_18  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_23  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_24  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_26  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_8 -> m4_10  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_8 -> m4_12  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_8 -> m4_13  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_8 -> m4_15  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_8 -> m4_16  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_8 -> m4_18  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_8 -> m4_23  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_8 -> m4_24  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_8 -> m4_26  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_11 -> m4_13  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_11 -> m4_15  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_11 -> m4_16  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_11 -> m4_18  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_11 -> m4_23  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_11 -> m4_24  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_11 -> m4_26  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_14 -> m4_16  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_14 -> m4_18  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_14 -> m4_23  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_14 -> m4_24  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_14 -> m4_26  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_17 -> m4_23  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_17 -> m4_24  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_17 -> m4_26  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_25 -> m4_28  [color=darkseagreen4, key=1, label=lastPart, style=dashed];
m4_5 -> m4_7  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_5 -> m4_10  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_5 -> m4_13  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_5 -> m4_16  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_5 -> m4_19  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_5 -> m4_20  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_5 -> m4_24  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_5 -> m4_28  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_5 -> m4_29  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_21 -> m4_24  [color=darkseagreen4, key=1, label=unitsMap, style=dashed];
m5_1 -> m5_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
}
