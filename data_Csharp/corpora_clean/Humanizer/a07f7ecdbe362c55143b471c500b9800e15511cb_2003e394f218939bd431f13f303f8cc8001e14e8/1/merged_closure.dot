digraph  {
n135 [label="Humanizer.Tests.PluralTestSource", span=""];
n0 [cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)", label="Entry Humanizer.Tests.InflectorTests.Pluralize(string, string)", span="35-35"];
n1 [cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)", label="Assert.Equal(plural, singular.Pluralize())", span="37-37"];
n2 [cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)", label="Exit Humanizer.Tests.InflectorTests.Pluralize(string, string)", span="35-35"];
n3 [cluster="string.Pluralize(bool)", label="Entry string.Pluralize(bool)", span="40-40"];
n4 [cluster="Unk.Equal", label="Entry Unk.Equal", span=""];
n5 [cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", label="Entry Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", span="42-42"];
n6 [cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", label="Assert.Equal(plural, plural.Pluralize(false))", span="44-44"];
n7 [cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", label="Assert.Equal(plural, singular.Pluralize(false))", span="45-45"];
n8 [cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", label="Exit Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", span="42-42"];
n9 [cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", label="Entry Humanizer.Tests.InflectorTests.Singularize(string, string)", span="50-50"];
n10 [cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", label="Assert.Equal(singular, plural.Singularize())", span="52-52"];
n11 [cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", label="Exit Humanizer.Tests.InflectorTests.Singularize(string, string)", span="50-50"];
n12 [cluster="string.Singularize(bool)", label="Entry string.Singularize(bool)", span="51-51"];
n13 [cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", label="Entry Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", span="57-57"];
n14 [cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", label="Assert.Equal(singular, singular.Singularize(false))", span="59-59"];
n15 [cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", label="Assert.Equal(singular, plural.Singularize(false))", span="60-60"];
n16 [cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", label="Exit Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", span="57-57"];
n17 [cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", label="Entry Humanizer.Tests.InflectorTests.Titleize(string, string)", span="71-71"];
n18 [cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", label="Assert.Equal(expectedOuput, input.Titleize())", span="73-73"];
n19 [cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", label="Exit Humanizer.Tests.InflectorTests.Titleize(string, string)", span="71-71"];
n20 [cluster="string.Titleize()", label="Entry string.Titleize()", span="61-61"];
n21 [cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", label="Entry Humanizer.Tests.InflectorTests.Dasherize(string, string)", span="81-81"];
n22 [cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", label="Assert.Equal(input.Dasherize(), expectedOutput)", span="83-83"];
n23 [cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", label="Exit Humanizer.Tests.InflectorTests.Dasherize(string, string)", span="81-81"];
n24 [cluster="string.Dasherize()", label="Entry string.Dasherize()", span="104-104"];
n25 [cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)", label="Entry Humanizer.Tests.InflectorTests.Hyphenate(string, string)", span="91-91"];
n26 [cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)", label="Assert.Equal(input.Hyphenate(), expectedOutput)", span="93-93"];
n27 [cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)", label="Exit Humanizer.Tests.InflectorTests.Hyphenate(string, string)", span="91-91"];
n28 [cluster="string.Hyphenate()", label="Entry string.Hyphenate()", span="114-114"];
n29 [cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", label="Entry Humanizer.Tests.InflectorTests.Pascalize(string, string)", span="104-104"];
n30 [cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", label="Assert.Equal(expectedOutput, input.Pascalize())", span="106-106"];
n31 [cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", label="Exit Humanizer.Tests.InflectorTests.Pascalize(string, string)", span="104-104"];
n32 [cluster="string.Pascalize()", label="Entry string.Pascalize()", span="71-71"];
n33 [cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)", label="Entry Humanizer.Tests.InflectorTests.Camelize(string, string)", span="118-118"];
n34 [cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)", label="Assert.Equal(expectedOutput, input.Camelize())", span="120-120"];
n35 [cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)", label="Exit Humanizer.Tests.InflectorTests.Camelize(string, string)", span="118-118"];
n36 [cluster="string.Camelize()", label="Entry string.Camelize()", span="81-81"];
n37 [cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)", label="Entry Humanizer.Tests.InflectorTests.Underscore(string, string)", span="131-131"];
n38 [cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)", label="Assert.Equal(expectedOuput, input.Underscore())", span="133-133"];
n39 [cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)", label="Exit Humanizer.Tests.InflectorTests.Underscore(string, string)", span="131-131"];
n40 [cluster="string.Underscore()", label="Entry string.Underscore()", span="92-92"];
n41 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="Entry Humanizer.Tests.PluralTestSource.GetEnumerator()", span="139-139"];
n42 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''search'', ''searches''};", span="141-141"];
n43 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''switch'', ''switches''};", span="142-142"];
n44 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''fix'', ''fixes''};", span="143-143"];
n45 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''box'', ''boxes''};", span="144-144"];
n46 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''process'', ''processes''};", span="145-145"];
n47 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''address'', ''addresses''};", span="146-146"];
n48 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''case'', ''cases''};", span="147-147"];
n49 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''stack'', ''stacks''};", span="148-148"];
n50 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''wish'', ''wishes''};", span="149-149"];
n51 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''fish'', ''fish''};", span="150-150"];
n52 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''category'', ''categories''};", span="152-152"];
n53 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''query'', ''queries''};", span="153-153"];
n54 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''ability'', ''abilities''};", span="154-154"];
n55 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''agency'', ''agencies''};", span="155-155"];
n56 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''movie'', ''movies''};", span="156-156"];
n57 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''archive'', ''archives''};", span="158-158"];
n58 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''index'', ''indices''};", span="160-160"];
n59 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''wife'', ''wives''};", span="162-162"];
n60 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''safe'', ''saves''};", span="163-163"];
n61 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''half'', ''halves''};", span="164-164"];
n62 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''move'', ''moves''};", span="166-166"];
n63 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''salesperson'', ''salespeople''};", span="168-168"];
n64 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''person'', ''people''};", span="169-169"];
n65 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''spokesman'', ''spokesmen''};", span="171-171"];
n66 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''man'', ''men''};", span="172-172"];
n67 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''woman'', ''women''};", span="173-173"];
n68 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''basis'', ''bases''};", span="175-175"];
n69 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''diagnosis'', ''diagnoses''};", span="176-176"];
n70 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''datum'', ''data''};", span="178-178"];
n71 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''medium'', ''media''};", span="179-179"];
n72 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''analysis'', ''analyses''};", span="180-180"];
n73 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''node_child'', ''node_children''};", span="182-182"];
n74 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''child'', ''children''};", span="183-183"];
n75 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''experience'', ''experiences''};", span="185-185"];
n76 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''day'', ''days''};", span="186-186"];
n77 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''comment'', ''comments''};", span="188-188"];
n78 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''foobar'', ''foobars''};", span="189-189"];
n79 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''newsletter'', ''newsletters''};", span="190-190"];
n80 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''old_news'', ''old_news''};", span="192-192"];
n81 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''news'', ''news''};", span="193-193"];
n82 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''series'', ''series''};", span="195-195"];
n83 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''species'', ''species''};", span="196-196"];
n84 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''quiz'', ''quizzes''};", span="198-198"];
n85 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''perspective'', ''perspectives''};", span="200-200"];
n86 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''ox'', ''oxen''};", span="202-202"];
n87 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''photo'', ''photos''};", span="203-203"];
n88 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''buffalo'', ''buffaloes''};", span="204-204"];
n89 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''tomato'', ''tomatoes''};", span="205-205"];
n90 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''dwarf'', ''dwarves''};", span="206-206"];
n91 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''elf'', ''elves''};", span="207-207"];
n92 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''information'', ''information''};", span="208-208"];
n93 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''equipment'', ''equipment''};", span="209-209"];
n94 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''bus'', ''buses''};", span="210-210"];
n95 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''status'', ''statuses''};", span="211-211"];
n96 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''status_code'', ''status_codes''};", span="212-212"];
n97 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''mouse'', ''mice''};", span="213-213"];
n98 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''louse'', ''lice''};", span="215-215"];
n99 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''house'', ''houses''};", span="216-216"];
n100 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''octopus'', ''octopi''};", span="217-217"];
n101 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''virus'', ''viri''};", span="218-218"];
n102 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''alias'', ''aliases''};", span="219-219"];
n103 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''portfolio'', ''portfolios''};", span="220-220"];
n104 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''criterion'', ''criteria''};", span="221-221"];
n105 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''vertex'', ''vertices''};", span="223-223"];
n106 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''matrix'', ''matrices''};", span="224-224"];
n107 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''axis'', ''axes''};", span="226-226"];
n108 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''testis'', ''testes''};", span="227-227"];
n109 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''crisis'', ''crises''};", span="228-228"];
n110 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''rice'', ''rice''};", span="230-230"];
n111 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''shoe'', ''shoes''};", span="231-231"];
n112 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''horse'', ''horses''};", span="233-233"];
n113 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''prize'', ''prizes''};", span="234-234"];
n114 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''edge'', ''edges''};", span="235-235"];
n115 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''goose'', ''geese''};", span="238-238"];
n116 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''deer'', ''deer''};", span="239-239"];
n117 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''sheep'', ''sheep''};", span="240-240"];
n118 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''wolf'', ''wolves''};", span="241-241"];
n119 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''volcano'', ''volcanoes''};", span="242-242"];
n120 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''aircraft'', ''aircraft''};", span="243-243"];
n121 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''alumna'', ''alumnae''};", span="244-244"];
n122 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''alumnus'', ''alumni''};", span="245-245"];
n123 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''fungus'', ''fungi''};", span="246-246"];
n124 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''water'', ''water''};", span="247-247"];
n125 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''waters'', ''waters''};", span="248-248"];
n126 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''semen'', ''semen''};", span="249-249"];
n127 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''sperm'', ''sperm''};", span="250-250"];
n128 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''wave'',''waves''};", span="252-252"];
n129 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="yield return new object[] {''campus'', ''campuses''};", span="254-254"];
n131 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", label="Exit Humanizer.Tests.PluralTestSource.GetEnumerator()", span="139-139"];
n132 [cluster="Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", label="Entry Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", span="259-259"];
n133 [cluster="Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", label="return GetEnumerator();", span="261-261"];
n134 [cluster="Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", label="Exit Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", span="259-259"];
d130 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''is'', ''are''};", prediction=0, span="256-256"];
d131 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''addendum'',''addenda''};", prediction=1, span="259-259"];
d132 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''alga'',''algae''};", prediction=2, span="260-260"];
d133 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''apparatus'',''apparatuses''};", prediction=3, span="261-261"];
d134 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''appendix'',''appendices''};", prediction=4, span="262-262"];
d135 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''bias'',''biases''};", prediction=5, span="263-263"];
d136 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''bison'',''bison''};", prediction=6, span="264-264"];
d137 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''blitz'',''blitzes''};", prediction=7, span="265-265"];
d138 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''buzz'',''buzzes''};", prediction=8, span="266-266"];
d139 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''cactus'',''cacti''};", prediction=9, span="267-267"];
d140 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''codex'',''codices''};", prediction=10, span="268-268"];
d141 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''corps'',''corps''};", prediction=11, span="269-269"];
d142 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''corpus'',''corpora''};", prediction=12, span="270-270"];
d143 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''curriculum'',''curricula''};", prediction=13, span="271-271"];
d144 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''database'',''databases''};", prediction=14, span="272-272"];
d145 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''die'',''dice''};", prediction=15, span="273-273"];
d146 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''echo'',''echoes''};", prediction=16, span="274-274"];
d147 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''ellipsis'',''ellipses''};", prediction=17, span="275-275"];
d148 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''elk'',''elk''};", prediction=18, span="276-276"];
d149 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''emphasis'',''emphases''};", prediction=19, span="277-277"];
d150 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''embargo'',''embargoes''};", prediction=20, span="278-278"];
d151 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''focus'',''foci''};", prediction=21, span="279-279"];
d152 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''foot'',''feet''};", prediction=22, span="280-280"];
d153 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''genus'',''genera''};", prediction=23, span="281-281"];
d154 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''grass'',''grass''};", prediction=24, span="282-282"];
d155 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''hair'',''hair''};", prediction=25, span="283-283"];
d156 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''hero'',''heroes''};", prediction=26, span="284-284"];
d157 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''hippopotamus'',''hippopotami''};", prediction=27, span="285-285"];
d158 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''hoof'',''hooves''};", prediction=28, span="286-286"];
d159 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''iris'',''irises''};", prediction=29, span="287-287"];
d160 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''larva'',''larvae''};", prediction=30, span="288-288"];
d161 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''leaf'',''leaves''};", prediction=31, span="289-289"];
d162 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''loaf'',''loaves''};", prediction=32, span="290-290"];
d163 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''luggage'',''luggage''};", prediction=33, span="291-291"];
d164 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''means'',''means''};", prediction=34, span="292-292"];
d165 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''millennium'',''milennia''};", prediction=35, span="293-293"];
d166 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''minutia'',''minutiae''};", prediction=36, span="294-294"];
d167 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''moose'',''moose''};", prediction=37, span="295-295"];
d168 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''mosquito'',''mosquitoes''};", prediction=38, span="296-296"];
d169 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''mud'',''mud''};", prediction=39, span="297-297"];
d170 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''nucleus'',''nuclei''};", prediction=40, span="298-298"];
d171 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''neurosis'',''neuroses''};", prediction=41, span="299-299"];
d172 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''oasis'',''oases''};", prediction=42, span="300-300"];
d173 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''offspring'',''offspring''};", prediction=43, span="301-301"];
d174 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''paralysis'',''paralyses''};", prediction=44, span="302-302"];
d175 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''phenomenon'',''phenomena''};", prediction=45, span="303-303"];
d176 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''potato'',''potatoes''};", prediction=46, span="304-304"];
d177 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''radius'',''radii''};", prediction=47, span="305-305"];
d178 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''salmon'',''salmon''};", prediction=48, span="306-306"];
d179 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''scissors'',''scissors''};", prediction=49, span="307-307"];
d180 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''shoe'',''shoees''};", prediction=50, span="308-308"];
d181 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''shrimp'',''shrimp''};", prediction=51, span="309-309"];
d182 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''someone'',''someone''};", prediction=52, span="310-310"];
d183 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''stimulus'',''stimuli''};", prediction=53, span="311-311"];
d184 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''swine'',''swine''};", prediction=54, span="312-312"];
d185 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''syllabus'',''syllabi''};", prediction=55, span="313-313"];
d186 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''that'',''those''};", prediction=56, span="314-314"];
d187 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''thief'',''thieves''};", prediction=57, span="315-315"];
d188 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''this'',''these''};", prediction=58, span="316-316"];
d189 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''tooth'',''teeth''};", prediction=59, span="317-317"];
d190 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''torpedo'',''torpedoes''};", prediction=60, span="318-318"];
d191 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''trellis'',''trellises''};", prediction=61, span="319-319"];
d192 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''trout'',''trout''};", prediction=62, span="320-320"];
d193 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''tuna'',''tuna''};", prediction=63, span="321-321"];
d194 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''vertebra'',''vertebrae''};", prediction=64, span="322-322"];
d195 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''veto'',''vetoes''};", prediction=65, span="323-323"];
d196 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''virus'',''viruses''};", prediction=66, span="324-324"];
d197 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''vita'',''vitae''};", prediction=67, span="325-325"];
d198 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''walrus'',''walruses''};", prediction=68, span="326-326"];
d199 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''waltz'',''waltzes''};", prediction=69, span="327-327"];
d200 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''water'',''water''};", prediction=70, span="328-328"];
d201 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0, label="yield return new object[] {''zombie'',''zombies''};", prediction=71, span="329-329"];
m0_6 [cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", file="Vocabularies.cs", label="Assert.Equal(plural, plural.Pluralize(false))", span="44-44"];
m0_7 [cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", file="Vocabularies.cs", label="Assert.Equal(plural, singular.Pluralize(false))", span="45-45"];
m0_28 [cluster="string.Hyphenate()", file="Vocabularies.cs", label="Entry string.Hyphenate()", span="138-138"];
m0_21 [cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", file="Vocabularies.cs", label="Entry Humanizer.Tests.InflectorTests.Dasherize(string, string)", span="81-81"];
m0_22 [cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", file="Vocabularies.cs", label="Assert.Equal(input.Dasherize(), expectedOutput)", span="83-83"];
m0_23 [cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", file="Vocabularies.cs", label="Exit Humanizer.Tests.InflectorTests.Dasherize(string, string)", span="81-81"];
m0_33 [cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)", file="Vocabularies.cs", label="Entry Humanizer.Tests.InflectorTests.Camelize(string, string)", span="118-118"];
m0_34 [cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)", color=green, community=0, file="Vocabularies.cs", label="Assert.Equal(expectedOutput, input.Camelize())", prediction=72, span="120-120"];
m0_35 [cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)", file="Vocabularies.cs", label="Exit Humanizer.Tests.InflectorTests.Camelize(string, string)", span="118-118"];
m0_41 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="Entry Humanizer.Tests.PluralTestSource.GetEnumerator()", span="139-139"];
m0_42 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''search'', ''searches''};", span="141-141"];
m0_43 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''switch'', ''switches''};", span="142-142"];
m0_44 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''fix'', ''fixes''};", span="143-143"];
m0_45 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''box'', ''boxes''};", span="144-144"];
m0_46 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''process'', ''processes''};", span="145-145"];
m0_47 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''address'', ''addresses''};", span="146-146"];
m0_48 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''case'', ''cases''};", span="147-147"];
m0_49 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''stack'', ''stacks''};", span="148-148"];
m0_50 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''wish'', ''wishes''};", span="149-149"];
m0_51 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''fish'', ''fish''};", span="150-150"];
m0_52 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''category'', ''categories''};", span="152-152"];
m0_53 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''query'', ''queries''};", span="153-153"];
m0_54 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''ability'', ''abilities''};", span="154-154"];
m0_55 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''agency'', ''agencies''};", span="155-155"];
m0_56 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''movie'', ''movies''};", span="156-156"];
m0_57 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''archive'', ''archives''};", span="158-158"];
m0_58 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''index'', ''indices''};", span="160-160"];
m0_59 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''wife'', ''wives''};", span="162-162"];
m0_60 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''safe'', ''saves''};", span="163-163"];
m0_61 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''half'', ''halves''};", span="164-164"];
m0_62 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''move'', ''moves''};", span="166-166"];
m0_63 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''salesperson'', ''salespeople''};", span="168-168"];
m0_64 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''person'', ''people''};", span="169-169"];
m0_65 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''spokesman'', ''spokesmen''};", span="171-171"];
m0_66 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''man'', ''men''};", span="172-172"];
m0_67 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''woman'', ''women''};", span="173-173"];
m0_68 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''basis'', ''bases''};", span="175-175"];
m0_69 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''diagnosis'', ''diagnoses''};", span="176-176"];
m0_70 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''datum'', ''data''};", span="178-178"];
m0_71 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''medium'', ''media''};", span="179-179"];
m0_72 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''analysis'', ''analyses''};", span="180-180"];
m0_73 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''node_child'', ''node_children''};", span="182-182"];
m0_74 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''child'', ''children''};", span="183-183"];
m0_75 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''experience'', ''experiences''};", span="185-185"];
m0_76 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''day'', ''days''};", span="186-186"];
m0_77 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''comment'', ''comments''};", span="188-188"];
m0_78 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''foobar'', ''foobars''};", span="189-189"];
m0_79 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''newsletter'', ''newsletters''};", span="190-190"];
m0_80 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''old_news'', ''old_news''};", span="192-192"];
m0_81 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''news'', ''news''};", span="193-193"];
m0_82 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''series'', ''series''};", span="195-195"];
m0_83 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''species'', ''species''};", span="196-196"];
m0_84 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''quiz'', ''quizzes''};", span="198-198"];
m0_85 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''perspective'', ''perspectives''};", span="200-200"];
m0_86 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''ox'', ''oxen''};", span="202-202"];
m0_87 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''photo'', ''photos''};", span="203-203"];
m0_88 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''buffalo'', ''buffaloes''};", span="204-204"];
m0_89 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''tomato'', ''tomatoes''};", span="205-205"];
m0_90 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''dwarf'', ''dwarves''};", span="206-206"];
m0_91 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''elf'', ''elves''};", span="207-207"];
m0_92 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''information'', ''information''};", span="208-208"];
m0_93 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''equipment'', ''equipment''};", span="209-209"];
m0_94 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''bus'', ''buses''};", span="210-210"];
m0_95 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''status'', ''statuses''};", span="211-211"];
m0_96 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''status_code'', ''status_codes''};", span="212-212"];
m0_97 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''mouse'', ''mice''};", span="213-213"];
m0_98 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''louse'', ''lice''};", span="215-215"];
m0_99 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''house'', ''houses''};", span="216-216"];
m0_100 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''octopus'', ''octopi''};", span="217-217"];
m0_101 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''virus'', ''viri''};", span="218-218"];
m0_102 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''alias'', ''aliases''};", span="219-219"];
m0_103 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''portfolio'', ''portfolios''};", span="220-220"];
m0_104 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''criterion'', ''criteria''};", span="221-221"];
m0_105 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''vertex'', ''vertices''};", span="223-223"];
m0_106 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''matrix'', ''matrices''};", span="224-224"];
m0_107 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''axis'', ''axes''};", span="226-226"];
m0_108 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''testis'', ''testes''};", span="227-227"];
m0_109 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''crisis'', ''crises''};", span="228-228"];
m0_110 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''rice'', ''rice''};", span="230-230"];
m0_111 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''shoe'', ''shoes''};", span="231-231"];
m0_112 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''horse'', ''horses''};", span="233-233"];
m0_113 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''prize'', ''prizes''};", span="234-234"];
m0_114 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''edge'', ''edges''};", span="235-235"];
m0_115 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''goose'', ''geese''};", span="238-238"];
m0_116 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''deer'', ''deer''};", span="239-239"];
m0_117 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''sheep'', ''sheep''};", span="240-240"];
m0_118 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''wolf'', ''wolves''};", span="241-241"];
m0_119 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''volcano'', ''volcanoes''};", span="242-242"];
m0_120 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''aircraft'', ''aircraft''};", span="243-243"];
m0_121 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''alumna'', ''alumnae''};", span="244-244"];
m0_122 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''alumnus'', ''alumni''};", span="245-245"];
m0_123 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''fungus'', ''fungi''};", span="246-246"];
m0_124 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''wave'',''waves''};", span="248-248"];
m0_125 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] {''campus'', ''campuses''};", span="250-250"];
m0_126 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="yield return new object[] { ''is'', ''are'' };", span="252-252"];
m0_127 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs", label="Exit Humanizer.Tests.PluralTestSource.GetEnumerator()", span="139-139"];
m0_4 [cluster="Unk.Equal", file="Vocabularies.cs", label="Entry Unk.Equal", span=""];
m0_13 [cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", file="Vocabularies.cs", label="Entry Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", span="57-57"];
m0_14 [cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", file="Vocabularies.cs", label="Assert.Equal(singular, singular.Singularize(false))", span="59-59"];
m0_15 [cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", file="Vocabularies.cs", label="Assert.Equal(singular, plural.Singularize(false))", span="60-60"];
m0_16 [cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", file="Vocabularies.cs", label="Exit Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", span="57-57"];
m0_37 [cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)", file="Vocabularies.cs", label="Entry Humanizer.Tests.InflectorTests.Underscore(string, string)", span="131-131"];
m0_38 [cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)", file="Vocabularies.cs", label="Assert.Equal(expectedOuput, input.Underscore())", span="133-133"];
m0_39 [cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)", file="Vocabularies.cs", label="Exit Humanizer.Tests.InflectorTests.Underscore(string, string)", span="131-131"];
m0_32 [cluster="string.Pascalize()", file="Vocabularies.cs", label="Entry string.Pascalize()", span="95-95"];
m0_17 [cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", file="Vocabularies.cs", label="Entry Humanizer.Tests.InflectorTests.Titleize(string, string)", span="71-71"];
m0_18 [cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", file="Vocabularies.cs", label="Assert.Equal(expectedOuput, input.Titleize())", span="73-73"];
m0_19 [cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", file="Vocabularies.cs", label="Exit Humanizer.Tests.InflectorTests.Titleize(string, string)", span="71-71"];
m0_20 [cluster="string.Titleize()", file="Vocabularies.cs", label="Entry string.Titleize()", span="85-85"];
m0_0 [cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)", file="Vocabularies.cs", label="Entry Humanizer.Tests.InflectorTests.Pluralize(string, string)", span="35-35"];
m0_1 [cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)", color=green, community=0, file="Vocabularies.cs", label="Assert.Equal(plural, singular.Pluralize())", prediction=73, span="37-37"];
m0_2 [cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)", file="Vocabularies.cs", label="Exit Humanizer.Tests.InflectorTests.Pluralize(string, string)", span="35-35"];
m0_3 [cluster="string.Pluralize(bool)", file="Vocabularies.cs", label="Entry string.Pluralize(bool)", span="52-52"];
m0_12 [cluster="string.Singularize(bool)", file="Vocabularies.cs", label="Entry string.Singularize(bool)", span="75-75"];
m0_24 [cluster="string.Dasherize()", file="Vocabularies.cs", label="Entry string.Dasherize()", span="128-128"];
m0_9 [cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", file="Vocabularies.cs", label="Entry Humanizer.Tests.InflectorTests.Singularize(string, string)", span="50-50"];
m0_10 [cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", file="Vocabularies.cs", label="Assert.Equal(singular, plural.Singularize())", span="52-52"];
m0_11 [cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", file="Vocabularies.cs", label="Exit Humanizer.Tests.InflectorTests.Singularize(string, string)", span="50-50"];
m0_29 [cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", file="Vocabularies.cs", label="Entry Humanizer.Tests.InflectorTests.Pascalize(string, string)", span="104-104"];
m0_30 [cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", file="Vocabularies.cs", label="Assert.Equal(expectedOutput, input.Pascalize())", span="106-106"];
m0_31 [cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", file="Vocabularies.cs", label="Exit Humanizer.Tests.InflectorTests.Pascalize(string, string)", span="104-104"];
m0_25 [cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)", file="Vocabularies.cs", label="Entry Humanizer.Tests.InflectorTests.Hyphenate(string, string)", span="91-91"];
m0_26 [cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)", file="Vocabularies.cs", label="Assert.Equal(input.Hyphenate(), expectedOutput)", span="93-93"];
m0_27 [cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)", file="Vocabularies.cs", label="Exit Humanizer.Tests.InflectorTests.Hyphenate(string, string)", span="91-91"];
m0_128 [cluster="Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", file="Vocabularies.cs", label="Entry Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", span="255-255"];
m0_129 [cluster="Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", file="Vocabularies.cs", label="return GetEnumerator();", span="257-257"];
m0_130 [cluster="Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", file="Vocabularies.cs", label="Exit Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", span="255-255"];
m0_36 [cluster="string.Camelize()", file="Vocabularies.cs", label="Entry string.Camelize()", span="105-105"];
m0_40 [cluster="string.Underscore()", file="Vocabularies.cs", label="Entry string.Underscore()", span="116-116"];
m0_131 [file="Vocabularies.cs", label="Humanizer.Tests.PluralTestSource", span=""];
n135 -> n133  [color=darkseagreen4, key=1, label="Humanizer.Tests.PluralTestSource", style=dashed];
n5 -> n7  [color=darkseagreen4, key=1, label=string, style=dashed];
n13 -> n15  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_13 -> m0_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_131 -> m0_129  [color=darkseagreen4, key=1, label="Humanizer.Tests.PluralTestSource", style=dashed];
}
