digraph  {
d1 [label="return new DateTime(date.Year, date.Month, date.Day, hour, min, second, millisecond);", span="7-7", cluster="Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", color=green, community=0];
d0 [label="Entry Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", span="5-5", cluster="Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)"];
d2 [label="Exit Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", span="5-5", cluster="Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)"];
d3 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, int)"];
d5 [label="return date.At(0);", span="17-17", cluster="Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", color=green, community=0];
d4 [label="Entry Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", span="15-15", cluster="Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)"];
d6 [label="Exit Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", span="15-15", cluster="Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)"];
d7 [label="Entry System.DateTime.At(int, int, int, int)", span="5-5", cluster="System.DateTime.At(int, int, int, int)"];
d9 [label="return date.At(12);", span="27-27", cluster="Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", color=green, community=0];
d8 [label="Entry Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", span="25-25", cluster="Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)"];
d10 [label="Exit Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", span="25-25", cluster="Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)"];
d12 [label="return new DateTime(year, date.Month, date.Day, date.Hour, date.Minute, date.Second, date.Millisecond);", span="38-38", cluster="Humanizer.PrepositionsExtensions.In(System.DateTime, int)", color=green, community=0];
d11 [label="Entry Humanizer.PrepositionsExtensions.In(System.DateTime, int)", span="36-36", cluster="Humanizer.PrepositionsExtensions.In(System.DateTime, int)"];
d13 [label="Exit Humanizer.PrepositionsExtensions.In(System.DateTime, int)", span="36-36", cluster="Humanizer.PrepositionsExtensions.In(System.DateTime, int)"];
m2_0 [label="Entry Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", span="15-15", cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", file="CreatingMethods.cs"];
m2_1 [label="string towords", span="17-17", cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", color=green, community=0, file="CreatingMethods.cs"];
m2_2 [label="ExceptionNumbersToWords(number, out towords)", span="19-19", cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", color=green, community=0, file="CreatingMethods.cs"];
m2_3 [label="return towords;", span="20-20", cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", color=green, community=0, file="CreatingMethods.cs"];
m2_4 [label="number > 20", span="23-23", cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", color=green, community=0, file="CreatingMethods.cs"];
m2_5 [label="string exceptionPart", span="25-25", cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", color=green, community=0, file="CreatingMethods.cs"];
m2_10 [label="return NormalNumberToWords(number);", span="34-34", cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", color=green, community=0, file="CreatingMethods.cs"];
m2_6 [label="ExceptionNumbersToWords(number%10, out exceptionPart)", span="26-26", cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", color=green, community=0, file="CreatingMethods.cs"];
m2_7 [label="var normalPart = number - number%10", span="28-28", cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", color=green, community=0, file="CreatingMethods.cs"];
m2_9 [label="return towords + '' '' + exceptionPart;", span="30-30", cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", color=green, community=0, file="CreatingMethods.cs"];
m2_8 [label="towords = RemoveOnePrefix(normalPart.ToWords())", span="29-29", cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", color=green, community=0, file="CreatingMethods.cs"];
m2_11 [label="Exit Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", span="15-15", cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", file="CreatingMethods.cs"];
m2_34 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="CreatingMethods.cs"];
m2_22 [label="Entry string.Replace(char, char)", span="0-0", cluster="string.Replace(char, char)", file="CreatingMethods.cs"];
m2_35 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="CreatingMethods.cs"];
m2_23 [label="Entry string.EndsWith(string)", span="0-0", cluster="string.EndsWith(string)", file="CreatingMethods.cs"];
m2_12 [label="Entry Humanizer.NumberToOrdinalWordsExtension.ExceptionNumbersToWords(int, out string)", span="58-58", cluster="Humanizer.NumberToOrdinalWordsExtension.ExceptionNumbersToWords(int, out string)", file="CreatingMethods.cs"];
m2_31 [label="var exceptions = new Dictionary<int, string>\r\n            {\r\n                {1, ''first''},\r\n                {2, ''second''},\r\n                {3, ''third''},\r\n                {4, ''forth''},\r\n                {5, ''fifth''},\r\n                {8, ''eighth''},\r\n                {9, ''ninth''},\r\n                {12, ''twelfth''},\r\n            }", span="60-70", cluster="Humanizer.NumberToOrdinalWordsExtension.ExceptionNumbersToWords(int, out string)", color=green, community=0, file="CreatingMethods.cs"];
m2_32 [label="return exceptions.TryGetValue(number, out words);", span="72-72", cluster="Humanizer.NumberToOrdinalWordsExtension.ExceptionNumbersToWords(int, out string)", color=green, community=0, file="CreatingMethods.cs"];
m2_33 [label="Exit Humanizer.NumberToOrdinalWordsExtension.ExceptionNumbersToWords(int, out string)", span="58-58", cluster="Humanizer.NumberToOrdinalWordsExtension.ExceptionNumbersToWords(int, out string)", file="CreatingMethods.cs"];
m2_13 [label="Entry int.ToWords()", span="16-16", cluster="int.ToWords()", file="CreatingMethods.cs"];
m2_30 [label="Entry string.Remove(int, int)", span="0-0", cluster="string.Remove(int, int)", file="CreatingMethods.cs"];
m2_24 [label="Entry string.TrimEnd(params char[])", span="0-0", cluster="string.TrimEnd(params char[])", file="CreatingMethods.cs"];
m2_14 [label="Entry Humanizer.NumberToOrdinalWordsExtension.RemoveOnePrefix(string)", span="49-49", cluster="Humanizer.NumberToOrdinalWordsExtension.RemoveOnePrefix(string)", file="CreatingMethods.cs"];
m2_25 [label="towords.IndexOf(''one'', StringComparison.Ordinal) == 0", span="52-52", cluster="Humanizer.NumberToOrdinalWordsExtension.RemoveOnePrefix(string)", color=green, community=0, file="CreatingMethods.cs"];
m2_26 [label="towords = towords.Remove(0, 4)", span="53-53", cluster="Humanizer.NumberToOrdinalWordsExtension.RemoveOnePrefix(string)", color=green, community=0, file="CreatingMethods.cs"];
m2_27 [label="return towords;", span="55-55", cluster="Humanizer.NumberToOrdinalWordsExtension.RemoveOnePrefix(string)", color=green, community=0, file="CreatingMethods.cs"];
m2_28 [label="Exit Humanizer.NumberToOrdinalWordsExtension.RemoveOnePrefix(string)", span="49-49", cluster="Humanizer.NumberToOrdinalWordsExtension.RemoveOnePrefix(string)", file="CreatingMethods.cs"];
m2_15 [label="Entry Humanizer.NumberToOrdinalWordsExtension.NormalNumberToWords(int)", span="37-37", cluster="Humanizer.NumberToOrdinalWordsExtension.NormalNumberToWords(int)", file="CreatingMethods.cs"];
m2_16 [label="string towords = number.ToWords().Replace('-', ' ')", span="39-39", cluster="Humanizer.NumberToOrdinalWordsExtension.NormalNumberToWords(int)", color=green, community=0, file="CreatingMethods.cs"];
m2_17 [label="towords = RemoveOnePrefix(towords)", span="41-41", cluster="Humanizer.NumberToOrdinalWordsExtension.NormalNumberToWords(int)", color=green, community=0, file="CreatingMethods.cs"];
m2_18 [label="towords.EndsWith(''y'')", span="43-43", cluster="Humanizer.NumberToOrdinalWordsExtension.NormalNumberToWords(int)", color=green, community=0, file="CreatingMethods.cs"];
m2_19 [label="towords = towords.TrimEnd('y') + ''ie''", span="44-44", cluster="Humanizer.NumberToOrdinalWordsExtension.NormalNumberToWords(int)", color=green, community=0, file="CreatingMethods.cs"];
m2_20 [label="return towords + ''th'';", span="46-46", cluster="Humanizer.NumberToOrdinalWordsExtension.NormalNumberToWords(int)", color=green, community=0, file="CreatingMethods.cs"];
m2_21 [label="Exit Humanizer.NumberToOrdinalWordsExtension.NormalNumberToWords(int)", span="37-37", cluster="Humanizer.NumberToOrdinalWordsExtension.NormalNumberToWords(int)", file="CreatingMethods.cs"];
m2_29 [label="Entry string.IndexOf(string, System.StringComparison)", span="0-0", cluster="string.IndexOf(string, System.StringComparison)", file="CreatingMethods.cs"];
m3_0 [label="Entry Humanizer.Configuration.Configurator.CurrentLanguageIs(string)", span="33-33", cluster="Humanizer.Configuration.Configurator.CurrentLanguageIs(string)", file="DateHumanizeExtensions.cs"];
m3_1 [label="return string.Equals(CultureInfo.CurrentCulture.TwoLetterISOLanguageName, twoLetterCode, StringComparison.OrdinalIgnoreCase);", span="35-35", cluster="Humanizer.Configuration.Configurator.CurrentLanguageIs(string)", color=green, community=0, file="DateHumanizeExtensions.cs"];
m3_2 [label="Exit Humanizer.Configuration.Configurator.CurrentLanguageIs(string)", span="33-33", cluster="Humanizer.Configuration.Configurator.CurrentLanguageIs(string)", file="DateHumanizeExtensions.cs"];
m3_3 [label="Entry string.Equals(string, string, System.StringComparison)", span="0-0", cluster="string.Equals(string, string, System.StringComparison)", file="DateHumanizeExtensions.cs"];
m4_6 [label="Entry T.ToMaybe<T>()", span="82-82", cluster="T.ToMaybe<T>()", file="DateHumanizeTests.cs"];
m4_0 [label="Entry CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", span="11-11", cluster="CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="DateHumanizeTests.cs"];
m4_1 [label="this.index = index", span="14-14", cluster="CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", color=green, community=0, file="DateHumanizeTests.cs"];
m4_2 [label="Exit CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", span="11-11", cluster="CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, int, int, string, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="DateHumanizeTests.cs"];
m4_3 [label="Entry CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", span="17-17", cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", file="DateHumanizeTests.cs"];
m4_4 [label="return new ValueSpecification(\r\n                attribute.Index,\r\n                attribute.Required,\r\n                attribute.Min,\r\n                attribute.Max,\r\n                attribute.Separator,\r\n                attribute.DefaultValue.ToMaybe(),\r\n                conversionType);", span="19-26", cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", color=green, community=0, file="DateHumanizeTests.cs"];
m4_5 [label="Exit CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", span="17-17", cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", file="DateHumanizeTests.cs"];
m4_7 [label="CommandLine.Core.ValueSpecification", span="", file="DateHumanizeTests.cs"];
d1 -> d2  [key=0, style=solid, color=green];
d1 -> d3  [key=2, style=dotted, color=green];
d0 -> d1  [key=0, style=solid, color=green];
d2 -> d0  [key=0, style=bold, color=blue];
d5 -> d6  [key=0, style=solid, color=green];
d5 -> d7  [key=2, style=dotted, color=green];
d4 -> d5  [key=0, style=solid, color=green];
d6 -> d4  [key=0, style=bold, color=blue];
d9 -> d10  [key=0, style=solid, color=green];
d9 -> d7  [key=2, style=dotted, color=green];
d8 -> d9  [key=0, style=solid, color=green];
d10 -> d8  [key=0, style=bold, color=blue];
d12 -> d13  [key=0, style=solid, color=green];
d12 -> d3  [key=2, style=dotted, color=green];
d11 -> d12  [key=0, style=solid, color=green];
d13 -> d11  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid, color=green];
m2_0 -> m2_2  [key=1, style=dashed, color=green, label=int];
m2_0 -> m2_4  [key=1, style=dashed, color=green, label=int];
m2_0 -> m2_6  [key=1, style=dashed, color=green, label=int];
m2_0 -> m2_7  [key=1, style=dashed, color=green, label=int];
m2_0 -> m2_10  [key=1, style=dashed, color=green, label=int];
m2_1 -> m2_2  [key=0, style=solid, color=green];
m2_2 -> m2_3  [key=0, style=solid, color=green];
m2_2 -> m2_4  [key=0, style=solid, color=green];
m2_2 -> m2_12  [key=2, style=dotted, color=green];
m2_3 -> m2_11  [key=0, style=solid, color=green];
m2_4 -> m2_5  [key=0, style=solid, color=green];
m2_4 -> m2_10  [key=0, style=solid, color=green];
m2_5 -> m2_6  [key=0, style=solid, color=green];
m2_10 -> m2_11  [key=0, style=solid, color=green];
m2_10 -> m2_15  [key=2, style=dotted, color=green];
m2_6 -> m2_7  [key=0, style=solid, color=green];
m2_6 -> m2_10  [key=0, style=solid, color=green];
m2_6 -> m2_12  [key=2, style=dotted, color=green];
m2_6 -> m2_9  [key=1, style=dashed, color=green, label=exceptionPart];
m2_7 -> m2_8  [key=0, style=solid, color=green];
m2_9 -> m2_11  [key=0, style=solid, color=green];
m2_8 -> m2_9  [key=0, style=solid, color=green];
m2_8 -> m2_13  [key=2, style=dotted, color=green];
m2_8 -> m2_14  [key=2, style=dotted, color=green];
m2_11 -> m2_0  [key=0, style=bold, color=blue];
m2_12 -> m2_31  [key=0, style=solid, color=green];
m2_12 -> m2_32  [key=1, style=dashed, color=green, label=int];
m2_31 -> m2_32  [key=0, style=solid, color=green];
m2_31 -> m2_34  [key=2, style=dotted, color=green];
m2_32 -> m2_33  [key=0, style=solid, color=green];
m2_32 -> m2_35  [key=2, style=dotted, color=green];
m2_33 -> m2_12  [key=0, style=bold, color=blue];
m2_14 -> m2_25  [key=0, style=solid, color=green];
m2_14 -> m2_26  [key=1, style=dashed, color=green, label=string];
m2_14 -> m2_27  [key=1, style=dashed, color=green, label=string];
m2_25 -> m2_26  [key=0, style=solid, color=green];
m2_25 -> m2_27  [key=0, style=solid, color=green];
m2_25 -> m2_29  [key=2, style=dotted, color=green];
m2_26 -> m2_26  [key=1, style=dashed, color=green, label=string];
m2_26 -> m2_27  [key=0, style=solid, color=green];
m2_26 -> m2_30  [key=2, style=dotted, color=green];
m2_27 -> m2_28  [key=0, style=solid, color=green];
m2_28 -> m2_14  [key=0, style=bold, color=blue];
m2_15 -> m2_16  [key=0, style=solid, color=green];
m2_16 -> m2_17  [key=0, style=solid, color=green];
m2_16 -> m2_13  [key=2, style=dotted, color=green];
m2_16 -> m2_22  [key=2, style=dotted, color=green];
m2_17 -> m2_17  [key=1, style=dashed, color=green, label=towords];
m2_17 -> m2_18  [key=0, style=solid, color=green];
m2_17 -> m2_14  [key=2, style=dotted, color=green];
m2_17 -> m2_19  [key=1, style=dashed, color=green, label=towords];
m2_17 -> m2_20  [key=1, style=dashed, color=green, label=towords];
m2_18 -> m2_19  [key=0, style=solid, color=green];
m2_18 -> m2_20  [key=0, style=solid, color=green];
m2_18 -> m2_23  [key=2, style=dotted, color=green];
m2_19 -> m2_19  [key=1, style=dashed, color=green, label=towords];
m2_19 -> m2_20  [key=0, style=solid, color=green];
m2_19 -> m2_24  [key=2, style=dotted, color=green];
m2_20 -> m2_21  [key=0, style=solid, color=green];
m2_21 -> m2_15  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid, color=green];
m3_1 -> m3_2  [key=0, style=solid, color=green];
m3_1 -> m3_3  [key=2, style=dotted, color=green];
m3_2 -> m3_0  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid, color=green];
m4_1 -> m4_2  [key=0, style=solid, color=green];
m4_2 -> m4_0  [key=0, style=bold, color=blue];
m4_3 -> m4_4  [key=0, style=solid, color=green];
m4_4 -> m4_5  [key=0, style=solid, color=green];
m4_4 -> m4_0  [key=2, style=dotted, color=green];
m4_4 -> m4_6  [key=2, style=dotted, color=green];
m4_5 -> m4_3  [key=0, style=bold, color=blue];
m4_7 -> m4_1  [key=1, style=dashed, color=green, label="CommandLine.Core.ValueSpecification"];
}
