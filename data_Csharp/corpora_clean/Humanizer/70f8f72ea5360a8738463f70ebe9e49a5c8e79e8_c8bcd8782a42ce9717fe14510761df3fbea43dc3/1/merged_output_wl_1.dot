digraph  {
n0 [cluster="Humanizer.Localisation.Formatters.ArabicFormatter.GetResourceKey(string, int)", label="Entry Humanizer.Localisation.Formatters.ArabicFormatter.GetResourceKey(string, int)", span="7-7"];
n1 [cluster="Humanizer.Localisation.Formatters.ArabicFormatter.GetResourceKey(string, int)", label="number == 2", span="10-10"];
n2 [cluster="Humanizer.Localisation.Formatters.ArabicFormatter.GetResourceKey(string, int)", label="return resourceKey + DualPostfix;", span="11-11"];
n3 [cluster="Humanizer.Localisation.Formatters.ArabicFormatter.GetResourceKey(string, int)", label="number >= 3 && number <= 10", span="14-14"];
n4 [cluster="Humanizer.Localisation.Formatters.ArabicFormatter.GetResourceKey(string, int)", label="return resourceKey + PluralPostfix;", span="15-15"];
n5 [cluster="Humanizer.Localisation.Formatters.ArabicFormatter.GetResourceKey(string, int)", label="return resourceKey;", span="17-17"];
n6 [cluster="Humanizer.Localisation.Formatters.ArabicFormatter.GetResourceKey(string, int)", label="Exit Humanizer.Localisation.Formatters.ArabicFormatter.GetResourceKey(string, int)", span="7-7"];
m0_0 [cluster="Humanizer.Localisation.Formatters.CzechSlovakPolishFormatter.GetResourceKey(string, int)", file="CzechSlovakPolishFormatter.cs", label="Entry Humanizer.Localisation.Formatters.CzechSlovakPolishFormatter.GetResourceKey(string, int)", span="6-6"];
m0_1 [cluster="Humanizer.Localisation.Formatters.CzechSlovakPolishFormatter.GetResourceKey(string, int)", file="CzechSlovakPolishFormatter.cs", label="number > 1 && number < 5", span="8-8"];
m0_2 [cluster="Humanizer.Localisation.Formatters.CzechSlovakPolishFormatter.GetResourceKey(string, int)", file="CzechSlovakPolishFormatter.cs", label="return resourceKey + PaucalPostfix;", span="9-9"];
m0_3 [cluster="Humanizer.Localisation.Formatters.CzechSlovakPolishFormatter.GetResourceKey(string, int)", file="CzechSlovakPolishFormatter.cs", label="return resourceKey;", span="11-11"];
m0_4 [cluster="Humanizer.Localisation.Formatters.CzechSlovakPolishFormatter.GetResourceKey(string, int)", file="CzechSlovakPolishFormatter.cs", label="Exit Humanizer.Localisation.Formatters.CzechSlovakPolishFormatter.GetResourceKey(string, int)", span="6-6"];
m3_30 [cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceKey(string, int)", file="DefaultFormatter.cs", label="Entry Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceKey(string, int)", span="93-93"];
m3_32 [cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceKey(string, int)", file="DefaultFormatter.cs", label="return resourceKey;", span="95-95"];
m3_33 [cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceKey(string, int)", file="DefaultFormatter.cs", label="Exit Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceKey(string, int)", span="93-93"];
m3_17 [cluster="Humanizer.Localisation.ResourceKeys.DateHumanize.GetResourceKey(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", file="DefaultFormatter.cs", label="Entry Humanizer.Localisation.ResourceKeys.DateHumanize.GetResourceKey(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="30-30"];
m3_18 [cluster="Humanizer.Localisation.Formatters.DefaultFormatter.Format(string, System.Globalization.CultureInfo)", file="DefaultFormatter.cs", label="Entry Humanizer.Localisation.Formatters.DefaultFormatter.Format(string, System.Globalization.CultureInfo)", span="70-70"];
m3_24 [cluster="Humanizer.Localisation.Formatters.DefaultFormatter.Format(string, System.Globalization.CultureInfo)", color=red, community=0, file="DefaultFormatter.cs", label="0: return Resources.GetResource(GetResourceKey(resourceKey), culture);", span="72-72"];
m3_25 [cluster="Humanizer.Localisation.Formatters.DefaultFormatter.Format(string, System.Globalization.CultureInfo)", file="DefaultFormatter.cs", label="Exit Humanizer.Localisation.Formatters.DefaultFormatter.Format(string, System.Globalization.CultureInfo)", span="70-70"];
m3_11 [cluster="Humanizer.Localisation.Formatters.DefaultFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", file="DefaultFormatter.cs", label="Entry Humanizer.Localisation.Formatters.DefaultFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", span="47-47"];
m3_12 [cluster="Humanizer.Localisation.Formatters.DefaultFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", file="DefaultFormatter.cs", label="return GetResourceForTimeSpan(timeUnit, unit);", span="49-49"];
m3_13 [cluster="Humanizer.Localisation.Formatters.DefaultFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", file="DefaultFormatter.cs", label="Exit Humanizer.Localisation.Formatters.DefaultFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", span="47-47"];
m3_3 [cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceForDate(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int, System.Globalization.CultureInfo)", file="DefaultFormatter.cs", label="Entry Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceForDate(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int, System.Globalization.CultureInfo)", span="52-52"];
m3_14 [cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceForDate(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int, System.Globalization.CultureInfo)", file="DefaultFormatter.cs", label="string resourceKey = ResourceKeys.DateHumanize.GetResourceKey(unit, timeUnitTense: timeUnitTense, count: count)", span="54-54"];
m3_15 [cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceForDate(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int, System.Globalization.CultureInfo)", color=red, community=0, file="DefaultFormatter.cs", label="0: return count == 1 ? Format(resourceKey, culture) : Format(resourceKey, count, culture);", span="55-55"];
m3_16 [cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceForDate(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int, System.Globalization.CultureInfo)", file="DefaultFormatter.cs", label="Exit Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceForDate(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int, System.Globalization.CultureInfo)", span="52-52"];
m3_10 [cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceForTimeSpan(Humanizer.Localisation.TimeUnit, int)", file="DefaultFormatter.cs", label="Entry Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceForTimeSpan(Humanizer.Localisation.TimeUnit, int)", span="58-58"];
m3_20 [cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceForTimeSpan(Humanizer.Localisation.TimeUnit, int)", file="DefaultFormatter.cs", label="string resourceKey = ResourceKeys.TimeSpanHumanize.GetResourceKey(unit, count)", span="60-60"];
m3_21 [cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceForTimeSpan(Humanizer.Localisation.TimeUnit, int)", color=red, community=0, file="DefaultFormatter.cs", label="1: return count == 1 ? Format(resourceKey, null) : Format(resourceKey, count, null);", span="61-61"];
m3_22 [cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceForTimeSpan(Humanizer.Localisation.TimeUnit, int)", file="DefaultFormatter.cs", label="Exit Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceForTimeSpan(Humanizer.Localisation.TimeUnit, int)", span="58-58"];
m3_31 [cluster="string.FormatWith(params object[])", file="DefaultFormatter.cs", label="Entry string.FormatWith(params object[])", span="15-15"];
m3_0 [cluster="Humanizer.Localisation.Formatters.DefaultFormatter.DateHumanize_Now(System.Globalization.CultureInfo)", file="DefaultFormatter.cs", label="Entry Humanizer.Localisation.Formatters.DefaultFormatter.DateHumanize_Now(System.Globalization.CultureInfo)", span="14-14"];
m3_1 [cluster="Humanizer.Localisation.Formatters.DefaultFormatter.DateHumanize_Now(System.Globalization.CultureInfo)", color=red, community=0, file="DefaultFormatter.cs", label="0: return GetResourceForDate(TimeUnit.Millisecond, Tense.Past, 0, culture);", span="16-16"];
m3_2 [cluster="Humanizer.Localisation.Formatters.DefaultFormatter.DateHumanize_Now(System.Globalization.CultureInfo)", file="DefaultFormatter.cs", label="Exit Humanizer.Localisation.Formatters.DefaultFormatter.DateHumanize_Now(System.Globalization.CultureInfo)", span="14-14"];
m3_4 [cluster="Humanizer.Localisation.Formatters.DefaultFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int, System.Globalization.CultureInfo)", file="DefaultFormatter.cs", label="Entry Humanizer.Localisation.Formatters.DefaultFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int, System.Globalization.CultureInfo)", span="27-27"];
m3_5 [cluster="Humanizer.Localisation.Formatters.DefaultFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int, System.Globalization.CultureInfo)", color=red, community=0, file="DefaultFormatter.cs", label="0: return GetResourceForDate(timeUnit, timeUnitTense, unit, culture);", span="29-29"];
m3_6 [cluster="Humanizer.Localisation.Formatters.DefaultFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int, System.Globalization.CultureInfo)", file="DefaultFormatter.cs", label="Exit Humanizer.Localisation.Formatters.DefaultFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int, System.Globalization.CultureInfo)", span="27-27"];
m3_19 [cluster="Humanizer.Localisation.Formatters.DefaultFormatter.Format(string, int, System.Globalization.CultureInfo)", file="DefaultFormatter.cs", label="Entry Humanizer.Localisation.Formatters.DefaultFormatter.Format(string, int, System.Globalization.CultureInfo)", span="82-82"];
m3_28 [cluster="Humanizer.Localisation.Formatters.DefaultFormatter.Format(string, int, System.Globalization.CultureInfo)", color=red, community=0, file="DefaultFormatter.cs", label="0: return Resources.GetResource(GetResourceKey(resourceKey, number), culture).FormatWith(number);", span="84-84"];
m3_29 [cluster="Humanizer.Localisation.Formatters.DefaultFormatter.Format(string, int, System.Globalization.CultureInfo)", file="DefaultFormatter.cs", label="Exit Humanizer.Localisation.Formatters.DefaultFormatter.Format(string, int, System.Globalization.CultureInfo)", span="82-82"];
m3_23 [cluster="Humanizer.Localisation.ResourceKeys.TimeSpanHumanize.GetResourceKey(Humanizer.Localisation.TimeUnit, int)", file="DefaultFormatter.cs", label="Entry Humanizer.Localisation.ResourceKeys.TimeSpanHumanize.GetResourceKey(Humanizer.Localisation.TimeUnit, int)", span="22-22"];
m3_26 [cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceKey(string)", file="DefaultFormatter.cs", label="Entry Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceKey(string)", span="103-103"];
m3_34 [cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceKey(string)", file="DefaultFormatter.cs", label="return resourceKey;", span="105-105"];
m3_35 [cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceKey(string)", file="DefaultFormatter.cs", label="Exit Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceKey(string)", span="103-103"];
m3_27 [cluster="Humanizer.Localisation.Resources.GetResource(string, System.Globalization.CultureInfo)", file="DefaultFormatter.cs", label="Entry Humanizer.Localisation.Resources.GetResource(string, System.Globalization.CultureInfo)", span="18-18"];
m3_7 [cluster="Humanizer.Localisation.Formatters.DefaultFormatter.TimeSpanHumanize_Zero()", file="DefaultFormatter.cs", label="Entry Humanizer.Localisation.Formatters.DefaultFormatter.TimeSpanHumanize_Zero()", span="36-36"];
m3_8 [cluster="Humanizer.Localisation.Formatters.DefaultFormatter.TimeSpanHumanize_Zero()", file="DefaultFormatter.cs", label="return GetResourceForTimeSpan(TimeUnit.Millisecond, 0);", span="38-38"];
m3_9 [cluster="Humanizer.Localisation.Formatters.DefaultFormatter.TimeSpanHumanize_Zero()", file="DefaultFormatter.cs", label="Exit Humanizer.Localisation.Formatters.DefaultFormatter.TimeSpanHumanize_Zero()", span="36-36"];
m3_36 [file="DefaultFormatter.cs", label="Humanizer.Localisation.Formatters.DefaultFormatter", span=""];
m4_3 [cluster="int.ToString()", file="FormatterRegistry.cs", label="Entry int.ToString()", span="0-0"];
m4_4 [cluster="Humanizer.Localisation.DefaultNumberToWordsConverter.ConvertToOrdinal(int)", file="FormatterRegistry.cs", label="Entry Humanizer.Localisation.DefaultNumberToWordsConverter.ConvertToOrdinal(int)", span="9-9"];
m4_5 [cluster="Humanizer.Localisation.DefaultNumberToWordsConverter.ConvertToOrdinal(int)", color=green, community=0, file="FormatterRegistry.cs", label="0: return number.ToString();", span="11-11"];
m4_6 [cluster="Humanizer.Localisation.DefaultNumberToWordsConverter.ConvertToOrdinal(int)", file="FormatterRegistry.cs", label="Exit Humanizer.Localisation.DefaultNumberToWordsConverter.ConvertToOrdinal(int)", span="9-9"];
m4_0 [cluster="Humanizer.Localisation.DefaultNumberToWordsConverter.Convert(int)", file="FormatterRegistry.cs", label="Entry Humanizer.Localisation.DefaultNumberToWordsConverter.Convert(int)", span="4-4"];
m4_1 [cluster="Humanizer.Localisation.DefaultNumberToWordsConverter.Convert(int)", color=green, community=0, file="FormatterRegistry.cs", label="0: return number.ToString();", span="6-6"];
m4_2 [cluster="Humanizer.Localisation.DefaultNumberToWordsConverter.Convert(int)", file="FormatterRegistry.cs", label="Exit Humanizer.Localisation.DefaultNumberToWordsConverter.Convert(int)", span="4-4"];
m7_59 [cluster="CommandLine.Core.TokenPartitioner.PartitionScalars(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="RussianFormatter.cs", label="Entry CommandLine.Core.TokenPartitioner.PartitionScalars(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="47-47"];
m7_60 [cluster="CommandLine.Core.TokenPartitioner.PartitionScalars(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="RussianFormatter.cs", label="return from tseq in tokens.Pairwise(\r\n                (f, s) =>\r\n                        f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).Return(info =>\r\n                                    info.Item1 == DescriptorType.Scalar ? new[] { f, s } : new Token[] { }, new Token[] { })\r\n                                    : new Token[] { })\r\n                from t in tseq\r\n                select t;", span="51-58"];
m7_61 [cluster="CommandLine.Core.TokenPartitioner.PartitionScalars(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="RussianFormatter.cs", label="Exit CommandLine.Core.TokenPartitioner.PartitionScalars(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="47-47"];
m7_95 [cluster="Unk.Pairwise", file="RussianFormatter.cs", label="Entry Unk.Pairwise", span=""];
m7_19 [cluster="System.Collections.Generic.IEnumerable<TSource>.Pairwise<TSource, TResult>(System.Func<TSource, TSource, TResult>)", file="RussianFormatter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Pairwise<TSource, TResult>(System.Func<TSource, TSource, TResult>)", span="24-24"];
m7_16 [cluster="Unk.PartitionScalars", file="RussianFormatter.cs", label="Entry Unk.PartitionScalars", span=""];
m7_37 [cluster="Unk.IsValue", file="RussianFormatter.cs", label="Entry Unk.IsValue", span=""];
m7_113 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="RussianFormatter.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m7_101 [cluster="Unk.CreateValue", file="RussianFormatter.cs", label="Entry Unk.CreateValue", span=""];
m7_21 [cluster="CommandLine.Core.TokenPartitioner.SequenceTokensToKeyValuePairEnumerable(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="RussianFormatter.cs", label="Entry CommandLine.Core.TokenPartitioner.SequenceTokensToKeyValuePairEnumerable(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="77-77"];
m7_93 [cluster="CommandLine.Core.TokenPartitioner.SequenceTokensToKeyValuePairEnumerable(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="RussianFormatter.cs", label="return from t in tokens.Pairwise(\r\n                (f, s) =>\r\n                        f.IsName()\r\n                            ? CreateValue(f.Text, tokens.SkipWhile(t => t.Equals(f)).TakeWhile(v => v.IsValue()).Select(x => x.Text).ToArray())\r\n                            : CreateValue(string.Empty))\r\n                   where t.Key.Length > 0 && t.Value.Any()\r\n                   select t;", span="80-86"];
m7_94 [cluster="CommandLine.Core.TokenPartitioner.SequenceTokensToKeyValuePairEnumerable(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="RussianFormatter.cs", label="Exit CommandLine.Core.TokenPartitioner.SequenceTokensToKeyValuePairEnumerable(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="77-77"];
m7_53 [cluster="System.Func<T, TResult>.Invoke(T)", file="RussianFormatter.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m7_78 [cluster="System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", file="RussianFormatter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m7_96 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="RussianFormatter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m7_26 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="RussianFormatter.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m7_13 [cluster="CommandLine.Core.TokenPartitioner.PartitionSwitches(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="RussianFormatter.cs", label="Entry CommandLine.Core.TokenPartitioner.PartitionSwitches(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="38-38"];
m7_51 [cluster="CommandLine.Core.TokenPartitioner.PartitionSwitches(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="RussianFormatter.cs", label="return from t in tokens\r\n                   where typeLookup(t.Text).Return(info => t.IsName() && info.Item1 == DescriptorType.Boolean, false)\r\n                   select t;", span="42-44"];
m7_52 [cluster="CommandLine.Core.TokenPartitioner.PartitionSwitches(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="RussianFormatter.cs", label="Exit CommandLine.Core.TokenPartitioner.PartitionSwitches(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="38-38"];
m7_14 [cluster="Unk.Where", file="RussianFormatter.cs", label="Entry Unk.Where", span=""];
m7_80 [cluster="CommandLine.Infrastructure.MaybeExtensions.Return<T1, T2>(CommandLine.Infrastructure.Maybe<T1>, System.Func<T1, T2>, T2)", file="RussianFormatter.cs", label="Entry CommandLine.Infrastructure.MaybeExtensions.Return<T1, T2>(CommandLine.Infrastructure.Maybe<T1>, System.Func<T1, T2>, T2)", span="103-103"];
m7_100 [cluster="Unk.ToArray", file="RussianFormatter.cs", label="Entry Unk.ToArray", span=""];
m7_69 [cluster="CommandLine.Core.TokenPartitioner.PartitionSequences(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="RussianFormatter.cs", label="Entry CommandLine.Core.TokenPartitioner.PartitionSequences(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="61-61"];
m7_70 [cluster="CommandLine.Core.TokenPartitioner.PartitionSequences(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="RussianFormatter.cs", label="return from tseq in tokens.Pairwise(\r\n                (f, s) =>     \r\n                        f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).Return(info =>\r\n                                   info.Item1 == DescriptorType.Sequence\r\n                                        ? new[] { f }.Concat(tokens.SkipWhile(t => t.Equals(f)).TakeWhile(v => v.IsValue()).Take(MaybeExtensions.Return(info.Item2, items => items, 0)))\r\n                                        : new Token[] { } , new Token[] { })\r\n                            : new Token[] {})\r\n                from t in tseq\r\n                select t;", span="65-74"];
m7_71 [cluster="CommandLine.Core.TokenPartitioner.PartitionSequences(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="RussianFormatter.cs", label="Exit CommandLine.Core.TokenPartitioner.PartitionSequences(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="61-61"];
m7_81 [cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="RussianFormatter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0"];
m7_0 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="RussianFormatter.cs", label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="16-16"];
m7_1 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="RussianFormatter.cs", label="var tokenList = tokens.ToList()", span="20-20"];
m7_2 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="RussianFormatter.cs", label="var switches = PartitionSwitches(tokenList, typeLookup).ToList()", span="21-21"];
m7_4 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="RussianFormatter.cs", label="var scalars = PartitionScalars(tokensExceptSwitches, typeLookup).ToList()", span="23-23"];
m7_6 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="RussianFormatter.cs", label="var sequences = PartitionSequences(tokensExceptSwitchesAndScalars, typeLookup).ToList()", span="25-25"];
m7_3 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="RussianFormatter.cs", label="var tokensExceptSwitches = tokenList.Where(x => !switches.Contains(x)).ToList()", span="22-22"];
m7_10 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="RussianFormatter.cs", label="return Tuple.Create(\r\n                    switches.Select(t => CreateValue(t.Text,''true''))\r\n                        .Concat(scalars.Pairwise((f, s) => CreateValue(f.Text, s.Text)))\r\n                        .Concat(SequenceTokensToKeyValuePairEnumerable(sequences)),\r\n                values.Select(t => t.Text),\r\n                errors);", span="30-35"];
m7_5 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="RussianFormatter.cs", label="var tokensExceptSwitchesAndScalars = (tokensExceptSwitches.Where(x => !scalars.Contains(x))).ToList()", span="24-24"];
m7_7 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="RussianFormatter.cs", label="var tokensExceptSwitchesAndScalarsAndSeq = tokensExceptSwitchesAndScalars.Where(x => !sequences.Contains(x)).ToList()", span="26-26"];
m7_8 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="RussianFormatter.cs", label="var values = tokensExceptSwitchesAndScalarsAndSeq.Where(v => v.IsValue()).ToList()", span="27-27"];
m7_9 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="RussianFormatter.cs", label="var errors = tokensExceptSwitchesAndScalarsAndSeq.Where(x => !values.Contains(x))", span="28-28"];
m7_11 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="RussianFormatter.cs", label="Exit CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="16-16"];
m7_82 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="RussianFormatter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m7_12 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="RussianFormatter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m7_65 [cluster="CommandLine.Core.Token.IsValue()", file="RussianFormatter.cs", label="Entry CommandLine.Core.Token.IsValue()", span="77-77"];
m7_58 [cluster="CommandLine.Core.Token.IsName()", file="RussianFormatter.cs", label="Entry CommandLine.Core.Token.IsName()", span="72-72"];
m7_108 [cluster="lambda expression", file="RussianFormatter.cs", label="Entry lambda expression", span="83-83"];
m7_24 [cluster="lambda expression", file="RussianFormatter.cs", label="!switches.Contains(x)", span="22-22"];
m7_23 [cluster="lambda expression", file="RussianFormatter.cs", label="Entry lambda expression", span="22-22"];
m7_28 [cluster="lambda expression", file="RussianFormatter.cs", label="!scalars.Contains(x)", span="24-24"];
m7_27 [cluster="lambda expression", file="RussianFormatter.cs", label="Entry lambda expression", span="24-24"];
m7_32 [cluster="lambda expression", file="RussianFormatter.cs", label="!sequences.Contains(x)", span="26-26"];
m7_31 [cluster="lambda expression", file="RussianFormatter.cs", label="Entry lambda expression", span="26-26"];
m7_34 [cluster="lambda expression", file="RussianFormatter.cs", label="Entry lambda expression", span="27-27"];
m7_39 [cluster="lambda expression", file="RussianFormatter.cs", label="!values.Contains(x)", span="28-28"];
m7_38 [cluster="lambda expression", file="RussianFormatter.cs", label="Entry lambda expression", span="28-28"];
m7_41 [cluster="lambda expression", file="RussianFormatter.cs", label="Entry lambda expression", span="31-31"];
m7_45 [cluster="lambda expression", file="RussianFormatter.cs", label="Entry lambda expression", span="32-32"];
m7_48 [cluster="lambda expression", file="RussianFormatter.cs", label="Entry lambda expression", span="34-34"];
m7_25 [cluster="lambda expression", file="RussianFormatter.cs", label="Exit lambda expression", span="22-22"];
m7_29 [cluster="lambda expression", file="RussianFormatter.cs", label="Exit lambda expression", span="24-24"];
m7_33 [cluster="lambda expression", file="RussianFormatter.cs", label="Exit lambda expression", span="26-26"];
m7_35 [cluster="lambda expression", file="RussianFormatter.cs", label="v.IsValue()", span="27-27"];
m7_36 [cluster="lambda expression", file="RussianFormatter.cs", label="Exit lambda expression", span="27-27"];
m7_40 [cluster="lambda expression", file="RussianFormatter.cs", label="Exit lambda expression", span="28-28"];
m7_42 [cluster="lambda expression", file="RussianFormatter.cs", label="CreateValue(t.Text,''true'')", span="31-31"];
m7_43 [cluster="lambda expression", file="RussianFormatter.cs", label="Exit lambda expression", span="31-31"];
m7_46 [cluster="lambda expression", file="RussianFormatter.cs", label="CreateValue(f.Text, s.Text)", span="32-32"];
m7_47 [cluster="lambda expression", file="RussianFormatter.cs", label="Exit lambda expression", span="32-32"];
m7_49 [cluster="lambda expression", file="RussianFormatter.cs", label="t.Text", span="34-34"];
m7_50 [cluster="lambda expression", file="RussianFormatter.cs", label="Exit lambda expression", span="34-34"];
m7_55 [cluster="lambda expression", file="RussianFormatter.cs", label="Entry lambda expression", span="43-43"];
m7_56 [cluster="lambda expression", file="RussianFormatter.cs", label="t.IsName() && info.Item1 == DescriptorType.Boolean", span="43-43"];
m7_57 [cluster="lambda expression", file="RussianFormatter.cs", label="Exit lambda expression", span="43-43"];
m7_63 [cluster="lambda expression", file="RussianFormatter.cs", label="f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).Return(info =>\r\n                                    info.Item1 == DescriptorType.Scalar ? new[] { f, s } : new Token[] { }, new Token[] { })\r\n                                    : new Token[] { }", span="53-56"];
m7_62 [cluster="lambda expression", file="RussianFormatter.cs", label="Entry lambda expression", span="52-56"];
m7_67 [cluster="lambda expression", file="RussianFormatter.cs", label="info.Item1 == DescriptorType.Scalar ? new[] { f, s } : new Token[] { }", span="55-55"];
m7_64 [cluster="lambda expression", file="RussianFormatter.cs", label="Exit lambda expression", span="52-56"];
m7_66 [cluster="lambda expression", file="RussianFormatter.cs", label="Entry lambda expression", span="54-55"];
m7_68 [cluster="lambda expression", file="RussianFormatter.cs", label="Exit lambda expression", span="54-55"];
m7_73 [cluster="lambda expression", file="RussianFormatter.cs", label="f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).Return(info =>\r\n                                   info.Item1 == DescriptorType.Sequence\r\n                                        ? new[] { f }.Concat(tokens.SkipWhile(t => t.Equals(f)).TakeWhile(v => v.IsValue()).Take(MaybeExtensions.Return(info.Item2, items => items, 0)))\r\n                                        : new Token[] { } , new Token[] { })\r\n                            : new Token[] {}", span="67-72"];
m7_76 [cluster="lambda expression", file="RussianFormatter.cs", label="info.Item1 == DescriptorType.Sequence\r\n                                        ? new[] { f }.Concat(tokens.SkipWhile(t => t.Equals(f)).TakeWhile(v => v.IsValue()).Take(MaybeExtensions.Return(info.Item2, items => items, 0)))\r\n                                        : new Token[] { }", span="69-71"];
m7_72 [cluster="lambda expression", file="RussianFormatter.cs", label="Entry lambda expression", span="66-72"];
m7_84 [cluster="lambda expression", file="RussianFormatter.cs", label="t.Equals(f)", span="70-70"];
m7_74 [cluster="lambda expression", file="RussianFormatter.cs", label="Exit lambda expression", span="66-72"];
m7_75 [cluster="lambda expression", file="RussianFormatter.cs", label="Entry lambda expression", span="68-71"];
m7_77 [cluster="lambda expression", file="RussianFormatter.cs", label="Exit lambda expression", span="68-71"];
m7_83 [cluster="lambda expression", file="RussianFormatter.cs", label="Entry lambda expression", span="70-70"];
m7_87 [cluster="lambda expression", file="RussianFormatter.cs", label="Entry lambda expression", span="70-70"];
m7_90 [cluster="lambda expression", file="RussianFormatter.cs", label="Entry lambda expression", span="70-70"];
m7_85 [cluster="lambda expression", file="RussianFormatter.cs", label="Exit lambda expression", span="70-70"];
m7_88 [cluster="lambda expression", file="RussianFormatter.cs", label="v.IsValue()", span="70-70"];
m7_89 [cluster="lambda expression", file="RussianFormatter.cs", label="Exit lambda expression", span="70-70"];
m7_91 [cluster="lambda expression", file="RussianFormatter.cs", label=items, span="70-70"];
m7_92 [cluster="lambda expression", file="RussianFormatter.cs", label="Exit lambda expression", span="70-70"];
m7_98 [cluster="lambda expression", file="RussianFormatter.cs", label="f.IsName()\r\n                            ? CreateValue(f.Text, tokens.SkipWhile(t => t.Equals(f)).TakeWhile(v => v.IsValue()).Select(x => x.Text).ToArray())\r\n                            : CreateValue(string.Empty)", span="82-84"];
m7_97 [cluster="lambda expression", file="RussianFormatter.cs", label="Entry lambda expression", span="81-84"];
m7_103 [cluster="lambda expression", file="RussianFormatter.cs", label="t.Equals(f)", span="83-83"];
m7_99 [cluster="lambda expression", file="RussianFormatter.cs", label="Exit lambda expression", span="81-84"];
m7_102 [cluster="lambda expression", file="RussianFormatter.cs", label="Entry lambda expression", span="83-83"];
m7_105 [cluster="lambda expression", file="RussianFormatter.cs", label="Entry lambda expression", span="83-83"];
m7_104 [cluster="lambda expression", file="RussianFormatter.cs", label="Exit lambda expression", span="83-83"];
m7_106 [cluster="lambda expression", file="RussianFormatter.cs", label="v.IsValue()", span="83-83"];
m7_107 [cluster="lambda expression", file="RussianFormatter.cs", label="Exit lambda expression", span="83-83"];
m7_109 [cluster="lambda expression", file="RussianFormatter.cs", label="x.Text", span="83-83"];
m7_110 [cluster="lambda expression", file="RussianFormatter.cs", label="Exit lambda expression", span="83-83"];
m7_30 [cluster="Unk.Contains", file="RussianFormatter.cs", label="Entry Unk.Contains", span=""];
m7_18 [cluster="Unk.Select", file="RussianFormatter.cs", label="Entry Unk.Select", span=""];
m7_86 [cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="RussianFormatter.cs", label="Entry CommandLine.Core.Token.Equals(CommandLine.Core.Token)", span="59-59"];
m7_20 [cluster="Unk.Concat", file="RussianFormatter.cs", label="Entry Unk.Concat", span=""];
m7_15 [cluster="Unk.ToList", file="RussianFormatter.cs", label="Entry Unk.ToList", span=""];
m7_22 [cluster="Unk.Create", file="RussianFormatter.cs", label="Entry Unk.Create", span=""];
m7_79 [cluster="System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", file="RussianFormatter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m7_44 [cluster="CommandLine.Core.TokenPartitioner.CreateValue(string, params string[])", file="RussianFormatter.cs", label="Entry CommandLine.Core.TokenPartitioner.CreateValue(string, params string[])", span="89-89"];
m7_111 [cluster="CommandLine.Core.TokenPartitioner.CreateValue(string, params string[])", file="RussianFormatter.cs", label="return new KeyValuePair<string, IEnumerable<string>>(value, values);", span="91-91"];
m7_112 [cluster="CommandLine.Core.TokenPartitioner.CreateValue(string, params string[])", file="RussianFormatter.cs", label="Exit CommandLine.Core.TokenPartitioner.CreateValue(string, params string[])", span="89-89"];
m7_54 [cluster="CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="RussianFormatter.cs", label="Entry CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="103-103"];
m7_17 [cluster="Unk.PartitionSequences", file="RussianFormatter.cs", label="Entry Unk.PartitionSequences", span=""];
m7_114 [file="RussianFormatter.cs", label=switches, span=""];
m7_115 [file="RussianFormatter.cs", label=scalars, span=""];
m7_116 [file="RussianFormatter.cs", label=sequences, span=""];
m7_117 [file="RussianFormatter.cs", label=values, span=""];
m7_118 [file="RussianFormatter.cs", label=t, span=""];
m7_119 [file="RussianFormatter.cs", label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>", span=""];
m7_120 [file="RussianFormatter.cs", label="CommandLine.Core.Token", span=""];
m7_121 [file="RussianFormatter.cs", label="CommandLine.Core.Token", span=""];
m7_122 [file="RussianFormatter.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span=""];
m7_123 [file="RussianFormatter.cs", label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>", span=""];
m7_124 [file="RussianFormatter.cs", label="CommandLine.Core.Token", span=""];
m7_125 [file="RussianFormatter.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span=""];
m7_126 [file="RussianFormatter.cs", label="CommandLine.Core.Token", span=""];
m8_0 [cluster="Humanizer.Localisation.Formatters.SerbianFormatter.GetResourceKey(string, int)", file="SerbianFormatter.cs", label="Entry Humanizer.Localisation.Formatters.SerbianFormatter.GetResourceKey(string, int)", span="6-6"];
m8_1 [cluster="Humanizer.Localisation.Formatters.SerbianFormatter.GetResourceKey(string, int)", file="SerbianFormatter.cs", label="int mod10 = number % 10", span="8-8"];
m8_3 [cluster="Humanizer.Localisation.Formatters.SerbianFormatter.GetResourceKey(string, int)", file="SerbianFormatter.cs", label="return resourceKey + PaucalPostfix;", span="11-11"];
m8_4 [cluster="Humanizer.Localisation.Formatters.SerbianFormatter.GetResourceKey(string, int)", file="SerbianFormatter.cs", label="return resourceKey;", span="13-13"];
m8_2 [cluster="Humanizer.Localisation.Formatters.SerbianFormatter.GetResourceKey(string, int)", file="SerbianFormatter.cs", label="mod10 > 1 && mod10 < 5", span="10-10"];
m8_5 [cluster="Humanizer.Localisation.Formatters.SerbianFormatter.GetResourceKey(string, int)", file="SerbianFormatter.cs", label="Exit Humanizer.Localisation.Formatters.SerbianFormatter.GetResourceKey(string, int)", span="6-6"];
m9_18 [cluster="CommandLine.Core.Specification.IsOption()", file="SlovenianFormatter.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="11-11"];
m9_0 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="SlovenianFormatter.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", span="18-18"];
m9_1 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="SlovenianFormatter.cs", label="return specProps =>\r\n                {\r\n                    var options = specProps.Where(sp => sp.Specification.IsOption()\r\n                        && sp.Value.IsJust()\r\n                        && sp.Specification.GetSetName().Length > 0);\r\n                    var groups = options.GroupBy(g => ((OptionSpecification)g.Specification).SetName);\r\n                    if (groups.Count() > 1)\r\n                    {\r\n                        return options.Select(s => Maybe.Just<Error>(new MutuallyExclusiveSetError(NameInfo.FromOptionSpecification((OptionSpecification)s.Specification))));\r\n                    }\r\n                    return Enumerable.Empty<Nothing<Error>>();\r\n                };", span="20-31"];
m9_2 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="SlovenianFormatter.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", span="18-18"];
m9_29 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="SlovenianFormatter.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="68-68"];
m9_41 [cluster="Unk.Any", file="SlovenianFormatter.cs", label="Entry Unk.Any", span=""];
m9_52 [cluster="CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", file="SlovenianFormatter.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", span="144-144"];
m9_74 [cluster="CommandLine.Core.Specification.IsMaxNotSpecified()", file="SlovenianFormatter.cs", label="Entry CommandLine.Core.Specification.IsMaxNotSpecified()", span="75-75"];
m9_19 [cluster="CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", file="SlovenianFormatter.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", span="149-149"];
m9_28 [cluster="CommandLine.NameInfo.FromOptionSpecification(CommandLine.Core.OptionSpecification)", file="SlovenianFormatter.cs", label="Entry CommandLine.NameInfo.FromOptionSpecification(CommandLine.Core.OptionSpecification)", span="60-60"];
m9_78 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="SlovenianFormatter.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="316-316"];
m9_30 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="SlovenianFormatter.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", span="34-34"];
m9_31 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="SlovenianFormatter.cs", label="return specProps =>\r\n            {\r\n                List<string> setsWithTrue =\r\n                    specProps.Where(sp => sp.Specification.IsOption() && sp.Value.IsJust() && sp.Specification.Required)\r\n                        .Select(x => x.Specification.GetSetName()).ToList();\r\n                \r\n                var requiredButEmpty =\r\n                    specProps.Where(sp => sp.Value.IsNothing() && \r\n                                          sp.Specification.Required &&\r\n                                          !setsWithTrue.Contains(sp.Specification.GetSetName())).ToList();\r\n                    if (requiredButEmpty.Any()) {\r\n                        return requiredButEmpty.Select(s => Maybe.Just<Error>(new MissingRequiredOptionError(\r\n                            NameInfo.FromSpecification(s.Specification))));\r\n                    }\r\n                    return Enumerable.Empty<Nothing<Error>>();\r\n                };", span="36-51"];
m9_32 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="SlovenianFormatter.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", span="34-34"];
m9_53 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="SlovenianFormatter.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m9_73 [cluster="CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", file="SlovenianFormatter.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", span="134-134"];
m9_58 [cluster="Unk.FromSpecification", file="SlovenianFormatter.cs", label="Entry Unk.FromSpecification", span=""];
m9_10 [cluster="Unk.Where", file="SlovenianFormatter.cs", label="Entry Unk.Where", span=""];
m9_57 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="SlovenianFormatter.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="283-283"];
m9_27 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="SlovenianFormatter.cs", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="294-294"];
m9_12 [cluster="Unk.Count", file="SlovenianFormatter.cs", label="Entry Unk.Count", span=""];
m9_48 [cluster="Unk.GetSetName", file="SlovenianFormatter.cs", label="Entry Unk.GetSetName", span=""];
m9_59 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="SlovenianFormatter.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceRange()", span="54-54"];
m9_60 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="SlovenianFormatter.cs", label="return specProps =>\r\n                {\r\n                    var options = specProps.Where(\r\n                        sp => sp.Specification.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Sequence\r\n                        && sp.Value.IsJust()\r\n                        && (\r\n                            (!sp.Specification.IsMinNotSpecified() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min)\r\n                            || (!sp.Specification.IsMaxNotSpecified() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max)\r\n                        )\r\n                    );\r\n                    if (options.Any())\r\n                    {\r\n                        return options.Select(s => Maybe.Just<Error>(new SequenceOutOfRangeError(\r\n                            NameInfo.FromSpecification(s.Specification))));\r\n                    }\r\n                    return Enumerable.Empty<Nothing<Error>>();\r\n                };", span="56-72"];
m9_61 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="SlovenianFormatter.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRange()", span="54-54"];
m9_75 [cluster="lambda expression", file="SlovenianFormatter.cs", label="Entry lambda expression", span="68-69"];
m9_4 [cluster="lambda expression", file="SlovenianFormatter.cs", label="var options = specProps.Where(sp => sp.Specification.IsOption()\r\n                        && sp.Value.IsJust()\r\n                        && sp.Specification.GetSetName().Length > 0)", span="22-24"];
m9_3 [cluster="lambda expression", file="SlovenianFormatter.cs", label="Entry lambda expression", span="20-31"];
m9_5 [cluster="lambda expression", file="SlovenianFormatter.cs", label="var groups = options.GroupBy(g => ((OptionSpecification)g.Specification).SetName)", span="25-25"];
m9_15 [cluster="lambda expression", file="SlovenianFormatter.cs", label="Entry lambda expression", span="22-24"];
m9_7 [cluster="lambda expression", file="SlovenianFormatter.cs", label="return options.Select(s => Maybe.Just<Error>(new MutuallyExclusiveSetError(NameInfo.FromOptionSpecification((OptionSpecification)s.Specification))));", span="28-28"];
m9_6 [cluster="lambda expression", file="SlovenianFormatter.cs", label="groups.Count() > 1", span="26-26"];
m9_21 [cluster="lambda expression", file="SlovenianFormatter.cs", label="Entry lambda expression", span="25-25"];
m9_8 [cluster="lambda expression", file="SlovenianFormatter.cs", label="return Enumerable.Empty<Nothing<Error>>();", span="30-30"];
m9_9 [cluster="lambda expression", file="SlovenianFormatter.cs", label="Exit lambda expression", span="20-31"];
m9_24 [cluster="lambda expression", file="SlovenianFormatter.cs", label="Entry lambda expression", span="28-28"];
m9_16 [cluster="lambda expression", file="SlovenianFormatter.cs", label="sp.Specification.IsOption()\r\n                        && sp.Value.IsJust()\r\n                        && sp.Specification.GetSetName().Length > 0", span="22-24"];
m9_17 [cluster="lambda expression", file="SlovenianFormatter.cs", label="Exit lambda expression", span="22-24"];
m9_22 [cluster="lambda expression", file="SlovenianFormatter.cs", label="((OptionSpecification)g.Specification).SetName", span="25-25"];
m9_23 [cluster="lambda expression", file="SlovenianFormatter.cs", label="Exit lambda expression", span="25-25"];
m9_25 [cluster="lambda expression", file="SlovenianFormatter.cs", label="Maybe.Just<Error>(new MutuallyExclusiveSetError(NameInfo.FromOptionSpecification((OptionSpecification)s.Specification)))", span="28-28"];
m9_26 [cluster="lambda expression", file="SlovenianFormatter.cs", label="Exit lambda expression", span="28-28"];
m9_34 [cluster="lambda expression", file="SlovenianFormatter.cs", label="List<string> setsWithTrue =\r\n                    specProps.Where(sp => sp.Specification.IsOption() && sp.Value.IsJust() && sp.Specification.Required)\r\n                        .Select(x => x.Specification.GetSetName()).ToList()", span="38-40"];
m9_35 [cluster="lambda expression", file="SlovenianFormatter.cs", label="var requiredButEmpty =\r\n                    specProps.Where(sp => sp.Value.IsNothing() && \r\n                                          sp.Specification.Required &&\r\n                                          !setsWithTrue.Contains(sp.Specification.GetSetName())).ToList()", span="42-45"];
m9_33 [cluster="lambda expression", file="SlovenianFormatter.cs", label="Entry lambda expression", span="36-51"];
m9_42 [cluster="lambda expression", file="SlovenianFormatter.cs", label="Entry lambda expression", span="39-39"];
m9_45 [cluster="lambda expression", file="SlovenianFormatter.cs", label="Entry lambda expression", span="40-40"];
m9_50 [cluster="lambda expression", file="SlovenianFormatter.cs", label="sp.Value.IsNothing() && \r\n                                          sp.Specification.Required &&\r\n                                          !setsWithTrue.Contains(sp.Specification.GetSetName())", span="43-45"];
m9_36 [cluster="lambda expression", file="SlovenianFormatter.cs", label="requiredButEmpty.Any()", span="46-46"];
m9_49 [cluster="lambda expression", file="SlovenianFormatter.cs", label="Entry lambda expression", span="43-45"];
m9_37 [cluster="lambda expression", file="SlovenianFormatter.cs", label="return requiredButEmpty.Select(s => Maybe.Just<Error>(new MissingRequiredOptionError(\r\n                            NameInfo.FromSpecification(s.Specification))));", span="47-48"];
m9_38 [cluster="lambda expression", file="SlovenianFormatter.cs", label="return Enumerable.Empty<Nothing<Error>>();", span="50-50"];
m9_39 [cluster="lambda expression", file="SlovenianFormatter.cs", label="Exit lambda expression", span="36-51"];
m9_54 [cluster="lambda expression", file="SlovenianFormatter.cs", label="Entry lambda expression", span="47-48"];
m9_43 [cluster="lambda expression", file="SlovenianFormatter.cs", label="sp.Specification.IsOption() && sp.Value.IsJust() && sp.Specification.Required", span="39-39"];
m9_44 [cluster="lambda expression", file="SlovenianFormatter.cs", label="Exit lambda expression", span="39-39"];
m9_46 [cluster="lambda expression", file="SlovenianFormatter.cs", label="x.Specification.GetSetName()", span="40-40"];
m9_47 [cluster="lambda expression", file="SlovenianFormatter.cs", label="Exit lambda expression", span="40-40"];
m9_51 [cluster="lambda expression", file="SlovenianFormatter.cs", label="Exit lambda expression", span="43-45"];
m9_55 [cluster="lambda expression", file="SlovenianFormatter.cs", label="Maybe.Just<Error>(new MissingRequiredOptionError(\r\n                            NameInfo.FromSpecification(s.Specification)))", span="47-48"];
m9_56 [cluster="lambda expression", file="SlovenianFormatter.cs", label="Exit lambda expression", span="47-48"];
m9_63 [cluster="lambda expression", file="SlovenianFormatter.cs", label="var options = specProps.Where(\r\n                        sp => sp.Specification.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Sequence\r\n                        && sp.Value.IsJust()\r\n                        && (\r\n                            (!sp.Specification.IsMinNotSpecified() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min)\r\n                            || (!sp.Specification.IsMaxNotSpecified() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max)\r\n                        )\r\n                    )", span="58-65"];
m9_62 [cluster="lambda expression", file="SlovenianFormatter.cs", label="Entry lambda expression", span="56-72"];
m9_64 [cluster="lambda expression", file="SlovenianFormatter.cs", label="options.Any()", span="66-66"];
m9_68 [cluster="lambda expression", file="SlovenianFormatter.cs", label="Entry lambda expression", span="59-64"];
m9_65 [cluster="lambda expression", file="SlovenianFormatter.cs", label="return options.Select(s => Maybe.Just<Error>(new SequenceOutOfRangeError(\r\n                            NameInfo.FromSpecification(s.Specification))));", span="68-69"];
m9_66 [cluster="lambda expression", file="SlovenianFormatter.cs", label="return Enumerable.Empty<Nothing<Error>>();", span="71-71"];
m9_67 [cluster="lambda expression", file="SlovenianFormatter.cs", label="Exit lambda expression", span="56-72"];
m9_69 [cluster="lambda expression", file="SlovenianFormatter.cs", label="sp.Specification.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Sequence\r\n                        && sp.Value.IsJust()\r\n                        && (\r\n                            (!sp.Specification.IsMinNotSpecified() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min)\r\n                            || (!sp.Specification.IsMaxNotSpecified() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max)\r\n                        )", span="59-64"];
m9_70 [cluster="lambda expression", file="SlovenianFormatter.cs", label="Exit lambda expression", span="59-64"];
m9_76 [cluster="lambda expression", file="SlovenianFormatter.cs", label="Maybe.Just<Error>(new SequenceOutOfRangeError(\r\n                            NameInfo.FromSpecification(s.Specification)))", span="68-69"];
m9_77 [cluster="lambda expression", file="SlovenianFormatter.cs", label="Exit lambda expression", span="68-69"];
m9_20 [cluster="CommandLine.Core.Specification.GetSetName()", file="SlovenianFormatter.cs", label="Entry CommandLine.Core.Specification.GetSetName()", span="80-80"];
m9_13 [cluster="Unk.Select", file="SlovenianFormatter.cs", label="Entry Unk.Select", span=""];
m9_72 [cluster="CommandLine.Core.Specification.IsMinNotSpecified()", file="SlovenianFormatter.cs", label="Entry CommandLine.Core.Specification.IsMinNotSpecified()", span="70-70"];
m9_11 [cluster="Unk.GroupBy", file="SlovenianFormatter.cs", label="Entry Unk.GroupBy", span=""];
m9_40 [cluster="Unk.ToList", file="SlovenianFormatter.cs", label="Entry Unk.ToList", span=""];
m9_71 [cluster="System.Type.ToDescriptorKind()", file="SlovenianFormatter.cs", label="Entry System.Type.ToDescriptorKind()", span="22-22"];
m9_14 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="SlovenianFormatter.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m9_79 [file="SlovenianFormatter.cs", label=setsWithTrue, span=""];
m11_13 [cluster="Humanizer.Tests.TimeSpanHumanizeTests.Hours(int, string)", file="TimeSpanHumanizeTests.cs", label="Entry Humanizer.Tests.TimeSpanHumanizeTests.Hours(int, string)", span="32-32"];
m11_14 [cluster="Humanizer.Tests.TimeSpanHumanizeTests.Hours(int, string)", file="TimeSpanHumanizeTests.cs", label="var actual = TimeSpan.FromHours(hours).Humanize()", span="34-34"];
m11_15 [cluster="Humanizer.Tests.TimeSpanHumanizeTests.Hours(int, string)", file="TimeSpanHumanizeTests.cs", label="Assert.Equal(expected, actual)", span="35-35"];
m11_16 [cluster="Humanizer.Tests.TimeSpanHumanizeTests.Hours(int, string)", file="TimeSpanHumanizeTests.cs", label="Exit Humanizer.Tests.TimeSpanHumanizeTests.Hours(int, string)", span="32-32"];
m11_7 [cluster="System.TimeSpan.Humanize(int)", file="TimeSpanHumanizeTests.cs", label="Entry System.TimeSpan.Humanize(int)", span="18-18"];
m11_23 [cluster="Humanizer.Tests.TimeSpanHumanizeTests.Seconds(int, string)", file="TimeSpanHumanizeTests.cs", label="Entry Humanizer.Tests.TimeSpanHumanizeTests.Seconds(int, string)", span="52-52"];
m11_24 [cluster="Humanizer.Tests.TimeSpanHumanizeTests.Seconds(int, string)", file="TimeSpanHumanizeTests.cs", label="var actual = TimeSpan.FromSeconds(seconds).Humanize()", span="54-54"];
m11_25 [cluster="Humanizer.Tests.TimeSpanHumanizeTests.Seconds(int, string)", file="TimeSpanHumanizeTests.cs", label="Assert.Equal(expected, actual)", span="55-55"];
m11_26 [cluster="Humanizer.Tests.TimeSpanHumanizeTests.Seconds(int, string)", file="TimeSpanHumanizeTests.cs", label="Exit Humanizer.Tests.TimeSpanHumanizeTests.Seconds(int, string)", span="52-52"];
m11_37 [cluster="Humanizer.Tests.TimeSpanHumanizeTests.NoTime()", file="TimeSpanHumanizeTests.cs", label="Entry Humanizer.Tests.TimeSpanHumanizeTests.NoTime()", span="106-106"];
m11_38 [cluster="Humanizer.Tests.TimeSpanHumanizeTests.NoTime()", file="TimeSpanHumanizeTests.cs", label="var noTime = TimeSpan.Zero", span="108-108"];
m11_39 [cluster="Humanizer.Tests.TimeSpanHumanizeTests.NoTime()", file="TimeSpanHumanizeTests.cs", label="var actual = noTime.Humanize()", span="109-109"];
m11_40 [cluster="Humanizer.Tests.TimeSpanHumanizeTests.NoTime()", file="TimeSpanHumanizeTests.cs", label="Assert.Equal(''no time'', actual)", span="110-110"];
m11_41 [cluster="Humanizer.Tests.TimeSpanHumanizeTests.NoTime()", file="TimeSpanHumanizeTests.cs", label="Exit Humanizer.Tests.TimeSpanHumanizeTests.NoTime()", span="106-106"];
m11_22 [cluster="System.TimeSpan.FromMinutes(double)", file="TimeSpanHumanizeTests.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m11_33 [cluster="Humanizer.Tests.TimeSpanHumanizeTests.TimeSpanWithPrecesion(int, int, string)", file="TimeSpanHumanizeTests.cs", label="Entry Humanizer.Tests.TimeSpanHumanizeTests.TimeSpanWithPrecesion(int, int, string)", span="99-99"];
m11_34 [cluster="Humanizer.Tests.TimeSpanHumanizeTests.TimeSpanWithPrecesion(int, int, string)", file="TimeSpanHumanizeTests.cs", label="var actual = TimeSpan.FromMilliseconds(milliseconds).Humanize(precesion)", span="101-101"];
m11_35 [cluster="Humanizer.Tests.TimeSpanHumanizeTests.TimeSpanWithPrecesion(int, int, string)", file="TimeSpanHumanizeTests.cs", label="Assert.Equal(expected, actual)", span="102-102"];
m11_36 [cluster="Humanizer.Tests.TimeSpanHumanizeTests.TimeSpanWithPrecesion(int, int, string)", file="TimeSpanHumanizeTests.cs", label="Exit Humanizer.Tests.TimeSpanHumanizeTests.TimeSpanWithPrecesion(int, int, string)", span="99-99"];
m11_0 [cluster="Humanizer.Tests.TimeSpanHumanizeTests.TimeSpanHumanizeTests()", file="TimeSpanHumanizeTests.cs", label="Entry Humanizer.Tests.TimeSpanHumanizeTests.TimeSpanHumanizeTests()", span="8-8"];
m11_1 [cluster="Humanizer.Tests.TimeSpanHumanizeTests.TimeSpanHumanizeTests()", file="TimeSpanHumanizeTests.cs", label="Exit Humanizer.Tests.TimeSpanHumanizeTests.TimeSpanHumanizeTests()", span="8-8"];
m11_18 [cluster="Humanizer.Tests.TimeSpanHumanizeTests.Minutes(int, string)", file="TimeSpanHumanizeTests.cs", label="Entry Humanizer.Tests.TimeSpanHumanizeTests.Minutes(int, string)", span="41-41"];
m11_19 [cluster="Humanizer.Tests.TimeSpanHumanizeTests.Minutes(int, string)", file="TimeSpanHumanizeTests.cs", label="var actual = TimeSpan.FromMinutes(minutes).Humanize()", span="43-43"];
m11_20 [cluster="Humanizer.Tests.TimeSpanHumanizeTests.Minutes(int, string)", file="TimeSpanHumanizeTests.cs", label="Assert.Equal(expected, actual)", span="44-44"];
m11_21 [cluster="Humanizer.Tests.TimeSpanHumanizeTests.Minutes(int, string)", file="TimeSpanHumanizeTests.cs", label="Exit Humanizer.Tests.TimeSpanHumanizeTests.Minutes(int, string)", span="41-41"];
m11_8 [cluster="Unk.Equal", file="TimeSpanHumanizeTests.cs", label="Entry Unk.Equal", span=""];
m11_27 [cluster="System.TimeSpan.FromSeconds(double)", file="TimeSpanHumanizeTests.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m11_17 [cluster="System.TimeSpan.FromHours(double)", file="TimeSpanHumanizeTests.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m11_28 [cluster="Humanizer.Tests.TimeSpanHumanizeTests.Milliseconds(int, string)", file="TimeSpanHumanizeTests.cs", label="Entry Humanizer.Tests.TimeSpanHumanizeTests.Milliseconds(int, string)", span="63-63"];
m11_29 [cluster="Humanizer.Tests.TimeSpanHumanizeTests.Milliseconds(int, string)", file="TimeSpanHumanizeTests.cs", label="var actual = TimeSpan.FromMilliseconds(ms).Humanize()", span="65-65"];
m11_30 [cluster="Humanizer.Tests.TimeSpanHumanizeTests.Milliseconds(int, string)", file="TimeSpanHumanizeTests.cs", label="Assert.Equal(expected, actual)", span="66-66"];
m11_31 [cluster="Humanizer.Tests.TimeSpanHumanizeTests.Milliseconds(int, string)", file="TimeSpanHumanizeTests.cs", label="Exit Humanizer.Tests.TimeSpanHumanizeTests.Milliseconds(int, string)", span="63-63"];
m11_32 [cluster="System.TimeSpan.FromMilliseconds(double)", file="TimeSpanHumanizeTests.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m11_9 [cluster="Humanizer.Tests.TimeSpanHumanizeTests.Days(int, string)", file="TimeSpanHumanizeTests.cs", label="Entry Humanizer.Tests.TimeSpanHumanizeTests.Days(int, string)", span="23-23"];
m11_10 [cluster="Humanizer.Tests.TimeSpanHumanizeTests.Days(int, string)", file="TimeSpanHumanizeTests.cs", label="var actual = TimeSpan.FromDays(days).Humanize()", span="25-25"];
m11_11 [cluster="Humanizer.Tests.TimeSpanHumanizeTests.Days(int, string)", file="TimeSpanHumanizeTests.cs", label="Assert.Equal(expected, actual)", span="26-26"];
m11_12 [cluster="Humanizer.Tests.TimeSpanHumanizeTests.Days(int, string)", file="TimeSpanHumanizeTests.cs", label="Exit Humanizer.Tests.TimeSpanHumanizeTests.Days(int, string)", span="23-23"];
m11_6 [cluster="System.TimeSpan.FromDays(double)", file="TimeSpanHumanizeTests.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m11_2 [cluster="Humanizer.Tests.TimeSpanHumanizeTests.Weeks(int, string)", file="TimeSpanHumanizeTests.cs", label="Entry Humanizer.Tests.TimeSpanHumanizeTests.Weeks(int, string)", span="13-13"];
m11_3 [cluster="Humanizer.Tests.TimeSpanHumanizeTests.Weeks(int, string)", file="TimeSpanHumanizeTests.cs", label="var actual = TimeSpan.FromDays(days).Humanize()", span="15-15"];
m11_4 [cluster="Humanizer.Tests.TimeSpanHumanizeTests.Weeks(int, string)", file="TimeSpanHumanizeTests.cs", label="Assert.Equal(expected, actual)", span="16-16"];
m11_5 [cluster="Humanizer.Tests.TimeSpanHumanizeTests.Weeks(int, string)", file="TimeSpanHumanizeTests.cs", label="Exit Humanizer.Tests.TimeSpanHumanizeTests.Weeks(int, string)", span="13-13"];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [color=darkseagreen4, key=1, label=string, style=dashed];
n0 -> n3  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n4  [color=darkseagreen4, key=1, label=string, style=dashed];
n0 -> n5  [color=darkseagreen4, key=1, label=string, style=dashed];
n0 -> n0  [color=darkorchid, key=3, label="method methodReturn string GetResourceKey", style=bold];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=0, style=solid];
n2 -> n6  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n3 -> n5  [key=0, style=solid];
n4 -> n6  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n6 -> n0  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_0 -> m0_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_0 -> m0_0  [color=darkorchid, key=3, label="method methodReturn string GetResourceKey", style=bold];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=0, style=solid];
m0_2 -> m0_4  [key=0, style=solid];
m0_3 -> m0_4  [key=0, style=solid];
m0_4 -> m0_0  [color=blue, key=0, style=bold];
m3_30 -> m3_32  [key=0, style=solid];
m3_30 -> m3_19  [color=darkorchid, key=3, label="Parameter variable int number", style=bold];
m3_30 -> m3_30  [color=darkorchid, key=3, label="method methodReturn string GetResourceKey", style=bold];
m3_32 -> m3_33  [key=0, style=solid];
m3_33 -> m3_30  [color=blue, key=0, style=bold];
m3_18 -> m3_24  [color=red, key=0, style=solid];
m3_18 -> m3_14  [color=darkorchid, key=3, label="Parameter variable string resourceKey", style=bold];
m3_18 -> m3_20  [color=darkorchid, key=3, label="Parameter variable string resourceKey", style=bold];
m3_18 -> m3_3  [color=darkorchid, key=3, label="Parameter variable System.Globalization.CultureInfo culture", style=bold];
m3_18 -> m3_21  [color=red, key=3, label="Parameter variable System.Globalization.CultureInfo culture", style=bold];
m3_24 -> m3_25  [color=red, key=0, style=solid];
m3_24 -> m3_26  [color=red, key=2, style=dotted];
m3_24 -> m3_27  [color=red, key=2, style=dotted];
m3_25 -> m3_18  [color=blue, key=0, style=bold];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_10  [color=darkorchid, key=3, label="method methodReturn string TimeSpanHumanize", style=bold];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_10  [key=2, style=dotted];
m3_13 -> m3_11  [color=blue, key=0, style=bold];
m3_3 -> m3_14  [key=0, style=solid];
m3_3 -> m3_15  [color=red, key=1, label=int, style=dashed];
m3_3 -> m3_1  [color=red, key=3, label="Parameter variable int count", style=bold];
m3_3 -> m3_4  [color=darkorchid, key=3, label="Parameter variable System.Globalization.CultureInfo culture", style=bold];
m3_3 -> m3_0  [color=darkorchid, key=3, label="Parameter variable System.Globalization.CultureInfo culture", style=bold];
m3_14 -> m3_15  [color=red, key=0, style=solid];
m3_14 -> m3_17  [key=2, style=dotted];
m3_15 -> m3_16  [color=red, key=0, style=solid];
m3_15 -> m3_18  [color=red, key=2, style=dotted];
m3_15 -> m3_19  [color=red, key=2, style=dotted];
m3_16 -> m3_3  [color=blue, key=0, style=bold];
m3_10 -> m3_20  [key=0, style=solid];
m3_10 -> m3_21  [color=red, key=1, label=int, style=dashed];
m3_10 -> m3_1  [color=red, key=3, label="Parameter variable int count", style=bold];
m3_10 -> m3_11  [color=darkorchid, key=3, label="Parameter variable int count", style=bold];
m3_20 -> m3_21  [color=red, key=0, style=solid];
m3_20 -> m3_23  [key=2, style=dotted];
m3_21 -> m3_22  [color=red, key=0, style=solid];
m3_21 -> m3_18  [color=red, key=2, style=dotted];
m3_21 -> m3_19  [color=red, key=2, style=dotted];
m3_22 -> m3_10  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [color=red, key=0, style=solid];
m3_0 -> m3_3  [color=darkorchid, key=3, label="method methodReturn string DateHumanize_Now", style=bold];
m3_1 -> m3_2  [color=red, key=0, style=solid];
m3_1 -> m3_3  [color=red, key=2, style=dotted];
m3_2 -> m3_0  [color=blue, key=0, style=bold];
m3_4 -> m3_5  [color=red, key=0, style=solid];
m3_4 -> m3_3  [color=darkorchid, key=3, label="method methodReturn string DateHumanize", style=bold];
m3_5 -> m3_6  [color=red, key=0, style=solid];
m3_5 -> m3_3  [color=red, key=2, style=dotted];
m3_6 -> m3_4  [color=blue, key=0, style=bold];
m3_19 -> m3_28  [color=red, key=0, style=solid];
m3_19 -> m3_14  [color=darkorchid, key=3, label="Parameter variable string resourceKey", style=bold];
m3_19 -> m3_20  [color=darkorchid, key=3, label="Parameter variable string resourceKey", style=bold];
m3_19 -> m3_3  [color=darkorchid, key=3, label="Parameter variable System.Globalization.CultureInfo culture", style=bold];
m3_19 -> m3_10  [color=darkorchid, key=3, label="Parameter variable int number", style=bold];
m3_19 -> m3_21  [color=red, key=3, label="Parameter variable System.Globalization.CultureInfo culture", style=bold];
m3_28 -> m3_29  [color=red, key=0, style=solid];
m3_28 -> m3_30  [color=red, key=2, style=dotted];
m3_28 -> m3_27  [color=red, key=2, style=dotted];
m3_28 -> m3_31  [color=red, key=2, style=dotted];
m3_29 -> m3_19  [color=blue, key=0, style=bold];
m3_26 -> m3_34  [key=0, style=solid];
m3_26 -> m3_18  [color=darkorchid, key=3, label="Parameter variable string resourceKey", style=bold];
m3_26 -> m3_26  [color=darkorchid, key=3, label="method methodReturn string GetResourceKey", style=bold];
m3_34 -> m3_35  [key=0, style=solid];
m3_35 -> m3_26  [color=blue, key=0, style=bold];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_10  [color=darkorchid, key=3, label="method methodReturn string TimeSpanHumanize_Zero", style=bold];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_10  [key=2, style=dotted];
m3_9 -> m3_7  [color=blue, key=0, style=bold];
m3_36 -> m3_1  [color=red, key=1, label="Humanizer.Localisation.Formatters.DefaultFormatter", style=dashed];
m3_36 -> m3_5  [color=red, key=1, label="Humanizer.Localisation.Formatters.DefaultFormatter", style=dashed];
m3_36 -> m3_8  [color=darkseagreen4, key=1, label="Humanizer.Localisation.Formatters.DefaultFormatter", style=dashed];
m3_36 -> m3_12  [color=darkseagreen4, key=1, label="Humanizer.Localisation.Formatters.DefaultFormatter", style=dashed];
m3_36 -> m3_15  [color=red, key=1, label="Humanizer.Localisation.Formatters.DefaultFormatter", style=dashed];
m3_36 -> m3_21  [color=red, key=1, label="Humanizer.Localisation.Formatters.DefaultFormatter", style=dashed];
m3_36 -> m3_24  [color=red, key=1, label="Humanizer.Localisation.Formatters.DefaultFormatter", style=dashed];
m3_36 -> m3_28  [color=red, key=1, label="Humanizer.Localisation.Formatters.DefaultFormatter", style=dashed];
m4_4 -> m4_5  [color=green, key=0, style=solid];
m4_5 -> m4_6  [color=green, key=0, style=solid];
m4_5 -> m4_3  [color=green, key=2, style=dotted];
m4_6 -> m4_4  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [color=green, key=0, style=solid];
m4_1 -> m4_2  [color=green, key=0, style=solid];
m4_1 -> m4_3  [color=green, key=2, style=dotted];
m4_2 -> m4_0  [color=blue, key=0, style=bold];
m7_59 -> m7_60  [key=0, style=solid];
m7_59 -> m7_63  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>", style=dashed];
m7_60 -> m7_61  [key=0, style=solid];
m7_60 -> m7_19  [key=2, style=dotted];
m7_60 -> m7_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_60 -> m7_60  [color=darkseagreen4, key=1, label=tseq, style=dashed];
m7_61 -> m7_59  [color=blue, key=0, style=bold];
m7_21 -> m7_93  [key=0, style=solid];
m7_21 -> m7_98  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m7_93 -> m7_94  [key=0, style=solid];
m7_93 -> m7_95  [key=2, style=dotted];
m7_93 -> m7_96  [key=2, style=dotted];
m7_93 -> m7_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_93 -> m7_93  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_94 -> m7_21  [color=blue, key=0, style=bold];
m7_13 -> m7_51  [key=0, style=solid];
m7_51 -> m7_52  [key=0, style=solid];
m7_51 -> m7_53  [key=2, style=dotted];
m7_51 -> m7_54  [key=2, style=dotted];
m7_51 -> m7_51  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_51 -> m7_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_51 -> m7_56  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_52 -> m7_13  [color=blue, key=0, style=bold];
m7_69 -> m7_70  [key=0, style=solid];
m7_69 -> m7_73  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m7_69 -> m7_76  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m7_70 -> m7_71  [key=0, style=solid];
m7_70 -> m7_19  [key=2, style=dotted];
m7_70 -> m7_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_70 -> m7_70  [color=darkseagreen4, key=1, label=tseq, style=dashed];
m7_71 -> m7_69  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_0 -> m7_2  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>", style=dashed];
m7_0 -> m7_4  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>", style=dashed];
m7_0 -> m7_6  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>", style=dashed];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_12  [key=2, style=dotted];
m7_1 -> m7_3  [color=darkseagreen4, key=1, label=tokenList, style=dashed];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_13  [key=2, style=dotted];
m7_2 -> m7_12  [key=2, style=dotted];
m7_2 -> m7_24  [color=darkseagreen4, key=1, label=switches, style=dashed];
m7_2 -> m7_10  [color=darkseagreen4, key=1, label=switches, style=dashed];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_16  [key=2, style=dotted];
m7_4 -> m7_12  [key=2, style=dotted];
m7_4 -> m7_28  [color=darkseagreen4, key=1, label=scalars, style=dashed];
m7_4 -> m7_10  [color=darkseagreen4, key=1, label=scalars, style=dashed];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_17  [key=2, style=dotted];
m7_6 -> m7_12  [key=2, style=dotted];
m7_6 -> m7_32  [color=darkseagreen4, key=1, label=sequences, style=dashed];
m7_6 -> m7_10  [color=darkseagreen4, key=1, label=sequences, style=dashed];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_14  [key=2, style=dotted];
m7_3 -> m7_15  [key=2, style=dotted];
m7_3 -> m7_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_3 -> m7_5  [color=darkseagreen4, key=1, label=tokensExceptSwitches, style=dashed];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_18  [key=2, style=dotted];
m7_10 -> m7_19  [key=2, style=dotted];
m7_10 -> m7_20  [key=2, style=dotted];
m7_10 -> m7_21  [key=2, style=dotted];
m7_10 -> m7_22  [key=2, style=dotted];
m7_10 -> m7_41  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_10 -> m7_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_10 -> m7_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_14  [key=2, style=dotted];
m7_5 -> m7_15  [key=2, style=dotted];
m7_5 -> m7_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_5 -> m7_7  [color=darkseagreen4, key=1, label=tokensExceptSwitchesAndScalars, style=dashed];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_14  [key=2, style=dotted];
m7_7 -> m7_15  [key=2, style=dotted];
m7_7 -> m7_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_7 -> m7_9  [color=darkseagreen4, key=1, label=tokensExceptSwitchesAndScalarsAndSeq, style=dashed];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_14  [key=2, style=dotted];
m7_8 -> m7_15  [key=2, style=dotted];
m7_8 -> m7_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_8 -> m7_39  [color=darkseagreen4, key=1, label=values, style=dashed];
m7_8 -> m7_10  [color=darkseagreen4, key=1, label=values, style=dashed];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_14  [key=2, style=dotted];
m7_9 -> m7_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_11 -> m7_0  [color=blue, key=0, style=bold];
m7_108 -> m7_109  [key=0, style=solid];
m7_24 -> m7_25  [key=0, style=solid];
m7_24 -> m7_26  [key=2, style=dotted];
m7_23 -> m7_24  [key=0, style=solid];
m7_28 -> m7_29  [key=0, style=solid];
m7_28 -> m7_30  [key=2, style=dotted];
m7_27 -> m7_28  [key=0, style=solid];
m7_32 -> m7_33  [key=0, style=solid];
m7_32 -> m7_30  [key=2, style=dotted];
m7_31 -> m7_32  [key=0, style=solid];
m7_34 -> m7_35  [key=0, style=solid];
m7_39 -> m7_40  [key=0, style=solid];
m7_39 -> m7_30  [key=2, style=dotted];
m7_38 -> m7_39  [key=0, style=solid];
m7_41 -> m7_42  [key=0, style=solid];
m7_45 -> m7_46  [key=0, style=solid];
m7_48 -> m7_49  [key=0, style=solid];
m7_25 -> m7_23  [color=blue, key=0, style=bold];
m7_29 -> m7_27  [color=blue, key=0, style=bold];
m7_33 -> m7_31  [color=blue, key=0, style=bold];
m7_35 -> m7_36  [key=0, style=solid];
m7_35 -> m7_37  [key=2, style=dotted];
m7_36 -> m7_34  [color=blue, key=0, style=bold];
m7_40 -> m7_38  [color=blue, key=0, style=bold];
m7_42 -> m7_43  [key=0, style=solid];
m7_42 -> m7_44  [key=2, style=dotted];
m7_43 -> m7_41  [color=blue, key=0, style=bold];
m7_46 -> m7_47  [key=0, style=solid];
m7_46 -> m7_44  [key=2, style=dotted];
m7_47 -> m7_45  [color=blue, key=0, style=bold];
m7_49 -> m7_50  [key=0, style=solid];
m7_50 -> m7_48  [color=blue, key=0, style=bold];
m7_55 -> m7_56  [key=0, style=solid];
m7_56 -> m7_57  [key=0, style=solid];
m7_56 -> m7_58  [key=2, style=dotted];
m7_57 -> m7_55  [color=blue, key=0, style=bold];
m7_63 -> m7_64  [key=0, style=solid];
m7_63 -> m7_58  [key=2, style=dotted];
m7_63 -> m7_65  [key=2, style=dotted];
m7_63 -> m7_53  [key=2, style=dotted];
m7_63 -> m7_54  [key=2, style=dotted];
m7_63 -> m7_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_62 -> m7_63  [key=0, style=solid];
m7_62 -> m7_67  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m7_67 -> m7_68  [key=0, style=solid];
m7_64 -> m7_62  [color=blue, key=0, style=bold];
m7_66 -> m7_67  [key=0, style=solid];
m7_68 -> m7_66  [color=blue, key=0, style=bold];
m7_73 -> m7_74  [key=0, style=solid];
m7_73 -> m7_58  [key=2, style=dotted];
m7_73 -> m7_65  [key=2, style=dotted];
m7_73 -> m7_53  [key=2, style=dotted];
m7_73 -> m7_54  [key=2, style=dotted];
m7_73 -> m7_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_76 -> m7_77  [key=0, style=solid];
m7_76 -> m7_78  [key=2, style=dotted];
m7_76 -> m7_79  [key=2, style=dotted];
m7_76 -> m7_80  [key=2, style=dotted];
m7_76 -> m7_81  [key=2, style=dotted];
m7_76 -> m7_82  [key=2, style=dotted];
m7_76 -> m7_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_76 -> m7_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_76 -> m7_90  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_72 -> m7_73  [key=0, style=solid];
m7_72 -> m7_76  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m7_72 -> m7_84  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m7_84 -> m7_85  [key=0, style=solid];
m7_84 -> m7_86  [key=2, style=dotted];
m7_74 -> m7_72  [color=blue, key=0, style=bold];
m7_75 -> m7_76  [key=0, style=solid];
m7_77 -> m7_75  [color=blue, key=0, style=bold];
m7_83 -> m7_84  [key=0, style=solid];
m7_87 -> m7_88  [key=0, style=solid];
m7_90 -> m7_91  [key=0, style=solid];
m7_85 -> m7_83  [color=blue, key=0, style=bold];
m7_88 -> m7_89  [key=0, style=solid];
m7_88 -> m7_65  [key=2, style=dotted];
m7_89 -> m7_87  [color=blue, key=0, style=bold];
m7_91 -> m7_92  [key=0, style=solid];
m7_92 -> m7_90  [color=blue, key=0, style=bold];
m7_98 -> m7_99  [key=0, style=solid];
m7_98 -> m7_58  [key=2, style=dotted];
m7_98 -> m7_78  [key=2, style=dotted];
m7_98 -> m7_79  [key=2, style=dotted];
m7_98 -> m7_18  [key=2, style=dotted];
m7_98 -> m7_100  [key=2, style=dotted];
m7_98 -> m7_101  [key=2, style=dotted];
m7_98 -> m7_44  [key=2, style=dotted];
m7_98 -> m7_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_98 -> m7_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_98 -> m7_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_97 -> m7_98  [key=0, style=solid];
m7_97 -> m7_103  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m7_103 -> m7_104  [key=0, style=solid];
m7_103 -> m7_86  [key=2, style=dotted];
m7_99 -> m7_97  [color=blue, key=0, style=bold];
m7_102 -> m7_103  [key=0, style=solid];
m7_105 -> m7_106  [key=0, style=solid];
m7_104 -> m7_102  [color=blue, key=0, style=bold];
m7_106 -> m7_107  [key=0, style=solid];
m7_106 -> m7_65  [key=2, style=dotted];
m7_107 -> m7_105  [color=blue, key=0, style=bold];
m7_109 -> m7_110  [key=0, style=solid];
m7_110 -> m7_108  [color=blue, key=0, style=bold];
m7_44 -> m7_111  [key=0, style=solid];
m7_111 -> m7_112  [key=0, style=solid];
m7_111 -> m7_113  [key=2, style=dotted];
m7_112 -> m7_44  [color=blue, key=0, style=bold];
m7_114 -> m7_24  [color=darkseagreen4, key=1, label=switches, style=dashed];
m7_115 -> m7_28  [color=darkseagreen4, key=1, label=scalars, style=dashed];
m7_116 -> m7_32  [color=darkseagreen4, key=1, label=sequences, style=dashed];
m7_117 -> m7_39  [color=darkseagreen4, key=1, label=values, style=dashed];
m7_118 -> m7_56  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_119 -> m7_63  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>", style=dashed];
m7_120 -> m7_67  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m7_121 -> m7_67  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m7_122 -> m7_73  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m7_122 -> m7_76  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m7_123 -> m7_73  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>", style=dashed];
m7_124 -> m7_76  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m7_124 -> m7_84  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m7_125 -> m7_98  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m7_126 -> m7_103  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_0 -> m8_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_0 -> m8_0  [color=darkorchid, key=3, label="method methodReturn string GetResourceKey", style=bold];
m8_1 -> m8_2  [key=0, style=solid];
m8_3 -> m8_5  [key=0, style=solid];
m8_4 -> m8_5  [key=0, style=solid];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_4  [key=0, style=solid];
m8_5 -> m8_0  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_4  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m9_2 -> m9_0  [color=blue, key=0, style=bold];
m9_30 -> m9_31  [key=0, style=solid];
m9_31 -> m9_32  [key=0, style=solid];
m9_31 -> m9_34  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m9_31 -> m9_35  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m9_32 -> m9_30  [color=blue, key=0, style=bold];
m9_59 -> m9_60  [key=0, style=solid];
m9_60 -> m9_61  [key=0, style=solid];
m9_60 -> m9_63  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m9_61 -> m9_59  [color=blue, key=0, style=bold];
m9_75 -> m9_76  [key=0, style=solid];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_10  [key=2, style=dotted];
m9_4 -> m9_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_4 -> m9_7  [color=darkseagreen4, key=1, label=options, style=dashed];
m9_3 -> m9_4  [key=0, style=solid];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_11  [key=2, style=dotted];
m9_5 -> m9_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_15 -> m9_16  [key=0, style=solid];
m9_7 -> m9_9  [key=0, style=solid];
m9_7 -> m9_13  [key=2, style=dotted];
m9_7 -> m9_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_6 -> m9_7  [key=0, style=solid];
m9_6 -> m9_8  [key=0, style=solid];
m9_6 -> m9_12  [key=2, style=dotted];
m9_21 -> m9_22  [key=0, style=solid];
m9_8 -> m9_9  [key=0, style=solid];
m9_8 -> m9_14  [key=2, style=dotted];
m9_9 -> m9_3  [color=blue, key=0, style=bold];
m9_24 -> m9_25  [key=0, style=solid];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_18  [key=2, style=dotted];
m9_16 -> m9_19  [key=2, style=dotted];
m9_16 -> m9_20  [key=2, style=dotted];
m9_17 -> m9_15  [color=blue, key=0, style=bold];
m9_22 -> m9_23  [key=0, style=solid];
m9_23 -> m9_21  [color=blue, key=0, style=bold];
m9_25 -> m9_26  [key=0, style=solid];
m9_25 -> m9_27  [key=2, style=dotted];
m9_25 -> m9_28  [key=2, style=dotted];
m9_25 -> m9_29  [key=2, style=dotted];
m9_26 -> m9_24  [color=blue, key=0, style=bold];
m9_34 -> m9_35  [key=0, style=solid];
m9_34 -> m9_10  [key=2, style=dotted];
m9_34 -> m9_13  [key=2, style=dotted];
m9_34 -> m9_40  [key=2, style=dotted];
m9_34 -> m9_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_34 -> m9_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_34 -> m9_50  [color=darkseagreen4, key=1, label=setsWithTrue, style=dashed];
m9_35 -> m9_36  [key=0, style=solid];
m9_35 -> m9_10  [key=2, style=dotted];
m9_35 -> m9_40  [key=2, style=dotted];
m9_35 -> m9_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_35 -> m9_37  [color=darkseagreen4, key=1, label=requiredButEmpty, style=dashed];
m9_33 -> m9_34  [key=0, style=solid];
m9_33 -> m9_35  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m9_42 -> m9_43  [key=0, style=solid];
m9_45 -> m9_46  [key=0, style=solid];
m9_50 -> m9_51  [key=0, style=solid];
m9_50 -> m9_52  [key=2, style=dotted];
m9_50 -> m9_20  [key=2, style=dotted];
m9_50 -> m9_53  [key=2, style=dotted];
m9_36 -> m9_37  [key=0, style=solid];
m9_36 -> m9_38  [key=0, style=solid];
m9_36 -> m9_41  [key=2, style=dotted];
m9_49 -> m9_50  [key=0, style=solid];
m9_37 -> m9_39  [key=0, style=solid];
m9_37 -> m9_13  [key=2, style=dotted];
m9_37 -> m9_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_38 -> m9_39  [key=0, style=solid];
m9_38 -> m9_14  [key=2, style=dotted];
m9_39 -> m9_33  [color=blue, key=0, style=bold];
m9_54 -> m9_55  [key=0, style=solid];
m9_43 -> m9_44  [key=0, style=solid];
m9_43 -> m9_18  [key=2, style=dotted];
m9_43 -> m9_19  [key=2, style=dotted];
m9_44 -> m9_42  [color=blue, key=0, style=bold];
m9_46 -> m9_47  [key=0, style=solid];
m9_46 -> m9_48  [key=2, style=dotted];
m9_47 -> m9_45  [color=blue, key=0, style=bold];
m9_51 -> m9_49  [color=blue, key=0, style=bold];
m9_55 -> m9_56  [key=0, style=solid];
m9_55 -> m9_57  [key=2, style=dotted];
m9_55 -> m9_58  [key=2, style=dotted];
m9_55 -> m9_29  [key=2, style=dotted];
m9_56 -> m9_54  [color=blue, key=0, style=bold];
m9_63 -> m9_64  [key=0, style=solid];
m9_63 -> m9_10  [key=2, style=dotted];
m9_63 -> m9_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_63 -> m9_65  [color=darkseagreen4, key=1, label=options, style=dashed];
m9_62 -> m9_63  [key=0, style=solid];
m9_64 -> m9_65  [key=0, style=solid];
m9_64 -> m9_66  [key=0, style=solid];
m9_64 -> m9_41  [key=2, style=dotted];
m9_68 -> m9_69  [key=0, style=solid];
m9_65 -> m9_67  [key=0, style=solid];
m9_65 -> m9_13  [key=2, style=dotted];
m9_65 -> m9_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_66 -> m9_67  [key=0, style=solid];
m9_66 -> m9_14  [key=2, style=dotted];
m9_67 -> m9_62  [color=blue, key=0, style=bold];
m9_69 -> m9_70  [key=0, style=solid];
m9_69 -> m9_71  [key=2, style=dotted];
m9_69 -> m9_19  [key=2, style=dotted];
m9_69 -> m9_72  [key=2, style=dotted];
m9_69 -> m9_73  [key=2, style=dotted];
m9_69 -> m9_74  [key=2, style=dotted];
m9_70 -> m9_68  [color=blue, key=0, style=bold];
m9_76 -> m9_77  [key=0, style=solid];
m9_76 -> m9_78  [key=2, style=dotted];
m9_76 -> m9_58  [key=2, style=dotted];
m9_76 -> m9_29  [key=2, style=dotted];
m9_77 -> m9_75  [color=blue, key=0, style=bold];
m9_79 -> m9_50  [color=darkseagreen4, key=1, label=setsWithTrue, style=dashed];
m11_13 -> m11_14  [key=0, style=solid];
m11_13 -> m11_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_14 -> m11_15  [key=0, style=solid];
m11_14 -> m11_17  [key=2, style=dotted];
m11_14 -> m11_7  [key=2, style=dotted];
m11_15 -> m11_16  [key=0, style=solid];
m11_15 -> m11_8  [key=2, style=dotted];
m11_16 -> m11_13  [color=blue, key=0, style=bold];
m11_23 -> m11_24  [key=0, style=solid];
m11_23 -> m11_25  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_24 -> m11_25  [key=0, style=solid];
m11_24 -> m11_27  [key=2, style=dotted];
m11_24 -> m11_7  [key=2, style=dotted];
m11_25 -> m11_26  [key=0, style=solid];
m11_25 -> m11_8  [key=2, style=dotted];
m11_26 -> m11_23  [color=blue, key=0, style=bold];
m11_37 -> m11_38  [key=0, style=solid];
m11_38 -> m11_39  [key=0, style=solid];
m11_39 -> m11_40  [key=0, style=solid];
m11_39 -> m11_7  [key=2, style=dotted];
m11_40 -> m11_41  [key=0, style=solid];
m11_40 -> m11_8  [key=2, style=dotted];
m11_41 -> m11_37  [color=blue, key=0, style=bold];
m11_33 -> m11_34  [key=0, style=solid];
m11_33 -> m11_35  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_34 -> m11_35  [key=0, style=solid];
m11_34 -> m11_32  [key=2, style=dotted];
m11_34 -> m11_7  [key=2, style=dotted];
m11_35 -> m11_36  [key=0, style=solid];
m11_35 -> m11_8  [key=2, style=dotted];
m11_36 -> m11_33  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_0  [color=blue, key=0, style=bold];
m11_18 -> m11_19  [key=0, style=solid];
m11_18 -> m11_20  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_19 -> m11_20  [key=0, style=solid];
m11_19 -> m11_22  [key=2, style=dotted];
m11_19 -> m11_7  [key=2, style=dotted];
m11_20 -> m11_21  [key=0, style=solid];
m11_20 -> m11_8  [key=2, style=dotted];
m11_21 -> m11_18  [color=blue, key=0, style=bold];
m11_28 -> m11_29  [key=0, style=solid];
m11_28 -> m11_30  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_29 -> m11_30  [key=0, style=solid];
m11_29 -> m11_32  [key=2, style=dotted];
m11_29 -> m11_7  [key=2, style=dotted];
m11_30 -> m11_31  [key=0, style=solid];
m11_30 -> m11_8  [key=2, style=dotted];
m11_31 -> m11_28  [color=blue, key=0, style=bold];
m11_9 -> m11_10  [key=0, style=solid];
m11_9 -> m11_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_10 -> m11_11  [key=0, style=solid];
m11_10 -> m11_6  [key=2, style=dotted];
m11_10 -> m11_7  [key=2, style=dotted];
m11_11 -> m11_12  [key=0, style=solid];
m11_11 -> m11_8  [key=2, style=dotted];
m11_12 -> m11_9  [color=blue, key=0, style=bold];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_6  [key=2, style=dotted];
m11_3 -> m11_7  [key=2, style=dotted];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_8  [key=2, style=dotted];
m11_5 -> m11_2  [color=blue, key=0, style=bold];
}
