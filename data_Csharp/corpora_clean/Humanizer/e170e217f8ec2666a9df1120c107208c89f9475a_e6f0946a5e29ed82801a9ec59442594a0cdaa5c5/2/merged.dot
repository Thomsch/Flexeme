digraph  {
m0_62 [label="Entry System.Math.Abs(int)", span="0-0", cluster="System.Math.Abs(int)", file="Configurator.cs"];
m0_11 [label="var map = new[] { '''', ''dziesięć'', ''dwadzieścia'', ''trzydzieści'', ''czterdzieści'', ''pięćdziesiąt'', ''sześćdziesiąt'', ''siedemdziesiąt'', ''osiemdziesiąt'', ''dziewięćdziesiąt'' }", span="37-37", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.ConvertNumberUnderThousand(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", file="Configurator.cs"];
m0_66 [label="Entry string.Trim()", span="0-0", cluster="string.Trim()", file="Configurator.cs"];
m0_19 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="Configurator.cs"];
m0_34 [label="Entry Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", span="68-68", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", file="Configurator.cs"];
m0_35 [label=numeral, span="70-70", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", file="Configurator.cs"];
m0_38 [label="return miliard[GetMappingIndex(num)];", span="74-74", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", file="Configurator.cs"];
m0_41 [label="return million[GetMappingIndex(num)];", span="77-77", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", file="Configurator.cs"];
m0_44 [label="return thousand[GetMappingIndex(num)];", span="80-80", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", file="Configurator.cs"];
m0_45 [label="return string.Empty;", span="82-82", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", file="Configurator.cs"];
m0_36 [label="Numeral.Miliard", span="72-72", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", file="Configurator.cs"];
m0_39 [label="Numeral.Million", span="75-75", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", file="Configurator.cs"];
m0_42 [label="Numeral.Thousand", span="78-78", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", file="Configurator.cs"];
m0_37 [label="var miliard = new[] { ''miliard'', ''miliardy'', ''miliardów'' }", span="73-73", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", file="Configurator.cs"];
m0_40 [label="var million = new[] { ''milion'', ''miliony'', ''milionów'' }", span="76-76", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", file="Configurator.cs"];
m0_43 [label="var thousand = new[] { ''tysiąc'', ''tysiące'', ''tysięcy'' }", span="79-79", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", file="Configurator.cs"];
m0_46 [label="Exit Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", span="68-68", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", file="Configurator.cs"];
m0_22 [label="Entry Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", span="50-50", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", file="Configurator.cs"];
m0_23 [label="number == 1", span="52-52", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", file="Configurator.cs"];
m0_25 [label="number > 1 && number < 5", span="55-55", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", file="Configurator.cs"];
m0_27 [label="var tens = number / 10", span="58-58", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", file="Configurator.cs"];
m0_29 [label="var unity = number % 10", span="61-61", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", file="Configurator.cs"];
m0_24 [label="return 0;", span="53-53", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", file="Configurator.cs"];
m0_26 [label="return 1;", span="56-56", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", file="Configurator.cs"];
m0_32 [label="return 2;", span="66-66", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", file="Configurator.cs"];
m0_31 [label="return 1;", span="63-63", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", file="Configurator.cs"];
m0_28 [label="tens > 1", span="59-59", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", file="Configurator.cs"];
m0_30 [label="unity > 1 && unity < 5", span="62-62", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", file="Configurator.cs"];
m0_33 [label="Exit Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", span="50-50", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", file="Configurator.cs"];
m0_3 [label="var result = new StringBuilder()", span="24-24", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.ConvertNumberUnderThousand(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", file="Configurator.cs"];
m0_7 [label="result.AppendFormat(@''{0} '', map[hundreds])", span="30-30", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.ConvertNumberUnderThousand(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", file="Configurator.cs"];
m0_0 [label="Entry lambda expression", span="15-15", cluster="lambda expression", file="Configurator.cs"];
m0_1 [label="new RomanianFormatter()", span="15-15", cluster="lambda expression", color=green, community=0, file="Configurator.cs"];
m0_2 [label="Exit lambda expression", span="15-15", cluster="lambda expression", file="Configurator.cs"];
m0_4 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="Configurator.cs"];
m0_8 [label="Entry lambda expression", span="17-17", cluster="lambda expression", file="Configurator.cs"];
m0_9 [label="new ArabicFormatter()", span="17-17", cluster="lambda expression", file="Configurator.cs"];
m0_13 [label="new CzechSlovakFormatter()", span="18-18", cluster="lambda expression", file="Configurator.cs", color=red, community=0];
m0_14 [label="Exit lambda expression", span="18-18", cluster="lambda expression", file="Configurator.cs"];
m0_16 [label="Entry lambda expression", span="19-19", cluster="lambda expression", file="Configurator.cs"];
m0_12 [label="Entry lambda expression", span="18-18", cluster="lambda expression", file="Configurator.cs"];
m0_17 [label="new CzechSlovakFormatter()", span="19-19", cluster="lambda expression", file="Configurator.cs", color=red, community=1];
m0_5 [label="new RussianFormatter()", span="16-16", cluster="lambda expression", file="Configurator.cs"];
m0_10 [label="Exit lambda expression", span="17-17", cluster="lambda expression", file="Configurator.cs"];
m0_15 [label="Entry Humanizer.Localisation.CzechSlovakFormatter.CzechSlovakFormatter()", span="2-2", cluster="Humanizer.Localisation.CzechSlovakFormatter.CzechSlovakFormatter()", file="Configurator.cs"];
m0_6 [label="Exit lambda expression", span="16-16", cluster="lambda expression", file="Configurator.cs"];
m0_18 [label="Exit lambda expression", span="19-19", cluster="lambda expression", file="Configurator.cs"];
m0_21 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="Configurator.cs"];
m0_64 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="Configurator.cs"];
m0_63 [label="Entry System.Enum.GetValues(System.Type)", span="0-0", cluster="System.Enum.GetValues(System.Type)", file="Configurator.cs"];
m0_47 [label="Entry Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", span="86-86", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", file="Configurator.cs"];
m0_58 [label="result.AppendFormat(@''{0}{1} '', ConvertNumberUnderThousand(numeral, num), GetSuffix(numeral, num))", span="105-105", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", file="Configurator.cs"];
m0_56 [label="var num = number / (int)numeral", span="102-102", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", file="Configurator.cs"];
m0_50 [label="var result = new StringBuilder()", span="91-91", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", file="Configurator.cs"];
m0_55 [label=numerals, span="100-100", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", file="Configurator.cs"];
m0_57 [label="num > 0", span="103-103", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", file="Configurator.cs"];
m0_59 [label="number %= (int)numeral", span="106-106", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", file="Configurator.cs"];
m0_53 [label="number = Math.Abs(number)", span="96-96", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", file="Configurator.cs"];
m0_48 [label="number == 0", span="88-88", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", file="Configurator.cs"];
m0_51 [label="number < 0", span="93-93", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", file="Configurator.cs"];
m0_52 [label="result.AppendFormat(@''{0} '', Negative)", span="95-95", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", file="Configurator.cs"];
m0_60 [label="return result.ToString().Trim();", span="110-110", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", file="Configurator.cs"];
m0_54 [label="var numerals = ((Numeral[])Enum.GetValues(typeof(Numeral))).Reverse()", span="99-99", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", file="Configurator.cs"];
m0_49 [label="return Zero;", span="89-89", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", file="Configurator.cs"];
m0_61 [label="Exit Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", span="86-86", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", file="Configurator.cs"];
m0_20 [label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0", cluster="System.Text.StringBuilder.AppendFormat(string, object)", file="Configurator.cs"];
m0_65 [label="Entry System.Text.StringBuilder.AppendFormat(string, object, object)", span="0-0", cluster="System.Text.StringBuilder.AppendFormat(string, object, object)", file="Configurator.cs"];
m1_0 [label="Entry Humanizer.Localisation.CzechSlovakFormatter.GetResourceKey(string, int)", span="6-6", cluster="Humanizer.Localisation.CzechSlovakFormatter.GetResourceKey(string, int)", file="CzechSlovakFormatter.cs"];
m1_1 [label="number > 1 && number < 5", span="8-8", cluster="Humanizer.Localisation.CzechSlovakFormatter.GetResourceKey(string, int)", file="CzechSlovakFormatter.cs"];
m1_2 [label="return resourceKey + PaucalPostfix;", span="9-9", cluster="Humanizer.Localisation.CzechSlovakFormatter.GetResourceKey(string, int)", file="CzechSlovakFormatter.cs"];
m1_3 [label="return resourceKey;", span="11-11", cluster="Humanizer.Localisation.CzechSlovakFormatter.GetResourceKey(string, int)", file="CzechSlovakFormatter.cs"];
m1_4 [label="Exit Humanizer.Localisation.CzechSlovakFormatter.GetResourceKey(string, int)", span="6-6", cluster="Humanizer.Localisation.CzechSlovakFormatter.GetResourceKey(string, int)", file="CzechSlovakFormatter.cs"];
m2_8 [label="Entry string.FromRoman()", span="35-35", cluster="string.FromRoman()", file="DateHumanizeTests.cs"];
m2_5 [label="Entry Humanizer.Tests.RomanNumeralTests.CanUnromanize(int, string)", span="43-43", cluster="Humanizer.Tests.RomanNumeralTests.CanUnromanize(int, string)", file="DateHumanizeTests.cs"];
m2_6 [label="Assert.Equal(expected, input.FromRoman())", span="45-45", cluster="Humanizer.Tests.RomanNumeralTests.CanUnromanize(int, string)", file="DateHumanizeTests.cs"];
m2_7 [label="Exit Humanizer.Tests.RomanNumeralTests.CanUnromanize(int, string)", span="43-43", cluster="Humanizer.Tests.RomanNumeralTests.CanUnromanize(int, string)", file="DateHumanizeTests.cs"];
m2_0 [label="Entry Humanizer.Tests.RomanNumeralTests.CanRomanize(int, string)", span="23-23", cluster="Humanizer.Tests.RomanNumeralTests.CanRomanize(int, string)", file="DateHumanizeTests.cs"];
m2_1 [label="Assert.Equal(expected, input.ToRoman())", span="25-25", cluster="Humanizer.Tests.RomanNumeralTests.CanRomanize(int, string)", file="DateHumanizeTests.cs"];
m2_2 [label="Exit Humanizer.Tests.RomanNumeralTests.CanRomanize(int, string)", span="23-23", cluster="Humanizer.Tests.RomanNumeralTests.CanRomanize(int, string)", file="DateHumanizeTests.cs"];
m2_4 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="DateHumanizeTests.cs"];
m2_3 [label="Entry int.ToRoman()", span="75-75", cluster="int.ToRoman()", file="DateHumanizeTests.cs"];
m7_37 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="IFormatter.cs"];
m7_24 [label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_equal_token_returns_command_line_with_long_option_using_equal_sign()", span="59-59", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_equal_token_returns_command_line_with_long_option_using_equal_sign()", file="IFormatter.cs"];
m7_25 [label="var options = new Simple_Options { BoolValue = true, IntSequence = new[] { 1, 2, 3 }, StringValue = ''nospaces'', LongValue = 123456789 }", span="61-61", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_equal_token_returns_command_line_with_long_option_using_equal_sign()", file="IFormatter.cs"];
m7_26 [label="new Parser()\r\n                .FormatCommandLine(options, config => config.UseEqualToken = true)\r\n                .ShouldBeEquivalentTo(''-i 1 2 3 --stringvalue=nospaces -x 123456789'')", span="62-64", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_equal_token_returns_command_line_with_long_option_using_equal_sign()", file="IFormatter.cs"];
m7_27 [label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_equal_token_returns_command_line_with_long_option_using_equal_sign()", span="59-59", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_equal_token_returns_command_line_with_long_option_using_equal_sign()", file="IFormatter.cs"];
m7_9 [label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_immutable_instance_returns_command_line(CommandLine.Tests.Fakes.Immutable_Simple_Options, string)", span="33-33", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_immutable_instance_returns_command_line(CommandLine.Tests.Fakes.Immutable_Simple_Options, string)", file="IFormatter.cs"];
m7_10 [label="new Parser()\r\n                .FormatCommandLine(options)\r\n                .ShouldBeEquivalentTo(result)", span="35-37", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_immutable_instance_returns_command_line(CommandLine.Tests.Fakes.Immutable_Simple_Options, string)", file="IFormatter.cs"];
m7_11 [label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_immutable_instance_returns_command_line(CommandLine.Tests.Fakes.Immutable_Simple_Options, string)", span="33-33", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_immutable_instance_returns_command_line(CommandLine.Tests.Fakes.Immutable_Simple_Options, string)", file="IFormatter.cs"];
m7_5 [label="Entry Unk.ShouldBeEquivalentTo", span="", cluster="Unk.ShouldBeEquivalentTo", file="IFormatter.cs"];
m7_19 [label="Entry CommandLine.Tests.Fakes.Options_With_Switches.Options_With_Switches()", span="4-4", cluster="CommandLine.Tests.Fakes.Options_With_Switches.Options_With_Switches()", file="IFormatter.cs"];
m7_12 [label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_fsharp_option_returns_command_line(CommandLine.Tests.Fakes.Options_With_FSharpOption, string)", span="42-42", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_fsharp_option_returns_command_line(CommandLine.Tests.Fakes.Options_With_FSharpOption, string)", file="IFormatter.cs"];
m7_13 [label="new Parser()\r\n                .FormatCommandLine(options)\r\n                .ShouldBeEquivalentTo(result)", span="44-46", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_fsharp_option_returns_command_line(CommandLine.Tests.Fakes.Options_With_FSharpOption, string)", file="IFormatter.cs"];
m7_14 [label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_fsharp_option_returns_command_line(CommandLine.Tests.Fakes.Options_With_FSharpOption, string)", span="42-42", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_fsharp_option_returns_command_line(CommandLine.Tests.Fakes.Options_With_FSharpOption, string)", file="IFormatter.cs"];
m7_32 [label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_dash_in_value_and_dashdash_enabled_returns_command_line_with_value_prefixed_with_dash_dash()", span="68-68", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_dash_in_value_and_dashdash_enabled_returns_command_line_with_value_prefixed_with_dash_dash()", file="IFormatter.cs"];
m7_33 [label="var options = new Simple_Options_With_Values { StringSequence = new List<string> { ''-something'', ''with'', ''dash'' } }", span="70-70", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_dash_in_value_and_dashdash_enabled_returns_command_line_with_value_prefixed_with_dash_dash()", file="IFormatter.cs"];
m7_34 [label="new Parser((setting) => setting.EnableDashDash = true)\r\n                .FormatCommandLine(options)\r\n                .ShouldBeEquivalentTo(''-- -something with dash'')", span="71-73", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_dash_in_value_and_dashdash_enabled_returns_command_line_with_value_prefixed_with_dash_dash()", file="IFormatter.cs"];
m7_35 [label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_dash_in_value_and_dashdash_enabled_returns_command_line_with_value_prefixed_with_dash_dash()", span="68-68", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_dash_in_value_and_dashdash_enabled_returns_command_line_with_value_prefixed_with_dash_dash()", file="IFormatter.cs"];
m7_42 [label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_no_values_and_dashdash_enabled_returns_command_line_without_dash_dash()", span="77-77", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_no_values_and_dashdash_enabled_returns_command_line_without_dash_dash()", file="IFormatter.cs"];
m7_43 [label="var options = new Simple_Options_With_Values()", span="79-79", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_no_values_and_dashdash_enabled_returns_command_line_without_dash_dash()", file="IFormatter.cs"];
m7_44 [label="new Parser((setting) => setting.EnableDashDash = true)\r\n                .FormatCommandLine(options)\r\n                .ShouldBeEquivalentTo('''')", span="80-82", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_no_values_and_dashdash_enabled_returns_command_line_without_dash_dash()", file="IFormatter.cs"];
m7_45 [label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_no_values_and_dashdash_enabled_returns_command_line_without_dash_dash()", span="77-77", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_no_values_and_dashdash_enabled_returns_command_line_without_dash_dash()", file="IFormatter.cs"];
m7_0 [label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.Simple_Options, string)", span="15-15", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.Simple_Options, string)", file="IFormatter.cs"];
m7_1 [label="new Parser()\r\n                .FormatCommandLine(options)\r\n                .ShouldBeEquivalentTo(result)", span="17-19", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.Simple_Options, string)", file="IFormatter.cs"];
m7_2 [label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.Simple_Options, string)", span="15-15", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.Simple_Options, string)", file="IFormatter.cs"];
m7_49 [label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_dash_in_value_and_dashdash_disabled_returns_command_line_with_value()", span="86-86", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_dash_in_value_and_dashdash_disabled_returns_command_line_with_value()", file="IFormatter.cs"];
m7_50 [label="var options = new Simple_Options_With_Values { StringSequence = new List<string> { ''-something'', ''with'', ''dash'' } }", span="88-88", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_dash_in_value_and_dashdash_disabled_returns_command_line_with_value()", file="IFormatter.cs"];
m7_51 [label="new Parser()\r\n                .FormatCommandLine(options)\r\n                .ShouldBeEquivalentTo(''-something with dash'')", span="89-91", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_dash_in_value_and_dashdash_disabled_returns_command_line_with_value()", file="IFormatter.cs"];
m7_52 [label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_dash_in_value_and_dashdash_disabled_returns_command_line_with_value()", span="86-86", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_dash_in_value_and_dashdash_disabled_returns_command_line_with_value()", file="IFormatter.cs"];
m7_6 [label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line_for_verbs(CommandLine.Tests.Fakes.Add_Verb, string)", span="24-24", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line_for_verbs(CommandLine.Tests.Fakes.Add_Verb, string)", file="IFormatter.cs"];
m7_7 [label="new Parser()\r\n                .FormatCommandLine(verb)\r\n                .ShouldBeEquivalentTo(result)", span="26-28", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line_for_verbs(CommandLine.Tests.Fakes.Add_Verb, string)", file="IFormatter.cs"];
m7_8 [label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line_for_verbs(CommandLine.Tests.Fakes.Add_Verb, string)", span="24-24", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line_for_verbs(CommandLine.Tests.Fakes.Add_Verb, string)", file="IFormatter.cs"];
m7_28 [label="Entry CommandLine.Tests.Fakes.Simple_Options.Simple_Options()", span="6-6", cluster="CommandLine.Tests.Fakes.Simple_Options.Simple_Options()", file="IFormatter.cs"];
m7_3 [label="Entry CommandLine.Parser.Parser()", span="26-26", cluster="CommandLine.Parser.Parser()", file="IFormatter.cs"];
m7_46 [label="Entry lambda expression", span="80-80", cluster="lambda expression", file="IFormatter.cs"];
m7_21 [label="Entry lambda expression", span="54-54", cluster="lambda expression", file="IFormatter.cs"];
m7_22 [label="config.GroupSwitches = true", span="54-54", cluster="lambda expression", file="IFormatter.cs"];
m7_23 [label="Exit lambda expression", span="54-54", cluster="lambda expression", file="IFormatter.cs"];
m7_29 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="IFormatter.cs"];
m7_30 [label="config.UseEqualToken = true", span="63-63", cluster="lambda expression", file="IFormatter.cs"];
m7_31 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="IFormatter.cs"];
m7_40 [label="setting.EnableDashDash = true", span="71-71", cluster="lambda expression", file="IFormatter.cs"];
m7_39 [label="Entry lambda expression", span="71-71", cluster="lambda expression", file="IFormatter.cs"];
m7_41 [label="Exit lambda expression", span="71-71", cluster="lambda expression", file="IFormatter.cs"];
m7_47 [label="setting.EnableDashDash = true", span="80-80", cluster="lambda expression", file="IFormatter.cs"];
m7_48 [label="Exit lambda expression", span="80-80", cluster="lambda expression", file="IFormatter.cs"];
m7_36 [label="Entry CommandLine.Tests.Fakes.Simple_Options_With_Values.Simple_Options_With_Values()", span="6-6", cluster="CommandLine.Tests.Fakes.Simple_Options_With_Values.Simple_Options_With_Values()", file="IFormatter.cs"];
m7_38 [label="Entry CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="37-37", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="IFormatter.cs"];
m7_15 [label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_group_switches_returns_command_line_with_switches_grouped()", span="50-50", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_group_switches_returns_command_line_with_switches_grouped()", file="IFormatter.cs"];
m7_16 [label="var options = new Options_With_Switches { InputFile = ''input.bin'', HumanReadable = true, IgnoreWarnings = true }", span="52-52", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_group_switches_returns_command_line_with_switches_grouped()", file="IFormatter.cs"];
m7_17 [label="new Parser()\r\n                .FormatCommandLine(options, config => config.GroupSwitches = true)\r\n                .ShouldBeEquivalentTo(''-hi --input input.bin'')", span="53-55", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_group_switches_returns_command_line_with_switches_grouped()", file="IFormatter.cs"];
m7_18 [label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_group_switches_returns_command_line_with_switches_grouped()", span="50-50", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_with_group_switches_returns_command_line_with_switches_grouped()", file="IFormatter.cs"];
m7_4 [label="Entry CommandLine.Parser.FormatCommandLine<T>(T)", span="81-81", cluster="CommandLine.Parser.FormatCommandLine<T>(T)", file="IFormatter.cs"];
m7_20 [label="Entry CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", span="95-95", cluster="CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", file="IFormatter.cs"];
m9_4 [label="Entry Humanizer.NumberToTimeSpanExtensions.Hours(int)", span="20-20", cluster="Humanizer.NumberToTimeSpanExtensions.Hours(int)", file="NumberToOrdinalWordsExtension.cs"];
m9_5 [label="return new TimeSpan(0, input, 0, 0);", span="22-22", cluster="Humanizer.NumberToTimeSpanExtensions.Hours(int)", color=red, community=0, file="NumberToOrdinalWordsExtension.cs"];
m9_6 [label="Exit Humanizer.NumberToTimeSpanExtensions.Hours(int)", span="20-20", cluster="Humanizer.NumberToTimeSpanExtensions.Hours(int)", file="NumberToOrdinalWordsExtension.cs"];
m9_10 [label="Entry Humanizer.NumberToTimeSpanExtensions.Seconds(int)", span="40-40", cluster="Humanizer.NumberToTimeSpanExtensions.Seconds(int)", file="NumberToOrdinalWordsExtension.cs"];
m9_11 [label="return new TimeSpan(0, 0, 0, input);", span="42-42", cluster="Humanizer.NumberToTimeSpanExtensions.Seconds(int)", color=red, community=0, file="NumberToOrdinalWordsExtension.cs"];
m9_12 [label="Exit Humanizer.NumberToTimeSpanExtensions.Seconds(int)", span="40-40", cluster="Humanizer.NumberToTimeSpanExtensions.Seconds(int)", file="NumberToOrdinalWordsExtension.cs"];
m9_0 [label="Entry Humanizer.NumberToTimeSpanExtensions.Days(int)", span="10-10", cluster="Humanizer.NumberToTimeSpanExtensions.Days(int)", file="NumberToOrdinalWordsExtension.cs"];
m9_1 [label="return new TimeSpan(input, 0, 0, 0);", span="12-12", cluster="Humanizer.NumberToTimeSpanExtensions.Days(int)", file="NumberToOrdinalWordsExtension.cs"];
m9_2 [label="Exit Humanizer.NumberToTimeSpanExtensions.Days(int)", span="10-10", cluster="Humanizer.NumberToTimeSpanExtensions.Days(int)", file="NumberToOrdinalWordsExtension.cs"];
m9_7 [label="Entry Humanizer.NumberToTimeSpanExtensions.Minutes(int)", span="30-30", cluster="Humanizer.NumberToTimeSpanExtensions.Minutes(int)", file="NumberToOrdinalWordsExtension.cs"];
m9_8 [label="return new TimeSpan(0, 0, input, 0);", span="32-32", cluster="Humanizer.NumberToTimeSpanExtensions.Minutes(int)", color=red, community=0, file="NumberToOrdinalWordsExtension.cs"];
m9_9 [label="Exit Humanizer.NumberToTimeSpanExtensions.Minutes(int)", span="30-30", cluster="Humanizer.NumberToTimeSpanExtensions.Minutes(int)", file="NumberToOrdinalWordsExtension.cs"];
m9_3 [label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file="NumberToOrdinalWordsExtension.cs"];
m10_0 [label="Entry Humanizer.Localisation.RomanianFormatter.GetResourceKey(string, int)", span="6-6", cluster="Humanizer.Localisation.RomanianFormatter.GetResourceKey(string, int)", file="RomanianFormatter.cs"];
m10_1 [label="var mod100 = number%100", span="8-8", cluster="Humanizer.Localisation.RomanianFormatter.GetResourceKey(string, int)", file="RomanianFormatter.cs"];
m10_3 [label="return resourceKey;", span="12-12", cluster="Humanizer.Localisation.RomanianFormatter.GetResourceKey(string, int)", file="RomanianFormatter.cs"];
m10_4 [label="return resourceKey + Above20PostFix;", span="15-15", cluster="Humanizer.Localisation.RomanianFormatter.GetResourceKey(string, int)", file="RomanianFormatter.cs"];
m10_2 [label="0 < mod100 && mod100 < 20", span="10-10", cluster="Humanizer.Localisation.RomanianFormatter.GetResourceKey(string, int)", file="RomanianFormatter.cs"];
m10_5 [label="Exit Humanizer.Localisation.RomanianFormatter.GetResourceKey(string, int)", span="6-6", cluster="Humanizer.Localisation.RomanianFormatter.GetResourceKey(string, int)", file="RomanianFormatter.cs"];
m0_11 -> m0_12  [key=0, style=solid];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_34 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_34 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_39  [key=0, style=solid];
m0_35 -> m0_42  [key=0, style=solid];
m0_35 -> m0_45  [key=0, style=solid];
m0_38 -> m0_46  [key=0, style=solid];
m0_38 -> m0_22  [key=2, style=dotted];
m0_41 -> m0_46  [key=0, style=solid];
m0_41 -> m0_22  [key=2, style=dotted];
m0_44 -> m0_46  [key=0, style=solid];
m0_44 -> m0_22  [key=2, style=dotted];
m0_45 -> m0_46  [key=0, style=solid];
m0_36 -> m0_37  [key=0, style=solid];
m0_39 -> m0_40  [key=0, style=solid];
m0_42 -> m0_43  [key=0, style=solid];
m0_37 -> m0_38  [key=0, style=solid];
m0_40 -> m0_41  [key=0, style=solid];
m0_43 -> m0_44  [key=0, style=solid];
m0_46 -> m0_34  [key=0, style=bold, color=blue];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_22 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_22 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_25  [key=0, style=solid];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_27  [key=0, style=solid];
m0_27 -> m0_28  [key=0, style=solid];
m0_29 -> m0_30  [key=0, style=solid];
m0_24 -> m0_33  [key=0, style=solid];
m0_26 -> m0_33  [key=0, style=solid];
m0_32 -> m0_33  [key=0, style=solid];
m0_31 -> m0_33  [key=0, style=solid];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_32  [key=0, style=solid];
m0_30 -> m0_32  [key=0, style=solid];
m0_30 -> m0_31  [key=0, style=solid];
m0_33 -> m0_22  [key=0, style=bold, color=blue];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_19  [key=2, style=dotted];
m0_3 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_3 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_3 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_3 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_20  [key=2, style=dotted];
m0_0 -> m0_1  [key=0, style=solid, color=green];
m0_0 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_0 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_0 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_0 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_0 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_0 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_1 -> m0_2  [key=0, style=solid, color=green];
m0_1 -> m0_3  [key=0, style=solid, color=green];
m0_2 -> m0_18  [key=0, style=solid];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label=hundreds];
m0_8 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_8 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_8 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label=tens];
m0_9 -> m0_11  [key=2, style=dotted];
m0_13 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_13 -> m0_14  [key=0, style=solid, color=red];
m0_13 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_13 -> m0_15  [key=2, style=dotted, color=red];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_17  [key=0, style=solid];
m0_14 -> m0_12  [key=0, style=bold, color=blue];
m0_16 -> m0_17  [key=0, style=solid, color=red];
m0_16 -> m0_20  [key=2, style=dotted];
m0_12 -> m0_13  [key=0, style=solid, color=red];
m0_12 -> m0_20  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid, color=red];
m0_17 -> m0_21  [key=2, style=dotted];
m0_17 -> m0_15  [key=2, style=dotted, color=red];
m0_5 -> m0_9  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_7  [key=2, style=dotted];
m0_10 -> m0_14  [key=0, style=solid];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_8  [key=0, style=bold, color=blue];
m0_15 -> m0_16  [key=0, style=solid];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_4  [key=0, style=bold, color=blue];
m0_18 -> m0_0  [key=0, style=bold, color=blue];
m0_18 -> m0_16  [key=0, style=bold, color=blue];
m0_47 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_47 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_51  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_47 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_58 -> m0_0  [key=2, style=dotted];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_34  [key=2, style=dotted];
m0_58 -> m0_65  [key=2, style=dotted];
m0_56 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label=num];
m0_56 -> m0_57  [key=0, style=solid];
m0_50 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_50 -> m0_19  [key=2, style=dotted];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_50 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_55 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label=numeral];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_60  [key=0, style=solid];
m0_55 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label=numeral];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_55  [key=0, style=solid];
m0_59 -> m0_55  [key=0, style=solid];
m0_59 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_53 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_53 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_53 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_62  [key=2, style=dotted];
m0_48 -> m0_50  [key=0, style=solid];
m0_48 -> m0_49  [key=0, style=solid];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_54  [key=0, style=solid];
m0_52 -> m0_20  [key=2, style=dotted];
m0_52 -> m0_53  [key=0, style=solid];
m0_60 -> m0_21  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_66  [key=2, style=dotted];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_63  [key=2, style=dotted];
m0_54 -> m0_64  [key=2, style=dotted];
m0_49 -> m0_61  [key=0, style=solid];
m0_61 -> m0_47  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_0 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_0 -> m1_0  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetResourceKey"];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=0, style=solid];
m1_2 -> m1_4  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_4 -> m1_0  [key=0, style=bold, color=blue];
m2_5 -> m2_6  [key=0, style=solid];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_8  [key=2, style=dotted];
m2_6 -> m2_4  [key=2, style=dotted];
m2_7 -> m2_5  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_1 -> m2_4  [key=2, style=dotted];
m2_2 -> m2_0  [key=0, style=bold, color=blue];
m7_24 -> m7_25  [key=0, style=solid];
m7_25 -> m7_26  [key=0, style=solid];
m7_25 -> m7_28  [key=2, style=dotted];
m7_26 -> m7_27  [key=0, style=solid];
m7_26 -> m7_3  [key=2, style=dotted];
m7_26 -> m7_20  [key=2, style=dotted];
m7_26 -> m7_5  [key=2, style=dotted];
m7_26 -> m7_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_27 -> m7_24  [key=0, style=bold, color=blue];
m7_9 -> m7_10  [key=0, style=solid];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_3  [key=2, style=dotted];
m7_10 -> m7_4  [key=2, style=dotted];
m7_10 -> m7_5  [key=2, style=dotted];
m7_11 -> m7_9  [key=0, style=bold, color=blue];
m7_12 -> m7_13  [key=0, style=solid];
m7_13 -> m7_14  [key=0, style=solid];
m7_13 -> m7_3  [key=2, style=dotted];
m7_13 -> m7_4  [key=2, style=dotted];
m7_13 -> m7_5  [key=2, style=dotted];
m7_14 -> m7_12  [key=0, style=bold, color=blue];
m7_32 -> m7_33  [key=0, style=solid];
m7_33 -> m7_34  [key=0, style=solid];
m7_33 -> m7_36  [key=2, style=dotted];
m7_33 -> m7_37  [key=2, style=dotted];
m7_34 -> m7_35  [key=0, style=solid];
m7_34 -> m7_38  [key=2, style=dotted];
m7_34 -> m7_4  [key=2, style=dotted];
m7_34 -> m7_5  [key=2, style=dotted];
m7_34 -> m7_40  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m7_35 -> m7_32  [key=0, style=bold, color=blue];
m7_42 -> m7_43  [key=0, style=solid];
m7_43 -> m7_44  [key=0, style=solid];
m7_43 -> m7_36  [key=2, style=dotted];
m7_44 -> m7_45  [key=0, style=solid];
m7_44 -> m7_38  [key=2, style=dotted];
m7_44 -> m7_4  [key=2, style=dotted];
m7_44 -> m7_5  [key=2, style=dotted];
m7_44 -> m7_47  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m7_45 -> m7_42  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_3  [key=2, style=dotted];
m7_1 -> m7_4  [key=2, style=dotted];
m7_1 -> m7_5  [key=2, style=dotted];
m7_2 -> m7_0  [key=0, style=bold, color=blue];
m7_49 -> m7_50  [key=0, style=solid];
m7_50 -> m7_51  [key=0, style=solid];
m7_50 -> m7_36  [key=2, style=dotted];
m7_50 -> m7_37  [key=2, style=dotted];
m7_51 -> m7_52  [key=0, style=solid];
m7_51 -> m7_3  [key=2, style=dotted];
m7_51 -> m7_4  [key=2, style=dotted];
m7_51 -> m7_5  [key=2, style=dotted];
m7_52 -> m7_49  [key=0, style=bold, color=blue];
m7_6 -> m7_7  [key=0, style=solid];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_3  [key=2, style=dotted];
m7_7 -> m7_4  [key=2, style=dotted];
m7_7 -> m7_5  [key=2, style=dotted];
m7_8 -> m7_6  [key=0, style=bold, color=blue];
m7_46 -> m7_47  [key=0, style=solid];
m7_21 -> m7_22  [key=0, style=solid];
m7_22 -> m7_23  [key=0, style=solid];
m7_23 -> m7_21  [key=0, style=bold, color=blue];
m7_29 -> m7_30  [key=0, style=solid];
m7_30 -> m7_31  [key=0, style=solid];
m7_31 -> m7_29  [key=0, style=bold, color=blue];
m7_40 -> m7_41  [key=0, style=solid];
m7_39 -> m7_40  [key=0, style=solid];
m7_41 -> m7_39  [key=0, style=bold, color=blue];
m7_47 -> m7_48  [key=0, style=solid];
m7_48 -> m7_46  [key=0, style=bold, color=blue];
m7_15 -> m7_16  [key=0, style=solid];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_19  [key=2, style=dotted];
m7_17 -> m7_18  [key=0, style=solid];
m7_17 -> m7_3  [key=2, style=dotted];
m7_17 -> m7_20  [key=2, style=dotted];
m7_17 -> m7_5  [key=2, style=dotted];
m7_17 -> m7_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_18 -> m7_15  [key=0, style=bold, color=blue];
m9_4 -> m9_5  [key=0, style=solid, color=red];
m9_5 -> m9_6  [key=0, style=solid, color=red];
m9_5 -> m9_3  [key=2, style=dotted, color=red];
m9_6 -> m9_4  [key=0, style=bold, color=blue];
m9_10 -> m9_11  [key=0, style=solid, color=red];
m9_11 -> m9_12  [key=0, style=solid, color=red];
m9_11 -> m9_3  [key=2, style=dotted, color=red];
m9_12 -> m9_10  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_3  [key=2, style=dotted];
m9_2 -> m9_0  [key=0, style=bold, color=blue];
m9_7 -> m9_8  [key=0, style=solid, color=red];
m9_8 -> m9_9  [key=0, style=solid, color=red];
m9_8 -> m9_3  [key=2, style=dotted, color=red];
m9_9 -> m9_7  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_0 -> m10_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_0 -> m10_0  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetResourceKey"];
m10_1 -> m10_2  [key=0, style=solid];
m10_3 -> m10_5  [key=0, style=solid];
m10_4 -> m10_5  [key=0, style=solid];
m10_2 -> m10_3  [key=0, style=solid];
m10_2 -> m10_4  [key=0, style=solid];
m10_5 -> m10_0  [key=0, style=bold, color=blue];
}
