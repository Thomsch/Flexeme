digraph  {
m1_37 [cluster="Humanizer.Tests.DehumanizeToEnumTests.HonorsAnyAttributeWithDescriptionStringProperty()", file="CasingExtensions.cs", label="Entry Humanizer.Tests.DehumanizeToEnumTests.HonorsAnyAttributeWithDescriptionStringProperty()", span="44-44"];
m1_38 [cluster="Humanizer.Tests.DehumanizeToEnumTests.HonorsAnyAttributeWithDescriptionStringProperty()", file="CasingExtensions.cs", label="Assert.Equal(EnumUnderTest.MemberWithCustomDescriptionAttribute, EnumTestsResources.MemberWithCustomDescriptionAttribute.DehumanizeTo<EnumUnderTest>())", span="46-46"];
m1_39 [cluster="Humanizer.Tests.DehumanizeToEnumTests.HonorsAnyAttributeWithDescriptionStringProperty()", file="CasingExtensions.cs", label="Assert.Equal(EnumUnderTest.MemberWithCustomDescriptionAttribute, EnumTestsResources.MemberWithCustomDescriptionAttribute.DehumanizeTo(typeof(EnumUnderTest)))", span="47-47"];
m1_40 [cluster="Humanizer.Tests.DehumanizeToEnumTests.HonorsAnyAttributeWithDescriptionStringProperty()", file="CasingExtensions.cs", label="Exit Humanizer.Tests.DehumanizeToEnumTests.HonorsAnyAttributeWithDescriptionStringProperty()", span="44-44"];
m1_31 [cluster="Unk.Equal", file="CasingExtensions.cs", label="Entry Unk.Equal", span=""];
m1_69 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.GetTypeCode()", file="CasingExtensions.cs", label="Entry Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.GetTypeCode()", span="100-100"];
m1_70 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.GetTypeCode()", file="CasingExtensions.cs", label="throw new NotImplementedException();", span="102-102"];
m1_71 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.GetTypeCode()", file="CasingExtensions.cs", label="Exit Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.GetTypeCode()", span="100-100"];
m1_41 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DehumanizeMembersWithoutDescriptionAttribute()", file="CasingExtensions.cs", label="Entry Humanizer.Tests.DehumanizeToEnumTests.DehumanizeMembersWithoutDescriptionAttribute()", span="51-51"];
m1_42 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DehumanizeMembersWithoutDescriptionAttribute()", file="CasingExtensions.cs", label="Assert.Equal(EnumUnderTest.MemberWithoutDescriptionAttribute, EnumTestsResources.MemberWithoutDescriptionAttributeSentence.DehumanizeTo<EnumUnderTest>())", span="53-53"];
m1_43 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DehumanizeMembersWithoutDescriptionAttribute()", file="CasingExtensions.cs", label="Assert.Equal(EnumUnderTest.MemberWithoutDescriptionAttribute, EnumTestsResources.MemberWithoutDescriptionAttributeSentence.DehumanizeTo(typeof(EnumUnderTest)))", span="54-54"];
m1_44 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DehumanizeMembersWithoutDescriptionAttribute()", file="CasingExtensions.cs", label="Exit Humanizer.Tests.DehumanizeToEnumTests.DehumanizeMembersWithoutDescriptionAttribute()", span="51-51"];
m1_0 [cluster="Humanizer.Tests.DehumanizeToEnumTests.ThrowsForNonEnums()", file="CasingExtensions.cs", label="Entry Humanizer.Tests.DehumanizeToEnumTests.ThrowsForNonEnums()", span="9-9"];
m1_1 [cluster="Humanizer.Tests.DehumanizeToEnumTests.ThrowsForNonEnums()", file="CasingExtensions.cs", label="Assert.Throws<ArgumentException>(() => EnumTestsResources.MemberWithDescriptionAttribute.DehumanizeTo<DummyStructWithEnumInterfaces>())", span="11-11"];
m1_2 [cluster="Humanizer.Tests.DehumanizeToEnumTests.ThrowsForNonEnums()", file="CasingExtensions.cs", label="Assert.Throws<ArgumentException>(() => EnumTestsResources.MemberWithDescriptionAttribute.DehumanizeTo(typeof(DummyStructWithEnumInterfaces)))", span="12-12"];
m1_3 [cluster="Humanizer.Tests.DehumanizeToEnumTests.ThrowsForNonEnums()", file="CasingExtensions.cs", label="Exit Humanizer.Tests.DehumanizeToEnumTests.ThrowsForNonEnums()", span="9-9"];
m1_84 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToInt16(System.IFormatProvider)", file="CasingExtensions.cs", label="Entry Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToInt16(System.IFormatProvider)", span="125-125"];
m1_85 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToInt16(System.IFormatProvider)", file="CasingExtensions.cs", label="throw new NotImplementedException();", span="127-127"];
m1_86 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToInt16(System.IFormatProvider)", file="CasingExtensions.cs", label="Exit Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToInt16(System.IFormatProvider)", span="125-125"];
m1_4 [cluster="Unk.>", file="CasingExtensions.cs", label="Entry Unk.>", span=""];
m1_53 [cluster="System.Enum.ToString()", file="CasingExtensions.cs", label="Entry System.Enum.ToString()", span="0-0"];
m1_54 [cluster="Humanizer.Tests.DehumanizeToEnumTests.HonorsDisplayAttribute()", file="CasingExtensions.cs", label="Entry Humanizer.Tests.DehumanizeToEnumTests.HonorsDisplayAttribute()", span="75-75"];
m1_55 [cluster="Humanizer.Tests.DehumanizeToEnumTests.HonorsDisplayAttribute()", file="CasingExtensions.cs", label="Assert.Equal(EnumUnderTest.MemberWithDisplayAttribute, EnumTestsResources.MemberWithDisplayAttribute.DehumanizeTo<EnumUnderTest>())", span="77-77"];
m1_56 [cluster="Humanizer.Tests.DehumanizeToEnumTests.HonorsDisplayAttribute()", file="CasingExtensions.cs", label="Assert.Equal(EnumUnderTest.MemberWithDisplayAttribute, EnumTestsResources.MemberWithDisplayAttribute.DehumanizeTo(typeof(EnumUnderTest)))", span="78-78"];
m1_57 [cluster="Humanizer.Tests.DehumanizeToEnumTests.HonorsDisplayAttribute()", file="CasingExtensions.cs", label="Exit Humanizer.Tests.DehumanizeToEnumTests.HonorsDisplayAttribute()", span="75-75"];
m1_23 [cluster="Humanizer.Tests.DehumanizeToEnumTests.CanReturnNullForEnumNoMatch()", file="CasingExtensions.cs", label="Entry Humanizer.Tests.DehumanizeToEnumTests.CanReturnNullForEnumNoMatch()", span="23-23"];
m1_24 [cluster="Humanizer.Tests.DehumanizeToEnumTests.CanReturnNullForEnumNoMatch()", file="CasingExtensions.cs", label="Assert.Null(EnumTestsResources.MemberWithDescriptionAttribute.DehumanizeTo(typeof(DummyEnum), OnNoMatch.ReturnsNull))", span="25-25"];
m1_25 [cluster="Humanizer.Tests.DehumanizeToEnumTests.CanReturnNullForEnumNoMatch()", file="CasingExtensions.cs", label="Exit Humanizer.Tests.DehumanizeToEnumTests.CanReturnNullForEnumNoMatch()", span="23-23"];
m1_78 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToSByte(System.IFormatProvider)", file="CasingExtensions.cs", label="Entry Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToSByte(System.IFormatProvider)", span="115-115"];
m1_79 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToSByte(System.IFormatProvider)", file="CasingExtensions.cs", label="throw new NotImplementedException();", span="117-117"];
m1_80 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToSByte(System.IFormatProvider)", file="CasingExtensions.cs", label="Exit Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToSByte(System.IFormatProvider)", span="115-115"];
m1_8 [cluster="string.DehumanizeTo<TTargetEnum>()", file="CasingExtensions.cs", label="Entry string.DehumanizeTo<TTargetEnum>()", span="18-18"];
m1_65 [cluster="System.NotImplementedException.NotImplementedException()", file="CasingExtensions.cs", label="Entry System.NotImplementedException.NotImplementedException()", span="0-0"];
m1_117 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToType(System.Type, System.IFormatProvider)", file="CasingExtensions.cs", label="Entry Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToType(System.Type, System.IFormatProvider)", span="180-180"];
m1_118 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToType(System.Type, System.IFormatProvider)", file="CasingExtensions.cs", label="throw new NotImplementedException();", span="182-182"];
m1_119 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToType(System.Type, System.IFormatProvider)", file="CasingExtensions.cs", label="Exit Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToType(System.Type, System.IFormatProvider)", span="180-180"];
m1_75 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToChar(System.IFormatProvider)", file="CasingExtensions.cs", label="Entry Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToChar(System.IFormatProvider)", span="110-110"];
m1_76 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToChar(System.IFormatProvider)", file="CasingExtensions.cs", label="throw new NotImplementedException();", span="112-112"];
m1_77 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToChar(System.IFormatProvider)", file="CasingExtensions.cs", label="Exit Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToChar(System.IFormatProvider)", span="110-110"];
m1_111 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToDateTime(System.IFormatProvider)", file="CasingExtensions.cs", label="Entry Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToDateTime(System.IFormatProvider)", span="170-170"];
m1_112 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToDateTime(System.IFormatProvider)", file="CasingExtensions.cs", label="throw new NotImplementedException();", span="172-172"];
m1_113 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToDateTime(System.IFormatProvider)", file="CasingExtensions.cs", label="Exit Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToDateTime(System.IFormatProvider)", span="170-170"];
m1_81 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToByte(System.IFormatProvider)", file="CasingExtensions.cs", label="Entry Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToByte(System.IFormatProvider)", span="120-120"];
m1_82 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToByte(System.IFormatProvider)", file="CasingExtensions.cs", label="throw new NotImplementedException();", span="122-122"];
m1_83 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToByte(System.IFormatProvider)", file="CasingExtensions.cs", label="Exit Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToByte(System.IFormatProvider)", span="120-120"];
m1_27 [cluster="Humanizer.Tests.DehumanizeToEnumTests.HonorsDescriptionAttribute()", file="CasingExtensions.cs", label="Entry Humanizer.Tests.DehumanizeToEnumTests.HonorsDescriptionAttribute()", span="29-29"];
m1_28 [cluster="Humanizer.Tests.DehumanizeToEnumTests.HonorsDescriptionAttribute()", file="CasingExtensions.cs", label="Assert.Equal(EnumUnderTest.MemberWithDescriptionAttribute, EnumTestsResources.MemberWithDescriptionAttribute.DehumanizeTo<EnumUnderTest>())", span="31-31"];
m1_29 [cluster="Humanizer.Tests.DehumanizeToEnumTests.HonorsDescriptionAttribute()", file="CasingExtensions.cs", label="Assert.Equal(EnumUnderTest.MemberWithDescriptionAttribute, EnumTestsResources.MemberWithDescriptionAttribute.DehumanizeTo(typeof(EnumUnderTest)))", span="32-32"];
m1_30 [cluster="Humanizer.Tests.DehumanizeToEnumTests.HonorsDescriptionAttribute()", file="CasingExtensions.cs", label="Exit Humanizer.Tests.DehumanizeToEnumTests.HonorsDescriptionAttribute()", span="29-29"];
m1_32 [cluster="Humanizer.Tests.DehumanizeToEnumTests.HonorsDescriptionAttributeSubclasses()", file="CasingExtensions.cs", label="Entry Humanizer.Tests.DehumanizeToEnumTests.HonorsDescriptionAttributeSubclasses()", span="36-36"];
m1_33 [cluster="Humanizer.Tests.DehumanizeToEnumTests.HonorsDescriptionAttributeSubclasses()", file="CasingExtensions.cs", label="string calculatedDescription = ''Overridden '' + EnumTestsResources.MemberWithDescriptionAttributeSubclass", span="38-38"];
m1_34 [cluster="Humanizer.Tests.DehumanizeToEnumTests.HonorsDescriptionAttributeSubclasses()", file="CasingExtensions.cs", label="Assert.Equal(EnumUnderTest.MemberWithDescriptionAttributeSubclass, calculatedDescription.DehumanizeTo<EnumUnderTest>())", span="39-39"];
m1_35 [cluster="Humanizer.Tests.DehumanizeToEnumTests.HonorsDescriptionAttributeSubclasses()", file="CasingExtensions.cs", label="Assert.Equal(EnumUnderTest.MemberWithDescriptionAttributeSubclass, calculatedDescription.DehumanizeTo(typeof(EnumUnderTest)))", span="40-40"];
m1_36 [cluster="Humanizer.Tests.DehumanizeToEnumTests.HonorsDescriptionAttributeSubclasses()", file="CasingExtensions.cs", label="Exit Humanizer.Tests.DehumanizeToEnumTests.HonorsDescriptionAttributeSubclasses()", span="36-36"];
m1_90 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToInt32(System.IFormatProvider)", file="CasingExtensions.cs", label="Entry Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToInt32(System.IFormatProvider)", span="135-135"];
m1_91 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToInt32(System.IFormatProvider)", file="CasingExtensions.cs", label="throw new NotImplementedException();", span="137-137"];
m1_92 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToInt32(System.IFormatProvider)", file="CasingExtensions.cs", label="Exit Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToInt32(System.IFormatProvider)", span="135-135"];
m1_66 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToString(string, System.IFormatProvider)", file="CasingExtensions.cs", label="Entry Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToString(string, System.IFormatProvider)", span="95-95"];
m1_67 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToString(string, System.IFormatProvider)", file="CasingExtensions.cs", label="throw new NotImplementedException();", span="97-97"];
m1_68 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToString(string, System.IFormatProvider)", file="CasingExtensions.cs", label="Exit Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToString(string, System.IFormatProvider)", span="95-95"];
m1_114 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToString(System.IFormatProvider)", file="CasingExtensions.cs", label="Entry Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToString(System.IFormatProvider)", span="175-175"];
m1_115 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToString(System.IFormatProvider)", file="CasingExtensions.cs", label="throw new NotImplementedException();", span="177-177"];
m1_116 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToString(System.IFormatProvider)", file="CasingExtensions.cs", label="Exit Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToString(System.IFormatProvider)", span="175-175"];
m1_12 [cluster="string.DehumanizeTo(System.Type, Humanizer.OnNoMatch)", file="CasingExtensions.cs", label="Entry string.DehumanizeTo(System.Type, Humanizer.OnNoMatch)", span="33-33"];
m1_26 [cluster="Unk.Null", file="CasingExtensions.cs", label="Entry Unk.Null", span=""];
m1_99 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToUInt64(System.IFormatProvider)", file="CasingExtensions.cs", label="Entry Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToUInt64(System.IFormatProvider)", span="150-150"];
m1_100 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToUInt64(System.IFormatProvider)", file="CasingExtensions.cs", label="throw new NotImplementedException();", span="152-152"];
m1_101 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToUInt64(System.IFormatProvider)", file="CasingExtensions.cs", label="Exit Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToUInt64(System.IFormatProvider)", span="150-150"];
m1_96 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToInt64(System.IFormatProvider)", file="CasingExtensions.cs", label="Entry Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToInt64(System.IFormatProvider)", span="145-145"];
m1_97 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToInt64(System.IFormatProvider)", file="CasingExtensions.cs", label="throw new NotImplementedException();", span="147-147"];
m1_98 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToInt64(System.IFormatProvider)", file="CasingExtensions.cs", label="Exit Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToInt64(System.IFormatProvider)", span="145-145"];
m1_13 [cluster="Humanizer.Tests.DehumanizeToEnumTests.ThrowsForEnumNoMatch()", file="CasingExtensions.cs", label="Entry Humanizer.Tests.DehumanizeToEnumTests.ThrowsForEnumNoMatch()", span="16-16"];
m1_14 [cluster="Humanizer.Tests.DehumanizeToEnumTests.ThrowsForEnumNoMatch()", file="CasingExtensions.cs", label="Assert.Throws<NoMatchFoundException>(() => EnumTestsResources.MemberWithDescriptionAttribute.DehumanizeTo<DummyEnum>())", span="18-18"];
m1_15 [cluster="Humanizer.Tests.DehumanizeToEnumTests.ThrowsForEnumNoMatch()", file="CasingExtensions.cs", label="Assert.Throws<NoMatchFoundException>(() => EnumTestsResources.MemberWithDescriptionAttribute.DehumanizeTo(typeof(DummyEnum)))", span="19-19"];
m1_16 [cluster="Humanizer.Tests.DehumanizeToEnumTests.ThrowsForEnumNoMatch()", file="CasingExtensions.cs", label="Exit Humanizer.Tests.DehumanizeToEnumTests.ThrowsForEnumNoMatch()", span="16-16"];
m1_108 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToDecimal(System.IFormatProvider)", file="CasingExtensions.cs", label="Entry Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToDecimal(System.IFormatProvider)", span="165-165"];
m1_109 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToDecimal(System.IFormatProvider)", file="CasingExtensions.cs", label="throw new NotImplementedException();", span="167-167"];
m1_110 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToDecimal(System.IFormatProvider)", file="CasingExtensions.cs", label="Exit Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToDecimal(System.IFormatProvider)", span="165-165"];
m1_20 [cluster="lambda expression", file="CasingExtensions.cs", label="Entry lambda expression", span="19-19"];
m1_5 [cluster="lambda expression", file="CasingExtensions.cs", label="Entry lambda expression", span="11-11"];
m1_9 [cluster="lambda expression", file="CasingExtensions.cs", label="Entry lambda expression", span="12-12"];
m1_6 [cluster="lambda expression", file="CasingExtensions.cs", label="EnumTestsResources.MemberWithDescriptionAttribute.DehumanizeTo<DummyStructWithEnumInterfaces>()", span="11-11"];
m1_7 [cluster="lambda expression", file="CasingExtensions.cs", label="Exit lambda expression", span="11-11"];
m1_10 [cluster="lambda expression", file="CasingExtensions.cs", label="EnumTestsResources.MemberWithDescriptionAttribute.DehumanizeTo(typeof(DummyStructWithEnumInterfaces))", span="12-12"];
m1_11 [cluster="lambda expression", file="CasingExtensions.cs", label="Exit lambda expression", span="12-12"];
m1_17 [cluster="lambda expression", file="CasingExtensions.cs", label="Entry lambda expression", span="18-18"];
m1_18 [cluster="lambda expression", file="CasingExtensions.cs", label="EnumTestsResources.MemberWithDescriptionAttribute.DehumanizeTo<DummyEnum>()", span="18-18"];
m1_19 [cluster="lambda expression", file="CasingExtensions.cs", label="Exit lambda expression", span="18-18"];
m1_21 [cluster="lambda expression", file="CasingExtensions.cs", label="EnumTestsResources.MemberWithDescriptionAttribute.DehumanizeTo(typeof(DummyEnum))", span="19-19"];
m1_22 [cluster="lambda expression", file="CasingExtensions.cs", label="Exit lambda expression", span="19-19"];
m1_49 [cluster="Humanizer.Tests.DehumanizeToEnumTests.AllCapitalMembersAreReturnedAsIs()", file="CasingExtensions.cs", label="Entry Humanizer.Tests.DehumanizeToEnumTests.AllCapitalMembersAreReturnedAsIs()", span="68-68"];
m1_50 [cluster="Humanizer.Tests.DehumanizeToEnumTests.AllCapitalMembersAreReturnedAsIs()", file="CasingExtensions.cs", label="Assert.Equal(EnumUnderTest.ALLCAPITALS, EnumUnderTest.ALLCAPITALS.ToString().DehumanizeTo<EnumUnderTest>())", span="70-70"];
m1_51 [cluster="Humanizer.Tests.DehumanizeToEnumTests.AllCapitalMembersAreReturnedAsIs()", file="CasingExtensions.cs", label="Assert.Equal(EnumUnderTest.ALLCAPITALS, EnumUnderTest.ALLCAPITALS.ToString().DehumanizeTo(typeof(EnumUnderTest)))", span="71-71"];
m1_52 [cluster="Humanizer.Tests.DehumanizeToEnumTests.AllCapitalMembersAreReturnedAsIs()", file="CasingExtensions.cs", label="Exit Humanizer.Tests.DehumanizeToEnumTests.AllCapitalMembersAreReturnedAsIs()", span="68-68"];
m1_87 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToUInt16(System.IFormatProvider)", file="CasingExtensions.cs", label="Entry Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToUInt16(System.IFormatProvider)", span="130-130"];
m1_88 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToUInt16(System.IFormatProvider)", file="CasingExtensions.cs", label="throw new NotImplementedException();", span="132-132"];
m1_89 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToUInt16(System.IFormatProvider)", file="CasingExtensions.cs", label="Exit Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToUInt16(System.IFormatProvider)", span="130-130"];
m1_72 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToBoolean(System.IFormatProvider)", file="CasingExtensions.cs", label="Entry Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToBoolean(System.IFormatProvider)", span="105-105"];
m1_73 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToBoolean(System.IFormatProvider)", file="CasingExtensions.cs", label="throw new NotImplementedException();", span="107-107"];
m1_74 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToBoolean(System.IFormatProvider)", file="CasingExtensions.cs", label="Exit Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToBoolean(System.IFormatProvider)", span="105-105"];
m1_58 [cluster="Humanizer.Tests.DehumanizeToEnumTests.HonorsLocalizedDisplayAttribute()", file="CasingExtensions.cs", label="Entry Humanizer.Tests.DehumanizeToEnumTests.HonorsLocalizedDisplayAttribute()", span="82-82"];
m1_59 [cluster="Humanizer.Tests.DehumanizeToEnumTests.HonorsLocalizedDisplayAttribute()", file="CasingExtensions.cs", label="Assert.Equal(EnumUnderTest.MemberWithLocalizedDisplayAttribute, EnumTestsResources.MemberWithLocalizedDisplayAttribute.DehumanizeTo<EnumUnderTest>())", span="84-84"];
m1_60 [cluster="Humanizer.Tests.DehumanizeToEnumTests.HonorsLocalizedDisplayAttribute()", file="CasingExtensions.cs", label="Assert.Equal(EnumUnderTest.MemberWithLocalizedDisplayAttribute, EnumTestsResources.MemberWithLocalizedDisplayAttribute.DehumanizeTo(typeof(EnumUnderTest)))", span="85-85"];
m1_61 [cluster="Humanizer.Tests.DehumanizeToEnumTests.HonorsLocalizedDisplayAttribute()", file="CasingExtensions.cs", label="Exit Humanizer.Tests.DehumanizeToEnumTests.HonorsLocalizedDisplayAttribute()", span="82-82"];
m1_62 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.CompareTo(object)", file="CasingExtensions.cs", label="Entry Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.CompareTo(object)", span="90-90"];
m1_63 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.CompareTo(object)", file="CasingExtensions.cs", label="throw new NotImplementedException();", span="92-92"];
m1_64 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.CompareTo(object)", file="CasingExtensions.cs", label="Exit Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.CompareTo(object)", span="90-90"];
m1_105 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToDouble(System.IFormatProvider)", file="CasingExtensions.cs", label="Entry Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToDouble(System.IFormatProvider)", span="160-160"];
m1_106 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToDouble(System.IFormatProvider)", file="CasingExtensions.cs", label="throw new NotImplementedException();", span="162-162"];
m1_107 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToDouble(System.IFormatProvider)", file="CasingExtensions.cs", label="Exit Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToDouble(System.IFormatProvider)", span="160-160"];
m1_45 [cluster="Humanizer.Tests.DehumanizeToEnumTests.IsCaseInsensitive(string, Humanizer.Tests.EnumUnderTest)", file="CasingExtensions.cs", label="Entry Humanizer.Tests.DehumanizeToEnumTests.IsCaseInsensitive(string, Humanizer.Tests.EnumUnderTest)", span="61-61"];
m1_46 [cluster="Humanizer.Tests.DehumanizeToEnumTests.IsCaseInsensitive(string, Humanizer.Tests.EnumUnderTest)", file="CasingExtensions.cs", label="Assert.Equal(expectedEnum, input.DehumanizeTo<EnumUnderTest>())", span="63-63"];
m1_47 [cluster="Humanizer.Tests.DehumanizeToEnumTests.IsCaseInsensitive(string, Humanizer.Tests.EnumUnderTest)", file="CasingExtensions.cs", label="Assert.Equal(expectedEnum, input.DehumanizeTo(typeof(EnumUnderTest)))", span="64-64"];
m1_48 [cluster="Humanizer.Tests.DehumanizeToEnumTests.IsCaseInsensitive(string, Humanizer.Tests.EnumUnderTest)", file="CasingExtensions.cs", label="Exit Humanizer.Tests.DehumanizeToEnumTests.IsCaseInsensitive(string, Humanizer.Tests.EnumUnderTest)", span="61-61"];
m1_102 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToSingle(System.IFormatProvider)", file="CasingExtensions.cs", label="Entry Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToSingle(System.IFormatProvider)", span="155-155"];
m1_103 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToSingle(System.IFormatProvider)", file="CasingExtensions.cs", label="throw new NotImplementedException();", span="157-157"];
m1_104 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToSingle(System.IFormatProvider)", file="CasingExtensions.cs", label="Exit Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToSingle(System.IFormatProvider)", span="155-155"];
m1_93 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToUInt32(System.IFormatProvider)", file="CasingExtensions.cs", label="Entry Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToUInt32(System.IFormatProvider)", span="140-140"];
m1_94 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToUInt32(System.IFormatProvider)", file="CasingExtensions.cs", label="throw new NotImplementedException();", span="142-142"];
m1_95 [cluster="Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToUInt32(System.IFormatProvider)", file="CasingExtensions.cs", label="Exit Humanizer.Tests.DehumanizeToEnumTests.DummyStructWithEnumInterfaces.ToUInt32(System.IFormatProvider)", span="140-140"];
m2_4 [cluster="lambda expression", file="Configurator.cs", label="Entry lambda expression", span="16-16"];
m2_0 [cluster="lambda expression", file="Configurator.cs", label="Entry lambda expression", span="15-15"];
m2_1 [cluster="lambda expression", file="Configurator.cs", label="new RomanianFormatter()", span="15-15"];
m2_2 [cluster="lambda expression", file="Configurator.cs", label="Exit lambda expression", span="15-15"];
m2_5 [cluster="lambda expression", color=green, community=0, file="Configurator.cs", label="2: new RussianFormatter()", span="16-16"];
m2_6 [cluster="lambda expression", file="Configurator.cs", label="Exit lambda expression", span="16-16"];
m2_3 [cluster="Humanizer.Localisation.RomanianFormatter.RomanianFormatter()", file="Configurator.cs", label="Entry Humanizer.Localisation.RomanianFormatter.RomanianFormatter()", span="2-2"];
m2_7 [cluster="Humanizer.Localisation.RussianFormatter.RussianFormatter()", file="Configurator.cs", label="Entry Humanizer.Localisation.RussianFormatter.RussianFormatter()", span="2-2"];
m5_8 [cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", file="InflectorTests.cs", label="Entry Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", span="27-27"];
m5_9 [cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", file="InflectorTests.cs", label="Assert.Equal(plural, plural.Pluralize(Plurality.CouldBeEither))", span="29-29"];
m5_10 [cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", file="InflectorTests.cs", label="Assert.Equal(plural, singular.Pluralize(Plurality.CouldBeEither))", span="30-30"];
m5_11 [cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", span="27-27"];
m5_27 [cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", file="InflectorTests.cs", label="Entry Humanizer.Tests.InflectorTests.Dasherize(string, string)", span="73-73"];
m5_28 [cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", file="InflectorTests.cs", label="Assert.Equal(input.Dasherize(), expectedOutput)", span="75-75"];
m5_29 [cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.Dasherize(string, string)", span="73-73"];
m5_16 [cluster="Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord(string, string)", file="InflectorTests.cs", label="Entry Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord(string, string)", span="42-42"];
m5_17 [cluster="Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord(string, string)", file="InflectorTests.cs", label="Assert.Equal(singular, singular.Singularize(Plurality.Singular))", span="44-44"];
m5_18 [cluster="Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord(string, string)", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord(string, string)", span="42-42"];
m5_35 [cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)", file="InflectorTests.cs", label="Entry Humanizer.Tests.InflectorTests.Camelize(string, string)", span="100-100"];
m5_36 [cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)", file="InflectorTests.cs", label="Assert.Equal(expectedOutput, input.Camelize())", span="102-102"];
m5_37 [cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.Camelize(string, string)", span="100-100"];
m5_43 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="Entry Humanizer.Tests.PluralTestSource.GetEnumerator()", span="121-121"];
m5_44 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''search'', ''searches''};", span="123-123"];
m5_45 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''switch'', ''switches''};", span="124-124"];
m5_46 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''fix'', ''fixes''};", span="125-125"];
m5_47 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''box'', ''boxes''};", span="126-126"];
m5_48 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''process'', ''processes''};", span="127-127"];
m5_49 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''address'', ''addresses''};", span="128-128"];
m5_50 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''case'', ''cases''};", span="129-129"];
m5_51 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''stack'', ''stacks''};", span="130-130"];
m5_52 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''wish'', ''wishes''};", span="131-131"];
m5_53 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''fish'', ''fish''};", span="132-132"];
m5_54 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''category'', ''categories''};", span="134-134"];
m5_55 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''query'', ''queries''};", span="135-135"];
m5_56 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''ability'', ''abilities''};", span="136-136"];
m5_57 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''agency'', ''agencies''};", span="137-137"];
m5_58 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''movie'', ''movies''};", span="138-138"];
m5_59 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''archive'', ''archives''};", span="140-140"];
m5_60 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''index'', ''indices''};", span="142-142"];
m5_61 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''wife'', ''wives''};", span="144-144"];
m5_62 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''safe'', ''saves''};", span="145-145"];
m5_63 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''half'', ''halves''};", span="146-146"];
m5_64 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''move'', ''moves''};", span="148-148"];
m5_65 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''salesperson'', ''salespeople''};", span="150-150"];
m5_66 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''person'', ''people''};", span="151-151"];
m5_67 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''spokesman'', ''spokesmen''};", span="153-153"];
m5_68 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''man'', ''men''};", span="154-154"];
m5_69 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''woman'', ''women''};", span="155-155"];
m5_70 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''basis'', ''bases''};", span="157-157"];
m5_71 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''diagnosis'', ''diagnoses''};", span="158-158"];
m5_72 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''datum'', ''data''};", span="160-160"];
m5_73 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''medium'', ''media''};", span="161-161"];
m5_74 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''analysis'', ''analyses''};", span="162-162"];
m5_75 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''node_child'', ''node_children''};", span="164-164"];
m5_76 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''child'', ''children''};", span="165-165"];
m5_77 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''experience'', ''experiences''};", span="167-167"];
m5_78 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''day'', ''days''};", span="168-168"];
m5_79 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''comment'', ''comments''};", span="170-170"];
m5_80 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''foobar'', ''foobars''};", span="171-171"];
m5_81 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''newsletter'', ''newsletters''};", span="172-172"];
m5_82 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''old_news'', ''old_news''};", span="174-174"];
m5_83 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''news'', ''news''};", span="175-175"];
m5_84 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''series'', ''series''};", span="177-177"];
m5_85 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''species'', ''species''};", span="178-178"];
m5_86 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''quiz'', ''quizzes''};", span="180-180"];
m5_87 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''perspective'', ''perspectives''};", span="182-182"];
m5_88 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''ox'', ''oxen''};", span="184-184"];
m5_89 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''photo'', ''photos''};", span="185-185"];
m5_90 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''buffalo'', ''buffaloes''};", span="186-186"];
m5_91 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''tomato'', ''tomatoes''};", span="187-187"];
m5_92 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''dwarf'', ''dwarves''};", span="188-188"];
m5_93 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''elf'', ''elves''};", span="189-189"];
m5_94 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''information'', ''information''};", span="190-190"];
m5_95 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''equipment'', ''equipment''};", span="191-191"];
m5_96 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''bus'', ''buses''};", span="192-192"];
m5_97 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''status'', ''statuses''};", span="193-193"];
m5_98 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''status_code'', ''status_codes''};", span="194-194"];
m5_99 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''mouse'', ''mice''};", span="195-195"];
m5_100 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''louse'', ''lice''};", span="197-197"];
m5_101 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''house'', ''houses''};", span="198-198"];
m5_102 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''octopus'', ''octopi''};", span="199-199"];
m5_103 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''virus'', ''viri''};", span="200-200"];
m5_104 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''alias'', ''aliases''};", span="201-201"];
m5_105 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''portfolio'', ''portfolios''};", span="202-202"];
m5_106 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''vertex'', ''vertices''};", span="204-204"];
m5_107 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''matrix'', ''matrices''};", span="205-205"];
m5_108 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''axis'', ''axes''};", span="207-207"];
m5_109 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''testis'', ''testes''};", span="208-208"];
m5_110 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''crisis'', ''crises''};", span="209-209"];
m5_111 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''rice'', ''rice''};", span="211-211"];
m5_112 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''shoe'', ''shoes''};", span="212-212"];
m5_113 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''horse'', ''horses''};", span="214-214"];
m5_114 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''prize'', ''prizes''};", span="215-215"];
m5_115 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''edge'', ''edges''};", span="216-216"];
m5_116 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''goose'', ''geese''};", span="219-219"];
m5_117 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''deer'', ''deer''};", span="220-220"];
m5_118 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''sheep'', ''sheep''};", span="221-221"];
m5_119 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''wolf'', ''wolves''};", span="222-222"];
m5_120 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''volcano'', ''volcanoes''};", span="223-223"];
m5_121 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''aircraft'', ''aircraft''};", span="224-224"];
m5_122 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''alumna'', ''alumnae''};", span="225-225"];
m5_123 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''alumnus'', ''alumni''};", span="226-226"];
m5_124 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''fungus'', ''fungi''};", span="227-227"];
m5_125 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="Exit Humanizer.Tests.PluralTestSource.GetEnumerator()", span="121-121"];
m5_4 [cluster="Unk.Equal", file="InflectorTests.cs", label="Entry Unk.Equal", span=""];
m5_19 [cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", file="InflectorTests.cs", label="Entry Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", span="49-49"];
m5_20 [cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", file="InflectorTests.cs", label="Assert.Equal(singular, singular.Singularize(Plurality.CouldBeEither))", span="51-51"];
m5_21 [cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", file="InflectorTests.cs", label="Assert.Equal(singular, plural.Singularize(Plurality.CouldBeEither))", span="52-52"];
m5_22 [cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", span="49-49"];
m5_39 [cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)", file="InflectorTests.cs", label="Entry Humanizer.Tests.InflectorTests.Underscore(string, string)", span="113-113"];
m5_40 [cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)", file="InflectorTests.cs", label="Assert.Equal(expectedOuput, input.Underscore())", span="115-115"];
m5_41 [cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.Underscore(string, string)", span="113-113"];
m5_3 [cluster="string.Pluralize(Humanizer.Plurality)", file="InflectorTests.cs", label="Entry string.Pluralize(Humanizer.Plurality)", span="147-147"];
m5_34 [cluster="string.Pascalize()", file="InflectorTests.cs", label="Entry string.Pascalize()", span="226-226"];
m5_23 [cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", file="InflectorTests.cs", label="Entry Humanizer.Tests.InflectorTests.Titleize(string, string)", span="63-63"];
m5_24 [cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", file="InflectorTests.cs", label="Assert.Equal(expectedOuput, input.Titleize())", span="65-65"];
m5_25 [cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.Titleize(string, string)", span="63-63"];
m5_26 [cluster="string.Titleize()", file="InflectorTests.cs", label="Entry string.Titleize()", span="216-216"];
m5_0 [cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)", file="InflectorTests.cs", label="Entry Humanizer.Tests.InflectorTests.Pluralize(string, string)", span="13-13"];
m5_1 [cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)", file="InflectorTests.cs", label="Assert.Equal(plural, singular.Pluralize())", span="15-15"];
m5_2 [cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.Pluralize(string, string)", span="13-13"];
m5_30 [cluster="string.Dasherize()", file="InflectorTests.cs", label="Entry string.Dasherize()", span="259-259"];
m5_12 [cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", file="InflectorTests.cs", label="Entry Humanizer.Tests.InflectorTests.Singularize(string, string)", span="35-35"];
m5_13 [cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", file="InflectorTests.cs", label="Assert.Equal(singular, plural.Singularize())", span="37-37"];
m5_14 [cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.Singularize(string, string)", span="35-35"];
m5_31 [cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", file="InflectorTests.cs", label="Entry Humanizer.Tests.InflectorTests.Pascalize(string, string)", span="86-86"];
m5_32 [cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", file="InflectorTests.cs", label="Assert.Equal(expectedOutput, input.Pascalize())", span="88-88"];
m5_33 [cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.Pascalize(string, string)", span="86-86"];
m5_126 [cluster="Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", file="InflectorTests.cs", label="Entry Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", span="230-230"];
m5_127 [cluster="Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", file="InflectorTests.cs", label="return GetEnumerator();", span="232-232"];
m5_128 [cluster="Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", file="InflectorTests.cs", label="Exit Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", span="230-230"];
m5_38 [cluster="string.Camelize()", file="InflectorTests.cs", label="Entry string.Camelize()", span="236-236"];
m5_42 [cluster="string.Underscore()", file="InflectorTests.cs", label="Entry string.Underscore()", span="247-247"];
m5_5 [cluster="Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord(string, string)", file="InflectorTests.cs", label="Entry Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord(string, string)", span="20-20"];
m5_6 [cluster="Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord(string, string)", file="InflectorTests.cs", label="Assert.Equal(plural, plural.Pluralize(Plurality.Plural))", span="22-22"];
m5_7 [cluster="Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord(string, string)", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord(string, string)", span="20-20"];
m5_15 [cluster="string.Singularize(Humanizer.Plurality)", file="InflectorTests.cs", label="Entry string.Singularize(Humanizer.Plurality)", span="171-171"];
m5_129 [file="InflectorTests.cs", label="Humanizer.Tests.PluralTestSource", span=""];
m6_8 [cluster="Humanizer.Tests.StringDehumanizeTests.MixedCaseSentence()", file="StringDehumanizeTests.cs", label="Entry Humanizer.Tests.StringDehumanizeTests.MixedCaseSentence()", span="23-23"];
m6_0 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", file="StringDehumanizeTests.cs", label="Entry Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", span="6-6"];
m6_1 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", color=green, community=0, file="StringDehumanizeTests.cs", label="0: Register(''en'', new EnglishOrdinalizer())", span="8-8"];
m6_2 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", color=green, community=0, file="StringDehumanizeTests.cs", label="1: Register(''es'', new SpanishOrdinalizer())", span="9-9"];
m6_9 [cluster="Humanizer.Tests.StringDehumanizeTests.MixedCaseSentence()", color=red, community=1, file="StringDehumanizeTests.cs", label="0: Assert.Equal(\r\n                ''MixedCaseSentenceIsCamelized'',\r\n                ''Mixed case sentence Is Camelized''.Dehumanize())", span="25-27"];
m6_11 [cluster="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.BrazilianPortugueseOrdinalizer()", file="StringDehumanizeTests.cs", label="Entry Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.BrazilianPortugueseOrdinalizer()", span="2-2"];
m6_12 [cluster="Humanizer.Localisation.Ordinalizers.GermanOrdinalizer.GermanOrdinalizer()", color=red, community=1, file="StringDehumanizeTests.cs", label="0: Entry Humanizer.Localisation.Ordinalizers.GermanOrdinalizer.GermanOrdinalizer()", span="2-2"];
m6_13 [cluster="Humanizer.Tests.StringDehumanizeTests.LowerCaseSentence()", file="StringDehumanizeTests.cs", label="Humanizer.Configuration.OrdinalizerRegistry", span=""];
m6_7 [cluster="Humanizer.Tests.StringDehumanizeTests.TitleCaseSentence()", file="StringDehumanizeTests.cs", label="Exit Humanizer.Tests.StringDehumanizeTests.TitleCaseSentence()", span="15-15"];
m6_5 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", color=green, community=0, file="StringDehumanizeTests.cs", label="0: Register(''de'', new GermanOrdinalizer())", span="12-12"];
m6_6 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", color=red, community=1, file="StringDehumanizeTests.cs", label="0: Exit Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", span="6-6"];
m6_4 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", color=green, community=0, file="StringDehumanizeTests.cs", label="1: Register(''pt-BR'', new BrazilianPortugueseOrdinalizer())", span="11-11"];
m6_3 [cluster="string.Dehumanize()", color=green, community=0, file="StringDehumanizeTests.cs", label="0: Entry string.Dehumanize()", span="11-11"];
m6_14 [cluster="Humanizer.Tests.StringDehumanizeTests.EmptySentence()", file="StringDehumanizeTests.cs", label="Entry Humanizer.Tests.StringDehumanizeTests.EmptySentence()", span="39-39"];
m6_15 [cluster="Humanizer.Tests.StringDehumanizeTests.EmptySentence()", color=red, community=1, file="StringDehumanizeTests.cs", label="0: Assert.Equal(\r\n                '''',\r\n                ''''.Dehumanize())", span="41-43"];
m6_16 [cluster="Humanizer.Tests.StringDehumanizeTests.EmptySentence()", file="StringDehumanizeTests.cs", label="Exit Humanizer.Tests.StringDehumanizeTests.EmptySentence()", span="39-39"];
m6_10 [cluster="Humanizer.Tests.StringDehumanizeTests.MixedCaseSentence()", file="StringDehumanizeTests.cs", label="Exit Humanizer.Tests.StringDehumanizeTests.MixedCaseSentence()", span="23-23"];
m8_3 [cluster="string.Humanize()", file="StringHumanizeTests.cs", label="Entry string.Humanize()", span="42-42"];
m8_45 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", span="115-115"];
m8_46 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''Can Return Title Case'',\r\n                ''Can_return_title_Case''.Humanize(LetterCasing.Title))", span="117-119"];
m8_47 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", span="115-115"];
m8_54 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoSentenceCase()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoSentenceCase()", span="139-139"];
m8_55 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoSentenceCase()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''Can return sentence case'',\r\n                ''CanReturnSentenceCase''.Humanize(LetterCasing.Sentence))", span="141-143"];
m8_56 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoSentenceCase()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoSentenceCase()", span="139-139"];
m8_38 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheStart()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheStart()", span="99-99"];
m8_39 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheStart()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''1 HTML'',\r\n                ''1HTML''.Humanize())", span="101-103"];
m8_40 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheStart()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheStart()", span="99-99"];
m8_48 [cluster="Humanizer.Tests.StringHumanizeTests.TitleHumanizationHonorsAllCaps()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.TitleHumanizationHonorsAllCaps()", span="123-123"];
m8_49 [cluster="Humanizer.Tests.StringHumanizeTests.TitleHumanizationHonorsAllCaps()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''Title Humanization Honors ALLCAPS'',\r\n                ''Title_humanization_Honors_ALLCAPS''.Humanize(LetterCasing.Title))", span="125-127"];
m8_50 [cluster="Humanizer.Tests.StringHumanizeTests.TitleHumanizationHonorsAllCaps()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.TitleHumanizationHonorsAllCaps()", span="123-123"];
m8_60 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", span="155-155"];
m8_61 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''lowercase'',\r\n                ''LOWERCASE''.Humanize(LetterCasing.LowerCase))", span="157-159"];
m8_62 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", span="155-155"];
m8_4 [cluster="Unk.Equal", file="StringHumanizeTests.cs", label="Entry Unk.Equal", span=""];
m8_26 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheMiddle()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheMiddle()", span="67-67"];
m8_27 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheMiddle()", color=green, community=1, file="StringHumanizeTests.cs", label="2: Assert.Equal(\r\n                ''The HTML language'',\r\n                ''TheHTMLLanguage''.Humanize())", span="69-71"];
m8_28 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheMiddle()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheMiddle()", span="67-67"];
m8_51 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCase()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCase()", span="131-131"];
m8_52 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCase()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''can return lower case'',\r\n                ''CanReturnLowerCase''.Humanize(LetterCasing.LowerCase))", span="133-135"];
m8_53 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCase()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCase()", span="131-131"];
m8_5 [cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", span="15-15"];
m8_6 [cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", color=green, community=0, file="StringHumanizeTests.cs", label="2: Assert.Equal(\r\n                ''When I use an input a here'',\r\n                ''WhenIUseAnInputAHere''.Humanize())", span="17-19"];
m8_7 [cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", span="15-15"];
m8_8 [cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringStartsWithANumber_ThenNumberIsDealtWithLikeAWord()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.WhenInputStringStartsWithANumber_ThenNumberIsDealtWithLikeAWord()", span="23-23"];
m8_9 [cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringStartsWithANumber_ThenNumberIsDealtWithLikeAWord()", file="StringHumanizeTests.cs", label="Assert.Equal(''10 is in the begining'', ''10IsInTheBegining''.Humanize())", span="25-25"];
m8_10 [cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringStartsWithANumber_ThenNumberIsDealtWithLikeAWord()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.WhenInputStringStartsWithANumber_ThenNumberIsDealtWithLikeAWord()", span="23-23"];
m8_14 [cluster="Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringIsTurnedIntoSentence()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringIsTurnedIntoSentence()", span="35-35"];
m8_15 [cluster="Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringIsTurnedIntoSentence()", color=green, community=0, file="StringHumanizeTests.cs", label="2: Assert.Equal(\r\n                ''Underscored input string is turned into sentence'',\r\n                ''Underscored_input_string_is_turned_into_sentence''.Humanize())", span="37-39"];
m8_16 [cluster="Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringIsTurnedIntoSentence()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringIsTurnedIntoSentence()", span="35-35"];
m8_20 [cluster="Humanizer.Tests.StringHumanizeTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", span="51-51"];
m8_21 [cluster="Humanizer.Tests.StringHumanizeTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", color=green, community=1, file="StringHumanizeTests.cs", label="2: Assert.Equal(\r\n                ''X is first word in the sentence'',\r\n                ''XIsFirstWordInTheSentence''.Humanize())", span="53-55"];
m8_22 [cluster="Humanizer.Tests.StringHumanizeTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", span="51-51"];
m8_23 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreLeftIntact()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.AcronymsAreLeftIntact()", span="59-59"];
m8_24 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreLeftIntact()", color=green, community=1, file="StringHumanizeTests.cs", label="2: Assert.Equal(\r\n                ''HTML'',\r\n                ''HTML''.Humanize())", span="61-63"];
m8_25 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreLeftIntact()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.AcronymsAreLeftIntact()", span="59-59"];
m8_66 [cluster="Humanizer.Tests.StringHumanizeTests.CanTurnIntoUpperCasewhenUsingUnderscores()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.CanTurnIntoUpperCasewhenUsingUnderscores()", span="171-171"];
m8_67 [cluster="Humanizer.Tests.StringHumanizeTests.CanTurnIntoUpperCasewhenUsingUnderscores()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''CAN HUMANIZE INTO UPPER CASE'',\r\n                ''Can_Humanize_into_Upper_case''.Humanize(LetterCasing.AllCaps))", span="173-175"];
m8_68 [cluster="Humanizer.Tests.StringHumanizeTests.CanTurnIntoUpperCasewhenUsingUnderscores()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.CanTurnIntoUpperCasewhenUsingUnderscores()", span="171-171"];
m8_32 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheEnd()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheEnd()", span="83-83"];
m8_33 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheEnd()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''The language is HTML'',\r\n                ''TheLanguageIsHTML''.Humanize())", span="85-87"];
m8_34 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheEnd()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheEnd()", span="83-83"];
m8_44 [cluster="string.Humanize(Humanizer.LetterCasing)", file="StringHumanizeTests.cs", label="Entry string.Humanize(Humanizer.LetterCasing)", span="60-60"];
m8_17 [cluster="Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringPreservesCasing()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringPreservesCasing()", span="43-43"];
m8_18 [cluster="Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringPreservesCasing()", color=green, community=1, file="StringHumanizeTests.cs", label="2: Assert.Equal(\r\n                ''Underscored input String is turned INTO sentence'',\r\n                ''Underscored_input_String_is_turned_INTO_sentence''.Humanize())", span="45-47"];
m8_19 [cluster="Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringPreservesCasing()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringPreservesCasing()", span="43-43"];
m8_63 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoUpperCase()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoUpperCase()", span="163-163"];
m8_64 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoUpperCase()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''CAN HUMANIZE INTO UPPER CASE'',\r\n                ''CanHumanizeIntoUpperCase''.Humanize(LetterCasing.AllCaps))", span="165-167"];
m8_65 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoUpperCase()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoUpperCase()", span="163-163"];
m8_11 [cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", span="29-29"];
m8_12 [cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", color=green, community=0, file="StringHumanizeTests.cs", label="2: Assert.Equal(''Number is at the end 100'', ''NumberIsAtTheEnd100''.Humanize())", span="31-31"];
m8_13 [cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", span="29-29"];
m8_35 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheEnd()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheEnd()", span="91-91"];
m8_36 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheEnd()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''HTML 5'',\r\n                ''HTML5''.Humanize())", span="93-95"];
m8_37 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheEnd()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheEnd()", span="91-91"];
m8_41 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", span="107-107"];
m8_42 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''Can Return Title Case'',\r\n                ''CanReturnTitleCase''.Humanize(LetterCasing.Title))", span="109-111"];
m8_43 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", span="107-107"];
m8_57 [cluster="Humanizer.Tests.StringHumanizeTests.SentenceCasingWorksOnEmptyStrings()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.SentenceCasingWorksOnEmptyStrings()", span="147-147"];
m8_58 [cluster="Humanizer.Tests.StringHumanizeTests.SentenceCasingWorksOnEmptyStrings()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                '''',\r\n                ''''.Humanize(LetterCasing.Sentence))", span="149-151"];
m8_59 [cluster="Humanizer.Tests.StringHumanizeTests.SentenceCasingWorksOnEmptyStrings()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.SentenceCasingWorksOnEmptyStrings()", span="147-147"];
m8_29 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheStart()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheStart()", span="75-75"];
m8_30 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheStart()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''HTML is the language'',\r\n                ''HTMLIsTheLanguage''.Humanize())", span="77-79"];
m8_31 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheStart()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheStart()", span="75-75"];
m8_0 [cluster="Humanizer.Tests.StringHumanizeTests.PascalCaseInputStringIsTurnedIntoSentence()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.PascalCaseInputStringIsTurnedIntoSentence()", span="7-7"];
m8_1 [cluster="Humanizer.Tests.StringHumanizeTests.PascalCaseInputStringIsTurnedIntoSentence()", color=green, community=0, file="StringHumanizeTests.cs", label="2: Assert.Equal(\r\n                ''Pascal case input string is turned into sentence'',\r\n                ''PascalCaseInputStringIsTurnedIntoSentence''.Humanize())", span="9-11"];
m8_2 [cluster="Humanizer.Tests.StringHumanizeTests.PascalCaseInputStringIsTurnedIntoSentence()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.PascalCaseInputStringIsTurnedIntoSentence()", span="7-7"];
m9_7 [cluster="Humanizer.Localisation.NumberToWords.ArabicNumberToWordsConverter.ArabicNumberToWordsConverter()", file="TimeSpanHumanizeExtensionsTests.cs", label="Entry Humanizer.Localisation.NumberToWords.ArabicNumberToWordsConverter.ArabicNumberToWordsConverter()", span="4-4"];
m9_15 [cluster="Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(int)", file="TimeSpanHumanizeExtensionsTests.cs", label="Entry Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(int)", span="12-12"];
m9_12 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="TimeSpanHumanizeExtensionsTests.cs", label="Entry Humanizer.NumberToWordsExtension.ToWords(int)", span="25-25"];
m9_13 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="TimeSpanHumanizeExtensionsTests.cs", label="return Converter.Convert(number);", span="27-27"];
m9_14 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="TimeSpanHumanizeExtensionsTests.cs", label="Exit Humanizer.NumberToWordsExtension.ToWords(int)", span="25-25"];
m9_3 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.EnglishNumberToWordsConverter()", file="TimeSpanHumanizeExtensionsTests.cs", label="Entry Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.EnglishNumberToWordsConverter()", span="5-5"];
m9_11 [cluster="Humanizer.Localisation.NumberToWords.FarsiNumberToWordsConverter.FarsiNumberToWordsConverter()", file="TimeSpanHumanizeExtensionsTests.cs", label="Entry Humanizer.Localisation.NumberToWords.FarsiNumberToWordsConverter.FarsiNumberToWordsConverter()", span="5-5"];
m9_8 [cluster="lambda expression", file="TimeSpanHumanizeExtensionsTests.cs", label="Entry lambda expression", span="17-17"];
m9_0 [cluster="lambda expression", file="TimeSpanHumanizeExtensionsTests.cs", label="Entry lambda expression", span="15-15"];
m9_1 [cluster="lambda expression", file="TimeSpanHumanizeExtensionsTests.cs", label="new EnglishNumberToWordsConverter()", span="15-15"];
m9_2 [cluster="lambda expression", file="TimeSpanHumanizeExtensionsTests.cs", label="Exit lambda expression", span="15-15"];
m9_4 [cluster="lambda expression", file="TimeSpanHumanizeExtensionsTests.cs", label="Entry lambda expression", span="16-16"];
m9_5 [cluster="lambda expression", file="TimeSpanHumanizeExtensionsTests.cs", label="new ArabicNumberToWordsConverter()", span="16-16"];
m9_6 [cluster="lambda expression", file="TimeSpanHumanizeExtensionsTests.cs", label="Exit lambda expression", span="16-16"];
m9_9 [cluster="lambda expression", file="TimeSpanHumanizeExtensionsTests.cs", label="new FarsiNumberToWordsConverter()", span="17-17"];
m9_10 [cluster="lambda expression", file="TimeSpanHumanizeExtensionsTests.cs", label="Exit lambda expression", span="17-17"];
m1_37 -> m1_38  [key=0, style=solid];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_8  [key=2, style=dotted];
m1_38 -> m1_31  [key=2, style=dotted];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_12  [key=2, style=dotted];
m1_39 -> m1_31  [key=2, style=dotted];
m1_40 -> m1_37  [color=blue, key=0, style=bold];
m1_69 -> m1_70  [key=0, style=solid];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_65  [key=2, style=dotted];
m1_71 -> m1_69  [color=blue, key=0, style=bold];
m1_41 -> m1_42  [key=0, style=solid];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_8  [key=2, style=dotted];
m1_42 -> m1_31  [key=2, style=dotted];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_12  [key=2, style=dotted];
m1_43 -> m1_31  [key=2, style=dotted];
m1_44 -> m1_41  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_4  [key=2, style=dotted];
m1_1 -> m1_5  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_4  [key=2, style=dotted];
m1_2 -> m1_9  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_3 -> m1_0  [color=blue, key=0, style=bold];
m1_84 -> m1_85  [key=0, style=solid];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_65  [key=2, style=dotted];
m1_86 -> m1_84  [color=blue, key=0, style=bold];
m1_54 -> m1_55  [key=0, style=solid];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_8  [key=2, style=dotted];
m1_55 -> m1_31  [key=2, style=dotted];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_12  [key=2, style=dotted];
m1_56 -> m1_31  [key=2, style=dotted];
m1_57 -> m1_54  [color=blue, key=0, style=bold];
m1_23 -> m1_24  [key=0, style=solid];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_12  [key=2, style=dotted];
m1_24 -> m1_26  [key=2, style=dotted];
m1_25 -> m1_23  [color=blue, key=0, style=bold];
m1_78 -> m1_79  [key=0, style=solid];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_65  [key=2, style=dotted];
m1_80 -> m1_78  [color=blue, key=0, style=bold];
m1_117 -> m1_118  [key=0, style=solid];
m1_118 -> m1_119  [key=0, style=solid];
m1_118 -> m1_65  [key=2, style=dotted];
m1_119 -> m1_117  [color=blue, key=0, style=bold];
m1_75 -> m1_76  [key=0, style=solid];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_65  [key=2, style=dotted];
m1_77 -> m1_75  [color=blue, key=0, style=bold];
m1_111 -> m1_112  [key=0, style=solid];
m1_112 -> m1_113  [key=0, style=solid];
m1_112 -> m1_65  [key=2, style=dotted];
m1_113 -> m1_111  [color=blue, key=0, style=bold];
m1_81 -> m1_82  [key=0, style=solid];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_65  [key=2, style=dotted];
m1_83 -> m1_81  [color=blue, key=0, style=bold];
m1_27 -> m1_28  [key=0, style=solid];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_8  [key=2, style=dotted];
m1_28 -> m1_31  [key=2, style=dotted];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_12  [key=2, style=dotted];
m1_29 -> m1_31  [key=2, style=dotted];
m1_30 -> m1_27  [color=blue, key=0, style=bold];
m1_32 -> m1_33  [key=0, style=solid];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_35  [color=darkseagreen4, key=1, label=calculatedDescription, style=dashed];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_8  [key=2, style=dotted];
m1_34 -> m1_31  [key=2, style=dotted];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_12  [key=2, style=dotted];
m1_35 -> m1_31  [key=2, style=dotted];
m1_36 -> m1_32  [color=blue, key=0, style=bold];
m1_90 -> m1_91  [key=0, style=solid];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_65  [key=2, style=dotted];
m1_92 -> m1_90  [color=blue, key=0, style=bold];
m1_66 -> m1_67  [key=0, style=solid];
m1_67 -> m1_68  [key=0, style=solid];
m1_67 -> m1_65  [key=2, style=dotted];
m1_68 -> m1_66  [color=blue, key=0, style=bold];
m1_114 -> m1_115  [key=0, style=solid];
m1_115 -> m1_116  [key=0, style=solid];
m1_115 -> m1_65  [key=2, style=dotted];
m1_116 -> m1_114  [color=blue, key=0, style=bold];
m1_99 -> m1_100  [key=0, style=solid];
m1_100 -> m1_101  [key=0, style=solid];
m1_100 -> m1_65  [key=2, style=dotted];
m1_101 -> m1_99  [color=blue, key=0, style=bold];
m1_96 -> m1_97  [key=0, style=solid];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_65  [key=2, style=dotted];
m1_98 -> m1_96  [color=blue, key=0, style=bold];
m1_13 -> m1_14  [key=0, style=solid];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_4  [key=2, style=dotted];
m1_14 -> m1_17  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_4  [key=2, style=dotted];
m1_15 -> m1_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_16 -> m1_13  [color=blue, key=0, style=bold];
m1_108 -> m1_109  [key=0, style=solid];
m1_109 -> m1_110  [key=0, style=solid];
m1_109 -> m1_65  [key=2, style=dotted];
m1_110 -> m1_108  [color=blue, key=0, style=bold];
m1_20 -> m1_21  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_9 -> m1_10  [key=0, style=solid];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_8  [key=2, style=dotted];
m1_7 -> m1_5  [color=blue, key=0, style=bold];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_12  [key=2, style=dotted];
m1_11 -> m1_9  [color=blue, key=0, style=bold];
m1_17 -> m1_18  [key=0, style=solid];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_8  [key=2, style=dotted];
m1_19 -> m1_17  [color=blue, key=0, style=bold];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_12  [key=2, style=dotted];
m1_22 -> m1_20  [color=blue, key=0, style=bold];
m1_49 -> m1_50  [key=0, style=solid];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_53  [key=2, style=dotted];
m1_50 -> m1_8  [key=2, style=dotted];
m1_50 -> m1_31  [key=2, style=dotted];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_53  [key=2, style=dotted];
m1_51 -> m1_12  [key=2, style=dotted];
m1_51 -> m1_31  [key=2, style=dotted];
m1_52 -> m1_49  [color=blue, key=0, style=bold];
m1_87 -> m1_88  [key=0, style=solid];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_65  [key=2, style=dotted];
m1_89 -> m1_87  [color=blue, key=0, style=bold];
m1_72 -> m1_73  [key=0, style=solid];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_65  [key=2, style=dotted];
m1_74 -> m1_72  [color=blue, key=0, style=bold];
m1_58 -> m1_59  [key=0, style=solid];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_8  [key=2, style=dotted];
m1_59 -> m1_31  [key=2, style=dotted];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_12  [key=2, style=dotted];
m1_60 -> m1_31  [key=2, style=dotted];
m1_61 -> m1_58  [color=blue, key=0, style=bold];
m1_62 -> m1_63  [key=0, style=solid];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_65  [key=2, style=dotted];
m1_64 -> m1_62  [color=blue, key=0, style=bold];
m1_105 -> m1_106  [key=0, style=solid];
m1_106 -> m1_107  [key=0, style=solid];
m1_106 -> m1_65  [key=2, style=dotted];
m1_107 -> m1_105  [color=blue, key=0, style=bold];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_47  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_8  [key=2, style=dotted];
m1_46 -> m1_31  [key=2, style=dotted];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_12  [key=2, style=dotted];
m1_47 -> m1_31  [key=2, style=dotted];
m1_48 -> m1_45  [color=blue, key=0, style=bold];
m1_102 -> m1_103  [key=0, style=solid];
m1_103 -> m1_104  [key=0, style=solid];
m1_103 -> m1_65  [key=2, style=dotted];
m1_104 -> m1_102  [color=blue, key=0, style=bold];
m1_93 -> m1_94  [key=0, style=solid];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_65  [key=2, style=dotted];
m1_95 -> m1_93  [color=blue, key=0, style=bold];
m2_4 -> m2_5  [color=green, key=0, style=solid];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_2 -> m2_0  [color=blue, key=0, style=bold];
m2_5 -> m2_6  [color=green, key=0, style=solid];
m2_5 -> m2_7  [color=green, key=2, style=dotted];
m2_6 -> m2_4  [color=blue, key=0, style=bold];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_10  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_3  [key=2, style=dotted];
m5_9 -> m5_4  [key=2, style=dotted];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_3  [key=2, style=dotted];
m5_10 -> m5_4  [key=2, style=dotted];
m5_11 -> m5_8  [color=blue, key=0, style=bold];
m5_27 -> m5_28  [key=0, style=solid];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_30  [key=2, style=dotted];
m5_28 -> m5_4  [key=2, style=dotted];
m5_29 -> m5_27  [color=blue, key=0, style=bold];
m5_16 -> m5_17  [key=0, style=solid];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_15  [key=2, style=dotted];
m5_17 -> m5_4  [key=2, style=dotted];
m5_18 -> m5_16  [color=blue, key=0, style=bold];
m5_35 -> m5_36  [key=0, style=solid];
m5_36 -> m5_37  [key=0, style=solid];
m5_36 -> m5_38  [key=2, style=dotted];
m5_36 -> m5_4  [key=2, style=dotted];
m5_37 -> m5_35  [color=blue, key=0, style=bold];
m5_43 -> m5_44  [key=0, style=solid];
m5_43 -> m5_45  [color=crimson, key=0, style=bold];
m5_43 -> m5_46  [color=crimson, key=0, style=bold];
m5_43 -> m5_47  [color=crimson, key=0, style=bold];
m5_43 -> m5_48  [color=crimson, key=0, style=bold];
m5_43 -> m5_49  [color=crimson, key=0, style=bold];
m5_43 -> m5_50  [color=crimson, key=0, style=bold];
m5_43 -> m5_51  [color=crimson, key=0, style=bold];
m5_43 -> m5_52  [color=crimson, key=0, style=bold];
m5_43 -> m5_53  [color=crimson, key=0, style=bold];
m5_43 -> m5_54  [color=crimson, key=0, style=bold];
m5_43 -> m5_55  [color=crimson, key=0, style=bold];
m5_43 -> m5_56  [color=crimson, key=0, style=bold];
m5_43 -> m5_57  [color=crimson, key=0, style=bold];
m5_43 -> m5_58  [color=crimson, key=0, style=bold];
m5_43 -> m5_59  [color=crimson, key=0, style=bold];
m5_43 -> m5_60  [color=crimson, key=0, style=bold];
m5_43 -> m5_61  [color=crimson, key=0, style=bold];
m5_43 -> m5_62  [color=crimson, key=0, style=bold];
m5_43 -> m5_63  [color=crimson, key=0, style=bold];
m5_43 -> m5_64  [color=crimson, key=0, style=bold];
m5_43 -> m5_65  [color=crimson, key=0, style=bold];
m5_43 -> m5_66  [color=crimson, key=0, style=bold];
m5_43 -> m5_67  [color=crimson, key=0, style=bold];
m5_43 -> m5_68  [color=crimson, key=0, style=bold];
m5_43 -> m5_69  [color=crimson, key=0, style=bold];
m5_43 -> m5_70  [color=crimson, key=0, style=bold];
m5_43 -> m5_71  [color=crimson, key=0, style=bold];
m5_43 -> m5_72  [color=crimson, key=0, style=bold];
m5_43 -> m5_73  [color=crimson, key=0, style=bold];
m5_43 -> m5_74  [color=crimson, key=0, style=bold];
m5_43 -> m5_75  [color=crimson, key=0, style=bold];
m5_43 -> m5_76  [color=crimson, key=0, style=bold];
m5_43 -> m5_77  [color=crimson, key=0, style=bold];
m5_43 -> m5_78  [color=crimson, key=0, style=bold];
m5_43 -> m5_79  [color=crimson, key=0, style=bold];
m5_43 -> m5_80  [color=crimson, key=0, style=bold];
m5_43 -> m5_81  [color=crimson, key=0, style=bold];
m5_43 -> m5_82  [color=crimson, key=0, style=bold];
m5_43 -> m5_83  [color=crimson, key=0, style=bold];
m5_43 -> m5_84  [color=crimson, key=0, style=bold];
m5_43 -> m5_85  [color=crimson, key=0, style=bold];
m5_43 -> m5_86  [color=crimson, key=0, style=bold];
m5_43 -> m5_87  [color=crimson, key=0, style=bold];
m5_43 -> m5_88  [color=crimson, key=0, style=bold];
m5_43 -> m5_89  [color=crimson, key=0, style=bold];
m5_43 -> m5_90  [color=crimson, key=0, style=bold];
m5_43 -> m5_91  [color=crimson, key=0, style=bold];
m5_43 -> m5_92  [color=crimson, key=0, style=bold];
m5_43 -> m5_93  [color=crimson, key=0, style=bold];
m5_43 -> m5_94  [color=crimson, key=0, style=bold];
m5_43 -> m5_95  [color=crimson, key=0, style=bold];
m5_43 -> m5_96  [color=crimson, key=0, style=bold];
m5_43 -> m5_97  [color=crimson, key=0, style=bold];
m5_43 -> m5_98  [color=crimson, key=0, style=bold];
m5_43 -> m5_99  [color=crimson, key=0, style=bold];
m5_43 -> m5_100  [color=crimson, key=0, style=bold];
m5_43 -> m5_101  [color=crimson, key=0, style=bold];
m5_43 -> m5_102  [color=crimson, key=0, style=bold];
m5_43 -> m5_103  [color=crimson, key=0, style=bold];
m5_43 -> m5_104  [color=crimson, key=0, style=bold];
m5_43 -> m5_105  [color=crimson, key=0, style=bold];
m5_43 -> m5_106  [color=crimson, key=0, style=bold];
m5_43 -> m5_107  [color=crimson, key=0, style=bold];
m5_43 -> m5_108  [color=crimson, key=0, style=bold];
m5_43 -> m5_109  [color=crimson, key=0, style=bold];
m5_43 -> m5_110  [color=crimson, key=0, style=bold];
m5_43 -> m5_111  [color=crimson, key=0, style=bold];
m5_43 -> m5_112  [color=crimson, key=0, style=bold];
m5_43 -> m5_113  [color=crimson, key=0, style=bold];
m5_43 -> m5_114  [color=crimson, key=0, style=bold];
m5_43 -> m5_115  [color=crimson, key=0, style=bold];
m5_43 -> m5_116  [color=crimson, key=0, style=bold];
m5_43 -> m5_117  [color=crimson, key=0, style=bold];
m5_43 -> m5_118  [color=crimson, key=0, style=bold];
m5_43 -> m5_119  [color=crimson, key=0, style=bold];
m5_43 -> m5_120  [color=crimson, key=0, style=bold];
m5_43 -> m5_121  [color=crimson, key=0, style=bold];
m5_43 -> m5_122  [color=crimson, key=0, style=bold];
m5_43 -> m5_123  [color=crimson, key=0, style=bold];
m5_43 -> m5_124  [color=crimson, key=0, style=bold];
m5_44 -> m5_45  [key=0, style=solid];
m5_45 -> m5_46  [key=0, style=solid];
m5_46 -> m5_47  [key=0, style=solid];
m5_47 -> m5_48  [key=0, style=solid];
m5_48 -> m5_49  [key=0, style=solid];
m5_49 -> m5_50  [key=0, style=solid];
m5_50 -> m5_51  [key=0, style=solid];
m5_51 -> m5_52  [key=0, style=solid];
m5_52 -> m5_53  [key=0, style=solid];
m5_53 -> m5_54  [key=0, style=solid];
m5_54 -> m5_55  [key=0, style=solid];
m5_55 -> m5_56  [key=0, style=solid];
m5_56 -> m5_57  [key=0, style=solid];
m5_57 -> m5_58  [key=0, style=solid];
m5_58 -> m5_59  [key=0, style=solid];
m5_59 -> m5_60  [key=0, style=solid];
m5_60 -> m5_61  [key=0, style=solid];
m5_61 -> m5_62  [key=0, style=solid];
m5_62 -> m5_63  [key=0, style=solid];
m5_63 -> m5_64  [key=0, style=solid];
m5_64 -> m5_65  [key=0, style=solid];
m5_65 -> m5_66  [key=0, style=solid];
m5_66 -> m5_67  [key=0, style=solid];
m5_67 -> m5_68  [key=0, style=solid];
m5_68 -> m5_69  [key=0, style=solid];
m5_69 -> m5_70  [key=0, style=solid];
m5_70 -> m5_71  [key=0, style=solid];
m5_71 -> m5_72  [key=0, style=solid];
m5_72 -> m5_73  [key=0, style=solid];
m5_73 -> m5_74  [key=0, style=solid];
m5_74 -> m5_75  [key=0, style=solid];
m5_75 -> m5_76  [key=0, style=solid];
m5_76 -> m5_77  [key=0, style=solid];
m5_77 -> m5_78  [key=0, style=solid];
m5_78 -> m5_79  [key=0, style=solid];
m5_79 -> m5_80  [key=0, style=solid];
m5_80 -> m5_81  [key=0, style=solid];
m5_81 -> m5_82  [key=0, style=solid];
m5_82 -> m5_83  [key=0, style=solid];
m5_83 -> m5_84  [key=0, style=solid];
m5_84 -> m5_85  [key=0, style=solid];
m5_85 -> m5_86  [key=0, style=solid];
m5_86 -> m5_87  [key=0, style=solid];
m5_87 -> m5_88  [key=0, style=solid];
m5_88 -> m5_89  [key=0, style=solid];
m5_89 -> m5_90  [key=0, style=solid];
m5_90 -> m5_91  [key=0, style=solid];
m5_91 -> m5_92  [key=0, style=solid];
m5_92 -> m5_93  [key=0, style=solid];
m5_93 -> m5_94  [key=0, style=solid];
m5_94 -> m5_95  [key=0, style=solid];
m5_95 -> m5_96  [key=0, style=solid];
m5_96 -> m5_97  [key=0, style=solid];
m5_97 -> m5_98  [key=0, style=solid];
m5_98 -> m5_99  [key=0, style=solid];
m5_99 -> m5_100  [key=0, style=solid];
m5_100 -> m5_101  [key=0, style=solid];
m5_101 -> m5_102  [key=0, style=solid];
m5_102 -> m5_103  [key=0, style=solid];
m5_103 -> m5_104  [key=0, style=solid];
m5_104 -> m5_105  [key=0, style=solid];
m5_105 -> m5_106  [key=0, style=solid];
m5_106 -> m5_107  [key=0, style=solid];
m5_107 -> m5_108  [key=0, style=solid];
m5_108 -> m5_109  [key=0, style=solid];
m5_109 -> m5_110  [key=0, style=solid];
m5_110 -> m5_111  [key=0, style=solid];
m5_111 -> m5_112  [key=0, style=solid];
m5_112 -> m5_113  [key=0, style=solid];
m5_113 -> m5_114  [key=0, style=solid];
m5_114 -> m5_115  [key=0, style=solid];
m5_115 -> m5_116  [key=0, style=solid];
m5_116 -> m5_117  [key=0, style=solid];
m5_117 -> m5_118  [key=0, style=solid];
m5_118 -> m5_119  [key=0, style=solid];
m5_119 -> m5_120  [key=0, style=solid];
m5_120 -> m5_121  [key=0, style=solid];
m5_121 -> m5_122  [key=0, style=solid];
m5_122 -> m5_123  [key=0, style=solid];
m5_123 -> m5_124  [key=0, style=solid];
m5_124 -> m5_125  [key=0, style=solid];
m5_125 -> m5_43  [color=blue, key=0, style=bold];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_21  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_15  [key=2, style=dotted];
m5_20 -> m5_4  [key=2, style=dotted];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_15  [key=2, style=dotted];
m5_21 -> m5_4  [key=2, style=dotted];
m5_22 -> m5_19  [color=blue, key=0, style=bold];
m5_39 -> m5_40  [key=0, style=solid];
m5_40 -> m5_41  [key=0, style=solid];
m5_40 -> m5_42  [key=2, style=dotted];
m5_40 -> m5_4  [key=2, style=dotted];
m5_41 -> m5_39  [color=blue, key=0, style=bold];
m5_23 -> m5_24  [key=0, style=solid];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_26  [key=2, style=dotted];
m5_24 -> m5_4  [key=2, style=dotted];
m5_25 -> m5_23  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=2, style=dotted];
m5_1 -> m5_4  [key=2, style=dotted];
m5_2 -> m5_0  [color=blue, key=0, style=bold];
m5_12 -> m5_13  [key=0, style=solid];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_15  [key=2, style=dotted];
m5_13 -> m5_4  [key=2, style=dotted];
m5_14 -> m5_12  [color=blue, key=0, style=bold];
m5_31 -> m5_32  [key=0, style=solid];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_34  [key=2, style=dotted];
m5_32 -> m5_4  [key=2, style=dotted];
m5_33 -> m5_31  [color=blue, key=0, style=bold];
m5_126 -> m5_127  [key=0, style=solid];
m5_126 -> m5_43  [color=darkorchid, key=3, label="method methodReturn System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator", style=bold];
m5_127 -> m5_128  [key=0, style=solid];
m5_127 -> m5_43  [key=2, style=dotted];
m5_128 -> m5_126  [color=blue, key=0, style=bold];
m5_5 -> m5_6  [key=0, style=solid];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_3  [key=2, style=dotted];
m5_6 -> m5_4  [key=2, style=dotted];
m5_7 -> m5_5  [color=blue, key=0, style=bold];
m5_129 -> m5_127  [color=darkseagreen4, key=1, label="Humanizer.Tests.PluralTestSource", style=dashed];
m6_8 -> m6_9  [color=red, key=0, style=solid];
m6_0 -> m6_1  [color=green, key=0, style=solid];
m6_1 -> m6_2  [color=green, key=0, style=solid];
m6_1 -> m6_3  [color=red, key=2, style=dotted];
m6_1 -> m6_4  [color=red, key=2, style=dotted];
m6_1 -> m6_7  [color=green, key=2, style=dotted];
m6_1 -> m6_8  [color=green, key=2, style=dotted];
m6_2 -> m6_0  [color=blue, key=0, style=bold];
m6_2 -> m6_3  [color=green, key=0, style=solid];
m6_2 -> m6_9  [color=green, key=2, style=dotted];
m6_2 -> m6_8  [color=green, key=2, style=dotted];
m6_9 -> m6_10  [color=red, key=0, style=solid];
m6_9 -> m6_3  [color=red, key=2, style=dotted];
m6_9 -> m6_4  [color=red, key=2, style=dotted];
m6_11 -> m6_12  [color=red, key=0, style=solid];
m6_12 -> m6_13  [color=red, key=0, style=solid];
m6_12 -> m6_3  [color=red, key=2, style=dotted];
m6_12 -> m6_4  [color=red, key=2, style=dotted];
m6_13 -> m6_11  [color=blue, key=0, style=bold];
m6_13 -> m6_1  [color=green, key=1, label="Humanizer.Configuration.OrdinalizerRegistry", style=dashed];
m6_13 -> m6_2  [color=green, key=1, label="Humanizer.Configuration.OrdinalizerRegistry", style=dashed];
m6_13 -> m6_3  [color=green, key=1, label="Humanizer.Configuration.OrdinalizerRegistry", style=dashed];
m6_13 -> m6_4  [color=green, key=1, label="Humanizer.Configuration.OrdinalizerRegistry", style=dashed];
m6_13 -> m6_5  [color=green, key=1, label="Humanizer.Configuration.OrdinalizerRegistry", style=dashed];
m6_7 -> m6_5  [color=blue, key=0, style=bold];
m6_5 -> m6_6  [color=green, key=0, style=solid];
m6_5 -> m6_12  [color=green, key=2, style=dotted];
m6_5 -> m6_8  [color=green, key=2, style=dotted];
m6_6 -> m6_7  [color=red, key=0, style=solid];
m6_6 -> m6_3  [color=red, key=2, style=dotted];
m6_6 -> m6_4  [color=red, key=2, style=dotted];
m6_6 -> m6_0  [color=blue, key=0, style=bold];
m6_4 -> m6_5  [color=green, key=0, style=solid];
m6_4 -> m6_11  [color=green, key=2, style=dotted];
m6_4 -> m6_8  [color=green, key=2, style=dotted];
m6_3 -> m6_4  [color=green, key=0, style=solid];
m6_3 -> m6_10  [color=green, key=2, style=dotted];
m6_3 -> m6_8  [color=green, key=2, style=dotted];
m6_14 -> m6_15  [color=red, key=0, style=solid];
m6_15 -> m6_16  [color=red, key=0, style=solid];
m6_15 -> m6_3  [color=red, key=2, style=dotted];
m6_15 -> m6_4  [color=red, key=2, style=dotted];
m6_16 -> m6_14  [color=blue, key=0, style=bold];
m6_10 -> m6_8  [color=blue, key=0, style=bold];
m8_45 -> m8_46  [key=0, style=solid];
m8_46 -> m8_4  [key=2, style=dotted];
m8_46 -> m8_47  [key=0, style=solid];
m8_46 -> m8_44  [key=2, style=dotted];
m8_47 -> m8_45  [color=blue, key=0, style=bold];
m8_54 -> m8_55  [key=0, style=solid];
m8_55 -> m8_4  [key=2, style=dotted];
m8_55 -> m8_56  [key=0, style=solid];
m8_55 -> m8_44  [key=2, style=dotted];
m8_56 -> m8_54  [color=blue, key=0, style=bold];
m8_38 -> m8_39  [key=0, style=solid];
m8_39 -> m8_3  [key=2, style=dotted];
m8_39 -> m8_4  [key=2, style=dotted];
m8_39 -> m8_40  [key=0, style=solid];
m8_40 -> m8_38  [color=blue, key=0, style=bold];
m8_48 -> m8_49  [key=0, style=solid];
m8_49 -> m8_4  [key=2, style=dotted];
m8_49 -> m8_50  [key=0, style=solid];
m8_49 -> m8_44  [key=2, style=dotted];
m8_50 -> m8_48  [color=blue, key=0, style=bold];
m8_60 -> m8_61  [key=0, style=solid];
m8_61 -> m8_4  [key=2, style=dotted];
m8_61 -> m8_62  [key=0, style=solid];
m8_61 -> m8_44  [key=2, style=dotted];
m8_62 -> m8_60  [color=blue, key=0, style=bold];
m8_26 -> m8_27  [color=green, key=0, style=solid];
m8_27 -> m8_28  [color=green, key=0, style=solid];
m8_27 -> m8_3  [color=green, key=2, style=dotted];
m8_27 -> m8_4  [color=green, key=2, style=dotted];
m8_28 -> m8_26  [color=blue, key=0, style=bold];
m8_51 -> m8_52  [key=0, style=solid];
m8_52 -> m8_4  [key=2, style=dotted];
m8_52 -> m8_53  [key=0, style=solid];
m8_52 -> m8_44  [key=2, style=dotted];
m8_53 -> m8_51  [color=blue, key=0, style=bold];
m8_5 -> m8_6  [color=green, key=0, style=solid];
m8_6 -> m8_7  [color=green, key=0, style=solid];
m8_6 -> m8_3  [color=green, key=2, style=dotted];
m8_6 -> m8_4  [color=green, key=2, style=dotted];
m8_7 -> m8_5  [color=blue, key=0, style=bold];
m8_8 -> m8_9  [key=0, style=solid];
m8_9 -> m8_3  [key=2, style=dotted];
m8_9 -> m8_4  [key=2, style=dotted];
m8_9 -> m8_10  [key=0, style=solid];
m8_10 -> m8_8  [color=blue, key=0, style=bold];
m8_14 -> m8_15  [color=green, key=0, style=solid];
m8_15 -> m8_16  [color=green, key=0, style=solid];
m8_15 -> m8_3  [color=green, key=2, style=dotted];
m8_15 -> m8_4  [color=green, key=2, style=dotted];
m8_16 -> m8_14  [color=blue, key=0, style=bold];
m8_20 -> m8_21  [color=green, key=0, style=solid];
m8_21 -> m8_22  [color=green, key=0, style=solid];
m8_21 -> m8_3  [color=green, key=2, style=dotted];
m8_21 -> m8_4  [color=green, key=2, style=dotted];
m8_22 -> m8_20  [color=blue, key=0, style=bold];
m8_23 -> m8_24  [color=green, key=0, style=solid];
m8_24 -> m8_25  [color=green, key=0, style=solid];
m8_24 -> m8_3  [color=green, key=2, style=dotted];
m8_24 -> m8_4  [color=green, key=2, style=dotted];
m8_25 -> m8_23  [color=blue, key=0, style=bold];
m8_66 -> m8_67  [key=0, style=solid];
m8_67 -> m8_4  [key=2, style=dotted];
m8_67 -> m8_68  [key=0, style=solid];
m8_67 -> m8_44  [key=2, style=dotted];
m8_68 -> m8_66  [color=blue, key=0, style=bold];
m8_32 -> m8_33  [key=0, style=solid];
m8_33 -> m8_3  [key=2, style=dotted];
m8_33 -> m8_4  [key=2, style=dotted];
m8_33 -> m8_34  [key=0, style=solid];
m8_34 -> m8_32  [color=blue, key=0, style=bold];
m8_17 -> m8_18  [color=green, key=0, style=solid];
m8_18 -> m8_19  [color=green, key=0, style=solid];
m8_18 -> m8_3  [color=green, key=2, style=dotted];
m8_18 -> m8_4  [color=green, key=2, style=dotted];
m8_19 -> m8_17  [color=blue, key=0, style=bold];
m8_63 -> m8_64  [key=0, style=solid];
m8_64 -> m8_4  [key=2, style=dotted];
m8_64 -> m8_65  [key=0, style=solid];
m8_64 -> m8_44  [key=2, style=dotted];
m8_65 -> m8_63  [color=blue, key=0, style=bold];
m8_11 -> m8_12  [color=green, key=0, style=solid];
m8_12 -> m8_13  [color=green, key=0, style=solid];
m8_12 -> m8_3  [color=green, key=2, style=dotted];
m8_12 -> m8_4  [color=green, key=2, style=dotted];
m8_13 -> m8_11  [color=blue, key=0, style=bold];
m8_35 -> m8_36  [key=0, style=solid];
m8_36 -> m8_3  [key=2, style=dotted];
m8_36 -> m8_4  [key=2, style=dotted];
m8_36 -> m8_37  [key=0, style=solid];
m8_37 -> m8_35  [color=blue, key=0, style=bold];
m8_41 -> m8_42  [key=0, style=solid];
m8_42 -> m8_4  [key=2, style=dotted];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_44  [key=2, style=dotted];
m8_43 -> m8_41  [color=blue, key=0, style=bold];
m8_57 -> m8_58  [key=0, style=solid];
m8_58 -> m8_4  [key=2, style=dotted];
m8_58 -> m8_59  [key=0, style=solid];
m8_58 -> m8_44  [key=2, style=dotted];
m8_59 -> m8_57  [color=blue, key=0, style=bold];
m8_29 -> m8_30  [key=0, style=solid];
m8_30 -> m8_3  [key=2, style=dotted];
m8_30 -> m8_4  [key=2, style=dotted];
m8_30 -> m8_31  [key=0, style=solid];
m8_31 -> m8_29  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [color=green, key=0, style=solid];
m8_1 -> m8_2  [color=green, key=0, style=solid];
m8_1 -> m8_3  [color=green, key=2, style=dotted];
m8_1 -> m8_4  [color=green, key=2, style=dotted];
m8_2 -> m8_0  [color=blue, key=0, style=bold];
m9_12 -> m9_13  [key=0, style=solid];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_15  [key=2, style=dotted];
m9_14 -> m9_12  [color=blue, key=0, style=bold];
m9_8 -> m9_9  [key=0, style=solid];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_3  [key=2, style=dotted];
m9_2 -> m9_0  [color=blue, key=0, style=bold];
m9_4 -> m9_5  [key=0, style=solid];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_7  [key=2, style=dotted];
m9_6 -> m9_4  [color=blue, key=0, style=bold];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_11  [key=2, style=dotted];
m9_10 -> m9_8  [color=blue, key=0, style=bold];
}
