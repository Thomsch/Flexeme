digraph  {
n0 [cluster="Humanizer.Localisation.Formatters.ArabicFormatter.GetResourceKey(string, int)", label="Entry Humanizer.Localisation.Formatters.ArabicFormatter.GetResourceKey(string, int)", span="7-7"];
n1 [cluster="Humanizer.Localisation.Formatters.ArabicFormatter.GetResourceKey(string, int)", label="number == 2", span="10-10"];
n2 [cluster="Humanizer.Localisation.Formatters.ArabicFormatter.GetResourceKey(string, int)", label="return resourceKey + DualPostfix;", span="11-11"];
n3 [cluster="Humanizer.Localisation.Formatters.ArabicFormatter.GetResourceKey(string, int)", label="number >= 3 && number <= 10", span="14-14"];
n4 [cluster="Humanizer.Localisation.Formatters.ArabicFormatter.GetResourceKey(string, int)", label="return resourceKey + PluralPostfix;", span="15-15"];
n5 [cluster="Humanizer.Localisation.Formatters.ArabicFormatter.GetResourceKey(string, int)", label="return resourceKey;", span="17-17"];
n6 [cluster="Humanizer.Localisation.Formatters.ArabicFormatter.GetResourceKey(string, int)", label="Exit Humanizer.Localisation.Formatters.ArabicFormatter.GetResourceKey(string, int)", span="7-7"];
m0_107 [cluster="Humanizer.Bytes.ByteSize.operator ++(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.operator ++(Humanizer.Bytes.ByteSize)", span="257-257"];
m0_108 [cluster="Humanizer.Bytes.ByteSize.operator ++(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="return new ByteSize(b.Bits++);", span="259-259"];
m0_109 [cluster="Humanizer.Bytes.ByteSize.operator ++(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.operator ++(Humanizer.Bytes.ByteSize)", span="257-257"];
m0_60 [cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.Equals(object)", span="183-183"];
m0_61 [cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="ByteSize.cs", label="value == null", span="185-185"];
m0_64 [cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="ByteSize.cs", label="value is ByteSize", span="189-189"];
m0_65 [cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="ByteSize.cs", label="other = (ByteSize)value", span="190-190"];
m0_62 [cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="ByteSize.cs", label="return false;", span="186-186"];
m0_63 [cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="ByteSize.cs", label="ByteSize other", span="188-188"];
m0_67 [cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="ByteSize.cs", label="return Equals(other);", span="194-194"];
m0_66 [cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="ByteSize.cs", label="return false;", span="192-192"];
m0_68 [cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.Equals(object)", span="183-183"];
m0_83 [cluster="Humanizer.Bytes.ByteSize.AddBits(long)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.AddBits(long)", span="217-217"];
m0_84 [cluster="Humanizer.Bytes.ByteSize.AddBits(long)", file="ByteSize.cs", label="return new ByteSize(Bits + value);", span="219-219"];
m0_85 [cluster="Humanizer.Bytes.ByteSize.AddBits(long)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.AddBits(long)", span="217-217"];
m0_177 [cluster="string.Trim()", file="ByteSize.cs", label="Entry string.Trim()", span="0-0"];
m0_119 [cluster="Humanizer.Bytes.ByteSize.operator !=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.operator !=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="277-277"];
m0_120 [cluster="Humanizer.Bytes.ByteSize.operator !=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="return b1.Bits != b2.Bits;", span="279-279"];
m0_121 [cluster="Humanizer.Bytes.ByteSize.operator !=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.operator !=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="277-277"];
m0_50 [cluster="string.Contains(string)", file="ByteSize.cs", label="Entry string.Contains(string)", span="0-0"];
m0_9 [cluster="Humanizer.Bytes.ByteSize.FromBits(long)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.FromBits(long)", span="115-115"];
m0_10 [cluster="Humanizer.Bytes.ByteSize.FromBits(long)", file="ByteSize.cs", label="return new ByteSize(value / (double)BitsInByte);", span="117-117"];
m0_11 [cluster="Humanizer.Bytes.ByteSize.FromBits(long)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.FromBits(long)", span="115-115"];
m0_125 [cluster="Humanizer.Bytes.ByteSize.operator <=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.operator <=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="287-287"];
m0_126 [cluster="Humanizer.Bytes.ByteSize.operator <=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="return b1.Bits <= b2.Bits;", span="289-289"];
m0_127 [cluster="Humanizer.Bytes.ByteSize.operator <=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.operator <=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="287-287"];
m0_30 [cluster="string.Format(string, object, object)", file="ByteSize.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m0_122 [cluster="Humanizer.Bytes.ByteSize.operator <(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.operator <(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="282-282"];
m0_123 [cluster="Humanizer.Bytes.ByteSize.operator <(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="return b1.Bits < b2.Bits;", span="284-284"];
m0_124 [cluster="Humanizer.Bytes.ByteSize.operator <(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.operator <(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="282-282"];
m0_171 [cluster="string.IsNullOrWhiteSpace(string)", file="ByteSize.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m0_27 [cluster="Humanizer.Bytes.ByteSize.ToString()", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.ToString()", span="151-151"];
m0_28 [cluster="Humanizer.Bytes.ByteSize.ToString()", file="ByteSize.cs", label="return string.Format(''{0} {1}'', LargestWholeNumberValue, LargestWholeNumberSymbol);", span="153-153"];
m0_29 [cluster="Humanizer.Bytes.ByteSize.ToString()", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.ToString()", span="151-151"];
m0_172 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="ByteSize.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
m0_86 [cluster="Humanizer.Bytes.ByteSize.AddBytes(double)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.AddBytes(double)", span="222-222"];
m0_87 [cluster="Humanizer.Bytes.ByteSize.AddBytes(double)", file="ByteSize.cs", label="return this + FromBytes(value);", span="224-224"];
m0_88 [cluster="Humanizer.Bytes.ByteSize.AddBytes(double)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.AddBytes(double)", span="222-222"];
m0_175 [cluster="char.IsDigit(char)", file="ByteSize.cs", label="Entry char.IsDigit(char)", span="0-0"];
m0_92 [cluster="Humanizer.Bytes.ByteSize.AddMegabytes(double)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.AddMegabytes(double)", span="232-232"];
m0_93 [cluster="Humanizer.Bytes.ByteSize.AddMegabytes(double)", file="ByteSize.cs", label="return this + FromMegabytes(value);", span="234-234"];
m0_94 [cluster="Humanizer.Bytes.ByteSize.AddMegabytes(double)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.AddMegabytes(double)", span="232-232"];
m0_80 [cluster="Humanizer.Bytes.ByteSize.Add(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.Add(Humanizer.Bytes.ByteSize)", span="212-212"];
m0_81 [cluster="Humanizer.Bytes.ByteSize.Add(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="return new ByteSize(Bits + bs.Bits);", span="214-214"];
m0_82 [cluster="Humanizer.Bytes.ByteSize.Add(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.Add(Humanizer.Bytes.ByteSize)", span="212-212"];
m0_0 [cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.ByteSize(double)", span="102-102"];
m0_1 [cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="ByteSize.cs", label="Bits = (long)Math.Ceiling(byteSize * BitsInByte)", span="106-106"];
m0_2 [cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="ByteSize.cs", label="Bytes = byteSize", span="108-108"];
m0_3 [cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="ByteSize.cs", label="Kilobytes = byteSize / BytesInKilobyte", span="109-109"];
m0_4 [cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="ByteSize.cs", label="Megabytes = byteSize / BytesInMegabyte", span="110-110"];
m0_5 [cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="ByteSize.cs", label="Gigabytes = byteSize / BytesInGigabyte", span="111-111"];
m0_6 [cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="ByteSize.cs", label="Terabytes = byteSize / BytesInTerabyte", span="112-112"];
m0_7 [cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.ByteSize(double)", span="102-102"];
m0_18 [cluster="Humanizer.Bytes.ByteSize.FromMegabytes(double)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.FromMegabytes(double)", span="130-130"];
m0_19 [cluster="Humanizer.Bytes.ByteSize.FromMegabytes(double)", file="ByteSize.cs", label="return new ByteSize(value * BytesInMegabyte);", span="132-132"];
m0_20 [cluster="Humanizer.Bytes.ByteSize.FromMegabytes(double)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.FromMegabytes(double)", span="130-130"];
m0_134 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", span="302-302"];
m0_135 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="string.IsNullOrWhiteSpace(s)", span="305-305"];
m0_138 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="s = s.TrimStart()", span="312-312"];
m0_136 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="throw new ArgumentNullException(''s'', ''String is null or whitespace'');", span="306-306"];
m0_137 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="result = new ByteSize()", span="309-309"];
m0_139 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="int num", span="314-314"];
m0_142 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="num < s.Length", span="318-318"];
m0_143 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="!(char.IsDigit(s[num]) || s[num] == '.')", span="319-319"];
m0_149 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="string numberPart = s.Substring(0, lastNumber).Trim()", span="331-331"];
m0_150 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="string sizePart = s.Substring(lastNumber, s.Length - lastNumber).Trim()", span="332-332"];
m0_140 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="var found = false", span="315-315"];
m0_141 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="num = 0", span="318-318"];
m0_146 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="found == false", span="325-325"];
m0_145 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="num++", span="318-318"];
m0_148 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="int lastNumber = num", span="328-328"];
m0_144 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="found = true", span="321-321"];
m0_147 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="return false;", span="326-326"];
m0_152 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="!double.TryParse(numberPart, out number)", span="336-336"];
m0_151 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="double number", span="335-335"];
m0_154 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="sizePart.ToUpper()", span="340-340"];
m0_156 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="sizePart == BitSymbol", span="343-343"];
m0_153 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="return false;", span="337-337"];
m0_157 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="number % 1 != 0", span="345-345"];
m0_159 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="result = FromBits((long)number)", span="348-348"];
m0_160 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="result = FromBytes(number)", span="352-352"];
m0_162 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="result = FromKilobytes(number)", span="357-357"];
m0_164 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="result = FromMegabytes(number)", span="361-361"];
m0_166 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="result = FromGigabytes(number)", span="365-365"];
m0_168 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="result = FromTerabytes(number)", span="369-369"];
m0_155 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label=ByteSymbol, span="342-342"];
m0_161 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label=KilobyteSymbol, span="356-356"];
m0_163 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label=MegabyteSymbol, span="360-360"];
m0_165 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label=GigabyteSymbol, span="364-364"];
m0_167 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label=TerabyteSymbol, span="368-368"];
m0_158 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="return false;", span="346-346"];
m0_169 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="return true;", span="373-373"];
m0_170 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", span="302-302"];
m0_12 [cluster="Humanizer.Bytes.ByteSize.FromBytes(double)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.FromBytes(double)", span="120-120"];
m0_13 [cluster="Humanizer.Bytes.ByteSize.FromBytes(double)", file="ByteSize.cs", label="return new ByteSize(value);", span="122-122"];
m0_14 [cluster="Humanizer.Bytes.ByteSize.FromBytes(double)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.FromBytes(double)", span="120-120"];
m0_51 [cluster="System.Func<T, TResult>.Invoke(T)", file="ByteSize.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m0_31 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.ToString(string)", span="156-156"];
m0_32 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="!format.Contains(''#'') && !format.Contains(''0'')", span="158-158"];
m0_33 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="format = ''#.## '' + format", span="159-159"];
m0_34 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="Func<string, bool> has = s => format.IndexOf(s, StringComparison.CurrentCultureIgnoreCase) != -1", span="161-161"];
m0_35 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="Func<double, string> output = n => n.ToString(format)", span="162-162"];
m0_44 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="format.IndexOf(ByteSymbol, StringComparison.Ordinal) != -1", span="174-174"];
m0_46 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="format.IndexOf(BitSymbol, StringComparison.Ordinal) != -1", span="177-177"];
m0_48 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="return string.Format(''{0} {1}'', LargestWholeNumberValue.ToString(format), LargestWholeNumberSymbol);", span="180-180"];
m0_36 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="has(TerabyteSymbol)", span="164-164"];
m0_38 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="has(GigabyteSymbol)", span="166-166"];
m0_40 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="has(MegabyteSymbol)", span="168-168"];
m0_42 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="has(KilobyteSymbol)", span="170-170"];
m0_37 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="return output(Terabytes);", span="165-165"];
m0_39 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="return output(Gigabytes);", span="167-167"];
m0_41 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="return output(Megabytes);", span="169-169"];
m0_43 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="return output(Kilobytes);", span="171-171"];
m0_45 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="return output(Bytes);", span="175-175"];
m0_47 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="return output(Bits);", span="178-178"];
m0_49 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.ToString(string)", span="156-156"];
m0_69 [cluster="Humanizer.Bytes.ByteSize.Equals(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.Equals(Humanizer.Bytes.ByteSize)", span="197-197"];
m0_70 [cluster="Humanizer.Bytes.ByteSize.Equals(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="return Bits == value.Bits;", span="199-199"];
m0_71 [cluster="Humanizer.Bytes.ByteSize.Equals(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.Equals(Humanizer.Bytes.ByteSize)", span="197-197"];
m0_101 [cluster="Humanizer.Bytes.ByteSize.Subtract(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.Subtract(Humanizer.Bytes.ByteSize)", span="247-247"];
m0_102 [cluster="Humanizer.Bytes.ByteSize.Subtract(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="return new ByteSize(Bits - bs.Bits);", span="249-249"];
m0_103 [cluster="Humanizer.Bytes.ByteSize.Subtract(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.Subtract(Humanizer.Bytes.ByteSize)", span="247-247"];
m0_110 [cluster="Humanizer.Bytes.ByteSize.operator -(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.operator -(Humanizer.Bytes.ByteSize)", span="262-262"];
m0_111 [cluster="Humanizer.Bytes.ByteSize.operator -(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="return new ByteSize(-b.Bits);", span="264-264"];
m0_112 [cluster="Humanizer.Bytes.ByteSize.operator -(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.operator -(Humanizer.Bytes.ByteSize)", span="262-262"];
m0_174 [cluster="string.TrimStart(params char[])", file="ByteSize.cs", label="Entry string.TrimStart(params char[])", span="0-0"];
m0_95 [cluster="Humanizer.Bytes.ByteSize.AddGigabytes(double)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.AddGigabytes(double)", span="237-237"];
m0_96 [cluster="Humanizer.Bytes.ByteSize.AddGigabytes(double)", file="ByteSize.cs", label="return this + FromGigabytes(value);", span="239-239"];
m0_97 [cluster="Humanizer.Bytes.ByteSize.AddGigabytes(double)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.AddGigabytes(double)", span="237-237"];
m0_180 [cluster="Humanizer.Bytes.ByteSize.Parse(string)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.Parse(string)", span="376-376"];
m0_181 [cluster="Humanizer.Bytes.ByteSize.Parse(string)", file="ByteSize.cs", label="ByteSize result", span="378-378"];
m0_182 [cluster="Humanizer.Bytes.ByteSize.Parse(string)", file="ByteSize.cs", label="TryParse(s, out result)", span="380-380"];
m0_183 [cluster="Humanizer.Bytes.ByteSize.Parse(string)", file="ByteSize.cs", label="return result;", span="381-381"];
m0_184 [cluster="Humanizer.Bytes.ByteSize.Parse(string)", file="ByteSize.cs", label="throw new FormatException(''Value is not in the correct format'');", span="383-383"];
m0_185 [cluster="Humanizer.Bytes.ByteSize.Parse(string)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.Parse(string)", span="376-376"];
m0_179 [cluster="string.ToUpper()", file="ByteSize.cs", label="Entry string.ToUpper()", span="0-0"];
m0_176 [cluster="string.Substring(int, int)", file="ByteSize.cs", label="Entry string.Substring(int, int)", span="0-0"];
m0_76 [cluster="Humanizer.Bytes.ByteSize.CompareTo(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.CompareTo(Humanizer.Bytes.ByteSize)", span="207-207"];
m0_77 [cluster="Humanizer.Bytes.ByteSize.CompareTo(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="return Bits.CompareTo(other.Bits);", span="209-209"];
m0_78 [cluster="Humanizer.Bytes.ByteSize.CompareTo(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.CompareTo(Humanizer.Bytes.ByteSize)", span="207-207"];
m0_75 [cluster="long.GetHashCode()", file="ByteSize.cs", label="Entry long.GetHashCode()", span="0-0"];
m0_128 [cluster="Humanizer.Bytes.ByteSize.operator >(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.operator >(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="292-292"];
m0_129 [cluster="Humanizer.Bytes.ByteSize.operator >(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="return b1.Bits > b2.Bits;", span="294-294"];
m0_130 [cluster="Humanizer.Bytes.ByteSize.operator >(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.operator >(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="292-292"];
m0_24 [cluster="Humanizer.Bytes.ByteSize.FromTerabytes(double)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.FromTerabytes(double)", span="140-140"];
m0_25 [cluster="Humanizer.Bytes.ByteSize.FromTerabytes(double)", file="ByteSize.cs", label="return new ByteSize(value * BytesInTerabyte);", span="142-142"];
m0_26 [cluster="Humanizer.Bytes.ByteSize.FromTerabytes(double)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.FromTerabytes(double)", span="140-140"];
m0_186 [cluster="System.FormatException.FormatException(string)", file="ByteSize.cs", label="Entry System.FormatException.FormatException(string)", span="0-0"];
m0_178 [cluster="double.TryParse(string, out double)", file="ByteSize.cs", label="Entry double.TryParse(string, out double)", span="0-0"];
m0_21 [cluster="Humanizer.Bytes.ByteSize.FromGigabytes(double)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.FromGigabytes(double)", span="135-135"];
m0_22 [cluster="Humanizer.Bytes.ByteSize.FromGigabytes(double)", file="ByteSize.cs", label="return new ByteSize(value * BytesInGigabyte);", span="137-137"];
m0_23 [cluster="Humanizer.Bytes.ByteSize.FromGigabytes(double)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.FromGigabytes(double)", span="135-135"];
m0_15 [cluster="Humanizer.Bytes.ByteSize.FromKilobytes(double)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.FromKilobytes(double)", span="125-125"];
m0_16 [cluster="Humanizer.Bytes.ByteSize.FromKilobytes(double)", file="ByteSize.cs", label="return new ByteSize(value * BytesInKilobyte);", span="127-127"];
m0_17 [cluster="Humanizer.Bytes.ByteSize.FromKilobytes(double)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.FromKilobytes(double)", span="125-125"];
m0_57 [cluster="lambda expression", file="ByteSize.cs", label="Entry lambda expression", span="162-162"];
m0_55 [cluster="lambda expression", file="ByteSize.cs", label="format.IndexOf(s, StringComparison.CurrentCultureIgnoreCase) != -1", span="161-161"];
m0_58 [cluster="lambda expression", file="ByteSize.cs", label="n.ToString(format)", span="162-162"];
m0_54 [cluster="lambda expression", file="ByteSize.cs", label="Entry lambda expression", span="161-161"];
m0_56 [cluster="lambda expression", file="ByteSize.cs", label="Exit lambda expression", span="161-161"];
m0_59 [cluster="lambda expression", file="ByteSize.cs", label="Exit lambda expression", span="162-162"];
m0_98 [cluster="Humanizer.Bytes.ByteSize.AddTerabytes(double)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.AddTerabytes(double)", span="242-242"];
m0_99 [cluster="Humanizer.Bytes.ByteSize.AddTerabytes(double)", file="ByteSize.cs", label="return this + FromTerabytes(value);", span="244-244"];
m0_100 [cluster="Humanizer.Bytes.ByteSize.AddTerabytes(double)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.AddTerabytes(double)", span="242-242"];
m0_52 [cluster="string.IndexOf(string, System.StringComparison)", file="ByteSize.cs", label="Entry string.IndexOf(string, System.StringComparison)", span="0-0"];
m0_72 [cluster="Humanizer.Bytes.ByteSize.GetHashCode()", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.GetHashCode()", span="202-202"];
m0_73 [cluster="Humanizer.Bytes.ByteSize.GetHashCode()", file="ByteSize.cs", label="return Bits.GetHashCode();", span="204-204"];
m0_74 [cluster="Humanizer.Bytes.ByteSize.GetHashCode()", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.GetHashCode()", span="202-202"];
m0_113 [cluster="Humanizer.Bytes.ByteSize.operator --(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.operator --(Humanizer.Bytes.ByteSize)", span="267-267"];
m0_114 [cluster="Humanizer.Bytes.ByteSize.operator --(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="return new ByteSize(b.Bits--);", span="269-269"];
m0_115 [cluster="Humanizer.Bytes.ByteSize.operator --(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.operator --(Humanizer.Bytes.ByteSize)", span="267-267"];
m0_131 [cluster="Humanizer.Bytes.ByteSize.operator >=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.operator >=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="297-297"];
m0_132 [cluster="Humanizer.Bytes.ByteSize.operator >=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="return b1.Bits >= b2.Bits;", span="299-299"];
m0_133 [cluster="Humanizer.Bytes.ByteSize.operator >=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.operator >=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="297-297"];
m0_116 [cluster="Humanizer.Bytes.ByteSize.operator ==(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.operator ==(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="272-272"];
m0_117 [cluster="Humanizer.Bytes.ByteSize.operator ==(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="return b1.Bits == b2.Bits;", span="274-274"];
m0_118 [cluster="Humanizer.Bytes.ByteSize.operator ==(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.operator ==(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="272-272"];
m0_104 [cluster="Humanizer.Bytes.ByteSize.operator +(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.operator +(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="252-252"];
m0_105 [cluster="Humanizer.Bytes.ByteSize.operator +(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="return new ByteSize(b1.Bits + b2.Bits);", span="254-254"];
m0_106 [cluster="Humanizer.Bytes.ByteSize.operator +(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.operator +(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="252-252"];
m0_173 [cluster="Humanizer.Bytes.ByteSize.ByteSize()", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.ByteSize()", span="30-30"];
m0_79 [cluster="long.CompareTo(long)", file="ByteSize.cs", label="Entry long.CompareTo(long)", span="0-0"];
m0_89 [cluster="Humanizer.Bytes.ByteSize.AddKilobytes(double)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.AddKilobytes(double)", span="227-227"];
m0_90 [cluster="Humanizer.Bytes.ByteSize.AddKilobytes(double)", file="ByteSize.cs", label="return this + FromKilobytes(value);", span="229-229"];
m0_91 [cluster="Humanizer.Bytes.ByteSize.AddKilobytes(double)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.AddKilobytes(double)", span="227-227"];
m0_53 [cluster="double.ToString(string)", file="ByteSize.cs", label="Entry double.ToString(string)", span="0-0"];
m0_8 [cluster="System.Math.Ceiling(double)", file="ByteSize.cs", label="Entry System.Math.Ceiling(double)", span="0-0"];
m0_187 [file="ByteSize.cs", label="Humanizer.Bytes.ByteSize", span=""];
m0_188 [file="ByteSize.cs", label="ref Humanizer.Bytes.ByteSize", span=""];
m0_189 [file="ByteSize.cs", label="ref Humanizer.Bytes.ByteSize", span=""];
m0_190 [file="ByteSize.cs", label=string, span=""];
m0_191 [file="ByteSize.cs", label="ref Humanizer.Bytes.ByteSize", span=""];
m0_192 [file="ByteSize.cs", label="ref Humanizer.Bytes.ByteSize", span=""];
m0_193 [file="ByteSize.cs", label="ref Humanizer.Bytes.ByteSize", span=""];
m0_194 [file="ByteSize.cs", label="ref Humanizer.Bytes.ByteSize", span=""];
m0_195 [file="ByteSize.cs", label="ref Humanizer.Bytes.ByteSize", span=""];
m0_196 [file="ByteSize.cs", label="ref Humanizer.Bytes.ByteSize", span=""];
m0_197 [file="ByteSize.cs", label="ref Humanizer.Bytes.ByteSize", span=""];
m1_23 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreLeftIntact()", file="Configurator.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreLeftIntact()", span="84-84"];
m1_24 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreLeftIntact()", file="Configurator.cs", label="Assert.Equal(\r\n                ''HTML'',\r\n                ''HTML''.Humanize())", span="86-88"];
m1_25 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreLeftIntact()", file="Configurator.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreLeftIntact()", span="84-84"];
m1_3 [cluster="string.Humanize()", file="Configurator.cs", label="Entry string.Humanize()", span="74-74"];
m1_0 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.PascalCaseInputStringIsTurnedIntoSentence()", file="Configurator.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.PascalCaseInputStringIsTurnedIntoSentence()", span="32-32"];
m1_1 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.PascalCaseInputStringIsTurnedIntoSentence()", file="Configurator.cs", label="Assert.Equal(\r\n                ''Pascal case input string is turned into sentence'',\r\n                ''PascalCaseInputStringIsTurnedIntoSentence''.Humanize())", span="34-36"];
m1_2 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.PascalCaseInputStringIsTurnedIntoSentence()", file="Configurator.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.PascalCaseInputStringIsTurnedIntoSentence()", span="32-32"];
m1_8 [cluster="lambda expression", file="Configurator.cs", label="Entry lambda expression", span="18-18"];
m1_9 [cluster="lambda expression", color=green, community=0, file="Configurator.cs", label="new ArabicFormatter()", prediction=0, span="18-18"];
m1_10 [cluster="lambda expression", file="Configurator.cs", label="Exit lambda expression", span="18-18"];
m1_30 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", file="Configurator.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", span="100-100"];
m1_31 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", file="Configurator.cs", label="Assert.Equal(\r\n                ''Can Return Title Case'',\r\n                ''Can_return_title_Case''.Humanize(LetterCasing.Title))", span="102-104"];
m1_32 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", file="Configurator.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", span="100-100"];
m1_4 [cluster="Unk.Equal", file="Configurator.cs", label="Entry Unk.Equal", span=""];
m1_36 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCase()", file="Configurator.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCase()", span="116-116"];
m1_37 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCase()", file="Configurator.cs", label="Assert.Equal(\r\n                ''can return lower case'',\r\n                ''CanReturnLowerCase''.Humanize(LetterCasing.LowerCase))", span="118-120"];
m1_38 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCase()", file="Configurator.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCase()", span="116-116"];
m1_39 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", file="Configurator.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", span="124-124"];
m1_40 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", file="Configurator.cs", label="Assert.Equal(\r\n                ''lowercase'',\r\n                ''LOWERCASE''.Humanize(LetterCasing.LowerCase))", span="126-128"];
m1_41 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", file="Configurator.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", span="124-124"];
m1_11 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", file="Configurator.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", span="54-54"];
m1_26 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", file="Configurator.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", span="92-92"];
m1_27 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", file="Configurator.cs", label="Assert.Equal(\r\n                ''Can Return Title Case'',\r\n                ''CanReturnTitleCase''.Humanize(LetterCasing.Title))", span="94-96"];
m1_28 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", file="Configurator.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", span="92-92"];
m1_14 [cluster="lambda expression", file="Configurator.cs", label="Exit lambda expression", span="19-19"];
m1_15 [cluster="Humanizer.Localisation.Formatters.CzechSlovakPolishFormatter.CzechSlovakPolishFormatter()", file="Configurator.cs", label="Entry Humanizer.Localisation.Formatters.CzechSlovakPolishFormatter.CzechSlovakPolishFormatter()", span="2-2"];
m1_16 [cluster="lambda expression", file="Configurator.cs", label="Entry lambda expression", span="20-20"];
m1_42 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoUpperCase()", file="Configurator.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoUpperCase()", span="132-132"];
m1_43 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoUpperCase()", file="Configurator.cs", label="Assert.Equal(\r\n                ''CAN HUMANIZE INTO UPPER CASE'',\r\n                ''CanHumanizeIntoUpperCase''.Humanize(LetterCasing.AllCaps))", span="134-136"];
m1_44 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoUpperCase()", file="Configurator.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoUpperCase()", span="132-132"];
m1_33 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.TitleHumanizationHonorsAllCaps()", file="Configurator.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.TitleHumanizationHonorsAllCaps()", span="108-108"];
m1_34 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.TitleHumanizationHonorsAllCaps()", file="Configurator.cs", label="Assert.Equal(\r\n                ''Title Humanization Honors ALLCAPS'',\r\n                ''Title_humanization_Honors_ALLCAPS''.Humanize(LetterCasing.Title))", span="110-112"];
m1_35 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.TitleHumanizationHonorsAllCaps()", file="Configurator.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.TitleHumanizationHonorsAllCaps()", span="108-108"];
m1_5 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", file="Configurator.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", span="40-40"];
m1_6 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", file="Configurator.cs", label="Assert.Equal(\r\n                ''When I use an input a here'',\r\n                ''WhenIUseAnInputAHere''.Humanize())", span="42-44"];
m1_7 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", file="Configurator.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", span="40-40"];
m1_29 [cluster="string.Humanize(Humanizer.LetterCasing)", file="Configurator.cs", label="Entry string.Humanize(Humanizer.LetterCasing)", span="86-86"];
m1_20 [cluster="lambda expression", file="Configurator.cs", label="new CzechSlovakPolishFormatter()", span="21-21"];
m1_21 [cluster="lambda expression", file="Configurator.cs", label="Exit lambda expression", span="21-21"];
m1_22 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", file="Configurator.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", span="76-76"];
m1_19 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringPreservesCasing()", file="Configurator.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringPreservesCasing()", span="68-68"];
m1_13 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", color=green, community=0, file="Configurator.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", prediction=1, span="54-54"];
m1_12 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", file="Configurator.cs", label="Assert.Equal(''Number is at the end 100'', ''NumberIsAtTheEnd100''.Humanize())", span="56-56"];
m1_17 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringPreservesCasing()", file="Configurator.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringPreservesCasing()", span="68-68"];
m1_18 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringPreservesCasing()", file="Configurator.cs", label="Assert.Equal(\r\n                ''Underscored input String is turned INTO sentence'',\r\n                ''Underscored_input_String_is_turned_INTO_sentence''.Humanize())", span="70-72"];
m1_45 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanTurnIntoUpperCasewhenUsingUnderscores()", file="Configurator.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.CanTurnIntoUpperCasewhenUsingUnderscores()", span="140-140"];
m1_46 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanTurnIntoUpperCasewhenUsingUnderscores()", file="Configurator.cs", label="Assert.Equal(\r\n                ''CAN HUMANIZE INTO UPPER CASE'',\r\n                ''Can_Humanize_into_Upper_case''.Humanize(LetterCasing.AllCaps))", span="142-144"];
m1_47 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanTurnIntoUpperCasewhenUsingUnderscores()", file="Configurator.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.CanTurnIntoUpperCasewhenUsingUnderscores()", span="140-140"];
m3_8 [cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", file="CzechSlovakPolishFormatter.cs", label="Entry Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", span="50-50"];
m3_9 [cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", file="CzechSlovakPolishFormatter.cs", label="Assert.Equal(plural, plural.Pluralize(Plurality.CouldBeEither))", span="52-52"];
m3_10 [cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", file="CzechSlovakPolishFormatter.cs", label="Assert.Equal(plural, singular.Pluralize(Plurality.CouldBeEither))", span="53-53"];
m3_11 [cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", file="CzechSlovakPolishFormatter.cs", label="Exit Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", span="50-50"];
m3_34 [cluster="string.Hyphenate()", file="CzechSlovakPolishFormatter.cs", label="Entry string.Hyphenate()", span="292-292"];
m3_27 [cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", file="CzechSlovakPolishFormatter.cs", label="Entry Humanizer.Tests.InflectorTests.Dasherize(string, string)", span="96-96"];
m3_28 [cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", file="CzechSlovakPolishFormatter.cs", label="Assert.Equal(input.Dasherize(), expectedOutput)", span="98-98"];
m3_29 [cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", file="CzechSlovakPolishFormatter.cs", label="Exit Humanizer.Tests.InflectorTests.Dasherize(string, string)", span="96-96"];
m3_16 [cluster="Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord(string, string)", file="CzechSlovakPolishFormatter.cs", label="Entry Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord(string, string)", span="65-65"];
m3_17 [cluster="Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord(string, string)", file="CzechSlovakPolishFormatter.cs", label="Assert.Equal(singular, singular.Singularize(Plurality.Singular))", span="67-67"];
m3_18 [cluster="Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord(string, string)", file="CzechSlovakPolishFormatter.cs", label="Exit Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord(string, string)", span="65-65"];
m3_39 [cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)", file="CzechSlovakPolishFormatter.cs", label="Entry Humanizer.Tests.InflectorTests.Camelize(string, string)", span="133-133"];
m3_40 [cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)", file="CzechSlovakPolishFormatter.cs", label="Assert.Equal(expectedOutput, input.Camelize())", span="135-135"];
m3_41 [cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)", file="CzechSlovakPolishFormatter.cs", label="Exit Humanizer.Tests.InflectorTests.Camelize(string, string)", span="133-133"];
m3_47 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="Entry Humanizer.Tests.PluralTestSource.GetEnumerator()", span="154-154"];
m3_48 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''search'', ''searches''};", span="156-156"];
m3_49 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''switch'', ''switches''};", span="157-157"];
m3_50 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''fix'', ''fixes''};", span="158-158"];
m3_51 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''box'', ''boxes''};", span="159-159"];
m3_52 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''process'', ''processes''};", span="160-160"];
m3_53 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''address'', ''addresses''};", span="161-161"];
m3_54 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''case'', ''cases''};", span="162-162"];
m3_55 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''stack'', ''stacks''};", span="163-163"];
m3_56 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''wish'', ''wishes''};", span="164-164"];
m3_57 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''fish'', ''fish''};", span="165-165"];
m3_58 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''category'', ''categories''};", span="167-167"];
m3_59 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''query'', ''queries''};", span="168-168"];
m3_60 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''ability'', ''abilities''};", span="169-169"];
m3_61 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''agency'', ''agencies''};", span="170-170"];
m3_62 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''movie'', ''movies''};", span="171-171"];
m3_63 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''archive'', ''archives''};", span="173-173"];
m3_64 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''index'', ''indices''};", span="175-175"];
m3_65 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''wife'', ''wives''};", span="177-177"];
m3_66 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''safe'', ''saves''};", span="178-178"];
m3_67 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''half'', ''halves''};", span="179-179"];
m3_68 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''move'', ''moves''};", span="181-181"];
m3_69 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''salesperson'', ''salespeople''};", span="183-183"];
m3_70 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''person'', ''people''};", span="184-184"];
m3_71 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''spokesman'', ''spokesmen''};", span="186-186"];
m3_72 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''man'', ''men''};", span="187-187"];
m3_73 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''woman'', ''women''};", span="188-188"];
m3_74 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''basis'', ''bases''};", span="190-190"];
m3_75 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''diagnosis'', ''diagnoses''};", span="191-191"];
m3_76 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''datum'', ''data''};", span="193-193"];
m3_77 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''medium'', ''media''};", span="194-194"];
m3_78 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''analysis'', ''analyses''};", span="195-195"];
m3_79 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''node_child'', ''node_children''};", span="197-197"];
m3_80 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''child'', ''children''};", span="198-198"];
m3_81 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''experience'', ''experiences''};", span="200-200"];
m3_82 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''day'', ''days''};", span="201-201"];
m3_83 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''comment'', ''comments''};", span="203-203"];
m3_84 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''foobar'', ''foobars''};", span="204-204"];
m3_85 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''newsletter'', ''newsletters''};", span="205-205"];
m3_86 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''old_news'', ''old_news''};", span="207-207"];
m3_87 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''news'', ''news''};", span="208-208"];
m3_88 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''series'', ''series''};", span="210-210"];
m3_89 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''species'', ''species''};", span="211-211"];
m3_90 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''quiz'', ''quizzes''};", span="213-213"];
m3_91 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''perspective'', ''perspectives''};", span="215-215"];
m3_92 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''ox'', ''oxen''};", span="217-217"];
m3_93 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''photo'', ''photos''};", span="218-218"];
m3_94 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''buffalo'', ''buffaloes''};", span="219-219"];
m3_95 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''tomato'', ''tomatoes''};", span="220-220"];
m3_96 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''dwarf'', ''dwarves''};", span="221-221"];
m3_97 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''elf'', ''elves''};", span="222-222"];
m3_98 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''information'', ''information''};", span="223-223"];
m3_99 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''equipment'', ''equipment''};", span="224-224"];
m3_100 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''bus'', ''buses''};", span="225-225"];
m3_101 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''status'', ''statuses''};", span="226-226"];
m3_102 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''status_code'', ''status_codes''};", span="227-227"];
m3_103 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''mouse'', ''mice''};", span="228-228"];
m3_104 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''louse'', ''lice''};", span="230-230"];
m3_105 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''house'', ''houses''};", span="231-231"];
m3_106 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''octopus'', ''octopi''};", span="232-232"];
m3_107 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''virus'', ''viri''};", span="233-233"];
m3_108 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''alias'', ''aliases''};", span="234-234"];
m3_109 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''portfolio'', ''portfolios''};", span="235-235"];
m3_110 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''vertex'', ''vertices''};", span="237-237"];
m3_111 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''matrix'', ''matrices''};", span="238-238"];
m3_112 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''axis'', ''axes''};", span="240-240"];
m3_113 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''testis'', ''testes''};", span="241-241"];
m3_114 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''crisis'', ''crises''};", span="242-242"];
m3_115 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''rice'', ''rice''};", span="244-244"];
m3_116 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''shoe'', ''shoes''};", span="245-245"];
m3_117 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''horse'', ''horses''};", span="247-247"];
m3_118 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''prize'', ''prizes''};", span="248-248"];
m3_119 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''edge'', ''edges''};", span="249-249"];
m3_120 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''goose'', ''geese''};", span="252-252"];
m3_121 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''deer'', ''deer''};", span="253-253"];
m3_122 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''sheep'', ''sheep''};", span="254-254"];
m3_123 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''wolf'', ''wolves''};", span="255-255"];
m3_124 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''volcano'', ''volcanoes''};", span="256-256"];
m3_125 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''aircraft'', ''aircraft''};", span="257-257"];
m3_126 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''alumna'', ''alumnae''};", span="258-258"];
m3_127 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''alumnus'', ''alumni''};", span="259-259"];
m3_128 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="yield return new object[] {''fungus'', ''fungi''};", span="260-260"];
m3_129 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="Exit Humanizer.Tests.PluralTestSource.GetEnumerator()", span="154-154"];
m3_4 [cluster="Unk.Equal", file="CzechSlovakPolishFormatter.cs", label="Entry Unk.Equal", span=""];
m3_19 [cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", file="CzechSlovakPolishFormatter.cs", label="Entry Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", span="72-72"];
m3_20 [cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", file="CzechSlovakPolishFormatter.cs", label="Assert.Equal(singular, singular.Singularize(Plurality.CouldBeEither))", span="74-74"];
m3_21 [cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", file="CzechSlovakPolishFormatter.cs", label="Assert.Equal(singular, plural.Singularize(Plurality.CouldBeEither))", span="75-75"];
m3_22 [cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", file="CzechSlovakPolishFormatter.cs", label="Exit Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", span="72-72"];
m3_43 [cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)", file="CzechSlovakPolishFormatter.cs", label="Entry Humanizer.Tests.InflectorTests.Underscore(string, string)", span="146-146"];
m3_44 [cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)", file="CzechSlovakPolishFormatter.cs", label="Assert.Equal(expectedOuput, input.Underscore())", span="148-148"];
m3_45 [cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)", file="CzechSlovakPolishFormatter.cs", label="Exit Humanizer.Tests.InflectorTests.Underscore(string, string)", span="146-146"];
m3_3 [cluster="string.Pluralize(Humanizer.Plurality)", file="CzechSlovakPolishFormatter.cs", label="Entry string.Pluralize(Humanizer.Plurality)", span="170-170"];
m3_38 [cluster="string.Pascalize()", file="CzechSlovakPolishFormatter.cs", label="Entry string.Pascalize()", span="249-249"];
m3_23 [cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", file="CzechSlovakPolishFormatter.cs", label="Entry Humanizer.Tests.InflectorTests.Titleize(string, string)", span="86-86"];
m3_24 [cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", file="CzechSlovakPolishFormatter.cs", label="Assert.Equal(expectedOuput, input.Titleize())", span="88-88"];
m3_25 [cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", file="CzechSlovakPolishFormatter.cs", label="Exit Humanizer.Tests.InflectorTests.Titleize(string, string)", span="86-86"];
m3_26 [cluster="string.Titleize()", file="CzechSlovakPolishFormatter.cs", label="Entry string.Titleize()", span="239-239"];
m3_0 [cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)", file="CzechSlovakPolishFormatter.cs", label="Entry Humanizer.Tests.InflectorTests.Pluralize(string, string)", span="36-36"];
m3_1 [cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)", file="CzechSlovakPolishFormatter.cs", label="Assert.Equal(plural, singular.Pluralize())", span="38-38"];
m3_2 [cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)", file="CzechSlovakPolishFormatter.cs", label="Exit Humanizer.Tests.InflectorTests.Pluralize(string, string)", span="36-36"];
m3_30 [cluster="string.Dasherize()", file="CzechSlovakPolishFormatter.cs", label="Entry string.Dasherize()", span="282-282"];
m3_12 [cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", file="CzechSlovakPolishFormatter.cs", label="Entry Humanizer.Tests.InflectorTests.Singularize(string, string)", span="58-58"];
m3_13 [cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", file="CzechSlovakPolishFormatter.cs", label="Assert.Equal(singular, plural.Singularize())", span="60-60"];
m3_14 [cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", file="CzechSlovakPolishFormatter.cs", label="Exit Humanizer.Tests.InflectorTests.Singularize(string, string)", span="58-58"];
m3_35 [cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", file="CzechSlovakPolishFormatter.cs", label="Entry Humanizer.Tests.InflectorTests.Pascalize(string, string)", span="119-119"];
m3_36 [cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", file="CzechSlovakPolishFormatter.cs", label="Assert.Equal(expectedOutput, input.Pascalize())", span="121-121"];
m3_37 [cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", file="CzechSlovakPolishFormatter.cs", label="Exit Humanizer.Tests.InflectorTests.Pascalize(string, string)", span="119-119"];
m3_31 [cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)", file="CzechSlovakPolishFormatter.cs", label="Entry Humanizer.Tests.InflectorTests.Hyphenate(string, string)", span="106-106"];
m3_32 [cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)", file="CzechSlovakPolishFormatter.cs", label="Assert.Equal(input.Hyphenate(), expectedOutput)", span="108-108"];
m3_33 [cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)", file="CzechSlovakPolishFormatter.cs", label="Exit Humanizer.Tests.InflectorTests.Hyphenate(string, string)", span="106-106"];
m3_130 [cluster="Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="Entry Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", span="263-263"];
m3_131 [cluster="Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="return GetEnumerator();", span="265-265"];
m3_132 [cluster="Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", file="CzechSlovakPolishFormatter.cs", label="Exit Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", span="263-263"];
m3_42 [cluster="string.Camelize()", file="CzechSlovakPolishFormatter.cs", label="Entry string.Camelize()", span="259-259"];
m3_46 [cluster="string.Underscore()", file="CzechSlovakPolishFormatter.cs", label="Entry string.Underscore()", span="270-270"];
m3_5 [cluster="Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord(string, string)", file="CzechSlovakPolishFormatter.cs", label="Entry Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord(string, string)", span="43-43"];
m3_6 [cluster="Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord(string, string)", file="CzechSlovakPolishFormatter.cs", label="Assert.Equal(plural, plural.Pluralize(Plurality.Plural))", span="45-45"];
m3_7 [cluster="Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord(string, string)", file="CzechSlovakPolishFormatter.cs", label="Exit Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord(string, string)", span="43-43"];
m3_15 [cluster="string.Singularize(Humanizer.Plurality)", file="CzechSlovakPolishFormatter.cs", label="Entry string.Singularize(Humanizer.Plurality)", span="194-194"];
m3_133 [file="CzechSlovakPolishFormatter.cs", label="Humanizer.Tests.PluralTestSource", span=""];
m4_0 [cluster="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string)", file="DateHumanizeTests.cs", label="Entry Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string)", span="4-4"];
m4_2 [cluster="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string)", file="DateHumanizeTests.cs", label="Exit Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string)", span="4-4"];
m4_3 [cluster="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string, Humanizer.GrammaticalGender)", file="DateHumanizeTests.cs", label="Entry Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string, Humanizer.GrammaticalGender)", span="9-9"];
m4_9 [cluster="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string, Humanizer.GrammaticalGender)", file="DateHumanizeTests.cs", label="Exit Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string, Humanizer.GrammaticalGender)", span="9-9"];
m4_10 [file="DateHumanizeTests.cs", label="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer", span=""];
m6_63 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="EnglishNumberToWordsConverter.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m6_67 [cluster="int.ToString(System.IFormatProvider)", file="EnglishNumberToWordsConverter.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m6_15 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="EnglishNumberToWordsConverter.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m6_16 [cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", file="EnglishNumberToWordsConverter.cs", label="Entry Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", span="38-38"];
m6_27 [cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", file="EnglishNumberToWordsConverter.cs", label="Exit Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", span="38-38"];
m6_61 [cluster="System.Collections.Generic.List<T>.List()", file="EnglishNumberToWordsConverter.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m6_64 [cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.ConvertToOrdinal(int)", file="EnglishNumberToWordsConverter.cs", label="Entry Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.ConvertToOrdinal(int)", span="110-110"];
m6_66 [cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.ConvertToOrdinal(int)", file="EnglishNumberToWordsConverter.cs", label="Exit Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.ConvertToOrdinal(int)", span="110-110"];
m6_62 [cluster="System.Collections.Generic.List<T>.Add(T)", file="EnglishNumberToWordsConverter.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m6_28 [cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", file="EnglishNumberToWordsConverter.cs", label="Entry Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", span="57-57"];
m6_60 [cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", file="EnglishNumberToWordsConverter.cs", label="Exit Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", span="57-57"];
m6_0 [cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.PolishNumberToWordsConverter(System.Globalization.CultureInfo)", file="EnglishNumberToWordsConverter.cs", label="Entry Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.PolishNumberToWordsConverter(System.Globalization.CultureInfo)", span="13-13"];
m6_2 [cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.PolishNumberToWordsConverter(System.Globalization.CultureInfo)", file="EnglishNumberToWordsConverter.cs", label="Exit Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.PolishNumberToWordsConverter(System.Globalization.CultureInfo)", span="13-13"];
m6_3 [cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.CollectPartsUnderThousand(System.Collections.Generic.ICollection<string>, int)", file="EnglishNumberToWordsConverter.cs", label="Entry Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.CollectPartsUnderThousand(System.Collections.Generic.ICollection<string>, int)", span="18-18"];
m6_14 [cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.CollectPartsUnderThousand(System.Collections.Generic.ICollection<string>, int)", file="EnglishNumberToWordsConverter.cs", label="Exit Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.CollectPartsUnderThousand(System.Collections.Generic.ICollection<string>, int)", span="18-18"];
m6_68 [file="EnglishNumberToWordsConverter.cs", label="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter", span=""];
m7_7 [cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", file="IFormatter.cs", label="Entry Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", span="39-39"];
m7_8 [cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", file="IFormatter.cs", label="Assert.Equal(expected, word.ToQuantity(quatity, ShowQuantityAs.None))", span="41-41"];
m7_9 [cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", file="IFormatter.cs", label="Exit Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", span="39-39"];
m7_5 [cluster="string.ToQuantity(int, Humanizer.ShowQuantityAs)", file="IFormatter.cs", label="Entry string.ToQuantity(int, Humanizer.ShowQuantityAs)", span="25-25"];
m7_2 [cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantity(string, int, string)", file="IFormatter.cs", label="Entry Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantity(string, int, string)", span="22-22"];
m7_3 [cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantity(string, int, string)", file="IFormatter.cs", label="Assert.Equal(expected, word.ToQuantity(quatity))", span="24-24"];
m7_4 [cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantity(string, int, string)", file="IFormatter.cs", label="Exit Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantity(string, int, string)", span="22-22"];
m7_6 [cluster="Unk.Equal", file="IFormatter.cs", label="Entry Unk.Equal", span=""];
m7_0 [cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityTests()", file="IFormatter.cs", label="Entry Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityTests()", span="8-8"];
m7_1 [cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityTests()", file="IFormatter.cs", label="Exit Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityTests()", span="8-8"];
m7_10 [cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityNumeric(string, int, string)", file="IFormatter.cs", label="Entry Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityNumeric(string, int, string)", span="56-56"];
m7_11 [cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityNumeric(string, int, string)", file="IFormatter.cs", label="Assert.Equal(expected, word.ToQuantity(quatity, ShowQuantityAs.Numeric))", span="59-59"];
m7_12 [cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityNumeric(string, int, string)", file="IFormatter.cs", label="Exit Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityNumeric(string, int, string)", span="56-56"];
m7_13 [cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWords(string, int, string)", file="IFormatter.cs", label="Entry Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWords(string, int, string)", span="75-75"];
m7_14 [cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWords(string, int, string)", file="IFormatter.cs", label="Assert.Equal(expected, word.ToQuantity(quatity, ShowQuantityAs.Words))", span="77-77"];
m7_15 [cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWords(string, int, string)", file="IFormatter.cs", label="Exit Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWords(string, int, string)", span="75-75"];
m9_10 [cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.Register(string, TLocaliser)", file="INumberToWordsConverter.cs", label="Entry Humanizer.Configuration.LocaliserRegistry<TLocaliser>.Register(string, TLocaliser)", span="54-54"];
m9_12 [cluster="Humanizer.Localisation.Ordinalizers.SpanishOrdinalizer.SpanishOrdinalizer()", file="INumberToWordsConverter.cs", label="Entry Humanizer.Localisation.Ordinalizers.SpanishOrdinalizer.SpanishOrdinalizer()", span="2-2"];
m9_16 [cluster="Humanizer.Localisation.Ordinalizers.TurkishOrdinalizer.TurkishOrdinalizer()", file="INumberToWordsConverter.cs", label="Entry Humanizer.Localisation.Ordinalizers.TurkishOrdinalizer.TurkishOrdinalizer()", span="7-7"];
m9_14 [cluster="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.BrazilianPortugueseOrdinalizer()", file="INumberToWordsConverter.cs", label="Entry Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.BrazilianPortugueseOrdinalizer()", span="2-2"];
m9_11 [cluster="Humanizer.Localisation.Ordinalizers.EnglishOrdinalizer.EnglishOrdinalizer()", file="INumberToWordsConverter.cs", label="Entry Humanizer.Localisation.Ordinalizers.EnglishOrdinalizer.EnglishOrdinalizer()", span="2-2"];
m9_9 [cluster="Humanizer.Localisation.Ordinalizers.GermanOrdinalizer.GermanOrdinalizer()", file="INumberToWordsConverter.cs", label="Entry Humanizer.Localisation.Ordinalizers.GermanOrdinalizer.GermanOrdinalizer()", span="2-2"];
m9_0 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", file="INumberToWordsConverter.cs", label="Entry Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", span="6-6"];
m9_8 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", file="INumberToWordsConverter.cs", label="Exit Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", span="6-6"];
m9_13 [cluster="Humanizer.Localisation.Ordinalizers.ItalianOrdinalizer.ItalianOrdinalizer()", file="INumberToWordsConverter.cs", label="Entry Humanizer.Localisation.Ordinalizers.ItalianOrdinalizer.ItalianOrdinalizer()", span="2-2"];
m9_15 [cluster="Humanizer.Localisation.Ordinalizers.RussianOrdinalizer.RussianOrdinalizer()", file="INumberToWordsConverter.cs", label="Entry Humanizer.Localisation.Ordinalizers.RussianOrdinalizer.RussianOrdinalizer()", span="2-2"];
m9_17 [file="INumberToWordsConverter.cs", label="Humanizer.Configuration.OrdinalizerRegistry", span=""];
m10_0 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="NumberToOrdinalWordsExtension.cs", label="Entry Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", span="34-34"];
m10_1 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs", label="now == null", prediction=2, span="36-36"];
m10_2 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs", label="now = DateTime.UtcNow", prediction=3, span="38-38"];
m10_35 [cluster="System.DateTime.ToLocalTime()", file="NumberToOrdinalWordsExtension.cs", label="Entry System.DateTime.ToLocalTime()", span="0-0"];
m10_36 [cluster="System.TimeSpan.TimeSpan(long)", file="NumberToOrdinalWordsExtension.cs", label="Entry System.TimeSpan.TimeSpan(long)", span="0-0"];
m10_37 [cluster="System.Math.Abs(double)", file="NumberToOrdinalWordsExtension.cs", label="Entry System.Math.Abs(double)", span="0-0"];
m10_40 [cluster="System.Convert.ToInt32(double)", file="NumberToOrdinalWordsExtension.cs", label="Entry System.Convert.ToInt32(double)", span="0-0"];
m10_3 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs", label="int second = 1", prediction=4, span="40-40"];
m10_4 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs", label="int minute = 60 * second", prediction=5, span="41-41"];
m10_39 [cluster="System.Math.Floor(double)", file="NumberToOrdinalWordsExtension.cs", label="Entry System.Math.Floor(double)", span="0-0"];
m10_38 [cluster="string.Format(string, object)", file="NumberToOrdinalWordsExtension.cs", label="Entry string.Format(string, object)", span="0-0"];
m10_8 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs", label="var comparisonBase = now.Value", prediction=6, span="46-46"];
m10_7 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs", label="int month = 30 * day", prediction=7, span="44-44"];
m10_9 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs", label="!utcDate", prediction=6, span="47-47"];
m10_10 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs", label="comparisonBase = comparisonBase.ToLocalTime()", prediction=9, span="48-48"];
m10_11 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs", label="input > comparisonBase", prediction=6, span="50-50"];
m10_13 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs", label="var ts = new TimeSpan(comparisonBase.Ticks - input.Ticks)", prediction=11, span="53-53"];
m10_12 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs", label="return Resources.DateExtensions_FutureDate_not_yet;", prediction=12, span="51-51"];
m10_14 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs", label="double delta = Math.Abs(ts.TotalSeconds)", prediction=5, span="54-54"];
m10_5 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs", label="int hour = 60 * minute", prediction=5, span="42-42"];
m10_15 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs", label="delta < 1 * minute", prediction=5, span="56-56"];
m10_17 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs", label="delta < 2 * minute", prediction=5, span="59-59"];
m10_19 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs", label="delta < 45 * minute", prediction=5, span="62-62"];
m10_21 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs", label="delta < 90 * minute", prediction=5, span="65-65"];
m10_6 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs", label="int day = 24 * hour", prediction=19, span="43-43"];
m10_23 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs", label="delta < 24 * hour", prediction=5, span="68-68"];
m10_25 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs", label="delta < 48 * hour", prediction=5, span="71-71"];
m10_16 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs", label="return ts.Seconds == 1 ? Resources.DateExtensions_OneSecondAgo_one_second_ago : string.Format(Resources.DateExtensions_SecondsAgo__seconds_ago, ts.Seconds);", prediction=5, span="57-57"];
m10_18 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs", label="return Resources.DateExtensions_OneMinuteAgo_a_minute_ago;", prediction=23, span="60-60"];
m10_20 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs", label="return string.Format(Resources.DateExtensions_MinutesAgo__minutes_ago, ts.Minutes);", prediction=5, span="63-63"];
m10_22 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs", label="return Resources.DateExtensions_OneHourAgo_an_hour_ago;", prediction=25, span="66-66"];
m10_27 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="NumberToOrdinalWordsExtension.cs", label="delta < 30 * day", span="74-74"];
m10_24 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs", label="return string.Format(Resources.DateExtensions_HoursAgo__hours_ago, ts.Hours);", prediction=5, span="69-69"];
m10_26 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs", label="return Resources.DateExtensions_Yesterday_yesterday;", prediction=27, span="72-72"];
m10_29 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="NumberToOrdinalWordsExtension.cs", label="delta < 12 * month", span="77-77"];
m10_28 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="NumberToOrdinalWordsExtension.cs", label="return string.Format(Resources.DateExtensions_DaysAgo__days_ago, ts.Days);", span="75-75"];
m10_30 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="NumberToOrdinalWordsExtension.cs", label="int months = Convert.ToInt32(Math.Floor((double)ts.Days / 30))", span="79-79"];
m10_32 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="NumberToOrdinalWordsExtension.cs", label="int years = Convert.ToInt32(Math.Floor((double)ts.Days / 365))", span="83-83"];
m10_31 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="NumberToOrdinalWordsExtension.cs", label="return months <= 1 ? Resources.DateExtensions_OneMonthAgo_one_month_ago : string.Format(Resources.DateExtensions_MonthsAgo__months_ago, months);", span="80-80"];
m10_33 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="NumberToOrdinalWordsExtension.cs", label="return years <= 1 ? Resources.DateExtensions_OneYearAgo_one_year_ago : string.Format(Resources.DateExtensions_YearsAgo__years_ago, years);", span="84-84"];
m10_34 [cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="NumberToOrdinalWordsExtension.cs", label="Exit Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", span="34-34"];
m11_7 [cluster="Humanizer.Localisation.NumberToWords.ArabicNumberToWordsConverter.ArabicNumberToWordsConverter()", file="NumberToWordsExtension.cs", label="Entry Humanizer.Localisation.NumberToWords.ArabicNumberToWordsConverter.ArabicNumberToWordsConverter()", span="4-4"];
m11_15 [cluster="Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(int)", file="NumberToWordsExtension.cs", label="Entry Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(int)", span="12-12"];
m11_12 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs", label="Entry Humanizer.NumberToWordsExtension.ToWords(int)", span="25-25"];
m11_13 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", color=green, community=0, file="NumberToWordsExtension.cs", label="return Converter.Convert(number);", prediction=28, span="27-27"];
m11_14 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs", label="Exit Humanizer.NumberToWordsExtension.ToWords(int)", span="25-25"];
m11_3 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.EnglishNumberToWordsConverter()", file="NumberToWordsExtension.cs", label="Entry Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.EnglishNumberToWordsConverter()", span="5-5"];
m11_11 [cluster="Humanizer.Localisation.NumberToWords.FarsiNumberToWordsConverter.FarsiNumberToWordsConverter()", file="NumberToWordsExtension.cs", label="Entry Humanizer.Localisation.NumberToWords.FarsiNumberToWordsConverter.FarsiNumberToWordsConverter()", span="5-5"];
m11_8 [cluster="lambda expression", file="NumberToWordsExtension.cs", label="Entry lambda expression", span="17-17"];
m11_0 [cluster="lambda expression", file="NumberToWordsExtension.cs", label="Entry lambda expression", span="15-15"];
m11_2 [cluster="lambda expression", file="NumberToWordsExtension.cs", label="Exit lambda expression", span="15-15"];
m11_4 [cluster="lambda expression", file="NumberToWordsExtension.cs", label="Entry lambda expression", span="16-16"];
m11_6 [cluster="lambda expression", file="NumberToWordsExtension.cs", label="Exit lambda expression", span="16-16"];
m11_10 [cluster="lambda expression", file="NumberToWordsExtension.cs", label="Exit lambda expression", span="17-17"];
m12_6 [cluster="Unk.Equal", file="NumberToWordsTests.cs", label="Entry Unk.Equal", span=""];
m12_5 [cluster="int.ToWords()", file="NumberToWordsTests.cs", label="Entry int.ToWords()", span="25-25"];
m12_2 [cluster="Humanizer.Tests.NumberToWordsTests.ToWords(int, string)", file="NumberToWordsTests.cs", label="Entry Humanizer.Tests.NumberToWordsTests.ToWords(int, string)", span="40-40"];
m12_3 [cluster="Humanizer.Tests.NumberToWordsTests.ToWords(int, string)", file="NumberToWordsTests.cs", label="Assert.Equal(expected, number.ToWords())", span="42-42"];
m12_4 [cluster="Humanizer.Tests.NumberToWordsTests.ToWords(int, string)", file="NumberToWordsTests.cs", label="Exit Humanizer.Tests.NumberToWordsTests.ToWords(int, string)", span="40-40"];
m12_0 [cluster="Humanizer.Tests.NumberToWordsTests.NumberToWordsTests()", file="NumberToWordsTests.cs", label="Entry Humanizer.Tests.NumberToWordsTests.NumberToWordsTests()", span="7-7"];
m12_1 [cluster="Humanizer.Tests.NumberToWordsTests.NumberToWordsTests()", file="NumberToWordsTests.cs", label="Exit Humanizer.Tests.NumberToWordsTests.NumberToWordsTests()", span="7-7"];
m14_73 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="193-193"];
m14_74 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(NameInfo.EmptyName) }", span="196-196"];
m14_75 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMinConstraintAsValue(),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="199-203"];
m14_76 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="206-206"];
m14_77 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="193-193"];
m14_9 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="RomanianFormatter.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12"];
m14_82 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue()", span="6-6"];
m14_139 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", span="6-6"];
m14_150 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceWithoutRange.FakeOptionsWithSequenceWithoutRange()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceWithoutRange.FakeOptionsWithSequenceWithoutRange()", span="6-6"];
m14_258 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", span="614-614"];
m14_259 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="RomanianFormatter.cs", label="var expectedResult = new[] { new UnknownOptionError(''z'') }", span="617-617"];
m14_260 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-zx'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="620-624"];
m14_261 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="RomanianFormatter.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="627-627"];
m14_262 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", span="614-614"];
m14_250 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", span="595-595"];
m14_251 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="RomanianFormatter.cs", label="var expectedResult = new[] { new UnknownOptionError(''z'') }", span="598-598"];
m14_252 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-z'', ''-x'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="601-605"];
m14_253 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="RomanianFormatter.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="608-608"];
m14_254 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", span="595-595"];
m14_299 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", span="717-717"];
m14_300 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithNullables(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="722-726"];
m14_301 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", file="RomanianFormatter.cs", label="expected.ShouldBeEquivalentTo(result.Value.NullableInt)", span="729-729"];
m14_302 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", span="717-717"];
m14_19 [cluster="Unk.Equal", file="RomanianFormatter.cs", label="Entry Unk.Equal", span=""];
m14_0 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", span="17-17"];
m14_1 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="RomanianFormatter.cs", label="var fakeOptions = new FakeOptions()", span="20-20"];
m14_2 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="RomanianFormatter.cs", label="var expectedResult = ParserResult.Create(\r\n                ParserResultType.Options,\r\n                fakeOptions, new Error[] { new HelpRequestedError() })", span="21-23"];
m14_3 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => fakeOptions,\r\n                new[] { ''--help'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="26-30"];
m14_4 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="RomanianFormatter.cs", label="Assert.True(expectedResult.Equals(result))", span="33-33"];
m14_5 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", span="17-17"];
m14_69 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="RomanianFormatter.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m14_118 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", span="294-294"];
m14_119 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="RomanianFormatter.cs", label="var expectedResult = new[] { new BadFormatConversionError(new NameInfo('''', ''colors'')) }", span="297-297"];
m14_120 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithEnum(),\r\n                new[] { ''--colors'', ''Yellow'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="300-304"];
m14_121 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="RomanianFormatter.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="307-307"];
m14_122 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", span="294-294"];
m14_314 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", span="758-758"];
m14_315 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithFSharpOption(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="763-767"];
m14_316 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="RomanianFormatter.cs", label="expectedValue.ShouldBeEquivalentTo(result.Value.FileName.Value)", span="770-770"];
m14_317 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="RomanianFormatter.cs", label="expectedSome.ShouldBeEquivalentTo(FSharpOption<string>.get_IsSome(result.Value.FileName))", span="771-771"];
m14_318 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", span="758-758"];
m14_338 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent.FakeOptionsWithScalarValueAndSequenceStringAdjacent()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent.FakeOptionsWithScalarValueAndSequenceStringAdjacent()", span="6-6"];
m14_99 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue()", span="6-6"];
m14_151 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", span="384-384"];
m14_152 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndSeparator(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="389-393"];
m14_153 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="RomanianFormatter.cs", label="expected.ShouldBeEquivalentTo(result.Value.LongSequence)", span="396-396"];
m14_154 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", span="384-384"];
m14_10 [cluster="CommandLine.ParserResult<T>.Equals(CommandLine.ParserResult<T>)", file="RomanianFormatter.cs", label="Entry CommandLine.ParserResult<T>.Equals(CommandLine.ParserResult<T>)", span="87-87"];
m14_172 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="RomanianFormatter.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="33-33"];
m14_78 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="RomanianFormatter.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="316-316"];
m14_8 [cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="RomanianFormatter.cs", label="Entry CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="100-100"];
m14_197 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSets.FakeOptionsWithSets()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSets.FakeOptionsWithSets()", span="4-4"];
m14_270 [cluster="string.Equals(string)", file="RomanianFormatter.cs", label="Entry string.Equals(string)", span="0-0"];
m14_290 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="694-694"];
m14_291 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(NameInfo.EmptyName) }", span="697-697"];
m14_292 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceMinMaxEqual(),\r\n                new[] { ''one'', ''two'', ''this-is-too-much'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="700-704"];
m14_293 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="707-707"];
m14_294 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="694-694"];
m14_39 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequence.FakeOptionsWithSequence()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequence.FakeOptionsWithSequence()", span="6-6"];
m14_266 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", span="635-635"];
m14_267 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="640-644"];
m14_268 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="RomanianFormatter.cs", label="Assert.True(expected.Equals(result.Value.StringValue))", span="647-647"];
m14_269 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", span="635-635"];
m14_126 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", span="313-313"];
m14_127 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="RomanianFormatter.cs", label="var expectedResult = new[] { new BadFormatConversionError(new NameInfo('''', ''colors'')) }", span="316-316"];
m14_128 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithEnum(),\r\n                new[] { ''--colors'', ''RED'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="319-323"];
m14_129 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="RomanianFormatter.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="326-326"];
m14_130 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", span="313-313"];
m14_215 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", span="518-518"];
m14_216 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="RomanianFormatter.cs", label="var expectedResult = new[]\r\n            {\r\n                new MissingRequiredOptionError(new NameInfo('''', ''ftpurl'')),\r\n                new MissingRequiredOptionError(new NameInfo('''', ''weburl''))\r\n            }", span="520-524"];
m14_217 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequiredAndSet(),\r\n                new[] {''''},\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="526-530"];
m14_218 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="RomanianFormatter.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="533-533"];
m14_219 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", span="518-518"];
m14_203 [cluster="CommandLine.Tests.Fakes.FakeOptionWithRequiredAndSet.FakeOptionWithRequiredAndSet()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionWithRequiredAndSet.FakeOptionWithRequiredAndSet()", span="4-4"];
m14_241 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", span="576-576"];
m14_242 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="RomanianFormatter.cs", label="var expectedResult = new[] { new UnknownOptionError(''xyz'') }", span="579-579"];
m14_243 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''--stringvalue'', ''abc'', ''--xyz'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="582-586"];
m14_244 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="RomanianFormatter.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="589-589"];
m14_245 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", span="576-576"];
m14_83 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", span="213-213"];
m14_84 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(new NameInfo(''s'', ''string-seq'')) }", span="216-216"];
m14_85 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMaxConstraint(),\r\n                new[] { ''--string-seq=one'', ''two'', ''three'', ''this-is-too-much'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="219-223"];
m14_86 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="226-226"];
m14_87 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", span="213-213"];
m14_143 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", span="362-362"];
m14_144 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceWithoutRange(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="367-371"];
m14_145 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="RomanianFormatter.cs", label="expected.ShouldBeEquivalentTo(result.Value.LongSequence)", span="374-374"];
m14_146 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", span="362-362"];
m14_159 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", span="406-406"];
m14_160 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndSeparator(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="411-415"];
m14_161 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="RomanianFormatter.cs", label="expected.ShouldBeEquivalentTo(result.Value.StringSequence)", span="418-418"];
m14_162 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", span="406-406"];
m14_224 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="538-538"];
m14_225 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="RomanianFormatter.cs", label="var expectedResult = new[] { new MissingRequiredOptionError(new NameInfo('''', ''str'')) }", span="541-541"];
m14_226 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequired(),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="544-548"];
m14_227 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="RomanianFormatter.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="551-551"];
m14_228 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="538-538"];
m14_35 [cluster="Unk.SequenceEqual", file="RomanianFormatter.cs", label="Entry Unk.SequenceEqual", span=""];
m14_23 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", span="65-65"];
m14_24 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithDouble(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="70-74"];
m14_25 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="RomanianFormatter.cs", label="Assert.Equal(expected, result.Value.DoubleValue)", span="77-77"];
m14_26 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", span="65-65"];
m14_68 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="RomanianFormatter.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="261-261"];
m14_109 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", span="275-275"];
m14_110 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="RomanianFormatter.cs", label="var expectedResult = new[] { new BadFormatConversionError(new NameInfo('''', ''colors'')) }", span="278-278"];
m14_111 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithEnum(),\r\n                new[] { ''--colors'', ''3'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="281-285"];
m14_112 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="RomanianFormatter.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="288-288"];
m14_113 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", span="275-275"];
m14_220 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="RomanianFormatter.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="283-283"];
m14_207 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", span="499-499"];
m14_208 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="RomanianFormatter.cs", label="var expectedResult = new FakeOptionWithRequiredAndSet {\r\n                FtpUrl = ''str1'',\r\n                WebUrl = ''str2''\r\n            }", span="501-504"];
m14_209 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequiredAndSet(),\r\n                new[] { ''--ftpurl'', ''str1'', ''--weburl'', ''str2'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="506-510"];
m14_210 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="RomanianFormatter.cs", label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="513-513"];
m14_211 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", span="499-499"];
m14_193 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="RomanianFormatter.cs", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="294-294"];
m14_331 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", span="797-797"];
m14_332 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithScalarValueAndSequenceStringAdjacent(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="802-806"];
m14_333 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", file="RomanianFormatter.cs", label="expected.ShouldBeEquivalentTo(result.Value)", span="809-809"];
m14_334 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", span="797-797"];
m14_6 [cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6"];
m14_323 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithFSharpOption.FakeOptionsWithFSharpOption()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithFSharpOption.FakeOptionsWithFSharpOption()", span="6-6"];
m14_274 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", span="653-653"];
m14_275 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="RomanianFormatter.cs", label="var expectedResult = new[] { new MissingRequiredOptionError(NameInfo.EmptyName) }", span="656-656"];
m14_276 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithRequiredValue(),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="659-663"];
m14_277 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="RomanianFormatter.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="666-666"];
m14_278 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", span="653-653"];
m14_187 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="RomanianFormatter.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m14_198 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", span="479-479"];
m14_199 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="RomanianFormatter.cs", label="var expectedResult = new FakeOptionWithRequiredAndSet {\r\n                FtpUrl = ''str1'',\r\n                WebUrl = null\r\n            }", span="481-484"];
m14_200 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequiredAndSet(),\r\n                new[] { ''--ftpurl'', ''str1''},\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="486-490"];
m14_201 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="RomanianFormatter.cs", label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="493-493"];
m14_202 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", span="479-479"];
m14_55 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", span="156-156"];
m14_56 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMaxConstraint(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="161-165"];
m14_57 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="RomanianFormatter.cs", label="Assert.True(expected.SequenceEqual(result.Value.StringSequence))", span="168-168"];
m14_58 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", span="156-156"];
m14_31 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", span="89-89"];
m14_32 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequence(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="94-98"];
m14_33 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="RomanianFormatter.cs", label="Assert.True(expected.SequenceEqual(result.Value.IntSequence))", span="101-101"];
m14_34 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", span="89-89"];
m14_47 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", span="134-134"];
m14_48 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMinConstraint(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="139-143"];
m14_49 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="RomanianFormatter.cs", label="Assert.True(expected.SequenceEqual(result.Value.StringSequence))", span="146-146"];
m14_50 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", span="134-134"];
m14_91 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="232-232"];
m14_92 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(NameInfo.EmptyName) }", span="235-235"];
m14_93 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue(),\r\n                new[] { ''one'', ''two'', ''three'', ''this-is-too-much'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="238-242"];
m14_94 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="245-245"];
m14_95 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="232-232"];
m14_114 [cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", file="RomanianFormatter.cs", label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="305-305"];
m14_158 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndSeparator.FakeOptionsWithSequenceAndSeparator()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndSeparator.FakeOptionsWithSequenceAndSeparator()", span="6-6"];
m14_282 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue.FakeOptionsWithRequiredValue()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue.FakeOptionsWithRequiredValue()", span="4-4"];
m14_335 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="803-803"];
m14_13 [cluster="lambda expression", file="RomanianFormatter.cs", label=fakeOptions, span="27-27"];
m14_12 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="27-27"];
m14_14 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="27-27"];
m14_20 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="48-48"];
m14_21 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptions()", span="48-48"];
m14_22 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="48-48"];
m14_27 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="71-71"];
m14_28 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptionsWithDouble()", span="71-71"];
m14_29 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="71-71"];
m14_36 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="95-95"];
m14_37 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptionsWithSequence()", span="95-95"];
m14_38 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="95-95"];
m14_44 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="117-117"];
m14_45 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptions()", span="117-117"];
m14_46 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="117-117"];
m14_51 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="140-140"];
m14_52 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptionsWithSequenceAndOnlyMinConstraint()", span="140-140"];
m14_53 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="140-140"];
m14_59 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="162-162"];
m14_60 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptionsWithSequenceAndOnlyMaxConstraint()", span="162-162"];
m14_61 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="162-162"];
m14_70 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="181-181"];
m14_71 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptionsWithSequenceAndOnlyMinConstraint()", span="181-181"];
m14_72 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="181-181"];
m14_79 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="200-200"];
m14_80 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptionsWithSequenceAndOnlyMinConstraintAsValue()", span="200-200"];
m14_81 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="200-200"];
m14_88 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="220-220"];
m14_89 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptionsWithSequenceAndOnlyMaxConstraint()", span="220-220"];
m14_90 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="220-220"];
m14_96 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="239-239"];
m14_97 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue()", span="239-239"];
m14_98 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="239-239"];
m14_105 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="263-263"];
m14_106 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptionsWithEnum()", span="263-263"];
m14_107 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="263-263"];
m14_115 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="282-282"];
m14_116 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptionsWithEnum()", span="282-282"];
m14_117 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="282-282"];
m14_123 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="301-301"];
m14_124 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptionsWithEnum()", span="301-301"];
m14_125 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="301-301"];
m14_131 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="320-320"];
m14_132 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptionsWithEnum()", span="320-320"];
m14_133 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="320-320"];
m14_140 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="345-345"];
m14_141 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptionsWithValues()", span="345-345"];
m14_142 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="345-345"];
m14_147 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="368-368"];
m14_148 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptionsWithSequenceWithoutRange()", span="368-368"];
m14_149 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="368-368"];
m14_155 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="390-390"];
m14_156 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptionsWithSequenceAndSeparator()", span="390-390"];
m14_157 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="390-390"];
m14_163 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="412-412"];
m14_164 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptionsWithSequenceAndSeparator()", span="412-412"];
m14_165 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="412-412"];
m14_173 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="441-441"];
m14_176 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="442-444"];
m14_174 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptionsWithValues()", span="441-441"];
m14_175 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="441-441"];
m14_177 [cluster="lambda expression", file="RomanianFormatter.cs", label="Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)))", span="443-444"];
m14_181 [cluster="lambda expression", file="RomanianFormatter.cs", label="Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))", span="444-444"];
m14_185 [cluster="lambda expression", file="RomanianFormatter.cs", label="NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)", span="444-444"];
m14_178 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="442-444"];
m14_180 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="444-444"];
m14_182 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="444-444"];
m14_184 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="444-444"];
m14_186 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="444-444"];
m14_194 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="467-467"];
m14_195 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptionsWithSets()", span="467-467"];
m14_196 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="467-467"];
m14_204 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="487-487"];
m14_205 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptionWithRequiredAndSet()", span="487-487"];
m14_206 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="487-487"];
m14_212 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="507-507"];
m14_213 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptionWithRequiredAndSet()", span="507-507"];
m14_214 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="507-507"];
m14_221 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="527-527"];
m14_222 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptionWithRequiredAndSet()", span="527-527"];
m14_223 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="527-527"];
m14_229 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="545-545"];
m14_230 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptionWithRequired()", span="545-545"];
m14_231 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="545-545"];
m14_238 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="564-564"];
m14_239 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptions()", span="564-564"];
m14_240 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="564-564"];
m14_247 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="583-583"];
m14_248 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptions()", span="583-583"];
m14_249 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="583-583"];
m14_255 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="602-602"];
m14_256 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptions()", span="602-602"];
m14_257 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="602-602"];
m14_263 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="621-621"];
m14_264 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptions()", span="621-621"];
m14_265 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="621-621"];
m14_271 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="641-641"];
m14_272 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptions()", span="641-641"];
m14_273 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="641-641"];
m14_279 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="660-660"];
m14_280 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptionsWithRequiredValue()", span="660-660"];
m14_281 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="660-660"];
m14_287 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="682-682"];
m14_288 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptions()", span="682-682"];
m14_289 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="682-682"];
m14_295 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="701-701"];
m14_296 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptionsWithSequenceMinMaxEqual()", span="701-701"];
m14_297 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="701-701"];
m14_303 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="723-723"];
m14_304 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptionsWithNullables()", span="723-723"];
m14_305 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="723-723"];
m14_311 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="745-745"];
m14_312 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptionsWithNullables()", span="745-745"];
m14_313 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="745-745"];
m14_320 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="764-764"];
m14_321 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptionsWithFSharpOption()", span="764-764"];
m14_322 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="764-764"];
m14_328 [cluster="lambda expression", file="RomanianFormatter.cs", label="Entry lambda expression", span="784-784"];
m14_329 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptionsWithRequiredValue()", span="784-784"];
m14_330 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="784-784"];
m14_336 [cluster="lambda expression", file="RomanianFormatter.cs", label="new FakeOptionsWithScalarValueAndSequenceStringAdjacent()", span="803-803"];
m14_337 [cluster="lambda expression", file="RomanianFormatter.cs", label="Exit lambda expression", span="803-803"];
m14_306 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithNullables.FakeOptionsWithNullables()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithNullables.FakeOptionsWithNullables()", span="4-4"];
m14_324 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", span="778-778"];
m14_325 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithRequiredValue(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="783-787"];
m14_326 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", file="RomanianFormatter.cs", label="expected.ShouldBeEquivalentTo(result.Value)", span="790-790"];
m14_327 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", span="778-778"];
m14_63 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", span="174-174"];
m14_64 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="RomanianFormatter.cs", label="var expectedResult = new[] { new MissingValueOptionError(new NameInfo(''s'', ''string-seq'')) }", span="177-177"];
m14_65 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMinConstraint(),\r\n                new[] { ''-s'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="180-184"];
m14_66 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="RomanianFormatter.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="187-187"];
m14_67 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", span="174-174"];
m14_100 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", span="257-257"];
m14_101 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithEnum(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="262-266"];
m14_102 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="RomanianFormatter.cs", label="expected.ShouldBeEquivalentTo(result.Value.Colors)", span="269-269"];
m14_103 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", span="257-257"];
m14_298 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceMinMaxEqual.FakeOptionsWithSequenceMinMaxEqual()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceMinMaxEqual.FakeOptionsWithSequenceMinMaxEqual()", span="9-9"];
m14_40 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", span="111-111"];
m14_41 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="116-120"];
m14_42 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="RomanianFormatter.cs", label="Assert.True(expected.SequenceEqual(result.Value.IntSequence))", span="123-123"];
m14_43 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", span="111-111"];
m14_232 [cluster="CommandLine.Tests.Fakes.FakeOptionWithRequired.FakeOptionWithRequired()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionWithRequired.FakeOptionWithRequired()", span="4-4"];
m14_108 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithEnum.FakeOptionsWithEnum()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithEnum.FakeOptionsWithEnum()", span="11-11"];
m14_246 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="RomanianFormatter.cs", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="272-272"];
m14_319 [cluster="Unk.get_IsSome", file="RomanianFormatter.cs", label="Entry Unk.get_IsSome", span=""];
m14_7 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="RomanianFormatter.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="338-338"];
m14_104 [cluster="Unk.ShouldBeEquivalentTo", file="RomanianFormatter.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m14_183 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="RomanianFormatter.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11"];
m14_11 [cluster="Unk.True", file="RomanianFormatter.cs", label="Entry Unk.True", span=""];
m14_30 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithDouble.FakeOptionsWithDouble()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithDouble.FakeOptionsWithDouble()", span="4-4"];
m14_15 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", span="42-42"];
m14_16 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="47-51"];
m14_17 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="RomanianFormatter.cs", label="Assert.Equal(expected, result.Value.LongValue)", span="54-54"];
m14_18 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", span="42-42"];
m14_62 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraint.FakeOptionsWithSequenceAndOnlyMaxConstraint()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraint.FakeOptionsWithSequenceAndOnlyMaxConstraint()", span="6-6"];
m14_134 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="332-332"];
m14_135 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="RomanianFormatter.cs", label="var expectedResult = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = string.Empty,\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''a'', ''b'', ''c'' },\r\n                    IntValue = 20\r\n                }", span="335-341"];
m14_136 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithValues(),\r\n                new[] { ''10'', ''a'', ''b'', ''c'', ''20'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="344-348"];
m14_137 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="RomanianFormatter.cs", label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="351-351"];
m14_138 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="332-332"];
m14_233 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", span="557-557"];
m14_234 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(new NameInfo(''i'', '''')) }", span="560-560"];
m14_235 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new [] { ''-i'', ''10'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="563-567"];
m14_236 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="570-570"];
m14_237 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", span="557-557"];
m14_283 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", span="676-676"];
m14_284 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="681-685"];
m14_285 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="RomanianFormatter.cs", label="expected.ShouldBeEquivalentTo(result.Value.StringValue)", span="688-688"];
m14_286 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", span="676-676"];
m14_307 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", span="739-739"];
m14_308 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithNullables(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="744-748"];
m14_309 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", file="RomanianFormatter.cs", label="expected.ShouldBeEquivalentTo(result.Value.NullableLong)", span="751-751"];
m14_310 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", span="739-739"];
m14_188 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="456-456"];
m14_189 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="RomanianFormatter.cs", label="var expectedResult = new[]\r\n                {\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''weburl'')),\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''ftpurl''))\r\n                }", span="459-463"];
m14_190 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSets(),\r\n                new[] { ''--weburl'', ''http://mywebsite.org/'', ''--ftpurl'', ''fpt://ftpsite.org/'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="466-470"];
m14_191 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="RomanianFormatter.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="473-473"];
m14_192 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="456-456"];
m14_166 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="427-427"];
m14_167 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="RomanianFormatter.cs", label="var expectedResult = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = ''str1'',\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''-a'', ''--bee'', ''-c'' },\r\n                    IntValue = 20\r\n                }", span="430-436"];
m14_168 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="RomanianFormatter.cs", label="var arguments = new[] { ''--stringvalue'', ''str1'', ''--'', ''10'', ''-a'', ''--bee'', ''-c'', ''20'' }", span="437-437"];
m14_170 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="RomanianFormatter.cs", label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="450-450"];
m14_169 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="RomanianFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithValues(),\r\n                (a, optionSpecs) =>\r\n                    Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="440-447"];
m14_171 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="RomanianFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="427-427"];
m14_54 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraint.FakeOptionsWithSequenceAndOnlyMinConstraint()", file="RomanianFormatter.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraint.FakeOptionsWithSequenceAndOnlyMinConstraint()", span="6-6"];
m14_179 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="RomanianFormatter.cs", label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", span="31-31"];
m14_339 [file="RomanianFormatter.cs", label=fakeOptions, span=""];
m14_340 [file="RomanianFormatter.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m15_0 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", file="RussianFormatter.cs", label="Entry Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", span="7-7"];
m15_1 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", file="RussianFormatter.cs", label="var mod100 = number%100", span="9-9"];
m15_3 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", file="RussianFormatter.cs", label="var mod10 = number%10", span="12-12"];
m15_5 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", file="RussianFormatter.cs", label="return resourceKey + SingularPostfix;", span="15-15"];
m15_7 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", file="RussianFormatter.cs", label="return resourceKey + PaucalPostfix;", span="18-18"];
m15_8 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", file="RussianFormatter.cs", label="return resourceKey;", span="21-21"];
m15_2 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", file="RussianFormatter.cs", label="mod100/10 != 1", span="10-10"];
m15_4 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", file="RussianFormatter.cs", label="mod10 == 1", span="14-14"];
m15_6 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", file="RussianFormatter.cs", label="mod10 > 1 && mod10 < 5", span="17-17"];
m15_9 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", file="RussianFormatter.cs", label="Exit Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", span="7-7"];
m17_5 [cluster="string.ToQuantity(int, Humanizer.ShowQuantityAs)", file="ToQuantityTests.cs", label="Entry string.ToQuantity(int, Humanizer.ShowQuantityAs)", span="25-25"];
m17_0 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityTests()", file="ToQuantityTests.cs", label="Entry Humanizer.Tests.ToQuantityTests.ToQuantityTests()", span="7-7"];
m17_1 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityTests()", file="ToQuantityTests.cs", label="Exit Humanizer.Tests.ToQuantityTests.ToQuantityTests()", span="7-7"];
m17_2 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", file="ToQuantityTests.cs", label="Entry Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", span="24-24"];
m17_3 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", file="ToQuantityTests.cs", label="Assert.Equal(expected, word.ToQuantity(quatity))", span="26-26"];
m17_4 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", file="ToQuantityTests.cs", label="Exit Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", span="24-24"];
m17_6 [cluster="Unk.Equal", file="ToQuantityTests.cs", label="Entry Unk.Equal", span=""];
m17_13 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWords(string, int, string)", file="ToQuantityTests.cs", label="Entry Humanizer.Tests.ToQuantityTests.ToQuantityWords(string, int, string)", span="77-77"];
m17_14 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWords(string, int, string)", file="ToQuantityTests.cs", label="Assert.Equal(expected, word.ToQuantity(quatity, ShowQuantityAs.Words))", span="79-79"];
m17_15 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWords(string, int, string)", file="ToQuantityTests.cs", label="Exit Humanizer.Tests.ToQuantityTests.ToQuantityWords(string, int, string)", span="77-77"];
m17_7 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", file="ToQuantityTests.cs", label="Entry Humanizer.Tests.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", span="41-41"];
m17_8 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", file="ToQuantityTests.cs", label="Assert.Equal(expected, word.ToQuantity(quatity, ShowQuantityAs.None))", span="43-43"];
m17_9 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", file="ToQuantityTests.cs", label="Exit Humanizer.Tests.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", span="41-41"];
m17_10 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityNumeric(string, int, string)", file="ToQuantityTests.cs", label="Entry Humanizer.Tests.ToQuantityTests.ToQuantityNumeric(string, int, string)", span="58-58"];
m17_11 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityNumeric(string, int, string)", file="ToQuantityTests.cs", label="Assert.Equal(expected, word.ToQuantity(quatity, ShowQuantityAs.Numeric))", span="61-61"];
m17_12 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityNumeric(string, int, string)", file="ToQuantityTests.cs", label="Exit Humanizer.Tests.ToQuantityTests.ToQuantityNumeric(string, int, string)", span="58-58"];
n0 -> n2  [color=darkseagreen4, key=1, label=string, style=dashed];
n0 -> n3  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n4  [color=darkseagreen4, key=1, label=string, style=dashed];
n0 -> n5  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_108 -> m0_108  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_60 -> m0_64  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_63 -> m0_67  [color=darkseagreen4, key=1, label=other, style=dashed];
m0_67 -> m0_191  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_84 -> m0_196  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_120 -> m0_120  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_126 -> m0_126  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_123 -> m0_123  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_28 -> m0_188  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_81 -> m0_195  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_81 -> m0_81  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_138 -> m0_142  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_138 -> m0_143  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_149 -> m0_152  [color=darkseagreen4, key=1, label=numberPart, style=dashed];
m0_150 -> m0_154  [color=darkseagreen4, key=1, label=sizePart, style=dashed];
m0_150 -> m0_156  [color=darkseagreen4, key=1, label=sizePart, style=dashed];
m0_140 -> m0_146  [color=darkseagreen4, key=1, label=found, style=dashed];
m0_141 -> m0_143  [color=darkseagreen4, key=1, label=num, style=dashed];
m0_141 -> m0_145  [color=darkseagreen4, key=1, label=num, style=dashed];
m0_145 -> m0_145  [color=darkseagreen4, key=1, label=num, style=dashed];
m0_152 -> m0_157  [color=darkseagreen4, key=1, label=number, style=dashed];
m0_168 -> m0_170  [color=darkseagreen4, key=1, label="out Humanizer.Bytes.ByteSize", style=dashed];
m0_31 -> m0_55  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_31 -> m0_58  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_31 -> m0_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_31 -> m0_46  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_31 -> m0_48  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_33 -> m0_55  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_33 -> m0_58  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_33 -> m0_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_33 -> m0_46  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_33 -> m0_48  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_34 -> m0_55  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_34 -> m0_36  [color=darkseagreen4, key=1, label=has, style=dashed];
m0_34 -> m0_38  [color=darkseagreen4, key=1, label=has, style=dashed];
m0_34 -> m0_40  [color=darkseagreen4, key=1, label=has, style=dashed];
m0_34 -> m0_42  [color=darkseagreen4, key=1, label=has, style=dashed];
m0_35 -> m0_58  [color=darkseagreen4, key=1, label=double, style=dashed];
m0_35 -> m0_37  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_35 -> m0_39  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_35 -> m0_41  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_35 -> m0_43  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_35 -> m0_45  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_35 -> m0_47  [color=darkseagreen4, key=1, label=output, style=dashed];
m0_48 -> m0_189  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_37 -> m0_189  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_39 -> m0_189  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_41 -> m0_189  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_43 -> m0_189  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_45 -> m0_189  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_47 -> m0_189  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_70 -> m0_192  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_70 -> m0_70  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_102 -> m0_197  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_102 -> m0_102  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_111 -> m0_111  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_180 -> m0_182  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_77 -> m0_194  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_77 -> m0_77  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_129 -> m0_129  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_73 -> m0_193  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_114 -> m0_114  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_132 -> m0_132  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_117 -> m0_117  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_105 -> m0_105  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_187 -> m0_28  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_187 -> m0_37  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_187 -> m0_39  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_187 -> m0_41  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_187 -> m0_43  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_187 -> m0_45  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_187 -> m0_47  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_187 -> m0_48  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_187 -> m0_67  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_187 -> m0_70  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_187 -> m0_73  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_187 -> m0_77  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_187 -> m0_81  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_187 -> m0_84  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_187 -> m0_87  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_187 -> m0_90  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_187 -> m0_93  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_187 -> m0_96  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_187 -> m0_99  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_187 -> m0_102  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m0_188 -> m0_29  [color=darkseagreen4, key=1, label="ref Humanizer.Bytes.ByteSize", style=dashed];
m0_189 -> m0_49  [color=darkseagreen4, key=1, label="ref Humanizer.Bytes.ByteSize", style=dashed];
m0_190 -> m0_55  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_190 -> m0_58  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_191 -> m0_68  [color=darkseagreen4, key=1, label="ref Humanizer.Bytes.ByteSize", style=dashed];
m0_192 -> m0_71  [color=darkseagreen4, key=1, label="ref Humanizer.Bytes.ByteSize", style=dashed];
m0_193 -> m0_74  [color=darkseagreen4, key=1, label="ref Humanizer.Bytes.ByteSize", style=dashed];
m0_194 -> m0_78  [color=darkseagreen4, key=1, label="ref Humanizer.Bytes.ByteSize", style=dashed];
m0_195 -> m0_82  [color=darkseagreen4, key=1, label="ref Humanizer.Bytes.ByteSize", style=dashed];
m0_196 -> m0_85  [color=darkseagreen4, key=1, label="ref Humanizer.Bytes.ByteSize", style=dashed];
m0_197 -> m0_103  [color=darkseagreen4, key=1, label="ref Humanizer.Bytes.ByteSize", style=dashed];
m3_8 -> m3_10  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_19 -> m3_21  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_133 -> m3_131  [color=darkseagreen4, key=1, label="Humanizer.Tests.PluralTestSource", style=dashed];
m10_0 -> m10_9  [color=green, key=1, label=bool, style=dashed];
m10_0 -> m10_11  [color=green, key=1, label="System.DateTime", style=dashed];
m10_4 -> m10_15  [color=green, key=1, label=minute, style=dashed];
m10_4 -> m10_17  [color=green, key=1, label=minute, style=dashed];
m10_4 -> m10_19  [color=green, key=1, label=minute, style=dashed];
m10_4 -> m10_21  [color=green, key=1, label=minute, style=dashed];
m10_8 -> m10_11  [color=green, key=1, label=comparisonBase, style=dashed];
m10_7 -> m10_29  [color=green, key=1, label=month, style=dashed];
m10_14 -> m10_17  [color=green, key=1, label=delta, style=dashed];
m10_14 -> m10_19  [color=green, key=1, label=delta, style=dashed];
m10_14 -> m10_21  [color=green, key=1, label=delta, style=dashed];
m10_14 -> m10_23  [color=green, key=1, label=delta, style=dashed];
m10_14 -> m10_25  [color=green, key=1, label=delta, style=dashed];
m10_14 -> m10_16  [color=green, key=1, label=ts, style=dashed];
m10_14 -> m10_20  [color=green, key=1, label=ts, style=dashed];
m10_14 -> m10_24  [color=green, key=1, label=ts, style=dashed];
m10_14 -> m10_27  [color=green, key=1, label=delta, style=dashed];
m10_14 -> m10_28  [color=green, key=1, label=ts, style=dashed];
m10_14 -> m10_29  [color=green, key=1, label=delta, style=dashed];
m10_5 -> m10_23  [color=green, key=1, label=hour, style=dashed];
m10_5 -> m10_25  [color=green, key=1, label=hour, style=dashed];
m10_6 -> m10_27  [color=green, key=1, label=day, style=dashed];
m10_16 -> m10_16  [color=green, key=1, label=ts, style=dashed];
m10_16 -> m10_20  [color=green, key=1, label=ts, style=dashed];
m10_16 -> m10_24  [color=green, key=1, label=ts, style=dashed];
m10_16 -> m10_28  [color=green, key=1, label=ts, style=dashed];
m10_20 -> m10_20  [color=green, key=1, label=ts, style=dashed];
m10_20 -> m10_24  [color=green, key=1, label=ts, style=dashed];
m10_20 -> m10_28  [color=green, key=1, label=ts, style=dashed];
m10_24 -> m10_24  [color=green, key=1, label=ts, style=dashed];
m10_24 -> m10_28  [color=green, key=1, label=ts, style=dashed];
m10_28 -> m10_28  [color=darkseagreen4, key=1, label=ts, style=dashed];
m14_74 -> m14_76  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m14_75 -> m14_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_259 -> m14_261  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m14_260 -> m14_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_251 -> m14_253  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m14_252 -> m14_255  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_299 -> m14_301  [color=darkseagreen4, key=1, label="int?", style=dashed];
m14_300 -> m14_303  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_1 -> m14_13  [color=darkseagreen4, key=1, label=fakeOptions, style=dashed];
m14_2 -> m14_4  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m14_3 -> m14_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_119 -> m14_121  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m14_120 -> m14_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_314 -> m14_316  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_314 -> m14_317  [color=darkseagreen4, key=1, label=bool, style=dashed];
m14_315 -> m14_320  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_315 -> m14_317  [color=darkseagreen4, key=1, label=result, style=dashed];
m14_151 -> m14_153  [color=darkseagreen4, key=1, label="long[]", style=dashed];
m14_152 -> m14_155  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_291 -> m14_293  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m14_292 -> m14_295  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_266 -> m14_268  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_267 -> m14_271  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_127 -> m14_129  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m14_128 -> m14_131  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_216 -> m14_218  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m14_217 -> m14_221  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_242 -> m14_244  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m14_243 -> m14_247  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_84 -> m14_86  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m14_85 -> m14_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_143 -> m14_145  [color=darkseagreen4, key=1, label="long[]", style=dashed];
m14_144 -> m14_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_159 -> m14_161  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m14_160 -> m14_163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_225 -> m14_227  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m14_226 -> m14_229  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_23 -> m14_25  [color=darkseagreen4, key=1, label=double, style=dashed];
m14_24 -> m14_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_110 -> m14_112  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m14_111 -> m14_115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_208 -> m14_210  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m14_209 -> m14_212  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_331 -> m14_333  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent", style=dashed];
m14_332 -> m14_335  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_275 -> m14_277  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m14_276 -> m14_279  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_199 -> m14_201  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m14_200 -> m14_204  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_55 -> m14_57  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m14_56 -> m14_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_31 -> m14_33  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m14_32 -> m14_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_47 -> m14_49  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m14_48 -> m14_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_92 -> m14_94  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m14_93 -> m14_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_176 -> m14_181  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m14_176 -> m14_185  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m14_177 -> m14_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_181 -> m14_184  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_324 -> m14_326  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue", style=dashed];
m14_325 -> m14_328  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_64 -> m14_66  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m14_65 -> m14_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_100 -> m14_102  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Colors", style=dashed];
m14_101 -> m14_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_102 -> m14_102  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Colors", style=dashed];
m14_40 -> m14_42  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m14_41 -> m14_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_15 -> m14_17  [color=darkseagreen4, key=1, label=long, style=dashed];
m14_16 -> m14_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_135 -> m14_137  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m14_136 -> m14_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_234 -> m14_236  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m14_235 -> m14_238  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_283 -> m14_285  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_284 -> m14_287  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_307 -> m14_309  [color=darkseagreen4, key=1, label="long?", style=dashed];
m14_308 -> m14_311  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_189 -> m14_191  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m14_190 -> m14_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_167 -> m14_170  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m14_169 -> m14_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_169 -> m14_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_339 -> m14_13  [color=darkseagreen4, key=1, label=fakeOptions, style=dashed];
m14_340 -> m14_181  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m14_340 -> m14_185  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m15_0 -> m15_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_0 -> m15_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_0 -> m15_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_3 -> m15_6  [color=darkseagreen4, key=1, label=mod10, style=dashed];
}
