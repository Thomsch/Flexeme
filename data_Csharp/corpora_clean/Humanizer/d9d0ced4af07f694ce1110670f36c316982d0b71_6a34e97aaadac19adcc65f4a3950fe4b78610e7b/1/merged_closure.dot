digraph  {
n0 [cluster="Humanizer.Localisation.IFormatter.DateHumanize_Now()", label="Entry Humanizer.Localisation.IFormatter.DateHumanize_Now()", span="9-9"];
n1 [cluster="Humanizer.Localisation.IFormatter.DateHumanize_Now()", label="Exit Humanizer.Localisation.IFormatter.DateHumanize_Now()", span="9-9"];
n2 [cluster="Humanizer.Localisation.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", label="Entry Humanizer.Localisation.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="10-10"];
n3 [cluster="Humanizer.Localisation.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", label="Exit Humanizer.Localisation.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="10-10"];
n4 [cluster="Humanizer.Localisation.IFormatter.TimeSpanHumanize_Zero()", label="Entry Humanizer.Localisation.IFormatter.TimeSpanHumanize_Zero()", span="12-12"];
n5 [cluster="Humanizer.Localisation.IFormatter.TimeSpanHumanize_Zero()", label="Exit Humanizer.Localisation.IFormatter.TimeSpanHumanize_Zero()", span="12-12"];
n6 [cluster="Humanizer.Localisation.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", label="Entry Humanizer.Localisation.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", span="13-13"];
n7 [cluster="Humanizer.Localisation.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", label="Exit Humanizer.Localisation.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", span="13-13"];
d30 [cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", color=green, community=0, label="Assert.Equal(expectedOutput, input.Pascalize())", prediction=0, span="106-106"];
d29 [cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", label="Entry Humanizer.Tests.InflectorTests.Pascalize(string, string)", span="104-104"];
d31 [cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", label="Exit Humanizer.Tests.InflectorTests.Pascalize(string, string)", span="104-104"];
d32 [cluster="string.Pascalize()", label="Entry string.Pascalize()", span="95-95"];
d4 [cluster="Unk.Equal", label="Entry Unk.Equal", span=""];
d1 [cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)", label="Assert.Equal(plural, singular.Pluralize())", span="37-37"];
d6 [cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", label="Assert.Equal(plural, plural.Pluralize(false))", span="44-44"];
d7 [cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", label="Assert.Equal(plural, singular.Pluralize(false))", span="45-45"];
d10 [cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", label="Assert.Equal(singular, plural.Singularize())", span="52-52"];
d14 [cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", label="Assert.Equal(singular, singular.Singularize(false))", span="59-59"];
d15 [cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", label="Assert.Equal(singular, plural.Singularize(false))", span="60-60"];
d18 [cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", label="Assert.Equal(expectedOuput, input.Titleize())", span="73-73"];
d22 [cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", label="Assert.Equal(input.Dasherize(), expectedOutput)", span="83-83"];
d26 [cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)", label="Assert.Equal(input.Hyphenate(), expectedOutput)", span="93-93"];
d34 [cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)", label="Assert.Equal(expectedOutput, input.Camelize())", span="120-120"];
d38 [cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)", label="Assert.Equal(expectedOuput, input.Underscore())", span="133-133"];
d0 [cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)", label="Entry Humanizer.Tests.InflectorTests.Pluralize(string, string)", span="35-35"];
d2 [cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)", label="Exit Humanizer.Tests.InflectorTests.Pluralize(string, string)", span="35-35"];
d3 [cluster="string.Pluralize(bool)", label="Entry string.Pluralize(bool)", span="52-52"];
d5 [cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", label="Entry Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", span="42-42"];
d8 [cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", label="Exit Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", span="42-42"];
d9 [cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", label="Entry Humanizer.Tests.InflectorTests.Singularize(string, string)", span="50-50"];
d11 [cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", label="Exit Humanizer.Tests.InflectorTests.Singularize(string, string)", span="50-50"];
d12 [cluster="string.Singularize(bool)", label="Entry string.Singularize(bool)", span="75-75"];
d13 [cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", label="Entry Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", span="57-57"];
d16 [cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", label="Exit Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", span="57-57"];
d17 [cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", label="Entry Humanizer.Tests.InflectorTests.Titleize(string, string)", span="71-71"];
d19 [cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", label="Exit Humanizer.Tests.InflectorTests.Titleize(string, string)", span="71-71"];
d20 [cluster="string.Titleize()", label="Entry string.Titleize()", span="85-85"];
d21 [cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", label="Entry Humanizer.Tests.InflectorTests.Dasherize(string, string)", span="81-81"];
d23 [cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", label="Exit Humanizer.Tests.InflectorTests.Dasherize(string, string)", span="81-81"];
d24 [cluster="string.Dasherize()", label="Entry string.Dasherize()", span="128-128"];
d25 [cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)", label="Entry Humanizer.Tests.InflectorTests.Hyphenate(string, string)", span="91-91"];
d27 [cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)", label="Exit Humanizer.Tests.InflectorTests.Hyphenate(string, string)", span="91-91"];
d28 [cluster="string.Hyphenate()", label="Entry string.Hyphenate()", span="138-138"];
d33 [cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)", label="Entry Humanizer.Tests.InflectorTests.Camelize(string, string)", span="118-118"];
d35 [cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)", label="Exit Humanizer.Tests.InflectorTests.Camelize(string, string)", span="118-118"];
d36 [cluster="string.Camelize()", label="Entry string.Camelize()", span="105-105"];
d37 [cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)", label="Entry Humanizer.Tests.InflectorTests.Underscore(string, string)", span="131-131"];
d39 [cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)", label="Exit Humanizer.Tests.InflectorTests.Underscore(string, string)", span="131-131"];
d40 [cluster="string.Underscore()", label="Entry string.Underscore()", span="116-116"];
d5 -> d7  [color=darkseagreen4, key=1, label=string, style=dashed];
d13 -> d15  [color=darkseagreen4, key=1, label=string, style=dashed];
}
