digraph  {
n9 [label="Humanizer.Tests.AmbientCulture", span=""];
n0 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", label="Entry Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", span="10-10"];
n1 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", label="_culture = Thread.CurrentThread.CurrentUICulture", span="12-12"];
n2 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", label="Thread.CurrentThread.CurrentUICulture = culture", span="13-13"];
n3 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", label="Exit Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", span="10-10"];
n4 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(string)", label="Entry Humanizer.Tests.AmbientCulture.AmbientCulture(string)", span="16-16"];
n5 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(string)", label="Exit Humanizer.Tests.AmbientCulture.AmbientCulture(string)", span="16-16"];
n6 [cluster="Humanizer.Tests.AmbientCulture.Dispose()", label="Entry Humanizer.Tests.AmbientCulture.Dispose()", span="21-21"];
n7 [cluster="Humanizer.Tests.AmbientCulture.Dispose()", label="Thread.CurrentThread.CurrentUICulture = _culture", span="23-23"];
n8 [cluster="Humanizer.Tests.AmbientCulture.Dispose()", label="Exit Humanizer.Tests.AmbientCulture.Dispose()", span="21-21"];
d2 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", color=green, community=0, label="0: Thread.CurrentThread.CurrentUICulture = culture", span="13-13"];
m1_18 [cluster="Humanizer.Bytes.ByteSize.FromMegabytes(double)", file="Configurator.cs", label="Entry Humanizer.Bytes.ByteSize.FromMegabytes(double)", span="108-108"];
m1_11 [cluster="Humanizer.ByteSizeExtensions.Kilobytes(double)", file="Configurator.cs", label="Entry Humanizer.ByteSizeExtensions.Kilobytes(double)", span="45-45"];
m1_12 [cluster="Humanizer.ByteSizeExtensions.Kilobytes(double)", file="Configurator.cs", label="return ByteSize.FromKilobytes(input);", span="47-47"];
m1_13 [cluster="Humanizer.ByteSizeExtensions.Kilobytes(double)", file="Configurator.cs", label="Exit Humanizer.ByteSizeExtensions.Kilobytes(double)", span="45-45"];
m1_10 [cluster="Humanizer.Bytes.ByteSize.FromBytes(double)", file="Configurator.cs", label="Entry Humanizer.Bytes.ByteSize.FromBytes(double)", span="98-98"];
m1_26 [cluster="Humanizer.Bytes.ByteSize.FromTerabytes(double)", file="Configurator.cs", label="Entry Humanizer.Bytes.ByteSize.FromTerabytes(double)", span="118-118"];
m1_27 [cluster="Humanizer.ByteSizeExtensions.Humanize(Humanizer.Bytes.ByteSize)", file="Configurator.cs", label="Entry Humanizer.ByteSizeExtensions.Humanize(Humanizer.Bytes.ByteSize)", span="85-85"];
m1_28 [cluster="Humanizer.ByteSizeExtensions.Humanize(Humanizer.Bytes.ByteSize)", file="Configurator.cs", label="return input.ToString();", span="87-87"];
m1_29 [cluster="Humanizer.ByteSizeExtensions.Humanize(Humanizer.Bytes.ByteSize)", file="Configurator.cs", label="Exit Humanizer.ByteSizeExtensions.Humanize(Humanizer.Bytes.ByteSize)", span="85-85"];
m1_4 [cluster="Humanizer.ByteSizeExtensions.Bits(int)", file="Configurator.cs", label="Entry Humanizer.ByteSizeExtensions.Bits(int)", span="25-25"];
m1_5 [cluster="Humanizer.ByteSizeExtensions.Bits(int)", file="Configurator.cs", label="return ByteSize.FromBits(input);", span="27-27"];
m1_6 [cluster="Humanizer.ByteSizeExtensions.Bits(int)", file="Configurator.cs", label="Exit Humanizer.ByteSizeExtensions.Bits(int)", span="25-25"];
m1_3 [cluster="Humanizer.Bytes.ByteSize.FromBits(long)", file="Configurator.cs", label="Entry Humanizer.Bytes.ByteSize.FromBits(long)", span="93-93"];
m1_23 [cluster="Humanizer.ByteSizeExtensions.Terabytes(double)", file="Configurator.cs", label="Entry Humanizer.ByteSizeExtensions.Terabytes(double)", span="75-75"];
m1_24 [cluster="Humanizer.ByteSizeExtensions.Terabytes(double)", file="Configurator.cs", label="return ByteSize.FromTerabytes(input);", span="77-77"];
m1_25 [cluster="Humanizer.ByteSizeExtensions.Terabytes(double)", file="Configurator.cs", label="Exit Humanizer.ByteSizeExtensions.Terabytes(double)", span="75-75"];
m1_22 [cluster="Humanizer.Bytes.ByteSize.FromGigabytes(double)", file="Configurator.cs", label="Entry Humanizer.Bytes.ByteSize.FromGigabytes(double)", span="113-113"];
m1_19 [cluster="Humanizer.ByteSizeExtensions.Gigabytes(double)", file="Configurator.cs", label="Entry Humanizer.ByteSizeExtensions.Gigabytes(double)", span="65-65"];
m1_20 [cluster="Humanizer.ByteSizeExtensions.Gigabytes(double)", file="Configurator.cs", label="return ByteSize.FromGigabytes(input);", span="67-67"];
m1_21 [cluster="Humanizer.ByteSizeExtensions.Gigabytes(double)", file="Configurator.cs", label="Exit Humanizer.ByteSizeExtensions.Gigabytes(double)", span="65-65"];
m1_30 [cluster="Humanizer.Bytes.ByteSize.ToString()", file="Configurator.cs", label="Entry Humanizer.Bytes.ByteSize.ToString()", span="129-129"];
m1_14 [cluster="Humanizer.Bytes.ByteSize.FromKilobytes(double)", file="Configurator.cs", label="Entry Humanizer.Bytes.ByteSize.FromKilobytes(double)", span="103-103"];
m1_15 [cluster="Humanizer.ByteSizeExtensions.Megabytes(double)", file="Configurator.cs", label="Entry Humanizer.ByteSizeExtensions.Megabytes(double)", span="55-55"];
m1_16 [cluster="Humanizer.ByteSizeExtensions.Megabytes(double)", file="Configurator.cs", label="return ByteSize.FromMegabytes(input);", span="57-57"];
m1_17 [cluster="Humanizer.ByteSizeExtensions.Megabytes(double)", file="Configurator.cs", label="Exit Humanizer.ByteSizeExtensions.Megabytes(double)", span="55-55"];
m1_7 [cluster="Humanizer.ByteSizeExtensions.Bytes(double)", file="Configurator.cs", label="Entry Humanizer.ByteSizeExtensions.Bytes(double)", span="35-35"];
m1_8 [cluster="Humanizer.ByteSizeExtensions.Bytes(double)", color=red, community=0, file="Configurator.cs", label="0: return ByteSize.FromBytes(input);", span="37-37"];
m1_9 [cluster="Humanizer.ByteSizeExtensions.Bytes(double)", file="Configurator.cs", label="Exit Humanizer.ByteSizeExtensions.Bytes(double)", span="35-35"];
m1_0 [cluster="Humanizer.ByteSizeExtensions.Bits(long)", file="Configurator.cs", label="Entry Humanizer.ByteSizeExtensions.Bits(long)", span="15-15"];
m1_1 [cluster="Humanizer.ByteSizeExtensions.Bits(long)", file="Configurator.cs", label="return ByteSize.FromBits(input);", span="17-17"];
m1_2 [cluster="Humanizer.ByteSizeExtensions.Bits(long)", file="Configurator.cs", label="Exit Humanizer.ByteSizeExtensions.Bits(long)", span="15-15"];
m2_41 [cluster="System.DateTime.ToLocalTime()", file="DateHumanizeExtensions.cs", label="Entry System.DateTime.ToLocalTime()", span="0-0"];
m2_55 [cluster="Humanizer.Localisation.IFormatter.DateHumanize_SingleHourFromNow()", file="DateHumanizeExtensions.cs", label="Entry Humanizer.Localisation.IFormatter.DateHumanize_SingleHourFromNow()", span="28-28"];
m2_43 [cluster="System.TimeSpan.FromMilliseconds(double)", file="DateHumanizeExtensions.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m2_67 [cluster="System.Convert.ToInt32(double)", file="DateHumanizeExtensions.cs", label="Entry System.Convert.ToInt32(double)", span="0-0"];
m2_44 [cluster="Humanizer.Localisation.IFormatter.DateHumanize_Now()", file="DateHumanizeExtensions.cs", label="Entry Humanizer.Localisation.IFormatter.DateHumanize_Now()", span="29-29"];
m2_69 [cluster="Humanizer.Localisation.IFormatter.DateHumanize_MultipleMonthsAgo(int)", file="DateHumanizeExtensions.cs", label="Entry Humanizer.Localisation.IFormatter.DateHumanize_MultipleMonthsAgo(int)", span="12-12"];
m2_47 [cluster="Humanizer.Localisation.IFormatter.DateHumanize_SingleSecondFromNow()", file="DateHumanizeExtensions.cs", label="Entry Humanizer.Localisation.IFormatter.DateHumanize_SingleSecondFromNow()", span="31-31"];
m2_59 [cluster="Humanizer.Localisation.IFormatter.DateHumanize_SingleDayFromNow()", file="DateHumanizeExtensions.cs", label="Entry Humanizer.Localisation.IFormatter.DateHumanize_SingleDayFromNow()", span="33-33"];
m2_46 [cluster="System.Math.Abs(long)", file="DateHumanizeExtensions.cs", label="Entry System.Math.Abs(long)", span="0-0"];
m2_62 [cluster="Humanizer.Localisation.IFormatter.DateHumanize_MultipleDaysAgo(int)", file="DateHumanizeExtensions.cs", label="Entry Humanizer.Localisation.IFormatter.DateHumanize_MultipleDaysAgo(int)", span="9-9"];
m2_66 [cluster="System.Math.Floor(double)", file="DateHumanizeExtensions.cs", label="Entry System.Math.Floor(double)", span="0-0"];
m2_60 [cluster="Humanizer.Localisation.IFormatter.DateHumanize_SingleDayAgo()", file="DateHumanizeExtensions.cs", label="Entry Humanizer.Localisation.IFormatter.DateHumanize_SingleDayAgo()", span="20-20"];
m2_61 [cluster="Humanizer.Localisation.IFormatter.DateHumanize_MultipleDaysFromNow(int)", file="DateHumanizeExtensions.cs", label="Entry Humanizer.Localisation.IFormatter.DateHumanize_MultipleDaysFromNow(int)", span="21-21"];
m2_68 [cluster="Humanizer.Localisation.IFormatter.DateHumanize_MultipleMonthsFromNow(int)", file="DateHumanizeExtensions.cs", label="Entry Humanizer.Localisation.IFormatter.DateHumanize_MultipleMonthsFromNow(int)", span="24-24"];
m2_63 [cluster="System.DateTime.AddMonths(int)", file="DateHumanizeExtensions.cs", label="Entry System.DateTime.AddMonths(int)", span="0-0"];
m2_50 [cluster="Humanizer.Localisation.IFormatter.DateHumanize_MultipleSecondsAgo(int)", file="DateHumanizeExtensions.cs", label="Entry Humanizer.Localisation.IFormatter.DateHumanize_MultipleSecondsAgo(int)", span="13-13"];
m2_51 [cluster="Humanizer.Localisation.IFormatter.DateHumanize_SingleMinuteFromNow()", file="DateHumanizeExtensions.cs", label="Entry Humanizer.Localisation.IFormatter.DateHumanize_SingleMinuteFromNow()", span="27-27"];
m2_58 [cluster="Humanizer.Localisation.IFormatter.DateHumanize_MultipleHoursAgo(int)", file="DateHumanizeExtensions.cs", label="Entry Humanizer.Localisation.IFormatter.DateHumanize_MultipleHoursAgo(int)", span="10-10"];
m2_72 [cluster="Humanizer.Localisation.IFormatter.DateHumanize_SingleYearAgo()", file="DateHumanizeExtensions.cs", label="Entry Humanizer.Localisation.IFormatter.DateHumanize_SingleYearAgo()", span="19-19"];
m2_64 [cluster="Humanizer.Localisation.IFormatter.DateHumanize_SingleMonthFromNow()", file="DateHumanizeExtensions.cs", label="Entry Humanizer.Localisation.IFormatter.DateHumanize_SingleMonthFromNow()", span="30-30"];
m2_48 [cluster="Humanizer.Localisation.IFormatter.DateHumanize_MultipleSecondsFromNow(int)", file="DateHumanizeExtensions.cs", label="Entry Humanizer.Localisation.IFormatter.DateHumanize_MultipleSecondsFromNow(int)", span="25-25"];
m2_45 [cluster="System.TimeSpan.TimeSpan(long)", file="DateHumanizeExtensions.cs", label="Entry System.TimeSpan.TimeSpan(long)", span="0-0"];
m2_49 [cluster="Humanizer.Localisation.IFormatter.DateHumanize_SingleSecondAgo()", file="DateHumanizeExtensions.cs", label="Entry Humanizer.Localisation.IFormatter.DateHumanize_SingleSecondAgo()", span="18-18"];
m2_52 [cluster="Humanizer.Localisation.IFormatter.DateHumanize_SingleMinuteAgo()", file="DateHumanizeExtensions.cs", label="Entry Humanizer.Localisation.IFormatter.DateHumanize_SingleMinuteAgo()", span="15-15"];
m2_65 [cluster="Humanizer.Localisation.IFormatter.DateHumanize_SingleMonthAgo()", file="DateHumanizeExtensions.cs", label="Entry Humanizer.Localisation.IFormatter.DateHumanize_SingleMonthAgo()", span="17-17"];
m2_70 [cluster="Humanizer.Localisation.IFormatter.DateHumanize_SingleYearFromNow()", file="DateHumanizeExtensions.cs", label="Entry Humanizer.Localisation.IFormatter.DateHumanize_SingleYearFromNow()", span="32-32"];
m2_54 [cluster="Humanizer.Localisation.IFormatter.DateHumanize_MultipleMinutesAgo(int)", file="DateHumanizeExtensions.cs", label="Entry Humanizer.Localisation.IFormatter.DateHumanize_MultipleMinutesAgo(int)", span="11-11"];
m2_73 [cluster="Humanizer.Localisation.IFormatter.DateHumanize_MultipleYearsAgo(int)", file="DateHumanizeExtensions.cs", label="Entry Humanizer.Localisation.IFormatter.DateHumanize_MultipleYearsAgo(int)", span="14-14"];
m2_42 [cluster="System.DateTime.Subtract(System.DateTime)", file="DateHumanizeExtensions.cs", label="Entry System.DateTime.Subtract(System.DateTime)", span="0-0"];
m2_56 [cluster="Humanizer.Localisation.IFormatter.DateHumanize_SingleHourAgo()", file="DateHumanizeExtensions.cs", label="Entry Humanizer.Localisation.IFormatter.DateHumanize_SingleHourAgo()", span="16-16"];
m2_53 [cluster="Humanizer.Localisation.IFormatter.DateHumanize_MultipleMinutesFromNow(int)", file="DateHumanizeExtensions.cs", label="Entry Humanizer.Localisation.IFormatter.DateHumanize_MultipleMinutesFromNow(int)", span="23-23"];
m2_57 [cluster="Humanizer.Localisation.IFormatter.DateHumanize_MultipleHoursFromNow(int)", file="DateHumanizeExtensions.cs", label="Entry Humanizer.Localisation.IFormatter.DateHumanize_MultipleHoursFromNow(int)", span="22-22"];
m2_71 [cluster="Humanizer.Localisation.IFormatter.DateHumanize_MultipleYearsFromNow(int)", file="DateHumanizeExtensions.cs", label="Entry Humanizer.Localisation.IFormatter.DateHumanize_MultipleYearsFromNow(int)", span="26-26"];
m2_0 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="DateHumanizeExtensions.cs", label="Entry Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", span="18-18"];
m2_1 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="DateHumanizeExtensions.cs", label="dateToCompareAgainst == null", span="20-20"];
m2_4 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="DateHumanizeExtensions.cs", label="var comparisonBase = dateToCompareAgainst.Value", span="24-24"];
m2_5 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="DateHumanizeExtensions.cs", label="!utcDate", span="26-26"];
m2_7 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="DateHumanizeExtensions.cs", label="input <= comparisonBase && comparisonBase.Subtract(input) < TimeSpan.FromMilliseconds(500)", span="29-29"];
m2_9 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs", label="0: var isFuture = input > comparisonBase", span="32-32"];
m2_10 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="DateHumanizeExtensions.cs", label="var ts = new TimeSpan(Math.Abs(comparisonBase.Ticks - input.Ticks))", span="33-33"];
m2_28 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs", label="0: comparisonBase.Date.AddMonths(isFuture ? 1 : -1) == input.Date", span="63-63"];
m2_2 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="DateHumanizeExtensions.cs", label="dateToCompareAgainst = DateTime.UtcNow", span="21-21"];
m2_3 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="DateHumanizeExtensions.cs", label="var formatter = Configurator.Formatter", span="23-23"];
m2_8 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="DateHumanizeExtensions.cs", label="return formatter.DateHumanize_Now();", span="30-30"];
m2_13 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs", label="0: return ts.TotalSeconds <= 1 ? formatter.DateHumanize_SingleSecondFromNow() : formatter.DateHumanize_MultipleSecondsFromNow(ts.Seconds);", span="38-38"];
m2_14 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs", label="0: return ts.TotalSeconds <= 1 ? formatter.DateHumanize_SingleSecondAgo() : formatter.DateHumanize_MultipleSecondsAgo(ts.Seconds);", span="40-40"];
m2_16 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs", label="0: return isFuture ? formatter.DateHumanize_SingleMinuteFromNow() : formatter.DateHumanize_SingleMinuteAgo();", span="44-44"];
m2_18 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs", label="0: return isFuture ? formatter.DateHumanize_MultipleMinutesFromNow(ts.Minutes) : formatter.DateHumanize_MultipleMinutesAgo(ts.Minutes);", span="47-47"];
m2_20 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs", label="0: return isFuture ? formatter.DateHumanize_SingleHourFromNow() : formatter.DateHumanize_SingleHourAgo();", span="50-50"];
m2_22 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs", label="0: return isFuture ? formatter.DateHumanize_MultipleHoursFromNow(ts.Hours) : formatter.DateHumanize_MultipleHoursAgo(ts.Hours);", span="53-53"];
m2_24 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs", label="0: return isFuture ? formatter.DateHumanize_SingleDayFromNow() : formatter.DateHumanize_SingleDayAgo();", span="56-56"];
m2_26 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs", label="0: return isFuture ? formatter.DateHumanize_MultipleDaysFromNow(ts.Days) : formatter.DateHumanize_MultipleDaysAgo(ts.Days);", span="59-59"];
m2_29 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs", label="0: return isFuture ? formatter.DateHumanize_SingleMonthFromNow() : formatter.DateHumanize_SingleMonthAgo();", span="64-64"];
m2_30 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs", label="0: return isFuture ? formatter.DateHumanize_MultipleDaysFromNow(ts.Days) : formatter.DateHumanize_MultipleDaysAgo(ts.Days);", span="66-66"];
m2_34 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs", label="0: return months <= 1 ? formatter.DateHumanize_SingleMonthFromNow() : formatter.DateHumanize_MultipleMonthsFromNow(months);", span="74-74"];
m2_35 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs", label="0: return months <= 1 ? formatter.DateHumanize_SingleMonthAgo() : formatter.DateHumanize_MultipleMonthsAgo(months);", span="76-76"];
m2_38 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs", label="0: return years <= 1 ? formatter.DateHumanize_SingleYearFromNow() : formatter.DateHumanize_MultipleYearsFromNow(years);", span="82-82"];
m2_39 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs", label="0: return years <= 1 ? formatter.DateHumanize_SingleYearAgo() : formatter.DateHumanize_MultipleYearsAgo(years);", span="84-84"];
m2_6 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="DateHumanizeExtensions.cs", label="comparisonBase = comparisonBase.ToLocalTime()", span="27-27"];
m2_12 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs", label="1: isFuture", span="37-37"];
m2_33 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs", label="0: isFuture", span="73-73"];
m2_37 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs", label="0: isFuture", span="81-81"];
m2_11 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="DateHumanizeExtensions.cs", label="ts.TotalSeconds < 60", span="35-35"];
m2_15 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="DateHumanizeExtensions.cs", label="ts.TotalSeconds < 120", span="43-43"];
m2_17 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="DateHumanizeExtensions.cs", label="ts.TotalMinutes < 45", span="46-46"];
m2_19 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="DateHumanizeExtensions.cs", label="ts.TotalMinutes < 90", span="49-49"];
m2_21 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="DateHumanizeExtensions.cs", label="ts.TotalHours < 24", span="52-52"];
m2_23 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="DateHumanizeExtensions.cs", label="ts.TotalHours < 48", span="55-55"];
m2_25 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="DateHumanizeExtensions.cs", label="ts.TotalDays < 28", span="58-58"];
m2_27 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="DateHumanizeExtensions.cs", label="ts.TotalDays >= 28 && ts.TotalDays < 30", span="61-61"];
m2_31 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="DateHumanizeExtensions.cs", label="ts.TotalDays < 345", span="69-69"];
m2_32 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="DateHumanizeExtensions.cs", label="int months = Convert.ToInt32(Math.Floor(ts.TotalDays / 29.5))", span="71-71"];
m2_36 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="DateHumanizeExtensions.cs", label="int years = Convert.ToInt32(Math.Floor(ts.TotalDays / 365))", span="79-79"];
m2_40 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="DateHumanizeExtensions.cs", label="Exit Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", span="18-18"];
m4_3 [cluster="Humanizer.Localisation.Ordinalizers.DefaultOrdinalizer.Convert(int, string)", file="DefaultFormatter.cs", label="Entry Humanizer.Localisation.Ordinalizers.DefaultOrdinalizer.Convert(int, string)", span="9-9"];
m4_4 [cluster="Humanizer.Localisation.Ordinalizers.DefaultOrdinalizer.Convert(int, string)", color=red, community=0, file="DefaultFormatter.cs", label="0: return numberString;", span="11-11"];
m4_5 [cluster="Humanizer.Localisation.Ordinalizers.DefaultOrdinalizer.Convert(int, string)", file="DefaultFormatter.cs", label="Exit Humanizer.Localisation.Ordinalizers.DefaultOrdinalizer.Convert(int, string)", span="9-9"];
m4_0 [cluster="Humanizer.Localisation.Ordinalizers.DefaultOrdinalizer.Convert(int, string, Humanizer.GrammaticalGender)", file="DefaultFormatter.cs", label="Entry Humanizer.Localisation.Ordinalizers.DefaultOrdinalizer.Convert(int, string, Humanizer.GrammaticalGender)", span="4-4"];
m4_1 [cluster="Humanizer.Localisation.Ordinalizers.DefaultOrdinalizer.Convert(int, string, Humanizer.GrammaticalGender)", color=red, community=0, file="DefaultFormatter.cs", label="0: return Convert(number, numberString);", span="6-6"];
m4_2 [cluster="Humanizer.Localisation.Ordinalizers.DefaultOrdinalizer.Convert(int, string, Humanizer.GrammaticalGender)", file="DefaultFormatter.cs", label="Exit Humanizer.Localisation.Ordinalizers.DefaultOrdinalizer.Convert(int, string, Humanizer.GrammaticalGender)", span="4-4"];
m4_6 [file="DefaultFormatter.cs", label="Humanizer.Localisation.Ordinalizers.DefaultOrdinalizer", span=""];
m6_16 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringIsTurnedIntoSentence()", file="EnumHumanizeExtensions.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringIsTurnedIntoSentence()", span="36-36"];
m6_3 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="EnumHumanizeExtensions.cs", label="Entry Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", span="15-15"];
m6_0 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.PascalCaseInputStringIsTurnedIntoSentence()", file="EnumHumanizeExtensions.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.PascalCaseInputStringIsTurnedIntoSentence()", span="8-8"];
m6_1 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.PascalCaseInputStringIsTurnedIntoSentence()", file="EnumHumanizeExtensions.cs", label="Assert.Equal(\r\n                ''Pascal case input string is turned into sentence'',\r\n                ''PascalCaseInputStringIsTurnedIntoSentence''.Humanize())", span="10-12"];
m6_2 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.PascalCaseInputStringIsTurnedIntoSentence()", file="EnumHumanizeExtensions.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.PascalCaseInputStringIsTurnedIntoSentence()", span="8-8"];
m6_15 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringIsTurnedIntoSentence()", color=red, community=0, file="EnumHumanizeExtensions.cs", label="0: Assert.Equal(\r\n                ''Underscored input string is turned into sentence'',\r\n                ''Underscored_input_string_is_turned_into_sentence''.Humanize())", span="38-40"];
m6_20 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", color=green, community=0, file="EnumHumanizeExtensions.cs", label="0: Entry Humanizer.Tests.Extensions.StringExtensionsTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", span="52-52"];
m6_19 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringPreservesCasing()", file="EnumHumanizeExtensions.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringPreservesCasing()", span="44-44"];
m6_21 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", color=green, community=0, file="EnumHumanizeExtensions.cs", label="0: Assert.Equal(\r\n                ''X is first word in the sentence'',\r\n                ''XIsFirstWordInTheSentence''.Humanize())", span="54-56"];
m6_18 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringPreservesCasing()", color=red, community=0, file="EnumHumanizeExtensions.cs", label="0: Assert.Equal(\r\n                ''Underscored input String is turned INTO sentence'',\r\n                ''Underscored_input_String_is_turned_INTO_sentence''.Humanize())", span="46-48"];
m6_22 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", file="EnumHumanizeExtensions.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", span="52-52"];
m6_23 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="EnumHumanizeExtensions.cs", label="return descriptionProperty.GetValue(attr, null).ToString();", span="45-45"];
m6_17 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringPreservesCasing()", file="EnumHumanizeExtensions.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringPreservesCasing()", span="44-44"];
m6_24 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="EnumHumanizeExtensions.cs", label="return null;", span="50-50"];
m6_25 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="EnumHumanizeExtensions.cs", label="Exit Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", span="32-32"];
m6_8 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="EnumHumanizeExtensions.cs", label="customDescription != null", span="24-24"];
m6_9 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="EnumHumanizeExtensions.cs", label="return customDescription;", span="25-25"];
m6_10 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="EnumHumanizeExtensions.cs", label="return input.ToString().Humanize();", span="28-28"];
m6_4 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="EnumHumanizeExtensions.cs", label="Type type = input.GetType()", span="17-17"];
m6_12 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", file="EnumHumanizeExtensions.cs", label="Assert.Equal(''Number is at the end 100'', ''NumberIsAtTheEnd100''.Humanize())", span="32-32"];
m6_26 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="EnumHumanizeExtensions.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m6_35 [cluster="string.ApplyCase(Humanizer.LetterCasing)", file="EnumHumanizeExtensions.cs", label="Entry string.ApplyCase(Humanizer.LetterCasing)", span="15-15"];
m6_13 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", file="EnumHumanizeExtensions.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", span="30-30"];
m6_14 [cluster="System.Type.GetMember(string)", file="EnumHumanizeExtensions.cs", label="Entry System.Type.GetMember(string)", span="0-0"];
m6_31 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum, Humanizer.LetterCasing)", file="EnumHumanizeExtensions.cs", label="Entry Humanizer.EnumHumanizeExtensions.Humanize(System.Enum, Humanizer.LetterCasing)", span="59-59"];
m6_32 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum, Humanizer.LetterCasing)", file="EnumHumanizeExtensions.cs", label="var humanizedEnum = Humanize(input)", span="61-61"];
m6_33 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum, Humanizer.LetterCasing)", file="EnumHumanizeExtensions.cs", label="return humanizedEnum.ApplyCase(casing);", span="63-63"];
m6_34 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum, Humanizer.LetterCasing)", file="EnumHumanizeExtensions.cs", label="Exit Humanizer.EnumHumanizeExtensions.Humanize(System.Enum, Humanizer.LetterCasing)", span="59-59"];
m6_30 [cluster="Unk.ToString", file="EnumHumanizeExtensions.cs", label="Entry Unk.ToString", span=""];
m6_5 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="EnumHumanizeExtensions.cs", label="var memInfo = type.GetMember(input.ToString())", span="18-18"];
m6_6 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="EnumHumanizeExtensions.cs", label="memInfo.Length > 0", span="20-20"];
m6_7 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="EnumHumanizeExtensions.cs", label="var customDescription = GetCustomDescription(memInfo[0])", span="22-22"];
m6_11 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="EnumHumanizeExtensions.cs", label="Exit Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", span="15-15"];
m6_28 [cluster="Unk.FirstOrDefault", file="EnumHumanizeExtensions.cs", label="Entry Unk.FirstOrDefault", span=""];
m6_29 [cluster="Unk.GetValue", file="EnumHumanizeExtensions.cs", label="Entry Unk.GetValue", span=""];
m6_27 [cluster="System.Type.GetProperties()", file="EnumHumanizeExtensions.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m7_42 [cluster="Unk.ToMaybe", file="EnumHumanizeTests.cs", label="Entry Unk.ToMaybe", span=""];
m7_4 [cluster="Unk.Equal", file="EnumHumanizeTests.cs", label="Entry Unk.Equal", span=""];
m7_17 [cluster="Humanizer.Tests.EnumHumanizeTests.AllCapitalMembersAreReturnedAsIs()", file="EnumHumanizeTests.cs", label="Exit Humanizer.Tests.EnumHumanizeTests.AllCapitalMembersAreReturnedAsIs()", span="35-35"];
m7_18 [cluster="System.Enum.ToString()", file="EnumHumanizeTests.cs", label="Entry System.Enum.ToString()", span="0-0"];
m7_22 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="EnumHumanizeTests.cs", label="yield return\r\n                    Tuple.Create(pt, MakeErrorInCaseOfMinConstraint(pt.Specification));", span="38-39"];
m7_23 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="EnumHumanizeTests.cs", label="yield break;", span="40-40"];
m7_26 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="EnumHumanizeTests.cs", label="yield return\r\n                    Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                        pt, Maybe.Just<Error>(new SequenceOutOfRangeError(NameInfo.EmptyName)));", span="48-50"];
m7_27 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="EnumHumanizeTests.cs", label="yield break;", span="51-51"];
m7_28 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="EnumHumanizeTests.cs", label="yield return\r\n                converter(taken, pt.Property.PropertyType, pt.Specification.ConversionType.IsScalar())\r\n                    .Return(\r\n                        converted => Tuple.Create(pt.WithValue(Maybe.Just(converted)), Maybe.Nothing<Error>()),\r\n                        Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                            pt, Maybe.Just<Error>(new BadFormatConversionError(NameInfo.EmptyName))));", span="54-59"];
m7_30 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="EnumHumanizeTests.cs", label="yield return value;", span="63-63"];
m7_19 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="EnumHumanizeTests.cs", label="var pt = specProps.First()", span="34-34"];
m7_20 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="EnumHumanizeTests.cs", label="var taken = values.Take(pt.Specification.GetMaxValueCount().Return(n => n, values.Count()))", span="35-35"];
m7_24 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="EnumHumanizeTests.cs", label="var next = specProps.Skip(1).FirstOrDefault(s => s.Specification.IsValue()).ToMaybe()", span="43-43"];
m7_25 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="EnumHumanizeTests.cs", label="pt.Specification.Max.IsJust()\r\n                && next.IsNothing()\r\n                && values.Skip(taken.Count()).Any()", span="44-46"];
m7_29 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="EnumHumanizeTests.cs", label="MapValuesImpl(specProps.Skip(1), values.Skip(taken.Count()), converter)", span="61-61"];
m7_21 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="EnumHumanizeTests.cs", label="taken.Empty()", span="36-36"];
m7_31 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="EnumHumanizeTests.cs", label="Exit CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", span="25-25"];
m7_49 [cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="EnumHumanizeTests.cs", label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0"];
m7_44 [cluster="CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", file="EnumHumanizeTests.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", span="144-144"];
m7_47 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="EnumHumanizeTests.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="68-68"];
m7_48 [cluster="System.Type.IsScalar()", file="EnumHumanizeTests.cs", label="Entry System.Type.IsScalar()", span="33-33"];
m7_0 [cluster="Humanizer.Tests.EnumHumanizeTests.HonorsDescriptionAttribute()", file="EnumHumanizeTests.cs", label="Entry Humanizer.Tests.EnumHumanizeTests.HonorsDescriptionAttribute()", span="7-7"];
m7_1 [cluster="Humanizer.Tests.EnumHumanizeTests.HonorsDescriptionAttribute()", color=green, community=0, file="EnumHumanizeTests.cs", label="0: Assert.Equal(EnumTestsResources.CustomDescription, EnumUnderTest.MemberWithDescriptionAttribute.Humanize())", span="9-9"];
m7_2 [cluster="Humanizer.Tests.EnumHumanizeTests.HonorsDescriptionAttribute()", file="EnumHumanizeTests.cs", label="Exit Humanizer.Tests.EnumHumanizeTests.HonorsDescriptionAttribute()", span="7-7"];
m7_3 [cluster="System.Enum.Humanize()", file="EnumHumanizeTests.cs", label="Entry System.Enum.Humanize()", span="15-15"];
m7_43 [cluster="CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", file="EnumHumanizeTests.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", span="149-149"];
m7_11 [cluster="lambda expression", file="EnumHumanizeTests.cs", label="Entry lambda expression", span="20-20"];
m7_57 [cluster="CommandLine.Core.Specification.IsValue()", file="EnumHumanizeTests.cs", label="Entry CommandLine.Core.Specification.IsValue()", span="16-16"];
m7_32 [cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="EnumHumanizeTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="62-62"];
m7_46 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="EnumHumanizeTests.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="316-316"];
m7_38 [cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="EnumHumanizeTests.cs", label="Entry CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", span="67-67"];
m7_63 [cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="EnumHumanizeTests.cs", label="return specification.Min.IsJust()\r\n                ? Maybe.Just<Error>(new SequenceOutOfRangeError(NameInfo.EmptyName))\r\n                : Maybe.Nothing<Error>();", span="69-71"];
m7_64 [cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="EnumHumanizeTests.cs", label="Exit CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", span="67-67"];
m7_6 [cluster="Humanizer.Tests.EnumHumanizeTests.CanHumanizeMembersWithoutDescriptionAttribute()", color=green, community=0, file="EnumHumanizeTests.cs", label="0: Assert.Equal(EnumTestsResources.MemberWithoutDescriptionAttributeSentence, EnumUnderTest.MemberWithoutDescriptionAttribute.Humanize())", span="15-15"];
m7_34 [cluster="CommandLine.Core.Specification.GetMaxValueCount()", file="EnumHumanizeTests.cs", label="Entry CommandLine.Core.Specification.GetMaxValueCount()", span="51-51"];
m7_62 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="EnumHumanizeTests.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63"];
m7_12 [cluster="lambda expression", file="EnumHumanizeTests.cs", label="pe.Item2", span="20-20"];
m7_13 [cluster="lambda expression", file="EnumHumanizeTests.cs", label="Exit lambda expression", span="20-20"];
m7_14 [cluster="lambda expression", file="EnumHumanizeTests.cs", label="Entry lambda expression", span="21-21"];
m7_45 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="EnumHumanizeTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m7_5 [cluster="Unk.Select", file="EnumHumanizeTests.cs", label="Entry Unk.Select", span=""];
m7_7 [cluster="Unk.Create", file="EnumHumanizeTests.cs", label="Entry Unk.Create", span=""];
m7_39 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="EnumHumanizeTests.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m7_37 [cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="EnumHumanizeTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0"];
m7_61 [cluster="CommandLine.Core.SpecificationProperty.WithValue(CommandLine.Infrastructure.Maybe<object>)", file="EnumHumanizeTests.cs", label="Entry CommandLine.Core.SpecificationProperty.WithValue(CommandLine.Infrastructure.Maybe<object>)", span="18-18"];
m7_50 [cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", file="EnumHumanizeTests.cs", label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="305-305"];
m7_33 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="EnumHumanizeTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m7_58 [cluster="lambda expression", file="EnumHumanizeTests.cs", label="Entry lambda expression", span="57-57"];
m7_8 [cluster="Humanizer.Tests.EnumHumanizeTests.CanApplyTitleCasingOnEnumHumanization()", file="EnumHumanizeTests.cs", label="Entry Humanizer.Tests.EnumHumanizeTests.CanApplyTitleCasingOnEnumHumanization()", span="19-19"];
m7_9 [cluster="Humanizer.Tests.EnumHumanizeTests.CanApplyTitleCasingOnEnumHumanization()", color=green, community=1, file="EnumHumanizeTests.cs", label="0: Assert.Equal(\r\n                EnumTestsResources.MemberWithoutDescriptionAttributeTitle, \r\n                EnumUnderTest.MemberWithoutDescriptionAttribute.Humanize(LetterCasing.Title))", span="21-23"];
m7_10 [cluster="Humanizer.Tests.EnumHumanizeTests.CanApplyTitleCasingOnEnumHumanization()", file="EnumHumanizeTests.cs", label="Exit Humanizer.Tests.EnumHumanizeTests.CanApplyTitleCasingOnEnumHumanization()", span="19-19"];
m7_15 [cluster="Humanizer.Tests.EnumHumanizeTests.AllCapitalMembersAreReturnedAsIs()", file="EnumHumanizeTests.cs", label="Entry Humanizer.Tests.EnumHumanizeTests.AllCapitalMembersAreReturnedAsIs()", span="35-35"];
m7_16 [cluster="Humanizer.Tests.EnumHumanizeTests.AllCapitalMembersAreReturnedAsIs()", file="EnumHumanizeTests.cs", label="Assert.Equal(EnumUnderTest.ALLCAPITALS.ToString(), EnumUnderTest.ALLCAPITALS.Humanize())", span="37-37"];
m7_59 [cluster="lambda expression", file="EnumHumanizeTests.cs", label="Tuple.Create(pt.WithValue(Maybe.Just(converted)), Maybe.Nothing<Error>())", span="57-57"];
m7_51 [cluster="lambda expression", file="EnumHumanizeTests.cs", label="Entry lambda expression", span="35-35"];
m7_54 [cluster="lambda expression", file="EnumHumanizeTests.cs", label="Entry lambda expression", span="43-43"];
m7_52 [cluster="lambda expression", file="EnumHumanizeTests.cs", label=n, span="35-35"];
m7_53 [cluster="lambda expression", file="EnumHumanizeTests.cs", label="Exit lambda expression", span="35-35"];
m7_55 [cluster="lambda expression", file="EnumHumanizeTests.cs", label="s.Specification.IsValue()", span="43-43"];
m7_56 [cluster="lambda expression", file="EnumHumanizeTests.cs", label="Exit lambda expression", span="43-43"];
m7_60 [cluster="lambda expression", file="EnumHumanizeTests.cs", label="Exit lambda expression", span="57-57"];
m7_41 [cluster="Unk.FirstOrDefault", file="EnumHumanizeTests.cs", label="Entry Unk.FirstOrDefault", span=""];
m7_35 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="EnumHumanizeTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m7_36 [cluster="CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="EnumHumanizeTests.cs", label="Entry CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="100-100"];
m7_40 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="EnumHumanizeTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m7_65 [file="EnumHumanizeTests.cs", label=pt, span=""];
m12_16 [cluster="Humanizer.Localisation.DynamicResourceKeys.IFormatter.TimeSpanHumanize_Milliseconds(int)", file="IFormatter.cs", label="Entry Humanizer.Localisation.DynamicResourceKeys.IFormatter.TimeSpanHumanize_Milliseconds(int)", span="18-18"];
m12_17 [cluster="Humanizer.Localisation.DynamicResourceKeys.IFormatter.TimeSpanHumanize_Milliseconds(int)", file="IFormatter.cs", label="Exit Humanizer.Localisation.DynamicResourceKeys.IFormatter.TimeSpanHumanize_Milliseconds(int)", span="18-18"];
m12_6 [cluster="Humanizer.Localisation.DynamicResourceKeys.IFormatter.DateHumanize_Hours(int, bool)", file="IFormatter.cs", label="Entry Humanizer.Localisation.DynamicResourceKeys.IFormatter.DateHumanize_Hours(int, bool)", span="12-12"];
m12_7 [cluster="Humanizer.Localisation.DynamicResourceKeys.IFormatter.DateHumanize_Hours(int, bool)", file="IFormatter.cs", label="Exit Humanizer.Localisation.DynamicResourceKeys.IFormatter.DateHumanize_Hours(int, bool)", span="12-12"];
m12_22 [cluster="Humanizer.Localisation.DynamicResourceKeys.IFormatter.TimeSpanHumanize_Hours(int)", file="IFormatter.cs", label="Entry Humanizer.Localisation.DynamicResourceKeys.IFormatter.TimeSpanHumanize_Hours(int)", span="21-21"];
m12_23 [cluster="Humanizer.Localisation.DynamicResourceKeys.IFormatter.TimeSpanHumanize_Hours(int)", file="IFormatter.cs", label="Exit Humanizer.Localisation.DynamicResourceKeys.IFormatter.TimeSpanHumanize_Hours(int)", span="21-21"];
m12_8 [cluster="Humanizer.Localisation.DynamicResourceKeys.IFormatter.DateHumanize_Days(int, bool)", file="IFormatter.cs", label="Entry Humanizer.Localisation.DynamicResourceKeys.IFormatter.DateHumanize_Days(int, bool)", span="13-13"];
m12_9 [cluster="Humanizer.Localisation.DynamicResourceKeys.IFormatter.DateHumanize_Days(int, bool)", file="IFormatter.cs", label="Exit Humanizer.Localisation.DynamicResourceKeys.IFormatter.DateHumanize_Days(int, bool)", span="13-13"];
m12_2 [cluster="Humanizer.Localisation.DynamicResourceKeys.IFormatter.DateHumanize_Seconds(int, bool)", file="IFormatter.cs", label="Entry Humanizer.Localisation.DynamicResourceKeys.IFormatter.DateHumanize_Seconds(int, bool)", span="10-10"];
m12_3 [cluster="Humanizer.Localisation.DynamicResourceKeys.IFormatter.DateHumanize_Seconds(int, bool)", file="IFormatter.cs", label="Exit Humanizer.Localisation.DynamicResourceKeys.IFormatter.DateHumanize_Seconds(int, bool)", span="10-10"];
m12_12 [cluster="Humanizer.Localisation.DynamicResourceKeys.IFormatter.DateHumanize_Years(int, bool)", file="IFormatter.cs", label="Entry Humanizer.Localisation.DynamicResourceKeys.IFormatter.DateHumanize_Years(int, bool)", span="15-15"];
m12_13 [cluster="Humanizer.Localisation.DynamicResourceKeys.IFormatter.DateHumanize_Years(int, bool)", file="IFormatter.cs", label="Exit Humanizer.Localisation.DynamicResourceKeys.IFormatter.DateHumanize_Years(int, bool)", span="15-15"];
m12_0 [cluster="Humanizer.Localisation.DynamicResourceKeys.IFormatter.DateHumanize_Now()", file="IFormatter.cs", label="Entry Humanizer.Localisation.DynamicResourceKeys.IFormatter.DateHumanize_Now()", span="9-9"];
m12_1 [cluster="Humanizer.Localisation.DynamicResourceKeys.IFormatter.DateHumanize_Now()", file="IFormatter.cs", label="Exit Humanizer.Localisation.DynamicResourceKeys.IFormatter.DateHumanize_Now()", span="9-9"];
m12_26 [cluster="Humanizer.Localisation.DynamicResourceKeys.IFormatter.TimeSpanHumanize_Weeks(int)", file="IFormatter.cs", label="Entry Humanizer.Localisation.DynamicResourceKeys.IFormatter.TimeSpanHumanize_Weeks(int)", span="23-23"];
m12_27 [cluster="Humanizer.Localisation.DynamicResourceKeys.IFormatter.TimeSpanHumanize_Weeks(int)", file="IFormatter.cs", label="Exit Humanizer.Localisation.DynamicResourceKeys.IFormatter.TimeSpanHumanize_Weeks(int)", span="23-23"];
m12_10 [cluster="Humanizer.Localisation.DynamicResourceKeys.IFormatter.DateHumanize_Months(int, bool)", file="IFormatter.cs", label="Entry Humanizer.Localisation.DynamicResourceKeys.IFormatter.DateHumanize_Months(int, bool)", span="14-14"];
m12_11 [cluster="Humanizer.Localisation.DynamicResourceKeys.IFormatter.DateHumanize_Months(int, bool)", file="IFormatter.cs", label="Exit Humanizer.Localisation.DynamicResourceKeys.IFormatter.DateHumanize_Months(int, bool)", span="14-14"];
m12_14 [cluster="Humanizer.Localisation.DynamicResourceKeys.IFormatter.TimeSpanHumanize_Zero()", file="IFormatter.cs", label="Entry Humanizer.Localisation.DynamicResourceKeys.IFormatter.TimeSpanHumanize_Zero()", span="17-17"];
m12_15 [cluster="Humanizer.Localisation.DynamicResourceKeys.IFormatter.TimeSpanHumanize_Zero()", file="IFormatter.cs", label="Exit Humanizer.Localisation.DynamicResourceKeys.IFormatter.TimeSpanHumanize_Zero()", span="17-17"];
m12_20 [cluster="Humanizer.Localisation.DynamicResourceKeys.IFormatter.TimeSpanHumanize_Minutes(int)", file="IFormatter.cs", label="Entry Humanizer.Localisation.DynamicResourceKeys.IFormatter.TimeSpanHumanize_Minutes(int)", span="20-20"];
m12_21 [cluster="Humanizer.Localisation.DynamicResourceKeys.IFormatter.TimeSpanHumanize_Minutes(int)", file="IFormatter.cs", label="Exit Humanizer.Localisation.DynamicResourceKeys.IFormatter.TimeSpanHumanize_Minutes(int)", span="20-20"];
m12_4 [cluster="Humanizer.Localisation.DynamicResourceKeys.IFormatter.DateHumanize_Minutes(int, bool)", file="IFormatter.cs", label="Entry Humanizer.Localisation.DynamicResourceKeys.IFormatter.DateHumanize_Minutes(int, bool)", span="11-11"];
m12_5 [cluster="Humanizer.Localisation.DynamicResourceKeys.IFormatter.DateHumanize_Minutes(int, bool)", file="IFormatter.cs", label="Exit Humanizer.Localisation.DynamicResourceKeys.IFormatter.DateHumanize_Minutes(int, bool)", span="11-11"];
m12_24 [cluster="Humanizer.Localisation.DynamicResourceKeys.IFormatter.TimeSpanHumanize_Days(int)", file="IFormatter.cs", label="Entry Humanizer.Localisation.DynamicResourceKeys.IFormatter.TimeSpanHumanize_Days(int)", span="22-22"];
m12_25 [cluster="Humanizer.Localisation.DynamicResourceKeys.IFormatter.TimeSpanHumanize_Days(int)", file="IFormatter.cs", label="Exit Humanizer.Localisation.DynamicResourceKeys.IFormatter.TimeSpanHumanize_Days(int)", span="22-22"];
m12_18 [cluster="Humanizer.Localisation.DynamicResourceKeys.IFormatter.TimeSpanHumanize_Seconds(int)", file="IFormatter.cs", label="Entry Humanizer.Localisation.DynamicResourceKeys.IFormatter.TimeSpanHumanize_Seconds(int)", span="19-19"];
m12_19 [cluster="Humanizer.Localisation.DynamicResourceKeys.IFormatter.TimeSpanHumanize_Seconds(int)", file="IFormatter.cs", label="Exit Humanizer.Localisation.DynamicResourceKeys.IFormatter.TimeSpanHumanize_Seconds(int)", span="19-19"];
m14_51 [cluster="Humanizer.Bytes.ByteSize.FromBits(long)", file="ParsingTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromBits(long)", span="93-93"];
m14_5 [cluster="Unk.Equal", file="ParsingTests.cs", label="Entry Unk.Equal", span=""];
m14_26 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParseWorksWithLotsOfSpaces()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.TryParseWorksWithLotsOfSpaces()", span="45-45"];
m14_27 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParseWorksWithLotsOfSpaces()", file="ParsingTests.cs", label="Assert.Equal(ByteSize.FromKilobytes(100), ByteSize.Parse('' 100 KB ''))", span="47-47"];
m14_28 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParseWorksWithLotsOfSpaces()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.TryParseWorksWithLotsOfSpaces()", span="45-45"];
m14_12 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ParsingTests.cs", label="Entry Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", span="280-280"];
m14_17 [cluster="Humanizer.Bytes.ByteSize.FromMegabytes(double)", file="ParsingTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromMegabytes(double)", span="108-108"];
m14_55 [cluster="Humanizer.Bytes.ByteSize.FromBytes(double)", file="ParsingTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromBytes(double)", span="98-98"];
m14_32 [cluster="Unk.>", file="ParsingTests.cs", label="Entry Unk.>", span=""];
m14_18 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParseReturnsFalseOnBadValue(string)", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.TryParseReturnsFalseOnBadValue(string)", span="35-35"];
m14_19 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParseReturnsFalseOnBadValue(string)", file="ParsingTests.cs", label="ByteSize resultByteSize", span="37-37"];
m14_20 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParseReturnsFalseOnBadValue(string)", file="ParsingTests.cs", label="var resultBool = ByteSize.TryParse(input, out resultByteSize)", span="38-38"];
m14_21 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParseReturnsFalseOnBadValue(string)", file="ParsingTests.cs", label="Assert.False(resultBool)", span="40-40"];
m14_22 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParseReturnsFalseOnBadValue(string)", file="ParsingTests.cs", label="Assert.Equal(new ByteSize(), resultByteSize)", span="41-41"];
m14_23 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParseReturnsFalseOnBadValue(string)", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.TryParseReturnsFalseOnBadValue(string)", span="35-35"];
m14_24 [cluster="Unk.False", file="ParsingTests.cs", label="Entry Unk.False", span=""];
m14_48 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseBits()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseBits()", span="69-69"];
m14_49 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseBits()", file="ParsingTests.cs", label="Assert.Equal(ByteSize.FromBits(1), ByteSize.Parse(''1b''))", span="71-71"];
m14_50 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseBits()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseBits()", span="69-69"];
m14_42 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnNull()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnNull()", span="63-63"];
m14_43 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnNull()", file="ParsingTests.cs", label="Assert.Throws<ArgumentNullException>(() => { ByteSize.Parse(null); })", span="65-65"];
m14_44 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnNull()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnNull()", span="63-63"];
m14_4 [cluster="Humanizer.Bytes.ByteSize.Parse(string)", file="ParsingTests.cs", label="Entry Humanizer.Bytes.ByteSize.Parse(string)", span="354-354"];
m14_29 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnPartialBits()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnPartialBits()", span="51-51"];
m14_30 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnPartialBits()", file="ParsingTests.cs", label="Assert.Throws<FormatException>(() => { ByteSize.Parse(''10.5b''); })", span="53-53"];
m14_31 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnPartialBits()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnPartialBits()", span="51-51"];
m14_66 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseTerabytes()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseTerabytes()", span="99-99"];
m14_67 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseTerabytes()", file="ParsingTests.cs", label="Assert.Equal(ByteSize.FromTerabytes(100), ByteSize.Parse(''100TB''))", span="101-101"];
m14_68 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseTerabytes()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseTerabytes()", span="99-99"];
m14_69 [cluster="Humanizer.Bytes.ByteSize.FromTerabytes(double)", file="ParsingTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromTerabytes(double)", span="118-118"];
m14_36 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnInvalid()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnInvalid()", span="57-57"];
m14_37 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnInvalid()", file="ParsingTests.cs", label="Assert.Throws<FormatException>(() => { ByteSize.Parse(''Unexpected Value''); })", span="59-59"];
m14_38 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnInvalid()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnInvalid()", span="57-57"];
m14_59 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseMegabytes()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseMegabytes()", span="87-87"];
m14_60 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseMegabytes()", file="ParsingTests.cs", label="Assert.Equal(ByteSize.FromMegabytes(1000), ByteSize.Parse(''1000MB''))", span="89-89"];
m14_61 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseMegabytes()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseMegabytes()", span="87-87"];
m14_56 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseKilobytes()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseKilobytes()", span="81-81"];
m14_57 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseKilobytes()", file="ParsingTests.cs", label="Assert.Equal(ByteSize.FromKilobytes(1020), ByteSize.Parse(''1020KB''))", span="83-83"];
m14_58 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseKilobytes()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseKilobytes()", span="81-81"];
m14_65 [cluster="Humanizer.Bytes.ByteSize.FromGigabytes(double)", file="ParsingTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromGigabytes(double)", span="113-113"];
m14_3 [cluster="Humanizer.Bytes.ByteSize.FromKilobytes(double)", file="ParsingTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromKilobytes(double)", span="103-103"];
m14_0 [cluster="Humanizer.Tests.Bytes.ParsingTests.Parse()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.Parse()", span="10-10"];
m14_1 [cluster="Humanizer.Tests.Bytes.ParsingTests.Parse()", file="ParsingTests.cs", label="Assert.Equal(ByteSize.FromKilobytes(1020), ByteSize.Parse(''1020KB''))", span="12-12"];
m14_2 [cluster="Humanizer.Tests.Bytes.ParsingTests.Parse()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.Parse()", span="10-10"];
m14_45 [cluster="lambda expression", file="ParsingTests.cs", label="Entry lambda expression", span="65-65"];
m14_33 [cluster="lambda expression", file="ParsingTests.cs", label="Entry lambda expression", span="53-53"];
m14_34 [cluster="lambda expression", file="ParsingTests.cs", label="ByteSize.Parse(''10.5b'')", span="53-53"];
m14_35 [cluster="lambda expression", file="ParsingTests.cs", label="Exit lambda expression", span="53-53"];
m14_39 [cluster="lambda expression", file="ParsingTests.cs", label="Entry lambda expression", span="59-59"];
m14_40 [cluster="lambda expression", file="ParsingTests.cs", label="ByteSize.Parse(''Unexpected Value'')", span="59-59"];
m14_41 [cluster="lambda expression", file="ParsingTests.cs", label="Exit lambda expression", span="59-59"];
m14_46 [cluster="lambda expression", file="ParsingTests.cs", label="ByteSize.Parse(null)", span="65-65"];
m14_47 [cluster="lambda expression", file="ParsingTests.cs", label="Exit lambda expression", span="65-65"];
m14_62 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseGigabytes()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseGigabytes()", span="93-93"];
m14_63 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseGigabytes()", file="ParsingTests.cs", label="Assert.Equal(ByteSize.FromGigabytes(805), ByteSize.Parse(''805GB''))", span="95-95"];
m14_64 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseGigabytes()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseGigabytes()", span="93-93"];
m14_13 [cluster="Unk.True", file="ParsingTests.cs", label="Entry Unk.True", span=""];
m14_25 [cluster="Humanizer.Bytes.ByteSize.ByteSize()", file="ParsingTests.cs", label="Entry Humanizer.Bytes.ByteSize.ByteSize()", span="8-8"];
m14_52 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseBytes()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseBytes()", span="75-75"];
m14_53 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseBytes()", file="ParsingTests.cs", label="Assert.Equal(ByteSize.FromBytes(1), ByteSize.Parse(''1B''))", span="77-77"];
m14_54 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseBytes()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseBytes()", span="75-75"];
m14_6 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParse()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.TryParse()", span="16-16"];
m14_7 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParse()", file="ParsingTests.cs", label="ByteSize resultByteSize", span="18-18"];
m14_8 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParse()", file="ParsingTests.cs", label="var resultBool = ByteSize.TryParse(''1020KB'', out resultByteSize)", span="19-19"];
m14_9 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParse()", file="ParsingTests.cs", label="Assert.True(resultBool)", span="21-21"];
m14_10 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParse()", file="ParsingTests.cs", label="Assert.Equal(ByteSize.FromKilobytes(1020), resultByteSize)", span="22-22"];
m14_11 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParse()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.TryParse()", span="16-16"];
m14_14 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseDecimalMegabytes()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseDecimalMegabytes()", span="26-26"];
m14_15 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseDecimalMegabytes()", file="ParsingTests.cs", label="Assert.Equal(ByteSize.FromMegabytes(100.5), ByteSize.Parse(''100.5MB''))", span="28-28"];
m14_16 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseDecimalMegabytes()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseDecimalMegabytes()", span="26-26"];
m15_5 [cluster="ApiApprover.PublicApiGenerator.CreatePublicApiForAssembly(System.Reflection.Assembly)", file="PublicApiApprovalTest.cs", label="Entry ApiApprover.PublicApiGenerator.CreatePublicApiForAssembly(System.Reflection.Assembly)", span="17-17"];
m15_0 [cluster="Humanizer.Tests.ApiApprover.PublicApiApprovalTest.approve_public_api()", file="PublicApiApprovalTest.cs", label="Entry Humanizer.Tests.ApiApprover.PublicApiApprovalTest.approve_public_api()", span="12-12"];
m15_1 [cluster="Humanizer.Tests.ApiApprover.PublicApiApprovalTest.approve_public_api()", file="PublicApiApprovalTest.cs", label="var assembly = typeof(StringHumanizeExtensions).Assembly", span="15-15"];
m15_2 [cluster="Humanizer.Tests.ApiApprover.PublicApiApprovalTest.approve_public_api()", file="PublicApiApprovalTest.cs", label="var publicApi = PublicApiGenerator.CreatePublicApiForAssembly(assembly)", span="18-18"];
m15_3 [cluster="Humanizer.Tests.ApiApprover.PublicApiApprovalTest.approve_public_api()", file="PublicApiApprovalTest.cs", label="Approvals.Verify(publicApi)", span="21-21"];
m15_4 [cluster="Humanizer.Tests.ApiApprover.PublicApiApprovalTest.approve_public_api()", file="PublicApiApprovalTest.cs", label="Exit Humanizer.Tests.ApiApprover.PublicApiApprovalTest.approve_public_api()", span="12-12"];
m15_6 [cluster="Unk.Verify", file="PublicApiApprovalTest.cs", label="Entry Unk.Verify", span=""];
m16_4 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="ResourceKeys.Common.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m16_0 [cluster="Humanizer.Localisation.DynamicResourceKeys.ResourceKeys.ValidateRange(int)", file="ResourceKeys.Common.cs", label="Entry Humanizer.Localisation.DynamicResourceKeys.ResourceKeys.ValidateRange(int)", span="9-9"];
m16_1 [cluster="Humanizer.Localisation.DynamicResourceKeys.ResourceKeys.ValidateRange(int)", color=red, community=0, file="ResourceKeys.Common.cs", label="0: count < 1", span="11-11"];
m16_2 [cluster="Humanizer.Localisation.DynamicResourceKeys.ResourceKeys.ValidateRange(int)", color=red, community=0, file="ResourceKeys.Common.cs", label="0: throw new ArgumentOutOfRangeException(''count'');", span="11-11"];
m16_3 [cluster="Humanizer.Localisation.DynamicResourceKeys.ResourceKeys.ValidateRange(int)", file="ResourceKeys.Common.cs", label="Exit Humanizer.Localisation.DynamicResourceKeys.ResourceKeys.ValidateRange(int)", span="9-9"];
m18_31 [cluster="string.Equals(string)", file="ResourceKeys.TimeSpanHumanize.cs", label="Entry string.Equals(string)", span="0-0"];
m18_15 [cluster="Unk.NotNull", file="ResourceKeys.TimeSpanHumanize.cs", label="Entry Unk.NotNull", span=""];
m18_23 [cluster="CommandLine.Core.Specification.IsOption()", file="ResourceKeys.TimeSpanHumanize.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="11-11"];
m18_9 [cluster="System.Collections.Generic.List<T>.List()", file="ResourceKeys.TimeSpanHumanize.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m18_27 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="ResourceKeys.TimeSpanHumanize.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="12-12"];
m18_11 [cluster="Unk.Single", file="ResourceKeys.TimeSpanHumanize.cs", label="Entry Unk.Single", span=""];
m18_0 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="ResourceKeys.TimeSpanHumanize.cs", label="Entry CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="16-16"];
m18_1 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", color=red, community=0, file="ResourceKeys.TimeSpanHumanize.cs", label="0: var tokenPartitions = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''x'', new [] { ''true'' })\r\n                }", span="19-22"];
m18_2 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", color=red, community=0, file="ResourceKeys.TimeSpanHumanize.cs", label="0: var specProps = new[]\r\n                {\r\n                    SpecificationProperty.Create(\r\n                        new OptionSpecification(''x'', string.Empty, false, string.Empty, -1, -1, '\0', Maybe.Nothing<object>(), typeof(bool), string.Empty, string.Empty, new List<string>()), \r\n                        typeof(FakeOptions).GetProperties().Single(p => p.Name.Equals(''BoolValue'', StringComparison.Ordinal)),\r\n                        Maybe.Nothing<object>())\r\n                }", span="23-29"];
m18_3 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="ResourceKeys.TimeSpanHumanize.cs", label="var result = OptionMapper.MapValues(\r\n                specProps.Where(pt => pt.Specification.IsOption()),\r\n                tokenPartitions,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture),\r\n                StringComparer.InvariantCulture)", span="32-36"];
m18_4 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="ResourceKeys.TimeSpanHumanize.cs", label="Assert.NotNull(result.Value.Single(\r\n                a => a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value))", span="39-42"];
m18_5 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="ResourceKeys.TimeSpanHumanize.cs", label="Exit CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="16-16"];
m18_8 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="ResourceKeys.TimeSpanHumanize.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63"];
m18_14 [cluster="Unk.MapValues", file="ResourceKeys.TimeSpanHumanize.cs", label="Entry Unk.MapValues", span=""];
m18_12 [cluster="Unk.Create", file="ResourceKeys.TimeSpanHumanize.cs", label="Entry Unk.Create", span=""];
m18_7 [cluster="OptionSpecification.cstr", file="ResourceKeys.TimeSpanHumanize.cs", label="Entry OptionSpecification.cstr", span=""];
m18_10 [cluster="System.Type.GetProperties()", file="ResourceKeys.TimeSpanHumanize.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m18_19 [cluster="string.Equals(string, System.StringComparison)", file="ResourceKeys.TimeSpanHumanize.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m18_28 [cluster="lambda expression", file="ResourceKeys.TimeSpanHumanize.cs", label="Entry lambda expression", span="40-42"];
m18_16 [cluster="lambda expression", file="ResourceKeys.TimeSpanHumanize.cs", label="Entry lambda expression", span="27-27"];
m18_20 [cluster="lambda expression", file="ResourceKeys.TimeSpanHumanize.cs", label="Entry lambda expression", span="33-33"];
m18_24 [cluster="lambda expression", file="ResourceKeys.TimeSpanHumanize.cs", label="Entry lambda expression", span="35-35"];
m18_17 [cluster="lambda expression", file="ResourceKeys.TimeSpanHumanize.cs", label="p.Name.Equals(''BoolValue'', StringComparison.Ordinal)", span="27-27"];
m18_18 [cluster="lambda expression", file="ResourceKeys.TimeSpanHumanize.cs", label="Exit lambda expression", span="27-27"];
m18_21 [cluster="lambda expression", file="ResourceKeys.TimeSpanHumanize.cs", label="pt.Specification.IsOption()", span="33-33"];
m18_22 [cluster="lambda expression", file="ResourceKeys.TimeSpanHumanize.cs", label="Exit lambda expression", span="33-33"];
m18_25 [cluster="lambda expression", file="ResourceKeys.TimeSpanHumanize.cs", label="TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture)", span="35-35"];
m18_26 [cluster="lambda expression", file="ResourceKeys.TimeSpanHumanize.cs", label="Exit lambda expression", span="35-35"];
m18_29 [cluster="lambda expression", file="ResourceKeys.TimeSpanHumanize.cs", label="a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value", span="40-42"];
m18_30 [cluster="lambda expression", file="ResourceKeys.TimeSpanHumanize.cs", label="Exit lambda expression", span="40-42"];
m18_13 [cluster="Unk.Where", file="ResourceKeys.TimeSpanHumanize.cs", label="Entry Unk.Where", span=""];
m18_6 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="ResourceKeys.TimeSpanHumanize.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m19_11 [cluster="Unk.NotNull", file="ResourceKeyTests.cs", label="Entry Unk.NotNull", span=""];
m19_7 [cluster="Humanizer.Tests.Localisation.DynamicResourceKeys.ResourceKeyTests.DateHumanizeKeysExistence(string, string)", file="ResourceKeyTests.cs", label="Entry Humanizer.Tests.Localisation.DynamicResourceKeys.ResourceKeyTests.DateHumanizeKeysExistence(string, string)", span="26-26"];
m19_8 [cluster="Humanizer.Tests.Localisation.DynamicResourceKeys.ResourceKeyTests.DateHumanizeKeysExistence(string, string)", file="ResourceKeyTests.cs", label="Assert.NotNull(Resources.GetResource(generatedResourceKey))", span="28-28"];
m19_9 [cluster="Humanizer.Tests.Localisation.DynamicResourceKeys.ResourceKeyTests.DateHumanizeKeysExistence(string, string)", file="ResourceKeyTests.cs", label="Exit Humanizer.Tests.Localisation.DynamicResourceKeys.ResourceKeyTests.DateHumanizeKeysExistence(string, string)", span="26-26"];
m19_10 [cluster="Humanizer.Localisation.Resources.GetResource(string)", file="ResourceKeyTests.cs", label="Entry Humanizer.Localisation.Resources.GetResource(string)", span="16-16"];
m19_3 [cluster="Unk.Equal", file="ResourceKeyTests.cs", label="Entry Unk.Equal", span=""];
m19_4 [cluster="Humanizer.Tests.Localisation.DynamicResourceKeys.ResourceKeyTests.TimeSpanHumanizeKeysGeneration(string, string)", file="ResourceKeyTests.cs", label="Entry Humanizer.Tests.Localisation.DynamicResourceKeys.ResourceKeyTests.TimeSpanHumanizeKeysGeneration(string, string)", span="19-19"];
m19_5 [cluster="Humanizer.Tests.Localisation.DynamicResourceKeys.ResourceKeyTests.TimeSpanHumanizeKeysGeneration(string, string)", file="ResourceKeyTests.cs", label="Assert.Equal(expected, actual)", span="21-21"];
m19_6 [cluster="Humanizer.Tests.Localisation.DynamicResourceKeys.ResourceKeyTests.TimeSpanHumanizeKeysGeneration(string, string)", file="ResourceKeyTests.cs", label="Exit Humanizer.Tests.Localisation.DynamicResourceKeys.ResourceKeyTests.TimeSpanHumanizeKeysGeneration(string, string)", span="19-19"];
m19_0 [cluster="Humanizer.Tests.Localisation.DynamicResourceKeys.ResourceKeyTests.DateHumanizeKeysGeneration(string, string)", file="ResourceKeyTests.cs", label="Entry Humanizer.Tests.Localisation.DynamicResourceKeys.ResourceKeyTests.DateHumanizeKeysGeneration(string, string)", span="12-12"];
m19_1 [cluster="Humanizer.Tests.Localisation.DynamicResourceKeys.ResourceKeyTests.DateHumanizeKeysGeneration(string, string)", file="ResourceKeyTests.cs", label="Assert.Equal(expected, actual)", span="14-14"];
m19_2 [cluster="Humanizer.Tests.Localisation.DynamicResourceKeys.ResourceKeyTests.DateHumanizeKeysGeneration(string, string)", file="ResourceKeyTests.cs", label="Exit Humanizer.Tests.Localisation.DynamicResourceKeys.ResourceKeyTests.DateHumanizeKeysGeneration(string, string)", span="12-12"];
m19_12 [cluster="Humanizer.Tests.Localisation.DynamicResourceKeys.ResourceKeyTests.TimeSpanHumanizeKeysExistence(string, string)", file="ResourceKeyTests.cs", label="Entry Humanizer.Tests.Localisation.DynamicResourceKeys.ResourceKeyTests.TimeSpanHumanizeKeysExistence(string, string)", span="33-33"];
m19_13 [cluster="Humanizer.Tests.Localisation.DynamicResourceKeys.ResourceKeyTests.TimeSpanHumanizeKeysExistence(string, string)", file="ResourceKeyTests.cs", label="Assert.NotNull(Resources.GetResource(generatedResourceKey))", span="35-35"];
m19_14 [cluster="Humanizer.Tests.Localisation.DynamicResourceKeys.ResourceKeyTests.TimeSpanHumanizeKeysExistence(string, string)", file="ResourceKeyTests.cs", label="Exit Humanizer.Tests.Localisation.DynamicResourceKeys.ResourceKeyTests.TimeSpanHumanizeKeysExistence(string, string)", span="33-33"];
m20_0 [cluster="Humanizer.Tests.RunnableInDebugOnlyAttribute.RunnableInDebugOnlyAttribute()", file="RunnableInDebugModeOnlyAttribute.cs", label="Entry Humanizer.Tests.RunnableInDebugOnlyAttribute.RunnableInDebugOnlyAttribute()", span="7-7"];
m20_1 [cluster="Humanizer.Tests.RunnableInDebugOnlyAttribute.RunnableInDebugOnlyAttribute()", color=red, community=0, file="RunnableInDebugModeOnlyAttribute.cs", label="0: !Debugger.IsAttached", span="9-9"];
m20_2 [cluster="Humanizer.Tests.RunnableInDebugOnlyAttribute.RunnableInDebugOnlyAttribute()", color=red, community=0, file="RunnableInDebugModeOnlyAttribute.cs", label="0: Skip = ''Only running in interactive mode.''", span="11-11"];
m20_3 [cluster="Humanizer.Tests.RunnableInDebugOnlyAttribute.RunnableInDebugOnlyAttribute()", file="RunnableInDebugModeOnlyAttribute.cs", label="Exit Humanizer.Tests.RunnableInDebugOnlyAttribute.RunnableInDebugOnlyAttribute()", span="7-7"];
m21_36 [cluster="CommandLine.Infrastructure.Maybe<T>.MatchJust(out T)", file="TimeSpanHumanizeExtensions.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.MatchJust(out T)", span="31-31"];
m21_0 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="TimeSpanHumanizeExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="11-11"];
m21_1 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", color=red, community=0, file="TimeSpanHumanizeExtensions.cs", label="0: return specification.Tag == SpecificationType.Option;", span="13-13"];
m21_2 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="TimeSpanHumanizeExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="11-11"];
m21_16 [cluster="Unk.Any", file="TimeSpanHumanizeExtensions.cs", label="Entry Unk.Any", span=""];
m21_21 [cluster="System.Func<T, TResult>.Invoke(T)", file="TimeSpanHumanizeExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m21_22 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="TimeSpanHumanizeExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", span="51-51"];
m21_23 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", color=red, community=0, file="TimeSpanHumanizeExtensions.cs", label="0: specification.ConversionType.ToDescriptorKind()", span="53-53"];
m21_29 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", color=red, community=0, file="TimeSpanHumanizeExtensions.cs", label="0: specification.Min.MatchJust(out min)\r\n                        && specification.Max.MatchJust(out max)", span="60-61"];
m21_24 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", color=red, community=0, file="TimeSpanHumanizeExtensions.cs", label="0: TypeDescriptorKind.Scalar", span="55-55"];
m21_26 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", color=red, community=0, file="TimeSpanHumanizeExtensions.cs", label="0: TypeDescriptorKind.Sequence", span="57-57"];
m21_25 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", color=red, community=0, file="TimeSpanHumanizeExtensions.cs", label="0: return Maybe.Just(1);", span="56-56"];
m21_27 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", color=red, community=0, file="TimeSpanHumanizeExtensions.cs", label="0: int min", span="58-58"];
m21_28 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", color=red, community=0, file="TimeSpanHumanizeExtensions.cs", label="0: int max", span="59-59"];
m21_30 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", color=red, community=0, file="TimeSpanHumanizeExtensions.cs", label="0: min >= 0 && max >= 0", span="63-63"];
m21_32 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", color=red, community=0, file="TimeSpanHumanizeExtensions.cs", label="0: return Maybe.Nothing<int>();", span="71-71"];
m21_31 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", color=red, community=0, file="TimeSpanHumanizeExtensions.cs", label="0: return Maybe.Just(max);", span="65-65"];
m21_33 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="TimeSpanHumanizeExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", span="51-51"];
m21_3 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="TimeSpanHumanizeExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="16-16"];
m21_4 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", color=red, community=0, file="TimeSpanHumanizeExtensions.cs", label="0: return specification.Tag == SpecificationType.Value;", span="18-18"];
m21_5 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="TimeSpanHumanizeExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="16-16"];
m21_35 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="TimeSpanHumanizeExtensions.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="68-68"];
m21_37 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="TimeSpanHumanizeExtensions.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63"];
m21_6 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", file="TimeSpanHumanizeExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", span="21-21"];
m21_7 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", color=red, community=0, file="TimeSpanHumanizeExtensions.cs", label="0: return new OptionSpecification(\r\n                specification.ShortName,\r\n                newLongName,\r\n                specification.Required,\r\n                specification.SetName,\r\n                specification.Min,\r\n                specification.Max,\r\n                specification.Separator,\r\n                specification.DefaultValue,\r\n                specification.ConversionType,\r\n                specification.HelpText,\r\n                specification.MetaValue,\r\n                specification.EnumValues);", span="23-35"];
m21_8 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", file="TimeSpanHumanizeExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", span="21-21"];
m21_9 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<int>, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="TimeSpanHumanizeExtensions.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<int>, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="17-17"];
m21_34 [cluster="System.Type.ToDescriptorKind()", file="TimeSpanHumanizeExtensions.cs", label="Entry System.Type.ToDescriptorKind()", span="22-22"];
m21_17 [cluster="System.ApplicationException.ApplicationException(string)", file="TimeSpanHumanizeExtensions.cs", label="Entry System.ApplicationException.ApplicationException(string)", span="0-0"];
m21_18 [cluster="lambda expression", file="TimeSpanHumanizeExtensions.cs", label="Entry lambda expression", span="42-42"];
m21_19 [cluster="lambda expression", color=red, community=0, file="TimeSpanHumanizeExtensions.cs", label="0: guard.Item1(spec)", span="42-42"];
m21_20 [cluster="lambda expression", file="TimeSpanHumanizeExtensions.cs", label="Exit lambda expression", span="42-42"];
m21_10 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="TimeSpanHumanizeExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="38-38"];
m21_11 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", color=red, community=0, file="TimeSpanHumanizeExtensions.cs", label="0: guardsLookup", span="40-40"];
m21_12 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", color=red, community=0, file="TimeSpanHumanizeExtensions.cs", label="0: specifications.Any(spec => guard.Item1(spec))", span="42-42"];
m21_14 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", color=red, community=0, file="TimeSpanHumanizeExtensions.cs", label="0: return specifications;", span="48-48"];
m21_13 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", color=red, community=0, file="TimeSpanHumanizeExtensions.cs", label="0: throw new ApplicationException(guard.Item2);", span="44-44"];
m21_15 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="TimeSpanHumanizeExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="38-38"];
m21_38 [file="TimeSpanHumanizeExtensions.cs", label=guard, span=""];
m24_8 [cluster="System.Collections.Generic.List<T>.List()", file="TimeUnitTense.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m24_6 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="TimeUnitTense.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="68-68"];
m24_10 [cluster="Unk.ShouldBeEquivalentTo", file="TimeUnitTense.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m24_0 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="TimeUnitTense.cs", label="Entry CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", span="14-14"];
m24_1 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="TimeUnitTense.cs", label="var expected = Maybe.Just(''.'')", span="17-17"];
m24_2 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="TimeUnitTense.cs", label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, -1, -1, '.', null, typeof(IEnumerable<string>), string.Empty, string.Empty, new List<string>())}", span="18-19"];
m24_4 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="TimeUnitTense.cs", label="expected.ShouldBeEquivalentTo(result)", span="25-25"];
m24_3 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="TimeUnitTense.cs", label="var result = NameLookup.WithSeparator(''string-seq'', specs, StringComparer.InvariantCulture)", span="22-22"];
m24_5 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="TimeUnitTense.cs", label="Exit CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", span="14-14"];
m24_7 [cluster="OptionSpecification.cstr", file="TimeUnitTense.cs", label="Entry OptionSpecification.cstr", span=""];
m24_9 [cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TimeUnitTense.cs", label="Entry CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
n9 -> n1  [color=darkseagreen4, key=1, label="Humanizer.Tests.AmbientCulture", style=dashed];
n9 -> n7  [color=darkseagreen4, key=1, label="Humanizer.Tests.AmbientCulture", style=dashed];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
n0 -> d2  [color=green, key=1, label="System.Globalization.CultureInfo", style=dashed];
n1 -> n2  [key=0, style=solid];
n1 -> d2  [color=green, key=0, style=solid];
n2 -> n3  [key=0, style=solid];
n3 -> n0  [color=blue, key=0, style=bold];
n4 -> n5  [key=0, style=solid];
n5 -> n4  [color=blue, key=0, style=bold];
n6 -> n7  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n8 -> n6  [color=blue, key=0, style=bold];
d2 -> n3  [color=green, key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_14  [key=2, style=dotted];
m1_13 -> m1_11  [color=blue, key=0, style=bold];
m1_27 -> m1_28  [key=0, style=solid];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_30  [key=2, style=dotted];
m1_28 -> m1_28  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_29 -> m1_27  [color=blue, key=0, style=bold];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_3  [key=2, style=dotted];
m1_6 -> m1_4  [color=blue, key=0, style=bold];
m1_23 -> m1_24  [key=0, style=solid];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_26  [key=2, style=dotted];
m1_25 -> m1_23  [color=blue, key=0, style=bold];
m1_19 -> m1_20  [key=0, style=solid];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_22  [key=2, style=dotted];
m1_21 -> m1_19  [color=blue, key=0, style=bold];
m1_15 -> m1_16  [key=0, style=solid];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_18  [key=2, style=dotted];
m1_17 -> m1_15  [color=blue, key=0, style=bold];
m1_7 -> m1_8  [color=red, key=0, style=solid];
m1_8 -> m1_9  [color=red, key=0, style=solid];
m1_8 -> m1_10  [color=red, key=2, style=dotted];
m1_9 -> m1_7  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_4  [color=darkseagreen4, key=1, label="System.DateTime?", style=dashed];
m2_0 -> m2_5  [color=darkseagreen4, key=1, label=bool, style=dashed];
m2_0 -> m2_7  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m2_0 -> m2_9  [color=red, key=1, label="System.DateTime", style=dashed];
m2_0 -> m2_10  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m2_0 -> m2_28  [color=red, key=1, label="System.DateTime", style=dashed];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=0, style=solid];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_6  [color=darkseagreen4, key=1, label=comparisonBase, style=dashed];
m2_4 -> m2_7  [color=darkseagreen4, key=1, label=comparisonBase, style=dashed];
m2_4 -> m2_9  [color=red, key=1, label=comparisonBase, style=dashed];
m2_4 -> m2_10  [color=darkseagreen4, key=1, label=comparisonBase, style=dashed];
m2_4 -> m2_28  [color=red, key=1, label=comparisonBase, style=dashed];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_7  [key=0, style=solid];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_9  [color=red, key=0, style=solid];
m2_7 -> m2_42  [key=2, style=dotted];
m2_7 -> m2_43  [key=2, style=dotted];
m2_9 -> m2_10  [color=red, key=0, style=solid];
m2_9 -> m2_12  [color=red, key=1, label=isFuture, style=dashed];
m2_9 -> m2_16  [color=red, key=1, label=isFuture, style=dashed];
m2_9 -> m2_18  [color=red, key=1, label=isFuture, style=dashed];
m2_9 -> m2_20  [color=red, key=1, label=isFuture, style=dashed];
m2_9 -> m2_22  [color=red, key=1, label=isFuture, style=dashed];
m2_9 -> m2_24  [color=red, key=1, label=isFuture, style=dashed];
m2_9 -> m2_26  [color=red, key=1, label=isFuture, style=dashed];
m2_9 -> m2_28  [color=red, key=1, label=isFuture, style=dashed];
m2_9 -> m2_29  [color=red, key=1, label=isFuture, style=dashed];
m2_9 -> m2_30  [color=red, key=1, label=isFuture, style=dashed];
m2_9 -> m2_33  [color=red, key=1, label=isFuture, style=dashed];
m2_9 -> m2_37  [color=red, key=1, label=isFuture, style=dashed];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_45  [key=2, style=dotted];
m2_10 -> m2_46  [key=2, style=dotted];
m2_28 -> m2_29  [color=red, key=0, style=solid];
m2_28 -> m2_30  [color=red, key=0, style=solid];
m2_28 -> m2_63  [color=red, key=2, style=dotted];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_4  [color=darkseagreen4, key=1, label="System.DateTime?", style=dashed];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_8  [color=darkseagreen4, key=1, label=formatter, style=dashed];
m2_3 -> m2_13  [color=red, key=1, label=formatter, style=dashed];
m2_3 -> m2_14  [color=red, key=1, label=formatter, style=dashed];
m2_3 -> m2_16  [color=red, key=1, label=formatter, style=dashed];
m2_3 -> m2_18  [color=red, key=1, label=formatter, style=dashed];
m2_3 -> m2_20  [color=red, key=1, label=formatter, style=dashed];
m2_3 -> m2_22  [color=red, key=1, label=formatter, style=dashed];
m2_3 -> m2_24  [color=red, key=1, label=formatter, style=dashed];
m2_3 -> m2_26  [color=red, key=1, label=formatter, style=dashed];
m2_3 -> m2_29  [color=red, key=1, label=formatter, style=dashed];
m2_3 -> m2_30  [color=red, key=1, label=formatter, style=dashed];
m2_3 -> m2_34  [color=red, key=1, label=formatter, style=dashed];
m2_3 -> m2_35  [color=red, key=1, label=formatter, style=dashed];
m2_3 -> m2_38  [color=red, key=1, label=formatter, style=dashed];
m2_3 -> m2_39  [color=red, key=1, label=formatter, style=dashed];
m2_8 -> m2_40  [key=0, style=solid];
m2_8 -> m2_44  [key=2, style=dotted];
m2_13 -> m2_40  [color=red, key=0, style=solid];
m2_13 -> m2_47  [color=red, key=2, style=dotted];
m2_13 -> m2_48  [color=red, key=2, style=dotted];
m2_13 -> m2_13  [color=red, key=1, label=ts, style=dashed];
m2_13 -> m2_14  [color=red, key=1, label=ts, style=dashed];
m2_14 -> m2_40  [color=red, key=0, style=solid];
m2_14 -> m2_49  [color=red, key=2, style=dotted];
m2_14 -> m2_50  [color=red, key=2, style=dotted];
m2_14 -> m2_14  [color=red, key=1, label=ts, style=dashed];
m2_14 -> m2_15  [color=red, key=1, label=ts, style=dashed];
m2_16 -> m2_40  [color=red, key=0, style=solid];
m2_16 -> m2_51  [color=red, key=2, style=dotted];
m2_16 -> m2_52  [color=red, key=2, style=dotted];
m2_18 -> m2_40  [color=red, key=0, style=solid];
m2_18 -> m2_53  [color=red, key=2, style=dotted];
m2_18 -> m2_54  [color=red, key=2, style=dotted];
m2_18 -> m2_18  [color=red, key=1, label=ts, style=dashed];
m2_18 -> m2_19  [color=red, key=1, label=ts, style=dashed];
m2_20 -> m2_40  [color=red, key=0, style=solid];
m2_20 -> m2_55  [color=red, key=2, style=dotted];
m2_20 -> m2_56  [color=red, key=2, style=dotted];
m2_22 -> m2_40  [color=red, key=0, style=solid];
m2_22 -> m2_57  [color=red, key=2, style=dotted];
m2_22 -> m2_58  [color=red, key=2, style=dotted];
m2_22 -> m2_22  [color=red, key=1, label=ts, style=dashed];
m2_22 -> m2_23  [color=red, key=1, label=ts, style=dashed];
m2_24 -> m2_40  [color=red, key=0, style=solid];
m2_24 -> m2_59  [color=red, key=2, style=dotted];
m2_24 -> m2_60  [color=red, key=2, style=dotted];
m2_26 -> m2_40  [color=red, key=0, style=solid];
m2_26 -> m2_61  [color=red, key=2, style=dotted];
m2_26 -> m2_62  [color=red, key=2, style=dotted];
m2_26 -> m2_26  [color=red, key=1, label=ts, style=dashed];
m2_26 -> m2_27  [color=red, key=1, label=ts, style=dashed];
m2_29 -> m2_40  [color=red, key=0, style=solid];
m2_29 -> m2_64  [color=red, key=2, style=dotted];
m2_29 -> m2_65  [color=red, key=2, style=dotted];
m2_30 -> m2_40  [color=red, key=0, style=solid];
m2_30 -> m2_61  [color=red, key=2, style=dotted];
m2_30 -> m2_62  [color=red, key=2, style=dotted];
m2_30 -> m2_30  [color=red, key=1, label=ts, style=dashed];
m2_30 -> m2_31  [color=red, key=1, label=ts, style=dashed];
m2_34 -> m2_40  [color=red, key=0, style=solid];
m2_34 -> m2_64  [color=red, key=2, style=dotted];
m2_34 -> m2_68  [color=red, key=2, style=dotted];
m2_35 -> m2_40  [color=red, key=0, style=solid];
m2_35 -> m2_65  [color=red, key=2, style=dotted];
m2_35 -> m2_69  [color=red, key=2, style=dotted];
m2_38 -> m2_40  [color=red, key=0, style=solid];
m2_38 -> m2_70  [color=red, key=2, style=dotted];
m2_38 -> m2_71  [color=red, key=2, style=dotted];
m2_39 -> m2_40  [color=red, key=0, style=solid];
m2_39 -> m2_72  [color=red, key=2, style=dotted];
m2_39 -> m2_73  [color=red, key=2, style=dotted];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_41  [key=2, style=dotted];
m2_6 -> m2_6  [color=darkseagreen4, key=1, label=comparisonBase, style=dashed];
m2_6 -> m2_9  [color=red, key=1, label=comparisonBase, style=dashed];
m2_6 -> m2_10  [color=darkseagreen4, key=1, label=comparisonBase, style=dashed];
m2_6 -> m2_28  [color=red, key=1, label=comparisonBase, style=dashed];
m2_12 -> m2_13  [color=red, key=0, style=solid];
m2_12 -> m2_14  [color=red, key=0, style=solid];
m2_33 -> m2_34  [color=red, key=0, style=solid];
m2_33 -> m2_35  [color=red, key=0, style=solid];
m2_37 -> m2_38  [color=red, key=0, style=solid];
m2_37 -> m2_39  [color=red, key=0, style=solid];
m2_11 -> m2_12  [color=red, key=0, style=solid];
m2_11 -> m2_15  [key=0, style=solid];
m2_11 -> m2_11  [color=darkseagreen4, key=1, label=ts, style=dashed];
m2_11 -> m2_13  [color=red, key=1, label=ts, style=dashed];
m2_11 -> m2_14  [color=red, key=1, label=ts, style=dashed];
m2_15 -> m2_16  [color=red, key=0, style=solid];
m2_15 -> m2_17  [key=0, style=solid];
m2_15 -> m2_15  [color=darkseagreen4, key=1, label=ts, style=dashed];
m2_17 -> m2_18  [color=red, key=0, style=solid];
m2_17 -> m2_19  [key=0, style=solid];
m2_17 -> m2_17  [color=darkseagreen4, key=1, label=ts, style=dashed];
m2_19 -> m2_20  [color=red, key=0, style=solid];
m2_19 -> m2_21  [key=0, style=solid];
m2_19 -> m2_19  [color=darkseagreen4, key=1, label=ts, style=dashed];
m2_21 -> m2_22  [color=red, key=0, style=solid];
m2_21 -> m2_23  [key=0, style=solid];
m2_21 -> m2_21  [color=darkseagreen4, key=1, label=ts, style=dashed];
m2_23 -> m2_24  [color=red, key=0, style=solid];
m2_23 -> m2_25  [key=0, style=solid];
m2_23 -> m2_23  [color=darkseagreen4, key=1, label=ts, style=dashed];
m2_25 -> m2_26  [color=red, key=0, style=solid];
m2_25 -> m2_27  [key=0, style=solid];
m2_25 -> m2_25  [color=darkseagreen4, key=1, label=ts, style=dashed];
m2_27 -> m2_28  [color=red, key=0, style=solid];
m2_27 -> m2_31  [key=0, style=solid];
m2_27 -> m2_27  [color=darkseagreen4, key=1, label=ts, style=dashed];
m2_27 -> m2_30  [color=red, key=1, label=ts, style=dashed];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_36  [key=0, style=solid];
m2_31 -> m2_31  [color=darkseagreen4, key=1, label=ts, style=dashed];
m2_32 -> m2_33  [color=red, key=0, style=solid];
m2_32 -> m2_66  [key=2, style=dotted];
m2_32 -> m2_67  [key=2, style=dotted];
m2_32 -> m2_32  [color=darkseagreen4, key=1, label=ts, style=dashed];
m2_32 -> m2_34  [color=red, key=1, label=months, style=dashed];
m2_32 -> m2_35  [color=red, key=1, label=months, style=dashed];
m2_32 -> m2_36  [color=darkseagreen4, key=1, label=ts, style=dashed];
m2_36 -> m2_37  [color=red, key=0, style=solid];
m2_36 -> m2_66  [key=2, style=dotted];
m2_36 -> m2_67  [key=2, style=dotted];
m2_36 -> m2_36  [color=darkseagreen4, key=1, label=ts, style=dashed];
m2_36 -> m2_38  [color=red, key=1, label=years, style=dashed];
m2_36 -> m2_39  [color=red, key=1, label=years, style=dashed];
m2_40 -> m2_0  [color=blue, key=0, style=bold];
m4_3 -> m4_4  [color=red, key=0, style=solid];
m4_4 -> m4_5  [color=red, key=0, style=solid];
m4_5 -> m4_3  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [color=red, key=0, style=solid];
m4_1 -> m4_2  [color=red, key=0, style=solid];
m4_1 -> m4_3  [color=red, key=2, style=dotted];
m4_2 -> m4_0  [color=blue, key=0, style=bold];
m4_6 -> m4_1  [color=red, key=1, label="Humanizer.Localisation.Ordinalizers.DefaultOrdinalizer", style=dashed];
m6_16 -> m6_14  [color=blue, key=0, style=bold];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_5  [color=darkseagreen4, key=1, label="System.Enum", style=dashed];
m6_3 -> m6_10  [color=darkseagreen4, key=1, label="System.Enum", style=dashed];
m6_3 -> m6_7  [color=darkorchid, key=3, label="method methodReturn string Humanize", style=bold];
m6_3 -> m6_31  [color=darkorchid, key=3, label="Parameter variable System.Enum input", style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=2, style=dotted];
m6_1 -> m6_4  [key=2, style=dotted];
m6_2 -> m6_0  [color=blue, key=0, style=bold];
m6_15 -> m6_17  [key=0, style=solid];
m6_15 -> m6_24  [color=darkorchid, key=3, label="method methodReturn string GetCustomDescription", style=bold];
m6_15 -> m6_16  [color=red, key=0, style=solid];
m6_15 -> m6_3  [color=red, key=2, style=dotted];
m6_15 -> m6_4  [color=red, key=2, style=dotted];
m6_20 -> m6_21  [color=green, key=0, style=solid];
m6_20 -> m6_18  [color=green, key=0, style=solid];
m6_19 -> m6_20  [color=green, key=0, style=solid];
m6_19 -> m6_21  [color=green, key=1, label=attrType, style=dashed];
m6_19 -> m6_12  [key=2, style=dotted];
m6_19 -> m6_17  [color=blue, key=0, style=bold];
m6_21 -> m6_22  [color=green, key=0, style=solid];
m6_21 -> m6_27  [color=green, key=2, style=dotted];
m6_21 -> m6_28  [color=green, key=2, style=dotted];
m6_21 -> m6_23  [color=green, key=1, label=descriptionProperty, style=dashed];
m6_21 -> m6_3  [key=2, style=dotted];
m6_21 -> m6_4  [key=2, style=dotted];
m6_18 -> m6_19  [color=red, key=0, style=solid];
m6_18 -> m6_24  [key=0, style=solid];
m6_18 -> m6_23  [color=darkseagreen4, key=1, label=attr, style=dashed];
m6_18 -> m6_3  [color=red, key=2, style=dotted];
m6_18 -> m6_4  [color=red, key=2, style=dotted];
m6_22 -> m6_18  [key=0, style=solid];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_20  [color=blue, key=0, style=bold];
m6_23 -> m6_25  [key=0, style=solid];
m6_23 -> m6_29  [key=2, style=dotted];
m6_23 -> m6_30  [key=2, style=dotted];
m6_17 -> m6_18  [color=red, key=0, style=solid];
m6_17 -> m6_26  [key=2, style=dotted];
m6_24 -> m6_25  [key=0, style=solid];
m6_25 -> m6_15  [color=blue, key=0, style=bold];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_10  [key=0, style=solid];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_3  [key=2, style=dotted];
m6_9 -> m6_4  [key=2, style=dotted];
m6_9 -> m6_11  [key=0, style=solid];
m6_10 -> m6_8  [color=blue, key=0, style=bold];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_13  [key=2, style=dotted];
m6_10 -> m6_16  [key=2, style=dotted];
m6_4 -> m6_12  [key=2, style=dotted];
m6_4 -> m6_5  [key=0, style=solid];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_3  [key=2, style=dotted];
m6_12 -> m6_4  [key=2, style=dotted];
m6_13 -> m6_11  [color=blue, key=0, style=bold];
m6_14 -> m6_15  [color=red, key=0, style=solid];
m6_31 -> m6_32  [key=0, style=solid];
m6_31 -> m6_33  [color=darkseagreen4, key=1, label="Humanizer.LetterCasing", style=dashed];
m6_32 -> m6_3  [key=2, style=dotted];
m6_32 -> m6_33  [key=0, style=solid];
m6_33 -> m6_34  [key=0, style=solid];
m6_33 -> m6_35  [key=2, style=dotted];
m6_34 -> m6_31  [color=blue, key=0, style=bold];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_13  [key=2, style=dotted];
m6_5 -> m6_14  [key=2, style=dotted];
m6_5 -> m6_7  [color=darkseagreen4, key=1, label=memInfo, style=dashed];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_3  [key=2, style=dotted];
m6_6 -> m6_4  [key=2, style=dotted];
m6_6 -> m6_10  [key=0, style=solid];
m6_7 -> m6_5  [color=blue, key=0, style=bold];
m6_7 -> m6_15  [key=2, style=dotted];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_9  [color=darkseagreen4, key=1, label=customDescription, style=dashed];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_3  [color=blue, key=0, style=bold];
m7_4 -> m7_17  [key=0, style=solid];
m7_4 -> m7_18  [color=crimson, key=0, style=bold];
m7_4 -> m7_22  [color=crimson, key=0, style=bold];
m7_4 -> m7_23  [color=crimson, key=0, style=bold];
m7_4 -> m7_26  [color=crimson, key=0, style=bold];
m7_4 -> m7_27  [color=crimson, key=0, style=bold];
m7_4 -> m7_28  [color=crimson, key=0, style=bold];
m7_4 -> m7_30  [color=crimson, key=0, style=bold];
m7_4 -> m7_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m7_4 -> m7_20  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m7_4 -> m7_24  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m7_4 -> m7_25  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m7_4 -> m7_29  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m7_17 -> m7_18  [key=0, style=solid];
m7_17 -> m7_19  [key=0, style=solid];
m7_17 -> m7_32  [key=2, style=dotted];
m7_17 -> m7_15  [color=blue, key=0, style=bold];
m7_18 -> m7_19  [key=0, style=solid];
m7_22 -> m7_23  [key=0, style=solid];
m7_22 -> m7_38  [key=2, style=dotted];
m7_22 -> m7_39  [key=2, style=dotted];
m7_23 -> m7_24  [key=0, style=solid];
m7_26 -> m7_27  [key=0, style=solid];
m7_26 -> m7_46  [key=2, style=dotted];
m7_26 -> m7_47  [key=2, style=dotted];
m7_26 -> m7_39  [key=2, style=dotted];
m7_27 -> m7_28  [key=0, style=solid];
m7_28 -> m7_29  [key=0, style=solid];
m7_28 -> m7_48  [key=2, style=dotted];
m7_28 -> m7_49  [key=2, style=dotted];
m7_28 -> m7_50  [key=2, style=dotted];
m7_28 -> m7_47  [key=2, style=dotted];
m7_28 -> m7_39  [key=2, style=dotted];
m7_28 -> m7_36  [key=2, style=dotted];
m7_28 -> m7_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_30 -> m7_29  [key=0, style=solid];
m7_19 -> m7_20  [key=0, style=solid];
m7_19 -> m7_33  [key=2, style=dotted];
m7_19 -> m7_22  [color=darkseagreen4, key=1, label=pt, style=dashed];
m7_19 -> m7_25  [color=darkseagreen4, key=1, label=pt, style=dashed];
m7_19 -> m7_26  [color=darkseagreen4, key=1, label=pt, style=dashed];
m7_19 -> m7_28  [color=darkseagreen4, key=1, label=pt, style=dashed];
m7_19 -> m7_59  [color=darkseagreen4, key=1, label=pt, style=dashed];
m7_20 -> m7_21  [key=0, style=solid];
m7_20 -> m7_34  [key=2, style=dotted];
m7_20 -> m7_35  [key=2, style=dotted];
m7_20 -> m7_36  [key=2, style=dotted];
m7_20 -> m7_37  [key=2, style=dotted];
m7_20 -> m7_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_20 -> m7_25  [color=darkseagreen4, key=1, label=taken, style=dashed];
m7_20 -> m7_28  [color=darkseagreen4, key=1, label=taken, style=dashed];
m7_20 -> m7_29  [color=darkseagreen4, key=1, label=taken, style=dashed];
m7_24 -> m7_25  [key=0, style=solid];
m7_24 -> m7_40  [key=2, style=dotted];
m7_24 -> m7_41  [key=2, style=dotted];
m7_24 -> m7_42  [key=2, style=dotted];
m7_24 -> m7_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_25 -> m7_26  [key=0, style=solid];
m7_25 -> m7_28  [key=0, style=solid];
m7_25 -> m7_43  [key=2, style=dotted];
m7_25 -> m7_44  [key=2, style=dotted];
m7_25 -> m7_35  [key=2, style=dotted];
m7_25 -> m7_40  [key=2, style=dotted];
m7_25 -> m7_45  [key=2, style=dotted];
m7_29 -> m7_30  [key=0, style=solid];
m7_29 -> m7_31  [key=0, style=solid];
m7_29 -> m7_40  [key=2, style=dotted];
m7_29 -> m7_35  [key=2, style=dotted];
m7_29 -> m7_4  [key=2, style=dotted];
m7_21 -> m7_22  [key=0, style=solid];
m7_21 -> m7_24  [key=0, style=solid];
m7_21 -> m7_32  [key=2, style=dotted];
m7_31 -> m7_4  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [color=green, key=0, style=solid];
m7_1 -> m7_2  [color=green, key=0, style=solid];
m7_1 -> m7_4  [color=green, key=2, style=dotted];
m7_1 -> m7_3  [color=green, key=2, style=dotted];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_5  [key=2, style=dotted];
m7_2 -> m7_6  [key=2, style=dotted];
m7_2 -> m7_7  [key=2, style=dotted];
m7_2 -> m7_8  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_2 -> m7_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_2 -> m7_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_2 -> m7_0  [color=blue, key=0, style=bold];
m7_3 -> m7_0  [color=blue, key=0, style=bold];
m7_11 -> m7_12  [key=0, style=solid];
m7_38 -> m7_63  [key=0, style=solid];
m7_63 -> m7_64  [key=0, style=solid];
m7_63 -> m7_43  [key=2, style=dotted];
m7_63 -> m7_46  [key=2, style=dotted];
m7_63 -> m7_47  [key=2, style=dotted];
m7_63 -> m7_62  [key=2, style=dotted];
m7_64 -> m7_38  [color=blue, key=0, style=bold];
m7_6 -> m7_7  [color=green, key=0, style=solid];
m7_6 -> m7_3  [color=green, key=2, style=dotted];
m7_6 -> m7_4  [color=green, key=2, style=dotted];
m7_12 -> m7_13  [key=0, style=solid];
m7_13 -> m7_4  [key=2, style=dotted];
m7_13 -> m7_11  [key=2, style=dotted];
m7_13 -> m7_14  [key=0, style=solid];
m7_14 -> m7_12  [color=blue, key=0, style=bold];
m7_14 -> m7_15  [key=0, style=solid];
m7_5 -> m7_6  [color=green, key=0, style=solid];
m7_7 -> m7_5  [color=blue, key=0, style=bold];
m7_58 -> m7_59  [key=0, style=solid];
m7_8 -> m7_9  [color=green, key=0, style=solid];
m7_9 -> m7_10  [color=green, key=0, style=solid];
m7_9 -> m7_11  [color=green, key=2, style=dotted];
m7_9 -> m7_4  [color=green, key=2, style=dotted];
m7_10 -> m7_8  [color=blue, key=0, style=bold];
m7_15 -> m7_16  [key=0, style=solid];
m7_16 -> m7_14  [color=blue, key=0, style=bold];
m7_16 -> m7_3  [key=2, style=dotted];
m7_16 -> m7_4  [key=2, style=dotted];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_18  [key=2, style=dotted];
m7_59 -> m7_60  [key=0, style=solid];
m7_59 -> m7_47  [key=2, style=dotted];
m7_59 -> m7_61  [key=2, style=dotted];
m7_59 -> m7_62  [key=2, style=dotted];
m7_59 -> m7_39  [key=2, style=dotted];
m7_51 -> m7_52  [key=0, style=solid];
m7_54 -> m7_55  [key=0, style=solid];
m7_52 -> m7_53  [key=0, style=solid];
m7_53 -> m7_51  [color=blue, key=0, style=bold];
m7_55 -> m7_56  [key=0, style=solid];
m7_55 -> m7_57  [key=2, style=dotted];
m7_56 -> m7_54  [color=blue, key=0, style=bold];
m7_60 -> m7_58  [color=blue, key=0, style=bold];
m7_65 -> m7_59  [color=darkseagreen4, key=1, label=pt, style=dashed];
m12_16 -> m12_17  [key=0, style=solid];
m12_17 -> m12_16  [color=blue, key=0, style=bold];
m12_6 -> m12_7  [key=0, style=solid];
m12_7 -> m12_6  [color=blue, key=0, style=bold];
m12_22 -> m12_23  [key=0, style=solid];
m12_23 -> m12_22  [color=blue, key=0, style=bold];
m12_8 -> m12_9  [key=0, style=solid];
m12_9 -> m12_8  [color=blue, key=0, style=bold];
m12_2 -> m12_3  [key=0, style=solid];
m12_3 -> m12_2  [color=blue, key=0, style=bold];
m12_12 -> m12_13  [key=0, style=solid];
m12_13 -> m12_12  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_0  [color=blue, key=0, style=bold];
m12_26 -> m12_27  [key=0, style=solid];
m12_27 -> m12_26  [color=blue, key=0, style=bold];
m12_10 -> m12_11  [key=0, style=solid];
m12_11 -> m12_10  [color=blue, key=0, style=bold];
m12_14 -> m12_15  [key=0, style=solid];
m12_15 -> m12_14  [color=blue, key=0, style=bold];
m12_20 -> m12_21  [key=0, style=solid];
m12_21 -> m12_20  [color=blue, key=0, style=bold];
m12_4 -> m12_5  [key=0, style=solid];
m12_5 -> m12_4  [color=blue, key=0, style=bold];
m12_24 -> m12_25  [key=0, style=solid];
m12_25 -> m12_24  [color=blue, key=0, style=bold];
m12_18 -> m12_19  [key=0, style=solid];
m12_19 -> m12_18  [color=blue, key=0, style=bold];
m14_26 -> m14_27  [key=0, style=solid];
m14_27 -> m14_28  [key=0, style=solid];
m14_27 -> m14_3  [key=2, style=dotted];
m14_27 -> m14_4  [key=2, style=dotted];
m14_27 -> m14_5  [key=2, style=dotted];
m14_28 -> m14_26  [color=blue, key=0, style=bold];
m14_18 -> m14_19  [key=0, style=solid];
m14_18 -> m14_20  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_19 -> m14_20  [key=0, style=solid];
m14_20 -> m14_21  [key=0, style=solid];
m14_20 -> m14_12  [key=2, style=dotted];
m14_20 -> m14_22  [color=darkseagreen4, key=1, label=resultByteSize, style=dashed];
m14_21 -> m14_22  [key=0, style=solid];
m14_21 -> m14_24  [key=2, style=dotted];
m14_22 -> m14_23  [key=0, style=solid];
m14_22 -> m14_25  [key=2, style=dotted];
m14_22 -> m14_5  [key=2, style=dotted];
m14_23 -> m14_18  [color=blue, key=0, style=bold];
m14_48 -> m14_49  [key=0, style=solid];
m14_49 -> m14_50  [key=0, style=solid];
m14_49 -> m14_51  [key=2, style=dotted];
m14_49 -> m14_4  [key=2, style=dotted];
m14_49 -> m14_5  [key=2, style=dotted];
m14_50 -> m14_48  [color=blue, key=0, style=bold];
m14_42 -> m14_43  [key=0, style=solid];
m14_43 -> m14_44  [key=0, style=solid];
m14_43 -> m14_32  [key=2, style=dotted];
m14_43 -> m14_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_44 -> m14_42  [color=blue, key=0, style=bold];
m14_29 -> m14_30  [key=0, style=solid];
m14_30 -> m14_31  [key=0, style=solid];
m14_30 -> m14_32  [key=2, style=dotted];
m14_30 -> m14_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_31 -> m14_29  [color=blue, key=0, style=bold];
m14_66 -> m14_67  [key=0, style=solid];
m14_67 -> m14_68  [key=0, style=solid];
m14_67 -> m14_69  [key=2, style=dotted];
m14_67 -> m14_4  [key=2, style=dotted];
m14_67 -> m14_5  [key=2, style=dotted];
m14_68 -> m14_66  [color=blue, key=0, style=bold];
m14_36 -> m14_37  [key=0, style=solid];
m14_37 -> m14_38  [key=0, style=solid];
m14_37 -> m14_32  [key=2, style=dotted];
m14_37 -> m14_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_38 -> m14_36  [color=blue, key=0, style=bold];
m14_59 -> m14_60  [key=0, style=solid];
m14_60 -> m14_61  [key=0, style=solid];
m14_60 -> m14_17  [key=2, style=dotted];
m14_60 -> m14_4  [key=2, style=dotted];
m14_60 -> m14_5  [key=2, style=dotted];
m14_61 -> m14_59  [color=blue, key=0, style=bold];
m14_56 -> m14_57  [key=0, style=solid];
m14_57 -> m14_58  [key=0, style=solid];
m14_57 -> m14_3  [key=2, style=dotted];
m14_57 -> m14_4  [key=2, style=dotted];
m14_57 -> m14_5  [key=2, style=dotted];
m14_58 -> m14_56  [color=blue, key=0, style=bold];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_3  [key=2, style=dotted];
m14_1 -> m14_4  [key=2, style=dotted];
m14_1 -> m14_5  [key=2, style=dotted];
m14_2 -> m14_0  [color=blue, key=0, style=bold];
m14_45 -> m14_46  [key=0, style=solid];
m14_33 -> m14_34  [key=0, style=solid];
m14_34 -> m14_35  [key=0, style=solid];
m14_34 -> m14_4  [key=2, style=dotted];
m14_35 -> m14_33  [color=blue, key=0, style=bold];
m14_39 -> m14_40  [key=0, style=solid];
m14_40 -> m14_41  [key=0, style=solid];
m14_40 -> m14_4  [key=2, style=dotted];
m14_41 -> m14_39  [color=blue, key=0, style=bold];
m14_46 -> m14_47  [key=0, style=solid];
m14_46 -> m14_4  [key=2, style=dotted];
m14_47 -> m14_45  [color=blue, key=0, style=bold];
m14_62 -> m14_63  [key=0, style=solid];
m14_63 -> m14_64  [key=0, style=solid];
m14_63 -> m14_65  [key=2, style=dotted];
m14_63 -> m14_4  [key=2, style=dotted];
m14_63 -> m14_5  [key=2, style=dotted];
m14_64 -> m14_62  [color=blue, key=0, style=bold];
m14_52 -> m14_53  [key=0, style=solid];
m14_53 -> m14_54  [key=0, style=solid];
m14_53 -> m14_55  [key=2, style=dotted];
m14_53 -> m14_4  [key=2, style=dotted];
m14_53 -> m14_5  [key=2, style=dotted];
m14_54 -> m14_52  [color=blue, key=0, style=bold];
m14_6 -> m14_7  [key=0, style=solid];
m14_7 -> m14_8  [key=0, style=solid];
m14_8 -> m14_9  [key=0, style=solid];
m14_8 -> m14_12  [key=2, style=dotted];
m14_8 -> m14_10  [color=darkseagreen4, key=1, label=resultByteSize, style=dashed];
m14_9 -> m14_10  [key=0, style=solid];
m14_9 -> m14_13  [key=2, style=dotted];
m14_10 -> m14_11  [key=0, style=solid];
m14_10 -> m14_3  [key=2, style=dotted];
m14_10 -> m14_5  [key=2, style=dotted];
m14_11 -> m14_6  [color=blue, key=0, style=bold];
m14_14 -> m14_15  [key=0, style=solid];
m14_15 -> m14_16  [key=0, style=solid];
m14_15 -> m14_17  [key=2, style=dotted];
m14_15 -> m14_4  [key=2, style=dotted];
m14_15 -> m14_5  [key=2, style=dotted];
m14_16 -> m14_14  [color=blue, key=0, style=bold];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_2  [key=0, style=solid];
m15_2 -> m15_3  [key=0, style=solid];
m15_2 -> m15_5  [key=2, style=dotted];
m15_3 -> m15_4  [key=0, style=solid];
m15_3 -> m15_6  [key=2, style=dotted];
m15_4 -> m15_0  [color=blue, key=0, style=bold];
m16_0 -> m16_1  [color=red, key=0, style=solid];
m16_1 -> m16_2  [color=red, key=0, style=solid];
m16_1 -> m16_3  [color=red, key=0, style=solid];
m16_2 -> m16_3  [color=red, key=0, style=solid];
m16_2 -> m16_4  [color=red, key=2, style=dotted];
m16_3 -> m16_0  [color=blue, key=0, style=bold];
m18_0 -> m18_1  [color=red, key=0, style=solid];
m18_1 -> m18_2  [color=red, key=0, style=solid];
m18_1 -> m18_6  [color=red, key=2, style=dotted];
m18_1 -> m18_3  [color=red, key=1, label=tokenPartitions, style=dashed];
m18_2 -> m18_3  [color=red, key=0, style=solid];
m18_2 -> m18_7  [color=red, key=2, style=dotted];
m18_2 -> m18_8  [color=red, key=2, style=dotted];
m18_2 -> m18_9  [color=red, key=2, style=dotted];
m18_2 -> m18_10  [color=red, key=2, style=dotted];
m18_2 -> m18_11  [color=red, key=2, style=dotted];
m18_2 -> m18_12  [color=red, key=2, style=dotted];
m18_2 -> m18_16  [color=red, key=1, label="lambda expression", style=dashed];
m18_3 -> m18_4  [key=0, style=solid];
m18_3 -> m18_13  [key=2, style=dotted];
m18_3 -> m18_14  [key=2, style=dotted];
m18_3 -> m18_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_3 -> m18_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_4 -> m18_5  [key=0, style=solid];
m18_4 -> m18_11  [key=2, style=dotted];
m18_4 -> m18_15  [key=2, style=dotted];
m18_4 -> m18_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_5 -> m18_0  [color=blue, key=0, style=bold];
m18_28 -> m18_29  [key=0, style=solid];
m18_16 -> m18_17  [key=0, style=solid];
m18_20 -> m18_21  [key=0, style=solid];
m18_24 -> m18_25  [key=0, style=solid];
m18_17 -> m18_18  [key=0, style=solid];
m18_17 -> m18_19  [key=2, style=dotted];
m18_18 -> m18_16  [color=blue, key=0, style=bold];
m18_21 -> m18_22  [key=0, style=solid];
m18_21 -> m18_23  [key=2, style=dotted];
m18_22 -> m18_20  [color=blue, key=0, style=bold];
m18_25 -> m18_26  [key=0, style=solid];
m18_25 -> m18_27  [key=2, style=dotted];
m18_26 -> m18_24  [color=blue, key=0, style=bold];
m18_29 -> m18_30  [key=0, style=solid];
m18_29 -> m18_23  [key=2, style=dotted];
m18_29 -> m18_31  [key=2, style=dotted];
m18_30 -> m18_28  [color=blue, key=0, style=bold];
m19_7 -> m19_8  [key=0, style=solid];
m19_8 -> m19_9  [key=0, style=solid];
m19_8 -> m19_10  [key=2, style=dotted];
m19_8 -> m19_11  [key=2, style=dotted];
m19_9 -> m19_7  [color=blue, key=0, style=bold];
m19_4 -> m19_5  [key=0, style=solid];
m19_5 -> m19_6  [key=0, style=solid];
m19_5 -> m19_3  [key=2, style=dotted];
m19_6 -> m19_4  [color=blue, key=0, style=bold];
m19_0 -> m19_1  [key=0, style=solid];
m19_1 -> m19_2  [key=0, style=solid];
m19_1 -> m19_3  [key=2, style=dotted];
m19_2 -> m19_0  [color=blue, key=0, style=bold];
m19_12 -> m19_13  [key=0, style=solid];
m19_13 -> m19_14  [key=0, style=solid];
m19_13 -> m19_10  [key=2, style=dotted];
m19_13 -> m19_11  [key=2, style=dotted];
m19_14 -> m19_12  [color=blue, key=0, style=bold];
m20_0 -> m20_1  [color=red, key=0, style=solid];
m20_1 -> m20_2  [color=red, key=0, style=solid];
m20_1 -> m20_3  [color=red, key=0, style=solid];
m20_2 -> m20_3  [color=red, key=0, style=solid];
m20_3 -> m20_0  [color=blue, key=0, style=bold];
m21_0 -> m21_1  [color=red, key=0, style=solid];
m21_1 -> m21_2  [color=red, key=0, style=solid];
m21_2 -> m21_0  [color=blue, key=0, style=bold];
m21_22 -> m21_23  [color=red, key=0, style=solid];
m21_22 -> m21_29  [color=red, key=1, label="CommandLine.Core.Specification", style=dashed];
m21_23 -> m21_24  [color=red, key=0, style=solid];
m21_23 -> m21_26  [color=red, key=0, style=solid];
m21_23 -> m21_34  [color=red, key=2, style=dotted];
m21_29 -> m21_30  [color=red, key=0, style=solid];
m21_29 -> m21_32  [color=red, key=0, style=solid];
m21_29 -> m21_36  [color=red, key=2, style=dotted];
m21_29 -> m21_31  [color=red, key=1, label=max, style=dashed];
m21_24 -> m21_25  [color=red, key=0, style=solid];
m21_26 -> m21_27  [color=red, key=0, style=solid];
m21_25 -> m21_33  [color=red, key=0, style=solid];
m21_25 -> m21_35  [color=red, key=2, style=dotted];
m21_27 -> m21_28  [color=red, key=0, style=solid];
m21_28 -> m21_29  [color=red, key=0, style=solid];
m21_30 -> m21_31  [color=red, key=0, style=solid];
m21_30 -> m21_32  [color=red, key=0, style=solid];
m21_32 -> m21_33  [color=red, key=0, style=solid];
m21_32 -> m21_37  [color=red, key=2, style=dotted];
m21_31 -> m21_33  [color=red, key=0, style=solid];
m21_31 -> m21_35  [color=red, key=2, style=dotted];
m21_33 -> m21_22  [color=blue, key=0, style=bold];
m21_3 -> m21_4  [color=red, key=0, style=solid];
m21_4 -> m21_5  [color=red, key=0, style=solid];
m21_5 -> m21_3  [color=blue, key=0, style=bold];
m21_6 -> m21_7  [color=red, key=0, style=solid];
m21_7 -> m21_8  [color=red, key=0, style=solid];
m21_7 -> m21_9  [color=red, key=2, style=dotted];
m21_8 -> m21_6  [color=blue, key=0, style=bold];
m21_18 -> m21_19  [color=red, key=0, style=solid];
m21_19 -> m21_20  [color=red, key=0, style=solid];
m21_19 -> m21_21  [color=red, key=2, style=dotted];
m21_20 -> m21_18  [color=blue, key=0, style=bold];
m21_10 -> m21_11  [color=red, key=0, style=solid];
m21_10 -> m21_12  [color=red, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m21_10 -> m21_14  [color=red, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m21_10 -> m21_10  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<CommandLine.Core.Specification> ThrowingValidate", style=bold];
m21_11 -> m21_12  [color=red, key=0, style=solid];
m21_11 -> m21_14  [color=red, key=0, style=solid];
m21_11 -> m21_19  [color=red, key=1, label=guard, style=dashed];
m21_11 -> m21_13  [color=red, key=1, label=guard, style=dashed];
m21_12 -> m21_13  [color=red, key=0, style=solid];
m21_12 -> m21_11  [color=red, key=0, style=solid];
m21_12 -> m21_16  [color=red, key=2, style=dotted];
m21_12 -> m21_18  [color=red, key=1, label="lambda expression", style=dashed];
m21_14 -> m21_15  [color=red, key=0, style=solid];
m21_13 -> m21_15  [color=red, key=0, style=solid];
m21_13 -> m21_17  [color=red, key=2, style=dotted];
m21_15 -> m21_10  [color=blue, key=0, style=bold];
m21_38 -> m21_19  [color=red, key=1, label=guard, style=dashed];
m24_0 -> m24_1  [key=0, style=solid];
m24_1 -> m24_2  [key=0, style=solid];
m24_1 -> m24_6  [key=2, style=dotted];
m24_1 -> m24_4  [color=darkseagreen4, key=1, label=expected, style=dashed];
m24_2 -> m24_3  [key=0, style=solid];
m24_2 -> m24_7  [key=2, style=dotted];
m24_2 -> m24_8  [key=2, style=dotted];
m24_4 -> m24_5  [key=0, style=solid];
m24_4 -> m24_10  [key=2, style=dotted];
m24_3 -> m24_4  [key=0, style=solid];
m24_3 -> m24_9  [key=2, style=dotted];
m24_5 -> m24_0  [color=blue, key=0, style=bold];
}
