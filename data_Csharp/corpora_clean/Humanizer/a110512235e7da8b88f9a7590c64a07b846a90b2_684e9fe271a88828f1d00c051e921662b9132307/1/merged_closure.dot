digraph  {
d1 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", color=green, community=0, label=casing, prediction=0, span="19-19"];
d0 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", label="Entry Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", span="17-17"];
d2 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", color=green, community=0, label="LetterCasing.Title", prediction=1, span="21-21"];
d4 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", color=green, community=0, label="LetterCasing.LowerCase", prediction=2, span="24-24"];
d6 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", color=green, community=0, label="LetterCasing.AllCaps", prediction=3, span="27-27"];
d8 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", color=green, community=0, label="LetterCasing.Sentence", prediction=4, span="30-30"];
d12 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", color=green, community=0, label="throw new ArgumentOutOfRangeException(''casing'');", prediction=5, span="37-37"];
d3 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", color=green, community=0, label="return CultureInfo.CurrentCulture.TextInfo.ToTitleCase(input);", prediction=6, span="22-22"];
d13 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", label="Exit Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", span="17-17"];
d14 [cluster="System.Globalization.TextInfo.ToTitleCase(string)", label="Entry System.Globalization.TextInfo.ToTitleCase(string)", span="0-0"];
d5 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", color=green, community=0, label="return input.ToLower();", prediction=6, span="25-25"];
d15 [cluster="string.ToLower()", label="Entry string.ToLower()", span="0-0"];
d7 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", color=green, community=0, label="return input.ToUpper();", prediction=6, span="28-28"];
d16 [cluster="string.ToUpper()", label="Entry string.ToUpper()", span="0-0"];
d9 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", color=green, community=0, label="input.Length >= 1", prediction=6, span="31-31"];
d10 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", color=green, community=0, label="return String.Concat(input.Substring(0, 1).ToUpper(), input.Substring(1));", prediction=6, span="32-32"];
d11 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", color=green, community=0, label="return input.ToUpper();", prediction=6, span="34-34"];
d17 [cluster="string.Substring(int, int)", label="Entry string.Substring(int, int)", span="0-0"];
d18 [cluster="string.Substring(int)", label="Entry string.Substring(int)", span="0-0"];
d19 [cluster="string.Concat(string, string)", label="Entry string.Concat(string, string)", span="0-0"];
d20 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
d34 [cluster="Humanizer.CasingExtensions.Camelize(string)", label="return word.Substring(0, 1).ToLower() + word.Substring(1);", span="69-69"];
d37 [cluster="Humanizer.CasingExtensions.Underscore(string)", label="return Regex.Replace(\r\n                Regex.Replace(\r\n                    Regex.Replace(input, @''([A-Z]+)([A-Z][a-z])'', ''$1_$2''), @''([a-z\d])([A-Z])'', ''$1_$2''), @''[-\s]'', ''_'').ToLower();", span="79-81"];
d30 [cluster="lambda expression", label="match.Groups[1].Value.ToUpper()", span="58-58"];
d33 [cluster="Humanizer.CasingExtensions.Camelize(string)", label="string word = Pascalize(input)", span="68-68"];
d35 [cluster="Humanizer.CasingExtensions.Camelize(string)", label="Exit Humanizer.CasingExtensions.Camelize(string)", span="66-66"];
d36 [cluster="Humanizer.CasingExtensions.Underscore(string)", label="Entry Humanizer.CasingExtensions.Underscore(string)", span="77-77"];
d38 [cluster="Humanizer.CasingExtensions.Underscore(string)", label="Exit Humanizer.CasingExtensions.Underscore(string)", span="77-77"];
d39 [cluster="System.Text.RegularExpressions.Regex.Replace(string, string, string)", label="Entry System.Text.RegularExpressions.Regex.Replace(string, string, string)", span="0-0"];
d29 [cluster="lambda expression", label="Entry lambda expression", span="58-58"];
d31 [cluster="lambda expression", label="Exit lambda expression", span="58-58"];
d32 [cluster="Humanizer.CasingExtensions.Camelize(string)", label="Entry Humanizer.CasingExtensions.Camelize(string)", span="66-66"];
d25 [cluster="Humanizer.CasingExtensions.Pascalize(string)", label="Entry Humanizer.CasingExtensions.Pascalize(string)", span="56-56"];
d26 [cluster="Humanizer.CasingExtensions.Pascalize(string)", label="return Regex.Replace(input, ''(?:^|_)(.)'', match => match.Groups[1].Value.ToUpper());", span="58-58"];
d27 [cluster="Humanizer.CasingExtensions.Pascalize(string)", label="Exit Humanizer.CasingExtensions.Pascalize(string)", span="56-56"];
d28 [cluster="System.Text.RegularExpressions.Regex.Replace(string, string, System.Text.RegularExpressions.MatchEvaluator)", label="Entry System.Text.RegularExpressions.Regex.Replace(string, string, System.Text.RegularExpressions.MatchEvaluator)", span="0-0"];
m0_9 [cluster="Humanizer.Tests.CasingTests.Camelize(string, string)", file="CasingTests.cs", label="Entry Humanizer.Tests.CasingTests.Camelize(string, string)", span="40-40"];
m0_10 [cluster="Humanizer.Tests.CasingTests.Camelize(string, string)", file="CasingTests.cs", label="Assert.Equal(expectedOutput, input.Camelize())", span="42-42"];
m0_11 [cluster="Humanizer.Tests.CasingTests.Camelize(string, string)", file="CasingTests.cs", label="Exit Humanizer.Tests.CasingTests.Camelize(string, string)", span="40-40"];
m0_13 [cluster="Humanizer.Tests.CasingTests.Titleize(string, string)", file="CasingTests.cs", label="Entry Humanizer.Tests.CasingTests.Titleize(string, string)", span="53-53"];
m0_14 [cluster="Humanizer.Tests.CasingTests.Titleize(string, string)", file="CasingTests.cs", label="Assert.Equal(expectedOuput, input.Titleize())", span="55-55"];
m0_15 [cluster="Humanizer.Tests.CasingTests.Titleize(string, string)", file="CasingTests.cs", label="Exit Humanizer.Tests.CasingTests.Titleize(string, string)", span="53-53"];
m0_12 [cluster="string.Camelize()", file="CasingTests.cs", label="Entry string.Camelize()", span="66-66"];
m0_20 [cluster="string.Underscore()", file="CasingTests.cs", label="Entry string.Underscore()", span="77-77"];
m0_17 [cluster="Humanizer.Tests.CasingTests.Underscore(string, string)", file="CasingTests.cs", label="Entry Humanizer.Tests.CasingTests.Underscore(string, string)", span="64-64"];
m0_18 [cluster="Humanizer.Tests.CasingTests.Underscore(string, string)", file="CasingTests.cs", label="Assert.Equal(expectedOuput, input.Underscore())", span="66-66"];
m0_19 [cluster="Humanizer.Tests.CasingTests.Underscore(string, string)", file="CasingTests.cs", label="Exit Humanizer.Tests.CasingTests.Underscore(string, string)", span="64-64"];
m0_3 [cluster="string.Dasherize()", file="CasingTests.cs", label="Entry string.Dasherize()", span="89-89"];
m0_4 [cluster="Unk.Equal", file="CasingTests.cs", label="Entry Unk.Equal", span=""];
m0_5 [cluster="Humanizer.Tests.CasingTests.Pascalize(string, string)", file="CasingTests.cs", label="Entry Humanizer.Tests.CasingTests.Pascalize(string, string)", span="26-26"];
m0_6 [cluster="Humanizer.Tests.CasingTests.Pascalize(string, string)", file="CasingTests.cs", label="Assert.Equal(expectedOutput, input.Pascalize())", span="28-28"];
m0_7 [cluster="Humanizer.Tests.CasingTests.Pascalize(string, string)", file="CasingTests.cs", label="Exit Humanizer.Tests.CasingTests.Pascalize(string, string)", span="26-26"];
m0_8 [cluster="string.Pascalize()", file="CasingTests.cs", label="Entry string.Pascalize()", span="56-56"];
m0_0 [cluster="Humanizer.Tests.CasingTests.Dasherize(string, string)", file="CasingTests.cs", label="Entry Humanizer.Tests.CasingTests.Dasherize(string, string)", span="13-13"];
m0_1 [cluster="Humanizer.Tests.CasingTests.Dasherize(string, string)", color=green, community=0, file="CasingTests.cs", label="Assert.Equal(expectedOutput, input.Dasherize())", prediction=12, span="15-15"];
m0_2 [cluster="Humanizer.Tests.CasingTests.Dasherize(string, string)", file="CasingTests.cs", label="Exit Humanizer.Tests.CasingTests.Dasherize(string, string)", span="13-13"];
m0_16 [cluster="string.Titleize()", file="CasingTests.cs", label="Entry string.Titleize()", span="46-46"];
m1_12 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncator(string, int, string)", file="InflectorExtensions.cs", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncator(string, int, string)", span="51-51"];
m1_13 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncator(string, int, string)", file="InflectorExtensions.cs", label="Assert.Equal(expectedOutput, input.Truncate(length, Truncator.FixedNumberOfWords))", span="53-53"];
m1_14 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncator(string, int, string)", file="InflectorExtensions.cs", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncator(string, int, string)", span="51-51"];
m1_15 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationString(string, int, string, string)", file="InflectorExtensions.cs", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithTruncationString(string, int, string, string)", span="65-65"];
m1_16 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationString(string, int, string, string)", file="InflectorExtensions.cs", label="Assert.Equal(expectedOutput, input.Truncate(length, truncationString))", span="67-67"];
m1_17 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationString(string, int, string, string)", file="InflectorExtensions.cs", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithTruncationString(string, int, string, string)", span="65-65"];
m1_8 [cluster="string.Truncate(int, Humanizer.ITruncator)", file="InflectorExtensions.cs", label="Entry string.Truncate(int, Humanizer.ITruncator)", span="27-27"];
m1_22 [cluster="string.Truncate(int, string, Humanizer.ITruncator)", file="InflectorExtensions.cs", label="Entry string.Truncate(int, string, Humanizer.ITruncator)", span="52-52"];
m1_4 [cluster="Unk.Equal", file="InflectorExtensions.cs", label="Entry Unk.Equal", span=""];
m1_26 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)", file="InflectorExtensions.cs", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)", span="110-110"];
m1_27 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)", file="InflectorExtensions.cs", label="Assert.Equal(expectedOutput, input.Truncate(length, truncationString, Truncator.FixedNumberOfWords))", span="112-112"];
m1_28 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)", file="InflectorExtensions.cs", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)", span="110-110"];
m1_5 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncator(string, int, string)", file="InflectorExtensions.cs", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncator(string, int, string)", span="26-26"];
m1_6 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncator(string, int, string)", file="InflectorExtensions.cs", label="Assert.Equal(expectedOutput, input.Truncate(length, Truncator.FixedLength))", span="28-28"];
m1_7 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncator(string, int, string)", file="InflectorExtensions.cs", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncator(string, int, string)", span="26-26"];
m1_23 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncator(string, int, string, string)", file="InflectorExtensions.cs", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncator(string, int, string, string)", span="95-95"];
m1_24 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncator(string, int, string, string)", file="InflectorExtensions.cs", label="Assert.Equal(expectedOutput, input.Truncate(length, truncationString, Truncator.FixedNumberOfCharacters))", span="97-97"];
m1_25 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncator(string, int, string, string)", file="InflectorExtensions.cs", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncator(string, int, string, string)", span="95-95"];
m1_0 [cluster="Humanizer.Tests.TruncatorTests.Truncate(string, int, string)", file="InflectorExtensions.cs", label="Entry Humanizer.Tests.TruncatorTests.Truncate(string, int, string)", span="14-14"];
m1_1 [cluster="Humanizer.Tests.TruncatorTests.Truncate(string, int, string)", file="InflectorExtensions.cs", label="Assert.Equal(expectedOutput, input.Truncate(length))", span="16-16"];
m1_2 [cluster="Humanizer.Tests.TruncatorTests.Truncate(string, int, string)", file="InflectorExtensions.cs", label="Exit Humanizer.Tests.TruncatorTests.Truncate(string, int, string)", span="14-14"];
m1_18 [cluster="string.Truncate(int, string)", file="InflectorExtensions.cs", label="Entry string.Truncate(int, string)", span="39-39"];
m1_3 [cluster="string.Truncate(int)", file="InflectorExtensions.cs", label="Entry string.Truncate(int)", span="15-15"];
m1_19 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncator(string, int, string, string)", file="InflectorExtensions.cs", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncator(string, int, string, string)", span="80-80"];
m1_20 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncator(string, int, string, string)", file="InflectorExtensions.cs", label="Assert.Equal(expectedOutput, input.Truncate(length, truncationString, Truncator.FixedLength))", span="82-82"];
m1_21 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncator(string, int, string, string)", file="InflectorExtensions.cs", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncator(string, int, string, string)", span="80-80"];
m1_9 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", file="InflectorExtensions.cs", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", span="38-38"];
m1_10 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", file="InflectorExtensions.cs", label="Assert.Equal(expectedOutput, input.Truncate(length, Truncator.FixedNumberOfCharacters))", span="40-40"];
m1_11 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", file="InflectorExtensions.cs", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", span="38-38"];
m4_0 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeExtensions.cs", label="Entry Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", span="33-33"];
m4_1 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeExtensions.cs", label="number == 0", span="35-35"];
m4_3 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeExtensions.cs", label="number < 0", span="38-38"];
m4_4 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeExtensions.cs", label="return string.Format(''min {0}'', Convert(-number));", span="39-39"];
m4_7 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeExtensions.cs", label="var divided = number / m.Value", span="45-45"];
m4_12 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeExtensions.cs", label="number %= m.Value", span="55-55"];
m4_15 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeExtensions.cs", label="number > 0", span="60-60"];
m4_16 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeExtensions.cs", label="number < 20", span="62-62"];
m4_2 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeExtensions.cs", label="return UnitsMap[0];", span="36-36"];
m4_5 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeExtensions.cs", label="var word = ''''", span="41-41"];
m4_6 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeExtensions.cs", label=Hunderds, span="43-43"];
m4_10 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeExtensions.cs", label="word += m.Name", span="51-51"];
m4_11 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeExtensions.cs", label="word += Convert(divided) + m.Prefix + m.Name", span="53-53"];
m4_9 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeExtensions.cs", label="divided == 1 && !m.DisplayOneUnit", span="50-50"];
m4_14 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeExtensions.cs", label="word += m.Postfix", span="57-57"];
m4_8 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeExtensions.cs", label="divided <= 0", span="47-47"];
m4_13 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeExtensions.cs", label="number > 0", span="56-56"];
m4_26 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeExtensions.cs", label="Exit Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", span="33-33"];
m4_28 [cluster="string.EndsWith(string)", file="StringHumanizeExtensions.cs", label="Entry string.EndsWith(string)", span="0-0"];
m4_38 [cluster="Unk.Substring", file="StringHumanizeExtensions.cs", label="Entry Unk.Substring", span=""];
m4_29 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="StringHumanizeExtensions.cs", label="Entry Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", span="91-91"];
m4_36 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="StringHumanizeExtensions.cs", label="Exit Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", span="91-91"];
m4_40 [cluster="lambda expression", file="StringHumanizeExtensions.cs", label="Entry lambda expression", span="95-95"];
m4_42 [cluster="lambda expression", file="StringHumanizeExtensions.cs", label="Exit lambda expression", span="95-95"];
m4_39 [cluster="string.LastIndexOfAny(char[])", file="StringHumanizeExtensions.cs", label="Entry string.LastIndexOfAny(char[])", span="0-0"];
m4_27 [cluster="string.Format(string, object)", file="StringHumanizeExtensions.cs", label="Entry string.Format(string, object)", span="0-0"];
m4_37 [cluster="Unk.Where", file="StringHumanizeExtensions.cs", label="Entry Unk.Where", span=""];
m4_43 [file="StringHumanizeExtensions.cs", label="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter", span=""];
m4_44 [file="StringHumanizeExtensions.cs", label=word, span=""];
d0 -> d3  [color=green, key=1, label=string, style=dashed];
d0 -> d5  [color=green, key=1, label=string, style=dashed];
d0 -> d7  [color=green, key=1, label=string, style=dashed];
d0 -> d9  [color=green, key=1, label=string, style=dashed];
d0 -> d10  [color=green, key=1, label=string, style=dashed];
d0 -> d11  [color=green, key=1, label=string, style=dashed];
d26 -> d29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_0 -> m4_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_4  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_15  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_16  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_7 -> m4_9  [color=darkseagreen4, key=1, label=divided, style=dashed];
m4_12 -> m4_15  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_12 -> m4_16  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_6 -> m4_9  [color=darkseagreen4, key=1, label=m, style=dashed];
m4_43 -> m4_4  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter", style=dashed];
}
