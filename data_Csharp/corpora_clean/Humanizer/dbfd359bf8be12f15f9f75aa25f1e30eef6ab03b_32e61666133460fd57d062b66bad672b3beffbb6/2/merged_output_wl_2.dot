digraph  {
n36 [label="CommandLine.Text.Example", span=""];
n0 [cluster="CommandLine.Text.Example.Example(string, string, string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", label="Entry CommandLine.Text.Example.Example(string, string, string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", span="16-16"];
n1 [cluster="CommandLine.Text.Example.Example(string, string, string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", color=red, community=0, label="0: this.group = group", span="18-18"];
n2 [cluster="CommandLine.Text.Example.Example(string, string, string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", color=red, community=0, label="0: this.group = groupDescription", span="19-19"];
n3 [cluster="CommandLine.Text.Example.Example(string, string, string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", color=red, community=0, label="0: this.helpText = helpText", span="20-20"];
n4 [cluster="CommandLine.Text.Example.Example(string, string, string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", color=red, community=0, label="0: this.formatStyles = formatStyles", span="21-21"];
n5 [cluster="CommandLine.Text.Example.Example(string, string, string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", color=red, community=0, label="1: this.sample = sample", span="22-22"];
n6 [cluster="CommandLine.Text.Example.Example(string, string, string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", label="Exit CommandLine.Text.Example.Example(string, string, string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", span="16-16"];
n7 [cluster="CommandLine.Text.Example.Example(string, string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", label="Entry CommandLine.Text.Example.Example(string, string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", span="25-25"];
n8 [cluster="CommandLine.Text.Example.Example(string, string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", label="Exit CommandLine.Text.Example.Example(string, string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", span="25-25"];
n9 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", label="Entry CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", span="30-30"];
n10 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", label="Exit CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", span="30-30"];
n11 [cluster="CommandLine.Text.Example.Example(string, CommandLine.UnParserSettings, object)", label="Entry CommandLine.Text.Example.Example(string, CommandLine.UnParserSettings, object)", span="35-35"];
n12 [cluster="CommandLine.Text.Example.Example(string, CommandLine.UnParserSettings, object)", label="Exit CommandLine.Text.Example.Example(string, CommandLine.UnParserSettings, object)", span="35-35"];
n13 [cluster="CommandLine.Text.Example.Example(string, object)", label="Entry CommandLine.Text.Example.Example(string, object)", span="40-40"];
n14 [cluster="CommandLine.Text.Example.Example(string, object)", label="Exit CommandLine.Text.Example.Example(string, object)", span="40-40"];
n15 [cluster="CommandLine.Text.Example.Equals(object)", label="Entry CommandLine.Text.Example.Equals(object)", span="75-75"];
n16 [cluster="CommandLine.Text.Example.Equals(object)", label="var other = obj as Example", span="77-77"];
n19 [cluster="CommandLine.Text.Example.Equals(object)", label="return base.Equals(obj);", span="83-83"];
n17 [cluster="CommandLine.Text.Example.Equals(object)", label="other != null", span="78-78"];
n18 [cluster="CommandLine.Text.Example.Equals(object)", label="return Equals(other);", span="80-80"];
n20 [cluster="CommandLine.Text.Example.Equals(object)", label="Exit CommandLine.Text.Example.Equals(object)", span="75-75"];
n22 [cluster="object.Equals(object)", label="Entry object.Equals(object)", span="0-0"];
n21 [cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)", label="Entry CommandLine.Text.Example.Equals(CommandLine.Text.Example)", span="100-100"];
n23 [cluster="CommandLine.Text.Example.GetHashCode()", label="Entry CommandLine.Text.Example.GetHashCode()", span="90-90"];
n24 [cluster="CommandLine.Text.Example.GetHashCode()", label="return new { Group, GroupDescription, HelpText, FormatStyles, Sample }.GetHashCode();", span="92-92"];
n25 [cluster="CommandLine.Text.Example.GetHashCode()", label="Exit CommandLine.Text.Example.GetHashCode()", span="90-90"];
n26 [cluster="object.GetHashCode()", label="Entry object.GetHashCode()", span="0-0"];
n27 [cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)", label="other == null", span="102-102"];
n29 [cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)", label="return Group.Equals(other.Group)\r\n                && GroupDescription.Equals(other.GroupDescription)\r\n                && HelpText.Equals(other.HelpText)\r\n                && FormatStyles.SequenceEqual(other.FormatStyles)\r\n                && Sample.Equals(other.Sample);", span="107-111"];
n28 [cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)", label="return false;", span="104-104"];
n30 [cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)", label="Exit CommandLine.Text.Example.Equals(CommandLine.Text.Example)", span="100-100"];
n31 [cluster="string.Equals(string)", label="Entry string.Equals(string)", span="0-0"];
n32 [cluster="Unk.SequenceEqual", label="Entry Unk.SequenceEqual", span=""];
n33 [cluster="CommandLine.Text.ExampleExtensions.WithGroupDescription(CommandLine.Text.Example, string)", label="Entry CommandLine.Text.ExampleExtensions.WithGroupDescription(CommandLine.Text.Example, string)", span="117-117"];
n34 [cluster="CommandLine.Text.ExampleExtensions.WithGroupDescription(CommandLine.Text.Example, string)", label="return new Example(\r\n                example.Group,\r\n                newGroupDescription,\r\n                example.HelpText,\r\n                example.FormatStyles,\r\n                example.Sample);", span="119-124"];
n35 [cluster="CommandLine.Text.ExampleExtensions.WithGroupDescription(CommandLine.Text.Example, string)", label="Exit CommandLine.Text.ExampleExtensions.WithGroupDescription(CommandLine.Text.Example, string)", span="117-117"];
m3_30 [cluster="System.Array.CreateInstance(System.Type, int)", file="EnumExtensionsTests.cs", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
m3_7 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="EnumExtensionsTests.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m3_33 [cluster="CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="EnumExtensionsTests.cs", label="Entry CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="73-73"];
m3_34 [cluster="CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="EnumExtensionsTests.cs", label="return !source.Any();", span="75-75"];
m3_35 [cluster="CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="EnumExtensionsTests.cs", label="Exit CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="73-73"];
m3_19 [cluster="System.Collections.IEnumerator.MoveNext()", file="EnumExtensionsTests.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m3_31 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="EnumExtensionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m3_32 [cluster="System.Array.CopyTo(System.Array, int)", file="EnumExtensionsTests.cs", label="Entry System.Array.CopyTo(System.Array, int)", span="0-0"];
m3_36 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="EnumExtensionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m3_24 [cluster="CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", file="EnumExtensionsTests.cs", label="Entry CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", span="66-66"];
m3_25 [cluster="CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", file="EnumExtensionsTests.cs", label="var array = Array.CreateInstance(type, value.Count())", span="68-68"];
m3_26 [cluster="CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", file="EnumExtensionsTests.cs", label="value.ToArray().CopyTo(array, 0)", span="69-69"];
m3_27 [cluster="CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", file="EnumExtensionsTests.cs", label="return array;", span="70-70"];
m3_28 [cluster="CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", file="EnumExtensionsTests.cs", label="Exit CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", span="66-66"];
m3_18 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="EnumExtensionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
m3_21 [cluster="CommandLine.Infrastructure.EnumerableExtensions.ToEnumerable<T>(System.Collections.Generic.List<T>)", file="EnumExtensionsTests.cs", label="Entry CommandLine.Infrastructure.EnumerableExtensions.ToEnumerable<T>(System.Collections.Generic.List<T>)", span="61-61"];
m3_22 [cluster="CommandLine.Infrastructure.EnumerableExtensions.ToEnumerable<T>(System.Collections.Generic.List<T>)", file="EnumExtensionsTests.cs", label="return value;", span="63-63"];
m3_23 [cluster="CommandLine.Infrastructure.EnumerableExtensions.ToEnumerable<T>(System.Collections.Generic.List<T>)", file="EnumExtensionsTests.cs", label="Exit CommandLine.Infrastructure.EnumerableExtensions.ToEnumerable<T>(System.Collections.Generic.List<T>)", span="61-61"];
m3_9 [cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="EnumExtensionsTests.cs", label="Entry CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="18-18"];
m3_10 [cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=red, community=0, file="EnumExtensionsTests.cs", label="0: var enumerator = source.GetEnumerator()", span="20-20"];
m3_15 [cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="EnumExtensionsTests.cs", label="yield return selector(left, right);", span="29-29"];
m3_11 [cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=red, community=0, file="EnumExtensionsTests.cs", label="0: enumerator.MoveNext()", span="22-22"];
m3_12 [cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=red, community=0, file="EnumExtensionsTests.cs", label="0: var left = enumerator.Current", span="24-24"];
m3_13 [cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="EnumExtensionsTests.cs", label="enumerator.MoveNext()", span="26-26"];
m3_14 [cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="EnumExtensionsTests.cs", label="var right = enumerator.Current", span="28-28"];
m3_16 [cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="EnumExtensionsTests.cs", label="left = right", span="30-30"];
m3_17 [cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="EnumExtensionsTests.cs", label="Exit CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="18-18"];
m3_8 [cluster="System.Collections.Generic.IEnumerable<TSource>.PairwiseImpl<TSource, TResult>(System.Func<TSource, TSource, TResult>)", file="EnumExtensionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.PairwiseImpl<TSource, TResult>(System.Func<TSource, TSource, TResult>)", span="18-18"];
m3_20 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="EnumExtensionsTests.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m3_29 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="EnumExtensionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m3_0 [cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="EnumExtensionsTests.cs", label="Entry CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="10-10"];
m3_1 [cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=red, community=0, file="EnumExtensionsTests.cs", label="0: source == null", span="12-12"];
m3_3 [cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=red, community=0, file="EnumExtensionsTests.cs", label="0: selector == null", span="13-13"];
m3_5 [cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=red, community=0, file="EnumExtensionsTests.cs", label="0: return source.PairwiseImpl(selector);", span="15-15"];
m3_2 [cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=red, community=0, file="EnumExtensionsTests.cs", label="0: throw new ArgumentNullException(''source'');", span="12-12"];
m3_4 [cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=red, community=0, file="EnumExtensionsTests.cs", label="0: throw new ArgumentNullException(''selector'');", span="13-13"];
m3_6 [cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="EnumExtensionsTests.cs", label="Exit CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="10-10"];
m5_0 [cluster="Humanizer.Resources.Resources()", file="Resources.Designer.cs", label="Entry Humanizer.Resources.Resources()", span="31-31"];
m5_1 [cluster="Humanizer.Resources.Resources()", file="Resources.Designer.cs", label="Exit Humanizer.Resources.Resources()", span="31-31"];
m6_51 [cluster="string.Humanize()", file="StringExtensions.cs", label="Entry string.Humanize()", span="74-74"];
m6_10 [cluster="System.Collections.Generic.List<T>.List()", file="StringExtensions.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m6_44 [cluster="Unk.Any", file="StringExtensions.cs", label="Entry Unk.Any", span=""];
m6_45 [cluster="string.Contains(string)", file="StringExtensions.cs", label="Entry string.Contains(string)", span="0-0"];
m6_35 [cluster="char.IsLower(char)", file="StringExtensions.cs", label="Entry char.IsLower(char)", span="0-0"];
m6_33 [cluster="char.IsDigit(char)", file="StringExtensions.cs", label="Entry char.IsDigit(char)", span="0-0"];
m6_14 [cluster="string.Replace(string, string)", file="StringExtensions.cs", label="Entry string.Replace(string, string)", span="0-0"];
m6_46 [cluster="System.Func<T, TResult>.Invoke(T)", file="StringExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m6_52 [cluster="Humanizer.StringExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="StringExtensions.cs", label="Entry Humanizer.StringExtensions.ApplyCase(string, Humanizer.LetterCasing)", span="93-93"];
m6_53 [cluster="Humanizer.StringExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="StringExtensions.cs", label=casing, span="95-95"];
m6_55 [cluster="Humanizer.StringExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="StringExtensions.cs", label="return CultureInfo.CurrentCulture.TextInfo.ToTitleCase(input);", span="98-98"];
m6_57 [cluster="Humanizer.StringExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="StringExtensions.cs", label="return input.ToLower();", span="101-101"];
m6_59 [cluster="Humanizer.StringExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="StringExtensions.cs", label="return input.ToUpper();", span="104-104"];
m6_61 [cluster="Humanizer.StringExtensions.ApplyCase(string, Humanizer.LetterCasing)", color=red, community=0, file="StringExtensions.cs", label="0: return string.Concat(input.Substring(0, 1).ToUpper(), input.Substring(1));", span="107-107"];
m6_54 [cluster="Humanizer.StringExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="StringExtensions.cs", label="LetterCasing.Title", span="97-97"];
m6_56 [cluster="Humanizer.StringExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="StringExtensions.cs", label="LetterCasing.LowerCase", span="100-100"];
m6_58 [cluster="Humanizer.StringExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="StringExtensions.cs", label="LetterCasing.AllCaps", span="103-103"];
m6_60 [cluster="Humanizer.StringExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="StringExtensions.cs", label="LetterCasing.Sentence", span="106-106"];
m6_62 [cluster="Humanizer.StringExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="StringExtensions.cs", label="throw new ArgumentOutOfRangeException(''casing'');", span="110-110"];
m6_63 [cluster="Humanizer.StringExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="StringExtensions.cs", label="Exit Humanizer.StringExtensions.ApplyCase(string, Humanizer.LetterCasing)", span="93-93"];
m6_4 [cluster="string.Join(string, params string[])", file="StringExtensions.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m6_47 [cluster="Humanizer.StringExtensions.Humanize(string, Humanizer.LetterCasing)", file="StringExtensions.cs", label="Entry Humanizer.StringExtensions.Humanize(string, Humanizer.LetterCasing)", span="86-86"];
m6_48 [cluster="Humanizer.StringExtensions.Humanize(string, Humanizer.LetterCasing)", file="StringExtensions.cs", label="var humanizedString = input.Humanize()", span="88-88"];
m6_49 [cluster="Humanizer.StringExtensions.Humanize(string, Humanizer.LetterCasing)", file="StringExtensions.cs", label="return ApplyCase(humanizedString, casing);", span="90-90"];
m6_50 [cluster="Humanizer.StringExtensions.Humanize(string, Humanizer.LetterCasing)", file="StringExtensions.cs", label="Exit Humanizer.StringExtensions.Humanize(string, Humanizer.LetterCasing)", span="86-86"];
m6_37 [cluster="Humanizer.StringExtensions.Humanize(string)", file="StringExtensions.cs", label="Entry Humanizer.StringExtensions.Humanize(string)", span="74-74"];
m6_38 [cluster="Humanizer.StringExtensions.Humanize(string)", file="StringExtensions.cs", label="!input.Any(Char.IsLower)", span="77-77"];
m6_39 [cluster="Humanizer.StringExtensions.Humanize(string)", file="StringExtensions.cs", label="return input;", span="78-78"];
m6_40 [cluster="Humanizer.StringExtensions.Humanize(string)", file="StringExtensions.cs", label="input.Contains(''_'')", span="80-80"];
m6_41 [cluster="Humanizer.StringExtensions.Humanize(string)", file="StringExtensions.cs", label="return FromUnderscoreSeparatedWords(input);", span="81-81"];
m6_42 [cluster="Humanizer.StringExtensions.Humanize(string)", file="StringExtensions.cs", label="return FromPascalCase(input);", span="83-83"];
m6_43 [cluster="Humanizer.StringExtensions.Humanize(string)", file="StringExtensions.cs", label="Exit Humanizer.StringExtensions.Humanize(string)", span="74-74"];
m6_66 [cluster="string.ToUpper()", file="StringExtensions.cs", label="Entry string.ToUpper()", span="0-0"];
m6_13 [cluster="Unk.ToArray", file="StringExtensions.cs", label="Entry Unk.ToArray", span=""];
m6_12 [cluster="string.cstr", file="StringExtensions.cs", label="Entry string.cstr", span=""];
m6_11 [cluster="Unk.Aggregate", file="StringExtensions.cs", label="Entry Unk.Aggregate", span=""];
m6_67 [cluster="string.Substring(int, int)", file="StringExtensions.cs", label="Entry string.Substring(int, int)", span="0-0"];
m6_5 [cluster="Humanizer.StringExtensions.FromPascalCase(string)", file="StringExtensions.cs", label="Entry Humanizer.StringExtensions.FromPascalCase(string)", span="35-35"];
m6_6 [cluster="Humanizer.StringExtensions.FromPascalCase(string)", file="StringExtensions.cs", label="var chars = name.Aggregate(\r\n                new List<char>(),\r\n                (list, currentChar) =>\r\n                {\r\n                    if (currentChar == ' ')\r\n                    {\r\n                        list.Add(currentChar);\r\n                        return list;\r\n                    }\r\n\r\n                    if (list.Count == 0)\r\n                    {\r\n                        list.Add(currentChar);\r\n                        return list;\r\n                    }\r\n\r\n                    var lastCharacterInTheList = list[list.Count - 1];\r\n                    if (lastCharacterInTheList != ' ')\r\n                    {\r\n                        if (char.IsDigit(lastCharacterInTheList))\r\n                        {\r\n                            if (char.IsLetter(currentChar))\r\n                                list.Add(' ');\r\n                        }\r\n                        else if (!char.IsLower(currentChar))\r\n                            list.Add(' ');\r\n                    }\r\n\r\n                    list.Add(char.ToLower(currentChar));\r\n\r\n                    return list;\r\n                })", span="37-68"];
m6_7 [cluster="Humanizer.StringExtensions.FromPascalCase(string)", file="StringExtensions.cs", label="var result = new string(chars.ToArray())", span="70-70"];
m6_8 [cluster="Humanizer.StringExtensions.FromPascalCase(string)", file="StringExtensions.cs", label="return result.Replace('' i '', '' I '');", span="71-71"];
m6_9 [cluster="Humanizer.StringExtensions.FromPascalCase(string)", file="StringExtensions.cs", label="Exit Humanizer.StringExtensions.FromPascalCase(string)", span="35-35"];
m6_64 [cluster="System.Globalization.TextInfo.ToTitleCase(string)", file="StringExtensions.cs", label="Entry System.Globalization.TextInfo.ToTitleCase(string)", span="0-0"];
m6_69 [cluster="string.Concat(string, string)", file="StringExtensions.cs", label="Entry string.Concat(string, string)", span="0-0"];
m6_34 [cluster="char.IsLetter(char)", file="StringExtensions.cs", label="Entry char.IsLetter(char)", span="0-0"];
m6_15 [cluster="lambda expression", file="StringExtensions.cs", label="Entry lambda expression", span="39-68"];
m6_0 [cluster="lambda expression", file="StringExtensions.cs", label="Entry lambda expression", span="34-34"];
m6_1 [cluster="lambda expression", file="StringExtensions.cs", label="string.Join('' '', methodName.Split(new[] { '_' }))", span="34-34"];
m6_2 [cluster="lambda expression", file="StringExtensions.cs", label="Exit lambda expression", span="34-34"];
m6_16 [cluster="lambda expression", file="StringExtensions.cs", label="currentChar == ' '", span="41-41"];
m6_17 [cluster="lambda expression", file="StringExtensions.cs", label="list.Add(currentChar)", span="43-43"];
m6_18 [cluster="lambda expression", file="StringExtensions.cs", label="return list;", span="44-44"];
m6_19 [cluster="lambda expression", file="StringExtensions.cs", label="list.Count == 0", span="47-47"];
m6_20 [cluster="lambda expression", file="StringExtensions.cs", label="list.Add(currentChar)", span="49-49"];
m6_21 [cluster="lambda expression", file="StringExtensions.cs", label="return list;", span="50-50"];
m6_22 [cluster="lambda expression", file="StringExtensions.cs", label="var lastCharacterInTheList = list[list.Count - 1]", span="53-53"];
m6_25 [cluster="lambda expression", file="StringExtensions.cs", label="char.IsLetter(currentChar)", span="58-58"];
m6_26 [cluster="lambda expression", file="StringExtensions.cs", label="list.Add(' ')", span="59-59"];
m6_27 [cluster="lambda expression", file="StringExtensions.cs", label="!char.IsLower(currentChar)", span="61-61"];
m6_28 [cluster="lambda expression", file="StringExtensions.cs", label="list.Add(' ')", span="62-62"];
m6_29 [cluster="lambda expression", file="StringExtensions.cs", label="list.Add(char.ToLower(currentChar))", span="65-65"];
m6_30 [cluster="lambda expression", file="StringExtensions.cs", label="return list;", span="67-67"];
m6_23 [cluster="lambda expression", file="StringExtensions.cs", label="lastCharacterInTheList != ' '", span="54-54"];
m6_24 [cluster="lambda expression", file="StringExtensions.cs", label="char.IsDigit(lastCharacterInTheList)", span="56-56"];
m6_31 [cluster="lambda expression", file="StringExtensions.cs", label="Exit lambda expression", span="39-68"];
m6_70 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="StringExtensions.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m6_3 [cluster="string.Split(params char[])", file="StringExtensions.cs", label="Entry string.Split(params char[])", span="0-0"];
m6_36 [cluster="char.ToLower(char)", file="StringExtensions.cs", label="Entry char.ToLower(char)", span="0-0"];
m6_32 [cluster="System.Collections.Generic.List<T>.Add(T)", file="StringExtensions.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m6_65 [cluster="string.ToLower()", file="StringExtensions.cs", label="Entry string.ToLower()", span="0-0"];
m6_68 [cluster="string.Substring(int)", file="StringExtensions.cs", label="Entry string.Substring(int)", span="0-0"];
m7_23 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreLeftIntact()", file="StringExtensionsTests.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreLeftIntact()", span="59-59"];
m7_24 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreLeftIntact()", file="StringExtensionsTests.cs", label="Assert.Equal(\r\n                ''HTML'',\r\n                ''HTML''.Humanize())", span="61-63"];
m7_25 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreLeftIntact()", file="StringExtensionsTests.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreLeftIntact()", span="59-59"];
m7_3 [cluster="Humanizer.Localisation.Formatters.RomanianFormatter.RomanianFormatter()", file="StringExtensionsTests.cs", label="Entry Humanizer.Localisation.Formatters.RomanianFormatter.RomanianFormatter()", span="2-2"];
m7_0 [cluster="lambda expression", file="StringExtensionsTests.cs", label="Entry lambda expression", span="16-16"];
m7_1 [cluster="lambda expression", color=red, community=0, file="StringExtensionsTests.cs", label="0: new RomanianFormatter()", span="16-16"];
m7_2 [cluster="lambda expression", file="StringExtensionsTests.cs", label="Exit lambda expression", span="16-16"];
m7_36 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCase()", file="StringExtensionsTests.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCase()", span="91-91"];
m7_37 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCase()", file="StringExtensionsTests.cs", label="Assert.Equal(\r\n                ''can return lower case'',\r\n                ''CanReturnLowerCase''.Humanize(LetterCasing.LowerCase))", span="93-95"];
m7_38 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCase()", file="StringExtensionsTests.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCase()", span="91-91"];
m7_30 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", file="StringExtensionsTests.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", span="75-75"];
m7_31 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", file="StringExtensionsTests.cs", label="Assert.Equal(\r\n                ''Can Return Title Case'',\r\n                ''Can_return_title_Case''.Humanize(LetterCasing.Title))", span="77-79"];
m7_32 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", file="StringExtensionsTests.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", span="75-75"];
m7_4 [cluster="lambda expression", file="StringExtensionsTests.cs", label="Entry lambda expression", span="17-17"];
m7_8 [cluster="lambda expression", file="StringExtensionsTests.cs", label="Entry lambda expression", span="18-18"];
m7_9 [cluster="lambda expression", color=red, community=0, file="StringExtensionsTests.cs", label="0: new ArabicFormatter()", span="18-18"];
m7_10 [cluster="lambda expression", file="StringExtensionsTests.cs", label="Exit lambda expression", span="18-18"];
m7_39 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", file="StringExtensionsTests.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", span="99-99"];
m7_40 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", color=green, community=1, file="StringExtensionsTests.cs", label="0: Assert.Equal(\r\n                ''lowercase'',\r\n                ''LOWERCASE''.Humanize(LetterCasing.LowerCase))", span="101-103"];
m7_41 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", file="StringExtensionsTests.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", span="99-99"];
m7_11 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", file="StringExtensionsTests.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", span="29-29"];
m7_26 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", file="StringExtensionsTests.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", span="67-67"];
m7_27 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", file="StringExtensionsTests.cs", label="Assert.Equal(\r\n                ''Can Return Title Case'',\r\n                ''CanReturnTitleCase''.Humanize(LetterCasing.Title))", span="69-71"];
m7_28 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", file="StringExtensionsTests.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", span="67-67"];
m7_14 [cluster="lambda expression", file="StringExtensionsTests.cs", label="Exit lambda expression", span="19-19"];
m7_15 [cluster="Humanizer.Localisation.Formatters.CzechSlovakPolishFormatter.CzechSlovakPolishFormatter()", file="StringExtensionsTests.cs", label="Entry Humanizer.Localisation.Formatters.CzechSlovakPolishFormatter.CzechSlovakPolishFormatter()", span="2-2"];
m7_16 [cluster="lambda expression", file="StringExtensionsTests.cs", label="Entry lambda expression", span="20-20"];
m7_42 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoUpperCase()", file="StringExtensionsTests.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoUpperCase()", span="107-107"];
m7_43 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoUpperCase()", color=green, community=1, file="StringExtensionsTests.cs", label="0: Assert.Equal(\r\n                ''CAN HUMANIZE INTO UPPER CASE'',\r\n                ''CanHumanizeIntoUpperCase''.Humanize(LetterCasing.AllCaps))", span="109-111"];
m7_44 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoUpperCase()", file="StringExtensionsTests.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoUpperCase()", span="107-107"];
m7_33 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.TitleHumanizationHonorsAllCaps()", file="StringExtensionsTests.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.TitleHumanizationHonorsAllCaps()", span="83-83"];
m7_34 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.TitleHumanizationHonorsAllCaps()", file="StringExtensionsTests.cs", label="Assert.Equal(\r\n                ''Title Humanization Honors ALLCAPS'',\r\n                ''Title_humanization_Honors_ALLCAPS''.Humanize(LetterCasing.Title))", span="85-87"];
m7_35 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.TitleHumanizationHonorsAllCaps()", file="StringExtensionsTests.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.TitleHumanizationHonorsAllCaps()", span="83-83"];
m7_7 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", file="StringExtensionsTests.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", span="15-15"];
m7_5 [cluster="lambda expression", color=red, community=0, file="StringExtensionsTests.cs", label="2: new RussianFormatter()", span="17-17"];
m7_6 [cluster="lambda expression", file="StringExtensionsTests.cs", label="Exit lambda expression", span="17-17"];
m7_29 [cluster="string.Humanize(Humanizer.LetterCasing)", file="StringExtensionsTests.cs", label="Entry string.Humanize(Humanizer.LetterCasing)", span="61-61"];
m7_20 [cluster="lambda expression", color=red, community=0, file="StringExtensionsTests.cs", label="0: new CzechSlovakPolishFormatter()", span="21-21"];
m7_21 [cluster="lambda expression", file="StringExtensionsTests.cs", label="Exit lambda expression", span="21-21"];
m7_22 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", file="StringExtensionsTests.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", span="51-51"];
m7_19 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringPreservesCasing()", file="StringExtensionsTests.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringPreservesCasing()", span="43-43"];
m7_12 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", file="StringExtensionsTests.cs", label="Assert.Equal(''Number is at the end 100'', ''NumberIsAtTheEnd100''.Humanize())", span="31-31"];
m7_13 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", color=red, community=0, file="StringExtensionsTests.cs", label="0: Exit Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", span="29-29"];
m7_17 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringPreservesCasing()", color=red, community=0, file="StringExtensionsTests.cs", label="0: Entry Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringPreservesCasing()", span="43-43"];
m7_18 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringPreservesCasing()", file="StringExtensionsTests.cs", label="Assert.Equal(\r\n                ''Underscored input String is turned INTO sentence'',\r\n                ''Underscored_input_String_is_turned_INTO_sentence''.Humanize())", span="45-47"];
m7_45 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanTurnIntoUpperCasewhenUsingUnderscores()", file="StringExtensionsTests.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.CanTurnIntoUpperCasewhenUsingUnderscores()", span="115-115"];
m7_46 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanTurnIntoUpperCasewhenUsingUnderscores()", file="StringExtensionsTests.cs", label="Assert.Equal(\r\n                ''CAN HUMANIZE INTO UPPER CASE'',\r\n                ''Can_Humanize_into_Upper_case''.Humanize(LetterCasing.AllCaps))", span="117-119"];
m7_47 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanTurnIntoUpperCasewhenUsingUnderscores()", file="StringExtensionsTests.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.CanTurnIntoUpperCasewhenUsingUnderscores()", span="115-115"];
n36 -> n1  [color=red, key=1, label="CommandLine.Text.Example", style=dashed];
n36 -> n2  [color=red, key=1, label="CommandLine.Text.Example", style=dashed];
n36 -> n3  [color=red, key=1, label="CommandLine.Text.Example", style=dashed];
n36 -> n4  [color=red, key=1, label="CommandLine.Text.Example", style=dashed];
n36 -> n5  [color=red, key=1, label="CommandLine.Text.Example", style=dashed];
n36 -> n18  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
n36 -> n19  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
n36 -> n24  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
n36 -> n29  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
n0 -> n1  [color=red, key=0, style=solid];
n0 -> n2  [color=red, key=1, label=string, style=dashed];
n0 -> n3  [color=red, key=1, label=string, style=dashed];
n0 -> n4  [color=red, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>", style=dashed];
n0 -> n5  [color=red, key=1, label=object, style=dashed];
n1 -> n2  [color=red, key=0, style=solid];
n2 -> n3  [color=red, key=0, style=solid];
n3 -> n4  [color=red, key=0, style=solid];
n4 -> n5  [color=red, key=0, style=solid];
n5 -> n6  [color=red, key=0, style=solid];
n6 -> n0  [color=blue, key=0, style=bold];
n7 -> n8  [key=0, style=solid];
n8 -> n7  [color=blue, key=0, style=bold];
n9 -> n10  [key=0, style=solid];
n10 -> n9  [color=blue, key=0, style=bold];
n11 -> n12  [key=0, style=solid];
n12 -> n11  [color=blue, key=0, style=bold];
n13 -> n14  [key=0, style=solid];
n14 -> n13  [color=blue, key=0, style=bold];
n15 -> n16  [key=0, style=solid];
n15 -> n19  [color=darkseagreen4, key=1, label=object, style=dashed];
n16 -> n17  [key=0, style=solid];
n16 -> n18  [color=darkseagreen4, key=1, label=other, style=dashed];
n19 -> n20  [key=0, style=solid];
n19 -> n22  [key=2, style=dotted];
n17 -> n18  [key=0, style=solid];
n17 -> n19  [key=0, style=solid];
n18 -> n20  [key=0, style=solid];
n18 -> n21  [key=2, style=dotted];
n20 -> n15  [color=blue, key=0, style=bold];
n21 -> n27  [key=0, style=solid];
n21 -> n29  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
n23 -> n24  [key=0, style=solid];
n24 -> n25  [key=0, style=solid];
n24 -> n26  [key=2, style=dotted];
n25 -> n23  [color=blue, key=0, style=bold];
n27 -> n28  [key=0, style=solid];
n27 -> n29  [key=0, style=solid];
n29 -> n30  [key=0, style=solid];
n29 -> n31  [key=2, style=dotted];
n29 -> n32  [key=2, style=dotted];
n29 -> n22  [key=2, style=dotted];
n28 -> n30  [key=0, style=solid];
n30 -> n21  [color=blue, key=0, style=bold];
n33 -> n34  [key=0, style=solid];
n34 -> n35  [key=0, style=solid];
n34 -> n0  [key=2, style=dotted];
n35 -> n33  [color=blue, key=0, style=bold];
m3_33 -> m3_34  [key=0, style=solid];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_36  [key=2, style=dotted];
m3_35 -> m3_33  [color=blue, key=0, style=bold];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_26  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_29  [key=2, style=dotted];
m3_25 -> m3_30  [key=2, style=dotted];
m3_25 -> m3_27  [color=darkseagreen4, key=1, label=array, style=dashed];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_31  [key=2, style=dotted];
m3_26 -> m3_32  [key=2, style=dotted];
m3_27 -> m3_28  [key=0, style=solid];
m3_28 -> m3_24  [color=blue, key=0, style=bold];
m3_21 -> m3_22  [key=0, style=solid];
m3_22 -> m3_23  [key=0, style=solid];
m3_23 -> m3_21  [color=blue, key=0, style=bold];
m3_9 -> m3_10  [color=red, key=0, style=solid];
m3_9 -> m3_15  [color=crimson, key=0, style=bold];
m3_10 -> m3_11  [color=red, key=0, style=solid];
m3_10 -> m3_18  [color=red, key=2, style=dotted];
m3_10 -> m3_12  [color=red, key=1, label=enumerator, style=dashed];
m3_10 -> m3_13  [color=red, key=1, label=enumerator, style=dashed];
m3_10 -> m3_14  [color=red, key=1, label=enumerator, style=dashed];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_20  [key=2, style=dotted];
m3_11 -> m3_12  [color=red, key=0, style=solid];
m3_11 -> m3_17  [color=red, key=0, style=solid];
m3_11 -> m3_19  [color=red, key=2, style=dotted];
m3_12 -> m3_13  [color=red, key=0, style=solid];
m3_12 -> m3_15  [color=red, key=1, label=left, style=dashed];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_17  [key=0, style=solid];
m3_13 -> m3_19  [key=2, style=dotted];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_16  [color=darkseagreen4, key=1, label=right, style=dashed];
m3_16 -> m3_13  [key=0, style=solid];
m3_17 -> m3_9  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [color=red, key=0, style=solid];
m3_0 -> m3_3  [color=red, key=1, label="System.Func<TSource, TSource, TResult>", style=dashed];
m3_0 -> m3_5  [color=red, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
m3_1 -> m3_2  [color=red, key=0, style=solid];
m3_1 -> m3_3  [color=red, key=0, style=solid];
m3_3 -> m3_4  [color=red, key=0, style=solid];
m3_3 -> m3_5  [color=red, key=0, style=solid];
m3_5 -> m3_6  [color=red, key=0, style=solid];
m3_5 -> m3_8  [color=red, key=2, style=dotted];
m3_2 -> m3_6  [color=red, key=0, style=solid];
m3_2 -> m3_7  [color=red, key=2, style=dotted];
m3_4 -> m3_6  [color=red, key=0, style=solid];
m3_4 -> m3_7  [color=red, key=2, style=dotted];
m3_6 -> m3_0  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_0  [color=blue, key=0, style=bold];
m6_52 -> m6_53  [key=0, style=solid];
m6_52 -> m6_55  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_52 -> m6_57  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_52 -> m6_59  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_52 -> m6_61  [color=red, key=1, label=string, style=dashed];
m6_52 -> m6_48  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m6_52 -> m6_47  [color=darkorchid, key=3, label="Parameter variable Humanizer.LetterCasing casing", style=bold];
m6_53 -> m6_54  [key=0, style=solid];
m6_53 -> m6_56  [key=0, style=solid];
m6_53 -> m6_58  [key=0, style=solid];
m6_53 -> m6_60  [key=0, style=solid];
m6_53 -> m6_62  [key=0, style=solid];
m6_55 -> m6_63  [key=0, style=solid];
m6_55 -> m6_64  [key=2, style=dotted];
m6_57 -> m6_63  [key=0, style=solid];
m6_57 -> m6_65  [key=2, style=dotted];
m6_59 -> m6_63  [key=0, style=solid];
m6_59 -> m6_66  [key=2, style=dotted];
m6_61 -> m6_63  [color=red, key=0, style=solid];
m6_61 -> m6_67  [color=red, key=2, style=dotted];
m6_61 -> m6_66  [color=red, key=2, style=dotted];
m6_61 -> m6_68  [color=red, key=2, style=dotted];
m6_61 -> m6_69  [color=red, key=2, style=dotted];
m6_54 -> m6_55  [key=0, style=solid];
m6_56 -> m6_57  [key=0, style=solid];
m6_58 -> m6_59  [key=0, style=solid];
m6_60 -> m6_61  [color=red, key=0, style=solid];
m6_62 -> m6_63  [key=0, style=solid];
m6_62 -> m6_70  [key=2, style=dotted];
m6_63 -> m6_52  [color=blue, key=0, style=bold];
m6_47 -> m6_48  [key=0, style=solid];
m6_47 -> m6_49  [color=darkseagreen4, key=1, label="Humanizer.LetterCasing", style=dashed];
m6_47 -> m6_52  [color=darkorchid, key=3, label="method methodReturn string Humanize", style=bold];
m6_48 -> m6_49  [key=0, style=solid];
m6_48 -> m6_51  [key=2, style=dotted];
m6_48 -> m6_37  [color=darkorchid, key=3, label="Local variable string humanizedString", style=bold];
m6_49 -> m6_50  [key=0, style=solid];
m6_49 -> m6_52  [key=2, style=dotted];
m6_50 -> m6_47  [color=blue, key=0, style=bold];
m6_37 -> m6_38  [key=0, style=solid];
m6_37 -> m6_39  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_37 -> m6_40  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_37 -> m6_41  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_37 -> m6_42  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_37 -> m6_37  [color=darkorchid, key=3, label="method methodReturn string Humanize", style=bold];
m6_37 -> m6_5  [color=darkorchid, key=3, label="method methodReturn string Humanize", style=bold];
m6_38 -> m6_39  [key=0, style=solid];
m6_38 -> m6_40  [key=0, style=solid];
m6_38 -> m6_44  [key=2, style=dotted];
m6_39 -> m6_43  [key=0, style=solid];
m6_40 -> m6_41  [key=0, style=solid];
m6_40 -> m6_42  [key=0, style=solid];
m6_40 -> m6_45  [key=2, style=dotted];
m6_41 -> m6_43  [key=0, style=solid];
m6_41 -> m6_46  [key=2, style=dotted];
m6_42 -> m6_43  [key=0, style=solid];
m6_42 -> m6_5  [key=2, style=dotted];
m6_43 -> m6_37  [color=blue, key=0, style=bold];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_37  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_10  [key=2, style=dotted];
m6_6 -> m6_11  [key=2, style=dotted];
m6_6 -> m6_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_6 -> m6_6  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.List<char> ", style=bold];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_12  [key=2, style=dotted];
m6_7 -> m6_13  [key=2, style=dotted];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_14  [key=2, style=dotted];
m6_9 -> m6_5  [color=blue, key=0, style=bold];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_17  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<char>", style=dashed];
m6_15 -> m6_18  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<char>", style=dashed];
m6_15 -> m6_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<char>", style=dashed];
m6_15 -> m6_20  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<char>", style=dashed];
m6_15 -> m6_21  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<char>", style=dashed];
m6_15 -> m6_22  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<char>", style=dashed];
m6_15 -> m6_25  [color=darkseagreen4, key=1, label=char, style=dashed];
m6_15 -> m6_26  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<char>", style=dashed];
m6_15 -> m6_27  [color=darkseagreen4, key=1, label=char, style=dashed];
m6_15 -> m6_28  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<char>", style=dashed];
m6_15 -> m6_29  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<char>", style=dashed];
m6_15 -> m6_30  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<char>", style=dashed];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_0  [color=darkorchid, key=3, label="Field variable System.Func<string, string> FromUnderscoreSeparatedWords", style=bold];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=2, style=dotted];
m6_1 -> m6_4  [key=2, style=dotted];
m6_2 -> m6_0  [color=blue, key=0, style=bold];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_19  [key=0, style=solid];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_32  [key=2, style=dotted];
m6_18 -> m6_31  [key=0, style=solid];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_22  [key=0, style=solid];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_32  [key=2, style=dotted];
m6_21 -> m6_31  [key=0, style=solid];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_24  [color=darkseagreen4, key=1, label=lastCharacterInTheList, style=dashed];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_29  [key=0, style=solid];
m6_25 -> m6_34  [key=2, style=dotted];
m6_26 -> m6_29  [key=0, style=solid];
m6_26 -> m6_32  [key=2, style=dotted];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_29  [key=0, style=solid];
m6_27 -> m6_35  [key=2, style=dotted];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_32  [key=2, style=dotted];
m6_29 -> m6_30  [key=0, style=solid];
m6_29 -> m6_36  [key=2, style=dotted];
m6_29 -> m6_32  [key=2, style=dotted];
m6_30 -> m6_31  [key=0, style=solid];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_29  [key=0, style=solid];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_27  [key=0, style=solid];
m6_24 -> m6_33  [key=2, style=dotted];
m6_31 -> m6_15  [color=blue, key=0, style=bold];
m7_23 -> m7_24  [key=0, style=solid];
m7_24 -> m7_4  [key=2, style=dotted];
m7_24 -> m7_25  [key=0, style=solid];
m7_24 -> m7_3  [key=2, style=dotted];
m7_25 -> m7_23  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [color=red, key=0, style=solid];
m7_1 -> m7_4  [key=2, style=dotted];
m7_1 -> m7_2  [color=red, key=0, style=solid];
m7_1 -> m7_3  [color=red, key=2, style=dotted];
m7_2 -> m7_0  [color=blue, key=0, style=bold];
m7_36 -> m7_37  [key=0, style=solid];
m7_37 -> m7_29  [key=2, style=dotted];
m7_37 -> m7_4  [key=2, style=dotted];
m7_37 -> m7_38  [key=0, style=solid];
m7_38 -> m7_36  [color=blue, key=0, style=bold];
m7_30 -> m7_31  [key=0, style=solid];
m7_31 -> m7_29  [key=2, style=dotted];
m7_31 -> m7_4  [key=2, style=dotted];
m7_31 -> m7_32  [key=0, style=solid];
m7_32 -> m7_30  [color=blue, key=0, style=bold];
m7_4 -> m7_5  [color=red, key=0, style=solid];
m7_8 -> m7_9  [color=red, key=0, style=solid];
m7_9 -> m7_4  [key=2, style=dotted];
m7_9 -> m7_10  [color=red, key=0, style=solid];
m7_9 -> m7_3  [key=2, style=dotted];
m7_9 -> m7_11  [color=red, key=2, style=dotted];
m7_10 -> m7_8  [color=blue, key=0, style=bold];
m7_39 -> m7_40  [color=green, key=0, style=solid];
m7_40 -> m7_41  [color=green, key=0, style=solid];
m7_40 -> m7_29  [color=green, key=2, style=dotted];
m7_40 -> m7_4  [color=green, key=2, style=dotted];
m7_41 -> m7_39  [color=blue, key=0, style=bold];
m7_11 -> m7_12  [key=0, style=solid];
m7_26 -> m7_27  [key=0, style=solid];
m7_27 -> m7_29  [key=2, style=dotted];
m7_27 -> m7_4  [key=2, style=dotted];
m7_27 -> m7_28  [key=0, style=solid];
m7_28 -> m7_26  [color=blue, key=0, style=bold];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> m7_12  [color=blue, key=0, style=bold];
m7_15 -> m7_4  [key=2, style=dotted];
m7_15 -> m7_16  [key=0, style=solid];
m7_15 -> m7_3  [key=2, style=dotted];
m7_16 -> m7_14  [color=blue, key=0, style=bold];
m7_16 -> m7_17  [color=red, key=0, style=solid];
m7_42 -> m7_43  [color=green, key=0, style=solid];
m7_43 -> m7_44  [color=green, key=0, style=solid];
m7_43 -> m7_29  [color=green, key=2, style=dotted];
m7_43 -> m7_4  [color=green, key=2, style=dotted];
m7_44 -> m7_42  [color=blue, key=0, style=bold];
m7_33 -> m7_34  [key=0, style=solid];
m7_34 -> m7_29  [key=2, style=dotted];
m7_34 -> m7_4  [key=2, style=dotted];
m7_34 -> m7_35  [key=0, style=solid];
m7_35 -> m7_33  [color=blue, key=0, style=bold];
m7_7 -> m7_5  [color=blue, key=0, style=bold];
m7_5 -> m7_6  [color=red, key=0, style=solid];
m7_5 -> m7_7  [color=red, key=2, style=dotted];
m7_6 -> m7_4  [key=2, style=dotted];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_3  [key=2, style=dotted];
m7_20 -> m7_21  [color=red, key=0, style=solid];
m7_20 -> m7_15  [color=red, key=2, style=dotted];
m7_21 -> m7_4  [key=2, style=dotted];
m7_21 -> m7_22  [key=0, style=solid];
m7_21 -> m7_3  [key=2, style=dotted];
m7_21 -> m7_19  [color=blue, key=0, style=bold];
m7_22 -> m7_20  [color=blue, key=0, style=bold];
m7_19 -> m7_20  [color=red, key=0, style=solid];
m7_19 -> m7_17  [color=blue, key=0, style=bold];
m7_12 -> m7_13  [color=red, key=0, style=solid];
m7_12 -> m7_4  [key=2, style=dotted];
m7_12 -> m7_3  [key=2, style=dotted];
m7_13 -> m7_14  [color=red, key=0, style=solid];
m7_13 -> m7_15  [color=red, key=2, style=dotted];
m7_13 -> m7_11  [color=blue, key=0, style=bold];
m7_17 -> m7_18  [color=red, key=0, style=solid];
m7_17 -> m7_15  [color=red, key=2, style=dotted];
m7_18 -> m7_16  [color=blue, key=0, style=bold];
m7_18 -> m7_4  [key=2, style=dotted];
m7_18 -> m7_19  [key=0, style=solid];
m7_18 -> m7_3  [key=2, style=dotted];
m7_45 -> m7_46  [key=0, style=solid];
m7_46 -> m7_29  [key=2, style=dotted];
m7_46 -> m7_4  [key=2, style=dotted];
m7_46 -> m7_47  [key=0, style=solid];
m7_47 -> m7_45  [color=blue, key=0, style=bold];
}
