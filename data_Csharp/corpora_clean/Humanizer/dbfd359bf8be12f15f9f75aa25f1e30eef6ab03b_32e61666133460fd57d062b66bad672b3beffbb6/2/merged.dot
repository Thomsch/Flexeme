digraph  {
n36 [label="CommandLine.Text.Example", span=""];
n0 [label="Entry CommandLine.Text.Example.Example(string, string, string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", span="16-16", cluster="CommandLine.Text.Example.Example(string, string, string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
n1 [label="this.group = group", span="18-18", cluster="CommandLine.Text.Example.Example(string, string, string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", color=red, community=0];
n2 [label="this.group = groupDescription", span="19-19", cluster="CommandLine.Text.Example.Example(string, string, string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", color=red, community=0];
n3 [label="this.helpText = helpText", span="20-20", cluster="CommandLine.Text.Example.Example(string, string, string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", color=red, community=0];
n4 [label="this.formatStyles = formatStyles", span="21-21", cluster="CommandLine.Text.Example.Example(string, string, string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", color=red, community=0];
n5 [label="this.sample = sample", span="22-22", cluster="CommandLine.Text.Example.Example(string, string, string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", color=red, community=0];
n6 [label="Exit CommandLine.Text.Example.Example(string, string, string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", span="16-16", cluster="CommandLine.Text.Example.Example(string, string, string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
n7 [label="Entry CommandLine.Text.Example.Example(string, string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", span="25-25", cluster="CommandLine.Text.Example.Example(string, string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
n8 [label="Exit CommandLine.Text.Example.Example(string, string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", span="25-25", cluster="CommandLine.Text.Example.Example(string, string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
n9 [label="Entry CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", span="30-30", cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
n10 [label="Exit CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", span="30-30", cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
n11 [label="Entry CommandLine.Text.Example.Example(string, CommandLine.UnParserSettings, object)", span="35-35", cluster="CommandLine.Text.Example.Example(string, CommandLine.UnParserSettings, object)"];
n12 [label="Exit CommandLine.Text.Example.Example(string, CommandLine.UnParserSettings, object)", span="35-35", cluster="CommandLine.Text.Example.Example(string, CommandLine.UnParserSettings, object)"];
n13 [label="Entry CommandLine.Text.Example.Example(string, object)", span="40-40", cluster="CommandLine.Text.Example.Example(string, object)"];
n14 [label="Exit CommandLine.Text.Example.Example(string, object)", span="40-40", cluster="CommandLine.Text.Example.Example(string, object)"];
n15 [label="Entry CommandLine.Text.Example.Equals(object)", span="75-75", cluster="CommandLine.Text.Example.Equals(object)"];
n16 [label="var other = obj as Example", span="77-77", cluster="CommandLine.Text.Example.Equals(object)"];
n19 [label="return base.Equals(obj);", span="83-83", cluster="CommandLine.Text.Example.Equals(object)"];
n17 [label="other != null", span="78-78", cluster="CommandLine.Text.Example.Equals(object)"];
n18 [label="return Equals(other);", span="80-80", cluster="CommandLine.Text.Example.Equals(object)"];
n20 [label="Exit CommandLine.Text.Example.Equals(object)", span="75-75", cluster="CommandLine.Text.Example.Equals(object)"];
n22 [label="Entry object.Equals(object)", span="0-0", cluster="object.Equals(object)"];
n21 [label="Entry CommandLine.Text.Example.Equals(CommandLine.Text.Example)", span="100-100", cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)"];
n23 [label="Entry CommandLine.Text.Example.GetHashCode()", span="90-90", cluster="CommandLine.Text.Example.GetHashCode()"];
n24 [label="return new { Group, GroupDescription, HelpText, FormatStyles, Sample }.GetHashCode();", span="92-92", cluster="CommandLine.Text.Example.GetHashCode()"];
n25 [label="Exit CommandLine.Text.Example.GetHashCode()", span="90-90", cluster="CommandLine.Text.Example.GetHashCode()"];
n26 [label="Entry object.GetHashCode()", span="0-0", cluster="object.GetHashCode()"];
n27 [label="other == null", span="102-102", cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)"];
n29 [label="return Group.Equals(other.Group)\r\n                && GroupDescription.Equals(other.GroupDescription)\r\n                && HelpText.Equals(other.HelpText)\r\n                && FormatStyles.SequenceEqual(other.FormatStyles)\r\n                && Sample.Equals(other.Sample);", span="107-111", cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)"];
n28 [label="return false;", span="104-104", cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)"];
n30 [label="Exit CommandLine.Text.Example.Equals(CommandLine.Text.Example)", span="100-100", cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)"];
n31 [label="Entry string.Equals(string)", span="0-0", cluster="string.Equals(string)"];
n32 [label="Entry Unk.SequenceEqual", span="", cluster="Unk.SequenceEqual"];
n33 [label="Entry CommandLine.Text.ExampleExtensions.WithGroupDescription(CommandLine.Text.Example, string)", span="117-117", cluster="CommandLine.Text.ExampleExtensions.WithGroupDescription(CommandLine.Text.Example, string)"];
n34 [label="return new Example(\r\n                example.Group,\r\n                newGroupDescription,\r\n                example.HelpText,\r\n                example.FormatStyles,\r\n                example.Sample);", span="119-124", cluster="CommandLine.Text.ExampleExtensions.WithGroupDescription(CommandLine.Text.Example, string)"];
n35 [label="Exit CommandLine.Text.ExampleExtensions.WithGroupDescription(CommandLine.Text.Example, string)", span="117-117", cluster="CommandLine.Text.ExampleExtensions.WithGroupDescription(CommandLine.Text.Example, string)"];
m3_30 [label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0", cluster="System.Array.CreateInstance(System.Type, int)", file="EnumExtensionsTests.cs"];
m3_7 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="EnumExtensionsTests.cs"];
m3_33 [label="Entry CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="73-73", cluster="CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="EnumExtensionsTests.cs"];
m3_34 [label="return !source.Any();", span="75-75", cluster="CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="EnumExtensionsTests.cs"];
m3_35 [label="Exit CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="73-73", cluster="CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="EnumExtensionsTests.cs"];
m3_19 [label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0", cluster="System.Collections.IEnumerator.MoveNext()", file="EnumExtensionsTests.cs"];
m3_31 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="EnumExtensionsTests.cs"];
m3_32 [label="Entry System.Array.CopyTo(System.Array, int)", span="0-0", cluster="System.Array.CopyTo(System.Array, int)", file="EnumExtensionsTests.cs"];
m3_36 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="EnumExtensionsTests.cs"];
m3_24 [label="Entry CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", span="66-66", cluster="CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", file="EnumExtensionsTests.cs"];
m3_25 [label="var array = Array.CreateInstance(type, value.Count())", span="68-68", cluster="CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", file="EnumExtensionsTests.cs"];
m3_26 [label="value.ToArray().CopyTo(array, 0)", span="69-69", cluster="CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", file="EnumExtensionsTests.cs"];
m3_27 [label="return array;", span="70-70", cluster="CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", file="EnumExtensionsTests.cs"];
m3_28 [label="Exit CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", span="66-66", cluster="CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", file="EnumExtensionsTests.cs"];
m3_18 [label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="EnumExtensionsTests.cs"];
m3_21 [label="Entry CommandLine.Infrastructure.EnumerableExtensions.ToEnumerable<T>(System.Collections.Generic.List<T>)", span="61-61", cluster="CommandLine.Infrastructure.EnumerableExtensions.ToEnumerable<T>(System.Collections.Generic.List<T>)", file="EnumExtensionsTests.cs"];
m3_22 [label="return value;", span="63-63", cluster="CommandLine.Infrastructure.EnumerableExtensions.ToEnumerable<T>(System.Collections.Generic.List<T>)", file="EnumExtensionsTests.cs"];
m3_23 [label="Exit CommandLine.Infrastructure.EnumerableExtensions.ToEnumerable<T>(System.Collections.Generic.List<T>)", span="61-61", cluster="CommandLine.Infrastructure.EnumerableExtensions.ToEnumerable<T>(System.Collections.Generic.List<T>)", file="EnumExtensionsTests.cs"];
m3_9 [label="Entry CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="18-18", cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="EnumExtensionsTests.cs"];
m3_10 [label="var enumerator = source.GetEnumerator()", span="20-20", cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=red, community=0, file="EnumExtensionsTests.cs"];
m3_15 [label="yield return selector(left, right);", span="29-29", cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="EnumExtensionsTests.cs"];
m3_11 [label="enumerator.MoveNext()", span="22-22", cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=red, community=0, file="EnumExtensionsTests.cs"];
m3_12 [label="var left = enumerator.Current", span="24-24", cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=red, community=0, file="EnumExtensionsTests.cs"];
m3_13 [label="enumerator.MoveNext()", span="26-26", cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="EnumExtensionsTests.cs"];
m3_14 [label="var right = enumerator.Current", span="28-28", cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="EnumExtensionsTests.cs"];
m3_16 [label="left = right", span="30-30", cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="EnumExtensionsTests.cs"];
m3_17 [label="Exit CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="18-18", cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="EnumExtensionsTests.cs"];
m3_8 [label="Entry System.Collections.Generic.IEnumerable<TSource>.PairwiseImpl<TSource, TResult>(System.Func<TSource, TSource, TResult>)", span="18-18", cluster="System.Collections.Generic.IEnumerable<TSource>.PairwiseImpl<TSource, TResult>(System.Func<TSource, TSource, TResult>)", file="EnumExtensionsTests.cs"];
m3_20 [label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0", cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="EnumExtensionsTests.cs"];
m3_29 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="EnumExtensionsTests.cs"];
m3_0 [label="Entry CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="10-10", cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="EnumExtensionsTests.cs"];
m3_1 [label="source == null", span="12-12", cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=red, community=0, file="EnumExtensionsTests.cs"];
m3_3 [label="selector == null", span="13-13", cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=red, community=0, file="EnumExtensionsTests.cs"];
m3_5 [label="return source.PairwiseImpl(selector);", span="15-15", cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=red, community=0, file="EnumExtensionsTests.cs"];
m3_2 [label="throw new ArgumentNullException(''source'');", span="12-12", cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=red, community=0, file="EnumExtensionsTests.cs"];
m3_4 [label="throw new ArgumentNullException(''selector'');", span="13-13", cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=red, community=0, file="EnumExtensionsTests.cs"];
m3_6 [label="Exit CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="10-10", cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="EnumExtensionsTests.cs"];
m5_0 [label="Entry Humanizer.Resources.Resources()", span="31-31", cluster="Humanizer.Resources.Resources()", file="Resources.Designer.cs"];
m5_1 [label="Exit Humanizer.Resources.Resources()", span="31-31", cluster="Humanizer.Resources.Resources()", file="Resources.Designer.cs"];
m6_51 [label="Entry string.Humanize()", span="74-74", cluster="string.Humanize()", file="StringExtensions.cs"];
m6_10 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="StringExtensions.cs"];
m6_44 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="StringExtensions.cs"];
m6_45 [label="Entry string.Contains(string)", span="0-0", cluster="string.Contains(string)", file="StringExtensions.cs"];
m6_35 [label="Entry char.IsLower(char)", span="0-0", cluster="char.IsLower(char)", file="StringExtensions.cs"];
m6_33 [label="Entry char.IsDigit(char)", span="0-0", cluster="char.IsDigit(char)", file="StringExtensions.cs"];
m6_14 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="StringExtensions.cs"];
m6_46 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="StringExtensions.cs"];
m6_52 [label="Entry Humanizer.StringExtensions.ApplyCase(string, Humanizer.LetterCasing)", span="93-93", cluster="Humanizer.StringExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="StringExtensions.cs"];
m6_53 [label=casing, span="95-95", cluster="Humanizer.StringExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="StringExtensions.cs"];
m6_55 [label="return CultureInfo.CurrentCulture.TextInfo.ToTitleCase(input);", span="98-98", cluster="Humanizer.StringExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="StringExtensions.cs"];
m6_57 [label="return input.ToLower();", span="101-101", cluster="Humanizer.StringExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="StringExtensions.cs"];
m6_59 [label="return input.ToUpper();", span="104-104", cluster="Humanizer.StringExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="StringExtensions.cs"];
m6_61 [label="return string.Concat(input.Substring(0, 1).ToUpper(), input.Substring(1));", span="107-107", cluster="Humanizer.StringExtensions.ApplyCase(string, Humanizer.LetterCasing)", color=red, community=0, file="StringExtensions.cs"];
m6_54 [label="LetterCasing.Title", span="97-97", cluster="Humanizer.StringExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="StringExtensions.cs"];
m6_56 [label="LetterCasing.LowerCase", span="100-100", cluster="Humanizer.StringExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="StringExtensions.cs"];
m6_58 [label="LetterCasing.AllCaps", span="103-103", cluster="Humanizer.StringExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="StringExtensions.cs"];
m6_60 [label="LetterCasing.Sentence", span="106-106", cluster="Humanizer.StringExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="StringExtensions.cs"];
m6_62 [label="throw new ArgumentOutOfRangeException(''casing'');", span="110-110", cluster="Humanizer.StringExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="StringExtensions.cs"];
m6_63 [label="Exit Humanizer.StringExtensions.ApplyCase(string, Humanizer.LetterCasing)", span="93-93", cluster="Humanizer.StringExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="StringExtensions.cs"];
m6_4 [label="Entry string.Join(string, params string[])", span="0-0", cluster="string.Join(string, params string[])", file="StringExtensions.cs"];
m6_47 [label="Entry Humanizer.StringExtensions.Humanize(string, Humanizer.LetterCasing)", span="86-86", cluster="Humanizer.StringExtensions.Humanize(string, Humanizer.LetterCasing)", file="StringExtensions.cs"];
m6_48 [label="var humanizedString = input.Humanize()", span="88-88", cluster="Humanizer.StringExtensions.Humanize(string, Humanizer.LetterCasing)", file="StringExtensions.cs"];
m6_49 [label="return ApplyCase(humanizedString, casing);", span="90-90", cluster="Humanizer.StringExtensions.Humanize(string, Humanizer.LetterCasing)", file="StringExtensions.cs"];
m6_50 [label="Exit Humanizer.StringExtensions.Humanize(string, Humanizer.LetterCasing)", span="86-86", cluster="Humanizer.StringExtensions.Humanize(string, Humanizer.LetterCasing)", file="StringExtensions.cs"];
m6_37 [label="Entry Humanizer.StringExtensions.Humanize(string)", span="74-74", cluster="Humanizer.StringExtensions.Humanize(string)", file="StringExtensions.cs"];
m6_38 [label="!input.Any(Char.IsLower)", span="77-77", cluster="Humanizer.StringExtensions.Humanize(string)", file="StringExtensions.cs"];
m6_39 [label="return input;", span="78-78", cluster="Humanizer.StringExtensions.Humanize(string)", file="StringExtensions.cs"];
m6_40 [label="input.Contains(''_'')", span="80-80", cluster="Humanizer.StringExtensions.Humanize(string)", file="StringExtensions.cs"];
m6_41 [label="return FromUnderscoreSeparatedWords(input);", span="81-81", cluster="Humanizer.StringExtensions.Humanize(string)", file="StringExtensions.cs"];
m6_42 [label="return FromPascalCase(input);", span="83-83", cluster="Humanizer.StringExtensions.Humanize(string)", file="StringExtensions.cs"];
m6_43 [label="Exit Humanizer.StringExtensions.Humanize(string)", span="74-74", cluster="Humanizer.StringExtensions.Humanize(string)", file="StringExtensions.cs"];
m6_66 [label="Entry string.ToUpper()", span="0-0", cluster="string.ToUpper()", file="StringExtensions.cs"];
m6_13 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="StringExtensions.cs"];
m6_12 [label="Entry string.cstr", span="", cluster="string.cstr", file="StringExtensions.cs"];
m6_11 [label="Entry Unk.Aggregate", span="", cluster="Unk.Aggregate", file="StringExtensions.cs"];
m6_67 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="StringExtensions.cs"];
m6_5 [label="Entry Humanizer.StringExtensions.FromPascalCase(string)", span="35-35", cluster="Humanizer.StringExtensions.FromPascalCase(string)", file="StringExtensions.cs"];
m6_6 [label="var chars = name.Aggregate(\r\n                new List<char>(),\r\n                (list, currentChar) =>\r\n                {\r\n                    if (currentChar == ' ')\r\n                    {\r\n                        list.Add(currentChar);\r\n                        return list;\r\n                    }\r\n\r\n                    if (list.Count == 0)\r\n                    {\r\n                        list.Add(currentChar);\r\n                        return list;\r\n                    }\r\n\r\n                    var lastCharacterInTheList = list[list.Count - 1];\r\n                    if (lastCharacterInTheList != ' ')\r\n                    {\r\n                        if (char.IsDigit(lastCharacterInTheList))\r\n                        {\r\n                            if (char.IsLetter(currentChar))\r\n                                list.Add(' ');\r\n                        }\r\n                        else if (!char.IsLower(currentChar))\r\n                            list.Add(' ');\r\n                    }\r\n\r\n                    list.Add(char.ToLower(currentChar));\r\n\r\n                    return list;\r\n                })", span="37-68", cluster="Humanizer.StringExtensions.FromPascalCase(string)", file="StringExtensions.cs"];
m6_7 [label="var result = new string(chars.ToArray())", span="70-70", cluster="Humanizer.StringExtensions.FromPascalCase(string)", file="StringExtensions.cs"];
m6_8 [label="return result.Replace('' i '', '' I '');", span="71-71", cluster="Humanizer.StringExtensions.FromPascalCase(string)", file="StringExtensions.cs"];
m6_9 [label="Exit Humanizer.StringExtensions.FromPascalCase(string)", span="35-35", cluster="Humanizer.StringExtensions.FromPascalCase(string)", file="StringExtensions.cs"];
m6_64 [label="Entry System.Globalization.TextInfo.ToTitleCase(string)", span="0-0", cluster="System.Globalization.TextInfo.ToTitleCase(string)", file="StringExtensions.cs"];
m6_69 [label="Entry string.Concat(string, string)", span="0-0", cluster="string.Concat(string, string)", file="StringExtensions.cs"];
m6_34 [label="Entry char.IsLetter(char)", span="0-0", cluster="char.IsLetter(char)", file="StringExtensions.cs"];
m6_15 [label="Entry lambda expression", span="39-68", cluster="lambda expression", file="StringExtensions.cs"];
m6_0 [label="Entry lambda expression", span="34-34", cluster="lambda expression", file="StringExtensions.cs"];
m6_1 [label="string.Join('' '', methodName.Split(new[] { '_' }))", span="34-34", cluster="lambda expression", file="StringExtensions.cs"];
m6_2 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="StringExtensions.cs"];
m6_16 [label="currentChar == ' '", span="41-41", cluster="lambda expression", file="StringExtensions.cs"];
m6_17 [label="list.Add(currentChar)", span="43-43", cluster="lambda expression", file="StringExtensions.cs"];
m6_18 [label="return list;", span="44-44", cluster="lambda expression", file="StringExtensions.cs"];
m6_19 [label="list.Count == 0", span="47-47", cluster="lambda expression", file="StringExtensions.cs"];
m6_20 [label="list.Add(currentChar)", span="49-49", cluster="lambda expression", file="StringExtensions.cs"];
m6_21 [label="return list;", span="50-50", cluster="lambda expression", file="StringExtensions.cs"];
m6_22 [label="var lastCharacterInTheList = list[list.Count - 1]", span="53-53", cluster="lambda expression", file="StringExtensions.cs"];
m6_25 [label="char.IsLetter(currentChar)", span="58-58", cluster="lambda expression", file="StringExtensions.cs"];
m6_26 [label="list.Add(' ')", span="59-59", cluster="lambda expression", file="StringExtensions.cs"];
m6_27 [label="!char.IsLower(currentChar)", span="61-61", cluster="lambda expression", file="StringExtensions.cs"];
m6_28 [label="list.Add(' ')", span="62-62", cluster="lambda expression", file="StringExtensions.cs"];
m6_29 [label="list.Add(char.ToLower(currentChar))", span="65-65", cluster="lambda expression", file="StringExtensions.cs"];
m6_30 [label="return list;", span="67-67", cluster="lambda expression", file="StringExtensions.cs"];
m6_23 [label="lastCharacterInTheList != ' '", span="54-54", cluster="lambda expression", file="StringExtensions.cs"];
m6_24 [label="char.IsDigit(lastCharacterInTheList)", span="56-56", cluster="lambda expression", file="StringExtensions.cs"];
m6_31 [label="Exit lambda expression", span="39-68", cluster="lambda expression", file="StringExtensions.cs"];
m6_70 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="StringExtensions.cs"];
m6_3 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="StringExtensions.cs"];
m6_36 [label="Entry char.ToLower(char)", span="0-0", cluster="char.ToLower(char)", file="StringExtensions.cs"];
m6_32 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="StringExtensions.cs"];
m6_65 [label="Entry string.ToLower()", span="0-0", cluster="string.ToLower()", file="StringExtensions.cs"];
m6_68 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="StringExtensions.cs"];
m7_23 [label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreLeftIntact()", span="59-59", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreLeftIntact()", file="StringExtensionsTests.cs"];
m7_24 [label="Assert.Equal(\r\n                ''HTML'',\r\n                ''HTML''.Humanize())", span="61-63", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreLeftIntact()", file="StringExtensionsTests.cs"];
m7_25 [label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreLeftIntact()", span="59-59", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreLeftIntact()", file="StringExtensionsTests.cs"];
m7_3 [label="Entry Humanizer.Localisation.Formatters.RomanianFormatter.RomanianFormatter()", span="2-2", cluster="Humanizer.Localisation.Formatters.RomanianFormatter.RomanianFormatter()", file="StringExtensionsTests.cs"];
m7_0 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="StringExtensionsTests.cs"];
m7_1 [label="new RomanianFormatter()", span="16-16", cluster="lambda expression", file="StringExtensionsTests.cs", color=red, community=0];
m7_2 [label="Exit lambda expression", span="16-16", cluster="lambda expression", file="StringExtensionsTests.cs"];
m7_36 [label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCase()", span="91-91", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCase()", file="StringExtensionsTests.cs"];
m7_37 [label="Assert.Equal(\r\n                ''can return lower case'',\r\n                ''CanReturnLowerCase''.Humanize(LetterCasing.LowerCase))", span="93-95", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCase()", file="StringExtensionsTests.cs"];
m7_38 [label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCase()", span="91-91", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCase()", file="StringExtensionsTests.cs"];
m7_30 [label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", span="75-75", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", file="StringExtensionsTests.cs"];
m7_31 [label="Assert.Equal(\r\n                ''Can Return Title Case'',\r\n                ''Can_return_title_Case''.Humanize(LetterCasing.Title))", span="77-79", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", file="StringExtensionsTests.cs"];
m7_32 [label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", span="75-75", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", file="StringExtensionsTests.cs"];
m7_4 [label="Entry lambda expression", span="17-17", cluster="lambda expression", file="StringExtensionsTests.cs"];
m7_8 [label="Entry lambda expression", span="18-18", cluster="lambda expression", file="StringExtensionsTests.cs"];
m7_9 [label="new ArabicFormatter()", span="18-18", cluster="lambda expression", file="StringExtensionsTests.cs", color=red, community=0];
m7_10 [label="Exit lambda expression", span="18-18", cluster="lambda expression", file="StringExtensionsTests.cs"];
m7_39 [label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", span="99-99", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", file="StringExtensionsTests.cs"];
m7_40 [label="Assert.Equal(\r\n                ''lowercase'',\r\n                ''LOWERCASE''.Humanize(LetterCasing.LowerCase))", span="101-103", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", color=green, community=1, file="StringExtensionsTests.cs"];
m7_41 [label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", span="99-99", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", file="StringExtensionsTests.cs"];
m7_11 [label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", span="29-29", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", file="StringExtensionsTests.cs"];
m7_26 [label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", span="67-67", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", file="StringExtensionsTests.cs"];
m7_27 [label="Assert.Equal(\r\n                ''Can Return Title Case'',\r\n                ''CanReturnTitleCase''.Humanize(LetterCasing.Title))", span="69-71", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", file="StringExtensionsTests.cs"];
m7_28 [label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", span="67-67", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", file="StringExtensionsTests.cs"];
m7_14 [label="Exit lambda expression", span="19-19", cluster="lambda expression", file="StringExtensionsTests.cs"];
m7_15 [label="Entry Humanizer.Localisation.Formatters.CzechSlovakPolishFormatter.CzechSlovakPolishFormatter()", span="2-2", cluster="Humanizer.Localisation.Formatters.CzechSlovakPolishFormatter.CzechSlovakPolishFormatter()", file="StringExtensionsTests.cs"];
m7_16 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="StringExtensionsTests.cs"];
m7_42 [label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoUpperCase()", span="107-107", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoUpperCase()", file="StringExtensionsTests.cs"];
m7_43 [label="Assert.Equal(\r\n                ''CAN HUMANIZE INTO UPPER CASE'',\r\n                ''CanHumanizeIntoUpperCase''.Humanize(LetterCasing.AllCaps))", span="109-111", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoUpperCase()", color=green, community=1, file="StringExtensionsTests.cs"];
m7_44 [label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoUpperCase()", span="107-107", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoUpperCase()", file="StringExtensionsTests.cs"];
m7_33 [label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.TitleHumanizationHonorsAllCaps()", span="83-83", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.TitleHumanizationHonorsAllCaps()", file="StringExtensionsTests.cs"];
m7_34 [label="Assert.Equal(\r\n                ''Title Humanization Honors ALLCAPS'',\r\n                ''Title_humanization_Honors_ALLCAPS''.Humanize(LetterCasing.Title))", span="85-87", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.TitleHumanizationHonorsAllCaps()", file="StringExtensionsTests.cs"];
m7_35 [label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.TitleHumanizationHonorsAllCaps()", span="83-83", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.TitleHumanizationHonorsAllCaps()", file="StringExtensionsTests.cs"];
m7_7 [label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", span="15-15", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", file="StringExtensionsTests.cs"];
m7_5 [label="new RussianFormatter()", span="17-17", cluster="lambda expression", file="StringExtensionsTests.cs", color=red, community=0];
m7_6 [label="Exit lambda expression", span="17-17", cluster="lambda expression", file="StringExtensionsTests.cs"];
m7_29 [label="Entry string.Humanize(Humanizer.LetterCasing)", span="61-61", cluster="string.Humanize(Humanizer.LetterCasing)", file="StringExtensionsTests.cs"];
m7_20 [label="new CzechSlovakPolishFormatter()", span="21-21", cluster="lambda expression", file="StringExtensionsTests.cs", color=red, community=0];
m7_21 [label="Exit lambda expression", span="21-21", cluster="lambda expression", file="StringExtensionsTests.cs"];
m7_22 [label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", span="51-51", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", file="StringExtensionsTests.cs"];
m7_19 [label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringPreservesCasing()", span="43-43", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringPreservesCasing()", file="StringExtensionsTests.cs"];
m7_12 [label="Assert.Equal(''Number is at the end 100'', ''NumberIsAtTheEnd100''.Humanize())", span="31-31", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", file="StringExtensionsTests.cs"];
m7_13 [label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", span="29-29", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", color=red, community=0, file="StringExtensionsTests.cs"];
m7_17 [label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringPreservesCasing()", span="43-43", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringPreservesCasing()", color=red, community=0, file="StringExtensionsTests.cs"];
m7_18 [label="Assert.Equal(\r\n                ''Underscored input String is turned INTO sentence'',\r\n                ''Underscored_input_String_is_turned_INTO_sentence''.Humanize())", span="45-47", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringPreservesCasing()", file="StringExtensionsTests.cs"];
m7_45 [label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.CanTurnIntoUpperCasewhenUsingUnderscores()", span="115-115", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanTurnIntoUpperCasewhenUsingUnderscores()", file="StringExtensionsTests.cs"];
m7_46 [label="Assert.Equal(\r\n                ''CAN HUMANIZE INTO UPPER CASE'',\r\n                ''Can_Humanize_into_Upper_case''.Humanize(LetterCasing.AllCaps))", span="117-119", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanTurnIntoUpperCasewhenUsingUnderscores()", file="StringExtensionsTests.cs"];
m7_47 [label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.CanTurnIntoUpperCasewhenUsingUnderscores()", span="115-115", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanTurnIntoUpperCasewhenUsingUnderscores()", file="StringExtensionsTests.cs"];
n36 -> n1  [key=1, style=dashed, color=red, label="CommandLine.Text.Example"];
n36 -> n2  [key=1, style=dashed, color=red, label="CommandLine.Text.Example"];
n36 -> n3  [key=1, style=dashed, color=red, label="CommandLine.Text.Example"];
n36 -> n4  [key=1, style=dashed, color=red, label="CommandLine.Text.Example"];
n36 -> n5  [key=1, style=dashed, color=red, label="CommandLine.Text.Example"];
n36 -> n18  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.Example"];
n36 -> n19  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.Example"];
n36 -> n24  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.Example"];
n36 -> n29  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.Example"];
n0 -> n1  [key=0, style=solid, color=red];
n0 -> n2  [key=1, style=dashed, color=red, label=string];
n0 -> n3  [key=1, style=dashed, color=red, label=string];
n0 -> n4  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>"];
n0 -> n5  [key=1, style=dashed, color=red, label=object];
n1 -> n2  [key=0, style=solid, color=red];
n2 -> n3  [key=0, style=solid, color=red];
n3 -> n4  [key=0, style=solid, color=red];
n4 -> n5  [key=0, style=solid, color=red];
n5 -> n6  [key=0, style=solid, color=red];
n6 -> n0  [key=0, style=bold, color=blue];
n7 -> n8  [key=0, style=solid];
n8 -> n7  [key=0, style=bold, color=blue];
n9 -> n10  [key=0, style=solid];
n10 -> n9  [key=0, style=bold, color=blue];
n11 -> n12  [key=0, style=solid];
n12 -> n11  [key=0, style=bold, color=blue];
n13 -> n14  [key=0, style=solid];
n14 -> n13  [key=0, style=bold, color=blue];
n15 -> n16  [key=0, style=solid];
n15 -> n19  [key=1, style=dashed, color=darkseagreen4, label=object];
n16 -> n17  [key=0, style=solid];
n16 -> n18  [key=1, style=dashed, color=darkseagreen4, label=other];
n19 -> n20  [key=0, style=solid];
n19 -> n22  [key=2, style=dotted];
n17 -> n18  [key=0, style=solid];
n17 -> n19  [key=0, style=solid];
n18 -> n20  [key=0, style=solid];
n18 -> n21  [key=2, style=dotted];
n20 -> n15  [key=0, style=bold, color=blue];
n21 -> n27  [key=0, style=solid];
n21 -> n29  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.Example"];
n23 -> n24  [key=0, style=solid];
n24 -> n25  [key=0, style=solid];
n24 -> n26  [key=2, style=dotted];
n25 -> n23  [key=0, style=bold, color=blue];
n27 -> n28  [key=0, style=solid];
n27 -> n29  [key=0, style=solid];
n29 -> n30  [key=0, style=solid];
n29 -> n31  [key=2, style=dotted];
n29 -> n32  [key=2, style=dotted];
n29 -> n22  [key=2, style=dotted];
n28 -> n30  [key=0, style=solid];
n30 -> n21  [key=0, style=bold, color=blue];
n33 -> n34  [key=0, style=solid];
n34 -> n35  [key=0, style=solid];
n34 -> n0  [key=2, style=dotted];
n35 -> n33  [key=0, style=bold, color=blue];
m3_33 -> m3_34  [key=0, style=solid];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_36  [key=2, style=dotted];
m3_35 -> m3_33  [key=0, style=bold, color=blue];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_26  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_29  [key=2, style=dotted];
m3_25 -> m3_30  [key=2, style=dotted];
m3_25 -> m3_27  [key=1, style=dashed, color=darkseagreen4, label=array];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_31  [key=2, style=dotted];
m3_26 -> m3_32  [key=2, style=dotted];
m3_27 -> m3_28  [key=0, style=solid];
m3_28 -> m3_24  [key=0, style=bold, color=blue];
m3_21 -> m3_22  [key=0, style=solid];
m3_22 -> m3_23  [key=0, style=solid];
m3_23 -> m3_21  [key=0, style=bold, color=blue];
m3_9 -> m3_10  [key=0, style=solid, color=red];
m3_9 -> m3_15  [key=0, style=bold, color=crimson];
m3_10 -> m3_11  [key=0, style=solid, color=red];
m3_10 -> m3_18  [key=2, style=dotted, color=red];
m3_10 -> m3_12  [key=1, style=dashed, color=red, label=enumerator];
m3_10 -> m3_13  [key=1, style=dashed, color=red, label=enumerator];
m3_10 -> m3_14  [key=1, style=dashed, color=red, label=enumerator];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_20  [key=2, style=dotted];
m3_11 -> m3_12  [key=0, style=solid, color=red];
m3_11 -> m3_17  [key=0, style=solid, color=red];
m3_11 -> m3_19  [key=2, style=dotted, color=red];
m3_12 -> m3_13  [key=0, style=solid, color=red];
m3_12 -> m3_15  [key=1, style=dashed, color=red, label=left];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_17  [key=0, style=solid];
m3_13 -> m3_19  [key=2, style=dotted];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_16  [key=1, style=dashed, color=darkseagreen4, label=right];
m3_16 -> m3_13  [key=0, style=solid];
m3_17 -> m3_9  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid, color=red];
m3_0 -> m3_3  [key=1, style=dashed, color=red, label="System.Func<TSource, TSource, TResult>"];
m3_0 -> m3_5  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<TSource>"];
m3_1 -> m3_2  [key=0, style=solid, color=red];
m3_1 -> m3_3  [key=0, style=solid, color=red];
m3_3 -> m3_4  [key=0, style=solid, color=red];
m3_3 -> m3_5  [key=0, style=solid, color=red];
m3_5 -> m3_6  [key=0, style=solid, color=red];
m3_5 -> m3_8  [key=2, style=dotted, color=red];
m3_2 -> m3_6  [key=0, style=solid, color=red];
m3_2 -> m3_7  [key=2, style=dotted, color=red];
m3_4 -> m3_6  [key=0, style=solid, color=red];
m3_4 -> m3_7  [key=2, style=dotted, color=red];
m3_6 -> m3_0  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_0  [key=0, style=bold, color=blue];
m6_52 -> m6_53  [key=0, style=solid];
m6_52 -> m6_55  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_52 -> m6_57  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_52 -> m6_59  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_52 -> m6_61  [key=1, style=dashed, color=red, label=string];
m6_52 -> m6_48  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m6_52 -> m6_47  [key=3, color=darkorchid, style=bold, label="Parameter variable Humanizer.LetterCasing casing"];
m6_53 -> m6_54  [key=0, style=solid];
m6_53 -> m6_56  [key=0, style=solid];
m6_53 -> m6_58  [key=0, style=solid];
m6_53 -> m6_60  [key=0, style=solid];
m6_53 -> m6_62  [key=0, style=solid];
m6_55 -> m6_63  [key=0, style=solid];
m6_55 -> m6_64  [key=2, style=dotted];
m6_57 -> m6_63  [key=0, style=solid];
m6_57 -> m6_65  [key=2, style=dotted];
m6_59 -> m6_63  [key=0, style=solid];
m6_59 -> m6_66  [key=2, style=dotted];
m6_61 -> m6_63  [key=0, style=solid, color=red];
m6_61 -> m6_67  [key=2, style=dotted, color=red];
m6_61 -> m6_66  [key=2, style=dotted, color=red];
m6_61 -> m6_68  [key=2, style=dotted, color=red];
m6_61 -> m6_69  [key=2, style=dotted, color=red];
m6_54 -> m6_55  [key=0, style=solid];
m6_56 -> m6_57  [key=0, style=solid];
m6_58 -> m6_59  [key=0, style=solid];
m6_60 -> m6_61  [key=0, style=solid, color=red];
m6_62 -> m6_63  [key=0, style=solid];
m6_62 -> m6_70  [key=2, style=dotted];
m6_63 -> m6_52  [key=0, style=bold, color=blue];
m6_47 -> m6_48  [key=0, style=solid];
m6_47 -> m6_49  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.LetterCasing"];
m6_47 -> m6_52  [key=3, color=darkorchid, style=bold, label="method methodReturn string Humanize"];
m6_48 -> m6_49  [key=0, style=solid];
m6_48 -> m6_51  [key=2, style=dotted];
m6_48 -> m6_37  [key=3, color=darkorchid, style=bold, label="Local variable string humanizedString"];
m6_49 -> m6_50  [key=0, style=solid];
m6_49 -> m6_52  [key=2, style=dotted];
m6_50 -> m6_47  [key=0, style=bold, color=blue];
m6_37 -> m6_38  [key=0, style=solid];
m6_37 -> m6_39  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_37 -> m6_40  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_37 -> m6_41  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_37 -> m6_42  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_37 -> m6_37  [key=3, color=darkorchid, style=bold, label="method methodReturn string Humanize"];
m6_37 -> m6_5  [key=3, color=darkorchid, style=bold, label="method methodReturn string Humanize"];
m6_38 -> m6_39  [key=0, style=solid];
m6_38 -> m6_40  [key=0, style=solid];
m6_38 -> m6_44  [key=2, style=dotted];
m6_39 -> m6_43  [key=0, style=solid];
m6_40 -> m6_41  [key=0, style=solid];
m6_40 -> m6_42  [key=0, style=solid];
m6_40 -> m6_45  [key=2, style=dotted];
m6_41 -> m6_43  [key=0, style=solid];
m6_41 -> m6_46  [key=2, style=dotted];
m6_42 -> m6_43  [key=0, style=solid];
m6_42 -> m6_5  [key=2, style=dotted];
m6_43 -> m6_37  [key=0, style=bold, color=blue];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_37  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_10  [key=2, style=dotted];
m6_6 -> m6_11  [key=2, style=dotted];
m6_6 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_6 -> m6_6  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.List<char> "];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_12  [key=2, style=dotted];
m6_7 -> m6_13  [key=2, style=dotted];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_14  [key=2, style=dotted];
m6_9 -> m6_5  [key=0, style=bold, color=blue];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_17  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<char>"];
m6_15 -> m6_18  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<char>"];
m6_15 -> m6_19  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<char>"];
m6_15 -> m6_20  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<char>"];
m6_15 -> m6_21  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<char>"];
m6_15 -> m6_22  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<char>"];
m6_15 -> m6_25  [key=1, style=dashed, color=darkseagreen4, label=char];
m6_15 -> m6_26  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<char>"];
m6_15 -> m6_27  [key=1, style=dashed, color=darkseagreen4, label=char];
m6_15 -> m6_28  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<char>"];
m6_15 -> m6_29  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<char>"];
m6_15 -> m6_30  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<char>"];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_0  [key=3, color=darkorchid, style=bold, label="Field variable System.Func<string, string> FromUnderscoreSeparatedWords"];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=2, style=dotted];
m6_1 -> m6_4  [key=2, style=dotted];
m6_2 -> m6_0  [key=0, style=bold, color=blue];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_19  [key=0, style=solid];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_32  [key=2, style=dotted];
m6_18 -> m6_31  [key=0, style=solid];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_22  [key=0, style=solid];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_32  [key=2, style=dotted];
m6_21 -> m6_31  [key=0, style=solid];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_24  [key=1, style=dashed, color=darkseagreen4, label=lastCharacterInTheList];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_29  [key=0, style=solid];
m6_25 -> m6_34  [key=2, style=dotted];
m6_26 -> m6_29  [key=0, style=solid];
m6_26 -> m6_32  [key=2, style=dotted];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_29  [key=0, style=solid];
m6_27 -> m6_35  [key=2, style=dotted];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_32  [key=2, style=dotted];
m6_29 -> m6_30  [key=0, style=solid];
m6_29 -> m6_36  [key=2, style=dotted];
m6_29 -> m6_32  [key=2, style=dotted];
m6_30 -> m6_31  [key=0, style=solid];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_29  [key=0, style=solid];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_27  [key=0, style=solid];
m6_24 -> m6_33  [key=2, style=dotted];
m6_31 -> m6_15  [key=0, style=bold, color=blue];
m7_23 -> m7_24  [key=0, style=solid];
m7_24 -> m7_4  [key=2, style=dotted];
m7_24 -> m7_25  [key=0, style=solid];
m7_24 -> m7_3  [key=2, style=dotted];
m7_25 -> m7_23  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid, color=red];
m7_1 -> m7_4  [key=2, style=dotted];
m7_1 -> m7_2  [key=0, style=solid, color=red];
m7_1 -> m7_3  [key=2, style=dotted, color=red];
m7_2 -> m7_0  [key=0, style=bold, color=blue];
m7_36 -> m7_37  [key=0, style=solid];
m7_37 -> m7_29  [key=2, style=dotted];
m7_37 -> m7_4  [key=2, style=dotted];
m7_37 -> m7_38  [key=0, style=solid];
m7_38 -> m7_36  [key=0, style=bold, color=blue];
m7_30 -> m7_31  [key=0, style=solid];
m7_31 -> m7_29  [key=2, style=dotted];
m7_31 -> m7_4  [key=2, style=dotted];
m7_31 -> m7_32  [key=0, style=solid];
m7_32 -> m7_30  [key=0, style=bold, color=blue];
m7_4 -> m7_5  [key=0, style=solid, color=red];
m7_8 -> m7_9  [key=0, style=solid, color=red];
m7_9 -> m7_4  [key=2, style=dotted];
m7_9 -> m7_10  [key=0, style=solid, color=red];
m7_9 -> m7_3  [key=2, style=dotted];
m7_9 -> m7_11  [key=2, style=dotted, color=red];
m7_10 -> m7_8  [key=0, style=bold, color=blue];
m7_39 -> m7_40  [key=0, style=solid, color=green];
m7_40 -> m7_41  [key=0, style=solid, color=green];
m7_40 -> m7_29  [key=2, style=dotted, color=green];
m7_40 -> m7_4  [key=2, style=dotted, color=green];
m7_41 -> m7_39  [key=0, style=bold, color=blue];
m7_11 -> m7_12  [key=0, style=solid];
m7_26 -> m7_27  [key=0, style=solid];
m7_27 -> m7_29  [key=2, style=dotted];
m7_27 -> m7_4  [key=2, style=dotted];
m7_27 -> m7_28  [key=0, style=solid];
m7_28 -> m7_26  [key=0, style=bold, color=blue];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> m7_12  [key=0, style=bold, color=blue];
m7_15 -> m7_4  [key=2, style=dotted];
m7_15 -> m7_16  [key=0, style=solid];
m7_15 -> m7_3  [key=2, style=dotted];
m7_16 -> m7_14  [key=0, style=bold, color=blue];
m7_16 -> m7_17  [key=0, style=solid, color=red];
m7_42 -> m7_43  [key=0, style=solid, color=green];
m7_43 -> m7_44  [key=0, style=solid, color=green];
m7_43 -> m7_29  [key=2, style=dotted, color=green];
m7_43 -> m7_4  [key=2, style=dotted, color=green];
m7_44 -> m7_42  [key=0, style=bold, color=blue];
m7_33 -> m7_34  [key=0, style=solid];
m7_34 -> m7_29  [key=2, style=dotted];
m7_34 -> m7_4  [key=2, style=dotted];
m7_34 -> m7_35  [key=0, style=solid];
m7_35 -> m7_33  [key=0, style=bold, color=blue];
m7_7 -> m7_5  [key=0, style=bold, color=blue];
m7_5 -> m7_6  [key=0, style=solid, color=red];
m7_5 -> m7_7  [key=2, style=dotted, color=red];
m7_6 -> m7_4  [key=2, style=dotted];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_3  [key=2, style=dotted];
m7_20 -> m7_21  [key=0, style=solid, color=red];
m7_20 -> m7_15  [key=2, style=dotted, color=red];
m7_21 -> m7_4  [key=2, style=dotted];
m7_21 -> m7_22  [key=0, style=solid];
m7_21 -> m7_3  [key=2, style=dotted];
m7_21 -> m7_19  [key=0, style=bold, color=blue];
m7_22 -> m7_20  [key=0, style=bold, color=blue];
m7_19 -> m7_20  [key=0, style=solid, color=red];
m7_19 -> m7_17  [key=0, style=bold, color=blue];
m7_12 -> m7_13  [key=0, style=solid, color=red];
m7_12 -> m7_4  [key=2, style=dotted];
m7_12 -> m7_3  [key=2, style=dotted];
m7_13 -> m7_14  [key=0, style=solid, color=red];
m7_13 -> m7_15  [key=2, style=dotted, color=red];
m7_13 -> m7_11  [key=0, style=bold, color=blue];
m7_17 -> m7_18  [key=0, style=solid, color=red];
m7_17 -> m7_15  [key=2, style=dotted, color=red];
m7_18 -> m7_16  [key=0, style=bold, color=blue];
m7_18 -> m7_4  [key=2, style=dotted];
m7_18 -> m7_19  [key=0, style=solid];
m7_18 -> m7_3  [key=2, style=dotted];
m7_45 -> m7_46  [key=0, style=solid];
m7_46 -> m7_29  [key=2, style=dotted];
m7_46 -> m7_4  [key=2, style=dotted];
m7_46 -> m7_47  [key=0, style=solid];
m7_47 -> m7_45  [key=0, style=bold, color=blue];
}
