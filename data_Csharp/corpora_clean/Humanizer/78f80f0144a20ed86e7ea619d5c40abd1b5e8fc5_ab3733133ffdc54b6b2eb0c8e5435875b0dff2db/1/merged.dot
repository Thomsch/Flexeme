digraph  {
n49 [label="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter", span=""];
n0 [label="Entry Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.Convert(int)", span="14-14", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.Convert(int)"];
n1 [label="number < 0", span="16-16", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.Convert(int)"];
n2 [label="return string.Format(''minus {0}'', Convert(-number, true));", span="17-17", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.Convert(int)"];
n3 [label="return Convert(number, true);", span="18-18", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.Convert(int)"];
n4 [label="Exit Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.Convert(int)", span="14-14", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.Convert(int)"];
n5 [label="Entry Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.Convert(int, bool)", span="21-21", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.Convert(int, bool)"];
n6 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)"];
n7 [label="number == 0", span="23-23", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.Convert(int, bool)"];
n9 [label="checkForHoundredRule && number == 100", span="26-26", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.Convert(int, bool)"];
n12 [label="(number / 1000000000) > 0", span="31-31", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.Convert(int, bool)"];
n13 [label="sb.AppendFormat(''{0} milliard '', Convert(number / 1000000000, false))", span="33-33", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.Convert(int, bool)"];
n14 [label="number %= 1000000000", span="34-34", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.Convert(int, bool)"];
n15 [label="(number / 1000000) > 0", span="37-37", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.Convert(int, bool)"];
n16 [label="sb.AppendFormat(''{0} million '', Convert(number / 1000000, true))", span="39-39", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.Convert(int, bool)"];
n17 [label="number %= 1000000", span="40-40", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.Convert(int, bool)"];
n18 [label="var thousand = (number / 1000)", span="43-43", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.Convert(int, bool)"];
n21 [label="number %= 1000", span="47-47", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.Convert(int, bool)"];
n22 [label="var hundred = (number / 100)", span="50-50", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.Convert(int, bool)"];
n25 [label="number %= 100", span="54-54", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.Convert(int, bool)"];
n26 [label="(number / 10) > 0", span="57-57", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.Convert(int, bool)"];
n27 [label="sb.AppendFormat(''{0} '', TensMap[number / 10])", span="59-59", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.Convert(int, bool)"];
n28 [label="number %= 10", span="60-60", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.Convert(int, bool)"];
n29 [label="number > 0", span="63-63", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.Convert(int, bool)"];
n30 [label="sb.AppendFormat(''{0} '', UnitsMap[number])", span="65-65", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.Convert(int, bool)"];
n8 [label="return UnitsMap[0];", span="24-24", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.Convert(int, bool)"];
n10 [label="return ''yuz'';", span="27-27", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.Convert(int, bool)"];
n11 [label="var sb = new StringBuilder()", span="29-29", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.Convert(int, bool)"];
n33 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()"];
n20 [label="sb.AppendFormat(''{0} ming '', Convert(thousand, true))", span="46-46", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.Convert(int, bool)"];
n24 [label="sb.AppendFormat(''{0} yuz '', Convert(hundred, false))", span="53-53", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.Convert(int, bool)"];
n31 [label="return sb.ToString().Trim();", span="68-68", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.Convert(int, bool)"];
n34 [label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0", cluster="System.Text.StringBuilder.AppendFormat(string, object)"];
n19 [label="thousand > 0", span="44-44", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.Convert(int, bool)"];
n23 [label="hundred > 0", span="51-51", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.Convert(int, bool)"];
n32 [label="Exit Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.Convert(int, bool)", span="21-21", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.Convert(int, bool)"];
n35 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()"];
n36 [label="Entry string.Trim()", span="0-0", cluster="string.Trim()"];
n37 [label="Entry Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.ConvertToOrdinal(int)", span="71-71", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.ConvertToOrdinal(int)"];
n38 [label="var word = Convert(number)", span="73-73", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.ConvertToOrdinal(int)"];
n39 [label="var i = 0", span="74-74", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.ConvertToOrdinal(int)"];
n40 [label="string.IsNullOrEmpty(word)", span="75-75", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.ConvertToOrdinal(int)"];
n42 [label="var lastChar = word[word.Length - 1]", span="78-78", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.ConvertToOrdinal(int)"];
n45 [label="return string.Format(''{0}{1}'', word, OrdinalSuffixes[i]);", span="82-82", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.ConvertToOrdinal(int)"];
n41 [label="return string.Empty;", span="76-76", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.ConvertToOrdinal(int)"];
n47 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)"];
n43 [label="lastChar == 'i' || lastChar == 'a'", span="79-79", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.ConvertToOrdinal(int)"];
n44 [label="i = 1", span="80-80", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.ConvertToOrdinal(int)"];
n46 [label="Exit Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.ConvertToOrdinal(int)", span="71-71", cluster="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter.ConvertToOrdinal(int)"];
n48 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)"];
m1_5 [label="Entry System.DateTime.Humanize(bool, System.DateTime?)", span="16-16", cluster="System.DateTime.Humanize(bool, System.DateTime?)", file="Configurator.cs"];
m1_25 [label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.SecondsAgo()", span="41-41", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.SecondsAgo()", file="Configurator.cs"];
m1_26 [label="Verify(string.Format(Resources.DateExtensions_SecondsAgo__seconds_ago, 10), new TimeSpan(0, 0, 0, -10))", span="43-43", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.SecondsAgo()", color=green, community=0, file="Configurator.cs"];
m1_27 [label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.SecondsAgo()", span="41-41", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.SecondsAgo()", file="Configurator.cs"];
m1_41 [label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.Yesterday()", span="71-71", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.Yesterday()", file="Configurator.cs"];
m1_42 [label="Verify(Resources.DateExtensions_Yesterday_yesterday, new TimeSpan(-1, -10, 0, 0))", span="73-73", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.Yesterday()", file="Configurator.cs"];
m1_43 [label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.Yesterday()", span="71-71", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.Yesterday()", file="Configurator.cs"];
m1_6 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="Configurator.cs"];
m1_38 [label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.HoursAgo()", span="65-65", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.HoursAgo()", file="Configurator.cs"];
m1_39 [label="Verify(string.Format(Resources.DateExtensions_HoursAgo__hours_ago, 10), new TimeSpan(0, -10, 0, 0))", span="67-67", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.HoursAgo()", file="Configurator.cs"];
m1_40 [label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.HoursAgo()", span="65-65", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.HoursAgo()", file="Configurator.cs"];
m1_21 [label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file="Configurator.cs"];
m1_22 [label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.JustNow()", span="35-35", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.JustNow()", file="Configurator.cs"];
m1_23 [label="Verify(Resources.DateExtensions_OneSecondAgo_one_second_ago, new TimeSpan(0, 0, 0, -1))", span="37-37", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.JustNow()", file="Configurator.cs"];
m1_24 [label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.JustNow()", span="35-35", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.JustNow()", file="Configurator.cs"];
m1_0 [label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.VerifyWithCurrentDate(string, System.TimeSpan)", span="7-7", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.VerifyWithCurrentDate(string, System.TimeSpan)", file="Configurator.cs"];
m1_1 [label="Assert.Equal(expectedString, DateTime.UtcNow.Add(deltaFromNow).Humanize())", span="9-9", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.VerifyWithCurrentDate(string, System.TimeSpan)", file="Configurator.cs"];
m1_2 [label="Assert.Equal(expectedString, DateTime.Now.Add(deltaFromNow).Humanize(false))", span="10-10", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.VerifyWithCurrentDate(string, System.TimeSpan)", file="Configurator.cs"];
m1_3 [label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.VerifyWithCurrentDate(string, System.TimeSpan)", span="7-7", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.VerifyWithCurrentDate(string, System.TimeSpan)", file="Configurator.cs"];
m1_47 [label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.OneMonthAgo()", span="83-83", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.OneMonthAgo()", file="Configurator.cs"];
m1_48 [label="Verify(Resources.DateExtensions_OneMonthAgo_one_month_ago, new TimeSpan(-30, 0, 0, 0))", span="85-85", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.OneMonthAgo()", file="Configurator.cs"];
m1_49 [label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.OneMonthAgo()", span="83-83", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.OneMonthAgo()", file="Configurator.cs"];
m1_7 [label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.VerifyWithDateInjection(string, System.TimeSpan)", span="13-13", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.VerifyWithDateInjection(string, System.TimeSpan)", file="Configurator.cs"];
m1_11 [label="Assert.Equal(expectedString, now.Add(deltaFromNow).Humanize(false, now))", span="19-19", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.VerifyWithDateInjection(string, System.TimeSpan)", color=green, community=0, file="Configurator.cs"];
m1_10 [label="Assert.Equal(expectedString, utcNow.Add(deltaFromNow).Humanize(dateToCompareAgainst: utcNow))", span="18-18", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.VerifyWithDateInjection(string, System.TimeSpan)", file="Configurator.cs"];
m1_9 [label="var now = new DateTime(2013, 6, 20, 11, 58, 22, DateTimeKind.Local)", span="16-16", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.VerifyWithDateInjection(string, System.TimeSpan)", file="Configurator.cs"];
m1_8 [label="var utcNow = new DateTime(2013, 6, 20, 9, 58, 22, DateTimeKind.Utc)", span="15-15", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.VerifyWithDateInjection(string, System.TimeSpan)", file="Configurator.cs"];
m1_12 [label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.VerifyWithDateInjection(string, System.TimeSpan)", span="13-13", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.VerifyWithDateInjection(string, System.TimeSpan)", file="Configurator.cs"];
m1_13 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="Configurator.cs"];
m1_32 [label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.AFewMinutesAgo()", span="53-53", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.AFewMinutesAgo()", file="Configurator.cs"];
m1_33 [label="Verify(string.Format(Resources.DateExtensions_MinutesAgo__minutes_ago, 10), new TimeSpan(0, 0, -10, 0))", span="55-55", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.AFewMinutesAgo()", file="Configurator.cs"];
m1_34 [label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.AFewMinutesAgo()", span="53-53", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.AFewMinutesAgo()", file="Configurator.cs"];
m1_44 [label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.AFewDaysAgo()", span="77-77", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.AFewDaysAgo()", file="Configurator.cs"];
m1_45 [label="Verify(string.Format(Resources.DateExtensions_DaysAgo__days_ago, 10), new TimeSpan(-10, 0, 0, 0))", span="79-79", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.AFewDaysAgo()", file="Configurator.cs"];
m1_46 [label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.AFewDaysAgo()", span="77-77", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.AFewDaysAgo()", file="Configurator.cs"];
m1_50 [label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.AFewMonthsAgo()", span="89-89", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.AFewMonthsAgo()", file="Configurator.cs"];
m1_51 [label="Verify(string.Format(Resources.DateExtensions_MonthsAgo__months_ago, 2), new TimeSpan(-60, 0, 0, 0))", span="91-91", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.AFewMonthsAgo()", file="Configurator.cs"];
m1_52 [label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.AFewMonthsAgo()", span="89-89", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.AFewMonthsAgo()", file="Configurator.cs"];
m1_4 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="Configurator.cs"];
m1_35 [label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.AnHourAgo()", span="59-59", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.AnHourAgo()", file="Configurator.cs"];
m1_36 [label="Verify(Resources.DateExtensions_OneHourAgo_an_hour_ago, new TimeSpan(0, -1, -10, 0))", span="61-61", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.AnHourAgo()", file="Configurator.cs"];
m1_37 [label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.AnHourAgo()", span="59-59", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.AnHourAgo()", file="Configurator.cs"];
m1_59 [label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.FewYearsAgo()", span="107-107", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.FewYearsAgo()", file="Configurator.cs"];
m1_60 [label="Verify(string.Format(Resources.DateExtensions_YearsAgo__years_ago, 2), new TimeSpan(-900, 0, 0, 0))", span="109-109", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.FewYearsAgo()", file="Configurator.cs"];
m1_61 [label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.FewYearsAgo()", span="107-107", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.FewYearsAgo()", file="Configurator.cs"];
m1_53 [label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.OneYearAgoIsNotAccureate()", span="95-95", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.OneYearAgoIsNotAccureate()", file="Configurator.cs"];
m1_54 [label="Verify(Resources.DateExtensions_OneYearAgo_one_year_ago, new TimeSpan(-360, 0, 0, 0))", span="97-97", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.OneYearAgoIsNotAccureate()", file="Configurator.cs"];
m1_55 [label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.OneYearAgoIsNotAccureate()", span="95-95", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.OneYearAgoIsNotAccureate()", file="Configurator.cs"];
m1_56 [label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.OneYearAgo()", span="101-101", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.OneYearAgo()", file="Configurator.cs"];
m1_57 [label="Verify(Resources.DateExtensions_OneYearAgo_one_year_ago, new TimeSpan(-400, 0, 0, 0))", span="103-103", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.OneYearAgo()", file="Configurator.cs"];
m1_58 [label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.OneYearAgo()", span="101-101", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.OneYearAgo()", file="Configurator.cs"];
m1_14 [label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.Verify(string, System.TimeSpan)", span="22-22", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.Verify(string, System.TimeSpan)", file="Configurator.cs"];
m1_16 [label="VerifyWithDateInjection(expectedString, deltaFromNow)", span="25-25", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.Verify(string, System.TimeSpan)", color=green, community=0, file="Configurator.cs"];
m1_15 [label="VerifyWithCurrentDate(expectedString, deltaFromNow)", span="24-24", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.Verify(string, System.TimeSpan)", file="Configurator.cs"];
m1_17 [label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.Verify(string, System.TimeSpan)", span="22-22", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.Verify(string, System.TimeSpan)", file="Configurator.cs"];
m1_18 [label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.FutureDates()", span="29-29", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.FutureDates()", file="Configurator.cs"];
m1_19 [label="Verify(Resources.DateExtensions_FutureDate_not_yet, new TimeSpan(0, 0, 1, 0))", span="31-31", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.FutureDates()", file="Configurator.cs"];
m1_20 [label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.FutureDates()", span="29-29", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.FutureDates()", file="Configurator.cs"];
m1_29 [label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.OneMinuteAgo()", span="47-47", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.OneMinuteAgo()", file="Configurator.cs"];
m1_30 [label="Verify(Resources.DateExtensions_OneMinuteAgo_a_minute_ago, new TimeSpan(0, 0, -1, 0))", span="49-49", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.OneMinuteAgo()", file="Configurator.cs"];
m1_31 [label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.OneMinuteAgo()", span="47-47", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.OneMinuteAgo()", file="Configurator.cs"];
m1_62 [label="Humanizer.Tests.Extensions.DateHumanizeTests", span="", file="Configurator.cs"];
m2_0 [label="Entry Humanizer.Configuration.LocaliserRegistry<TLocaliser>.LocaliserRegistry(TLocaliser)", span="19-19", cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.LocaliserRegistry(TLocaliser)", file="DateHumanizeTests.cs"];
m2_1 [label="_defaultLocaliser = defaultLocaliser", span="21-21", cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.LocaliserRegistry(TLocaliser)", file="DateHumanizeTests.cs"];
m2_2 [label="Exit Humanizer.Configuration.LocaliserRegistry<TLocaliser>.LocaliserRegistry(TLocaliser)", span="19-19", cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.LocaliserRegistry(TLocaliser)", file="DateHumanizeTests.cs"];
m2_6 [label="Entry Humanizer.Configuration.LocaliserRegistry<TLocaliser>.ResolveForCulture(System.Globalization.CultureInfo)", span="36-36", cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.ResolveForCulture(System.Globalization.CultureInfo)", file="DateHumanizeTests.cs"];
m2_7 [label="culture = culture ?? CultureInfo.CurrentUICulture", span="38-38", cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.ResolveForCulture(System.Globalization.CultureInfo)", file="DateHumanizeTests.cs"];
m2_8 [label="Lazy<TLocaliser> factory", span="40-40", cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.ResolveForCulture(System.Globalization.CultureInfo)", file="DateHumanizeTests.cs"];
m2_9 [label="_localisers.TryGetValue(culture.Name, out factory)", span="42-42", cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.ResolveForCulture(System.Globalization.CultureInfo)", file="DateHumanizeTests.cs"];
m2_11 [label="_localisers.TryGetValue(culture.TwoLetterISOLanguageName, out factory)", span="45-45", cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.ResolveForCulture(System.Globalization.CultureInfo)", color=red, community=0, file="DateHumanizeTests.cs"];
m2_10 [label="return factory.Value;", span="43-43", cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.ResolveForCulture(System.Globalization.CultureInfo)", color=red, community=0, file="DateHumanizeTests.cs"];
m2_12 [label="return factory.Value;", span="46-46", cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.ResolveForCulture(System.Globalization.CultureInfo)", color=red, community=0, file="DateHumanizeTests.cs"];
m2_13 [label="return _defaultLocaliser;", span="48-48", cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.ResolveForCulture(System.Globalization.CultureInfo)", file="DateHumanizeTests.cs"];
m2_14 [label="Exit Humanizer.Configuration.LocaliserRegistry<TLocaliser>.ResolveForCulture(System.Globalization.CultureInfo)", span="36-36", cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.ResolveForCulture(System.Globalization.CultureInfo)", file="DateHumanizeTests.cs"];
m2_15 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="DateHumanizeTests.cs"];
m2_24 [label="Entry Humanizer.Configuration.LocaliserRegistry<TLocaliser>.Register(System.Func<TLocaliser>, string)", span="63-63", cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.Register(System.Func<TLocaliser>, string)", file="DateHumanizeTests.cs"];
m2_25 [label="_localisers[localeCode] = new Lazy<TLocaliser>(localiserFactory)", span="65-65", cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.Register(System.Func<TLocaliser>, string)", color=red, community=0, file="DateHumanizeTests.cs"];
m2_26 [label="Exit Humanizer.Configuration.LocaliserRegistry<TLocaliser>.Register(System.Func<TLocaliser>, string)", span="63-63", cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.Register(System.Func<TLocaliser>, string)", file="DateHumanizeTests.cs"];
m2_16 [label="Entry Humanizer.Configuration.LocaliserRegistry<TLocaliser>.Register<T>(string)", span="54-54", cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.Register<T>(string)", file="DateHumanizeTests.cs"];
m2_17 [label="_localisers[localeCode] = new Lazy<TLocaliser>(() => new T())", span="57-57", cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.Register<T>(string)", file="DateHumanizeTests.cs"];
m2_18 [label="Exit Humanizer.Configuration.LocaliserRegistry<TLocaliser>.Register<T>(string)", span="54-54", cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.Register<T>(string)", file="DateHumanizeTests.cs"];
m2_19 [label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0", cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="DateHumanizeTests.cs"];
m2_3 [label="Entry Humanizer.Configuration.LocaliserRegistry<TLocaliser>.ResolveForUiCulture()", span="27-27", cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.ResolveForUiCulture()", file="DateHumanizeTests.cs"];
m2_4 [label="return ResolveForCulture(null);", span="29-29", cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.ResolveForUiCulture()", file="DateHumanizeTests.cs"];
m2_5 [label="Exit Humanizer.Configuration.LocaliserRegistry<TLocaliser>.ResolveForUiCulture()", span="27-27", cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.ResolveForUiCulture()", file="DateHumanizeTests.cs"];
m2_23 [label="Entry T.cstr", span="", cluster="T.cstr", file="DateHumanizeTests.cs"];
m2_27 [label="Entry Humanizer.Configuration.LocaliserRegistry<TLocaliser>.RegisterDefault(TLocaliser)", span="71-71", cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.RegisterDefault(TLocaliser)", file="DateHumanizeTests.cs"];
m2_28 [label="_defaultLocaliser = defaultLocaliser", span="73-73", cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.RegisterDefault(TLocaliser)", file="DateHumanizeTests.cs"];
m2_29 [label="Exit Humanizer.Configuration.LocaliserRegistry<TLocaliser>.RegisterDefault(TLocaliser)", span="71-71", cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.RegisterDefault(TLocaliser)", file="DateHumanizeTests.cs"];
m2_20 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="DateHumanizeTests.cs"];
m2_21 [label="new T()", span="57-57", cluster="lambda expression", file="DateHumanizeTests.cs"];
m2_22 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="DateHumanizeTests.cs"];
m2_30 [label="Humanizer.Configuration.LocaliserRegistry<TLocaliser>", span="", file="DateHumanizeTests.cs"];
m3_7 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_35 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_24 [label="Entry System.Type.ToDescriptor()", span="22-22", cluster="System.Type.ToDescriptor()", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_26 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_39 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_27 [label="Entry T.ToMaybe<T>()", span="82-82", cluster="T.ToMaybe<T>()", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_9 [label="Entry CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", span="19-19", cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_10 [label="specProp == null", span="21-21", cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_12 [label="newValue == null", span="22-22", cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_14 [label="return SpecificationProperty.Create(specProp.Specification, specProp.Property, newValue);", span="24-24", cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_11 [label="throw new ArgumentNullException(''specProp'');", span="21-21", cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_13 [label="throw new ArgumentNullException(''newValue'');", span="22-22", cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_15 [label="Exit CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", span="19-19", cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_16 [label="Entry CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", span="27-27", cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_17 [label="specProp == null", span="29-29", cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_19 [label="specProp.Specification.ConversionType.ToDescriptor()", span="31-31", cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_21 [label="return specProp.Property.PropertyType.GetGenericArguments()\r\n                             .SingleOrDefault()\r\n                             .ToMaybe()\r\n                             .FromJust(\r\n                                 new InvalidOperationException(''Sequence properties should be of type IEnumerable<T>.''));", span="34-38", cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_22 [label="return specProp.Property.PropertyType;", span="40-40", cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_18 [label="throw new ArgumentNullException(''specProp'');", span="29-29", cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_20 [label="TypeDescriptorKind.Sequence", span="33-33", cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_23 [label="Exit CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", span="27-27", cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_25 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_29 [label="Entry CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", span="137-137", cluster="CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_36 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_37 [label="rule(specProps)", span="51-51", cluster="lambda expression", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_38 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_8 [label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", span="21-21", cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_30 [label="Entry CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", span="44-44", cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_31 [label="specProps == null", span="49-49", cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_33 [label="return rules.SelectMany(rule => rule(specProps));", span="51-51", cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_32 [label="throw new ArgumentNullException(''specProps'');", span="49-49", cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_34 [label="Exit CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", span="44-44", cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_28 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_0 [label="Entry CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", span="11-11", cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_1 [label="specProp == null", span="13-13", cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_3 [label="newSpecification == null", span="14-14", cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_5 [label="return SpecificationProperty.Create(newSpecification, specProp.Property, specProp.Value);", span="16-16", cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_2 [label="throw new ArgumentNullException(''specProp'');", span="13-13", cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_4 [label="throw new ArgumentNullException(''newSpecification'');", span="14-14", cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_6 [label="Exit CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", span="11-11", cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_40 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", span="", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m4_8 [label="Entry string.FromRoman()", span="38-38", cluster="string.FromRoman()", file="DefaultNumberToWordsConverter.cs"];
m4_4 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="DefaultNumberToWordsConverter.cs"];
m4_0 [label="Entry Humanizer.Tests.RomanNumeralTests.ToRoman(int, string)", span="27-27", cluster="Humanizer.Tests.RomanNumeralTests.ToRoman(int, string)", file="DefaultNumberToWordsConverter.cs"];
m4_1 [label="Assert.Equal(expected, input.ToRoman())", span="29-29", cluster="Humanizer.Tests.RomanNumeralTests.ToRoman(int, string)", file="DefaultNumberToWordsConverter.cs", color=green, community=0];
m4_2 [label="Exit Humanizer.Tests.RomanNumeralTests.ToRoman(int, string)", span="27-27", cluster="Humanizer.Tests.RomanNumeralTests.ToRoman(int, string)", file="DefaultNumberToWordsConverter.cs"];
m4_5 [label="Entry Humanizer.Tests.RomanNumeralTests.FromRoman(int, string)", span="52-52", cluster="Humanizer.Tests.RomanNumeralTests.FromRoman(int, string)", file="DefaultNumberToWordsConverter.cs"];
m4_6 [label="Assert.Equal(expected, input.FromRoman())", span="54-54", cluster="Humanizer.Tests.RomanNumeralTests.FromRoman(int, string)", file="DefaultNumberToWordsConverter.cs"];
m4_7 [label="Exit Humanizer.Tests.RomanNumeralTests.FromRoman(int, string)", span="52-52", cluster="Humanizer.Tests.RomanNumeralTests.FromRoman(int, string)", file="DefaultNumberToWordsConverter.cs"];
m4_3 [label="Entry int.ToRoman()", span="78-78", cluster="int.ToRoman()", file="DefaultNumberToWordsConverter.cs"];
m5_38 [label="Entry System.StringComparer.Equals(string, string)", span="0-0", cluster="System.StringComparer.Equals(string, string)", file="DutchNumberToWordsConverter.cs"];
m5_0 [label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="DutchNumberToWordsConverter.cs"];
m5_1 [label="return InstanceBuilder.Build(\r\n                factory,\r\n                (args, optionSpecs) =>\r\n                    {\r\n                        var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer));\r\n                        var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.WithSeparator(name, optionSpecs, nameComparer));\r\n                        return explodedTokens;\r\n                    },\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture);", span="18-30", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="DutchNumberToWordsConverter.cs"];
m5_2 [label="Exit CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="DutchNumberToWordsConverter.cs"];
m5_47 [label="Entry CommandLine.Core.Specification.IsOption()", span="11-11", cluster="CommandLine.Core.Specification.IsOption()", file="DutchNumberToWordsConverter.cs"];
m5_99 [label="Entry CommandLine.Infrastructure.Maybe<T>.MatchNothing()", span="26-26", cluster="CommandLine.Infrastructure.Maybe<T>.MatchNothing()", file="DutchNumberToWordsConverter.cs"];
m5_91 [label="Entry CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", span="147-147", cluster="CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", file="DutchNumberToWordsConverter.cs"];
m5_10 [label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", span="52-52", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", file="DutchNumberToWordsConverter.cs"];
m5_42 [label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="12-12", cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="DutchNumberToWordsConverter.cs"];
m5_41 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="DutchNumberToWordsConverter.cs"];
m5_83 [label="Entry CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", span="152-152", cluster="CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", file="DutchNumberToWordsConverter.cs"];
m5_3 [label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="33-33", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="DutchNumberToWordsConverter.cs"];
m5_19 [label="var instance = factory()", span="40-40", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="DutchNumberToWordsConverter.cs"];
m5_20 [label="arguments.Any() && nameComparer.Equals(''--help'', arguments.First())", span="42-42", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="DutchNumberToWordsConverter.cs"];
m5_24 [label="var tokenizerResult = tokenizer(arguments, optionSpecs)", span="57-57", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="DutchNumberToWordsConverter.cs"];
m5_26 [label="var partitions = TokenPartitioner.Partition(\r\n                tokens,\r\n                name => TypeLookup.GetDescriptorInfo(name, optionSpecs, nameComparer))", span="61-63", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="DutchNumberToWordsConverter.cs"];
m5_27 [label="var optionSpecProps = OptionMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsOption() select pt),\r\n                partitions.Options,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture),\r\n                nameComparer)", span="65-69", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="DutchNumberToWordsConverter.cs"];
m5_28 [label="var valueSpecProps = ValueMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsValue() select pt),\r\n                    partitions.Values,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture))", span="71-74", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="DutchNumberToWordsConverter.cs"];
m5_29 [label="var missingValueErrors = from token in partitions.Errors\r\n                                     select new MissingValueOptionError(\r\n                                         NameInfo.FromOptionSpecification(optionSpecs.Single(o => token.Text.MatchName(o.ShortName, o.LongName, nameComparer))))", span="76-78", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="DutchNumberToWordsConverter.cs"];
m5_21 [label="return ParserResult.Create(\r\n                    ParserResultType.Options,\r\n                    instance,\r\n                    new[] { new HelpRequestedError() });", span="44-47", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="DutchNumberToWordsConverter.cs"];
m5_22 [label="var specProps = instance.GetType().GetSpecifications(pi => SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>()))", span="50-51", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="DutchNumberToWordsConverter.cs"];
m5_31 [label="instance = instance\r\n                .SetProperties(specPropsWithValue,\r\n                    sp => sp.Value.IsJust(),\r\n                    sp => sp.Value.FromJust())\r\n                .SetProperties(specPropsWithValue,\r\n                    sp => sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust(),\r\n                    sp => sp.Specification.DefaultValue.FromJust())\r\n                .SetProperties(specPropsWithValue,\r\n                    sp => sp.Value.IsNothing()\r\n                        && sp.Specification.ConversionType.ToDescriptor() == TypeDescriptorKind.Sequence\r\n                        && sp.Specification.DefaultValue.MatchNothing(),\r\n                    sp => sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray())", span="82-93", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="DutchNumberToWordsConverter.cs"];
m5_23 [label="var optionSpecs = (from pt in specProps select pt.Specification)\r\n                .ThrowingValidate(SpecificationGuards.Lookup)\r\n                .OfType<OptionSpecification>()", span="53-55", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="DutchNumberToWordsConverter.cs"];
m5_25 [label="var tokens = tokenizerResult.Value", span="59-59", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="DutchNumberToWordsConverter.cs"];
m5_33 [label="return ParserResult.Create(\r\n                ParserResultType.Options,\r\n                instance,\r\n                tokenizerResult.Errors\r\n                    .Concat(missingValueErrors)\r\n                    .Concat(optionSpecProps.Errors)\r\n                    .Concat(valueSpecProps.Errors)\r\n                    .Concat(validationErrors));", span="98-105", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="DutchNumberToWordsConverter.cs"];
m5_30 [label="var specPropsWithValue = optionSpecProps.Value.Concat(valueSpecProps.Value)", span="80-80", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="DutchNumberToWordsConverter.cs"];
m5_32 [label="var validationErrors = specPropsWithValue.Validate(SpecificationPropertyRules.Lookup)\r\n                .OfType<Just<Error>>().Select(e => e.Value)", span="95-96", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="DutchNumberToWordsConverter.cs"];
m5_34 [label="Exit CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="33-33", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="DutchNumberToWordsConverter.cs"];
m5_49 [label="Entry CommandLine.Core.Specification.IsValue()", span="18-18", cluster="CommandLine.Core.Specification.IsValue()", file="DutchNumberToWordsConverter.cs"];
m5_43 [label="Entry Unk.ThrowingValidate", span="", cluster="Unk.ThrowingValidate", file="DutchNumberToWordsConverter.cs"];
m5_40 [label="Entry CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="103-103", cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="DutchNumberToWordsConverter.cs"];
m5_62 [label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="74-74", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="DutchNumberToWordsConverter.cs"];
m5_72 [label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="12-12", cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="DutchNumberToWordsConverter.cs"];
m5_98 [label="Entry System.Type.ToDescriptor()", span="22-22", cluster="System.Type.ToDescriptor()", file="DutchNumberToWordsConverter.cs"];
m5_105 [label="Entry System.Type.CreateEmptyArray()", span="83-83", cluster="System.Type.CreateEmptyArray()", file="DutchNumberToWordsConverter.cs"];
m5_63 [label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66", cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="DutchNumberToWordsConverter.cs"];
m5_36 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="DutchNumberToWordsConverter.cs"];
m5_52 [label="Entry Unk.FromOptionSpecification", span="", cluster="Unk.FromOptionSpecification", file="DutchNumberToWordsConverter.cs"];
m5_54 [label="Entry T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="42-42", cluster="T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="DutchNumberToWordsConverter.cs"];
m5_87 [label="Entry CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", span="137-137", cluster="CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", file="DutchNumberToWordsConverter.cs"];
m5_104 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="DutchNumberToWordsConverter.cs"];
m5_64 [label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", span="21-21", cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="DutchNumberToWordsConverter.cs"];
m5_50 [label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="261-261", cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="DutchNumberToWordsConverter.cs"];
m5_53 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="DutchNumberToWordsConverter.cs"];
m5_68 [label="Entry CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11", cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="DutchNumberToWordsConverter.cs"];
m5_48 [label="Entry Unk.MapValues", span="", cluster="Unk.MapValues", file="DutchNumberToWordsConverter.cs"];
m5_14 [label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="12-12", cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="DutchNumberToWordsConverter.cs"];
m5_46 [label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="DutchNumberToWordsConverter.cs"];
m5_103 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()", file="DutchNumberToWordsConverter.cs"];
m5_37 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="DutchNumberToWordsConverter.cs"];
m5_44 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="DutchNumberToWordsConverter.cs"];
m5_106 [label="Entry lambda expression", span="96-96", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_5 [label="var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer))", span="22-22", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_12 [label="NameLookup.Contains(name, optionSpecs, nameComparer)", span="22-22", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_6 [label="var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.WithSeparator(name, optionSpecs, nameComparer))", span="23-25", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_16 [label="NameLookup.WithSeparator(name, optionSpecs, nameComparer)", span="25-25", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_4 [label="Entry lambda expression", span="20-27", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_11 [label="Entry lambda expression", span="22-22", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_7 [label="return explodedTokens;", span="26-26", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_15 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_8 [label="Exit lambda expression", span="20-27", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_13 [label="Exit lambda expression", span="22-22", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_17 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_66 [label="TypeLookup.GetDescriptorInfo(name, optionSpecs, nameComparer)", span="63-63", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_70 [label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="68-68", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_74 [label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="74-74", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_77 [label="token.Text.MatchName(o.ShortName, o.LongName, nameComparer)", span="78-78", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_59 [label="Entry lambda expression", span="50-51", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_65 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_69 [label="Entry lambda expression", span="68-68", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_73 [label="Entry lambda expression", span="74-74", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_76 [label="Entry lambda expression", span="78-78", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_80 [label="Entry lambda expression", span="84-84", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_84 [label="Entry lambda expression", span="85-85", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_88 [label="Entry lambda expression", span="87-87", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_92 [label="Entry lambda expression", span="88-88", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_95 [label="Entry lambda expression", span="90-92", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_100 [label="Entry lambda expression", span="93-93", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_60 [label="SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>())", span="50-51", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_61 [label="Exit lambda expression", span="50-51", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_67 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_71 [label="Exit lambda expression", span="68-68", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_75 [label="Exit lambda expression", span="74-74", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_78 [label="Exit lambda expression", span="78-78", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_81 [label="sp.Value.IsJust()", span="84-84", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_82 [label="Exit lambda expression", span="84-84", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_85 [label="sp.Value.FromJust()", span="85-85", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_86 [label="Exit lambda expression", span="85-85", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_89 [label="sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust()", span="87-87", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_90 [label="Exit lambda expression", span="87-87", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_93 [label="sp.Specification.DefaultValue.FromJust()", span="88-88", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_94 [label="Exit lambda expression", span="88-88", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_96 [label="sp.Value.IsNothing()\r\n                        && sp.Specification.ConversionType.ToDescriptor() == TypeDescriptorKind.Sequence\r\n                        && sp.Specification.DefaultValue.MatchNothing()", span="90-92", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_97 [label="Exit lambda expression", span="90-92", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_101 [label="sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray()", span="93-93", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_102 [label="Exit lambda expression", span="93-93", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_107 [label="e.Value", span="96-96", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_108 [label="Exit lambda expression", span="96-96", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m5_55 [label="Entry System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", span="44-44", cluster="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", file="DutchNumberToWordsConverter.cs"];
m5_56 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="DutchNumberToWordsConverter.cs"];
m5_51 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="DutchNumberToWordsConverter.cs"];
m5_9 [label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="DutchNumberToWordsConverter.cs"];
m5_39 [label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="338-338", cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="DutchNumberToWordsConverter.cs"];
m5_57 [label="Entry Unk.Concat", span="", cluster="Unk.Concat", file="DutchNumberToWordsConverter.cs"];
m5_58 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="DutchNumberToWordsConverter.cs"];
m5_79 [label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8", cluster="string.MatchName(string, string, System.StringComparer)", file="DutchNumberToWordsConverter.cs"];
m5_45 [label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0", cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="DutchNumberToWordsConverter.cs"];
m5_35 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="DutchNumberToWordsConverter.cs"];
m5_18 [label="Entry CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="19-19", cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="DutchNumberToWordsConverter.cs"];
m5_109 [label="System.StringComparer", span="", file="DutchNumberToWordsConverter.cs"];
m5_110 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span="", file="DutchNumberToWordsConverter.cs"];
m5_111 [label="System.StringComparer", span="", file="DutchNumberToWordsConverter.cs"];
m5_112 [label=optionSpecs, span="", file="DutchNumberToWordsConverter.cs"];
m5_113 [label="System.Globalization.CultureInfo", span="", file="DutchNumberToWordsConverter.cs"];
m5_114 [label=token, span="", file="DutchNumberToWordsConverter.cs"];
m7_53 [label="Entry System.Type.GetElementType()", span="0-0", cluster="System.Type.GetElementType()", file="FrenchNumberToWordsConverter.cs"];
m7_55 [label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0", cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="FrenchNumberToWordsConverter.cs"];
m7_36 [label="Entry CommandLine.Internal.OptionInfo.SetValueList(string, object)", span="182-182", cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_88 [label=_setValueLock, span="184-184", cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_89 [label="_property.SetValue(options, new List<string>(), null)", span="186-186", cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_90 [label="var fieldRef = (IList<string>)_property.GetValue(options, null)", span="187-187", cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_91 [label="var values = value.Split(((OptionListAttribute)_attribute).Separator)", span="188-188", cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_94 [label="fieldRef.Add(values[i])", span="191-191", cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_92 [label="int i = 0", span="189-189", cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_93 [label="i < values.Length", span="189-189", cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_95 [label="i++", span="189-189", cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_96 [label="return true;", span="193-193", cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_97 [label="Exit CommandLine.Internal.OptionInfo.SetValueList(string, object)", span="182-182", cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_98 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="FrenchNumberToWordsConverter.cs"];
m7_101 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="FrenchNumberToWordsConverter.cs"];
m7_109 [label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="57-57", cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", file="FrenchNumberToWordsConverter.cs"];
m7_15 [label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="FrenchNumberToWordsConverter.cs"];
m7_57 [label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="FrenchNumberToWordsConverter.cs"];
m7_37 [label="Entry CommandLine.Internal.ReflectionUtil.IsNullableType(System.Type)", span="178-178", cluster="CommandLine.Internal.ReflectionUtil.IsNullableType(System.Type)", file="FrenchNumberToWordsConverter.cs"];
m7_27 [label="Entry CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="43-43", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="FrenchNumberToWordsConverter.cs"];
m7_40 [label="Entry CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="105-105", cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="FrenchNumberToWordsConverter.cs"];
m7_41 [label="Type elementType = _property.PropertyType.GetElementType()", span="107-107", cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="FrenchNumberToWordsConverter.cs"];
m7_42 [label="Array array = Array.CreateInstance(elementType, values.Count)", span="108-108", cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="FrenchNumberToWordsConverter.cs"];
m7_46 [label="array.SetValue(Convert.ChangeType(values[i], elementType, Thread.CurrentThread.CurrentCulture), i)", span="116-116", cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="FrenchNumberToWordsConverter.cs"];
m7_47 [label="_property.SetValue(options, array, null)", span="117-117", cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="FrenchNumberToWordsConverter.cs"];
m7_43 [label="int i = 0", span="110-110", cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="FrenchNumberToWordsConverter.cs"];
m7_44 [label="i < array.Length", span="110-110", cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="FrenchNumberToWordsConverter.cs"];
m7_50 [label="i++", span="110-110", cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="FrenchNumberToWordsConverter.cs"];
m7_45 [label=_setValueLock, span="114-114", cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="FrenchNumberToWordsConverter.cs"];
m7_51 [label="return true;", span="125-125", cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="FrenchNumberToWordsConverter.cs"];
m7_48 [label=FormatException, span="120-120", cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="FrenchNumberToWordsConverter.cs"];
m7_49 [label="return false;", span="122-122", cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="FrenchNumberToWordsConverter.cs"];
m7_52 [label="Exit CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="105-105", cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="FrenchNumberToWordsConverter.cs"];
m7_83 [label="Entry CommandLine.Internal.OptionInfo.SetValue(bool, object)", span="173-173", cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", file="FrenchNumberToWordsConverter.cs"];
m7_84 [label=_setValueLock, span="175-175", cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", file="FrenchNumberToWordsConverter.cs"];
m7_85 [label="_property.SetValue(options, value, null)", span="177-177", cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", file="FrenchNumberToWordsConverter.cs"];
m7_86 [label="return true;", span="178-178", cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", file="FrenchNumberToWordsConverter.cs"];
m7_87 [label="Exit CommandLine.Internal.OptionInfo.SetValue(bool, object)", span="173-173", cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", file="FrenchNumberToWordsConverter.cs"];
m7_99 [label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="FrenchNumberToWordsConverter.cs"];
m7_39 [label="Entry CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", span="128-128", cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_58 [label="_property.PropertyType.IsEnum", span="132-132", cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_60 [label="_property.SetValue(options, Enum.Parse(_property.PropertyType, value, true), null)", span="136-136", cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_62 [label="_property.SetValue(options, Convert.ChangeType(value, _property.PropertyType, Thread.CurrentThread.CurrentCulture), null)", span="143-143", cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_59 [label=_setValueLock, span="134-134", cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_61 [label=_setValueLock, span="141-141", cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_63 [label=InvalidCastException, span="147-147", cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_65 [label=FormatException, span="148-148", cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_67 [label=ArgumentException, span="149-149", cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_69 [label=OverflowException, span="150-150", cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_71 [label="return true;", span="151-151", cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_64 [label="return false;", span="147-147", cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_66 [label="return false;", span="148-148", cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_68 [label="return false;", span="149-149", cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_70 [label="return false;", span="150-150", cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_72 [label="Exit CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", span="128-128", cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_0 [label="Entry CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="44-44", cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="FrenchNumberToWordsConverter.cs"];
m7_1 [label="attribute == null", span="46-46", cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="FrenchNumberToWordsConverter.cs"];
m7_3 [label="property == null", span="50-50", cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="FrenchNumberToWordsConverter.cs"];
m7_5 [label="_required = attribute.Required", span="54-54", cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="FrenchNumberToWordsConverter.cs"];
m7_6 [label="_helpText = attribute.HelpText", span="55-55", cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="FrenchNumberToWordsConverter.cs"];
m7_7 [label="_shortName = attribute.ShortName", span="56-56", cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="FrenchNumberToWordsConverter.cs"];
m7_8 [label="_longName = attribute.LongName", span="57-57", cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="FrenchNumberToWordsConverter.cs"];
m7_9 [label="_mutuallyExclusiveSet = attribute.MutuallyExclusiveSet", span="58-58", cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="FrenchNumberToWordsConverter.cs"];
m7_10 [label="_defaultValue = attribute.DefaultValue", span="59-59", cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="FrenchNumberToWordsConverter.cs"];
m7_11 [label="_hasDefaultValue = attribute.HasDefaultValue", span="60-60", cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="FrenchNumberToWordsConverter.cs"];
m7_12 [label="_attribute = attribute", span="61-61", cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="FrenchNumberToWordsConverter.cs"];
m7_13 [label="_property = property", span="62-62", cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="FrenchNumberToWordsConverter.cs"];
m7_2 [label="throw new ArgumentNullException(''attribute'', ''The attribute is mandatory'');", span="48-48", cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="FrenchNumberToWordsConverter.cs"];
m7_4 [label="throw new ArgumentNullException(''property'', ''The property is mandatory'');", span="52-52", cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="FrenchNumberToWordsConverter.cs"];
m7_14 [label="Exit CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="44-44", cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="FrenchNumberToWordsConverter.cs"];
m7_54 [label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0", cluster="System.Array.CreateInstance(System.Type, int)", file="FrenchNumberToWordsConverter.cs"];
m7_38 [label="Entry CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", span="154-154", cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_74 [label="var nc = new NullableConverter(_property.PropertyType)", span="156-156", cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_76 [label="_property.SetValue(options, nc.ConvertFromString(null, Thread.CurrentThread.CurrentCulture, value), null)", span="161-161", cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_75 [label=_setValueLock, span="159-159", cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_77 [label=Exception, span="166-166", cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_79 [label="return true;", span="170-170", cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_78 [label="return false;", span="168-168", cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_80 [label="Exit CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", span="154-154", cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_28 [label="Entry CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="61-61", cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="FrenchNumberToWordsConverter.cs"];
m7_16 [label="Entry CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="73-73", cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="FrenchNumberToWordsConverter.cs"];
m7_17 [label="var list = ReflectionUtil.RetrievePropertyList<OptionAttribute>(target)", span="75-75", cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="FrenchNumberToWordsConverter.cs"];
m7_20 [label="var map = new OptionMap(list.Count, settings)", span="80-80", cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="FrenchNumberToWordsConverter.cs"];
m7_24 [label="map.RawOptions = target", span="88-88", cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="FrenchNumberToWordsConverter.cs"];
m7_18 [label="list == null", span="76-76", cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="FrenchNumberToWordsConverter.cs"];
m7_21 [label=list, span="81-81", cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="FrenchNumberToWordsConverter.cs"];
m7_19 [label="return null;", span="78-78", cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="FrenchNumberToWordsConverter.cs"];
m7_23 [label="map[pair.Right.UniqueName] = new OptionInfo(pair.Right, pair.Left)", span="85-85", cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="FrenchNumberToWordsConverter.cs"];
m7_25 [label="return map;", span="89-89", cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="FrenchNumberToWordsConverter.cs"];
m7_22 [label="pair.Left != null && pair.Right != null", span="83-83", cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="FrenchNumberToWordsConverter.cs"];
m7_26 [label="Exit CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="73-73", cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="FrenchNumberToWordsConverter.cs"];
m7_82 [label="Entry System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", file="FrenchNumberToWordsConverter.cs"];
m7_56 [label="Entry System.Array.SetValue(object, int)", span="0-0", cluster="System.Array.SetValue(object, int)", file="FrenchNumberToWordsConverter.cs"];
m7_100 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="FrenchNumberToWordsConverter.cs"];
m7_29 [label="Entry CommandLine.Internal.OptionInfo.SetValue(string, object)", span="92-92", cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_30 [label="_attribute is OptionListAttribute", span="94-94", cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_31 [label="return SetValueList(value, options);", span="96-96", cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_33 [label="return SetNullableValue(value, options);", span="100-100", cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_34 [label="return SetValueScalar(value, options);", span="102-102", cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_32 [label="ReflectionUtil.IsNullableType(_property.PropertyType)", span="98-98", cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_35 [label="Exit CommandLine.Internal.OptionInfo.SetValue(string, object)", span="92-92", cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="FrenchNumberToWordsConverter.cs"];
m7_73 [label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0", cluster="System.Enum.Parse(System.Type, string, bool)", file="FrenchNumberToWordsConverter.cs"];
m7_81 [label="Entry System.ComponentModel.NullableConverter.NullableConverter(System.Type)", span="0-0", cluster="System.ComponentModel.NullableConverter.NullableConverter(System.Type)", file="FrenchNumberToWordsConverter.cs"];
m7_102 [label="Entry CommandLine.Internal.OptionInfo.SetDefault(object)", span="197-197", cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="FrenchNumberToWordsConverter.cs"];
m7_103 [label=_hasDefaultValue, span="199-199", cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="FrenchNumberToWordsConverter.cs"];
m7_105 [label="_property.SetValue(options, _defaultValue, null)", span="205-205", cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="FrenchNumberToWordsConverter.cs"];
m7_104 [label=_setValueLock, span="201-201", cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="FrenchNumberToWordsConverter.cs"];
m7_106 [label=Exception, span="207-207", cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="FrenchNumberToWordsConverter.cs"];
m7_107 [label="throw new CommandLineParserException(''Bad default value.'', e);", span="209-209", cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="FrenchNumberToWordsConverter.cs"];
m7_108 [label="Exit CommandLine.Internal.OptionInfo.SetDefault(object)", span="197-197", cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="FrenchNumberToWordsConverter.cs"];
m7_110 [label="CommandLine.Internal.OptionInfo", span="", file="FrenchNumberToWordsConverter.cs"];
m11_2 [label="Entry Humanizer.Localisation.NumberToWords.INumberToWordsConverter.ConvertToOrdinal(int)", span="19-19", cluster="Humanizer.Localisation.NumberToWords.INumberToWordsConverter.ConvertToOrdinal(int)", file="INumberToWordsConverter.cs"];
m11_3 [label="Exit Humanizer.Localisation.NumberToWords.INumberToWordsConverter.ConvertToOrdinal(int)", span="19-19", cluster="Humanizer.Localisation.NumberToWords.INumberToWordsConverter.ConvertToOrdinal(int)", file="INumberToWordsConverter.cs"];
m11_0 [label="Entry Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(int)", span="12-12", cluster="Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(int)", file="INumberToWordsConverter.cs"];
m11_1 [label="Exit Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(int)", span="12-12", cluster="Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(int)", file="INumberToWordsConverter.cs"];
m12_0 [label="Entry Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", span="14-14", cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", file="NumberToOrdinalWordsExtension.cs"];
m12_1 [label="return new EnglishNumberToWordsConverter().ConvertToOrdinal(number);", span="16-16", cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", color=red, community=0, file="NumberToOrdinalWordsExtension.cs"];
m12_2 [label="Exit Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", span="14-14", cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", file="NumberToOrdinalWordsExtension.cs"];
m12_3 [label="Entry Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.EnglishNumberToWordsConverter()", span="5-5", cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.EnglishNumberToWordsConverter()", file="NumberToOrdinalWordsExtension.cs"];
m12_4 [label="Entry Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.ConvertToOrdinal(int)", span="76-76", cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.ConvertToOrdinal(int)", file="NumberToOrdinalWordsExtension.cs"];
m13_38 [label="Entry System.StringComparer.Equals(string, string)", span="0-0", cluster="System.StringComparer.Equals(string, string)", file="NumberToWordsExtension.cs"];
m13_0 [label="Entry lambda expression", span="15-15", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m13_1 [label="new EnglishNumberToWordsConverter()", span="15-15", cluster="lambda expression", color=red, community=0, file="NumberToWordsExtension.cs"];
m13_2 [label="Exit lambda expression", span="15-15", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m13_47 [label="Entry CommandLine.Core.Specification.IsOption()", span="11-11", cluster="CommandLine.Core.Specification.IsOption()", file="NumberToWordsExtension.cs"];
m13_99 [label="Entry CommandLine.Infrastructure.Maybe<T>.MatchNothing()", span="26-26", cluster="CommandLine.Infrastructure.Maybe<T>.MatchNothing()", file="NumberToWordsExtension.cs"];
m13_91 [label="Entry CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", span="147-147", cluster="CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", file="NumberToWordsExtension.cs"];
m13_15 [label="Entry Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(int)", span="12-12", cluster="Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(int)", file="NumberToWordsExtension.cs"];
m13_10 [label="Exit lambda expression", span="17-17", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m13_42 [label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="12-12", cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="NumberToWordsExtension.cs"];
m13_41 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="NumberToWordsExtension.cs"];
m13_83 [label="Entry CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", span="152-152", cluster="CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", file="NumberToWordsExtension.cs"];
m13_3 [label="Entry Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.EnglishNumberToWordsConverter()", span="5-5", cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.EnglishNumberToWordsConverter()", file="NumberToWordsExtension.cs"];
m13_19 [label="var instance = factory()", span="40-40", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="NumberToWordsExtension.cs"];
m13_20 [label="arguments.Any() && nameComparer.Equals(''--help'', arguments.First())", span="42-42", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="NumberToWordsExtension.cs"];
m13_21 [label="return ParserResult.Create(\r\n                    ParserResultType.Options,\r\n                    instance,\r\n                    new[] { new HelpRequestedError() });", span="44-47", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="NumberToWordsExtension.cs"];
m13_22 [label="var specProps = instance.GetType().GetSpecifications(pi => SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>()))", span="50-51", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="NumberToWordsExtension.cs"];
m13_31 [label="instance = instance\r\n                .SetProperties(specPropsWithValue,\r\n                    sp => sp.Value.IsJust(),\r\n                    sp => sp.Value.FromJust())\r\n                .SetProperties(specPropsWithValue,\r\n                    sp => sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust(),\r\n                    sp => sp.Specification.DefaultValue.FromJust())\r\n                .SetProperties(specPropsWithValue,\r\n                    sp => sp.Value.IsNothing()\r\n                        && sp.Specification.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Sequence\r\n                        && sp.Specification.DefaultValue.MatchNothing(),\r\n                    sp => sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray())", span="82-93", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="NumberToWordsExtension.cs"];
m13_24 [label="var tokenizerResult = tokenizer(arguments, optionSpecs)", span="57-57", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="NumberToWordsExtension.cs"];
m13_23 [label="var optionSpecs = (from pt in specProps select pt.Specification)\r\n                .ThrowingValidate(SpecificationGuards.Lookup)\r\n                .OfType<OptionSpecification>()", span="53-55", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="NumberToWordsExtension.cs"];
m13_25 [label="var tokens = tokenizerResult.Value", span="59-59", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="NumberToWordsExtension.cs"];
m13_33 [label="return ParserResult.Create(\r\n                ParserResultType.Options,\r\n                instance,\r\n                tokenizerResult.Errors\r\n                    .Concat(missingValueErrors)\r\n                    .Concat(optionSpecProps.Errors)\r\n                    .Concat(valueSpecProps.Errors)\r\n                    .Concat(validationErrors));", span="98-105", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="NumberToWordsExtension.cs"];
m13_26 [label="var partitions = TokenPartitioner.Partition(\r\n                tokens,\r\n                name => TypeLookup.GetDescriptorInfo(name, optionSpecs, nameComparer))", span="61-63", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="NumberToWordsExtension.cs"];
m13_27 [label="var optionSpecProps = OptionMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsOption() select pt),\r\n                partitions.Options,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture),\r\n                nameComparer)", span="65-69", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="NumberToWordsExtension.cs"];
m13_28 [label="var valueSpecProps = ValueMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsValue() select pt),\r\n                    partitions.Values,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture))", span="71-74", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="NumberToWordsExtension.cs"];
m13_29 [label="var missingValueErrors = from token in partitions.Errors\r\n                                     select new MissingValueOptionError(\r\n                                         NameInfo.FromOptionSpecification(optionSpecs.Single(o => token.Text.MatchName(o.ShortName, o.LongName, nameComparer))))", span="76-78", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="NumberToWordsExtension.cs"];
m13_30 [label="var specPropsWithValue = optionSpecProps.Value.Concat(valueSpecProps.Value)", span="80-80", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="NumberToWordsExtension.cs"];
m13_32 [label="var validationErrors = specPropsWithValue.Validate(SpecificationPropertyRules.Lookup)\r\n                .OfType<Just<Error>>().Select(e => e.Value)", span="95-96", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="NumberToWordsExtension.cs"];
m13_34 [label="Exit CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="33-33", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="NumberToWordsExtension.cs"];
m13_49 [label="Entry CommandLine.Core.Specification.IsValue()", span="18-18", cluster="CommandLine.Core.Specification.IsValue()", file="NumberToWordsExtension.cs"];
m13_43 [label="Entry Unk.ThrowingValidate", span="", cluster="Unk.ThrowingValidate", file="NumberToWordsExtension.cs"];
m13_40 [label="Entry CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="103-103", cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="NumberToWordsExtension.cs"];
m13_7 [label="return explodedTokens;", span="26-26", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m13_62 [label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="74-74", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="NumberToWordsExtension.cs"];
m13_72 [label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="12-12", cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="NumberToWordsExtension.cs"];
m13_105 [label="Entry System.Type.CreateEmptyArray()", span="83-83", cluster="System.Type.CreateEmptyArray()", file="NumberToWordsExtension.cs"];
m13_63 [label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66", cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="NumberToWordsExtension.cs"];
m13_36 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="NumberToWordsExtension.cs"];
m13_52 [label="Entry Unk.FromOptionSpecification", span="", cluster="Unk.FromOptionSpecification", file="NumberToWordsExtension.cs"];
m13_54 [label="Entry T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="42-42", cluster="T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="NumberToWordsExtension.cs"];
m13_11 [label="Entry Humanizer.Localisation.NumberToWords.FarsiNumberToWordsConverter.FarsiNumberToWordsConverter()", span="5-5", cluster="Humanizer.Localisation.NumberToWords.FarsiNumberToWordsConverter.FarsiNumberToWordsConverter()", file="NumberToWordsExtension.cs"];
m13_87 [label="Entry CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", span="137-137", cluster="CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", file="NumberToWordsExtension.cs"];
m13_104 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="NumberToWordsExtension.cs"];
m13_64 [label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", span="21-21", cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="NumberToWordsExtension.cs"];
m13_50 [label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="261-261", cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="NumberToWordsExtension.cs"];
m13_68 [label="Entry CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11", cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="NumberToWordsExtension.cs"];
m13_53 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="NumberToWordsExtension.cs"];
m13_48 [label="Entry Unk.MapValues", span="", cluster="Unk.MapValues", file="NumberToWordsExtension.cs"];
m13_12 [label="NameLookup.Contains(name, optionSpecs, nameComparer)", span="22-22", cluster="lambda expression", file="NumberToWordsExtension.cs", color=green, community=0];
m13_13 [label="return Converter.Convert(number);", span="27-27", cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs"];
m13_14 [label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="12-12", cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="NumberToWordsExtension.cs"];
m13_46 [label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="NumberToWordsExtension.cs"];
m13_103 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()", file="NumberToWordsExtension.cs"];
m13_37 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="NumberToWordsExtension.cs"];
m13_44 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="NumberToWordsExtension.cs"];
m13_106 [label="Entry lambda expression", span="96-96", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m13_4 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m13_5 [label="var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer))", span="22-22", cluster="lambda expression", color=green, community=0, file="NumberToWordsExtension.cs"];
m13_6 [label="var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.WithSeparator(name, optionSpecs, nameComparer))", span="23-25", cluster="lambda expression", file="NumberToWordsExtension.cs", color=green, community=0];
m13_8 [label="Entry lambda expression", span="17-17", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m13_9 [label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", color=red, community=0, file="NumberToWordsExtension.cs"];
m13_65 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m13_66 [label="TypeLookup.GetDescriptorInfo(name, optionSpecs, nameComparer)", span="63-63", cluster="lambda expression", color=green, community=0, file="NumberToWordsExtension.cs"];
m13_67 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m13_69 [label="Entry lambda expression", span="68-68", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m13_70 [label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="68-68", cluster="lambda expression", color=green, community=0, file="NumberToWordsExtension.cs"];
m13_71 [label="Exit lambda expression", span="68-68", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m13_73 [label="Entry lambda expression", span="74-74", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m13_74 [label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="74-74", cluster="lambda expression", color=green, community=0, file="NumberToWordsExtension.cs"];
m13_75 [label="Exit lambda expression", span="74-74", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m13_76 [label="Entry lambda expression", span="78-78", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m13_77 [label="token.Text.MatchName(o.ShortName, o.LongName, nameComparer)", span="78-78", cluster="lambda expression", color=green, community=0, file="NumberToWordsExtension.cs"];
m13_78 [label="Exit lambda expression", span="78-78", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m13_59 [label="Entry lambda expression", span="50-51", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m13_80 [label="Entry lambda expression", span="84-84", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m13_84 [label="Entry lambda expression", span="85-85", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m13_88 [label="Entry lambda expression", span="87-87", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m13_92 [label="Entry lambda expression", span="88-88", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m13_95 [label="Entry lambda expression", span="90-92", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m13_100 [label="Entry lambda expression", span="93-93", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m13_60 [label="SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>())", span="50-51", cluster="lambda expression", color=green, community=0, file="NumberToWordsExtension.cs"];
m13_61 [label="Exit lambda expression", span="50-51", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m13_81 [label="sp.Value.IsJust()", span="84-84", cluster="lambda expression", color=green, community=0, file="NumberToWordsExtension.cs"];
m13_82 [label="Exit lambda expression", span="84-84", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m13_93 [label="sp.Specification.DefaultValue.FromJust()", span="88-88", cluster="lambda expression", color=green, community=0, file="NumberToWordsExtension.cs"];
m13_94 [label="Exit lambda expression", span="88-88", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m13_96 [label="sp.Value.IsNothing()\r\n                        && sp.Specification.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Sequence\r\n                        && sp.Specification.DefaultValue.MatchNothing()", span="90-92", cluster="lambda expression", color=green, community=0, file="NumberToWordsExtension.cs"];
m13_97 [label="Exit lambda expression", span="90-92", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m13_16 [label="NameLookup.WithSeparator(name, optionSpecs, nameComparer)", span="25-25", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m13_86 [label="Exit lambda expression", span="85-85", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m13_85 [label="sp.Value.FromJust()", span="85-85", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m13_90 [label="Exit lambda expression", span="87-87", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m13_89 [label="sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust()", span="87-87", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m13_102 [label="Exit lambda expression", span="93-93", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m13_101 [label="sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray()", span="93-93", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m13_107 [label="e.Value", span="96-96", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m13_108 [label="Exit lambda expression", span="96-96", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m13_55 [label="Entry System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", span="44-44", cluster="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", file="NumberToWordsExtension.cs"];
m13_56 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="NumberToWordsExtension.cs"];
m13_51 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="NumberToWordsExtension.cs"];
m13_39 [label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="338-338", cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="NumberToWordsExtension.cs"];
m13_57 [label="Entry Unk.Concat", span="", cluster="Unk.Concat", file="NumberToWordsExtension.cs"];
m13_58 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="NumberToWordsExtension.cs"];
m13_79 [label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8", cluster="string.MatchName(string, string, System.StringComparer)", file="NumberToWordsExtension.cs"];
m13_45 [label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0", cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="NumberToWordsExtension.cs"];
m13_98 [label="Entry System.Type.ToDescriptorKind()", span="22-22", cluster="System.Type.ToDescriptorKind()", file="NumberToWordsExtension.cs"];
m13_35 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="NumberToWordsExtension.cs"];
m13_18 [label="Entry CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="19-19", cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="NumberToWordsExtension.cs"];
m13_109 [label="System.StringComparer", span="", file="NumberToWordsExtension.cs"];
m13_110 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span="", file="NumberToWordsExtension.cs"];
m13_111 [label="System.StringComparer", span="", file="NumberToWordsExtension.cs"];
m13_112 [label=optionSpecs, span="", file="NumberToWordsExtension.cs"];
m13_113 [label="System.Globalization.CultureInfo", span="", file="NumberToWordsExtension.cs"];
m13_114 [label=token, span="", file="NumberToWordsExtension.cs"];
m18_0 [label="Entry Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", span="7-7", cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", file="RussianFormatter.cs"];
m18_1 [label="var mod100 = number%100", span="9-9", cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=green, community=0, file="RussianFormatter.cs"];
m18_2 [label="mod100/10 != 1", span="10-10", cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=green, community=0, file="RussianFormatter.cs"];
m18_5 [label="return resourceKey + SingularPostfix;", span="15-15", cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=green, community=0, file="RussianFormatter.cs"];
m18_4 [label="mod10 == 1", span="14-14", cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=green, community=0, file="RussianFormatter.cs"];
m18_7 [label="return resourceKey + PaucalPostfix;", span="18-18", cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=green, community=0, file="RussianFormatter.cs"];
m18_6 [label="mod10 > 1 && mod10 < 5", span="17-17", cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=green, community=0, file="RussianFormatter.cs"];
m18_3 [label="var mod10 = number%10", span="12-12", cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", file="RussianFormatter.cs"];
m18_8 [label="return resourceKey;", span="21-21", cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", file="RussianFormatter.cs"];
m18_9 [label="Exit Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", span="7-7", cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", file="RussianFormatter.cs"];
m22_25 [label="Entry string.Equals(string)", span="0-0", cluster="string.Equals(string)", file="Tense.cs"];
m22_7 [label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="17-17", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="Tense.cs"];
m22_26 [label="Entry Unk.SequenceEqual", span="", cluster="Unk.SequenceEqual", file="Tense.cs"];
m22_8 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="Tense.cs"];
m22_9 [label="Entry CommandLine.Core.Token.Name(string)", span="19-19", cluster="CommandLine.Core.Token.Name(string)", file="Tense.cs"];
m22_17 [label="Entry CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11", cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Tense.cs"];
m22_21 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="Tense.cs"];
m22_13 [label="Entry Unk.True", span="", cluster="Unk.True", file="Tense.cs"];
m22_11 [label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Tense.cs"];
m22_27 [label="Entry CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", span="39-39", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="Tense.cs"];
m22_28 [label="var expectedSequence = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''i'', new[] {''10'', ''10'', ''30'', ''40''}) \r\n                }", span="42-45", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="Tense.cs"];
m22_29 [label="var specs =new[]\r\n                {\r\n                    new OptionSpecification(string.Empty, ''stringvalue'', false, string.Empty, -1, -1, '\0', null, typeof(string), string.Empty, string.Empty, new List<string>()),\r\n                    new OptionSpecification(''i'', string.Empty, false, string.Empty, 3, 4, '\0', null, typeof(IEnumerable<int>), string.Empty, string.Empty, new List<string>())\r\n                }", span="46-50", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="Tense.cs"];
m22_31 [label="Assert.True(expectedSequence.All(a => result.Options.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))))", span="59-59", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="Tense.cs"];
m22_30 [label="var result = TokenPartitioner.Partition(\r\n                new[] { Token.Name(''i''), Token.Value(''10''), Token.Value(''10''), Token.Value(''30''), Token.Value(''40'') },\r\n                name => TypeLookup.GetDescriptorInfo(name, specs, StringComparer.InvariantCulture)\r\n                )", span="53-56", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="Tense.cs"];
m22_32 [label="Exit CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", span="39-39", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="Tense.cs"];
m22_0 [label="Entry CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", span="13-13", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="Tense.cs"];
m22_1 [label="var expectedSequence = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''i'', new[] {''10'', ''20'', ''30'', ''40''}) \r\n                }", span="16-19", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="Tense.cs"];
m22_2 [label="var specs =new[]\r\n                {\r\n                    new OptionSpecification(string.Empty, ''stringvalue'', false, string.Empty, -1, -1, '\0', null, typeof(string), string.Empty, string.Empty, new List<string>()),\r\n                    new OptionSpecification(''i'', string.Empty, false, string.Empty, 3, 4, '\0', null, typeof(IEnumerable<int>), string.Empty, string.Empty, new List<string>())\r\n                }", span="20-24", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="Tense.cs"];
m22_4 [label="Assert.True(expectedSequence.All(a => result.Options.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))))", span="33-33", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="Tense.cs"];
m22_3 [label="var result = TokenPartitioner.Partition(\r\n                new[] { Token.Name(''i''), Token.Value(''10''), Token.Value(''20''), Token.Value(''30''), Token.Value(''40'') },\r\n                name => TypeLookup.GetDescriptorInfo(name, specs, StringComparer.InvariantCulture)\r\n                )", span="27-30", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="Tense.cs"];
m22_5 [label="Exit CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", span="13-13", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="Tense.cs"];
m22_39 [label="Entry lambda expression", span="59-59", cluster="lambda expression", file="Tense.cs"];
m22_15 [label="TypeLookup.GetDescriptorInfo(name, specs, StringComparer.InvariantCulture)", span="29-29", cluster="lambda expression", file="Tense.cs"];
m22_14 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="Tense.cs"];
m22_19 [label="result.Options.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))", span="33-33", cluster="lambda expression", file="Tense.cs"];
m22_18 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="Tense.cs"];
m22_16 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="Tense.cs"];
m22_20 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="Tense.cs"];
m22_22 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="Tense.cs"];
m22_23 [label="a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value)", span="33-33", cluster="lambda expression", file="Tense.cs"];
m22_24 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="Tense.cs"];
m22_34 [label="TypeLookup.GetDescriptorInfo(name, specs, StringComparer.InvariantCulture)", span="55-55", cluster="lambda expression", file="Tense.cs"];
m22_33 [label="Entry lambda expression", span="55-55", cluster="lambda expression", file="Tense.cs"];
m22_37 [label="result.Options.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))", span="59-59", cluster="lambda expression", file="Tense.cs"];
m22_36 [label="Entry lambda expression", span="59-59", cluster="lambda expression", file="Tense.cs"];
m22_35 [label="Exit lambda expression", span="55-55", cluster="lambda expression", file="Tense.cs"];
m22_38 [label="Exit lambda expression", span="59-59", cluster="lambda expression", file="Tense.cs"];
m22_40 [label="a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value)", span="59-59", cluster="lambda expression", file="Tense.cs"];
m22_41 [label="Exit lambda expression", span="59-59", cluster="lambda expression", file="Tense.cs"];
m22_10 [label="Entry CommandLine.Core.Token.Value(string)", span="26-26", cluster="CommandLine.Core.Token.Value(string)", file="Tense.cs"];
m22_12 [label="Entry Unk.All", span="", cluster="Unk.All", file="Tense.cs"];
m22_6 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="Tense.cs"];
m22_42 [label=specs, span="", file="Tense.cs"];
m22_43 [label=result, span="", file="Tense.cs"];
m22_44 [label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", span="", file="Tense.cs"];
m22_45 [label=specs, span="", file="Tense.cs"];
m22_46 [label=result, span="", file="Tense.cs"];
m22_47 [label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", span="", file="Tense.cs"];
m25_7 [label="Entry Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", span="39-39", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", file="ToQuantityTests.cs"];
m25_8 [label="Assert.Equal(expected, word.ToQuantity(quatity, ShowQuantityAs.None))", span="41-41", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", color=green, community=0, file="ToQuantityTests.cs"];
m25_9 [label="Exit Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", span="39-39", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", file="ToQuantityTests.cs"];
m25_5 [label="Entry string.ToQuantity(int, Humanizer.ShowQuantityAs)", span="25-25", cluster="string.ToQuantity(int, Humanizer.ShowQuantityAs)", file="ToQuantityTests.cs"];
m25_10 [label="Entry Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityNumeric(string, int, string)", span="56-56", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityNumeric(string, int, string)", file="ToQuantityTests.cs"];
m25_11 [label="Assert.Equal(expected, word.ToQuantity(quatity, ShowQuantityAs.Numeric))", span="59-59", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityNumeric(string, int, string)", color=green, community=0, file="ToQuantityTests.cs"];
m25_12 [label="Exit Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityNumeric(string, int, string)", span="56-56", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityNumeric(string, int, string)", file="ToQuantityTests.cs"];
m25_6 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ToQuantityTests.cs"];
m25_2 [label="Entry Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantity(string, int, string)", span="22-22", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantity(string, int, string)", file="ToQuantityTests.cs"];
m25_3 [label="Assert.Equal(expected, word.ToQuantity(quatity))", span="24-24", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantity(string, int, string)", color=green, community=0, file="ToQuantityTests.cs"];
m25_4 [label="Exit Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantity(string, int, string)", span="22-22", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantity(string, int, string)", file="ToQuantityTests.cs"];
m25_13 [label="Entry Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWords(string, int, string)", span="75-75", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWords(string, int, string)", file="ToQuantityTests.cs"];
m25_14 [label="Assert.Equal(expected, word.ToQuantity(quatity, ShowQuantityAs.Words))", span="77-77", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWords(string, int, string)", color=green, community=0, file="ToQuantityTests.cs"];
m25_15 [label="Exit Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWords(string, int, string)", span="75-75", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWords(string, int, string)", file="ToQuantityTests.cs"];
n49 -> n2  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter"];
n49 -> n3  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter"];
n49 -> n13  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter"];
n49 -> n16  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter"];
n49 -> n20  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter"];
n49 -> n24  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter"];
n49 -> n38  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.UzbekLatnNumberToWordConverter"];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [key=1, style=dashed, color=darkseagreen4, label=int];
n0 -> n3  [key=1, style=dashed, color=darkseagreen4, label=int];
n0 -> n37  [key=3, color=darkorchid, style=bold, label="Parameter variable int number"];
n0 -> n5  [key=3, color=darkorchid, style=bold, label="method methodReturn string Convert"];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=0, style=solid];
n2 -> n4  [key=0, style=solid];
n2 -> n5  [key=2, style=dotted];
n2 -> n6  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n3 -> n5  [key=2, style=dotted];
n4 -> n0  [key=0, style=bold, color=blue];
n5 -> n7  [key=0, style=solid];
n5 -> n9  [key=1, style=dashed, color=darkseagreen4, label=int];
n5 -> n12  [key=1, style=dashed, color=darkseagreen4, label=int];
n5 -> n13  [key=1, style=dashed, color=darkseagreen4, label=int];
n5 -> n14  [key=1, style=dashed, color=darkseagreen4, label=int];
n5 -> n15  [key=1, style=dashed, color=darkseagreen4, label=int];
n5 -> n16  [key=1, style=dashed, color=darkseagreen4, label=int];
n5 -> n17  [key=1, style=dashed, color=darkseagreen4, label=int];
n5 -> n18  [key=1, style=dashed, color=darkseagreen4, label=int];
n5 -> n21  [key=1, style=dashed, color=darkseagreen4, label=int];
n5 -> n22  [key=1, style=dashed, color=darkseagreen4, label=int];
n5 -> n25  [key=1, style=dashed, color=darkseagreen4, label=int];
n5 -> n26  [key=1, style=dashed, color=darkseagreen4, label=int];
n5 -> n27  [key=1, style=dashed, color=darkseagreen4, label=int];
n5 -> n28  [key=1, style=dashed, color=darkseagreen4, label=int];
n5 -> n29  [key=1, style=dashed, color=darkseagreen4, label=int];
n5 -> n30  [key=1, style=dashed, color=darkseagreen4, label=int];
n5 -> n2  [key=3, color=darkorchid, style=bold, label="Parameter variable bool checkForHoundredRule"];
n5 -> n0  [key=3, color=darkorchid, style=bold, label="Parameter variable int number"];
n5 -> n10  [key=3, color=darkorchid, style=bold, label="method methodReturn string Convert"];
n7 -> n8  [key=0, style=solid];
n7 -> n9  [key=0, style=solid];
n9 -> n10  [key=0, style=solid];
n9 -> n11  [key=0, style=solid];
n12 -> n13  [key=0, style=solid];
n12 -> n15  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n13 -> n5  [key=2, style=dotted];
n13 -> n34  [key=2, style=dotted];
n14 -> n15  [key=0, style=solid];
n14 -> n14  [key=1, style=dashed, color=darkseagreen4, label=int];
n14 -> n16  [key=1, style=dashed, color=darkseagreen4, label=int];
n14 -> n17  [key=1, style=dashed, color=darkseagreen4, label=int];
n14 -> n18  [key=1, style=dashed, color=darkseagreen4, label=int];
n14 -> n21  [key=1, style=dashed, color=darkseagreen4, label=int];
n14 -> n22  [key=1, style=dashed, color=darkseagreen4, label=int];
n14 -> n25  [key=1, style=dashed, color=darkseagreen4, label=int];
n14 -> n26  [key=1, style=dashed, color=darkseagreen4, label=int];
n14 -> n27  [key=1, style=dashed, color=darkseagreen4, label=int];
n14 -> n28  [key=1, style=dashed, color=darkseagreen4, label=int];
n14 -> n29  [key=1, style=dashed, color=darkseagreen4, label=int];
n14 -> n30  [key=1, style=dashed, color=darkseagreen4, label=int];
n15 -> n16  [key=0, style=solid];
n15 -> n18  [key=0, style=solid];
n16 -> n17  [key=0, style=solid];
n16 -> n5  [key=2, style=dotted];
n16 -> n34  [key=2, style=dotted];
n17 -> n18  [key=0, style=solid];
n17 -> n17  [key=1, style=dashed, color=darkseagreen4, label=int];
n17 -> n21  [key=1, style=dashed, color=darkseagreen4, label=int];
n17 -> n22  [key=1, style=dashed, color=darkseagreen4, label=int];
n17 -> n25  [key=1, style=dashed, color=darkseagreen4, label=int];
n17 -> n26  [key=1, style=dashed, color=darkseagreen4, label=int];
n17 -> n27  [key=1, style=dashed, color=darkseagreen4, label=int];
n17 -> n28  [key=1, style=dashed, color=darkseagreen4, label=int];
n17 -> n29  [key=1, style=dashed, color=darkseagreen4, label=int];
n17 -> n30  [key=1, style=dashed, color=darkseagreen4, label=int];
n18 -> n19  [key=0, style=solid];
n18 -> n20  [key=1, style=dashed, color=darkseagreen4, label=thousand];
n21 -> n22  [key=0, style=solid];
n21 -> n21  [key=1, style=dashed, color=darkseagreen4, label=int];
n21 -> n25  [key=1, style=dashed, color=darkseagreen4, label=int];
n21 -> n26  [key=1, style=dashed, color=darkseagreen4, label=int];
n21 -> n27  [key=1, style=dashed, color=darkseagreen4, label=int];
n21 -> n28  [key=1, style=dashed, color=darkseagreen4, label=int];
n21 -> n29  [key=1, style=dashed, color=darkseagreen4, label=int];
n21 -> n30  [key=1, style=dashed, color=darkseagreen4, label=int];
n22 -> n23  [key=0, style=solid];
n22 -> n24  [key=1, style=dashed, color=darkseagreen4, label=hundred];
n25 -> n26  [key=0, style=solid];
n25 -> n25  [key=1, style=dashed, color=darkseagreen4, label=int];
n25 -> n27  [key=1, style=dashed, color=darkseagreen4, label=int];
n25 -> n28  [key=1, style=dashed, color=darkseagreen4, label=int];
n25 -> n29  [key=1, style=dashed, color=darkseagreen4, label=int];
n25 -> n30  [key=1, style=dashed, color=darkseagreen4, label=int];
n26 -> n27  [key=0, style=solid];
n26 -> n29  [key=0, style=solid];
n27 -> n28  [key=0, style=solid];
n27 -> n34  [key=2, style=dotted];
n28 -> n29  [key=0, style=solid];
n28 -> n28  [key=1, style=dashed, color=darkseagreen4, label=int];
n28 -> n30  [key=1, style=dashed, color=darkseagreen4, label=int];
n29 -> n30  [key=0, style=solid];
n29 -> n31  [key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n30 -> n34  [key=2, style=dotted];
n8 -> n32  [key=0, style=solid];
n10 -> n32  [key=0, style=solid];
n11 -> n12  [key=0, style=solid];
n11 -> n33  [key=2, style=dotted];
n11 -> n13  [key=1, style=dashed, color=darkseagreen4, label=sb];
n11 -> n16  [key=1, style=dashed, color=darkseagreen4, label=sb];
n11 -> n20  [key=1, style=dashed, color=darkseagreen4, label=sb];
n11 -> n24  [key=1, style=dashed, color=darkseagreen4, label=sb];
n11 -> n27  [key=1, style=dashed, color=darkseagreen4, label=sb];
n11 -> n30  [key=1, style=dashed, color=darkseagreen4, label=sb];
n11 -> n31  [key=1, style=dashed, color=darkseagreen4, label=sb];
n20 -> n21  [key=0, style=solid];
n20 -> n5  [key=2, style=dotted];
n20 -> n34  [key=2, style=dotted];
n24 -> n25  [key=0, style=solid];
n24 -> n5  [key=2, style=dotted];
n24 -> n34  [key=2, style=dotted];
n31 -> n32  [key=0, style=solid];
n31 -> n35  [key=2, style=dotted];
n31 -> n36  [key=2, style=dotted];
n19 -> n20  [key=0, style=solid];
n19 -> n22  [key=0, style=solid];
n23 -> n24  [key=0, style=solid];
n23 -> n26  [key=0, style=solid];
n32 -> n5  [key=0, style=bold, color=blue];
n37 -> n38  [key=0, style=solid];
n38 -> n39  [key=0, style=solid];
n38 -> n0  [key=2, style=dotted];
n38 -> n40  [key=1, style=dashed, color=darkseagreen4, label=word];
n38 -> n42  [key=1, style=dashed, color=darkseagreen4, label=word];
n38 -> n45  [key=1, style=dashed, color=darkseagreen4, label=word];
n39 -> n40  [key=0, style=solid];
n39 -> n45  [key=1, style=dashed, color=darkseagreen4, label=i];
n39 -> n39  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
n40 -> n41  [key=0, style=solid];
n40 -> n42  [key=0, style=solid];
n40 -> n47  [key=2, style=dotted];
n42 -> n43  [key=0, style=solid];
n45 -> n46  [key=0, style=solid];
n45 -> n48  [key=2, style=dotted];
n41 -> n46  [key=0, style=solid];
n43 -> n44  [key=0, style=solid];
n43 -> n45  [key=0, style=solid];
n44 -> n45  [key=0, style=solid];
n46 -> n37  [key=0, style=bold, color=blue];
m1_25 -> m1_26  [key=0, style=solid, color=green];
m1_26 -> m1_27  [key=0, style=solid, color=green];
m1_26 -> n6  [key=2, style=dotted, color=green];
m1_26 -> m1_21  [key=2, style=dotted, color=green];
m1_26 -> m1_14  [key=2, style=dotted, color=green];
m1_27 -> m1_25  [key=0, style=bold, color=blue];
m1_41 -> m1_42  [key=0, style=solid];
m1_42 -> m1_14  [key=2, style=dotted];
m1_42 -> m1_21  [key=2, style=dotted];
m1_42 -> m1_43  [key=0, style=solid];
m1_43 -> m1_41  [key=0, style=bold, color=blue];
m1_38 -> m1_39  [key=0, style=solid];
m1_39 -> m1_14  [key=2, style=dotted];
m1_39 -> n6  [key=2, style=dotted];
m1_39 -> m1_21  [key=2, style=dotted];
m1_39 -> m1_40  [key=0, style=solid];
m1_40 -> m1_38  [key=0, style=bold, color=blue];
m1_22 -> m1_23  [key=0, style=solid];
m1_23 -> m1_14  [key=2, style=dotted];
m1_23 -> m1_21  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid];
m1_24 -> m1_22  [key=0, style=bold, color=blue];
m1_0 -> m1_14  [key=3, color=darkorchid, style=bold, label="Parameter variable System.TimeSpan deltaFromNow"];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_1 -> m1_4  [key=2, style=dotted];
m1_1 -> m1_5  [key=2, style=dotted];
m1_1 -> m1_6  [key=2, style=dotted];
m1_1 -> m1_2  [key=0, style=solid];
m1_2 -> m1_4  [key=2, style=dotted];
m1_2 -> m1_5  [key=2, style=dotted];
m1_2 -> m1_6  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_0  [key=0, style=bold, color=blue];
m1_47 -> m1_48  [key=0, style=solid];
m1_48 -> m1_14  [key=2, style=dotted];
m1_48 -> m1_21  [key=2, style=dotted];
m1_48 -> m1_49  [key=0, style=solid];
m1_49 -> m1_47  [key=0, style=bold, color=blue];
m1_7 -> m1_11  [key=1, style=dashed, color=green, label=string];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_7 -> m1_14  [key=3, color=darkorchid, style=bold, label="Parameter variable System.TimeSpan deltaFromNow"];
m1_11 -> m1_12  [key=0, style=solid, color=green];
m1_11 -> m1_4  [key=2, style=dotted, color=green];
m1_11 -> m1_5  [key=2, style=dotted, color=green];
m1_11 -> m1_6  [key=2, style=dotted, color=green];
m1_10 -> m1_11  [key=0, style=solid, color=green];
m1_10 -> m1_4  [key=2, style=dotted];
m1_10 -> m1_5  [key=2, style=dotted];
m1_10 -> m1_6  [key=2, style=dotted];
m1_9 -> m1_11  [key=1, style=dashed, color=green, label=now];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_13  [key=2, style=dotted];
m1_8 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label=utcNow];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_13  [key=2, style=dotted];
m1_12 -> m1_7  [key=0, style=bold, color=blue];
m1_32 -> m1_33  [key=0, style=solid];
m1_33 -> m1_14  [key=2, style=dotted];
m1_33 -> n6  [key=2, style=dotted];
m1_33 -> m1_21  [key=2, style=dotted];
m1_33 -> m1_34  [key=0, style=solid];
m1_34 -> m1_32  [key=0, style=bold, color=blue];
m1_44 -> m1_45  [key=0, style=solid];
m1_45 -> m1_14  [key=2, style=dotted];
m1_45 -> n6  [key=2, style=dotted];
m1_45 -> m1_21  [key=2, style=dotted];
m1_45 -> m1_46  [key=0, style=solid];
m1_46 -> m1_44  [key=0, style=bold, color=blue];
m1_50 -> m1_51  [key=0, style=solid];
m1_51 -> m1_14  [key=2, style=dotted];
m1_51 -> n6  [key=2, style=dotted];
m1_51 -> m1_21  [key=2, style=dotted];
m1_51 -> m1_52  [key=0, style=solid];
m1_52 -> m1_50  [key=0, style=bold, color=blue];
m1_35 -> m1_36  [key=0, style=solid];
m1_36 -> m1_14  [key=2, style=dotted];
m1_36 -> m1_21  [key=2, style=dotted];
m1_36 -> m1_37  [key=0, style=solid];
m1_37 -> m1_35  [key=0, style=bold, color=blue];
m1_59 -> m1_60  [key=0, style=solid];
m1_60 -> m1_14  [key=2, style=dotted];
m1_60 -> n6  [key=2, style=dotted];
m1_60 -> m1_21  [key=2, style=dotted];
m1_60 -> m1_61  [key=0, style=solid];
m1_61 -> m1_59  [key=0, style=bold, color=blue];
m1_53 -> m1_54  [key=0, style=solid];
m1_54 -> m1_14  [key=2, style=dotted];
m1_54 -> m1_21  [key=2, style=dotted];
m1_54 -> m1_55  [key=0, style=solid];
m1_55 -> m1_53  [key=0, style=bold, color=blue];
m1_56 -> m1_57  [key=0, style=solid];
m1_57 -> m1_14  [key=2, style=dotted];
m1_57 -> m1_21  [key=2, style=dotted];
m1_57 -> m1_58  [key=0, style=solid];
m1_58 -> m1_56  [key=0, style=bold, color=blue];
m1_14 -> m1_16  [key=1, style=dashed, color=green, label=string];
m1_14 -> m1_15  [key=0, style=solid];
m1_16 -> m1_17  [key=0, style=solid, color=green];
m1_16 -> m1_7  [key=2, style=dotted, color=green];
m1_15 -> m1_16  [key=0, style=solid, color=green];
m1_15 -> m1_0  [key=2, style=dotted];
m1_17 -> m1_14  [key=0, style=bold, color=blue];
m1_18 -> m1_19  [key=0, style=solid];
m1_19 -> m1_14  [key=2, style=dotted];
m1_19 -> m1_21  [key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid];
m1_20 -> m1_18  [key=0, style=bold, color=blue];
m1_29 -> m1_30  [key=0, style=solid];
m1_30 -> m1_14  [key=2, style=dotted];
m1_30 -> m1_21  [key=2, style=dotted];
m1_30 -> m1_31  [key=0, style=solid];
m1_31 -> m1_29  [key=0, style=bold, color=blue];
m1_62 -> m1_16  [key=1, style=dashed, color=green, label="Humanizer.Tests.Extensions.DateHumanizeTests"];
m1_62 -> m1_26  [key=1, style=dashed, color=green, label="Humanizer.Tests.Extensions.DateHumanizeTests"];
m1_62 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.Extensions.DateHumanizeTests"];
m1_62 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.Extensions.DateHumanizeTests"];
m1_62 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.Extensions.DateHumanizeTests"];
m1_62 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.Extensions.DateHumanizeTests"];
m1_62 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.Extensions.DateHumanizeTests"];
m1_62 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.Extensions.DateHumanizeTests"];
m1_62 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.Extensions.DateHumanizeTests"];
m1_62 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.Extensions.DateHumanizeTests"];
m1_62 -> m1_45  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.Extensions.DateHumanizeTests"];
m1_62 -> m1_48  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.Extensions.DateHumanizeTests"];
m1_62 -> m1_51  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.Extensions.DateHumanizeTests"];
m1_62 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.Extensions.DateHumanizeTests"];
m1_62 -> m1_57  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.Extensions.DateHumanizeTests"];
m1_62 -> m1_60  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.Extensions.DateHumanizeTests"];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_0  [key=0, style=bold, color=blue];
m2_6 -> m2_7  [key=0, style=solid];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m2_7 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m2_7 -> m2_11  [key=1, style=dashed, color=red, label="System.Globalization.CultureInfo"];
m2_8 -> m2_9  [key=0, style=solid];
m2_9 -> m2_10  [key=0, style=solid, color=red];
m2_9 -> m2_11  [key=0, style=solid, color=red];
m2_9 -> m2_15  [key=2, style=dotted];
m2_11 -> m2_12  [key=0, style=solid, color=red];
m2_11 -> m2_13  [key=0, style=solid, color=red];
m2_11 -> m2_15  [key=2, style=dotted, color=red];
m2_10 -> m2_14  [key=0, style=solid, color=red];
m2_12 -> m2_14  [key=0, style=solid, color=red];
m2_13 -> m2_14  [key=0, style=solid];
m2_14 -> m2_6  [key=0, style=bold, color=blue];
m2_24 -> m2_25  [key=0, style=solid, color=red];
m2_25 -> m2_26  [key=0, style=solid, color=red];
m2_25 -> m2_19  [key=2, style=dotted, color=red];
m2_26 -> m2_24  [key=0, style=bold, color=blue];
m2_16 -> m2_17  [key=0, style=solid];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_19  [key=2, style=dotted];
m2_18 -> m2_16  [key=0, style=bold, color=blue];
m2_3 -> m2_4  [key=0, style=solid];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_6  [key=2, style=dotted];
m2_5 -> m2_3  [key=0, style=bold, color=blue];
m2_27 -> m2_28  [key=0, style=solid];
m2_28 -> m2_29  [key=0, style=solid];
m2_29 -> m2_27  [key=0, style=bold, color=blue];
m2_20 -> m2_21  [key=0, style=solid];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_23  [key=2, style=dotted];
m2_22 -> m2_20  [key=0, style=bold, color=blue];
m2_30 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.LocaliserRegistry<TLocaliser>"];
m2_30 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.LocaliserRegistry<TLocaliser>"];
m2_30 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.LocaliserRegistry<TLocaliser>"];
m2_30 -> m2_11  [key=1, style=dashed, color=red, label="Humanizer.Configuration.LocaliserRegistry<TLocaliser>"];
m2_30 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.LocaliserRegistry<TLocaliser>"];
m2_30 -> m2_17  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.LocaliserRegistry<TLocaliser>"];
m2_30 -> m2_25  [key=1, style=dashed, color=red, label="Humanizer.Configuration.LocaliserRegistry<TLocaliser>"];
m2_30 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.LocaliserRegistry<TLocaliser>"];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Infrastructure.Maybe<object>"];
m3_9 -> m3_14  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.SpecificationProperty"];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_12  [key=0, style=solid];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_14  [key=0, style=solid];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_8  [key=2, style=dotted];
m3_11 -> m3_15  [key=0, style=solid];
m3_11 -> m3_7  [key=2, style=dotted];
m3_13 -> m3_15  [key=0, style=solid];
m3_13 -> m3_7  [key=2, style=dotted];
m3_15 -> m3_9  [key=0, style=bold, color=blue];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_19  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.SpecificationProperty"];
m3_16 -> m3_21  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.SpecificationProperty"];
m3_16 -> m3_22  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.SpecificationProperty"];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_19  [key=0, style=solid];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_22  [key=0, style=solid];
m3_19 -> m3_24  [key=2, style=dotted];
m3_21 -> m3_23  [key=0, style=solid];
m3_21 -> m3_25  [key=2, style=dotted];
m3_21 -> m3_26  [key=2, style=dotted];
m3_21 -> m3_27  [key=2, style=dotted];
m3_21 -> m3_28  [key=2, style=dotted];
m3_21 -> m3_29  [key=2, style=dotted];
m3_22 -> m3_23  [key=0, style=solid];
m3_18 -> m3_23  [key=0, style=solid];
m3_18 -> m3_7  [key=2, style=dotted];
m3_20 -> m3_21  [key=0, style=solid];
m3_23 -> m3_16  [key=0, style=bold, color=blue];
m3_36 -> m3_37  [key=0, style=solid];
m3_37 -> m3_38  [key=0, style=solid];
m3_37 -> m3_39  [key=2, style=dotted];
m3_38 -> m3_36  [key=0, style=bold, color=blue];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_33  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m3_30 -> m3_37  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m3_31 -> m3_32  [key=0, style=solid];
m3_31 -> m3_33  [key=0, style=solid];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_35  [key=2, style=dotted];
m3_33 -> m3_36  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_32 -> m3_34  [key=0, style=solid];
m3_32 -> m3_7  [key=2, style=dotted];
m3_34 -> m3_30  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m3_0 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.SpecificationProperty"];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=0, style=solid];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_5  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_8  [key=2, style=dotted];
m3_2 -> m3_6  [key=0, style=solid];
m3_2 -> m3_7  [key=2, style=dotted];
m3_4 -> m3_6  [key=0, style=solid];
m3_4 -> m3_7  [key=2, style=dotted];
m3_6 -> m3_0  [key=0, style=bold, color=blue];
m3_40 -> m3_37  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m4_0 -> m4_1  [key=0, style=solid, color=green];
m4_1 -> m4_2  [key=0, style=solid, color=green];
m4_1 -> m4_3  [key=2, style=dotted, color=green];
m4_1 -> m4_4  [key=2, style=dotted, color=green];
m4_2 -> m4_0  [key=0, style=bold, color=blue];
m4_5 -> m4_6  [key=0, style=solid];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_8  [key=2, style=dotted];
m4_6 -> m4_4  [key=2, style=dotted];
m4_7 -> m4_5  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m5_0 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m5_0 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m5_0 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=2, style=dotted];
m5_1 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_2 -> m5_0  [key=0, style=bold, color=blue];
m5_3 -> m5_19  [key=0, style=solid];
m5_3 -> m5_20  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m5_3 -> m5_24  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>"];
m5_3 -> m5_26  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m5_3 -> m5_66  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m5_3 -> m5_27  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m5_3 -> m5_70  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m5_3 -> m5_28  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m5_3 -> m5_74  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m5_3 -> m5_29  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m5_3 -> m5_77  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_35  [key=2, style=dotted];
m5_19 -> m5_21  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_19 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_19 -> m5_31  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_22  [key=0, style=solid];
m5_20 -> m5_36  [key=2, style=dotted];
m5_20 -> m5_37  [key=2, style=dotted];
m5_20 -> m5_38  [key=2, style=dotted];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_45  [key=2, style=dotted];
m5_24 -> m5_33  [key=1, style=dashed, color=darkseagreen4, label=tokenizerResult];
m5_26 -> m5_27  [key=0, style=solid];
m5_26 -> m5_46  [key=2, style=dotted];
m5_26 -> m5_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_26 -> m5_28  [key=1, style=dashed, color=darkseagreen4, label=partitions];
m5_26 -> m5_29  [key=1, style=dashed, color=darkseagreen4, label=partitions];
m5_27 -> m5_28  [key=0, style=solid];
m5_27 -> m5_47  [key=2, style=dotted];
m5_27 -> m5_48  [key=2, style=dotted];
m5_27 -> m5_27  [key=1, style=dashed, color=darkseagreen4, label=pt];
m5_27 -> m5_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_27 -> m5_30  [key=1, style=dashed, color=darkseagreen4, label=optionSpecProps];
m5_27 -> m5_33  [key=1, style=dashed, color=darkseagreen4, label=optionSpecProps];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_49  [key=2, style=dotted];
m5_28 -> m5_48  [key=2, style=dotted];
m5_28 -> m5_28  [key=1, style=dashed, color=darkseagreen4, label=pt];
m5_28 -> m5_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_28 -> m5_30  [key=1, style=dashed, color=darkseagreen4, label=valueSpecProps];
m5_28 -> m5_33  [key=1, style=dashed, color=darkseagreen4, label=valueSpecProps];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_50  [key=2, style=dotted];
m5_29 -> m5_51  [key=2, style=dotted];
m5_29 -> m5_52  [key=2, style=dotted];
m5_29 -> m5_29  [key=1, style=dashed, color=darkseagreen4, label=token];
m5_29 -> m5_76  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_29 -> m5_77  [key=1, style=dashed, color=darkseagreen4, label=token];
m5_29 -> m5_33  [key=1, style=dashed, color=darkseagreen4, label=missingValueErrors];
m5_21 -> m5_34  [key=0, style=solid];
m5_21 -> m5_39  [key=2, style=dotted];
m5_21 -> m5_40  [key=2, style=dotted];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_41  [key=2, style=dotted];
m5_22 -> m5_42  [key=2, style=dotted];
m5_22 -> m5_59  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_22 -> m5_27  [key=1, style=dashed, color=darkseagreen4, label=specProps];
m5_22 -> m5_28  [key=1, style=dashed, color=darkseagreen4, label=specProps];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_54  [key=2, style=dotted];
m5_31 -> m5_31  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_31 -> m5_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_31 -> m5_84  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_31 -> m5_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_31 -> m5_92  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_31 -> m5_95  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_31 -> m5_100  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_31 -> m5_33  [key=1, style=dashed, color=darkseagreen4, label=instance];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_43  [key=2, style=dotted];
m5_23 -> m5_44  [key=2, style=dotted];
m5_23 -> m5_23  [key=1, style=dashed, color=darkseagreen4, label=pt];
m5_23 -> m5_26  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
m5_23 -> m5_66  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
m5_23 -> m5_29  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
m5_25 -> m5_26  [key=0, style=solid];
m5_33 -> m5_34  [key=0, style=solid];
m5_33 -> m5_57  [key=2, style=dotted];
m5_33 -> m5_58  [key=2, style=dotted];
m5_30 -> m5_31  [key=0, style=solid];
m5_30 -> m5_53  [key=2, style=dotted];
m5_30 -> m5_32  [key=1, style=dashed, color=darkseagreen4, label=specPropsWithValue];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_55  [key=2, style=dotted];
m5_32 -> m5_44  [key=2, style=dotted];
m5_32 -> m5_56  [key=2, style=dotted];
m5_32 -> m5_106  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_34 -> m5_3  [key=0, style=bold, color=blue];
m5_106 -> m5_107  [key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_9  [key=2, style=dotted];
m5_5 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_14  [key=2, style=dotted];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_10  [key=2, style=dotted];
m5_6 -> m5_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_18  [key=2, style=dotted];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m5_4 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m5_4 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m5_11 -> m5_12  [key=0, style=solid];
m5_7 -> m5_8  [key=0, style=solid];
m5_15 -> m5_16  [key=0, style=solid];
m5_8 -> m5_4  [key=0, style=bold, color=blue];
m5_13 -> m5_11  [key=0, style=bold, color=blue];
m5_17 -> m5_15  [key=0, style=bold, color=blue];
m5_66 -> m5_67  [key=0, style=solid];
m5_66 -> m5_68  [key=2, style=dotted];
m5_70 -> m5_71  [key=0, style=solid];
m5_70 -> m5_72  [key=2, style=dotted];
m5_74 -> m5_75  [key=0, style=solid];
m5_74 -> m5_72  [key=2, style=dotted];
m5_77 -> m5_78  [key=0, style=solid];
m5_77 -> m5_79  [key=2, style=dotted];
m5_59 -> m5_60  [key=0, style=solid];
m5_65 -> m5_66  [key=0, style=solid];
m5_69 -> m5_70  [key=0, style=solid];
m5_73 -> m5_74  [key=0, style=solid];
m5_76 -> m5_77  [key=0, style=solid];
m5_80 -> m5_81  [key=0, style=solid];
m5_84 -> m5_85  [key=0, style=solid];
m5_88 -> m5_89  [key=0, style=solid];
m5_92 -> m5_93  [key=0, style=solid];
m5_95 -> m5_96  [key=0, style=solid];
m5_100 -> m5_101  [key=0, style=solid];
m5_60 -> m5_61  [key=0, style=solid];
m5_60 -> m5_62  [key=2, style=dotted];
m5_60 -> m5_63  [key=2, style=dotted];
m5_60 -> m5_64  [key=2, style=dotted];
m5_61 -> m5_59  [key=0, style=bold, color=blue];
m5_67 -> m5_65  [key=0, style=bold, color=blue];
m5_71 -> m5_69  [key=0, style=bold, color=blue];
m5_75 -> m5_73  [key=0, style=bold, color=blue];
m5_78 -> m5_76  [key=0, style=bold, color=blue];
m5_81 -> m5_82  [key=0, style=solid];
m5_81 -> m5_83  [key=2, style=dotted];
m5_82 -> m5_80  [key=0, style=bold, color=blue];
m5_85 -> m5_86  [key=0, style=solid];
m5_85 -> m5_87  [key=2, style=dotted];
m5_86 -> m5_84  [key=0, style=bold, color=blue];
m5_89 -> m5_90  [key=0, style=solid];
m5_89 -> m5_91  [key=2, style=dotted];
m5_89 -> m5_83  [key=2, style=dotted];
m5_90 -> m5_88  [key=0, style=bold, color=blue];
m5_93 -> m5_94  [key=0, style=solid];
m5_93 -> m5_87  [key=2, style=dotted];
m5_94 -> m5_92  [key=0, style=bold, color=blue];
m5_96 -> m5_97  [key=0, style=solid];
m5_96 -> m5_91  [key=2, style=dotted];
m5_96 -> m5_98  [key=2, style=dotted];
m5_96 -> m5_99  [key=2, style=dotted];
m5_97 -> m5_95  [key=0, style=bold, color=blue];
m5_101 -> m5_102  [key=0, style=solid];
m5_101 -> m5_103  [key=2, style=dotted];
m5_101 -> m5_104  [key=2, style=dotted];
m5_101 -> m5_105  [key=2, style=dotted];
m5_102 -> m5_100  [key=0, style=bold, color=blue];
m5_107 -> m5_108  [key=0, style=solid];
m5_108 -> m5_106  [key=0, style=bold, color=blue];
m5_109 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m5_109 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m5_109 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m5_109 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m5_110 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m5_110 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m5_111 -> m5_66  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m5_111 -> m5_77  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m5_112 -> m5_66  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
m5_113 -> m5_70  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m5_113 -> m5_74  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m5_114 -> m5_77  [key=1, style=dashed, color=darkseagreen4, label=token];
m7_36 -> m7_88  [key=0, style=solid];
m7_36 -> m7_89  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_36 -> m7_90  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_36 -> m7_91  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_88 -> m7_89  [key=0, style=solid];
m7_89 -> m7_90  [key=0, style=solid];
m7_89 -> m7_98  [key=2, style=dotted];
m7_89 -> m7_57  [key=2, style=dotted];
m7_90 -> m7_91  [key=0, style=solid];
m7_90 -> m7_99  [key=2, style=dotted];
m7_90 -> m7_94  [key=1, style=dashed, color=darkseagreen4, label=fieldRef];
m7_91 -> m7_92  [key=0, style=solid];
m7_91 -> m7_100  [key=2, style=dotted];
m7_91 -> m7_93  [key=1, style=dashed, color=darkseagreen4, label=values];
m7_91 -> m7_94  [key=1, style=dashed, color=darkseagreen4, label=values];
m7_94 -> m7_95  [key=0, style=solid];
m7_94 -> m7_101  [key=2, style=dotted];
m7_92 -> m7_93  [key=0, style=solid];
m7_92 -> m7_94  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_92 -> m7_95  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_93 -> m7_94  [key=0, style=solid];
m7_93 -> m7_96  [key=0, style=solid];
m7_95 -> m7_93  [key=0, style=solid];
m7_95 -> m7_95  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_96 -> m7_97  [key=0, style=solid];
m7_97 -> m7_36  [key=0, style=bold, color=blue];
m7_40 -> m7_41  [key=0, style=solid];
m7_40 -> m7_42  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m7_40 -> m7_46  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m7_40 -> m7_47  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_41 -> m7_42  [key=0, style=solid];
m7_41 -> m7_53  [key=2, style=dotted];
m7_41 -> m7_46  [key=1, style=dashed, color=darkseagreen4, label=elementType];
m7_42 -> m7_43  [key=0, style=solid];
m7_42 -> m7_54  [key=2, style=dotted];
m7_42 -> m7_44  [key=1, style=dashed, color=darkseagreen4, label=array];
m7_42 -> m7_46  [key=1, style=dashed, color=darkseagreen4, label=array];
m7_42 -> m7_47  [key=1, style=dashed, color=darkseagreen4, label=array];
m7_46 -> m7_47  [key=0, style=solid];
m7_46 -> m7_55  [key=2, style=dotted];
m7_46 -> m7_56  [key=2, style=dotted];
m7_47 -> m7_48  [key=0, style=solid];
m7_47 -> m7_50  [key=0, style=solid];
m7_47 -> m7_57  [key=2, style=dotted];
m7_43 -> m7_44  [key=0, style=solid];
m7_43 -> m7_46  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_43 -> m7_50  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_44 -> m7_45  [key=0, style=solid];
m7_44 -> m7_51  [key=0, style=solid];
m7_50 -> m7_44  [key=0, style=solid];
m7_50 -> m7_50  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_45 -> m7_46  [key=0, style=solid];
m7_51 -> m7_52  [key=0, style=solid];
m7_48 -> m7_49  [key=0, style=solid];
m7_49 -> m7_52  [key=0, style=solid];
m7_52 -> m7_40  [key=0, style=bold, color=blue];
m7_83 -> m7_84  [key=0, style=solid];
m7_83 -> m7_85  [key=1, style=dashed, color=darkseagreen4, label=bool];
m7_84 -> m7_85  [key=0, style=solid];
m7_85 -> m7_86  [key=0, style=solid];
m7_85 -> m7_57  [key=2, style=dotted];
m7_86 -> m7_87  [key=0, style=solid];
m7_87 -> m7_83  [key=0, style=bold, color=blue];
m7_39 -> m7_58  [key=0, style=solid];
m7_39 -> m7_60  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_39 -> m7_62  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_58 -> m7_59  [key=0, style=solid];
m7_58 -> m7_61  [key=0, style=solid];
m7_60 -> m7_63  [key=0, style=solid];
m7_60 -> m7_65  [key=0, style=solid];
m7_60 -> m7_67  [key=0, style=solid];
m7_60 -> m7_69  [key=0, style=solid];
m7_60 -> m7_71  [key=0, style=solid];
m7_60 -> m7_73  [key=2, style=dotted];
m7_60 -> m7_57  [key=2, style=dotted];
m7_62 -> m7_63  [key=0, style=solid];
m7_62 -> m7_65  [key=0, style=solid];
m7_62 -> m7_67  [key=0, style=solid];
m7_62 -> m7_69  [key=0, style=solid];
m7_62 -> m7_71  [key=0, style=solid];
m7_62 -> m7_55  [key=2, style=dotted];
m7_62 -> m7_57  [key=2, style=dotted];
m7_59 -> m7_60  [key=0, style=solid];
m7_61 -> m7_62  [key=0, style=solid];
m7_63 -> m7_64  [key=0, style=solid];
m7_65 -> m7_66  [key=0, style=solid];
m7_67 -> m7_68  [key=0, style=solid];
m7_69 -> m7_70  [key=0, style=solid];
m7_71 -> m7_72  [key=0, style=solid];
m7_64 -> m7_72  [key=0, style=solid];
m7_66 -> m7_72  [key=0, style=solid];
m7_68 -> m7_72  [key=0, style=solid];
m7_70 -> m7_72  [key=0, style=solid];
m7_72 -> m7_39  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_0 -> m7_3  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.PropertyInfo"];
m7_0 -> m7_5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m7_0 -> m7_6  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m7_0 -> m7_7  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m7_0 -> m7_8  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m7_0 -> m7_9  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m7_0 -> m7_10  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m7_0 -> m7_11  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m7_0 -> m7_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m7_0 -> m7_13  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.PropertyInfo"];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_3  [key=0, style=solid];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_5  [key=0, style=solid];
m7_5 -> m7_6  [key=0, style=solid];
m7_6 -> m7_7  [key=0, style=solid];
m7_7 -> m7_8  [key=0, style=solid];
m7_8 -> m7_9  [key=0, style=solid];
m7_9 -> m7_10  [key=0, style=solid];
m7_10 -> m7_11  [key=0, style=solid];
m7_11 -> m7_12  [key=0, style=solid];
m7_12 -> m7_13  [key=0, style=solid];
m7_13 -> m7_14  [key=0, style=solid];
m7_2 -> m7_14  [key=0, style=solid];
m7_2 -> m7_15  [key=2, style=dotted];
m7_4 -> m7_14  [key=0, style=solid];
m7_4 -> m7_15  [key=2, style=dotted];
m7_14 -> m7_0  [key=0, style=bold, color=blue];
m7_38 -> m7_74  [key=0, style=solid];
m7_38 -> m7_76  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_74 -> m7_75  [key=0, style=solid];
m7_74 -> m7_81  [key=2, style=dotted];
m7_74 -> m7_76  [key=1, style=dashed, color=darkseagreen4, label=nc];
m7_76 -> m7_77  [key=0, style=solid];
m7_76 -> m7_79  [key=0, style=solid];
m7_76 -> m7_82  [key=2, style=dotted];
m7_76 -> m7_57  [key=2, style=dotted];
m7_75 -> m7_76  [key=0, style=solid];
m7_77 -> m7_78  [key=0, style=solid];
m7_79 -> m7_80  [key=0, style=solid];
m7_78 -> m7_80  [key=0, style=solid];
m7_80 -> m7_38  [key=0, style=bold, color=blue];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_20  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParserSettings"];
m7_16 -> m7_24  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_17 -> m7_18  [key=0, style=solid];
m7_17 -> m7_27  [key=2, style=dotted];
m7_17 -> m7_20  [key=1, style=dashed, color=darkseagreen4, label=list];
m7_17 -> m7_21  [key=1, style=dashed, color=darkseagreen4, label=list];
m7_20 -> m7_21  [key=0, style=solid];
m7_20 -> m7_28  [key=2, style=dotted];
m7_20 -> m7_23  [key=1, style=dashed, color=darkseagreen4, label=map];
m7_20 -> m7_24  [key=1, style=dashed, color=darkseagreen4, label=map];
m7_20 -> m7_25  [key=1, style=dashed, color=darkseagreen4, label=map];
m7_24 -> m7_25  [key=0, style=solid];
m7_18 -> m7_19  [key=0, style=solid];
m7_18 -> m7_20  [key=0, style=solid];
m7_21 -> m7_22  [key=0, style=solid];
m7_21 -> m7_24  [key=0, style=solid];
m7_21 -> m7_23  [key=1, style=dashed, color=darkseagreen4, label=pair];
m7_19 -> m7_26  [key=0, style=solid];
m7_23 -> m7_21  [key=0, style=solid];
m7_23 -> m7_0  [key=2, style=dotted];
m7_25 -> m7_26  [key=0, style=solid];
m7_22 -> m7_23  [key=0, style=solid];
m7_22 -> m7_21  [key=0, style=solid];
m7_26 -> m7_16  [key=0, style=bold, color=blue];
m7_29 -> m7_30  [key=0, style=solid];
m7_29 -> m7_31  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_29 -> m7_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_29 -> m7_34  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_30 -> m7_31  [key=0, style=solid];
m7_30 -> m7_32  [key=0, style=solid];
m7_31 -> m7_35  [key=0, style=solid];
m7_31 -> m7_36  [key=2, style=dotted];
m7_33 -> m7_35  [key=0, style=solid];
m7_33 -> m7_38  [key=2, style=dotted];
m7_34 -> m7_35  [key=0, style=solid];
m7_34 -> m7_39  [key=2, style=dotted];
m7_32 -> m7_33  [key=0, style=solid];
m7_32 -> m7_34  [key=0, style=solid];
m7_32 -> m7_37  [key=2, style=dotted];
m7_35 -> m7_29  [key=0, style=bold, color=blue];
m7_102 -> m7_103  [key=0, style=solid];
m7_102 -> m7_105  [key=1, style=dashed, color=darkseagreen4, label=object];
m7_103 -> m7_104  [key=0, style=solid];
m7_103 -> m7_108  [key=0, style=solid];
m7_105 -> m7_106  [key=0, style=solid];
m7_105 -> m7_108  [key=0, style=solid];
m7_105 -> m7_57  [key=2, style=dotted];
m7_104 -> m7_105  [key=0, style=solid];
m7_106 -> m7_107  [key=0, style=solid];
m7_107 -> m7_108  [key=0, style=solid];
m7_107 -> m7_109  [key=2, style=dotted];
m7_108 -> m7_102  [key=0, style=bold, color=blue];
m7_110 -> m7_5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m7_110 -> m7_6  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m7_110 -> m7_7  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m7_110 -> m7_8  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m7_110 -> m7_9  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m7_110 -> m7_10  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m7_110 -> m7_11  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m7_110 -> m7_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m7_110 -> m7_13  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m7_110 -> m7_30  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m7_110 -> m7_31  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m7_110 -> m7_32  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m7_110 -> m7_33  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m7_110 -> m7_34  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m7_110 -> m7_41  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m7_110 -> m7_45  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m7_110 -> m7_47  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m7_110 -> m7_58  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m7_110 -> m7_59  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m7_110 -> m7_60  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m7_110 -> m7_61  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m7_110 -> m7_62  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m7_110 -> m7_74  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m7_110 -> m7_75  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m7_110 -> m7_76  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m7_110 -> m7_84  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m7_110 -> m7_85  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m7_110 -> m7_88  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m7_110 -> m7_89  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m7_110 -> m7_90  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m7_110 -> m7_91  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m7_110 -> m7_103  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m7_110 -> m7_104  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m7_110 -> m7_105  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m11_2 -> m11_3  [key=0, style=solid];
m11_3 -> m11_2  [key=0, style=bold, color=blue];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_0  [key=0, style=bold, color=blue];
m12_0 -> m12_1  [key=0, style=solid, color=red];
m12_1 -> m12_2  [key=0, style=solid, color=red];
m12_1 -> m12_3  [key=2, style=dotted, color=red];
m12_1 -> m12_4  [key=2, style=dotted, color=red];
m12_2 -> m12_0  [key=0, style=bold, color=blue];
m13_0 -> m13_1  [key=0, style=solid, color=red];
m13_0 -> m13_5  [key=1, style=dashed, color=green, label="System.StringComparer"];
m13_0 -> m13_12  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m13_0 -> m13_6  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m13_0 -> m13_16  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m13_0 -> m13_3  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserResult<T> Build"];
m13_1 -> m13_1  [key=3, color=green, style=bold, label="method methodReturn CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>> "];
m13_1 -> m13_2  [key=0, style=solid, color=red];
m13_1 -> m13_3  [key=2, style=dotted, color=red];
m13_1 -> m13_0  [key=1, style=dashed, color=green, label="lambda expression"];
m13_2 -> m13_0  [key=0, style=bold, color=blue];
m13_10 -> m13_8  [key=0, style=bold, color=blue];
m13_3 -> m13_19  [key=0, style=solid, color=green];
m13_3 -> m13_20  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<string>"];
m13_3 -> m13_24  [key=1, style=dashed, color=green, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>"];
m13_3 -> m13_26  [key=1, style=dashed, color=green, label="System.StringComparer"];
m13_3 -> m13_66  [key=1, style=dashed, color=green, label="System.StringComparer"];
m13_3 -> m13_27  [key=1, style=dashed, color=green, label="System.StringComparer"];
m13_3 -> m13_70  [key=1, style=dashed, color=green, label="System.Globalization.CultureInfo"];
m13_3 -> m13_28  [key=1, style=dashed, color=green, label="System.Globalization.CultureInfo"];
m13_3 -> m13_74  [key=1, style=dashed, color=green, label="System.Globalization.CultureInfo"];
m13_3 -> m13_29  [key=1, style=dashed, color=green, label="System.StringComparer"];
m13_3 -> m13_77  [key=1, style=dashed, color=green, label="System.StringComparer"];
m13_19 -> m13_20  [key=0, style=solid, color=green];
m13_19 -> m13_35  [key=2, style=dotted, color=green];
m13_19 -> m13_21  [key=1, style=dashed, color=green, label=instance];
m13_19 -> m13_22  [key=1, style=dashed, color=green, label=instance];
m13_19 -> m13_31  [key=1, style=dashed, color=green, label=instance];
m13_20 -> m13_21  [key=0, style=solid, color=green];
m13_20 -> m13_22  [key=0, style=solid, color=green];
m13_20 -> m13_36  [key=2, style=dotted, color=green];
m13_20 -> m13_37  [key=2, style=dotted, color=green];
m13_20 -> m13_38  [key=2, style=dotted, color=green];
m13_21 -> m13_34  [key=0, style=solid, color=green];
m13_21 -> m13_39  [key=2, style=dotted, color=green];
m13_21 -> m13_40  [key=2, style=dotted, color=green];
m13_22 -> m13_27  [key=1, style=dashed, color=green, label=specProps];
m13_22 -> m13_28  [key=1, style=dashed, color=green, label=specProps];
m13_22 -> m13_23  [key=0, style=solid, color=green];
m13_22 -> m13_41  [key=2, style=dotted, color=green];
m13_22 -> m13_42  [key=2, style=dotted, color=green];
m13_22 -> m13_59  [key=1, style=dashed, color=green, label="lambda expression"];
m13_31 -> m13_31  [key=1, style=dashed, color=green, label=instance];
m13_31 -> m13_32  [key=0, style=solid, color=green];
m13_31 -> m13_54  [key=2, style=dotted, color=green];
m13_31 -> m13_80  [key=1, style=dashed, color=green, label="lambda expression"];
m13_31 -> m13_84  [key=1, style=dashed, color=green, label="lambda expression"];
m13_31 -> m13_88  [key=1, style=dashed, color=green, label="lambda expression"];
m13_31 -> m13_92  [key=1, style=dashed, color=green, label="lambda expression"];
m13_31 -> m13_95  [key=1, style=dashed, color=green, label="lambda expression"];
m13_31 -> m13_100  [key=1, style=dashed, color=green, label="lambda expression"];
m13_31 -> m13_33  [key=1, style=dashed, color=green, label=instance];
m13_24 -> m13_25  [key=0, style=solid, color=green];
m13_24 -> m13_45  [key=2, style=dotted, color=green];
m13_24 -> m13_33  [key=1, style=dashed, color=green, label=tokenizerResult];
m13_23 -> m13_24  [key=0, style=solid, color=green];
m13_23 -> m13_26  [key=1, style=dashed, color=green, label=optionSpecs];
m13_23 -> m13_66  [key=1, style=dashed, color=green, label=optionSpecs];
m13_23 -> m13_29  [key=1, style=dashed, color=green, label=optionSpecs];
m13_23 -> m13_23  [key=1, style=dashed, color=green, label=pt];
m13_23 -> m13_43  [key=2, style=dotted, color=green];
m13_23 -> m13_44  [key=2, style=dotted, color=green];
m13_25 -> m13_26  [key=0, style=solid, color=green];
m13_33 -> m13_34  [key=0, style=solid, color=green];
m13_33 -> m13_57  [key=2, style=dotted, color=green];
m13_33 -> m13_58  [key=2, style=dotted, color=green];
m13_26 -> m13_27  [key=0, style=solid, color=green];
m13_26 -> m13_46  [key=2, style=dotted, color=green];
m13_26 -> m13_65  [key=1, style=dashed, color=green, label="lambda expression"];
m13_26 -> m13_28  [key=1, style=dashed, color=green, label=partitions];
m13_26 -> m13_29  [key=1, style=dashed, color=green, label=partitions];
m13_27 -> m13_27  [key=1, style=dashed, color=green, label=pt];
m13_27 -> m13_28  [key=0, style=solid, color=green];
m13_27 -> m13_47  [key=2, style=dotted, color=green];
m13_27 -> m13_48  [key=2, style=dotted, color=green];
m13_27 -> m13_69  [key=1, style=dashed, color=green, label="lambda expression"];
m13_27 -> m13_30  [key=1, style=dashed, color=green, label=optionSpecProps];
m13_27 -> m13_33  [key=1, style=dashed, color=green, label=optionSpecProps];
m13_28 -> m13_28  [key=1, style=dashed, color=green, label=pt];
m13_28 -> m13_29  [key=0, style=solid, color=green];
m13_28 -> m13_49  [key=2, style=dotted, color=green];
m13_28 -> m13_48  [key=2, style=dotted, color=green];
m13_28 -> m13_73  [key=1, style=dashed, color=green, label="lambda expression"];
m13_28 -> m13_30  [key=1, style=dashed, color=green, label=valueSpecProps];
m13_28 -> m13_33  [key=1, style=dashed, color=green, label=valueSpecProps];
m13_29 -> m13_29  [key=1, style=dashed, color=green, label=token];
m13_29 -> m13_30  [key=0, style=solid, color=green];
m13_29 -> m13_50  [key=2, style=dotted, color=green];
m13_29 -> m13_51  [key=2, style=dotted, color=green];
m13_29 -> m13_52  [key=2, style=dotted, color=green];
m13_29 -> m13_76  [key=1, style=dashed, color=green, label="lambda expression"];
m13_29 -> m13_77  [key=1, style=dashed, color=green, label=token];
m13_29 -> m13_33  [key=1, style=dashed, color=green, label=missingValueErrors];
m13_30 -> m13_31  [key=0, style=solid, color=green];
m13_30 -> m13_53  [key=2, style=dotted, color=green];
m13_30 -> m13_32  [key=1, style=dashed, color=green, label=specPropsWithValue];
m13_32 -> m13_33  [key=0, style=solid, color=green];
m13_32 -> m13_55  [key=2, style=dotted];
m13_32 -> m13_44  [key=2, style=dotted];
m13_32 -> m13_56  [key=2, style=dotted];
m13_32 -> m13_106  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_34 -> m13_3  [key=0, style=bold, color=blue];
m13_7 -> m13_2  [key=0, style=solid];
m13_12 -> m13_13  [key=0, style=solid];
m13_12 -> m13_6  [key=0, style=solid, color=green];
m13_12 -> m13_14  [key=2, style=dotted, color=green];
m13_13 -> m13_14  [key=0, style=solid];
m13_13 -> m13_15  [key=2, style=dotted];
m13_14 -> m13_12  [key=0, style=bold, color=blue];
m13_106 -> m13_107  [key=0, style=solid];
m13_4 -> m13_5  [key=0, style=solid, color=red];
m13_4 -> m13_12  [key=0, style=solid, color=green];
m13_5 -> m13_6  [key=0, style=solid, color=green];
m13_5 -> m13_7  [key=2, style=dotted, color=red];
m13_5 -> m13_9  [key=2, style=dotted, color=green];
m13_5 -> m13_4  [key=1, style=dashed, color=green, label="lambda expression"];
m13_6 -> m13_4  [key=0, style=bold, color=blue];
m13_6 -> m13_7  [key=0, style=solid, color=green];
m13_6 -> m13_10  [key=2, style=dotted, color=green];
m13_6 -> m13_8  [key=1, style=dashed, color=green, label="lambda expression"];
m13_8 -> m13_9  [key=0, style=solid, color=red];
m13_8 -> m13_16  [key=0, style=solid];
m13_9 -> m13_10  [key=0, style=solid, color=red];
m13_9 -> m13_11  [key=2, style=dotted, color=red];
m13_65 -> m13_66  [key=0, style=solid, color=green];
m13_66 -> m13_67  [key=0, style=solid, color=green];
m13_66 -> m13_68  [key=2, style=dotted, color=green];
m13_67 -> m13_65  [key=0, style=bold, color=blue];
m13_69 -> m13_70  [key=0, style=solid, color=green];
m13_70 -> m13_71  [key=0, style=solid, color=green];
m13_70 -> m13_72  [key=2, style=dotted, color=green];
m13_71 -> m13_69  [key=0, style=bold, color=blue];
m13_73 -> m13_74  [key=0, style=solid, color=green];
m13_74 -> m13_75  [key=0, style=solid, color=green];
m13_74 -> m13_72  [key=2, style=dotted, color=green];
m13_75 -> m13_73  [key=0, style=bold, color=blue];
m13_76 -> m13_77  [key=0, style=solid, color=green];
m13_77 -> m13_78  [key=0, style=solid, color=green];
m13_77 -> m13_79  [key=2, style=dotted, color=green];
m13_78 -> m13_76  [key=0, style=bold, color=blue];
m13_59 -> m13_60  [key=0, style=solid, color=green];
m13_80 -> m13_81  [key=0, style=solid, color=green];
m13_84 -> m13_85  [key=0, style=solid];
m13_88 -> m13_89  [key=0, style=solid];
m13_92 -> m13_93  [key=0, style=solid, color=green];
m13_95 -> m13_96  [key=0, style=solid, color=green];
m13_100 -> m13_101  [key=0, style=solid];
m13_60 -> m13_61  [key=0, style=solid, color=green];
m13_60 -> m13_62  [key=2, style=dotted, color=green];
m13_60 -> m13_63  [key=2, style=dotted, color=green];
m13_60 -> m13_64  [key=2, style=dotted, color=green];
m13_61 -> m13_59  [key=0, style=bold, color=blue];
m13_81 -> m13_82  [key=0, style=solid, color=green];
m13_81 -> m13_83  [key=2, style=dotted, color=green];
m13_82 -> m13_80  [key=0, style=bold, color=blue];
m13_93 -> m13_94  [key=0, style=solid, color=green];
m13_93 -> m13_87  [key=2, style=dotted, color=green];
m13_94 -> m13_92  [key=0, style=bold, color=blue];
m13_96 -> m13_97  [key=0, style=solid, color=green];
m13_96 -> m13_91  [key=2, style=dotted, color=green];
m13_96 -> m13_98  [key=2, style=dotted, color=green];
m13_96 -> m13_99  [key=2, style=dotted, color=green];
m13_97 -> m13_95  [key=0, style=bold, color=blue];
m13_16 -> m13_10  [key=0, style=solid];
m13_16 -> m13_18  [key=2, style=dotted];
m13_86 -> m13_84  [key=0, style=bold, color=blue];
m13_85 -> m13_87  [key=2, style=dotted];
m13_85 -> m13_86  [key=0, style=solid];
m13_90 -> m13_88  [key=0, style=bold, color=blue];
m13_89 -> m13_83  [key=2, style=dotted];
m13_89 -> m13_91  [key=2, style=dotted];
m13_89 -> m13_90  [key=0, style=solid];
m13_102 -> m13_100  [key=0, style=bold, color=blue];
m13_101 -> m13_102  [key=0, style=solid];
m13_101 -> m13_103  [key=2, style=dotted];
m13_101 -> m13_104  [key=2, style=dotted];
m13_101 -> m13_105  [key=2, style=dotted];
m13_107 -> m13_108  [key=0, style=solid];
m13_108 -> m13_106  [key=0, style=bold, color=blue];
m13_109 -> m13_5  [key=1, style=dashed, color=green, label="System.StringComparer"];
m13_109 -> m13_12  [key=1, style=dashed, color=green, label="System.StringComparer"];
m13_109 -> m13_6  [key=1, style=dashed, color=green, label="System.StringComparer"];
m13_109 -> m13_16  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m13_110 -> m13_12  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m13_110 -> m13_16  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m13_111 -> m13_66  [key=1, style=dashed, color=green, label="System.StringComparer"];
m13_111 -> m13_77  [key=1, style=dashed, color=green, label="System.StringComparer"];
m13_112 -> m13_66  [key=1, style=dashed, color=green, label=optionSpecs];
m13_113 -> m13_70  [key=1, style=dashed, color=green, label="System.Globalization.CultureInfo"];
m13_113 -> m13_74  [key=1, style=dashed, color=green, label="System.Globalization.CultureInfo"];
m13_114 -> m13_77  [key=1, style=dashed, color=green, label=token];
m18_0 -> m18_1  [key=0, style=solid, color=green];
m18_0 -> m18_5  [key=1, style=dashed, color=green, label=string];
m18_0 -> m18_7  [key=1, style=dashed, color=green, label=string];
m18_0 -> m18_0  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetResourceKey"];
m18_0 -> m18_3  [key=1, style=dashed, color=darkseagreen4, label=int];
m18_0 -> m18_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m18_1 -> m18_2  [key=0, style=solid, color=green];
m18_2 -> m18_3  [key=0, style=solid, color=green];
m18_2 -> m18_8  [key=0, style=solid, color=green];
m18_5 -> m18_9  [key=0, style=solid, color=green];
m18_4 -> m18_5  [key=0, style=solid, color=green];
m18_4 -> m18_6  [key=0, style=solid, color=green];
m18_7 -> m18_9  [key=0, style=solid, color=green];
m18_6 -> m18_7  [key=0, style=solid, color=green];
m18_6 -> m18_8  [key=0, style=solid, color=green];
m18_3 -> m18_4  [key=0, style=solid, color=green];
m18_3 -> m18_6  [key=1, style=dashed, color=green, label=mod10];
m18_8 -> m18_9  [key=0, style=solid];
m18_9 -> m18_0  [key=0, style=bold, color=blue];
m22_27 -> m22_28  [key=0, style=solid];
m22_28 -> m22_29  [key=0, style=solid];
m22_28 -> m22_6  [key=2, style=dotted];
m22_28 -> m22_31  [key=1, style=dashed, color=darkseagreen4, label=expectedSequence];
m22_29 -> m22_30  [key=0, style=solid];
m22_29 -> m22_7  [key=2, style=dotted];
m22_29 -> m22_8  [key=2, style=dotted];
m22_29 -> m22_34  [key=1, style=dashed, color=darkseagreen4, label=specs];
m22_31 -> m22_32  [key=0, style=solid];
m22_31 -> m22_12  [key=2, style=dotted];
m22_31 -> m22_13  [key=2, style=dotted];
m22_31 -> m22_36  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_30 -> m22_31  [key=0, style=solid];
m22_30 -> m22_9  [key=2, style=dotted];
m22_30 -> m22_10  [key=2, style=dotted];
m22_30 -> m22_11  [key=2, style=dotted];
m22_30 -> m22_33  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_30 -> m22_37  [key=1, style=dashed, color=darkseagreen4, label=result];
m22_32 -> m22_27  [key=0, style=bold, color=blue];
m22_0 -> m22_1  [key=0, style=solid];
m22_1 -> m22_2  [key=0, style=solid];
m22_1 -> m22_6  [key=2, style=dotted];
m22_1 -> m22_4  [key=1, style=dashed, color=darkseagreen4, label=expectedSequence];
m22_2 -> m22_3  [key=0, style=solid];
m22_2 -> m22_7  [key=2, style=dotted];
m22_2 -> m22_8  [key=2, style=dotted];
m22_2 -> m22_15  [key=1, style=dashed, color=darkseagreen4, label=specs];
m22_4 -> m22_5  [key=0, style=solid];
m22_4 -> m22_12  [key=2, style=dotted];
m22_4 -> m22_13  [key=2, style=dotted];
m22_4 -> m22_18  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_3 -> m22_4  [key=0, style=solid];
m22_3 -> m22_9  [key=2, style=dotted];
m22_3 -> m22_10  [key=2, style=dotted];
m22_3 -> m22_11  [key=2, style=dotted];
m22_3 -> m22_14  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_3 -> m22_19  [key=1, style=dashed, color=darkseagreen4, label=result];
m22_5 -> m22_0  [key=0, style=bold, color=blue];
m22_39 -> m22_40  [key=0, style=solid];
m22_15 -> m22_16  [key=0, style=solid];
m22_15 -> m22_17  [key=2, style=dotted];
m22_14 -> m22_15  [key=0, style=solid];
m22_19 -> m22_20  [key=0, style=solid];
m22_19 -> m22_21  [key=2, style=dotted];
m22_19 -> m22_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_19 -> m22_23  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m22_18 -> m22_19  [key=0, style=solid];
m22_16 -> m22_14  [key=0, style=bold, color=blue];
m22_20 -> m22_18  [key=0, style=bold, color=blue];
m22_22 -> m22_23  [key=0, style=solid];
m22_23 -> m22_24  [key=0, style=solid];
m22_23 -> m22_25  [key=2, style=dotted];
m22_23 -> m22_26  [key=2, style=dotted];
m22_23 -> m22_23  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m22_24 -> m22_22  [key=0, style=bold, color=blue];
m22_34 -> m22_35  [key=0, style=solid];
m22_34 -> m22_17  [key=2, style=dotted];
m22_33 -> m22_34  [key=0, style=solid];
m22_37 -> m22_38  [key=0, style=solid];
m22_37 -> m22_21  [key=2, style=dotted];
m22_37 -> m22_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_37 -> m22_40  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m22_36 -> m22_37  [key=0, style=solid];
m22_35 -> m22_33  [key=0, style=bold, color=blue];
m22_38 -> m22_36  [key=0, style=bold, color=blue];
m22_40 -> m22_41  [key=0, style=solid];
m22_40 -> m22_25  [key=2, style=dotted];
m22_40 -> m22_26  [key=2, style=dotted];
m22_40 -> m22_40  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m22_41 -> m22_39  [key=0, style=bold, color=blue];
m22_42 -> m22_15  [key=1, style=dashed, color=darkseagreen4, label=specs];
m22_43 -> m22_19  [key=1, style=dashed, color=darkseagreen4, label=result];
m22_44 -> m22_23  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m22_45 -> m22_34  [key=1, style=dashed, color=darkseagreen4, label=specs];
m22_46 -> m22_37  [key=1, style=dashed, color=darkseagreen4, label=result];
m22_47 -> m22_40  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m25_7 -> m25_8  [key=0, style=solid, color=green];
m25_8 -> m25_9  [key=0, style=solid, color=green];
m25_8 -> m25_5  [key=2, style=dotted, color=green];
m25_8 -> m25_6  [key=2, style=dotted, color=green];
m25_9 -> m25_7  [key=0, style=bold, color=blue];
m25_10 -> m25_11  [key=0, style=solid, color=green];
m25_11 -> m25_12  [key=0, style=solid, color=green];
m25_11 -> m25_5  [key=2, style=dotted, color=green];
m25_11 -> m25_6  [key=2, style=dotted, color=green];
m25_12 -> m25_10  [key=0, style=bold, color=blue];
m25_2 -> m25_3  [key=0, style=solid, color=green];
m25_3 -> m25_4  [key=0, style=solid, color=green];
m25_3 -> m25_5  [key=2, style=dotted, color=green];
m25_3 -> m25_6  [key=2, style=dotted, color=green];
m25_4 -> m25_2  [key=0, style=bold, color=blue];
m25_13 -> m25_14  [key=0, style=solid, color=green];
m25_14 -> m25_15  [key=0, style=solid, color=green];
m25_14 -> m25_5  [key=2, style=dotted, color=green];
m25_14 -> m25_6  [key=2, style=dotted, color=green];
m25_15 -> m25_13  [key=0, style=bold, color=blue];
}
