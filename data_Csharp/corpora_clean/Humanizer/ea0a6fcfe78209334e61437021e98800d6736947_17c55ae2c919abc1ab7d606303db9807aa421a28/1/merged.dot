digraph  {
n0 [label="Entry Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan)", span="8-8", cluster="Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan)"];
n1 [label="var utcNow = DateTime.UtcNow", span="10-10", cluster="Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan)"];
n3 [label="Assert.Equal(expectedString, utcNow.Add(deltaFromNow).Humanize(utcDate: true, dateToCompareAgainst: utcNow))", span="14-14", cluster="Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan)"];
n4 [label="Assert.Equal(expectedString, localNow.Add(deltaFromNow).Humanize(utcDate: false, dateToCompareAgainst: localNow))", span="15-15", cluster="Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan)"];
n2 [label="var localNow = DateTime.Now", span="11-11", cluster="Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan)"];
n6 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)"];
n7 [label="Entry System.DateTime.Humanize(bool, System.DateTime?)", span="19-19", cluster="System.DateTime.Humanize(bool, System.DateTime?)"];
n8 [label="Entry Unk.Equal", span="", cluster="Unk.Equal"];
n5 [label="Exit Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan)", span="8-8", cluster="Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan)"];
n9 [label="Entry Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan)", span="18-18", cluster="Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan)"];
n10 [label="var utcNow = new DateTime(2013, 6, 20, 9, 58, 22, DateTimeKind.Utc)", span="20-20", cluster="Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan)"];
n12 [label="Assert.Equal(expectedString, utcNow.Add(deltaFromNow).Humanize(utcDate: true, dateToCompareAgainst: utcNow))", span="23-23", cluster="Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan)"];
n13 [label="Assert.Equal(expectedString, now.Add(deltaFromNow).Humanize(false, now))", span="24-24", cluster="Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan)"];
n11 [label="var now = new DateTime(2013, 6, 20, 11, 58, 22, DateTimeKind.Local)", span="21-21", cluster="Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan)"];
n15 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)"];
n14 [label="Exit Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan)", span="18-18", cluster="Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan)"];
n16 [label="Entry Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense)", span="27-27", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense)"];
n17 [label="var deltaFromNow = new TimeSpan()", span="29-29", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense)"];
n18 [label="unit = Math.Abs(unit)", span="30-30", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense)"];
n19 [label="tense == TimeUnitTense.Past", span="32-32", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense)", color=red, community=0];
n21 [label=timeUnit, span="35-35", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense)"];
n34 [label="VerifyWithCurrentDate(expectedString, deltaFromNow)", span="57-57", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense)"];
n35 [label="VerifyWithDateInjection(expectedString, deltaFromNow)", span="58-58", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense)"];
n37 [label="Entry System.TimeSpan.TimeSpan()", span="0-0", cluster="System.TimeSpan.TimeSpan()"];
n38 [label="Entry System.Math.Abs(int)", span="0-0", cluster="System.Math.Abs(int)"];
n20 [label="unit = -unit", span="33-33", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense)"];
n23 [label="deltaFromNow = TimeSpan.FromSeconds(unit)", span="38-38", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense)"];
n25 [label="deltaFromNow = TimeSpan.FromMinutes(unit)", span="41-41", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense)"];
n27 [label="deltaFromNow = TimeSpan.FromHours(unit)", span="44-44", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense)"];
n29 [label="deltaFromNow = TimeSpan.FromDays(unit)", span="47-47", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense)"];
n31 [label="deltaFromNow = TimeSpan.FromDays(unit*31)", span="50-50", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense)"];
n33 [label="deltaFromNow = TimeSpan.FromDays(unit*366)", span="53-53", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense)"];
n22 [label="TimeUnit.Second", span="37-37", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense)"];
n24 [label="TimeUnit.Minute", span="40-40", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense)"];
n26 [label="TimeUnit.Hour", span="43-43", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense)"];
n28 [label="TimeUnit.Day", span="46-46", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense)"];
n30 [label="TimeUnit.Month", span="49-49", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense)"];
n32 [label="TimeUnit.Year", span="52-52", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense)"];
n39 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)"];
n42 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)"];
n40 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)"];
n41 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)"];
n36 [label="Exit Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense)", span="27-27", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense)"];
d19 [label="tense == TimeUnitTense.Past", span="32-32", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense)", color=green, community=0];
m0_7 [label="Entry Humanizer.Localisation.Formatters.DefaultFormatter.DefaultFormatter(string)", span="16-16", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.DefaultFormatter(string)", file="DateHumanizeExtensions.cs"];
m0_3 [label="Entry Unk.>", span="", cluster="Unk.>", file="DateHumanizeExtensions.cs"];
m0_17 [label="Entry System.Collections.Generic.IEnumerable<T>.Humanize<T>()", span="17-17", cluster="System.Collections.Generic.IEnumerable<T>.Humanize<T>()", file="DateHumanizeExtensions.cs"];
m0_0 [label="Entry Humanizer.Tests.Localisation.DefaultFormatterTests.TimeSpanHumanizeThrowsExceptionForTimeUnitsLargerThanWeek(Humanizer.Localisation.TimeUnit, int)", span="17-17", cluster="Humanizer.Tests.Localisation.DefaultFormatterTests.TimeSpanHumanizeThrowsExceptionForTimeUnitsLargerThanWeek(Humanizer.Localisation.TimeUnit, int)", file="DateHumanizeExtensions.cs"];
m0_1 [label="Assert.Throws<ArgumentOutOfRangeException>(() => new DefaultFormatter(CultureInfo.InvariantCulture.Name).TimeSpanHumanize(timeUnit, unit))", span="19-19", cluster="Humanizer.Tests.Localisation.DefaultFormatterTests.TimeSpanHumanizeThrowsExceptionForTimeUnitsLargerThanWeek(Humanizer.Localisation.TimeUnit, int)", file="DateHumanizeExtensions.cs"];
m0_2 [label="Exit Humanizer.Tests.Localisation.DefaultFormatterTests.TimeSpanHumanizeThrowsExceptionForTimeUnitsLargerThanWeek(Humanizer.Localisation.TimeUnit, int)", span="17-17", cluster="Humanizer.Tests.Localisation.DefaultFormatterTests.TimeSpanHumanizeThrowsExceptionForTimeUnitsLargerThanWeek(Humanizer.Localisation.TimeUnit, int)", file="DateHumanizeExtensions.cs"];
m0_8 [label="Entry Humanizer.Localisation.Formatters.DefaultFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", span="58-58", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", file="DateHumanizeExtensions.cs"];
m0_15 [label="Entry Humanizer.Tests.AmbientCulture.AmbientCulture(string)", span="19-19", cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(string)", file="DateHumanizeExtensions.cs"];
m0_9 [label="Entry Humanizer.Tests.Localisation.DefaultFormatterTests.HandlesNotImplementedCollectionFormattersGracefully()", span="23-23", cluster="Humanizer.Tests.Localisation.DefaultFormatterTests.HandlesNotImplementedCollectionFormattersGracefully()", file="DateHumanizeExtensions.cs"];
m0_10 [label="new AmbientCulture(''es'')", span="25-25", cluster="Humanizer.Tests.Localisation.DefaultFormatterTests.HandlesNotImplementedCollectionFormattersGracefully()", file="DateHumanizeExtensions.cs"];
m0_11 [label="var a = new[] { DateTime.UtcNow, DateTime.UtcNow.AddDays(10) }", span="27-27", cluster="Humanizer.Tests.Localisation.DefaultFormatterTests.HandlesNotImplementedCollectionFormattersGracefully()", file="DateHumanizeExtensions.cs"];
m0_12 [label="var b = a.Humanize()", span="28-28", cluster="Humanizer.Tests.Localisation.DefaultFormatterTests.HandlesNotImplementedCollectionFormattersGracefully()", file="DateHumanizeExtensions.cs"];
m0_13 [label="Assert.Equal(a[0] + '' & '' + a[1], b)", span="30-30", cluster="Humanizer.Tests.Localisation.DefaultFormatterTests.HandlesNotImplementedCollectionFormattersGracefully()", file="DateHumanizeExtensions.cs"];
m0_14 [label="Exit Humanizer.Tests.Localisation.DefaultFormatterTests.HandlesNotImplementedCollectionFormattersGracefully()", span="23-23", cluster="Humanizer.Tests.Localisation.DefaultFormatterTests.HandlesNotImplementedCollectionFormattersGracefully()", file="DateHumanizeExtensions.cs"];
m0_4 [label="Entry lambda expression", span="19-19", cluster="lambda expression", file="DateHumanizeExtensions.cs"];
m0_5 [label="new DefaultFormatter(CultureInfo.InvariantCulture.Name).TimeSpanHumanize(timeUnit, unit)", span="19-19", cluster="lambda expression", file="DateHumanizeExtensions.cs"];
m0_6 [label="Exit lambda expression", span="19-19", cluster="lambda expression", file="DateHumanizeExtensions.cs"];
m0_16 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="DateHumanizeExtensions.cs"];
m0_19 [label="Humanizer.Localisation.TimeUnit", span="", file="DateHumanizeExtensions.cs"];
m0_20 [label=int, span="", file="DateHumanizeExtensions.cs"];
m1_15 [label="Entry Humanizer.Tests.Localisation.ar.DateHumanizeTests.SecondsAgo(int, string)", span="55-55", cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.SecondsAgo(int, string)", file="DateHumanizeTests.cs"];
m1_16 [label="DateHumanize.Verify(expected, seconds, TimeUnit.Second, TimeUnitTense.Past)", span="57-57", cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.SecondsAgo(int, string)", color=red, community=0, file="DateHumanizeTests.cs"];
m1_17 [label="Exit Humanizer.Tests.Localisation.ar.DateHumanizeTests.SecondsAgo(int, string)", span="55-55", cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.SecondsAgo(int, string)", file="DateHumanizeTests.cs"];
m1_6 [label="Entry Humanizer.Tests.Localisation.ar.DateHumanizeTests.HoursAgo(int, string)", span="25-25", cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.HoursAgo(int, string)", file="DateHumanizeTests.cs"];
m1_7 [label="DateHumanize.Verify(expected, hours, TimeUnit.Hour, TimeUnitTense.Past)", span="27-27", cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.HoursAgo(int, string)", color=red, community=0, file="DateHumanizeTests.cs"];
m1_8 [label="Exit Humanizer.Tests.Localisation.ar.DateHumanizeTests.HoursAgo(int, string)", span="25-25", cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.HoursAgo(int, string)", file="DateHumanizeTests.cs"];
m1_12 [label="Entry Humanizer.Tests.Localisation.ar.DateHumanizeTests.MonthsAgo(int, string)", span="45-45", cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.MonthsAgo(int, string)", file="DateHumanizeTests.cs"];
m1_13 [label="DateHumanize.Verify(expected, months, TimeUnit.Month, TimeUnitTense.Past)", span="47-47", cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.MonthsAgo(int, string)", color=red, community=0, file="DateHumanizeTests.cs"];
m1_14 [label="Exit Humanizer.Tests.Localisation.ar.DateHumanizeTests.MonthsAgo(int, string)", span="45-45", cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.MonthsAgo(int, string)", file="DateHumanizeTests.cs"];
m1_2 [label="Entry Humanizer.Tests.Localisation.ar.DateHumanizeTests.DaysAgo(int, string)", span="15-15", cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.DaysAgo(int, string)", file="DateHumanizeTests.cs"];
m1_3 [label="DateHumanize.Verify(expected, days, TimeUnit.Day, TimeUnitTense.Past)", span="17-17", cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.DaysAgo(int, string)", color=red, community=0, file="DateHumanizeTests.cs"];
m1_4 [label="Exit Humanizer.Tests.Localisation.ar.DateHumanizeTests.DaysAgo(int, string)", span="15-15", cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.DaysAgo(int, string)", file="DateHumanizeTests.cs"];
m1_18 [label="Entry Humanizer.Tests.Localisation.ar.DateHumanizeTests.YearsAgo(int, string)", span="65-65", cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.YearsAgo(int, string)", file="DateHumanizeTests.cs"];
m1_19 [label="DateHumanize.Verify(expected, years, TimeUnit.Year, TimeUnitTense.Past)", span="67-67", cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.YearsAgo(int, string)", color=red, community=0, file="DateHumanizeTests.cs"];
m1_20 [label="Exit Humanizer.Tests.Localisation.ar.DateHumanizeTests.YearsAgo(int, string)", span="65-65", cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.YearsAgo(int, string)", file="DateHumanizeTests.cs"];
m1_9 [label="Entry Humanizer.Tests.Localisation.ar.DateHumanizeTests.MinutesAgo(int, string)", span="35-35", cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.MinutesAgo(int, string)", file="DateHumanizeTests.cs"];
m1_10 [label="DateHumanize.Verify(expected, minutes, TimeUnit.Minute, TimeUnitTense.Past)", span="37-37", cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.MinutesAgo(int, string)", color=red, community=0, file="DateHumanizeTests.cs"];
m1_11 [label="Exit Humanizer.Tests.Localisation.ar.DateHumanizeTests.MinutesAgo(int, string)", span="35-35", cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.MinutesAgo(int, string)", file="DateHumanizeTests.cs"];
m1_0 [label="Entry Humanizer.Tests.Localisation.ar.DateHumanizeTests.DateHumanizeTests()", span="7-7", cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.DateHumanizeTests()", file="DateHumanizeTests.cs"];
m1_1 [label="Exit Humanizer.Tests.Localisation.ar.DateHumanizeTests.DateHumanizeTests()", span="7-7", cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.DateHumanizeTests()", file="DateHumanizeTests.cs"];
m3_32 [label="Entry CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_only()", span="76-76", cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_only()", file="DateHumanizeTests.nb-NO.cs"];
m3_33 [label="var expected = new[]\r\n                {\r\n                    Token.Name(''seq''), Token.Value(''seqval0''), Token.Value(''seqval1'')\r\n                }", span="78-81", cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_only()", file="DateHumanizeTests.nb-NO.cs"];
m3_34 [label="var result = Sequence.Partition(\r\n                new[]\r\n                    {\r\n                        Token.Name(''seq''), Token.Value(''seqval0''), Token.Value(''seqval1'')\r\n                    },\r\n                name =>\r\n                    new[] { ''seq'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TargetType.Sequence, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>())", span="83-91", cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_only()", file="DateHumanizeTests.nb-NO.cs"];
m3_35 [label="expected.ShouldAllBeEquivalentTo(result)", span="93-93", cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_only()", file="DateHumanizeTests.nb-NO.cs"];
m3_36 [label="Exit CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_only()", span="76-76", cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_only()", file="DateHumanizeTests.nb-NO.cs"];
m3_10 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="DateHumanizeTests.nb-NO.cs"];
m3_19 [label="Entry CommandLine.Core.Token.Name(string)", span="19-19", cluster="CommandLine.Core.Token.Name(string)", file="DateHumanizeTests.nb-NO.cs"];
m3_12 [label="Entry CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, CommandLine.Infrastructure.Maybe<int>)", span="36-36", cluster="CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, CommandLine.Infrastructure.Maybe<int>)", file="DateHumanizeTests.nb-NO.cs"];
m3_5 [label="Entry CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11", cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="DateHumanizeTests.nb-NO.cs"];
m3_13 [label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="68-68", cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="DateHumanizeTests.nb-NO.cs"];
m3_11 [label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63", cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="DateHumanizeTests.nb-NO.cs"];
m3_14 [label="Entry CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values()", span="28-28", cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values()", file="DateHumanizeTests.nb-NO.cs"];
m3_15 [label="var expected = new[]\r\n                {\r\n                    Token.Name(''seq''), Token.Value(''seqval0''), Token.Value(''seqval1'')\r\n                }", span="30-33", cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values()", color=red, community=0, file="DateHumanizeTests.nb-NO.cs"];
m3_16 [label="var result = Sequence.Partition(\r\n                new[]\r\n                    {\r\n                        Token.Name(''str''), Token.Value(''strvalue''), Token.Value(''freevalue''),\r\n                        Token.Name(''seq''), Token.Value(''seqval0''), Token.Value(''seqval1''),\r\n                        Token.Name(''x''), Token.Value(''freevalue2'')\r\n                    },\r\n                name =>\r\n                    new[] { ''seq'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TargetType.Sequence, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>())", span="35-45", cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values()", color=red, community=0, file="DateHumanizeTests.nb-NO.cs"];
m3_17 [label="expected.ShouldAllBeEquivalentTo(result)", span="47-47", cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values()", file="DateHumanizeTests.nb-NO.cs"];
m3_18 [label="Exit CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values()", span="28-28", cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values()", file="DateHumanizeTests.nb-NO.cs"];
m3_0 [label="Entry CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_empty_token_sequence()", span="13-13", cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_empty_token_sequence()", file="DateHumanizeTests.nb-NO.cs"];
m3_1 [label="var expected = new Token[] { }", span="15-15", cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_empty_token_sequence()", file="DateHumanizeTests.nb-NO.cs"];
m3_2 [label="var result = Sequence.Partition(\r\n                new Token[] { },\r\n                name =>\r\n                    new[] { ''seq'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TargetType.Sequence, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>())", span="17-22", cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_empty_token_sequence()", color=red, community=0, file="DateHumanizeTests.nb-NO.cs"];
m3_3 [label="expected.ShouldAllBeEquivalentTo(result)", span="24-24", cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_empty_token_sequence()", file="DateHumanizeTests.nb-NO.cs"];
m3_4 [label="Exit CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_empty_token_sequence()", span="13-13", cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_empty_token_sequence()", file="DateHumanizeTests.nb-NO.cs"];
m3_24 [label="Entry CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_two_sequneces()", span="51-51", cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_two_sequneces()", file="DateHumanizeTests.nb-NO.cs"];
m3_25 [label="var expected = new[]\r\n                {\r\n                    Token.Name(''seq''), Token.Value(''seqval0''), Token.Value(''seqval1''),\r\n                    Token.Name(''seqb''), Token.Value(''seqbval0'')\r\n                }", span="53-57", cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_two_sequneces()", color=red, community=0, file="DateHumanizeTests.nb-NO.cs"];
m3_26 [label="var result = Sequence.Partition(\r\n                new[]\r\n                    {\r\n                        Token.Name(''str''), Token.Value(''strvalue''), Token.Value(''freevalue''),\r\n                        Token.Name(''seq''), Token.Value(''seqval0''), Token.Value(''seqval1''),\r\n                        Token.Name(''x''), Token.Value(''freevalue2''),\r\n                        Token.Name(''seqb''), Token.Value(''seqbval0'')\r\n                    },\r\n                name =>\r\n                    new[] { ''seq'', ''seqb'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TargetType.Sequence, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>())", span="59-70", cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_two_sequneces()", color=red, community=0, file="DateHumanizeTests.nb-NO.cs"];
m3_27 [label="expected.ShouldAllBeEquivalentTo(result)", span="72-72", cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_two_sequneces()", file="DateHumanizeTests.nb-NO.cs"];
m3_28 [label="Exit CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_two_sequneces()", span="51-51", cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_two_sequneces()", file="DateHumanizeTests.nb-NO.cs"];
m3_37 [label="Entry lambda expression", span="88-91", cluster="lambda expression", file="DateHumanizeTests.nb-NO.cs"];
m3_7 [label="Entry lambda expression", span="19-22", cluster="lambda expression", file="DateHumanizeTests.nb-NO.cs"];
m3_8 [label="new[] { ''seq'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TargetType.Sequence, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>()", span="20-22", cluster="lambda expression", color=red, community=0, file="DateHumanizeTests.nb-NO.cs"];
m3_9 [label="Exit lambda expression", span="19-22", cluster="lambda expression", file="DateHumanizeTests.nb-NO.cs"];
m3_21 [label="Entry lambda expression", span="42-45", cluster="lambda expression", file="DateHumanizeTests.nb-NO.cs"];
m3_22 [label="new[] { ''seq'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TargetType.Sequence, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>()", span="43-45", cluster="lambda expression", color=red, community=0, file="DateHumanizeTests.nb-NO.cs"];
m3_23 [label="Exit lambda expression", span="42-45", cluster="lambda expression", file="DateHumanizeTests.nb-NO.cs"];
m3_29 [label="Entry lambda expression", span="67-70", cluster="lambda expression", file="DateHumanizeTests.nb-NO.cs"];
m3_30 [label="new[] { ''seq'', ''seqb'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TargetType.Sequence, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>()", span="68-70", cluster="lambda expression", file="DateHumanizeTests.nb-NO.cs"];
m3_31 [label="Exit lambda expression", span="67-70", cluster="lambda expression", file="DateHumanizeTests.nb-NO.cs"];
m3_38 [label="new[] { ''seq'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TargetType.Sequence, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>()", span="89-91", cluster="lambda expression", file="DateHumanizeTests.nb-NO.cs"];
m3_39 [label="Exit lambda expression", span="88-91", cluster="lambda expression", file="DateHumanizeTests.nb-NO.cs"];
m3_20 [label="Entry CommandLine.Core.Token.Value(string)", span="24-24", cluster="CommandLine.Core.Token.Value(string)", file="DateHumanizeTests.nb-NO.cs"];
m3_6 [label="Entry Unk.ShouldAllBeEquivalentTo", span="", cluster="Unk.ShouldAllBeEquivalentTo", file="DateHumanizeTests.nb-NO.cs"];
m4_22 [label="Entry Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor2SecondsAgo()", span="49-49", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor2SecondsAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_23 [label="var twoSecondsAgo = DateTime.UtcNow.AddSeconds(-2).Humanize()", span="51-51", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor2SecondsAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_24 [label="Assert.Equal(''acum 2 secunde'', twoSecondsAgo)", span="53-53", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor2SecondsAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_25 [label="Exit Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor2SecondsAgo()", span="49-49", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor2SecondsAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_13 [label="Entry Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor19MinutesAgo()", span="33-33", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor19MinutesAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_14 [label="var nineteenMinutesAgo = DateTime.UtcNow.AddMinutes(-19).Humanize()", span="35-35", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor19MinutesAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_15 [label="Assert.Equal(''acum 19 minute'', nineteenMinutesAgo)", span="37-37", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor19MinutesAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_16 [label="Exit Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor19MinutesAgo()", span="33-33", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor19MinutesAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_17 [label="Entry System.DateTime.AddMinutes(double)", span="0-0", cluster="System.DateTime.AddMinutes(double)", file="DateHumanizeTests.ro-RO.cs"];
m4_31 [label="Entry Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor10DaysAgo()", span="65-65", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor10DaysAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_32 [label="var tenDaysAgo = DateTime.UtcNow.AddDays(-10).Humanize()", span="67-67", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor10DaysAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_33 [label="Assert.Equal(''acum 10 zile'', tenDaysAgo)", span="69-69", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor10DaysAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_34 [label="Exit Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor10DaysAgo()", span="65-65", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor10DaysAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_26 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)", file="DateHumanizeTests.ro-RO.cs"];
m4_0 [label="Entry Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianDateHumanizeTests()", span="12-12", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianDateHumanizeTests()", file="DateHumanizeTests.ro-RO.cs"];
m4_1 [label="Exit Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianDateHumanizeTests()", span="12-12", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianDateHumanizeTests()", file="DateHumanizeTests.ro-RO.cs"];
m4_36 [label="Entry Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor23DaysAgo()", span="73-73", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor23DaysAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_37 [label="var twentyThreeDaysAgo = DateTime.UtcNow.AddDays(-23).Humanize()", span="75-75", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor23DaysAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_38 [label="Assert.Equal(''acum 23 de zile'', twentyThreeDaysAgo)", span="77-77", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor23DaysAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_39 [label="Exit Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor23DaysAgo()", span="73-73", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor23DaysAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_9 [label="Entry Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor20HoursAgo()", span="25-25", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor20HoursAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_10 [label="var threeHoursAgo = DateTime.UtcNow.AddHours(-20).Humanize()", span="27-27", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor20HoursAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_11 [label="Assert.Equal(''acum 20 de ore'', threeHoursAgo)", span="29-29", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor20HoursAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_12 [label="Exit Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor20HoursAgo()", span="25-25", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor20HoursAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_8 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="DateHumanizeTests.ro-RO.cs"];
m4_44 [label="Entry System.DateTime.AddYears(int)", span="0-0", cluster="System.DateTime.AddYears(int)", file="DateHumanizeTests.ro-RO.cs"];
m4_45 [label="Entry Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor100YearsAgo()", span="89-89", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor100YearsAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_46 [label="var hunderedYearsAgo = DateTime.UtcNow.AddYears(-100).Humanize()", span="91-91", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor100YearsAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_47 [label="Assert.Equal(''acum 100 de ani'', hunderedYearsAgo)", span="93-93", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor100YearsAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_48 [label="Exit Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor100YearsAgo()", span="89-89", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor100YearsAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_18 [label="Entry Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor44MinutesAgo()", span="41-41", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor44MinutesAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_19 [label="var fourtyFourMinutesAgo = DateTime.UtcNow.AddMinutes(-44).Humanize()", span="43-43", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor44MinutesAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_20 [label="Assert.Equal(''acum 44 de minute'', fourtyFourMinutesAgo)", span="45-45", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor44MinutesAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_21 [label="Exit Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor44MinutesAgo()", span="41-41", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor44MinutesAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_2 [label="Entry Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectForThreeHoursAgo()", span="17-17", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectForThreeHoursAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_3 [label="var threeHoursAgo = DateTime.UtcNow.AddHours(-3).Humanize()", span="19-19", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectForThreeHoursAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_4 [label="Assert.Equal(''acum 3 ore'', threeHoursAgo)", span="21-21", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectForThreeHoursAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_5 [label="Exit Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectForThreeHoursAgo()", span="17-17", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectForThreeHoursAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_27 [label="Entry Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor59SecondsAgo()", span="57-57", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor59SecondsAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_28 [label="var fiftyNineSecondsAgo = DateTime.UtcNow.AddSeconds(-59).Humanize()", span="59-59", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor59SecondsAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_29 [label="Assert.Equal(''acum 59 de secunde'', fiftyNineSecondsAgo)", span="61-61", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor59SecondsAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_30 [label="Exit Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor59SecondsAgo()", span="57-57", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor59SecondsAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_35 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="DateHumanizeTests.ro-RO.cs"];
m4_40 [label="Entry Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor119YearsAgo()", span="81-81", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor119YearsAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_41 [label="var oneHundredNineteenYearsAgo = DateTime.UtcNow.AddYears(-119).Humanize()", span="83-83", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor119YearsAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_42 [label="Assert.Equal(''acum 119 ani'', oneHundredNineteenYearsAgo)", span="85-85", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor119YearsAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_43 [label="Exit Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor119YearsAgo()", span="81-81", cluster="Humanizer.Tests.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor119YearsAgo()", file="DateHumanizeTests.ro-RO.cs"];
m4_6 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="DateHumanizeTests.ro-RO.cs"];
m5_0 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.DateHumanizeDefaultStrategyTests()", span="9-9", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.DateHumanizeDefaultStrategyTests()", file="DateHumanizeTests.ru-RU.cs"];
m5_1 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.DateHumanizeDefaultStrategyTests()", span="9-9", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.DateHumanizeDefaultStrategyTests()", file="DateHumanizeTests.ru-RU.cs"];
m5_15 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursAgo(int, string)", span="65-65", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_16 [label="DateHumanize.Verify(expected, hours, TimeUnit.Hour, Tense.Past)", span="67-67", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_17 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursAgo(int, string)", span="65-65", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_12 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.MinutesFromNow(int, string)", span="55-55", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MinutesFromNow(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_13 [label="DateHumanize.Verify(expected, minutes, TimeUnit.Minute, Tense.Future)", span="57-57", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MinutesFromNow(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_14 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.MinutesFromNow(int, string)", span="55-55", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MinutesFromNow(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_30 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.DaysFromNow(int, string)", span="107-107", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.DaysFromNow(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_31 [label="DateHumanize.Verify(expected, days, TimeUnit.Day, Tense.Future)", span="109-109", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.DaysFromNow(int, string)", color=red, community=0, file="DateHumanizeTests.ru-RU.cs"];
m5_32 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.DaysFromNow(int, string)", span="107-107", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.DaysFromNow(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_39 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.YearsAgo(int, string)", span="135-135", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.YearsAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_40 [label="DateHumanize.Verify(expected, years, TimeUnit.Year, Tense.Past)", span="137-137", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.YearsAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_41 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.YearsAgo(int, string)", span="135-135", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.YearsAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_9 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.MinutesAgo(int, string)", span="43-43", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MinutesAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_10 [label="DateHumanize.Verify(expected, minutes, TimeUnit.Minute, Tense.Past)", span="45-45", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MinutesAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_11 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.MinutesAgo(int, string)", span="43-43", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MinutesAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_42 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.YearsFromNow(int, string)", span="143-143", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.YearsFromNow(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_43 [label="DateHumanize.Verify(expected, years, TimeUnit.Year, Tense.Future)", span="145-145", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.YearsFromNow(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_44 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.YearsFromNow(int, string)", span="143-143", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.YearsFromNow(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_48 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.CanSpecifyCultureExplicitly(int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, string, string)", span="158-158", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.CanSpecifyCultureExplicitly(int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, string, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_49 [label="DateHumanize.Verify(expected, unit, timeUnit, tense, culture: new CultureInfo(culture))", span="160-160", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.CanSpecifyCultureExplicitly(int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, string, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_50 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.CanSpecifyCultureExplicitly(int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, string, string)", span="158-158", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.CanSpecifyCultureExplicitly(int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, string, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_2 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsAgo(int, string)", span="19-19", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_3 [label="DateHumanize.Verify(expected, seconds, TimeUnit.Second, Tense.Past)", span="21-21", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_4 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsAgo(int, string)", span="19-19", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_27 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.DaysAgo(int, string)", span="97-97", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.DaysAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_28 [label="DateHumanize.Verify(expected, days, TimeUnit.Day, Tense.Past)", span="99-99", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.DaysAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_29 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.DaysAgo(int, string)", span="97-97", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.DaysAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_5 [label="Entry Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", span="35-35", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="DateHumanizeTests.ru-RU.cs"];
m5_33 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.MonthsAgo(int, string)", span="117-117", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MonthsAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_34 [label="DateHumanize.Verify(expected, months, TimeUnit.Month, Tense.Past)", span="119-119", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MonthsAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_35 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.MonthsAgo(int, string)", span="117-117", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MonthsAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_36 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.MonthsFromNow(int, string)", span="127-127", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MonthsFromNow(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_37 [label="DateHumanize.Verify(expected, months, TimeUnit.Month, Tense.Future)", span="129-129", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MonthsFromNow(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_38 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.MonthsFromNow(int, string)", span="127-127", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MonthsFromNow(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_45 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.Now()", span="149-149", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.Now()", file="DateHumanizeTests.ru-RU.cs"];
m5_46 [label="DateHumanize.Verify(''now'', 0, TimeUnit.Year, Tense.Future)", span="151-151", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.Now()", file="DateHumanizeTests.ru-RU.cs"];
m5_47 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.Now()", span="149-149", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.Now()", file="DateHumanizeTests.ru-RU.cs"];
m5_6 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsFromNow(int, string)", span="29-29", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsFromNow(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_7 [label="DateHumanize.Verify(expected, seconds, TimeUnit.Second, Tense.Future)", span="31-31", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsFromNow(int, string)", color=red, community=0, file="DateHumanizeTests.ru-RU.cs"];
m5_8 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsFromNow(int, string)", span="29-29", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsFromNow(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_18 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursFromNow(int, string)", span="75-75", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursFromNow(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_19 [label="DateHumanize.Verify(expected, hours, TimeUnit.Hour, Tense.Future)", span="77-77", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursFromNow(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_20 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursFromNow(int, string)", span="75-75", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursFromNow(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_51 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="DateHumanizeTests.ru-RU.cs"];
m5_21 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursFromNowNotTomorrow(int, string)", span="83-83", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursFromNowNotTomorrow(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_22 [label="var utcNow = new DateTime(2014, 6, 28, 9, 58, 22, DateTimeKind.Utc)", span="86-86", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursFromNowNotTomorrow(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_24 [label="DateHumanize.Verify(expected, hours, TimeUnit.Hour, Tense.Future, null, null, now, utcNow)", span="89-89", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursFromNowNotTomorrow(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_23 [label="var now = new DateTime(2014, 6, 28, 9, 58, 22, DateTimeKind.Local)", span="87-87", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursFromNowNotTomorrow(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m5_25 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursFromNowNotTomorrow(int, string)", span="83-83", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursFromNowNotTomorrow(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m6_7 [label="Entry Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", span="38-38", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", file="DefaultFormatter.cs"];
m6_8 [label="Assert.Equal(expected, word.ToQuantity(quatity, ShowQuantityAs.None))", span="40-40", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", file="DefaultFormatter.cs"];
m6_9 [label="Exit Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", span="38-38", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", file="DefaultFormatter.cs"];
m6_5 [label="Entry string.ToQuantity(int, Humanizer.ShowQuantityAs)", span="46-46", cluster="string.ToQuantity(int, Humanizer.ShowQuantityAs)", file="DefaultFormatter.cs"];
m6_2 [label="Entry Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantity(string, int, string)", span="21-21", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantity(string, int, string)", file="DefaultFormatter.cs"];
m6_3 [label="Assert.Equal(expected, word.ToQuantity(quatity))", span="23-23", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantity(string, int, string)", file="DefaultFormatter.cs"];
m6_4 [label="Exit Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantity(string, int, string)", span="21-21", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantity(string, int, string)", file="DefaultFormatter.cs"];
m6_0 [label="Entry Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityTests()", span="7-7", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityTests()", file="DefaultFormatter.cs"];
m6_1 [label="Exit Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityTests()", span="7-7", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityTests()", file="DefaultFormatter.cs"];
m6_10 [label="Entry Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityNumeric(string, int, string)", span="55-55", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityNumeric(string, int, string)", file="DefaultFormatter.cs"];
m6_11 [label="Assert.Equal(expected, word.ToQuantity(quatity, ShowQuantityAs.Numeric))", span="58-58", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityNumeric(string, int, string)", file="DefaultFormatter.cs"];
m6_12 [label="Exit Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityNumeric(string, int, string)", span="55-55", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityNumeric(string, int, string)", file="DefaultFormatter.cs"];
m6_13 [label="Entry Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWords(string, int, string)", span="74-74", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWords(string, int, string)", file="DefaultFormatter.cs"];
m6_14 [label="Assert.Equal(expected, word.ToQuantity(quatity, ShowQuantityAs.Words))", span="76-76", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWords(string, int, string)", file="DefaultFormatter.cs"];
m6_15 [label="Exit Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWords(string, int, string)", span="74-74", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWords(string, int, string)", file="DefaultFormatter.cs"];
m7_4 [label="Entry Humanizer.Localisation.IFormatter.TimeSpanHumanize_Zero()", span="12-12", cluster="Humanizer.Localisation.IFormatter.TimeSpanHumanize_Zero()", file="IFormatter.cs"];
m7_5 [label="Exit Humanizer.Localisation.IFormatter.TimeSpanHumanize_Zero()", span="12-12", cluster="Humanizer.Localisation.IFormatter.TimeSpanHumanize_Zero()", file="IFormatter.cs"];
m7_6 [label="Entry Humanizer.Localisation.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", span="13-13", cluster="Humanizer.Localisation.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", file="IFormatter.cs"];
m7_7 [label="Exit Humanizer.Localisation.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", span="13-13", cluster="Humanizer.Localisation.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", file="IFormatter.cs"];
m7_2 [label="Entry Humanizer.Localisation.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense, int)", span="10-10", cluster="Humanizer.Localisation.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense, int)", file="IFormatter.cs"];
m7_3 [label="Exit Humanizer.Localisation.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense, int)", span="10-10", cluster="Humanizer.Localisation.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense, int)", file="IFormatter.cs"];
m7_0 [label="Entry Humanizer.Localisation.IFormatter.DateHumanize_Now()", span="9-9", cluster="Humanizer.Localisation.IFormatter.DateHumanize_Now()", file="IFormatter.cs"];
m7_1 [label="Exit Humanizer.Localisation.IFormatter.DateHumanize_Now()", span="9-9", cluster="Humanizer.Localisation.IFormatter.DateHumanize_Now()", file="IFormatter.cs"];
m8_9 [label="Entry Humanizer.Localisation.ResourceKeys.ValidateRange(int)", span="9-9", cluster="Humanizer.Localisation.ResourceKeys.ValidateRange(int)", file="ResourceKeys.DateHumanize.cs"];
m8_11 [label="Entry string.ToQuantity(int, Humanizer.ShowQuantityAs)", span="25-25", cluster="string.ToQuantity(int, Humanizer.ShowQuantityAs)", file="ResourceKeys.DateHumanize.cs"];
m8_0 [label="Entry Humanizer.Localisation.ResourceKeys.DateHumanize.GetResourceKey(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense, int)", span="27-27", cluster="Humanizer.Localisation.ResourceKeys.DateHumanize.GetResourceKey(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense, int)", file="ResourceKeys.DateHumanize.cs"];
m8_1 [label="ValidateRange(count)", span="29-29", cluster="Humanizer.Localisation.ResourceKeys.DateHumanize.GetResourceKey(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense, int)", file="ResourceKeys.DateHumanize.cs"];
m8_2 [label="count == 0", span="31-31", cluster="Humanizer.Localisation.ResourceKeys.DateHumanize.GetResourceKey(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense, int)", file="ResourceKeys.DateHumanize.cs"];
m8_4 [label="var singularity = count == 1 ? Single : Multiple", span="34-34", cluster="Humanizer.Localisation.ResourceKeys.DateHumanize.GetResourceKey(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense, int)", file="ResourceKeys.DateHumanize.cs"];
m8_5 [label="var tense = timeUnitTense == TimeUnitTense.Future ? FromNow : Ago", span="35-35", cluster="Humanizer.Localisation.ResourceKeys.DateHumanize.GetResourceKey(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense, int)", color=green, community=0, file="ResourceKeys.DateHumanize.cs"];
m8_6 [label="var unit = timeUnit.ToString().ToQuantity(count, ShowQuantityAs.None)", span="36-36", cluster="Humanizer.Localisation.ResourceKeys.DateHumanize.GetResourceKey(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense, int)", file="ResourceKeys.DateHumanize.cs"];
m8_3 [label="return Now;", span="32-32", cluster="Humanizer.Localisation.ResourceKeys.DateHumanize.GetResourceKey(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense, int)", file="ResourceKeys.DateHumanize.cs"];
m8_7 [label="return DateTimeFormat.FormatWith(singularity, unit, tense);", span="37-37", cluster="Humanizer.Localisation.ResourceKeys.DateHumanize.GetResourceKey(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense, int)", file="ResourceKeys.DateHumanize.cs"];
m8_8 [label="Exit Humanizer.Localisation.ResourceKeys.DateHumanize.GetResourceKey(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense, int)", span="27-27", cluster="Humanizer.Localisation.ResourceKeys.DateHumanize.GetResourceKey(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense, int)", file="ResourceKeys.DateHumanize.cs"];
m8_10 [label="Entry System.Enum.ToString()", span="0-0", cluster="System.Enum.ToString()", file="ResourceKeys.DateHumanize.cs"];
m8_12 [label="Entry string.FormatWith(params object[])", span="15-15", cluster="string.FormatWith(params object[])", file="ResourceKeys.DateHumanize.cs"];
m9_4 [label="Entry Humanizer.Tests.ResourceKeyTests.TimeSpanHumanizeKeysGeneration(string, string)", span="18-18", cluster="Humanizer.Tests.ResourceKeyTests.TimeSpanHumanizeKeysGeneration(string, string)", file="ResourceKeyTests.cs"];
m9_5 [label="Assert.Equal(expected, actual)", span="20-20", cluster="Humanizer.Tests.ResourceKeyTests.TimeSpanHumanizeKeysGeneration(string, string)", file="ResourceKeyTests.cs"];
m9_6 [label="Exit Humanizer.Tests.ResourceKeyTests.TimeSpanHumanizeKeysGeneration(string, string)", span="18-18", cluster="Humanizer.Tests.ResourceKeyTests.TimeSpanHumanizeKeysGeneration(string, string)", file="ResourceKeyTests.cs"];
m9_11 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="ResourceKeyTests.cs"];
m9_12 [label="Entry Humanizer.Tests.ResourceKeyTests.TimeSpanHumanizeKeysExistence(string, string)", span="32-32", cluster="Humanizer.Tests.ResourceKeyTests.TimeSpanHumanizeKeysExistence(string, string)", file="ResourceKeyTests.cs"];
m9_13 [label="Assert.NotNull(Resources.GetResource(generatedResourceKey))", span="34-34", cluster="Humanizer.Tests.ResourceKeyTests.TimeSpanHumanizeKeysExistence(string, string)", file="ResourceKeyTests.cs"];
m9_14 [label="Exit Humanizer.Tests.ResourceKeyTests.TimeSpanHumanizeKeysExistence(string, string)", span="32-32", cluster="Humanizer.Tests.ResourceKeyTests.TimeSpanHumanizeKeysExistence(string, string)", file="ResourceKeyTests.cs"];
m9_0 [label="Entry Humanizer.Tests.ResourceKeyTests.DateHumanizeKeysGeneration(string, string)", span="11-11", cluster="Humanizer.Tests.ResourceKeyTests.DateHumanizeKeysGeneration(string, string)", file="ResourceKeyTests.cs"];
m9_1 [label="Assert.Equal(expected, actual)", span="13-13", cluster="Humanizer.Tests.ResourceKeyTests.DateHumanizeKeysGeneration(string, string)", file="ResourceKeyTests.cs"];
m9_2 [label="Exit Humanizer.Tests.ResourceKeyTests.DateHumanizeKeysGeneration(string, string)", span="11-11", cluster="Humanizer.Tests.ResourceKeyTests.DateHumanizeKeysGeneration(string, string)", file="ResourceKeyTests.cs"];
m9_10 [label="Entry Humanizer.Localisation.Resources.GetResource(string)", span="16-16", cluster="Humanizer.Localisation.Resources.GetResource(string)", file="ResourceKeyTests.cs"];
m9_7 [label="Entry Humanizer.Tests.ResourceKeyTests.DateHumanizeKeysExistence(string, string)", span="25-25", cluster="Humanizer.Tests.ResourceKeyTests.DateHumanizeKeysExistence(string, string)", file="ResourceKeyTests.cs"];
m9_8 [label="Assert.NotNull(Resources.GetResource(generatedResourceKey))", span="27-27", cluster="Humanizer.Tests.ResourceKeyTests.DateHumanizeKeysExistence(string, string)", file="ResourceKeyTests.cs"];
m9_9 [label="Exit Humanizer.Tests.ResourceKeyTests.DateHumanizeKeysExistence(string, string)", span="25-25", cluster="Humanizer.Tests.ResourceKeyTests.DateHumanizeKeysExistence(string, string)", file="ResourceKeyTests.cs"];
n0 -> n1  [key=0, style=solid];
n0 -> n3  [key=1, style=dashed, color=darkseagreen4, label=string];
n0 -> n4  [key=1, style=dashed, color=darkseagreen4, label=string];
n0 -> n16  [key=3, color=darkorchid, style=bold, label="Parameter variable string expectedString"];
n0 -> n17  [key=3, color=darkorchid, style=bold, label="Parameter variable System.TimeSpan deltaFromNow"];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=1, style=dashed, color=darkseagreen4, label=utcNow];
n3 -> n4  [key=0, style=solid];
n3 -> n6  [key=2, style=dotted];
n3 -> n7  [key=2, style=dotted];
n3 -> n8  [key=2, style=dotted];
n4 -> n5  [key=0, style=solid];
n4 -> n6  [key=2, style=dotted];
n4 -> n7  [key=2, style=dotted];
n4 -> n8  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n4  [key=1, style=dashed, color=darkseagreen4, label=localNow];
n5 -> n0  [key=0, style=bold, color=blue];
n9 -> n10  [key=0, style=solid];
n9 -> n12  [key=1, style=dashed, color=darkseagreen4, label=string];
n9 -> n13  [key=1, style=dashed, color=darkseagreen4, label=string];
n9 -> n16  [key=3, color=darkorchid, style=bold, label="Parameter variable string expectedString"];
n9 -> n17  [key=3, color=darkorchid, style=bold, label="Parameter variable System.TimeSpan deltaFromNow"];
n10 -> n11  [key=0, style=solid];
n10 -> n15  [key=2, style=dotted];
n10 -> n12  [key=1, style=dashed, color=darkseagreen4, label=utcNow];
n12 -> n13  [key=0, style=solid];
n12 -> n6  [key=2, style=dotted];
n12 -> n7  [key=2, style=dotted];
n12 -> n8  [key=2, style=dotted];
n13 -> n14  [key=0, style=solid];
n13 -> n6  [key=2, style=dotted];
n13 -> n7  [key=2, style=dotted];
n13 -> n8  [key=2, style=dotted];
n11 -> n12  [key=0, style=solid];
n11 -> n15  [key=2, style=dotted];
n11 -> n13  [key=1, style=dashed, color=darkseagreen4, label=now];
n14 -> n9  [key=0, style=bold, color=blue];
n16 -> n17  [key=0, style=solid];
n16 -> n18  [key=1, style=dashed, color=darkseagreen4, label=int];
n16 -> n19  [key=1, style=dashed, color=red, label="Humanizer.Localisation.TimeUnitTense"];
n16 -> n21  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.TimeUnit"];
n16 -> n34  [key=1, style=dashed, color=darkseagreen4, label=string];
n16 -> n35  [key=1, style=dashed, color=darkseagreen4, label=string];
n16 -> d19  [key=1, style=dashed, color=green, label="Humanizer.Localisation.TimeUnitTense"];
n17 -> n18  [key=0, style=solid];
n17 -> n37  [key=2, style=dotted];
n18 -> n19  [key=0, style=solid, color=red];
n18 -> n38  [key=2, style=dotted];
n18 -> n18  [key=1, style=dashed, color=darkseagreen4, label=int];
n18 -> n20  [key=1, style=dashed, color=darkseagreen4, label=int];
n18 -> n23  [key=1, style=dashed, color=darkseagreen4, label=int];
n18 -> n25  [key=1, style=dashed, color=darkseagreen4, label=int];
n18 -> n27  [key=1, style=dashed, color=darkseagreen4, label=int];
n18 -> n29  [key=1, style=dashed, color=darkseagreen4, label=int];
n18 -> n31  [key=1, style=dashed, color=darkseagreen4, label=int];
n18 -> n33  [key=1, style=dashed, color=darkseagreen4, label=int];
n18 -> d19  [key=0, style=solid, color=green];
n19 -> n20  [key=0, style=solid, color=red];
n19 -> n21  [key=0, style=solid, color=red];
n21 -> n22  [key=0, style=solid];
n21 -> n24  [key=0, style=solid];
n21 -> n26  [key=0, style=solid];
n21 -> n28  [key=0, style=solid];
n21 -> n30  [key=0, style=solid];
n21 -> n32  [key=0, style=solid];
n34 -> n35  [key=0, style=solid];
n34 -> n0  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid];
n35 -> n9  [key=2, style=dotted];
n20 -> n21  [key=0, style=solid];
n20 -> n20  [key=1, style=dashed, color=darkseagreen4, label=int];
n20 -> n23  [key=1, style=dashed, color=darkseagreen4, label=int];
n20 -> n25  [key=1, style=dashed, color=darkseagreen4, label=int];
n20 -> n27  [key=1, style=dashed, color=darkseagreen4, label=int];
n20 -> n29  [key=1, style=dashed, color=darkseagreen4, label=int];
n20 -> n31  [key=1, style=dashed, color=darkseagreen4, label=int];
n20 -> n33  [key=1, style=dashed, color=darkseagreen4, label=int];
n23 -> n34  [key=0, style=solid];
n23 -> n39  [key=2, style=dotted];
n25 -> n34  [key=0, style=solid];
n25 -> n40  [key=2, style=dotted];
n27 -> n34  [key=0, style=solid];
n27 -> n41  [key=2, style=dotted];
n29 -> n34  [key=0, style=solid];
n29 -> n42  [key=2, style=dotted];
n31 -> n34  [key=0, style=solid];
n31 -> n42  [key=2, style=dotted];
n33 -> n34  [key=0, style=solid];
n33 -> n42  [key=2, style=dotted];
n33 -> n35  [key=1, style=dashed, color=darkseagreen4, label=deltaFromNow];
n22 -> n23  [key=0, style=solid];
n24 -> n25  [key=0, style=solid];
n26 -> n27  [key=0, style=solid];
n28 -> n29  [key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n32 -> n33  [key=0, style=solid];
n36 -> n16  [key=0, style=bold, color=blue];
d19 -> n20  [key=0, style=solid, color=green];
d19 -> n21  [key=0, style=solid, color=green];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.TimeUnit"];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=2, style=dotted];
m0_1 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_9 -> m0_10  [key=0, style=solid];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_15  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_16  [key=2, style=dotted];
m0_11 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_17  [key=2, style=dotted];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> n8  [key=2, style=dotted];
m0_14 -> m0_9  [key=0, style=bold, color=blue];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_7  [key=2, style=dotted];
m0_5 -> m0_8  [key=2, style=dotted];
m0_6 -> m0_4  [key=0, style=bold, color=blue];
m0_19 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.TimeUnit"];
m0_20 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_15 -> m1_16  [key=0, style=solid, color=red];
m1_16 -> m1_17  [key=0, style=solid, color=red];
m1_16 -> n16  [key=2, style=dotted, color=red];
m1_17 -> m1_15  [key=0, style=bold, color=blue];
m1_6 -> m1_7  [key=0, style=solid, color=red];
m1_7 -> m1_8  [key=0, style=solid, color=red];
m1_7 -> n16  [key=2, style=dotted, color=red];
m1_8 -> m1_6  [key=0, style=bold, color=blue];
m1_12 -> m1_13  [key=0, style=solid, color=red];
m1_13 -> m1_14  [key=0, style=solid, color=red];
m1_13 -> n16  [key=2, style=dotted, color=red];
m1_14 -> m1_12  [key=0, style=bold, color=blue];
m1_2 -> m1_3  [key=0, style=solid, color=red];
m1_3 -> m1_4  [key=0, style=solid, color=red];
m1_3 -> n16  [key=2, style=dotted, color=red];
m1_4 -> m1_2  [key=0, style=bold, color=blue];
m1_18 -> m1_19  [key=0, style=solid, color=red];
m1_19 -> m1_20  [key=0, style=solid, color=red];
m1_19 -> n16  [key=2, style=dotted, color=red];
m1_20 -> m1_18  [key=0, style=bold, color=blue];
m1_9 -> m1_10  [key=0, style=solid, color=red];
m1_10 -> m1_11  [key=0, style=solid, color=red];
m1_10 -> n16  [key=2, style=dotted, color=red];
m1_11 -> m1_9  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [key=0, style=bold, color=blue];
m3_32 -> m3_33  [key=0, style=solid];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_19  [key=2, style=dotted];
m3_33 -> m3_20  [key=2, style=dotted];
m3_33 -> m3_35  [key=1, style=dashed, color=darkseagreen4, label=expected];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_19  [key=2, style=dotted];
m3_34 -> m3_20  [key=2, style=dotted];
m3_34 -> m3_5  [key=2, style=dotted];
m3_34 -> m3_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_35 -> m3_36  [key=0, style=solid];
m3_35 -> m3_6  [key=2, style=dotted];
m3_36 -> m3_32  [key=0, style=bold, color=blue];
m3_14 -> m3_15  [key=0, style=solid, color=red];
m3_15 -> m3_16  [key=0, style=solid, color=red];
m3_15 -> m3_19  [key=2, style=dotted, color=red];
m3_15 -> m3_20  [key=2, style=dotted, color=red];
m3_15 -> m3_17  [key=1, style=dashed, color=red, label=expected];
m3_16 -> m3_17  [key=0, style=solid, color=red];
m3_16 -> m3_19  [key=2, style=dotted, color=red];
m3_16 -> m3_20  [key=2, style=dotted, color=red];
m3_16 -> m3_5  [key=2, style=dotted, color=red];
m3_16 -> m3_21  [key=1, style=dashed, color=red, label="lambda expression"];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_6  [key=2, style=dotted];
m3_18 -> m3_14  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid, color=red];
m3_1 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label=expected];
m3_2 -> m3_3  [key=0, style=solid, color=red];
m3_2 -> m3_5  [key=2, style=dotted, color=red];
m3_2 -> m3_7  [key=1, style=dashed, color=red, label="lambda expression"];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_6  [key=2, style=dotted];
m3_4 -> m3_0  [key=0, style=bold, color=blue];
m3_24 -> m3_25  [key=0, style=solid, color=red];
m3_25 -> m3_26  [key=0, style=solid, color=red];
m3_25 -> m3_19  [key=2, style=dotted, color=red];
m3_25 -> m3_20  [key=2, style=dotted, color=red];
m3_25 -> m3_27  [key=1, style=dashed, color=red, label=expected];
m3_26 -> m3_27  [key=0, style=solid, color=red];
m3_26 -> m3_19  [key=2, style=dotted, color=red];
m3_26 -> m3_20  [key=2, style=dotted, color=red];
m3_26 -> m3_5  [key=2, style=dotted, color=red];
m3_26 -> m3_29  [key=1, style=dashed, color=red, label="lambda expression"];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_6  [key=2, style=dotted];
m3_28 -> m3_24  [key=0, style=bold, color=blue];
m3_37 -> m3_38  [key=0, style=solid];
m3_7 -> m3_8  [key=0, style=solid, color=red];
m3_8 -> m3_9  [key=0, style=solid, color=red];
m3_8 -> m3_10  [key=2, style=dotted, color=red];
m3_8 -> m3_11  [key=2, style=dotted, color=red];
m3_8 -> m3_12  [key=2, style=dotted, color=red];
m3_8 -> m3_13  [key=2, style=dotted, color=red];
m3_9 -> m3_7  [key=0, style=bold, color=blue];
m3_21 -> m3_22  [key=0, style=solid, color=red];
m3_22 -> m3_23  [key=0, style=solid, color=red];
m3_22 -> m3_10  [key=2, style=dotted, color=red];
m3_22 -> m3_11  [key=2, style=dotted, color=red];
m3_22 -> m3_12  [key=2, style=dotted, color=red];
m3_22 -> m3_13  [key=2, style=dotted, color=red];
m3_23 -> m3_21  [key=0, style=bold, color=blue];
m3_29 -> m3_30  [key=0, style=solid];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_10  [key=2, style=dotted];
m3_30 -> m3_11  [key=2, style=dotted];
m3_30 -> m3_12  [key=2, style=dotted];
m3_30 -> m3_13  [key=2, style=dotted];
m3_31 -> m3_29  [key=0, style=bold, color=blue];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_10  [key=2, style=dotted];
m3_38 -> m3_11  [key=2, style=dotted];
m3_38 -> m3_12  [key=2, style=dotted];
m3_38 -> m3_13  [key=2, style=dotted];
m3_39 -> m3_37  [key=0, style=bold, color=blue];
m4_22 -> m4_23  [key=0, style=solid];
m4_23 -> m4_24  [key=0, style=solid];
m4_23 -> m4_26  [key=2, style=dotted];
m4_23 -> n7  [key=2, style=dotted];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_8  [key=2, style=dotted];
m4_25 -> m4_22  [key=0, style=bold, color=blue];
m4_13 -> m4_14  [key=0, style=solid];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> m4_17  [key=2, style=dotted];
m4_14 -> n7  [key=2, style=dotted];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_8  [key=2, style=dotted];
m4_16 -> m4_13  [key=0, style=bold, color=blue];
m4_31 -> m4_32  [key=0, style=solid];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_35  [key=2, style=dotted];
m4_32 -> n7  [key=2, style=dotted];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_8  [key=2, style=dotted];
m4_34 -> m4_31  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_0  [key=0, style=bold, color=blue];
m4_36 -> m4_37  [key=0, style=solid];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_35  [key=2, style=dotted];
m4_37 -> n7  [key=2, style=dotted];
m4_38 -> m4_39  [key=0, style=solid];
m4_38 -> m4_8  [key=2, style=dotted];
m4_39 -> m4_36  [key=0, style=bold, color=blue];
m4_9 -> m4_10  [key=0, style=solid];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_6  [key=2, style=dotted];
m4_10 -> n7  [key=2, style=dotted];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_8  [key=2, style=dotted];
m4_12 -> m4_9  [key=0, style=bold, color=blue];
m4_45 -> m4_46  [key=0, style=solid];
m4_46 -> m4_47  [key=0, style=solid];
m4_46 -> m4_44  [key=2, style=dotted];
m4_46 -> n7  [key=2, style=dotted];
m4_47 -> m4_48  [key=0, style=solid];
m4_47 -> m4_8  [key=2, style=dotted];
m4_48 -> m4_45  [key=0, style=bold, color=blue];
m4_18 -> m4_19  [key=0, style=solid];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_17  [key=2, style=dotted];
m4_19 -> n7  [key=2, style=dotted];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_8  [key=2, style=dotted];
m4_21 -> m4_18  [key=0, style=bold, color=blue];
m4_2 -> m4_3  [key=0, style=solid];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_6  [key=2, style=dotted];
m4_3 -> n7  [key=2, style=dotted];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_8  [key=2, style=dotted];
m4_5 -> m4_2  [key=0, style=bold, color=blue];
m4_27 -> m4_28  [key=0, style=solid];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_26  [key=2, style=dotted];
m4_28 -> n7  [key=2, style=dotted];
m4_29 -> m4_30  [key=0, style=solid];
m4_29 -> m4_8  [key=2, style=dotted];
m4_30 -> m4_27  [key=0, style=bold, color=blue];
m4_40 -> m4_41  [key=0, style=solid];
m4_41 -> m4_42  [key=0, style=solid];
m4_41 -> m4_44  [key=2, style=dotted];
m4_41 -> n7  [key=2, style=dotted];
m4_42 -> m4_43  [key=0, style=solid];
m4_42 -> m4_8  [key=2, style=dotted];
m4_43 -> m4_40  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_0  [key=0, style=bold, color=blue];
m5_15 -> m5_16  [key=0, style=solid];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_5  [key=2, style=dotted];
m5_17 -> m5_15  [key=0, style=bold, color=blue];
m5_12 -> m5_13  [key=0, style=solid];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_5  [key=2, style=dotted];
m5_14 -> m5_12  [key=0, style=bold, color=blue];
m5_30 -> m5_31  [key=0, style=solid, color=red];
m5_31 -> m5_32  [key=0, style=solid, color=red];
m5_31 -> m5_5  [key=2, style=dotted, color=red];
m5_32 -> m5_30  [key=0, style=bold, color=blue];
m5_39 -> m5_40  [key=0, style=solid];
m5_40 -> m5_41  [key=0, style=solid];
m5_40 -> m5_5  [key=2, style=dotted];
m5_41 -> m5_39  [key=0, style=bold, color=blue];
m5_9 -> m5_10  [key=0, style=solid];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_5  [key=2, style=dotted];
m5_11 -> m5_9  [key=0, style=bold, color=blue];
m5_42 -> m5_43  [key=0, style=solid];
m5_43 -> m5_44  [key=0, style=solid];
m5_43 -> m5_5  [key=2, style=dotted];
m5_44 -> m5_42  [key=0, style=bold, color=blue];
m5_48 -> m5_49  [key=0, style=solid];
m5_49 -> m5_50  [key=0, style=solid];
m5_49 -> m5_51  [key=2, style=dotted];
m5_49 -> m5_5  [key=2, style=dotted];
m5_50 -> m5_48  [key=0, style=bold, color=blue];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_5  [key=2, style=dotted];
m5_4 -> m5_2  [key=0, style=bold, color=blue];
m5_27 -> m5_28  [key=0, style=solid];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_5  [key=2, style=dotted];
m5_29 -> m5_27  [key=0, style=bold, color=blue];
m5_33 -> m5_34  [key=0, style=solid];
m5_34 -> m5_35  [key=0, style=solid];
m5_34 -> m5_5  [key=2, style=dotted];
m5_35 -> m5_33  [key=0, style=bold, color=blue];
m5_36 -> m5_37  [key=0, style=solid];
m5_37 -> m5_38  [key=0, style=solid];
m5_37 -> m5_5  [key=2, style=dotted];
m5_38 -> m5_36  [key=0, style=bold, color=blue];
m5_45 -> m5_46  [key=0, style=solid];
m5_46 -> m5_47  [key=0, style=solid];
m5_46 -> m5_5  [key=2, style=dotted];
m5_47 -> m5_45  [key=0, style=bold, color=blue];
m5_6 -> m5_7  [key=0, style=solid, color=red];
m5_7 -> m5_8  [key=0, style=solid, color=red];
m5_7 -> m5_5  [key=2, style=dotted, color=red];
m5_8 -> m5_6  [key=0, style=bold, color=blue];
m5_18 -> m5_19  [key=0, style=solid];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_5  [key=2, style=dotted];
m5_20 -> m5_18  [key=0, style=bold, color=blue];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_24  [key=1, style=dashed, color=darkseagreen4, label=int];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> n15  [key=2, style=dotted];
m5_22 -> m5_24  [key=1, style=dashed, color=darkseagreen4, label=utcNow];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_5  [key=2, style=dotted];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> n15  [key=2, style=dotted];
m5_25 -> m5_21  [key=0, style=bold, color=blue];
m6_7 -> m6_8  [key=0, style=solid];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_5  [key=2, style=dotted];
m6_8 -> n8  [key=2, style=dotted];
m6_9 -> m6_7  [key=0, style=bold, color=blue];
m6_2 -> m6_3  [key=0, style=solid];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_5  [key=2, style=dotted];
m6_3 -> n8  [key=2, style=dotted];
m6_4 -> m6_2  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_0  [key=0, style=bold, color=blue];
m6_10 -> m6_11  [key=0, style=solid];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_5  [key=2, style=dotted];
m6_11 -> n8  [key=2, style=dotted];
m6_12 -> m6_10  [key=0, style=bold, color=blue];
m6_13 -> m6_14  [key=0, style=solid];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_5  [key=2, style=dotted];
m6_14 -> n8  [key=2, style=dotted];
m6_15 -> m6_13  [key=0, style=bold, color=blue];
m7_4 -> m7_5  [key=0, style=solid];
m7_5 -> m7_4  [key=0, style=bold, color=blue];
m7_6 -> m7_7  [key=0, style=solid];
m7_7 -> m7_6  [key=0, style=bold, color=blue];
m7_2 -> m7_3  [key=0, style=solid];
m7_3 -> m7_2  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_0  [key=0, style=bold, color=blue];
m8_9 -> m8_9  [key=3, color=darkorchid, style=bold, label="Field variable string Now"];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_2  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_0 -> m8_4  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_0 -> m8_5  [key=1, style=dashed, color=green, label="Humanizer.Localisation.TimeUnitTense"];
m8_0 -> m8_6  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.TimeUnit"];
m8_0 -> m8_9  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetResourceKey"];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_9  [key=2, style=dotted];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_4  [key=0, style=solid];
m8_4 -> m8_5  [key=0, style=solid, color=green];
m8_4 -> m8_7  [key=1, style=dashed, color=darkseagreen4, label=singularity];
m8_5 -> m8_6  [key=0, style=solid, color=green];
m8_5 -> m8_7  [key=1, style=dashed, color=green, label=tense];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_10  [key=2, style=dotted];
m8_6 -> m8_11  [key=2, style=dotted];
m8_3 -> m8_8  [key=0, style=solid];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_12  [key=2, style=dotted];
m8_8 -> m8_0  [key=0, style=bold, color=blue];
m8_12 -> m8_12  [key=3, color=darkorchid, style=bold, label="Field variable string DateTimeFormat"];
m9_4 -> m9_5  [key=0, style=solid];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> n8  [key=2, style=dotted];
m9_6 -> m9_4  [key=0, style=bold, color=blue];
m9_12 -> m9_13  [key=0, style=solid];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_10  [key=2, style=dotted];
m9_13 -> m9_11  [key=2, style=dotted];
m9_14 -> m9_12  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> n8  [key=2, style=dotted];
m9_2 -> m9_0  [key=0, style=bold, color=blue];
m9_7 -> m9_8  [key=0, style=solid];
m9_8 -> m9_9  [key=0, style=solid];
m9_8 -> m9_10  [key=2, style=dotted];
m9_8 -> m9_11  [key=2, style=dotted];
m9_9 -> m9_7  [key=0, style=bold, color=blue];
}
