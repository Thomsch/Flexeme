digraph  {
m1_0 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="Entry Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", span="33-33"];
m1_1 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="number == 0", span="35-35"];
m1_3 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="number < 0", span="38-38"];
m1_4 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="return string.Format(''min {0}'', Convert(-number));", span="39-39"];
m1_7 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="var divided = number / m.Value", span="45-45"];
m1_12 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="number %= m.Value", span="55-55"];
m1_15 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="number > 0", span="60-60"];
m1_16 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="number < 20", span="62-62"];
m1_17 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="word += UnitsMap[number]", span="63-63"];
m1_18 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="var tens = TensMap[number / 10]", span="66-66"];
m1_19 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="var unit = number % 10", span="67-67"];
m1_2 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="return UnitsMap[0];", span="36-36"];
m1_5 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="var word = ''''", span="41-41"];
m1_6 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label=Hunderds, span="43-43"];
m1_10 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="word += m.Name", span="51-51"];
m1_11 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="word += Convert(divided) + m.Prefix + m.Name", span="53-53"];
m1_24 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="word += tens", span="75-75"];
m1_25 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="return word;", span="79-79"];
m1_9 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="divided == 1 && !m.DisplayOneUnit", span="50-50"];
m1_14 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="word += m.Postfix", span="57-57"];
m1_8 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="divided <= 0", span="47-47"];
m1_13 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="number > 0", span="56-56"];
m1_20 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="unit > 0", span="68-68"];
m1_21 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="var units = UnitsMap[unit]", span="70-70"];
m1_22 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="var trema = units.EndsWith(''e'')", span="71-71"];
m1_26 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="Exit Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", span="33-33"];
m1_28 [cluster="string.EndsWith(string)", file="DutchNumberToWordsConverter.cs", label="Entry string.EndsWith(string)", span="0-0"];
m1_38 [cluster="Unk.Substring", file="DutchNumberToWordsConverter.cs", label="Entry Unk.Substring", span=""];
m1_29 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="DutchNumberToWordsConverter.cs", label="Entry Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", span="91-91"];
m1_30 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="DutchNumberToWordsConverter.cs", label="var word = Convert(number)", span="93-93"];
m1_31 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="DutchNumberToWordsConverter.cs", label="OrdinalExceptions.Where(kv => word.EndsWith(kv.Key))", span="95-95"];
m1_32 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="DutchNumberToWordsConverter.cs", label="return word.Substring(0, word.Length - kv.Key.Length) + kv.Value;", span="98-98"];
m1_33 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="DutchNumberToWordsConverter.cs", label="word.LastIndexOfAny(EndingCharForSte) == (word.Length - 1)", span="104-104"];
m1_34 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="DutchNumberToWordsConverter.cs", label="return word + ''ste'';", span="105-105"];
m1_35 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="DutchNumberToWordsConverter.cs", label="return word + ''de'';", span="107-107"];
m1_36 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="DutchNumberToWordsConverter.cs", label="Exit Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", span="91-91"];
m1_40 [cluster="lambda expression", file="DutchNumberToWordsConverter.cs", label="Entry lambda expression", span="95-95"];
m1_41 [cluster="lambda expression", file="DutchNumberToWordsConverter.cs", label="word.EndsWith(kv.Key)", span="95-95"];
m1_42 [cluster="lambda expression", file="DutchNumberToWordsConverter.cs", label="Exit lambda expression", span="95-95"];
m1_39 [cluster="string.LastIndexOfAny(char[])", file="DutchNumberToWordsConverter.cs", label="Entry string.LastIndexOfAny(char[])", span="0-0"];
m1_27 [cluster="string.Format(string, object)", file="DutchNumberToWordsConverter.cs", label="Entry string.Format(string, object)", span="0-0"];
m1_37 [cluster="Unk.Where", file="DutchNumberToWordsConverter.cs", label="Entry Unk.Where", span=""];
m1_43 [file="DutchNumberToWordsConverter.cs", label="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter", span=""];
m1_44 [file="DutchNumberToWordsConverter.cs", label=word, span=""];
m4_8 [cluster="int.ToString(System.IFormatProvider)", file="OrdinalizeExtensions.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m4_5 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int)", file="OrdinalizeExtensions.cs", label="Entry Humanizer.OrdinalizeExtensions.Ordinalize(int)", span="25-25"];
m4_7 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int)", file="OrdinalizeExtensions.cs", label="Exit Humanizer.OrdinalizeExtensions.Ordinalize(int)", span="25-25"];
m4_4 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", file="OrdinalizeExtensions.cs", label="Entry Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", span="30-30"];
m4_9 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", color=green, community=0, file="OrdinalizeExtensions.cs", label="int nMod100 = number % 100", prediction=0, span="32-32"];
m4_11 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", color=green, community=0, file="OrdinalizeExtensions.cs", label="return numberString + ''th'';", prediction=1, span="36-36"];
m4_12 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", color=green, community=0, file="OrdinalizeExtensions.cs", label="number % 10", prediction=1, span="39-39"];
m4_14 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", color=green, community=0, file="OrdinalizeExtensions.cs", label="return numberString + ''st'';", prediction=1, span="42-42"];
m4_10 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", color=green, community=0, file="OrdinalizeExtensions.cs", label="nMod100 >= 11 && nMod100 <= 13", prediction=4, span="34-34"];
m4_13 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", color=green, community=0, file="OrdinalizeExtensions.cs", label=1, prediction=5, span="41-41"];
m4_20 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", file="OrdinalizeExtensions.cs", label="Exit Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", span="30-30"];
m4_0 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(string)", file="OrdinalizeExtensions.cs", label="Entry Humanizer.OrdinalizeExtensions.Ordinalize(string)", span="15-15"];
m4_1 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(string)", color=green, community=0, file="OrdinalizeExtensions.cs", label="return Ordinalize(int.Parse(numberString), numberString);", prediction=6, span="17-17"];
m4_2 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(string)", file="OrdinalizeExtensions.cs", label="Exit Humanizer.OrdinalizeExtensions.Ordinalize(string)", span="15-15"];
m4_3 [cluster="int.Parse(string)", file="OrdinalizeExtensions.cs", label="Entry int.Parse(string)", span="0-0"];
m5_0 [cluster="Humanizer.Tests.OrdinalizeTests.OrdinalizeString(string, string)", file="OrdinalizeTests.cs", label="Entry Humanizer.Tests.OrdinalizeTests.OrdinalizeString(string, string)", span="36-36"];
m5_1 [cluster="Humanizer.Tests.OrdinalizeTests.OrdinalizeString(string, string)", file="OrdinalizeTests.cs", label="Assert.Equal(number.Ordinalize(), ordinalized)", span="38-38"];
m5_2 [cluster="Humanizer.Tests.OrdinalizeTests.OrdinalizeString(string, string)", file="OrdinalizeTests.cs", label="Exit Humanizer.Tests.OrdinalizeTests.OrdinalizeString(string, string)", span="36-36"];
m5_5 [cluster="Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", file="OrdinalizeTests.cs", label="Entry Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", span="70-70"];
m5_6 [cluster="Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", file="OrdinalizeTests.cs", label="Assert.Equal(number.Ordinalize(), ordinalized)", span="72-72"];
m5_7 [cluster="Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", file="OrdinalizeTests.cs", label="Exit Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", span="70-70"];
m5_4 [cluster="Unk.Equal", file="OrdinalizeTests.cs", label="Entry Unk.Equal", span=""];
m5_8 [cluster="int.Ordinalize()", file="OrdinalizeTests.cs", label="Entry int.Ordinalize()", span="25-25"];
m5_3 [cluster="string.Ordinalize()", file="OrdinalizeTests.cs", label="Entry string.Ordinalize()", span="15-15"];
m6_19 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RomanNumeralExtensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m6_21 [cluster="string.Trim()", file="RomanNumeralExtensions.cs", label="Entry string.Trim()", span="0-0"];
m6_22 [cluster="Humanizer.RomanNumeralExtensions.IsInvalidRomanNumeral(string)", file="RomanNumeralExtensions.cs", label="Entry Humanizer.RomanNumeralExtensions.IsInvalidRomanNumeral(string)", span="101-101"];
m6_42 [cluster="Humanizer.RomanNumeralExtensions.IsInvalidRomanNumeral(string)", file="RomanNumeralExtensions.cs", label="return !ValidRomanNumeral.IsMatch(input);", span="103-103"];
m6_43 [cluster="Humanizer.RomanNumeralExtensions.IsInvalidRomanNumeral(string)", file="RomanNumeralExtensions.cs", label="Exit Humanizer.RomanNumeralExtensions.IsInvalidRomanNumeral(string)", span="101-101"];
m6_23 [cluster="System.ArgumentException.ArgumentException(string, string)", file="RomanNumeralExtensions.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m6_38 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="RomanNumeralExtensions.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m6_44 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string)", file="RomanNumeralExtensions.cs", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string)", span="0-0"];
m6_41 [cluster="System.Text.StringBuilder.ToString()", file="RomanNumeralExtensions.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m6_40 [cluster="System.Text.StringBuilder.Append(string)", file="RomanNumeralExtensions.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m6_39 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="RomanNumeralExtensions.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m6_20 [cluster="string.ToUpper()", file="RomanNumeralExtensions.cs", label="Entry string.ToUpper()", span="0-0"];
m6_24 [cluster="char.ToString()", file="RomanNumeralExtensions.cs", label="Entry char.ToString()", span="0-0"];
m6_0 [cluster="Humanizer.RomanNumeralExtensions.FromRoman(string)", file="RomanNumeralExtensions.cs", label="Entry Humanizer.RomanNumeralExtensions.FromRoman(string)", span="38-38"];
m6_1 [cluster="Humanizer.RomanNumeralExtensions.FromRoman(string)", file="RomanNumeralExtensions.cs", label="input == null", span="40-40"];
m6_2 [cluster="Humanizer.RomanNumeralExtensions.FromRoman(string)", file="RomanNumeralExtensions.cs", label="throw new ArgumentNullException(''input'');", span="41-41"];
m6_4 [cluster="Humanizer.RomanNumeralExtensions.FromRoman(string)", file="RomanNumeralExtensions.cs", label="var length = input.Length", span="44-44"];
m6_5 [cluster="Humanizer.RomanNumeralExtensions.FromRoman(string)", color=green, community=0, file="RomanNumeralExtensions.cs", label="length == 0 || IsInvalidRomanNumeral(input)", prediction=7, span="46-46"];
m6_10 [cluster="Humanizer.RomanNumeralExtensions.FromRoman(string)", file="RomanNumeralExtensions.cs", label="var digit = RomanNumerals[input[--i].ToString()]", span="54-54"];
m6_12 [cluster="Humanizer.RomanNumeralExtensions.FromRoman(string)", file="RomanNumeralExtensions.cs", label="var previousDigit = RomanNumerals[input[i - 1].ToString()]", span="58-58"];
m6_6 [cluster="Humanizer.RomanNumeralExtensions.FromRoman(string)", file="RomanNumeralExtensions.cs", label="throw new ArgumentException(''Empty or invalid Roman numeral string.'', ''input'');", span="47-47"];
m6_7 [cluster="Humanizer.RomanNumeralExtensions.FromRoman(string)", color=green, community=0, file="RomanNumeralExtensions.cs", label="var total = 0", prediction=8, span="49-49"];
m6_16 [cluster="Humanizer.RomanNumeralExtensions.FromRoman(string)", file="RomanNumeralExtensions.cs", label="total += digit", span="67-67"];
m6_17 [cluster="Humanizer.RomanNumeralExtensions.FromRoman(string)", file="RomanNumeralExtensions.cs", label="return total;", span="70-70"];
m6_9 [cluster="Humanizer.RomanNumeralExtensions.FromRoman(string)", file="RomanNumeralExtensions.cs", label="i > 0", span="52-52"];
m6_11 [cluster="Humanizer.RomanNumeralExtensions.FromRoman(string)", file="RomanNumeralExtensions.cs", label="i > 0", span="56-56"];
m6_13 [cluster="Humanizer.RomanNumeralExtensions.FromRoman(string)", file="RomanNumeralExtensions.cs", label="previousDigit < digit", span="60-60"];
m6_14 [cluster="Humanizer.RomanNumeralExtensions.FromRoman(string)", file="RomanNumeralExtensions.cs", label="digit -= previousDigit", span="62-62"];
m6_15 [cluster="Humanizer.RomanNumeralExtensions.FromRoman(string)", file="RomanNumeralExtensions.cs", label="i--", span="63-63"];
m6_18 [cluster="Humanizer.RomanNumeralExtensions.FromRoman(string)", file="RomanNumeralExtensions.cs", label="Exit Humanizer.RomanNumeralExtensions.FromRoman(string)", span="38-38"];
m6_25 [cluster="Humanizer.RomanNumeralExtensions.ToRoman(int)", file="RomanNumeralExtensions.cs", label="Entry Humanizer.RomanNumeralExtensions.ToRoman(int)", span="78-78"];
m6_29 [cluster="Humanizer.RomanNumeralExtensions.ToRoman(int)", color=green, community=0, file="RomanNumeralExtensions.cs", label="(input < minValue) || (input > maxValue)", prediction=9, span="84-84"];
m6_33 [cluster="Humanizer.RomanNumeralExtensions.ToRoman(int)", file="RomanNumeralExtensions.cs", label="input / pair.Value > 0", span="91-91"];
m6_35 [cluster="Humanizer.RomanNumeralExtensions.ToRoman(int)", file="RomanNumeralExtensions.cs", label="input -= pair.Value", span="94-94"];
m6_28 [cluster="Humanizer.RomanNumeralExtensions.ToRoman(int)", file="RomanNumeralExtensions.cs", label="int maxRomanNumeralLength = 15", span="82-82"];
m6_31 [cluster="Humanizer.RomanNumeralExtensions.ToRoman(int)", file="RomanNumeralExtensions.cs", label="var sb = new StringBuilder(maxRomanNumeralLength)", span="87-87"];
m6_30 [cluster="Humanizer.RomanNumeralExtensions.ToRoman(int)", file="RomanNumeralExtensions.cs", label="throw new ArgumentOutOfRangeException();", span="85-85"];
m6_32 [cluster="Humanizer.RomanNumeralExtensions.ToRoman(int)", file="RomanNumeralExtensions.cs", label=RomanNumerals, span="89-89"];
m6_34 [cluster="Humanizer.RomanNumeralExtensions.ToRoman(int)", file="RomanNumeralExtensions.cs", label="sb.Append(pair.Key)", span="93-93"];
m6_36 [cluster="Humanizer.RomanNumeralExtensions.ToRoman(int)", file="RomanNumeralExtensions.cs", label="return sb.ToString();", span="98-98"];
m6_37 [cluster="Humanizer.RomanNumeralExtensions.ToRoman(int)", file="RomanNumeralExtensions.cs", label="Exit Humanizer.RomanNumeralExtensions.ToRoman(int)", span="78-78"];
m9_0 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="ToQuantityExtensions.cs", label="Entry Humanizer.FixedLengthTruncator.Truncate(string, int, string)", span="7-7"];
m9_1 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", color=green, community=0, file="ToQuantityExtensions.cs", label="value == null", prediction=10, span="9-9"];
m9_2 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", color=green, community=0, file="ToQuantityExtensions.cs", label="return null;", prediction=10, span="10-10"];
m9_3 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", color=green, community=0, file="ToQuantityExtensions.cs", label="value.Length == 0", prediction=10, span="12-12"];
m9_5 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", color=green, community=0, file="ToQuantityExtensions.cs", label="truncationString == null || truncationString.Length > length", prediction=10, span="15-15"];
m9_6 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", color=green, community=0, file="ToQuantityExtensions.cs", label="return value.Substring(0, length);", prediction=10, span="16-16"];
m9_4 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", color=green, community=0, file="ToQuantityExtensions.cs", label="return value;", prediction=10, span="13-13"];
m9_7 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="ToQuantityExtensions.cs", label="return value.Length > length ? value.Substring(0, length - truncationString.Length) + truncationString : value;", span="18-18"];
m9_8 [cluster="string.Singularize(Humanizer.Plurality)", file="ToQuantityExtensions.cs", label="Entry string.Singularize(Humanizer.Plurality)", span="194-194"];
m9_10 [cluster="string.Format(string, object, object)", file="ToQuantityExtensions.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m9_9 [cluster="string.Substring(int, int)", file="ToQuantityExtensions.cs", label="Entry string.Substring(int, int)", span="0-0"];
m9_11 [cluster="int.ToWords()", file="ToQuantityExtensions.cs", label="Entry int.ToWords()", span="32-32"];
m10_9 [cluster="string.Substring(int, int)", file="ToQuantityTests.cs", label="Entry string.Substring(int, int)", span="0-0"];
m10_0 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="ToQuantityTests.cs", label="Entry Humanizer.FixedLengthTruncator.Truncate(string, int, string)", span="7-7"];
m10_1 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="ToQuantityTests.cs", label="value == null", span="9-9"];
m10_3 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="ToQuantityTests.cs", label="value.Length == 0", span="12-12"];
m10_4 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="ToQuantityTests.cs", label="return value;", span="13-13"];
m10_5 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="ToQuantityTests.cs", label="truncationString == null || truncationString.Length > length", span="15-15"];
m10_6 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="ToQuantityTests.cs", label="return value.Substring(0, length);", span="16-16"];
m10_7 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="ToQuantityTests.cs", label="return value.Length > length ? value.Substring(0, length - truncationString.Length) + truncationString : value;", span="18-18"];
m10_2 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="ToQuantityTests.cs", label="return null;", span="10-10"];
m10_8 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="ToQuantityTests.cs", label="Exit Humanizer.FixedLengthTruncator.Truncate(string, int, string)", span="7-7"];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_0 -> m1_4  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_0 -> m1_15  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_0 -> m1_16  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_7 -> m1_9  [color=darkseagreen4, key=1, label=divided, style=dashed];
m1_12 -> m1_15  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_12 -> m1_16  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_5 -> m1_25  [color=darkseagreen4, key=1, label=word, style=dashed];
m1_6 -> m1_9  [color=darkseagreen4, key=1, label=m, style=dashed];
m1_10 -> m1_25  [color=darkseagreen4, key=1, label=word, style=dashed];
m1_11 -> m1_25  [color=darkseagreen4, key=1, label=word, style=dashed];
m1_14 -> m1_25  [color=darkseagreen4, key=1, label=word, style=dashed];
m1_30 -> m1_41  [color=darkseagreen4, key=1, label=word, style=dashed];
m1_30 -> m1_32  [color=darkseagreen4, key=1, label=word, style=dashed];
m1_30 -> m1_33  [color=darkseagreen4, key=1, label=word, style=dashed];
m1_30 -> m1_34  [color=darkseagreen4, key=1, label=word, style=dashed];
m1_30 -> m1_35  [color=darkseagreen4, key=1, label=word, style=dashed];
m1_31 -> m1_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_41 -> m1_41  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, string>", style=dashed];
m1_43 -> m1_4  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter", style=dashed];
m1_44 -> m1_41  [color=darkseagreen4, key=1, label=word, style=dashed];
m4_4 -> m4_11  [color=green, key=1, label=string, style=dashed];
m4_4 -> m4_12  [color=green, key=1, label=int, style=dashed];
m4_4 -> m4_14  [color=green, key=1, label=string, style=dashed];
m6_10 -> m6_13  [color=darkseagreen4, key=1, label=digit, style=dashed];
m6_10 -> m6_15  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_7 -> m6_17  [color=green, key=1, label=total, style=dashed];
m6_16 -> m6_17  [color=darkseagreen4, key=1, label=total, style=dashed];
m6_15 -> m6_15  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_25 -> m6_29  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_25 -> m6_33  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_33 -> m6_33  [color=darkseagreen4, key=1, label=pair, style=dashed];
m6_31 -> m6_34  [color=darkseagreen4, key=1, label=sb, style=dashed];
m6_31 -> m6_36  [color=darkseagreen4, key=1, label=sb, style=dashed];
m6_34 -> m6_34  [color=darkseagreen4, key=1, label=pair, style=dashed];
m9_0 -> m9_2  [color=green, key=1, label="Humanizer.ShowQuantityAs", style=dashed];
m9_0 -> m9_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_0 -> m9_5  [color=darkseagreen4, key=1, label=int, style=dashed];
m9_0 -> m9_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_0 -> m9_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_0 -> m9_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_1 -> m9_3  [color=green, key=1, label=transformedInput, style=dashed];
m9_1 -> m9_5  [color=green, key=1, label=transformedInput, style=dashed];
m9_1 -> m9_6  [color=green, key=1, label=transformedInput, style=dashed];
m10_0 -> m10_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_0 -> m10_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_0 -> m10_5  [color=darkseagreen4, key=1, label=int, style=dashed];
m10_0 -> m10_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_0 -> m10_7  [color=darkseagreen4, key=1, label=string, style=dashed];
}
