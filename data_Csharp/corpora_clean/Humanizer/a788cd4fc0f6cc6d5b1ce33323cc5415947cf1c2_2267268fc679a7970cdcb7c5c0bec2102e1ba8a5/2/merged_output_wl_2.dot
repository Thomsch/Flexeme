digraph  {
m0_15 [cluster="System.Globalization.TextInfo.ToLower(string)", file="CasingExtensions.cs", label="Entry System.Globalization.TextInfo.ToLower(string)", span="0-0"];
m0_14 [cluster="System.Globalization.TextInfo.ToTitleCase(string)", file="CasingExtensions.cs", label="Entry System.Globalization.TextInfo.ToTitleCase(string)", span="0-0"];
m0_19 [cluster="string.Concat(string, string)", file="CasingExtensions.cs", label="Entry string.Concat(string, string)", span="0-0"];
m0_0 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="CasingExtensions.cs", label="Entry Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", span="16-16"];
m0_1 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="CasingExtensions.cs", label=casing, span="18-18"];
m0_3 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="CasingExtensions.cs", label="return CultureInfo.CurrentCulture.TextInfo.ToTitleCase(input);", span="21-21"];
m0_5 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="CasingExtensions.cs", label="return CultureInfo.CurrentCulture.TextInfo.ToLower(input);", span="24-24"];
m0_7 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="CasingExtensions.cs", label="return input.ToUpper();", span="27-27"];
m0_9 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="CasingExtensions.cs", label="input.Length >= 1", span="30-30"];
m0_10 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="CasingExtensions.cs", label="return String.Concat(input.Substring(0, 1).ToUpper(), input.Substring(1));", span="31-31"];
m0_11 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="CasingExtensions.cs", label="return input.ToUpper();", span="33-33"];
m0_2 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="CasingExtensions.cs", label="LetterCasing.Title", span="20-20"];
m0_4 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", color=red, community=0, file="CasingExtensions.cs", label="0: LetterCasing.Lower", span="23-23"];
m0_6 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="CasingExtensions.cs", label="LetterCasing.AllCaps", span="26-26"];
m0_8 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="CasingExtensions.cs", label="LetterCasing.Sentence", span="29-29"];
m0_12 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="CasingExtensions.cs", label="throw new ArgumentOutOfRangeException(''casing'');", span="36-36"];
m0_13 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="CasingExtensions.cs", label="Exit Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", span="16-16"];
m0_16 [cluster="string.ToUpper()", file="CasingExtensions.cs", label="Entry string.ToUpper()", span="0-0"];
m0_17 [cluster="string.Substring(int, int)", file="CasingExtensions.cs", label="Entry string.Substring(int, int)", span="0-0"];
m0_20 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="CasingExtensions.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m0_18 [cluster="string.Substring(int)", file="CasingExtensions.cs", label="Entry string.Substring(int)", span="0-0"];
m1_11 [cluster="Humanizer.Tests.CasingTests.ApplyCaseAllCaps(string, string)", file="CasingTests.cs", label="Entry Humanizer.Tests.CasingTests.ApplyCaseAllCaps(string, string)", span="40-40"];
m1_12 [cluster="Humanizer.Tests.CasingTests.ApplyCaseAllCaps(string, string)", file="CasingTests.cs", label="Assert.Equal(expectedOutput, input.ApplyCase(LetterCasing.AllCaps))", span="42-42"];
m1_13 [cluster="Humanizer.Tests.CasingTests.ApplyCaseAllCaps(string, string)", file="CasingTests.cs", label="Exit Humanizer.Tests.CasingTests.ApplyCaseAllCaps(string, string)", span="40-40"];
m1_3 [cluster="string.ApplyCase(Humanizer.LetterCasing)", file="CasingTests.cs", label="Entry string.ApplyCase(Humanizer.LetterCasing)", span="16-16"];
m1_8 [cluster="Humanizer.Tests.CasingTests.ApplyCaseSentence(string, string)", file="CasingTests.cs", label="Entry Humanizer.Tests.CasingTests.ApplyCaseSentence(string, string)", span="31-31"];
m1_9 [cluster="Humanizer.Tests.CasingTests.ApplyCaseSentence(string, string)", file="CasingTests.cs", label="Assert.Equal(expectedOutput, input.ApplyCase(LetterCasing.Sentence))", span="33-33"];
m1_10 [cluster="Humanizer.Tests.CasingTests.ApplyCaseSentence(string, string)", file="CasingTests.cs", label="Exit Humanizer.Tests.CasingTests.ApplyCaseSentence(string, string)", span="31-31"];
m1_0 [cluster="Humanizer.Tests.CasingTests.ApplyCaseTitle(string, string)", file="CasingTests.cs", label="Entry Humanizer.Tests.CasingTests.ApplyCaseTitle(string, string)", span="12-12"];
m1_1 [cluster="Humanizer.Tests.CasingTests.ApplyCaseTitle(string, string)", file="CasingTests.cs", label="Assert.Equal(expectedOutput, input.ApplyCase(LetterCasing.Title))", span="14-14"];
m1_2 [cluster="Humanizer.Tests.CasingTests.ApplyCaseTitle(string, string)", file="CasingTests.cs", label="Exit Humanizer.Tests.CasingTests.ApplyCaseTitle(string, string)", span="12-12"];
m1_4 [cluster="Unk.Equal", file="CasingTests.cs", label="Entry Unk.Equal", span=""];
m1_5 [cluster="Humanizer.Tests.CasingTests.ApplyCaseLower(string, string)", file="CasingTests.cs", label="Entry Humanizer.Tests.CasingTests.ApplyCaseLower(string, string)", span="22-22"];
m1_6 [cluster="Humanizer.Tests.CasingTests.ApplyCaseLower(string, string)", color=red, community=0, file="CasingTests.cs", label="0: Assert.Equal(expectedOutput, input.ApplyCase(LetterCasing.Lower))", span="24-24"];
m1_7 [cluster="Humanizer.Tests.CasingTests.ApplyCaseLower(string, string)", file="CasingTests.cs", label="Exit Humanizer.Tests.CasingTests.ApplyCaseLower(string, string)", span="22-22"];
m2_4 [cluster="Unk.Equal", file="EnumHumanizeTests.cs", label="Entry Unk.Equal", span=""];
m2_15 [cluster="Humanizer.Tests.EnumHumanizeTests.AllCapitalMembersAreReturnedAsIs()", file="EnumHumanizeTests.cs", label="Entry Humanizer.Tests.EnumHumanizeTests.AllCapitalMembersAreReturnedAsIs()", span="35-35"];
m2_16 [cluster="Humanizer.Tests.EnumHumanizeTests.AllCapitalMembersAreReturnedAsIs()", file="EnumHumanizeTests.cs", label="Assert.Equal(EnumUnderTest.ALLCAPITALS.ToString(), EnumUnderTest.ALLCAPITALS.Humanize())", span="37-37"];
m2_17 [cluster="Humanizer.Tests.EnumHumanizeTests.AllCapitalMembersAreReturnedAsIs()", file="EnumHumanizeTests.cs", label="Exit Humanizer.Tests.EnumHumanizeTests.AllCapitalMembersAreReturnedAsIs()", span="35-35"];
m2_18 [cluster="System.Enum.ToString()", file="EnumHumanizeTests.cs", label="Entry System.Enum.ToString()", span="0-0"];
m2_12 [cluster="Humanizer.Tests.EnumHumanizeTests.CanApplyLowerCaseCasingOnEnumHumanization()", file="EnumHumanizeTests.cs", label="Entry Humanizer.Tests.EnumHumanizeTests.CanApplyLowerCaseCasingOnEnumHumanization()", span="27-27"];
m2_13 [cluster="Humanizer.Tests.EnumHumanizeTests.CanApplyLowerCaseCasingOnEnumHumanization()", color=green, community=0, file="EnumHumanizeTests.cs", label="0: Assert.Equal(\r\n                EnumTestsResources.MemberWithoutDescriptionAttributeLowerCase, \r\n                EnumUnderTest.MemberWithoutDescriptionAttribute.Humanize(LetterCasing.Lower))", span="29-31"];
m2_14 [cluster="Humanizer.Tests.EnumHumanizeTests.CanApplyLowerCaseCasingOnEnumHumanization()", file="EnumHumanizeTests.cs", label="Exit Humanizer.Tests.EnumHumanizeTests.CanApplyLowerCaseCasingOnEnumHumanization()", span="27-27"];
m2_8 [cluster="Humanizer.Tests.EnumHumanizeTests.CanApplyTitleCasingOnEnumHumanization()", file="EnumHumanizeTests.cs", label="Entry Humanizer.Tests.EnumHumanizeTests.CanApplyTitleCasingOnEnumHumanization()", span="19-19"];
m2_9 [cluster="Humanizer.Tests.EnumHumanizeTests.CanApplyTitleCasingOnEnumHumanization()", file="EnumHumanizeTests.cs", label="Assert.Equal(\r\n                EnumTestsResources.MemberWithoutDescriptionAttributeTitle, \r\n                EnumUnderTest.MemberWithoutDescriptionAttribute.Humanize(LetterCasing.Title))", span="21-23"];
m2_10 [cluster="Humanizer.Tests.EnumHumanizeTests.CanApplyTitleCasingOnEnumHumanization()", file="EnumHumanizeTests.cs", label="Exit Humanizer.Tests.EnumHumanizeTests.CanApplyTitleCasingOnEnumHumanization()", span="19-19"];
m2_5 [cluster="Humanizer.Tests.EnumHumanizeTests.CanHumanizeMembersWithoutDescriptionAttribute()", file="EnumHumanizeTests.cs", label="Entry Humanizer.Tests.EnumHumanizeTests.CanHumanizeMembersWithoutDescriptionAttribute()", span="13-13"];
m2_6 [cluster="Humanizer.Tests.EnumHumanizeTests.CanHumanizeMembersWithoutDescriptionAttribute()", file="EnumHumanizeTests.cs", label="Assert.Equal(EnumTestsResources.MemberWithoutDescriptionAttributeSentence, EnumUnderTest.MemberWithoutDescriptionAttribute.Humanize())", span="15-15"];
m2_3 [cluster="Humanizer.StringDehumanizeExtensions.Dehumanize(string)", file="EnumHumanizeTests.cs", label="Exit Humanizer.StringDehumanizeExtensions.Dehumanize(string)", span="11-11"];
m2_0 [cluster="Humanizer.StringDehumanizeExtensions.Dehumanize(string)", file="EnumHumanizeTests.cs", label="Entry Humanizer.StringDehumanizeExtensions.Dehumanize(string)", span="11-11"];
m2_1 [cluster="Humanizer.StringDehumanizeExtensions.Dehumanize(string)", file="EnumHumanizeTests.cs", label="var titlizedWords = \r\n                (from word in input.Split(' ')\r\n                select word.Humanize(LetterCasing.Title))", span="13-15"];
m2_2 [cluster="Humanizer.StringDehumanizeExtensions.Dehumanize(string)", file="EnumHumanizeTests.cs", label="return string.Join('''', titlizedWords);", span="17-17"];
m2_11 [cluster="System.Enum.Humanize(Humanizer.LetterCasing)", file="EnumHumanizeTests.cs", label="Entry System.Enum.Humanize(Humanizer.LetterCasing)", span="37-37"];
m2_7 [cluster="Humanizer.Tests.EnumHumanizeTests.CanHumanizeMembersWithoutDescriptionAttribute()", file="EnumHumanizeTests.cs", label="Exit Humanizer.Tests.EnumHumanizeTests.CanHumanizeMembersWithoutDescriptionAttribute()", span="13-13"];
m4_5 [cluster="ApiApprover.PublicApiGenerator.CreatePublicApiForAssembly(System.Reflection.Assembly)", file="PublicApiApprovalTest.cs", label="Entry ApiApprover.PublicApiGenerator.CreatePublicApiForAssembly(System.Reflection.Assembly)", span="17-17"];
m4_0 [cluster="Humanizer.Tests.ApiApprover.PublicApiApprovalTest.approve_public_api()", file="PublicApiApprovalTest.cs", label="Entry Humanizer.Tests.ApiApprover.PublicApiApprovalTest.approve_public_api()", span="11-11"];
m4_1 [cluster="Humanizer.Tests.ApiApprover.PublicApiApprovalTest.approve_public_api()", color=green, community=0, file="PublicApiApprovalTest.cs", label="0: var assembly = typeof(StringHumanizeExtensions).Assembly", span="14-14"];
m4_2 [cluster="Humanizer.Tests.ApiApprover.PublicApiApprovalTest.approve_public_api()", color=green, community=0, file="PublicApiApprovalTest.cs", label="0: var publicApi = PublicApiGenerator.CreatePublicApiForAssembly(assembly)", span="17-17"];
m4_3 [cluster="Humanizer.Tests.ApiApprover.PublicApiApprovalTest.approve_public_api()", color=green, community=0, file="PublicApiApprovalTest.cs", label="0: Approvals.Verify(publicApi)", span="20-20"];
m4_4 [cluster="Humanizer.Tests.ApiApprover.PublicApiApprovalTest.approve_public_api()", file="PublicApiApprovalTest.cs", label="Exit Humanizer.Tests.ApiApprover.PublicApiApprovalTest.approve_public_api()", span="11-11"];
m4_6 [cluster="Unk.Verify", file="PublicApiApprovalTest.cs", label="Entry Unk.Verify", span=""];
m6_15 [cluster="System.DateTime.Add(System.TimeSpan)", file="StringHumanizeExtensions.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m6_49 [cluster="System.Math.Abs(int)", file="StringHumanizeExtensions.cs", label="Entry System.Math.Abs(int)", span="0-0"];
m6_6 [cluster="Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan, System.Globalization.CultureInfo)", file="StringHumanizeExtensions.cs", label="Entry Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan, System.Globalization.CultureInfo)", span="20-20"];
m6_7 [cluster="Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan, System.Globalization.CultureInfo)", file="StringHumanizeExtensions.cs", label="var utcNow = new DateTime(2013, 6, 20, 9, 58, 22, DateTimeKind.Utc)", span="22-22"];
m6_9 [cluster="Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan, System.Globalization.CultureInfo)", file="StringHumanizeExtensions.cs", label="VerifyWithDate(expectedString, deltaFromNow, culture, now, utcNow)", span="25-25"];
m6_8 [cluster="Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan, System.Globalization.CultureInfo)", file="StringHumanizeExtensions.cs", label="var now = new DateTime(2013, 6, 20, 11, 58, 22, DateTimeKind.Local)", span="23-23"];
m6_10 [cluster="Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan, System.Globalization.CultureInfo)", file="StringHumanizeExtensions.cs", label="Exit Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan, System.Globalization.CultureInfo)", span="20-20"];
m6_5 [cluster="Humanizer.Tests.DateHumanize.VerifyWithDate(string, System.TimeSpan, System.Globalization.CultureInfo, System.DateTime, System.DateTime)", file="StringHumanizeExtensions.cs", label="Entry Humanizer.Tests.DateHumanize.VerifyWithDate(string, System.TimeSpan, System.Globalization.CultureInfo, System.DateTime, System.DateTime)", span="28-28"];
m6_12 [cluster="Humanizer.Tests.DateHumanize.VerifyWithDate(string, System.TimeSpan, System.Globalization.CultureInfo, System.DateTime, System.DateTime)", file="StringHumanizeExtensions.cs", label="Assert.Equal(expectedString, baseDateUtc.Add(deltaFromBase).Humanize(utcDate: true, dateToCompareAgainst: baseDateUtc, culture: culture))", span="30-30"];
m6_13 [cluster="Humanizer.Tests.DateHumanize.VerifyWithDate(string, System.TimeSpan, System.Globalization.CultureInfo, System.DateTime, System.DateTime)", file="StringHumanizeExtensions.cs", label="Assert.Equal(expectedString, baseDate.Add(deltaFromBase).Humanize(false, baseDate, culture: culture))", span="31-31"];
m6_14 [cluster="Humanizer.Tests.DateHumanize.VerifyWithDate(string, System.TimeSpan, System.Globalization.CultureInfo, System.DateTime, System.DateTime)", file="StringHumanizeExtensions.cs", label="Exit Humanizer.Tests.DateHumanize.VerifyWithDate(string, System.TimeSpan, System.Globalization.CultureInfo, System.DateTime, System.DateTime)", span="28-28"];
m6_47 [cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy()", file="StringHumanizeExtensions.cs", label="Entry Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy()", span="8-8"];
m6_48 [cluster="System.TimeSpan.TimeSpan()", file="StringHumanizeExtensions.cs", label="Entry System.TimeSpan.TimeSpan()", span="0-0"];
m6_52 [cluster="System.TimeSpan.FromMinutes(double)", file="StringHumanizeExtensions.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m6_50 [cluster="System.TimeSpan.FromMilliseconds(double)", file="StringHumanizeExtensions.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m6_17 [cluster="Unk.Equal", file="StringHumanizeExtensions.cs", label="Entry Unk.Equal", span=""];
m6_51 [cluster="System.TimeSpan.FromSeconds(double)", file="StringHumanizeExtensions.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m6_0 [cluster="Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan, System.Globalization.CultureInfo)", file="StringHumanizeExtensions.cs", label="Entry Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan, System.Globalization.CultureInfo)", span="11-11"];
m6_1 [cluster="Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan, System.Globalization.CultureInfo)", file="StringHumanizeExtensions.cs", label="var utcNow = DateTime.UtcNow", span="13-13"];
m6_3 [cluster="Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan, System.Globalization.CultureInfo)", file="StringHumanizeExtensions.cs", label="VerifyWithDate(expectedString, deltaFromNow, culture, localNow, utcNow)", span="17-17"];
m6_2 [cluster="Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan, System.Globalization.CultureInfo)", file="StringHumanizeExtensions.cs", label="var localNow = DateTime.Now", span="14-14"];
m6_4 [cluster="Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan, System.Globalization.CultureInfo)", file="StringHumanizeExtensions.cs", label="Exit Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan, System.Globalization.CultureInfo)", span="11-11"];
m6_11 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="StringHumanizeExtensions.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m6_16 [cluster="System.DateTime.Humanize(bool, System.DateTime?, System.Globalization.CultureInfo)", file="StringHumanizeExtensions.cs", label="Entry System.DateTime.Humanize(bool, System.DateTime?, System.Globalization.CultureInfo)", span="19-19"];
m6_18 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs", label="Entry Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", span="34-34"];
m6_19 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs", label="precision.HasValue", span="36-36"];
m6_20 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs", label="Configurator.DateTimeHumanizeStrategy = new PrecisionDateTimeHumanizeStrategy(precision.Value)", span="37-37"];
m6_23 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs", label="unit = Math.Abs(unit)", span="42-42"];
m6_24 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs", label="tense == Tense.Past", span="44-44"];
m6_26 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs", label=timeUnit, span="47-47"];
m6_41 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", color=red, community=0, file="StringHumanizeExtensions.cs", label="0: baseDate == null", span="72-72"];
m6_42 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", color=red, community=0, file="StringHumanizeExtensions.cs", label="0: VerifyWithCurrentDate(expectedString, deltaFromNow, culture)", span="74-74"];
m6_43 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", color=red, community=0, file="StringHumanizeExtensions.cs", label="0: VerifyWithDateInjection(expectedString, deltaFromNow, culture)", span="75-75"];
m6_44 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs", label="VerifyWithDate(expectedString, deltaFromNow, culture, baseDate.Value, baseDateUtc.Value)", span="79-79"];
m6_21 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs", label="Configurator.DateTimeHumanizeStrategy = new DefaultDateTimeHumanizeStrategy()", span="39-39"];
m6_22 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs", label="var deltaFromNow = new TimeSpan()", span="41-41"];
m6_25 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs", label="unit = -unit", span="45-45"];
m6_28 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs", label="deltaFromNow = TimeSpan.FromMilliseconds(unit)", span="50-50"];
m6_30 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs", label="deltaFromNow = TimeSpan.FromSeconds(unit)", span="53-53"];
m6_32 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs", label="deltaFromNow = TimeSpan.FromMinutes(unit)", span="56-56"];
m6_34 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs", label="deltaFromNow = TimeSpan.FromHours(unit)", span="59-59"];
m6_36 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs", label="deltaFromNow = TimeSpan.FromDays(unit)", span="62-62"];
m6_38 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", color=red, community=0, file="StringHumanizeExtensions.cs", label="0: deltaFromNow = TimeSpan.FromDays(unit*31)", span="65-65"];
m6_40 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", color=red, community=0, file="StringHumanizeExtensions.cs", label="0: deltaFromNow = TimeSpan.FromDays(unit*366)", span="68-68"];
m6_27 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs", label="TimeUnit.Millisecond", span="49-49"];
m6_29 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs", label="TimeUnit.Second", span="52-52"];
m6_31 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs", label="TimeUnit.Minute", span="55-55"];
m6_33 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs", label="TimeUnit.Hour", span="58-58"];
m6_35 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs", label="TimeUnit.Day", span="61-61"];
m6_37 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs", label="TimeUnit.Month", span="64-64"];
m6_39 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", color=red, community=0, file="StringHumanizeExtensions.cs", label="0: TimeUnit.Year", span="67-67"];
m6_45 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs", label="Exit Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", span="34-34"];
m6_53 [cluster="System.TimeSpan.FromHours(double)", file="StringHumanizeExtensions.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m6_54 [cluster="System.TimeSpan.FromDays(double)", file="StringHumanizeExtensions.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m6_46 [cluster="Humanizer.DateTimeHumanizeStrategy.PrecisionDateTimeHumanizeStrategy.PrecisionDateTimeHumanizeStrategy(double)", file="StringHumanizeExtensions.cs", label="Entry Humanizer.DateTimeHumanizeStrategy.PrecisionDateTimeHumanizeStrategy.PrecisionDateTimeHumanizeStrategy(double)", span="16-16"];
m7_3 [cluster="string.Humanize()", file="StringHumanizeTests.cs", label="Entry string.Humanize()", span="42-42"];
m7_49 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", span="123-123"];
m7_50 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''Can Return Title Case'',\r\n                ''Can_return_title_Case''.Humanize(LetterCasing.Title))", span="125-127"];
m7_51 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", span="123-123"];
m7_61 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoSentenceCase()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoSentenceCase()", span="155-155"];
m7_62 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoSentenceCase()", color=green, community=0, file="StringHumanizeTests.cs", label="0: Assert.Equal(\r\n                ''Can return sentence case'',\r\n                ''CanReturnSentenceCase''.Humanize(LetterCasing.Sentence))", span="157-159"];
m7_63 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoSentenceCase()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoSentenceCase()", span="155-155"];
m7_38 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheStart()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheStart()", span="99-99"];
m7_39 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheStart()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''1 HTML'',\r\n                ''1HTML''.Humanize())", span="101-103"];
m7_40 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheStart()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheStart()", span="99-99"];
m7_52 [cluster="Humanizer.Tests.StringHumanizeTests.TitleHumanizationHonorsAllCaps()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.TitleHumanizationHonorsAllCaps()", span="131-131"];
m7_53 [cluster="Humanizer.Tests.StringHumanizeTests.TitleHumanizationHonorsAllCaps()", color=green, community=0, file="StringHumanizeTests.cs", label="0: Assert.Equal(\r\n                ''Title Humanization Honors ALLCAPS'',\r\n                ''Title_humanization_Honors_ALLCAPS''.Humanize(LetterCasing.Title))", span="133-135"];
m7_54 [cluster="Humanizer.Tests.StringHumanizeTests.TitleHumanizationHonorsAllCaps()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.TitleHumanizationHonorsAllCaps()", span="131-131"];
m7_70 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", span="179-179"];
m7_71 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", color=red, community=0, file="StringHumanizeTests.cs", label="0: Assert.Equal(\r\n                ''lowercase'',\r\n                ''LOWERCASE''.Humanize(LetterCasing.Lower))", span="181-183"];
m7_72 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", span="179-179"];
m7_4 [cluster="Unk.Equal", file="StringHumanizeTests.cs", label="Entry Unk.Equal", span=""];
m7_26 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheMiddle()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheMiddle()", span="67-67"];
m7_27 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheMiddle()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''The HTML language'',\r\n                ''TheHTMLLanguage''.Humanize())", span="69-71"];
m7_28 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheMiddle()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheMiddle()", span="67-67"];
m7_55 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCase()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCase()", span="139-139"];
m7_56 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCase()", color=red, community=0, file="StringHumanizeTests.cs", label="0: Assert.Equal(\r\n                ''can return lower case'',\r\n                ''CanReturnLowerCase''.Humanize(LetterCasing.Lower))", span="141-143"];
m7_57 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCase()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCase()", span="139-139"];
m7_5 [cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", span="15-15"];
m7_6 [cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''When I use an input a here'',\r\n                ''WhenIUseAnInputAHere''.Humanize())", span="17-19"];
m7_7 [cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", span="15-15"];
m7_8 [cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringStartsWithANumber_ThenNumberIsDealtWithLikeAWord()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.WhenInputStringStartsWithANumber_ThenNumberIsDealtWithLikeAWord()", span="23-23"];
m7_9 [cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringStartsWithANumber_ThenNumberIsDealtWithLikeAWord()", file="StringHumanizeTests.cs", label="Assert.Equal(''10 is in the begining'', ''10IsInTheBegining''.Humanize())", span="25-25"];
m7_10 [cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringStartsWithANumber_ThenNumberIsDealtWithLikeAWord()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.WhenInputStringStartsWithANumber_ThenNumberIsDealtWithLikeAWord()", span="23-23"];
m7_14 [cluster="Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringIsTurnedIntoSentence()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringIsTurnedIntoSentence()", span="35-35"];
m7_15 [cluster="Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringIsTurnedIntoSentence()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''Underscored input string is turned into sentence'',\r\n                ''Underscored_input_string_is_turned_into_sentence''.Humanize())", span="37-39"];
m7_16 [cluster="Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringIsTurnedIntoSentence()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringIsTurnedIntoSentence()", span="35-35"];
m7_48 [cluster="string.Humanize(params Humanizer.IStringTransformer[])", file="StringHumanizeTests.cs", label="Entry string.Humanize(params Humanizer.IStringTransformer[])", span="72-72"];
m7_20 [cluster="Humanizer.Tests.StringHumanizeTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", span="51-51"];
m7_21 [cluster="Humanizer.Tests.StringHumanizeTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''X is first word in the sentence'',\r\n                ''XIsFirstWordInTheSentence''.Humanize())", span="53-55"];
m7_22 [cluster="Humanizer.Tests.StringHumanizeTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", span="51-51"];
m7_23 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreLeftIntact()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.AcronymsAreLeftIntact()", span="59-59"];
m7_24 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreLeftIntact()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''HTML'',\r\n                ''HTML''.Humanize())", span="61-63"];
m7_25 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreLeftIntact()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.AcronymsAreLeftIntact()", span="59-59"];
m7_64 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoSentenceCaseWithTransformers()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoSentenceCaseWithTransformers()", span="163-163"];
m7_65 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoSentenceCaseWithTransformers()", color=red, community=1, file="StringHumanizeTests.cs", label="0: Assert.Equal(\r\n                ''Can return sentence case'',\r\n                ''CanReturnSentenceCase''.Humanize(To.SentenceCase))", span="165-167"];
m7_66 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoSentenceCaseWithTransformers()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoSentenceCaseWithTransformers()", span="163-163"];
m7_79 [cluster="Humanizer.Tests.StringHumanizeTests.CanTurnIntoUpperCasewhenUsingUnderscores()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.CanTurnIntoUpperCasewhenUsingUnderscores()", span="203-203"];
m7_80 [cluster="Humanizer.Tests.StringHumanizeTests.CanTurnIntoUpperCasewhenUsingUnderscores()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''CAN HUMANIZE INTO UPPER CASE'',\r\n                ''Can_Humanize_into_Upper_case''.Humanize(LetterCasing.AllCaps))", span="205-207"];
m7_81 [cluster="Humanizer.Tests.StringHumanizeTests.CanTurnIntoUpperCasewhenUsingUnderscores()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.CanTurnIntoUpperCasewhenUsingUnderscores()", span="203-203"];
m7_76 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoUpperCaseWithTransformers()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoUpperCaseWithTransformers()", span="195-195"];
m7_77 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoUpperCaseWithTransformers()", color=red, community=1, file="StringHumanizeTests.cs", label="0: Assert.Equal(\r\n                ''CAN HUMANIZE INTO UPPER CASE'',\r\n                ''CanHumanizeIntoUpperCase''.Humanize(To.UpperCase))", span="197-199"];
m7_78 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoUpperCaseWithTransformers()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoUpperCaseWithTransformers()", span="195-195"];
m7_32 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheEnd()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheEnd()", span="83-83"];
m7_33 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheEnd()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''The language is HTML'',\r\n                ''TheLanguageIsHTML''.Humanize())", span="85-87"];
m7_34 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheEnd()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheEnd()", span="83-83"];
m7_44 [cluster="string.Humanize(Humanizer.LetterCasing)", file="StringHumanizeTests.cs", label="Entry string.Humanize(Humanizer.LetterCasing)", span="60-60"];
m7_58 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCaseWithTransformers()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCaseWithTransformers()", span="147-147"];
m7_59 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCaseWithTransformers()", color=red, community=1, file="StringHumanizeTests.cs", label="0: Assert.Equal(\r\n                ''can return lower case'',\r\n                ''CanReturnLowerCase''.Humanize(To.LowerCase))", span="149-151"];
m7_60 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCaseWithTransformers()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCaseWithTransformers()", span="147-147"];
m7_45 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscoresWithTransformers()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscoresWithTransformers()", span="115-115"];
m7_46 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscoresWithTransformers()", color=red, community=1, file="StringHumanizeTests.cs", label="0: Assert.Equal(\r\n                ''Can Return Title Case'',\r\n                ''CanReturnTitleCase''.Humanize(To.TitleCase))", span="117-119"];
m7_47 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscoresWithTransformers()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscoresWithTransformers()", span="115-115"];
m7_17 [cluster="Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringPreservesCasing()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringPreservesCasing()", span="43-43"];
m7_18 [cluster="Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringPreservesCasing()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''Underscored input String is turned INTO sentence'',\r\n                ''Underscored_input_String_is_turned_INTO_sentence''.Humanize())", span="45-47"];
m7_19 [cluster="Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringPreservesCasing()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringPreservesCasing()", span="43-43"];
m7_73 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoUpperCase()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoUpperCase()", span="187-187"];
m7_74 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoUpperCase()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''CAN HUMANIZE INTO UPPER CASE'',\r\n                ''CanHumanizeIntoUpperCase''.Humanize(LetterCasing.AllCaps))", span="189-191"];
m7_75 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoUpperCase()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoUpperCase()", span="187-187"];
m7_11 [cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", span="29-29"];
m7_12 [cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", file="StringHumanizeTests.cs", label="Assert.Equal(''Number is at the end 100'', ''NumberIsAtTheEnd100''.Humanize())", span="31-31"];
m7_13 [cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", span="29-29"];
m7_35 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheEnd()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheEnd()", span="91-91"];
m7_36 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheEnd()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''HTML 5'',\r\n                ''HTML5''.Humanize())", span="93-95"];
m7_37 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheEnd()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheEnd()", span="91-91"];
m7_82 [cluster="Humanizer.Tests.StringHumanizeTests.CanTurnIntoUpperCasewhenUsingUnderscoresWithTransformers()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.CanTurnIntoUpperCasewhenUsingUnderscoresWithTransformers()", span="211-211"];
m7_83 [cluster="Humanizer.Tests.StringHumanizeTests.CanTurnIntoUpperCasewhenUsingUnderscoresWithTransformers()", color=red, community=1, file="StringHumanizeTests.cs", label="0: Assert.Equal(\r\n                ''CAN HUMANIZE INTO UPPER CASE'',\r\n                ''Can_Humanize_into_Upper_case''.Humanize(To.UpperCase))", span="213-215"];
m7_84 [cluster="Humanizer.Tests.StringHumanizeTests.CanTurnIntoUpperCasewhenUsingUnderscoresWithTransformers()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.CanTurnIntoUpperCasewhenUsingUnderscoresWithTransformers()", span="211-211"];
m7_41 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", span="107-107"];
m7_42 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''Can Return Title Case'',\r\n                ''CanReturnTitleCase''.Humanize(LetterCasing.Title))", span="109-111"];
m7_43 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", span="107-107"];
m7_67 [cluster="Humanizer.Tests.StringHumanizeTests.SentenceCasingWorksOnEmptyStrings()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.SentenceCasingWorksOnEmptyStrings()", span="171-171"];
m7_68 [cluster="Humanizer.Tests.StringHumanizeTests.SentenceCasingWorksOnEmptyStrings()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                '''',\r\n                ''''.Humanize(LetterCasing.Sentence))", span="173-175"];
m7_69 [cluster="Humanizer.Tests.StringHumanizeTests.SentenceCasingWorksOnEmptyStrings()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.SentenceCasingWorksOnEmptyStrings()", span="171-171"];
m7_29 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheStart()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheStart()", span="75-75"];
m7_30 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheStart()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''HTML is the language'',\r\n                ''HTMLIsTheLanguage''.Humanize())", span="77-79"];
m7_31 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheStart()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheStart()", span="75-75"];
m7_0 [cluster="Humanizer.Tests.StringHumanizeTests.PascalCaseInputStringIsTurnedIntoSentence()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.PascalCaseInputStringIsTurnedIntoSentence()", span="7-7"];
m7_1 [cluster="Humanizer.Tests.StringHumanizeTests.PascalCaseInputStringIsTurnedIntoSentence()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''Pascal case input string is turned into sentence'',\r\n                ''PascalCaseInputStringIsTurnedIntoSentence''.Humanize())", span="9-11"];
m7_2 [cluster="Humanizer.Tests.StringHumanizeTests.PascalCaseInputStringIsTurnedIntoSentence()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.PascalCaseInputStringIsTurnedIntoSentence()", span="7-7"];
m8_3 [cluster="System.Globalization.TextInfo.ToLower(string)", file="ToLowerCase.cs", label="Entry System.Globalization.TextInfo.ToLower(string)", span="0-0"];
m8_0 [cluster="Humanizer.ToLowerCase.Transform(string)", file="ToLowerCase.cs", label="Entry Humanizer.ToLowerCase.Transform(string)", span="6-6"];
m8_1 [cluster="Humanizer.ToLowerCase.Transform(string)", file="ToLowerCase.cs", label="return CultureInfo.CurrentCulture.TextInfo.ToLower(input);", span="8-8"];
m8_2 [cluster="Humanizer.ToLowerCase.Transform(string)", file="ToLowerCase.cs", label="Exit Humanizer.ToLowerCase.Transform(string)", span="6-6"];
m9_8 [cluster="string.Concat(string, string)", file="ToSentenceCase.cs", label="Entry string.Concat(string, string)", span="0-0"];
m9_0 [cluster="Humanizer.ToSentenceCase.Transform(string)", file="ToSentenceCase.cs", label="Entry Humanizer.ToSentenceCase.Transform(string)", span="6-6"];
m9_1 [cluster="Humanizer.ToSentenceCase.Transform(string)", file="ToSentenceCase.cs", label="input.Length >= 1", span="8-8"];
m9_2 [cluster="Humanizer.ToSentenceCase.Transform(string)", file="ToSentenceCase.cs", label="return String.Concat(input.Substring(0, 1).ToUpper(), input.Substring(1));", span="9-9"];
m9_3 [cluster="Humanizer.ToSentenceCase.Transform(string)", file="ToSentenceCase.cs", label="return input.ToUpper();", span="11-11"];
m9_4 [cluster="Humanizer.ToSentenceCase.Transform(string)", file="ToSentenceCase.cs", label="Exit Humanizer.ToSentenceCase.Transform(string)", span="6-6"];
m9_6 [cluster="string.ToUpper()", file="ToSentenceCase.cs", label="Entry string.ToUpper()", span="0-0"];
m9_5 [cluster="string.Substring(int, int)", file="ToSentenceCase.cs", label="Entry string.Substring(int, int)", span="0-0"];
m9_7 [cluster="string.Substring(int)", file="ToSentenceCase.cs", label="Entry string.Substring(int)", span="0-0"];
m10_0 [cluster="Humanizer.ToTitleCase.Transform(string)", file="ToTitleCase.cs", label="Entry Humanizer.ToTitleCase.Transform(string)", span="6-6"];
m10_1 [cluster="Humanizer.ToTitleCase.Transform(string)", file="ToTitleCase.cs", label="return CultureInfo.CurrentCulture.TextInfo.ToTitleCase(input);", span="8-8"];
m10_2 [cluster="Humanizer.ToTitleCase.Transform(string)", file="ToTitleCase.cs", label="Exit Humanizer.ToTitleCase.Transform(string)", span="6-6"];
m10_3 [cluster="System.Globalization.TextInfo.ToTitleCase(string)", file="ToTitleCase.cs", label="Entry System.Globalization.TextInfo.ToTitleCase(string)", span="0-0"];
m11_0 [cluster="Humanizer.ToUpperCase.Transform(string)", file="ToUpperCase.cs", label="Entry Humanizer.ToUpperCase.Transform(string)", span="4-4"];
m11_1 [cluster="Humanizer.ToUpperCase.Transform(string)", file="ToUpperCase.cs", label="return input.ToUpper();", span="6-6"];
m11_2 [cluster="Humanizer.ToUpperCase.Transform(string)", file="ToUpperCase.cs", label="Exit Humanizer.ToUpperCase.Transform(string)", span="4-4"];
m11_3 [cluster="string.ToUpper()", file="ToUpperCase.cs", label="Entry string.ToUpper()", span="0-0"];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_0 -> m0_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_0 -> m0_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_0 -> m0_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_0 -> m0_10  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_0 -> m0_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_4  [color=red, key=0, style=solid];
m0_1 -> m0_6  [key=0, style=solid];
m0_1 -> m0_8  [key=0, style=solid];
m0_1 -> m0_12  [key=0, style=solid];
m0_3 -> m0_13  [key=0, style=solid];
m0_3 -> m0_14  [key=2, style=dotted];
m0_5 -> m0_13  [key=0, style=solid];
m0_5 -> m0_15  [key=2, style=dotted];
m0_7 -> m0_13  [key=0, style=solid];
m0_7 -> m0_16  [key=2, style=dotted];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_11  [key=0, style=solid];
m0_10 -> m0_13  [key=0, style=solid];
m0_10 -> m0_17  [key=2, style=dotted];
m0_10 -> m0_16  [key=2, style=dotted];
m0_10 -> m0_18  [key=2, style=dotted];
m0_10 -> m0_19  [key=2, style=dotted];
m0_11 -> m0_13  [key=0, style=solid];
m0_11 -> m0_16  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_4 -> m0_5  [color=red, key=0, style=solid];
m0_6 -> m0_7  [key=0, style=solid];
m0_8 -> m0_9  [key=0, style=solid];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_20  [key=2, style=dotted];
m0_13 -> m0_0  [color=blue, key=0, style=bold];
m1_11 -> m1_12  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_3  [key=2, style=dotted];
m1_12 -> m1_4  [key=2, style=dotted];
m1_13 -> m1_11  [color=blue, key=0, style=bold];
m1_8 -> m1_9  [key=0, style=solid];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_3  [key=2, style=dotted];
m1_9 -> m1_4  [key=2, style=dotted];
m1_10 -> m1_8  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_1 -> m1_4  [key=2, style=dotted];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m1_5 -> m1_6  [color=red, key=0, style=solid];
m1_6 -> m1_7  [color=red, key=0, style=solid];
m1_6 -> m1_3  [color=red, key=2, style=dotted];
m1_6 -> m1_4  [color=red, key=2, style=dotted];
m1_7 -> m1_5  [color=blue, key=0, style=bold];
m2_15 -> m2_16  [key=0, style=solid];
m2_16 -> m2_4  [key=2, style=dotted];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_18  [key=2, style=dotted];
m2_16 -> m2_3  [key=2, style=dotted];
m2_17 -> m2_15  [color=blue, key=0, style=bold];
m2_12 -> m2_13  [color=green, key=0, style=solid];
m2_13 -> m2_14  [color=green, key=0, style=solid];
m2_13 -> m2_11  [color=green, key=2, style=dotted];
m2_13 -> m2_4  [color=green, key=2, style=dotted];
m2_14 -> m2_12  [color=blue, key=0, style=bold];
m2_8 -> m2_9  [key=0, style=solid];
m2_9 -> m2_11  [key=2, style=dotted];
m2_9 -> m2_4  [key=2, style=dotted];
m2_9 -> m2_10  [key=0, style=solid];
m2_10 -> m2_8  [color=blue, key=0, style=bold];
m2_5 -> m2_6  [key=0, style=solid];
m2_6 -> m2_4  [key=2, style=dotted];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_3  [key=2, style=dotted];
m2_3 -> m2_0  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_4  [key=2, style=dotted];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_1 -> m2_5  [key=2, style=dotted];
m2_1 -> m2_1  [color=darkseagreen4, key=1, label=word, style=dashed];
m2_2 -> m2_0  [color=blue, key=0, style=bold];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_6  [key=2, style=dotted];
m2_7 -> m2_5  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [color=green, key=0, style=solid];
m4_1 -> m4_2  [color=green, key=0, style=solid];
m4_2 -> m4_3  [color=green, key=0, style=solid];
m4_2 -> m4_5  [color=green, key=2, style=dotted];
m4_3 -> m4_4  [color=green, key=0, style=solid];
m4_3 -> m4_6  [color=green, key=2, style=dotted];
m4_4 -> m4_0  [color=blue, key=0, style=bold];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_11  [key=2, style=dotted];
m6_7 -> m6_9  [color=darkseagreen4, key=1, label=utcNow, style=dashed];
m6_7 -> m6_23  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_5  [key=2, style=dotted];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_11  [key=2, style=dotted];
m6_10 -> m6_6  [color=blue, key=0, style=bold];
m6_5 -> m6_12  [key=0, style=solid];
m6_5 -> m6_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_15  [key=2, style=dotted];
m6_12 -> m6_16  [key=2, style=dotted];
m6_12 -> m6_17  [key=2, style=dotted];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_15  [key=2, style=dotted];
m6_13 -> m6_16  [key=2, style=dotted];
m6_13 -> m6_17  [key=2, style=dotted];
m6_14 -> m6_5  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [color=darkseagreen4, key=1, label=utcNow, style=dashed];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_5  [key=2, style=dotted];
m6_2 -> m6_3  [key=0, style=solid];
m6_4 -> m6_0  [color=blue, key=0, style=bold];
m6_18 -> m6_19  [key=0, style=solid];
m6_18 -> m6_20  [color=darkseagreen4, key=1, label="double?", style=dashed];
m6_18 -> m6_23  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_18 -> m6_24  [color=darkseagreen4, key=1, label="Humanizer.Localisation.Tense", style=dashed];
m6_18 -> m6_26  [color=darkseagreen4, key=1, label="Humanizer.Localisation.TimeUnit", style=dashed];
m6_18 -> m6_41  [color=red, key=1, label="System.DateTime?", style=dashed];
m6_18 -> m6_42  [color=red, key=1, label=string, style=dashed];
m6_18 -> m6_43  [color=red, key=1, label=string, style=dashed];
m6_18 -> m6_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_21  [key=0, style=solid];
m6_20 -> m6_22  [key=0, style=solid];
m6_20 -> m6_46  [key=2, style=dotted];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_49  [key=2, style=dotted];
m6_23 -> m6_23  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_23 -> m6_25  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_23 -> m6_28  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_23 -> m6_30  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_23 -> m6_32  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_23 -> m6_34  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_23 -> m6_36  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_23 -> m6_38  [color=red, key=1, label=int, style=dashed];
m6_23 -> m6_40  [color=red, key=1, label=int, style=dashed];
m6_23 -> m6_7  [color=darkorchid, key=3, label="method methodReturn string Humanize", style=bold];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_26  [key=0, style=solid];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_29  [key=0, style=solid];
m6_26 -> m6_31  [key=0, style=solid];
m6_26 -> m6_33  [key=0, style=solid];
m6_26 -> m6_35  [key=0, style=solid];
m6_26 -> m6_37  [key=0, style=solid];
m6_26 -> m6_39  [color=red, key=0, style=solid];
m6_41 -> m6_42  [color=red, key=0, style=solid];
m6_41 -> m6_44  [color=red, key=0, style=solid];
m6_42 -> m6_43  [color=red, key=0, style=solid];
m6_42 -> m6_0  [color=red, key=2, style=dotted];
m6_42 -> m6_23  [color=red, key=3, label="Local variable string humanizedString", style=bold];
m6_43 -> m6_45  [color=red, key=0, style=solid];
m6_43 -> m6_6  [color=red, key=2, style=dotted];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_5  [key=2, style=dotted];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_47  [key=2, style=dotted];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_48  [key=2, style=dotted];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_25  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_25 -> m6_28  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_25 -> m6_30  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_25 -> m6_32  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_25 -> m6_34  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_25 -> m6_36  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_25 -> m6_38  [color=red, key=1, label=int, style=dashed];
m6_25 -> m6_40  [color=red, key=1, label=int, style=dashed];
m6_28 -> m6_41  [color=red, key=0, style=solid];
m6_28 -> m6_50  [key=2, style=dotted];
m6_30 -> m6_41  [color=red, key=0, style=solid];
m6_30 -> m6_51  [key=2, style=dotted];
m6_32 -> m6_41  [color=red, key=0, style=solid];
m6_32 -> m6_52  [key=2, style=dotted];
m6_34 -> m6_41  [color=red, key=0, style=solid];
m6_34 -> m6_53  [key=2, style=dotted];
m6_36 -> m6_41  [color=red, key=0, style=solid];
m6_36 -> m6_54  [key=2, style=dotted];
m6_36 -> m6_23  [color=darkorchid, key=3, label="Local variable string humanizedString", style=bold];
m6_38 -> m6_41  [color=red, key=0, style=solid];
m6_38 -> m6_54  [color=red, key=2, style=dotted];
m6_40 -> m6_41  [color=red, key=0, style=solid];
m6_40 -> m6_54  [color=red, key=2, style=dotted];
m6_40 -> m6_42  [color=red, key=1, label=deltaFromNow, style=dashed];
m6_40 -> m6_43  [color=red, key=1, label=deltaFromNow, style=dashed];
m6_40 -> m6_44  [color=red, key=1, label=deltaFromNow, style=dashed];
m6_27 -> m6_28  [key=0, style=solid];
m6_29 -> m6_30  [key=0, style=solid];
m6_31 -> m6_32  [key=0, style=solid];
m6_33 -> m6_34  [key=0, style=solid];
m6_35 -> m6_36  [key=0, style=solid];
m6_37 -> m6_38  [color=red, key=0, style=solid];
m6_39 -> m6_40  [color=red, key=0, style=solid];
m6_45 -> m6_18  [color=blue, key=0, style=bold];
m7_3 -> m7_3  [color=green, key=3, label="Field variable string ByteSymbol", style=bold];
m7_49 -> m7_50  [key=0, style=solid];
m7_50 -> m7_51  [key=0, style=solid];
m7_50 -> m7_44  [key=2, style=dotted];
m7_50 -> m7_4  [key=2, style=dotted];
m7_51 -> m7_49  [color=blue, key=0, style=bold];
m7_61 -> m7_62  [color=green, key=0, style=solid];
m7_62 -> m7_63  [color=green, key=0, style=solid];
m7_62 -> m7_44  [color=green, key=2, style=dotted];
m7_62 -> m7_4  [color=green, key=2, style=dotted];
m7_63 -> m7_61  [color=blue, key=0, style=bold];
m7_38 -> m7_39  [key=0, style=solid];
m7_39 -> m7_40  [key=0, style=solid];
m7_39 -> m7_3  [key=2, style=dotted];
m7_39 -> m7_4  [key=2, style=dotted];
m7_40 -> m7_38  [color=blue, key=0, style=bold];
m7_52 -> m7_53  [color=green, key=0, style=solid];
m7_53 -> m7_54  [color=green, key=0, style=solid];
m7_53 -> m7_44  [color=green, key=2, style=dotted];
m7_53 -> m7_4  [color=green, key=2, style=dotted];
m7_54 -> m7_52  [color=blue, key=0, style=bold];
m7_70 -> m7_71  [color=red, key=0, style=solid];
m7_71 -> m7_72  [color=red, key=0, style=solid];
m7_71 -> m7_44  [color=red, key=2, style=dotted];
m7_71 -> m7_4  [color=red, key=2, style=dotted];
m7_71 -> m7_77  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m7_72 -> m7_70  [color=blue, key=0, style=bold];
m7_26 -> m7_27  [key=0, style=solid];
m7_27 -> m7_28  [key=0, style=solid];
m7_27 -> m7_3  [key=2, style=dotted];
m7_27 -> m7_4  [key=2, style=dotted];
m7_28 -> m7_26  [color=blue, key=0, style=bold];
m7_55 -> m7_56  [color=red, key=0, style=solid];
m7_56 -> m7_57  [color=red, key=0, style=solid];
m7_56 -> m7_44  [color=red, key=2, style=dotted];
m7_56 -> m7_4  [color=red, key=2, style=dotted];
m7_57 -> m7_55  [color=blue, key=0, style=bold];
m7_5 -> m7_6  [key=0, style=solid];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_3  [key=2, style=dotted];
m7_6 -> m7_4  [key=2, style=dotted];
m7_7 -> m7_5  [color=blue, key=0, style=bold];
m7_8 -> m7_9  [key=0, style=solid];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_3  [key=2, style=dotted];
m7_9 -> m7_4  [key=2, style=dotted];
m7_10 -> m7_8  [color=blue, key=0, style=bold];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> m7_14  [color=green, key=3, label="Field variable long BitsInByte", style=bold];
m7_15 -> m7_16  [key=0, style=solid];
m7_15 -> m7_3  [key=2, style=dotted];
m7_15 -> m7_4  [key=2, style=dotted];
m7_15 -> m7_15  [color=green, key=3, label="Field variable long BytesInTerabyte", style=bold];
m7_16 -> m7_14  [color=blue, key=0, style=bold];
m7_20 -> m7_21  [key=0, style=solid];
m7_21 -> m7_22  [key=0, style=solid];
m7_21 -> m7_3  [key=2, style=dotted];
m7_21 -> m7_4  [key=2, style=dotted];
m7_21 -> m7_17  [color=green, key=3, label="Property variable string LargestWholeNumberSymbol", style=bold];
m7_21 -> m7_18  [color=green, key=3, label="Property variable string LargestWholeNumberSymbol", style=bold];
m7_22 -> m7_20  [color=blue, key=0, style=bold];
m7_23 -> m7_24  [key=0, style=solid];
m7_24 -> m7_25  [key=0, style=solid];
m7_24 -> m7_3  [key=2, style=dotted];
m7_24 -> m7_4  [key=2, style=dotted];
m7_25 -> m7_23  [color=blue, key=0, style=bold];
m7_64 -> m7_65  [color=red, key=0, style=solid];
m7_65 -> m7_66  [color=red, key=0, style=solid];
m7_65 -> m7_48  [color=red, key=2, style=dotted];
m7_65 -> m7_4  [color=red, key=2, style=dotted];
m7_66 -> m7_64  [color=blue, key=0, style=bold];
m7_79 -> m7_80  [key=0, style=solid];
m7_80 -> m7_81  [key=0, style=solid];
m7_80 -> m7_44  [key=2, style=dotted];
m7_80 -> m7_4  [key=2, style=dotted];
m7_81 -> m7_79  [color=blue, key=0, style=bold];
m7_76 -> m7_77  [color=red, key=0, style=solid];
m7_77 -> m7_78  [color=red, key=0, style=solid];
m7_77 -> m7_48  [color=red, key=2, style=dotted];
m7_77 -> m7_4  [color=red, key=2, style=dotted];
m7_78 -> m7_76  [color=blue, key=0, style=bold];
m7_32 -> m7_33  [key=0, style=solid];
m7_33 -> m7_34  [key=0, style=solid];
m7_33 -> m7_3  [key=2, style=dotted];
m7_33 -> m7_4  [key=2, style=dotted];
m7_34 -> m7_32  [color=blue, key=0, style=bold];
m7_58 -> m7_59  [color=red, key=0, style=solid];
m7_59 -> m7_60  [color=red, key=0, style=solid];
m7_59 -> m7_48  [color=red, key=2, style=dotted];
m7_59 -> m7_4  [color=red, key=2, style=dotted];
m7_60 -> m7_58  [color=blue, key=0, style=bold];
m7_45 -> m7_46  [color=red, key=0, style=solid];
m7_46 -> m7_47  [color=red, key=0, style=solid];
m7_46 -> m7_48  [color=red, key=2, style=dotted];
m7_46 -> m7_4  [color=red, key=2, style=dotted];
m7_47 -> m7_45  [color=blue, key=0, style=bold];
m7_17 -> m7_18  [key=0, style=solid];
m7_17 -> m7_17  [color=green, key=3, label="Field variable string KilobyteSymbol", style=bold];
m7_18 -> m7_19  [key=0, style=solid];
m7_18 -> m7_3  [key=2, style=dotted];
m7_18 -> m7_4  [key=2, style=dotted];
m7_18 -> m7_18  [color=green, key=3, label="Field variable string TerabyteSymbol", style=bold];
m7_19 -> m7_17  [color=blue, key=0, style=bold];
m7_73 -> m7_74  [key=0, style=solid];
m7_74 -> m7_75  [key=0, style=solid];
m7_74 -> m7_44  [key=2, style=dotted];
m7_74 -> m7_4  [key=2, style=dotted];
m7_75 -> m7_73  [color=blue, key=0, style=bold];
m7_11 -> m7_12  [key=0, style=solid];
m7_12 -> m7_13  [key=0, style=solid];
m7_12 -> m7_3  [key=2, style=dotted];
m7_12 -> m7_4  [key=2, style=dotted];
m7_13 -> m7_11  [color=blue, key=0, style=bold];
m7_35 -> m7_36  [key=0, style=solid];
m7_36 -> m7_37  [key=0, style=solid];
m7_36 -> m7_3  [key=2, style=dotted];
m7_36 -> m7_4  [key=2, style=dotted];
m7_37 -> m7_35  [color=blue, key=0, style=bold];
m7_82 -> m7_83  [color=red, key=0, style=solid];
m7_83 -> m7_84  [color=red, key=0, style=solid];
m7_83 -> m7_48  [color=red, key=2, style=dotted];
m7_83 -> m7_4  [color=red, key=2, style=dotted];
m7_84 -> m7_82  [color=blue, key=0, style=bold];
m7_41 -> m7_42  [key=0, style=solid];
m7_42 -> m7_43  [key=0, style=solid];
m7_42 -> m7_44  [key=2, style=dotted];
m7_42 -> m7_4  [key=2, style=dotted];
m7_43 -> m7_41  [color=blue, key=0, style=bold];
m7_67 -> m7_68  [key=0, style=solid];
m7_68 -> m7_69  [key=0, style=solid];
m7_68 -> m7_44  [key=2, style=dotted];
m7_68 -> m7_4  [key=2, style=dotted];
m7_69 -> m7_67  [color=blue, key=0, style=bold];
m7_29 -> m7_30  [key=0, style=solid];
m7_30 -> m7_31  [key=0, style=solid];
m7_30 -> m7_3  [key=2, style=dotted];
m7_30 -> m7_4  [key=2, style=dotted];
m7_30 -> m7_20  [color=green, key=3, label="Property variable double LargestWholeNumberValue", style=bold];
m7_30 -> m7_21  [color=green, key=3, label="Property variable double LargestWholeNumberValue", style=bold];
m7_31 -> m7_29  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_3  [key=2, style=dotted];
m7_1 -> m7_4  [key=2, style=dotted];
m7_2 -> m7_0  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_3  [key=2, style=dotted];
m8_2 -> m8_0  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_0 -> m9_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_0 -> m9_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_3  [key=0, style=solid];
m9_2 -> m9_4  [key=0, style=solid];
m9_2 -> m9_5  [key=2, style=dotted];
m9_2 -> m9_6  [key=2, style=dotted];
m9_2 -> m9_7  [key=2, style=dotted];
m9_2 -> m9_8  [key=2, style=dotted];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_6  [key=2, style=dotted];
m9_4 -> m9_0  [color=blue, key=0, style=bold];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_3  [key=2, style=dotted];
m10_2 -> m10_0  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_3  [key=2, style=dotted];
m11_2 -> m11_0  [color=blue, key=0, style=bold];
}
