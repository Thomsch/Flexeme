digraph  {
m0_15 [label="Entry System.Globalization.TextInfo.ToLower(string)", span="0-0", cluster="System.Globalization.TextInfo.ToLower(string)", file="CasingExtensions.cs"];
m0_14 [label="Entry System.Globalization.TextInfo.ToTitleCase(string)", span="0-0", cluster="System.Globalization.TextInfo.ToTitleCase(string)", file="CasingExtensions.cs"];
m0_19 [label="Entry string.Concat(string, string)", span="0-0", cluster="string.Concat(string, string)", file="CasingExtensions.cs"];
m0_0 [label="Entry Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", span="16-16", cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="CasingExtensions.cs"];
m0_1 [label=casing, span="18-18", cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="CasingExtensions.cs"];
m0_3 [label="return CultureInfo.CurrentCulture.TextInfo.ToTitleCase(input);", span="21-21", cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="CasingExtensions.cs"];
m0_5 [label="return CultureInfo.CurrentCulture.TextInfo.ToLower(input);", span="24-24", cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="CasingExtensions.cs"];
m0_7 [label="return input.ToUpper();", span="27-27", cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="CasingExtensions.cs"];
m0_9 [label="input.Length >= 1", span="30-30", cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="CasingExtensions.cs"];
m0_10 [label="return String.Concat(input.Substring(0, 1).ToUpper(), input.Substring(1));", span="31-31", cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="CasingExtensions.cs"];
m0_11 [label="return input.ToUpper();", span="33-33", cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="CasingExtensions.cs"];
m0_2 [label="LetterCasing.Title", span="20-20", cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="CasingExtensions.cs"];
m0_4 [label="LetterCasing.Lower", span="23-23", cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", color=red, community=0, file="CasingExtensions.cs"];
m0_6 [label="LetterCasing.AllCaps", span="26-26", cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="CasingExtensions.cs"];
m0_8 [label="LetterCasing.Sentence", span="29-29", cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="CasingExtensions.cs"];
m0_12 [label="throw new ArgumentOutOfRangeException(''casing'');", span="36-36", cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="CasingExtensions.cs"];
m0_13 [label="Exit Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", span="16-16", cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="CasingExtensions.cs"];
m0_16 [label="Entry string.ToUpper()", span="0-0", cluster="string.ToUpper()", file="CasingExtensions.cs"];
m0_17 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="CasingExtensions.cs"];
m0_20 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="CasingExtensions.cs"];
m0_18 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="CasingExtensions.cs"];
m1_11 [label="Entry Humanizer.Tests.CasingTests.ApplyCaseAllCaps(string, string)", span="40-40", cluster="Humanizer.Tests.CasingTests.ApplyCaseAllCaps(string, string)", file="CasingTests.cs"];
m1_12 [label="Assert.Equal(expectedOutput, input.ApplyCase(LetterCasing.AllCaps))", span="42-42", cluster="Humanizer.Tests.CasingTests.ApplyCaseAllCaps(string, string)", file="CasingTests.cs"];
m1_13 [label="Exit Humanizer.Tests.CasingTests.ApplyCaseAllCaps(string, string)", span="40-40", cluster="Humanizer.Tests.CasingTests.ApplyCaseAllCaps(string, string)", file="CasingTests.cs"];
m1_3 [label="Entry string.ApplyCase(Humanizer.LetterCasing)", span="16-16", cluster="string.ApplyCase(Humanizer.LetterCasing)", file="CasingTests.cs"];
m1_8 [label="Entry Humanizer.Tests.CasingTests.ApplyCaseSentence(string, string)", span="31-31", cluster="Humanizer.Tests.CasingTests.ApplyCaseSentence(string, string)", file="CasingTests.cs"];
m1_9 [label="Assert.Equal(expectedOutput, input.ApplyCase(LetterCasing.Sentence))", span="33-33", cluster="Humanizer.Tests.CasingTests.ApplyCaseSentence(string, string)", file="CasingTests.cs"];
m1_10 [label="Exit Humanizer.Tests.CasingTests.ApplyCaseSentence(string, string)", span="31-31", cluster="Humanizer.Tests.CasingTests.ApplyCaseSentence(string, string)", file="CasingTests.cs"];
m1_0 [label="Entry Humanizer.Tests.CasingTests.ApplyCaseTitle(string, string)", span="12-12", cluster="Humanizer.Tests.CasingTests.ApplyCaseTitle(string, string)", file="CasingTests.cs"];
m1_1 [label="Assert.Equal(expectedOutput, input.ApplyCase(LetterCasing.Title))", span="14-14", cluster="Humanizer.Tests.CasingTests.ApplyCaseTitle(string, string)", file="CasingTests.cs"];
m1_2 [label="Exit Humanizer.Tests.CasingTests.ApplyCaseTitle(string, string)", span="12-12", cluster="Humanizer.Tests.CasingTests.ApplyCaseTitle(string, string)", file="CasingTests.cs"];
m1_4 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="CasingTests.cs"];
m1_5 [label="Entry Humanizer.Tests.CasingTests.ApplyCaseLower(string, string)", span="22-22", cluster="Humanizer.Tests.CasingTests.ApplyCaseLower(string, string)", file="CasingTests.cs"];
m1_6 [label="Assert.Equal(expectedOutput, input.ApplyCase(LetterCasing.Lower))", span="24-24", cluster="Humanizer.Tests.CasingTests.ApplyCaseLower(string, string)", color=red, community=0, file="CasingTests.cs"];
m1_7 [label="Exit Humanizer.Tests.CasingTests.ApplyCaseLower(string, string)", span="22-22", cluster="Humanizer.Tests.CasingTests.ApplyCaseLower(string, string)", file="CasingTests.cs"];
m2_4 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="EnumHumanizeTests.cs"];
m2_15 [label="Entry Humanizer.Tests.EnumHumanizeTests.AllCapitalMembersAreReturnedAsIs()", span="35-35", cluster="Humanizer.Tests.EnumHumanizeTests.AllCapitalMembersAreReturnedAsIs()", file="EnumHumanizeTests.cs"];
m2_16 [label="Assert.Equal(EnumUnderTest.ALLCAPITALS.ToString(), EnumUnderTest.ALLCAPITALS.Humanize())", span="37-37", cluster="Humanizer.Tests.EnumHumanizeTests.AllCapitalMembersAreReturnedAsIs()", file="EnumHumanizeTests.cs"];
m2_17 [label="Exit Humanizer.Tests.EnumHumanizeTests.AllCapitalMembersAreReturnedAsIs()", span="35-35", cluster="Humanizer.Tests.EnumHumanizeTests.AllCapitalMembersAreReturnedAsIs()", file="EnumHumanizeTests.cs"];
m2_18 [label="Entry System.Enum.ToString()", span="0-0", cluster="System.Enum.ToString()", file="EnumHumanizeTests.cs"];
m2_12 [label="Entry Humanizer.Tests.EnumHumanizeTests.CanApplyLowerCaseCasingOnEnumHumanization()", span="27-27", cluster="Humanizer.Tests.EnumHumanizeTests.CanApplyLowerCaseCasingOnEnumHumanization()", file="EnumHumanizeTests.cs"];
m2_13 [label="Assert.Equal(\r\n                EnumTestsResources.MemberWithoutDescriptionAttributeLowerCase, \r\n                EnumUnderTest.MemberWithoutDescriptionAttribute.Humanize(LetterCasing.Lower))", span="29-31", cluster="Humanizer.Tests.EnumHumanizeTests.CanApplyLowerCaseCasingOnEnumHumanization()", color=green, community=0, file="EnumHumanizeTests.cs"];
m2_14 [label="Exit Humanizer.Tests.EnumHumanizeTests.CanApplyLowerCaseCasingOnEnumHumanization()", span="27-27", cluster="Humanizer.Tests.EnumHumanizeTests.CanApplyLowerCaseCasingOnEnumHumanization()", file="EnumHumanizeTests.cs"];
m2_8 [label="Entry Humanizer.Tests.EnumHumanizeTests.CanApplyTitleCasingOnEnumHumanization()", span="19-19", cluster="Humanizer.Tests.EnumHumanizeTests.CanApplyTitleCasingOnEnumHumanization()", file="EnumHumanizeTests.cs"];
m2_9 [label="Assert.Equal(\r\n                EnumTestsResources.MemberWithoutDescriptionAttributeTitle, \r\n                EnumUnderTest.MemberWithoutDescriptionAttribute.Humanize(LetterCasing.Title))", span="21-23", cluster="Humanizer.Tests.EnumHumanizeTests.CanApplyTitleCasingOnEnumHumanization()", file="EnumHumanizeTests.cs"];
m2_10 [label="Exit Humanizer.Tests.EnumHumanizeTests.CanApplyTitleCasingOnEnumHumanization()", span="19-19", cluster="Humanizer.Tests.EnumHumanizeTests.CanApplyTitleCasingOnEnumHumanization()", file="EnumHumanizeTests.cs"];
m2_5 [label="Entry Humanizer.Tests.EnumHumanizeTests.CanHumanizeMembersWithoutDescriptionAttribute()", span="13-13", cluster="Humanizer.Tests.EnumHumanizeTests.CanHumanizeMembersWithoutDescriptionAttribute()", file="EnumHumanizeTests.cs"];
m2_6 [label="Assert.Equal(EnumTestsResources.MemberWithoutDescriptionAttributeSentence, EnumUnderTest.MemberWithoutDescriptionAttribute.Humanize())", span="15-15", cluster="Humanizer.Tests.EnumHumanizeTests.CanHumanizeMembersWithoutDescriptionAttribute()", file="EnumHumanizeTests.cs"];
m2_3 [label="Exit Humanizer.StringDehumanizeExtensions.Dehumanize(string)", span="11-11", cluster="Humanizer.StringDehumanizeExtensions.Dehumanize(string)", file="EnumHumanizeTests.cs"];
m2_0 [label="Entry Humanizer.StringDehumanizeExtensions.Dehumanize(string)", span="11-11", cluster="Humanizer.StringDehumanizeExtensions.Dehumanize(string)", file="EnumHumanizeTests.cs"];
m2_1 [label="var titlizedWords = \r\n                (from word in input.Split(' ')\r\n                select word.Humanize(LetterCasing.Title))", span="13-15", cluster="Humanizer.StringDehumanizeExtensions.Dehumanize(string)", file="EnumHumanizeTests.cs"];
m2_2 [label="return string.Join('''', titlizedWords);", span="17-17", cluster="Humanizer.StringDehumanizeExtensions.Dehumanize(string)", file="EnumHumanizeTests.cs"];
m2_11 [label="Entry System.Enum.Humanize(Humanizer.LetterCasing)", span="37-37", cluster="System.Enum.Humanize(Humanizer.LetterCasing)", file="EnumHumanizeTests.cs"];
m2_7 [label="Exit Humanizer.Tests.EnumHumanizeTests.CanHumanizeMembersWithoutDescriptionAttribute()", span="13-13", cluster="Humanizer.Tests.EnumHumanizeTests.CanHumanizeMembersWithoutDescriptionAttribute()", file="EnumHumanizeTests.cs"];
m4_5 [label="Entry ApiApprover.PublicApiGenerator.CreatePublicApiForAssembly(System.Reflection.Assembly)", span="17-17", cluster="ApiApprover.PublicApiGenerator.CreatePublicApiForAssembly(System.Reflection.Assembly)", file="PublicApiApprovalTest.cs"];
m4_0 [label="Entry Humanizer.Tests.ApiApprover.PublicApiApprovalTest.approve_public_api()", span="11-11", cluster="Humanizer.Tests.ApiApprover.PublicApiApprovalTest.approve_public_api()", file="PublicApiApprovalTest.cs"];
m4_1 [label="var assembly = typeof(StringHumanizeExtensions).Assembly", span="14-14", cluster="Humanizer.Tests.ApiApprover.PublicApiApprovalTest.approve_public_api()", color=green, community=0, file="PublicApiApprovalTest.cs"];
m4_2 [label="var publicApi = PublicApiGenerator.CreatePublicApiForAssembly(assembly)", span="17-17", cluster="Humanizer.Tests.ApiApprover.PublicApiApprovalTest.approve_public_api()", color=green, community=0, file="PublicApiApprovalTest.cs"];
m4_3 [label="Approvals.Verify(publicApi)", span="20-20", cluster="Humanizer.Tests.ApiApprover.PublicApiApprovalTest.approve_public_api()", color=green, community=0, file="PublicApiApprovalTest.cs"];
m4_4 [label="Exit Humanizer.Tests.ApiApprover.PublicApiApprovalTest.approve_public_api()", span="11-11", cluster="Humanizer.Tests.ApiApprover.PublicApiApprovalTest.approve_public_api()", file="PublicApiApprovalTest.cs"];
m4_6 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="PublicApiApprovalTest.cs"];
m6_15 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="StringHumanizeExtensions.cs"];
m6_49 [label="Entry System.Math.Abs(int)", span="0-0", cluster="System.Math.Abs(int)", file="StringHumanizeExtensions.cs"];
m6_6 [label="Entry Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan, System.Globalization.CultureInfo)", span="20-20", cluster="Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan, System.Globalization.CultureInfo)", file="StringHumanizeExtensions.cs"];
m6_7 [label="var utcNow = new DateTime(2013, 6, 20, 9, 58, 22, DateTimeKind.Utc)", span="22-22", cluster="Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan, System.Globalization.CultureInfo)", file="StringHumanizeExtensions.cs"];
m6_9 [label="VerifyWithDate(expectedString, deltaFromNow, culture, now, utcNow)", span="25-25", cluster="Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan, System.Globalization.CultureInfo)", file="StringHumanizeExtensions.cs"];
m6_8 [label="var now = new DateTime(2013, 6, 20, 11, 58, 22, DateTimeKind.Local)", span="23-23", cluster="Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan, System.Globalization.CultureInfo)", file="StringHumanizeExtensions.cs"];
m6_10 [label="Exit Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan, System.Globalization.CultureInfo)", span="20-20", cluster="Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan, System.Globalization.CultureInfo)", file="StringHumanizeExtensions.cs"];
m6_5 [label="Entry Humanizer.Tests.DateHumanize.VerifyWithDate(string, System.TimeSpan, System.Globalization.CultureInfo, System.DateTime, System.DateTime)", span="28-28", cluster="Humanizer.Tests.DateHumanize.VerifyWithDate(string, System.TimeSpan, System.Globalization.CultureInfo, System.DateTime, System.DateTime)", file="StringHumanizeExtensions.cs"];
m6_12 [label="Assert.Equal(expectedString, baseDateUtc.Add(deltaFromBase).Humanize(utcDate: true, dateToCompareAgainst: baseDateUtc, culture: culture))", span="30-30", cluster="Humanizer.Tests.DateHumanize.VerifyWithDate(string, System.TimeSpan, System.Globalization.CultureInfo, System.DateTime, System.DateTime)", file="StringHumanizeExtensions.cs"];
m6_13 [label="Assert.Equal(expectedString, baseDate.Add(deltaFromBase).Humanize(false, baseDate, culture: culture))", span="31-31", cluster="Humanizer.Tests.DateHumanize.VerifyWithDate(string, System.TimeSpan, System.Globalization.CultureInfo, System.DateTime, System.DateTime)", file="StringHumanizeExtensions.cs"];
m6_14 [label="Exit Humanizer.Tests.DateHumanize.VerifyWithDate(string, System.TimeSpan, System.Globalization.CultureInfo, System.DateTime, System.DateTime)", span="28-28", cluster="Humanizer.Tests.DateHumanize.VerifyWithDate(string, System.TimeSpan, System.Globalization.CultureInfo, System.DateTime, System.DateTime)", file="StringHumanizeExtensions.cs"];
m6_47 [label="Entry Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy()", span="8-8", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy()", file="StringHumanizeExtensions.cs"];
m6_48 [label="Entry System.TimeSpan.TimeSpan()", span="0-0", cluster="System.TimeSpan.TimeSpan()", file="StringHumanizeExtensions.cs"];
m6_52 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="StringHumanizeExtensions.cs"];
m6_50 [label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0", cluster="System.TimeSpan.FromMilliseconds(double)", file="StringHumanizeExtensions.cs"];
m6_17 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="StringHumanizeExtensions.cs"];
m6_51 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="StringHumanizeExtensions.cs"];
m6_0 [label="Entry Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan, System.Globalization.CultureInfo)", span="11-11", cluster="Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan, System.Globalization.CultureInfo)", file="StringHumanizeExtensions.cs"];
m6_1 [label="var utcNow = DateTime.UtcNow", span="13-13", cluster="Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan, System.Globalization.CultureInfo)", file="StringHumanizeExtensions.cs"];
m6_3 [label="VerifyWithDate(expectedString, deltaFromNow, culture, localNow, utcNow)", span="17-17", cluster="Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan, System.Globalization.CultureInfo)", file="StringHumanizeExtensions.cs"];
m6_2 [label="var localNow = DateTime.Now", span="14-14", cluster="Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan, System.Globalization.CultureInfo)", file="StringHumanizeExtensions.cs"];
m6_4 [label="Exit Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan, System.Globalization.CultureInfo)", span="11-11", cluster="Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan, System.Globalization.CultureInfo)", file="StringHumanizeExtensions.cs"];
m6_11 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="StringHumanizeExtensions.cs"];
m6_16 [label="Entry System.DateTime.Humanize(bool, System.DateTime?, System.Globalization.CultureInfo)", span="19-19", cluster="System.DateTime.Humanize(bool, System.DateTime?, System.Globalization.CultureInfo)", file="StringHumanizeExtensions.cs"];
m6_18 [label="Entry Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", span="34-34", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs"];
m6_19 [label="precision.HasValue", span="36-36", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs"];
m6_20 [label="Configurator.DateTimeHumanizeStrategy = new PrecisionDateTimeHumanizeStrategy(precision.Value)", span="37-37", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs"];
m6_23 [label="unit = Math.Abs(unit)", span="42-42", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs"];
m6_24 [label="tense == Tense.Past", span="44-44", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs"];
m6_26 [label=timeUnit, span="47-47", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs"];
m6_41 [label="baseDate == null", span="72-72", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", color=red, community=0, file="StringHumanizeExtensions.cs"];
m6_42 [label="VerifyWithCurrentDate(expectedString, deltaFromNow, culture)", span="74-74", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", color=red, community=0, file="StringHumanizeExtensions.cs"];
m6_43 [label="VerifyWithDateInjection(expectedString, deltaFromNow, culture)", span="75-75", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", color=red, community=0, file="StringHumanizeExtensions.cs"];
m6_44 [label="VerifyWithDate(expectedString, deltaFromNow, culture, baseDate.Value, baseDateUtc.Value)", span="79-79", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs"];
m6_21 [label="Configurator.DateTimeHumanizeStrategy = new DefaultDateTimeHumanizeStrategy()", span="39-39", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs"];
m6_22 [label="var deltaFromNow = new TimeSpan()", span="41-41", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs"];
m6_25 [label="unit = -unit", span="45-45", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs"];
m6_28 [label="deltaFromNow = TimeSpan.FromMilliseconds(unit)", span="50-50", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs"];
m6_30 [label="deltaFromNow = TimeSpan.FromSeconds(unit)", span="53-53", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs"];
m6_32 [label="deltaFromNow = TimeSpan.FromMinutes(unit)", span="56-56", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs"];
m6_34 [label="deltaFromNow = TimeSpan.FromHours(unit)", span="59-59", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs"];
m6_36 [label="deltaFromNow = TimeSpan.FromDays(unit)", span="62-62", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs"];
m6_38 [label="deltaFromNow = TimeSpan.FromDays(unit*31)", span="65-65", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", color=red, community=0, file="StringHumanizeExtensions.cs"];
m6_40 [label="deltaFromNow = TimeSpan.FromDays(unit*366)", span="68-68", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", color=red, community=0, file="StringHumanizeExtensions.cs"];
m6_27 [label="TimeUnit.Millisecond", span="49-49", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs"];
m6_29 [label="TimeUnit.Second", span="52-52", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs"];
m6_31 [label="TimeUnit.Minute", span="55-55", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs"];
m6_33 [label="TimeUnit.Hour", span="58-58", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs"];
m6_35 [label="TimeUnit.Day", span="61-61", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs"];
m6_37 [label="TimeUnit.Month", span="64-64", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs"];
m6_39 [label="TimeUnit.Year", span="67-67", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", color=red, community=0, file="StringHumanizeExtensions.cs"];
m6_45 [label="Exit Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", span="34-34", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="StringHumanizeExtensions.cs"];
m6_53 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="StringHumanizeExtensions.cs"];
m6_54 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="StringHumanizeExtensions.cs"];
m6_46 [label="Entry Humanizer.DateTimeHumanizeStrategy.PrecisionDateTimeHumanizeStrategy.PrecisionDateTimeHumanizeStrategy(double)", span="16-16", cluster="Humanizer.DateTimeHumanizeStrategy.PrecisionDateTimeHumanizeStrategy.PrecisionDateTimeHumanizeStrategy(double)", file="StringHumanizeExtensions.cs"];
m7_3 [label="Entry string.Humanize()", span="42-42", cluster="string.Humanize()", file="StringHumanizeTests.cs"];
m7_49 [label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", span="123-123", cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", file="StringHumanizeTests.cs"];
m7_50 [label="Assert.Equal(\r\n                ''Can Return Title Case'',\r\n                ''Can_return_title_Case''.Humanize(LetterCasing.Title))", span="125-127", cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", file="StringHumanizeTests.cs"];
m7_51 [label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", span="123-123", cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", file="StringHumanizeTests.cs"];
m7_61 [label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoSentenceCase()", span="155-155", cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoSentenceCase()", file="StringHumanizeTests.cs"];
m7_62 [label="Assert.Equal(\r\n                ''Can return sentence case'',\r\n                ''CanReturnSentenceCase''.Humanize(LetterCasing.Sentence))", span="157-159", cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoSentenceCase()", file="StringHumanizeTests.cs", color=green, community=0];
m7_63 [label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoSentenceCase()", span="155-155", cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoSentenceCase()", file="StringHumanizeTests.cs"];
m7_38 [label="Entry Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheStart()", span="99-99", cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheStart()", file="StringHumanizeTests.cs"];
m7_39 [label="Assert.Equal(\r\n                ''1 HTML'',\r\n                ''1HTML''.Humanize())", span="101-103", cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheStart()", file="StringHumanizeTests.cs"];
m7_40 [label="Exit Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheStart()", span="99-99", cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheStart()", file="StringHumanizeTests.cs"];
m7_52 [label="Entry Humanizer.Tests.StringHumanizeTests.TitleHumanizationHonorsAllCaps()", span="131-131", cluster="Humanizer.Tests.StringHumanizeTests.TitleHumanizationHonorsAllCaps()", file="StringHumanizeTests.cs"];
m7_53 [label="Assert.Equal(\r\n                ''Title Humanization Honors ALLCAPS'',\r\n                ''Title_humanization_Honors_ALLCAPS''.Humanize(LetterCasing.Title))", span="133-135", cluster="Humanizer.Tests.StringHumanizeTests.TitleHumanizationHonorsAllCaps()", file="StringHumanizeTests.cs", color=green, community=0];
m7_54 [label="Exit Humanizer.Tests.StringHumanizeTests.TitleHumanizationHonorsAllCaps()", span="131-131", cluster="Humanizer.Tests.StringHumanizeTests.TitleHumanizationHonorsAllCaps()", file="StringHumanizeTests.cs"];
m7_70 [label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", span="179-179", cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", file="StringHumanizeTests.cs"];
m7_71 [label="Assert.Equal(\r\n                ''lowercase'',\r\n                ''LOWERCASE''.Humanize(LetterCasing.Lower))", span="181-183", cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", color=red, community=0, file="StringHumanizeTests.cs"];
m7_72 [label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", span="179-179", cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", file="StringHumanizeTests.cs"];
m7_4 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="StringHumanizeTests.cs"];
m7_26 [label="Entry Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheMiddle()", span="67-67", cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheMiddle()", file="StringHumanizeTests.cs"];
m7_27 [label="Assert.Equal(\r\n                ''The HTML language'',\r\n                ''TheHTMLLanguage''.Humanize())", span="69-71", cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheMiddle()", file="StringHumanizeTests.cs"];
m7_28 [label="Exit Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheMiddle()", span="67-67", cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheMiddle()", file="StringHumanizeTests.cs"];
m7_55 [label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCase()", span="139-139", cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCase()", file="StringHumanizeTests.cs"];
m7_56 [label="Assert.Equal(\r\n                ''can return lower case'',\r\n                ''CanReturnLowerCase''.Humanize(LetterCasing.Lower))", span="141-143", cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCase()", color=red, community=0, file="StringHumanizeTests.cs"];
m7_57 [label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCase()", span="139-139", cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCase()", file="StringHumanizeTests.cs"];
m7_5 [label="Entry Humanizer.Tests.StringHumanizeTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", span="15-15", cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", file="StringHumanizeTests.cs"];
m7_6 [label="Assert.Equal(\r\n                ''When I use an input a here'',\r\n                ''WhenIUseAnInputAHere''.Humanize())", span="17-19", cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", file="StringHumanizeTests.cs"];
m7_7 [label="Exit Humanizer.Tests.StringHumanizeTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", span="15-15", cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", file="StringHumanizeTests.cs"];
m7_8 [label="Entry Humanizer.Tests.StringHumanizeTests.WhenInputStringStartsWithANumber_ThenNumberIsDealtWithLikeAWord()", span="23-23", cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringStartsWithANumber_ThenNumberIsDealtWithLikeAWord()", file="StringHumanizeTests.cs"];
m7_9 [label="Assert.Equal(''10 is in the begining'', ''10IsInTheBegining''.Humanize())", span="25-25", cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringStartsWithANumber_ThenNumberIsDealtWithLikeAWord()", file="StringHumanizeTests.cs"];
m7_10 [label="Exit Humanizer.Tests.StringHumanizeTests.WhenInputStringStartsWithANumber_ThenNumberIsDealtWithLikeAWord()", span="23-23", cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringStartsWithANumber_ThenNumberIsDealtWithLikeAWord()", file="StringHumanizeTests.cs"];
m7_14 [label="Entry Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringIsTurnedIntoSentence()", span="35-35", cluster="Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringIsTurnedIntoSentence()", file="StringHumanizeTests.cs"];
m7_15 [label="Assert.Equal(\r\n                ''Underscored input string is turned into sentence'',\r\n                ''Underscored_input_string_is_turned_into_sentence''.Humanize())", span="37-39", cluster="Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringIsTurnedIntoSentence()", file="StringHumanizeTests.cs"];
m7_16 [label="Exit Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringIsTurnedIntoSentence()", span="35-35", cluster="Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringIsTurnedIntoSentence()", file="StringHumanizeTests.cs"];
m7_48 [label="Entry string.Humanize(params Humanizer.IStringTransformer[])", span="72-72", cluster="string.Humanize(params Humanizer.IStringTransformer[])", file="StringHumanizeTests.cs"];
m7_20 [label="Entry Humanizer.Tests.StringHumanizeTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", span="51-51", cluster="Humanizer.Tests.StringHumanizeTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", file="StringHumanizeTests.cs"];
m7_21 [label="Assert.Equal(\r\n                ''X is first word in the sentence'',\r\n                ''XIsFirstWordInTheSentence''.Humanize())", span="53-55", cluster="Humanizer.Tests.StringHumanizeTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", file="StringHumanizeTests.cs"];
m7_22 [label="Exit Humanizer.Tests.StringHumanizeTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", span="51-51", cluster="Humanizer.Tests.StringHumanizeTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", file="StringHumanizeTests.cs"];
m7_23 [label="Entry Humanizer.Tests.StringHumanizeTests.AcronymsAreLeftIntact()", span="59-59", cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreLeftIntact()", file="StringHumanizeTests.cs"];
m7_24 [label="Assert.Equal(\r\n                ''HTML'',\r\n                ''HTML''.Humanize())", span="61-63", cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreLeftIntact()", file="StringHumanizeTests.cs"];
m7_25 [label="Exit Humanizer.Tests.StringHumanizeTests.AcronymsAreLeftIntact()", span="59-59", cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreLeftIntact()", file="StringHumanizeTests.cs"];
m7_64 [label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoSentenceCaseWithTransformers()", span="163-163", cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoSentenceCaseWithTransformers()", file="StringHumanizeTests.cs"];
m7_65 [label="Assert.Equal(\r\n                ''Can return sentence case'',\r\n                ''CanReturnSentenceCase''.Humanize(To.SentenceCase))", span="165-167", cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoSentenceCaseWithTransformers()", color=red, community=1, file="StringHumanizeTests.cs"];
m7_66 [label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoSentenceCaseWithTransformers()", span="163-163", cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoSentenceCaseWithTransformers()", file="StringHumanizeTests.cs"];
m7_79 [label="Entry Humanizer.Tests.StringHumanizeTests.CanTurnIntoUpperCasewhenUsingUnderscores()", span="203-203", cluster="Humanizer.Tests.StringHumanizeTests.CanTurnIntoUpperCasewhenUsingUnderscores()", file="StringHumanizeTests.cs"];
m7_80 [label="Assert.Equal(\r\n                ''CAN HUMANIZE INTO UPPER CASE'',\r\n                ''Can_Humanize_into_Upper_case''.Humanize(LetterCasing.AllCaps))", span="205-207", cluster="Humanizer.Tests.StringHumanizeTests.CanTurnIntoUpperCasewhenUsingUnderscores()", file="StringHumanizeTests.cs"];
m7_81 [label="Exit Humanizer.Tests.StringHumanizeTests.CanTurnIntoUpperCasewhenUsingUnderscores()", span="203-203", cluster="Humanizer.Tests.StringHumanizeTests.CanTurnIntoUpperCasewhenUsingUnderscores()", file="StringHumanizeTests.cs"];
m7_76 [label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoUpperCaseWithTransformers()", span="195-195", cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoUpperCaseWithTransformers()", file="StringHumanizeTests.cs"];
m7_77 [label="Assert.Equal(\r\n                ''CAN HUMANIZE INTO UPPER CASE'',\r\n                ''CanHumanizeIntoUpperCase''.Humanize(To.UpperCase))", span="197-199", cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoUpperCaseWithTransformers()", color=red, community=1, file="StringHumanizeTests.cs"];
m7_78 [label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoUpperCaseWithTransformers()", span="195-195", cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoUpperCaseWithTransformers()", file="StringHumanizeTests.cs"];
m7_32 [label="Entry Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheEnd()", span="83-83", cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheEnd()", file="StringHumanizeTests.cs"];
m7_33 [label="Assert.Equal(\r\n                ''The language is HTML'',\r\n                ''TheLanguageIsHTML''.Humanize())", span="85-87", cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheEnd()", file="StringHumanizeTests.cs"];
m7_34 [label="Exit Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheEnd()", span="83-83", cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheEnd()", file="StringHumanizeTests.cs"];
m7_44 [label="Entry string.Humanize(Humanizer.LetterCasing)", span="60-60", cluster="string.Humanize(Humanizer.LetterCasing)", file="StringHumanizeTests.cs"];
m7_58 [label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCaseWithTransformers()", span="147-147", cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCaseWithTransformers()", file="StringHumanizeTests.cs"];
m7_59 [label="Assert.Equal(\r\n                ''can return lower case'',\r\n                ''CanReturnLowerCase''.Humanize(To.LowerCase))", span="149-151", cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCaseWithTransformers()", color=red, community=1, file="StringHumanizeTests.cs"];
m7_60 [label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCaseWithTransformers()", span="147-147", cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCaseWithTransformers()", file="StringHumanizeTests.cs"];
m7_45 [label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscoresWithTransformers()", span="115-115", cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscoresWithTransformers()", file="StringHumanizeTests.cs"];
m7_46 [label="Assert.Equal(\r\n                ''Can Return Title Case'',\r\n                ''CanReturnTitleCase''.Humanize(To.TitleCase))", span="117-119", cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscoresWithTransformers()", color=red, community=1, file="StringHumanizeTests.cs"];
m7_47 [label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscoresWithTransformers()", span="115-115", cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscoresWithTransformers()", file="StringHumanizeTests.cs"];
m7_17 [label="Entry Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringPreservesCasing()", span="43-43", cluster="Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringPreservesCasing()", file="StringHumanizeTests.cs"];
m7_18 [label="Assert.Equal(\r\n                ''Underscored input String is turned INTO sentence'',\r\n                ''Underscored_input_String_is_turned_INTO_sentence''.Humanize())", span="45-47", cluster="Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringPreservesCasing()", file="StringHumanizeTests.cs"];
m7_19 [label="Exit Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringPreservesCasing()", span="43-43", cluster="Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringPreservesCasing()", file="StringHumanizeTests.cs"];
m7_73 [label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoUpperCase()", span="187-187", cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoUpperCase()", file="StringHumanizeTests.cs"];
m7_74 [label="Assert.Equal(\r\n                ''CAN HUMANIZE INTO UPPER CASE'',\r\n                ''CanHumanizeIntoUpperCase''.Humanize(LetterCasing.AllCaps))", span="189-191", cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoUpperCase()", file="StringHumanizeTests.cs"];
m7_75 [label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoUpperCase()", span="187-187", cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoUpperCase()", file="StringHumanizeTests.cs"];
m7_11 [label="Entry Humanizer.Tests.StringHumanizeTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", span="29-29", cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", file="StringHumanizeTests.cs"];
m7_12 [label="Assert.Equal(''Number is at the end 100'', ''NumberIsAtTheEnd100''.Humanize())", span="31-31", cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", file="StringHumanizeTests.cs"];
m7_13 [label="Exit Humanizer.Tests.StringHumanizeTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", span="29-29", cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", file="StringHumanizeTests.cs"];
m7_35 [label="Entry Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheEnd()", span="91-91", cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheEnd()", file="StringHumanizeTests.cs"];
m7_36 [label="Assert.Equal(\r\n                ''HTML 5'',\r\n                ''HTML5''.Humanize())", span="93-95", cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheEnd()", file="StringHumanizeTests.cs"];
m7_37 [label="Exit Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheEnd()", span="91-91", cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheEnd()", file="StringHumanizeTests.cs"];
m7_82 [label="Entry Humanizer.Tests.StringHumanizeTests.CanTurnIntoUpperCasewhenUsingUnderscoresWithTransformers()", span="211-211", cluster="Humanizer.Tests.StringHumanizeTests.CanTurnIntoUpperCasewhenUsingUnderscoresWithTransformers()", file="StringHumanizeTests.cs"];
m7_83 [label="Assert.Equal(\r\n                ''CAN HUMANIZE INTO UPPER CASE'',\r\n                ''Can_Humanize_into_Upper_case''.Humanize(To.UpperCase))", span="213-215", cluster="Humanizer.Tests.StringHumanizeTests.CanTurnIntoUpperCasewhenUsingUnderscoresWithTransformers()", color=red, community=1, file="StringHumanizeTests.cs"];
m7_84 [label="Exit Humanizer.Tests.StringHumanizeTests.CanTurnIntoUpperCasewhenUsingUnderscoresWithTransformers()", span="211-211", cluster="Humanizer.Tests.StringHumanizeTests.CanTurnIntoUpperCasewhenUsingUnderscoresWithTransformers()", file="StringHumanizeTests.cs"];
m7_41 [label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", span="107-107", cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", file="StringHumanizeTests.cs"];
m7_42 [label="Assert.Equal(\r\n                ''Can Return Title Case'',\r\n                ''CanReturnTitleCase''.Humanize(LetterCasing.Title))", span="109-111", cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", file="StringHumanizeTests.cs"];
m7_43 [label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", span="107-107", cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", file="StringHumanizeTests.cs"];
m7_67 [label="Entry Humanizer.Tests.StringHumanizeTests.SentenceCasingWorksOnEmptyStrings()", span="171-171", cluster="Humanizer.Tests.StringHumanizeTests.SentenceCasingWorksOnEmptyStrings()", file="StringHumanizeTests.cs"];
m7_68 [label="Assert.Equal(\r\n                '''',\r\n                ''''.Humanize(LetterCasing.Sentence))", span="173-175", cluster="Humanizer.Tests.StringHumanizeTests.SentenceCasingWorksOnEmptyStrings()", file="StringHumanizeTests.cs"];
m7_69 [label="Exit Humanizer.Tests.StringHumanizeTests.SentenceCasingWorksOnEmptyStrings()", span="171-171", cluster="Humanizer.Tests.StringHumanizeTests.SentenceCasingWorksOnEmptyStrings()", file="StringHumanizeTests.cs"];
m7_29 [label="Entry Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheStart()", span="75-75", cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheStart()", file="StringHumanizeTests.cs"];
m7_30 [label="Assert.Equal(\r\n                ''HTML is the language'',\r\n                ''HTMLIsTheLanguage''.Humanize())", span="77-79", cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheStart()", file="StringHumanizeTests.cs"];
m7_31 [label="Exit Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheStart()", span="75-75", cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheStart()", file="StringHumanizeTests.cs"];
m7_0 [label="Entry Humanizer.Tests.StringHumanizeTests.PascalCaseInputStringIsTurnedIntoSentence()", span="7-7", cluster="Humanizer.Tests.StringHumanizeTests.PascalCaseInputStringIsTurnedIntoSentence()", file="StringHumanizeTests.cs"];
m7_1 [label="Assert.Equal(\r\n                ''Pascal case input string is turned into sentence'',\r\n                ''PascalCaseInputStringIsTurnedIntoSentence''.Humanize())", span="9-11", cluster="Humanizer.Tests.StringHumanizeTests.PascalCaseInputStringIsTurnedIntoSentence()", file="StringHumanizeTests.cs"];
m7_2 [label="Exit Humanizer.Tests.StringHumanizeTests.PascalCaseInputStringIsTurnedIntoSentence()", span="7-7", cluster="Humanizer.Tests.StringHumanizeTests.PascalCaseInputStringIsTurnedIntoSentence()", file="StringHumanizeTests.cs"];
m8_3 [label="Entry System.Globalization.TextInfo.ToLower(string)", span="0-0", cluster="System.Globalization.TextInfo.ToLower(string)", file="ToLowerCase.cs"];
m8_0 [label="Entry Humanizer.ToLowerCase.Transform(string)", span="6-6", cluster="Humanizer.ToLowerCase.Transform(string)", file="ToLowerCase.cs"];
m8_1 [label="return CultureInfo.CurrentCulture.TextInfo.ToLower(input);", span="8-8", cluster="Humanizer.ToLowerCase.Transform(string)", file="ToLowerCase.cs"];
m8_2 [label="Exit Humanizer.ToLowerCase.Transform(string)", span="6-6", cluster="Humanizer.ToLowerCase.Transform(string)", file="ToLowerCase.cs"];
m9_8 [label="Entry string.Concat(string, string)", span="0-0", cluster="string.Concat(string, string)", file="ToSentenceCase.cs"];
m9_0 [label="Entry Humanizer.ToSentenceCase.Transform(string)", span="6-6", cluster="Humanizer.ToSentenceCase.Transform(string)", file="ToSentenceCase.cs"];
m9_1 [label="input.Length >= 1", span="8-8", cluster="Humanizer.ToSentenceCase.Transform(string)", file="ToSentenceCase.cs"];
m9_2 [label="return String.Concat(input.Substring(0, 1).ToUpper(), input.Substring(1));", span="9-9", cluster="Humanizer.ToSentenceCase.Transform(string)", file="ToSentenceCase.cs"];
m9_3 [label="return input.ToUpper();", span="11-11", cluster="Humanizer.ToSentenceCase.Transform(string)", file="ToSentenceCase.cs"];
m9_4 [label="Exit Humanizer.ToSentenceCase.Transform(string)", span="6-6", cluster="Humanizer.ToSentenceCase.Transform(string)", file="ToSentenceCase.cs"];
m9_6 [label="Entry string.ToUpper()", span="0-0", cluster="string.ToUpper()", file="ToSentenceCase.cs"];
m9_5 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="ToSentenceCase.cs"];
m9_7 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="ToSentenceCase.cs"];
m10_0 [label="Entry Humanizer.ToTitleCase.Transform(string)", span="6-6", cluster="Humanizer.ToTitleCase.Transform(string)", file="ToTitleCase.cs"];
m10_1 [label="return CultureInfo.CurrentCulture.TextInfo.ToTitleCase(input);", span="8-8", cluster="Humanizer.ToTitleCase.Transform(string)", file="ToTitleCase.cs"];
m10_2 [label="Exit Humanizer.ToTitleCase.Transform(string)", span="6-6", cluster="Humanizer.ToTitleCase.Transform(string)", file="ToTitleCase.cs"];
m10_3 [label="Entry System.Globalization.TextInfo.ToTitleCase(string)", span="0-0", cluster="System.Globalization.TextInfo.ToTitleCase(string)", file="ToTitleCase.cs"];
m11_0 [label="Entry Humanizer.ToUpperCase.Transform(string)", span="4-4", cluster="Humanizer.ToUpperCase.Transform(string)", file="ToUpperCase.cs"];
m11_1 [label="return input.ToUpper();", span="6-6", cluster="Humanizer.ToUpperCase.Transform(string)", file="ToUpperCase.cs"];
m11_2 [label="Exit Humanizer.ToUpperCase.Transform(string)", span="4-4", cluster="Humanizer.ToUpperCase.Transform(string)", file="ToUpperCase.cs"];
m11_3 [label="Entry string.ToUpper()", span="0-0", cluster="string.ToUpper()", file="ToUpperCase.cs"];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_0 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_0 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_0 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_0 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_0 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_4  [key=0, style=solid, color=red];
m0_1 -> m0_6  [key=0, style=solid];
m0_1 -> m0_8  [key=0, style=solid];
m0_1 -> m0_12  [key=0, style=solid];
m0_3 -> m0_13  [key=0, style=solid];
m0_3 -> m0_14  [key=2, style=dotted];
m0_5 -> m0_13  [key=0, style=solid];
m0_5 -> m0_15  [key=2, style=dotted];
m0_7 -> m0_13  [key=0, style=solid];
m0_7 -> m0_16  [key=2, style=dotted];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_11  [key=0, style=solid];
m0_10 -> m0_13  [key=0, style=solid];
m0_10 -> m0_17  [key=2, style=dotted];
m0_10 -> m0_16  [key=2, style=dotted];
m0_10 -> m0_18  [key=2, style=dotted];
m0_10 -> m0_19  [key=2, style=dotted];
m0_11 -> m0_13  [key=0, style=solid];
m0_11 -> m0_16  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_4 -> m0_5  [key=0, style=solid, color=red];
m0_6 -> m0_7  [key=0, style=solid];
m0_8 -> m0_9  [key=0, style=solid];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_20  [key=2, style=dotted];
m0_13 -> m0_0  [key=0, style=bold, color=blue];
m1_11 -> m1_12  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_3  [key=2, style=dotted];
m1_12 -> m1_4  [key=2, style=dotted];
m1_13 -> m1_11  [key=0, style=bold, color=blue];
m1_8 -> m1_9  [key=0, style=solid];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_3  [key=2, style=dotted];
m1_9 -> m1_4  [key=2, style=dotted];
m1_10 -> m1_8  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_1 -> m1_4  [key=2, style=dotted];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m1_5 -> m1_6  [key=0, style=solid, color=red];
m1_6 -> m1_7  [key=0, style=solid, color=red];
m1_6 -> m1_3  [key=2, style=dotted, color=red];
m1_6 -> m1_4  [key=2, style=dotted, color=red];
m1_7 -> m1_5  [key=0, style=bold, color=blue];
m2_15 -> m2_16  [key=0, style=solid];
m2_16 -> m2_4  [key=2, style=dotted];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_18  [key=2, style=dotted];
m2_16 -> m2_3  [key=2, style=dotted];
m2_17 -> m2_15  [key=0, style=bold, color=blue];
m2_12 -> m2_13  [key=0, style=solid, color=green];
m2_13 -> m2_14  [key=0, style=solid, color=green];
m2_13 -> m2_11  [key=2, style=dotted, color=green];
m2_13 -> m2_4  [key=2, style=dotted, color=green];
m2_14 -> m2_12  [key=0, style=bold, color=blue];
m2_8 -> m2_9  [key=0, style=solid];
m2_9 -> m2_11  [key=2, style=dotted];
m2_9 -> m2_4  [key=2, style=dotted];
m2_9 -> m2_10  [key=0, style=solid];
m2_10 -> m2_8  [key=0, style=bold, color=blue];
m2_5 -> m2_6  [key=0, style=solid];
m2_6 -> m2_4  [key=2, style=dotted];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_3  [key=2, style=dotted];
m2_3 -> m2_0  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_4  [key=2, style=dotted];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_1 -> m2_5  [key=2, style=dotted];
m2_1 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label=word];
m2_2 -> m2_0  [key=0, style=bold, color=blue];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_6  [key=2, style=dotted];
m2_7 -> m2_5  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid, color=green];
m4_1 -> m4_2  [key=0, style=solid, color=green];
m4_2 -> m4_3  [key=0, style=solid, color=green];
m4_2 -> m4_5  [key=2, style=dotted, color=green];
m4_3 -> m4_4  [key=0, style=solid, color=green];
m4_3 -> m4_6  [key=2, style=dotted, color=green];
m4_4 -> m4_0  [key=0, style=bold, color=blue];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_9  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_11  [key=2, style=dotted];
m6_7 -> m6_9  [key=1, style=dashed, color=darkseagreen4, label=utcNow];
m6_7 -> m6_23  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_5  [key=2, style=dotted];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_11  [key=2, style=dotted];
m6_10 -> m6_6  [key=0, style=bold, color=blue];
m6_5 -> m6_12  [key=0, style=solid];
m6_5 -> m6_13  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_15  [key=2, style=dotted];
m6_12 -> m6_16  [key=2, style=dotted];
m6_12 -> m6_17  [key=2, style=dotted];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_15  [key=2, style=dotted];
m6_13 -> m6_16  [key=2, style=dotted];
m6_13 -> m6_17  [key=2, style=dotted];
m6_14 -> m6_5  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label=utcNow];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_5  [key=2, style=dotted];
m6_2 -> m6_3  [key=0, style=solid];
m6_4 -> m6_0  [key=0, style=bold, color=blue];
m6_18 -> m6_19  [key=0, style=solid];
m6_18 -> m6_20  [key=1, style=dashed, color=darkseagreen4, label="double?"];
m6_18 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_18 -> m6_24  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.Tense"];
m6_18 -> m6_26  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.TimeUnit"];
m6_18 -> m6_41  [key=1, style=dashed, color=red, label="System.DateTime?"];
m6_18 -> m6_42  [key=1, style=dashed, color=red, label=string];
m6_18 -> m6_43  [key=1, style=dashed, color=red, label=string];
m6_18 -> m6_44  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_21  [key=0, style=solid];
m6_20 -> m6_22  [key=0, style=solid];
m6_20 -> m6_46  [key=2, style=dotted];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_49  [key=2, style=dotted];
m6_23 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_23 -> m6_25  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_23 -> m6_28  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_23 -> m6_30  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_23 -> m6_32  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_23 -> m6_34  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_23 -> m6_36  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_23 -> m6_38  [key=1, style=dashed, color=red, label=int];
m6_23 -> m6_40  [key=1, style=dashed, color=red, label=int];
m6_23 -> m6_7  [key=3, color=darkorchid, style=bold, label="method methodReturn string Humanize"];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_26  [key=0, style=solid];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_29  [key=0, style=solid];
m6_26 -> m6_31  [key=0, style=solid];
m6_26 -> m6_33  [key=0, style=solid];
m6_26 -> m6_35  [key=0, style=solid];
m6_26 -> m6_37  [key=0, style=solid];
m6_26 -> m6_39  [key=0, style=solid, color=red];
m6_41 -> m6_42  [key=0, style=solid, color=red];
m6_41 -> m6_44  [key=0, style=solid, color=red];
m6_42 -> m6_43  [key=0, style=solid, color=red];
m6_42 -> m6_0  [key=2, style=dotted, color=red];
m6_42 -> m6_23  [key=3, color=red, style=bold, label="Local variable string humanizedString"];
m6_43 -> m6_45  [key=0, style=solid, color=red];
m6_43 -> m6_6  [key=2, style=dotted, color=red];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_5  [key=2, style=dotted];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_47  [key=2, style=dotted];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_48  [key=2, style=dotted];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_25  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_25 -> m6_28  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_25 -> m6_30  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_25 -> m6_32  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_25 -> m6_34  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_25 -> m6_36  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_25 -> m6_38  [key=1, style=dashed, color=red, label=int];
m6_25 -> m6_40  [key=1, style=dashed, color=red, label=int];
m6_28 -> m6_41  [key=0, style=solid, color=red];
m6_28 -> m6_50  [key=2, style=dotted];
m6_30 -> m6_41  [key=0, style=solid, color=red];
m6_30 -> m6_51  [key=2, style=dotted];
m6_32 -> m6_41  [key=0, style=solid, color=red];
m6_32 -> m6_52  [key=2, style=dotted];
m6_34 -> m6_41  [key=0, style=solid, color=red];
m6_34 -> m6_53  [key=2, style=dotted];
m6_36 -> m6_41  [key=0, style=solid, color=red];
m6_36 -> m6_54  [key=2, style=dotted];
m6_36 -> m6_23  [key=3, color=darkorchid, style=bold, label="Local variable string humanizedString"];
m6_38 -> m6_41  [key=0, style=solid, color=red];
m6_38 -> m6_54  [key=2, style=dotted, color=red];
m6_40 -> m6_41  [key=0, style=solid, color=red];
m6_40 -> m6_54  [key=2, style=dotted, color=red];
m6_40 -> m6_42  [key=1, style=dashed, color=red, label=deltaFromNow];
m6_40 -> m6_43  [key=1, style=dashed, color=red, label=deltaFromNow];
m6_40 -> m6_44  [key=1, style=dashed, color=red, label=deltaFromNow];
m6_27 -> m6_28  [key=0, style=solid];
m6_29 -> m6_30  [key=0, style=solid];
m6_31 -> m6_32  [key=0, style=solid];
m6_33 -> m6_34  [key=0, style=solid];
m6_35 -> m6_36  [key=0, style=solid];
m6_37 -> m6_38  [key=0, style=solid, color=red];
m6_39 -> m6_40  [key=0, style=solid, color=red];
m6_45 -> m6_18  [key=0, style=bold, color=blue];
m7_3 -> m7_3  [key=3, color=green, style=bold, label="Field variable string ByteSymbol"];
m7_49 -> m7_50  [key=0, style=solid];
m7_50 -> m7_51  [key=0, style=solid];
m7_50 -> m7_44  [key=2, style=dotted];
m7_50 -> m7_4  [key=2, style=dotted];
m7_51 -> m7_49  [key=0, style=bold, color=blue];
m7_61 -> m7_62  [key=0, style=solid, color=green];
m7_62 -> m7_63  [key=0, style=solid, color=green];
m7_62 -> m7_44  [key=2, style=dotted, color=green];
m7_62 -> m7_4  [key=2, style=dotted, color=green];
m7_63 -> m7_61  [key=0, style=bold, color=blue];
m7_38 -> m7_39  [key=0, style=solid];
m7_39 -> m7_40  [key=0, style=solid];
m7_39 -> m7_3  [key=2, style=dotted];
m7_39 -> m7_4  [key=2, style=dotted];
m7_40 -> m7_38  [key=0, style=bold, color=blue];
m7_52 -> m7_53  [key=0, style=solid, color=green];
m7_53 -> m7_54  [key=0, style=solid, color=green];
m7_53 -> m7_44  [key=2, style=dotted, color=green];
m7_53 -> m7_4  [key=2, style=dotted, color=green];
m7_54 -> m7_52  [key=0, style=bold, color=blue];
m7_70 -> m7_71  [key=0, style=solid, color=red];
m7_71 -> m7_72  [key=0, style=solid, color=red];
m7_71 -> m7_44  [key=2, style=dotted, color=red];
m7_71 -> m7_4  [key=2, style=dotted, color=red];
m7_71 -> m7_77  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m7_72 -> m7_70  [key=0, style=bold, color=blue];
m7_26 -> m7_27  [key=0, style=solid];
m7_27 -> m7_28  [key=0, style=solid];
m7_27 -> m7_3  [key=2, style=dotted];
m7_27 -> m7_4  [key=2, style=dotted];
m7_28 -> m7_26  [key=0, style=bold, color=blue];
m7_55 -> m7_56  [key=0, style=solid, color=red];
m7_56 -> m7_57  [key=0, style=solid, color=red];
m7_56 -> m7_44  [key=2, style=dotted, color=red];
m7_56 -> m7_4  [key=2, style=dotted, color=red];
m7_57 -> m7_55  [key=0, style=bold, color=blue];
m7_5 -> m7_6  [key=0, style=solid];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_3  [key=2, style=dotted];
m7_6 -> m7_4  [key=2, style=dotted];
m7_7 -> m7_5  [key=0, style=bold, color=blue];
m7_8 -> m7_9  [key=0, style=solid];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_3  [key=2, style=dotted];
m7_9 -> m7_4  [key=2, style=dotted];
m7_10 -> m7_8  [key=0, style=bold, color=blue];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> m7_14  [key=3, color=green, style=bold, label="Field variable long BitsInByte"];
m7_15 -> m7_16  [key=0, style=solid];
m7_15 -> m7_3  [key=2, style=dotted];
m7_15 -> m7_4  [key=2, style=dotted];
m7_15 -> m7_15  [key=3, color=green, style=bold, label="Field variable long BytesInTerabyte"];
m7_16 -> m7_14  [key=0, style=bold, color=blue];
m7_20 -> m7_21  [key=0, style=solid];
m7_21 -> m7_22  [key=0, style=solid];
m7_21 -> m7_3  [key=2, style=dotted];
m7_21 -> m7_4  [key=2, style=dotted];
m7_21 -> m7_17  [key=3, color=green, style=bold, label="Property variable string LargestWholeNumberSymbol"];
m7_21 -> m7_18  [key=3, color=green, style=bold, label="Property variable string LargestWholeNumberSymbol"];
m7_22 -> m7_20  [key=0, style=bold, color=blue];
m7_23 -> m7_24  [key=0, style=solid];
m7_24 -> m7_25  [key=0, style=solid];
m7_24 -> m7_3  [key=2, style=dotted];
m7_24 -> m7_4  [key=2, style=dotted];
m7_25 -> m7_23  [key=0, style=bold, color=blue];
m7_64 -> m7_65  [key=0, style=solid, color=red];
m7_65 -> m7_66  [key=0, style=solid, color=red];
m7_65 -> m7_48  [key=2, style=dotted, color=red];
m7_65 -> m7_4  [key=2, style=dotted, color=red];
m7_66 -> m7_64  [key=0, style=bold, color=blue];
m7_79 -> m7_80  [key=0, style=solid];
m7_80 -> m7_81  [key=0, style=solid];
m7_80 -> m7_44  [key=2, style=dotted];
m7_80 -> m7_4  [key=2, style=dotted];
m7_81 -> m7_79  [key=0, style=bold, color=blue];
m7_76 -> m7_77  [key=0, style=solid, color=red];
m7_77 -> m7_78  [key=0, style=solid, color=red];
m7_77 -> m7_48  [key=2, style=dotted, color=red];
m7_77 -> m7_4  [key=2, style=dotted, color=red];
m7_78 -> m7_76  [key=0, style=bold, color=blue];
m7_32 -> m7_33  [key=0, style=solid];
m7_33 -> m7_34  [key=0, style=solid];
m7_33 -> m7_3  [key=2, style=dotted];
m7_33 -> m7_4  [key=2, style=dotted];
m7_34 -> m7_32  [key=0, style=bold, color=blue];
m7_58 -> m7_59  [key=0, style=solid, color=red];
m7_59 -> m7_60  [key=0, style=solid, color=red];
m7_59 -> m7_48  [key=2, style=dotted, color=red];
m7_59 -> m7_4  [key=2, style=dotted, color=red];
m7_60 -> m7_58  [key=0, style=bold, color=blue];
m7_45 -> m7_46  [key=0, style=solid, color=red];
m7_46 -> m7_47  [key=0, style=solid, color=red];
m7_46 -> m7_48  [key=2, style=dotted, color=red];
m7_46 -> m7_4  [key=2, style=dotted, color=red];
m7_47 -> m7_45  [key=0, style=bold, color=blue];
m7_17 -> m7_18  [key=0, style=solid];
m7_17 -> m7_17  [key=3, color=green, style=bold, label="Field variable string KilobyteSymbol"];
m7_18 -> m7_19  [key=0, style=solid];
m7_18 -> m7_3  [key=2, style=dotted];
m7_18 -> m7_4  [key=2, style=dotted];
m7_18 -> m7_18  [key=3, color=green, style=bold, label="Field variable string TerabyteSymbol"];
m7_19 -> m7_17  [key=0, style=bold, color=blue];
m7_73 -> m7_74  [key=0, style=solid];
m7_74 -> m7_75  [key=0, style=solid];
m7_74 -> m7_44  [key=2, style=dotted];
m7_74 -> m7_4  [key=2, style=dotted];
m7_75 -> m7_73  [key=0, style=bold, color=blue];
m7_11 -> m7_12  [key=0, style=solid];
m7_12 -> m7_13  [key=0, style=solid];
m7_12 -> m7_3  [key=2, style=dotted];
m7_12 -> m7_4  [key=2, style=dotted];
m7_13 -> m7_11  [key=0, style=bold, color=blue];
m7_35 -> m7_36  [key=0, style=solid];
m7_36 -> m7_37  [key=0, style=solid];
m7_36 -> m7_3  [key=2, style=dotted];
m7_36 -> m7_4  [key=2, style=dotted];
m7_37 -> m7_35  [key=0, style=bold, color=blue];
m7_82 -> m7_83  [key=0, style=solid, color=red];
m7_83 -> m7_84  [key=0, style=solid, color=red];
m7_83 -> m7_48  [key=2, style=dotted, color=red];
m7_83 -> m7_4  [key=2, style=dotted, color=red];
m7_84 -> m7_82  [key=0, style=bold, color=blue];
m7_41 -> m7_42  [key=0, style=solid];
m7_42 -> m7_43  [key=0, style=solid];
m7_42 -> m7_44  [key=2, style=dotted];
m7_42 -> m7_4  [key=2, style=dotted];
m7_43 -> m7_41  [key=0, style=bold, color=blue];
m7_67 -> m7_68  [key=0, style=solid];
m7_68 -> m7_69  [key=0, style=solid];
m7_68 -> m7_44  [key=2, style=dotted];
m7_68 -> m7_4  [key=2, style=dotted];
m7_69 -> m7_67  [key=0, style=bold, color=blue];
m7_29 -> m7_30  [key=0, style=solid];
m7_30 -> m7_31  [key=0, style=solid];
m7_30 -> m7_3  [key=2, style=dotted];
m7_30 -> m7_4  [key=2, style=dotted];
m7_30 -> m7_20  [key=3, color=green, style=bold, label="Property variable double LargestWholeNumberValue"];
m7_30 -> m7_21  [key=3, color=green, style=bold, label="Property variable double LargestWholeNumberValue"];
m7_31 -> m7_29  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_3  [key=2, style=dotted];
m7_1 -> m7_4  [key=2, style=dotted];
m7_2 -> m7_0  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_3  [key=2, style=dotted];
m8_2 -> m8_0  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_0 -> m9_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_0 -> m9_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_3  [key=0, style=solid];
m9_2 -> m9_4  [key=0, style=solid];
m9_2 -> m9_5  [key=2, style=dotted];
m9_2 -> m9_6  [key=2, style=dotted];
m9_2 -> m9_7  [key=2, style=dotted];
m9_2 -> m9_8  [key=2, style=dotted];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_6  [key=2, style=dotted];
m9_4 -> m9_0  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_3  [key=2, style=dotted];
m10_2 -> m10_0  [key=0, style=bold, color=blue];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_3  [key=2, style=dotted];
m11_2 -> m11_0  [key=0, style=bold, color=blue];
}
