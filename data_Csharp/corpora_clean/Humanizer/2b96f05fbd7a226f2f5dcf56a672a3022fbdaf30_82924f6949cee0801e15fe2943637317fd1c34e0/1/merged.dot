digraph  {
n0 [label="Entry CommandLine.Tests.Unit.Core.TokenTests.Equality()", span="16-16", cluster="CommandLine.Tests.Unit.Core.TokenTests.Equality()"];
n1 [label="Assert.True(Token.Name(''nametok'').Equals(Token.Name(''nametok'')))", span="18-18", cluster="CommandLine.Tests.Unit.Core.TokenTests.Equality()"];
n2 [label="Exit CommandLine.Tests.Unit.Core.TokenTests.Equality()", span="16-16", cluster="CommandLine.Tests.Unit.Core.TokenTests.Equality()"];
n3 [label="Entry CommandLine.Core.Token.Name(string)", span="19-19", cluster="CommandLine.Core.Token.Name(string)"];
n4 [label="Entry CommandLine.Core.Token.Equals(CommandLine.Core.Token)", span="55-55", cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)"];
n5 [label="Entry Unk.True", span="", cluster="Unk.True"];
m0_11 [label="Entry Humanizer.Localisation.ArabicFormatter.ArabicFormatter()", span="2-2", cluster="Humanizer.Localisation.ArabicFormatter.ArabicFormatter()", file="NumberToWordsExtension.cs"];
m0_3 [label="Entry Humanizer.Localisation.RomanianFormatter.RomanianFormatter()", span="2-2", cluster="Humanizer.Localisation.RomanianFormatter.RomanianFormatter()", file="NumberToWordsExtension.cs"];
m0_7 [label="Entry Humanizer.Localisation.RussianFormatter.RussianFormatter()", span="2-2", cluster="Humanizer.Localisation.RussianFormatter.RussianFormatter()", file="NumberToWordsExtension.cs"];
m0_16 [label="Entry lambda expression", span="19-19", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m0_0 [label="Entry lambda expression", span="15-15", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m0_1 [label="new RomanianFormatter()", span="15-15", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m0_2 [label="Exit lambda expression", span="15-15", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m0_4 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m0_5 [label="new RussianFormatter()", span="16-16", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m0_6 [label="Exit lambda expression", span="16-16", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m0_8 [label="Entry lambda expression", span="17-17", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m0_9 [label="new ArabicFormatter()", span="17-17", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m0_10 [label="Exit lambda expression", span="17-17", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m0_12 [label="Entry lambda expression", span="18-18", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m0_13 [label="new SlovakFormatter()", span="18-18", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m0_14 [label="Exit lambda expression", span="18-18", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m0_17 [label="new CzechFormatter()", span="19-19", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m0_18 [label="Exit lambda expression", span="19-19", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m0_19 [label="Entry Humanizer.Localisation.CzechFormatter.CzechFormatter()", span="2-2", cluster="Humanizer.Localisation.CzechFormatter.CzechFormatter()", file="NumberToWordsExtension.cs"];
m0_15 [label="Entry Humanizer.Localisation.SlovakFormatter.SlovakFormatter()", span="2-2", cluster="Humanizer.Localisation.SlovakFormatter.SlovakFormatter()", file="NumberToWordsExtension.cs"];
m2_10 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="SlovenianFormatter.cs"];
m2_13 [label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71", cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="SlovenianFormatter.cs"];
m2_11 [label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66", cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="SlovenianFormatter.cs"];
m2_14 [label="Entry CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", span="28-28", cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", file="SlovenianFormatter.cs"];
m2_16 [label="var result = Switch.Partition(\r\n                new []\r\n                    {\r\n                        Token.Name(''str''), Token.Value(''strvalue''), Token.Value(''freevalue''),\r\n                        Token.Name(''x''), Token.Value(''freevalue2'')\r\n                    },\r\n                name =>\r\n                    new[] { ''x'', ''switch'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TypeDescriptorKind.Boolean, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>())", span="32-41", cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", file="SlovenianFormatter.cs"];
m2_17 [label="expected.ShouldAllBeEquivalentTo(result)", span="43-43", cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", file="SlovenianFormatter.cs"];
m2_15 [label="var expected = new [] { Token.Name(''x'') }", span="30-30", cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", file="SlovenianFormatter.cs"];
m2_18 [label="Exit CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", span="28-28", cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", file="SlovenianFormatter.cs"];
m2_12 [label="Entry CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TypeDescriptorKind, CommandLine.Infrastructure.Maybe<int>)", span="36-36", cluster="CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TypeDescriptorKind, CommandLine.Infrastructure.Maybe<int>)", file="SlovenianFormatter.cs"];
m2_5 [label="Entry CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11", cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="SlovenianFormatter.cs"];
m2_21 [label="Entry lambda expression", span="38-41", cluster="lambda expression", file="SlovenianFormatter.cs"];
m2_7 [label="Entry lambda expression", span="19-22", cluster="lambda expression", file="SlovenianFormatter.cs"];
m2_9 [label="Exit lambda expression", span="19-22", cluster="lambda expression", file="SlovenianFormatter.cs"];
m2_8 [label="new[] { ''x'', ''switch'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TypeDescriptorKind.Boolean, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>()", span="20-22", cluster="lambda expression", file="SlovenianFormatter.cs"];
m2_22 [label="new[] { ''x'', ''switch'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TypeDescriptorKind.Boolean, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>()", span="39-41", cluster="lambda expression", file="SlovenianFormatter.cs"];
m2_23 [label="Exit lambda expression", span="38-41", cluster="lambda expression", file="SlovenianFormatter.cs"];
m2_0 [label="Entry CommandLine.ValueAttribute.ValueAttribute(int)", span="17-17", cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="SlovenianFormatter.cs"];
m2_1 [label="this.index = index", span="19-19", cluster="CommandLine.ValueAttribute.ValueAttribute(int)", color=green, community=0, file="SlovenianFormatter.cs"];
m2_2 [label="Exit CommandLine.ValueAttribute.ValueAttribute(int)", span="17-17", cluster="CommandLine.ValueAttribute.ValueAttribute(int)", color=green, community=0, file="SlovenianFormatter.cs"];
m2_3 [label="CommandLine.ValueAttribute", span="", cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values_from_empty_token_sequence()", file="SlovenianFormatter.cs"];
m2_4 [label="Exit CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values_from_empty_token_sequence()", span="13-13", cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values_from_empty_token_sequence()", file="SlovenianFormatter.cs"];
m2_20 [label="Entry CommandLine.Core.Token.Value(string)", span="24-24", cluster="CommandLine.Core.Token.Value(string)", file="SlovenianFormatter.cs"];
m2_6 [label="Entry Unk.ShouldAllBeEquivalentTo", span="", cluster="Unk.ShouldAllBeEquivalentTo", file="SlovenianFormatter.cs"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=2, style=dotted];
n1 -> n4  [key=2, style=dotted];
n1 -> n5  [key=2, style=dotted];
n2 -> n0  [key=0, style=bold, color=blue];
m0_16 -> m0_17  [key=0, style=solid];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=2, style=dotted];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_7  [key=2, style=dotted];
m0_6 -> m0_4  [key=0, style=bold, color=blue];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_11  [key=2, style=dotted];
m0_10 -> m0_8  [key=0, style=bold, color=blue];
m0_12 -> m0_13  [key=0, style=solid];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_15  [key=2, style=dotted];
m0_14 -> m0_12  [key=0, style=bold, color=blue];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_19  [key=2, style=dotted];
m0_18 -> m0_16  [key=0, style=bold, color=blue];
m2_14 -> m2_15  [key=0, style=solid];
m2_16 -> m2_5  [key=2, style=dotted];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> n3  [key=2, style=dotted];
m2_16 -> m2_20  [key=2, style=dotted];
m2_16 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_17 -> m2_6  [key=2, style=dotted];
m2_17 -> m2_18  [key=0, style=solid];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_17  [key=1, style=dashed, color=darkseagreen4, label=expected];
m2_15 -> n3  [key=2, style=dotted];
m2_18 -> m2_14  [key=0, style=bold, color=blue];
m2_21 -> m2_22  [key=0, style=solid];
m2_7 -> m2_8  [key=0, style=solid];
m2_9 -> m2_7  [key=0, style=bold, color=blue];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_10  [key=2, style=dotted];
m2_8 -> m2_11  [key=2, style=dotted];
m2_8 -> m2_12  [key=2, style=dotted];
m2_8 -> m2_13  [key=2, style=dotted];
m2_22 -> m2_10  [key=2, style=dotted];
m2_22 -> m2_11  [key=2, style=dotted];
m2_22 -> m2_12  [key=2, style=dotted];
m2_22 -> m2_13  [key=2, style=dotted];
m2_22 -> m2_23  [key=0, style=solid];
m2_23 -> m2_21  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid, color=green];
m2_1 -> m2_2  [key=0, style=solid, color=green];
m2_1 -> m2_3  [key=1, style=dashed, color=green, label=expected];
m2_2 -> m2_3  [key=0, style=solid, color=green];
m2_2 -> m2_5  [key=2, style=dotted, color=green];
m2_2 -> m2_7  [key=1, style=dashed, color=green, label="lambda expression"];
m2_2 -> m2_0  [key=0, style=bold, color=blue];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_6  [key=2, style=dotted];
m2_3 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ValueAttribute"];
m2_4 -> m2_0  [key=0, style=bold, color=blue];
}
