digraph  {
m1_9 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="DateHumanizeTests.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="17-17"];
m1_35 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="DateHumanizeTests.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m1_48 [cluster="CommandLine.Core.Specification.IsOption()", file="DateHumanizeTests.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="11-11"];
m1_0 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="11-11"];
m1_1 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", color=red, community=0, file="DateHumanizeTests.cs", label="2: return specification.Tag == SpecificationType.Option;", span="13-13"];
m1_2 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="11-11"];
m1_16 [cluster="Unk.Any", file="DateHumanizeTests.cs", label="Entry Unk.Any", span=""];
m1_21 [cluster="System.Func<T, TResult>.Invoke(T)", file="DateHumanizeTests.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m1_22 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", span="51-51"];
m1_23 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", color=red, community=0, file="DateHumanizeTests.cs", label="0: specification == null", span="53-53"];
m1_25 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", color=red, community=0, file="DateHumanizeTests.cs", label="0: specification.ConversionType.ToDescriptorKind()", span="55-55"];
m1_29 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="var min = specification.Min", span="60-60"];
m1_30 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="var max = specification.Max", span="61-61"];
m1_24 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", color=red, community=0, file="DateHumanizeTests.cs", label="0: throw new ArgumentNullException(''specification'');", span="53-53"];
m1_26 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="TypeDescriptorKind.Scalar", span="57-57"];
m1_28 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="TypeDescriptorKind.Sequence", span="59-59"];
m1_27 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="return  Maybe.Just(1);", span="58-58"];
m1_31 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="min >= 0 && max >= 0", span="62-62"];
m1_32 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", color=red, community=0, file="DateHumanizeTests.cs", label="0: return Maybe.Just(max);", span="64-64"];
m1_33 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="return Maybe.Nothing<int>();", span="69-69"];
m1_34 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", span="51-51"];
m1_3 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="16-16"];
m1_4 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="return specification.Tag == SpecificationType.Value;", span="18-18"];
m1_5 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="16-16"];
m1_37 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="DateHumanizeTests.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71"];
m1_38 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="DateHumanizeTests.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66"];
m1_39 [cluster="CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", span="72-72"];
m1_40 [cluster="CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="return specification.Min == -1;", span="74-74"];
m1_41 [cluster="CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", span="72-72"];
m1_45 [cluster="CommandLine.Core.SpecificationExtensions.GetSetName(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.GetSetName(CommandLine.Core.Specification)", span="82-82"];
m1_46 [cluster="CommandLine.Core.SpecificationExtensions.GetSetName(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="return specification.IsOption()\r\n                ? ((OptionSpecification)specification).SetName\r\n                : string.Empty;", span="84-86"];
m1_47 [cluster="CommandLine.Core.SpecificationExtensions.GetSetName(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.GetSetName(CommandLine.Core.Specification)", span="82-82"];
m1_42 [cluster="CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", span="77-77"];
m1_43 [cluster="CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="return specification.Max == -1;", span="79-79"];
m1_44 [cluster="CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", span="77-77"];
m1_36 [cluster="System.Type.ToDescriptorKind()", file="DateHumanizeTests.cs", label="Entry System.Type.ToDescriptorKind()", span="22-22"];
m1_17 [cluster="System.ApplicationException.ApplicationException(string)", file="DateHumanizeTests.cs", label="Entry System.ApplicationException.ApplicationException(string)", span="0-0"];
m1_18 [cluster="lambda expression", file="DateHumanizeTests.cs", label="Entry lambda expression", span="42-42"];
m1_19 [cluster="lambda expression", file="DateHumanizeTests.cs", label="guard.Item1(spec)", span="42-42"];
m1_20 [cluster="lambda expression", file="DateHumanizeTests.cs", label="Exit lambda expression", span="42-42"];
m1_10 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="DateHumanizeTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="38-38"];
m1_11 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="DateHumanizeTests.cs", label=guardsLookup, span="40-40"];
m1_12 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="DateHumanizeTests.cs", label="specifications.Any(spec => guard.Item1(spec))", span="42-42"];
m1_14 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="DateHumanizeTests.cs", label="return specifications;", span="48-48"];
m1_13 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", color=red, community=0, file="DateHumanizeTests.cs", label="0: throw new ApplicationException(guard.Item2);", span="44-44"];
m1_15 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="DateHumanizeTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="38-38"];
m1_6 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", file="DateHumanizeTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", span="21-21"];
m1_7 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", color=red, community=0, file="DateHumanizeTests.cs", label="0: return new OptionSpecification(\r\n                specification.ShortName,\r\n                newLongName,\r\n                specification.Required,\r\n                specification.SetName,\r\n                specification.Min,\r\n                specification.Max,\r\n                specification.Separator,\r\n                specification.DefaultValue,\r\n                specification.ConversionType,\r\n                specification.HelpText,\r\n                specification.MetaValue,\r\n                enumValues);", span="23-35"];
m1_8 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", file="DateHumanizeTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", span="21-21"];
m1_49 [file="DateHumanizeTests.cs", label=guard, span=""];
m2_37 [cluster="string.Humanize()", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry string.Humanize()", span="42-42"];
m2_31 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m2_19 [cluster="Unk.All", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry Unk.All", span=""];
m2_32 [cluster="System.Func<T, TResult>.Invoke(T)", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m2_4 [cluster="string.Join(string, params string[])", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m2_53 [cluster="string.ToUpper()", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry string.ToUpper()", span="0-0"];
m2_54 [cluster="string.Substring(int, int)", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry string.Substring(int, int)", span="0-0"];
m2_12 [cluster="Unk.Aggregate", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry Unk.Aggregate", span=""];
m2_52 [cluster="System.Globalization.TextInfo.ToTitleCase(string)", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry System.Globalization.TextInfo.ToTitleCase(string)", span="0-0"];
m2_14 [cluster="Unk.Substring", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry Unk.Substring", span=""];
m2_56 [cluster="string.Concat(string, string)", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry string.Concat(string, string)", span="0-0"];
m2_24 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry Humanizer.StringHumanizeExtensions.Humanize(string)", span="42-42"];
m2_25 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="DefaultDateTimeHumanizeStrategy.cs", label="input.All(Char.IsUpper)", span="45-45"];
m2_26 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="DefaultDateTimeHumanizeStrategy.cs", label="return input;", span="46-46"];
m2_27 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="DefaultDateTimeHumanizeStrategy.cs", label="input.Contains('_') || input.Contains('-')", span="48-48"];
m2_28 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="DefaultDateTimeHumanizeStrategy.cs", label="return FromUnderscoreDashSeparatedWords(input);", span="49-49"];
m2_29 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="DefaultDateTimeHumanizeStrategy.cs", label="return FromPascalCase(input);", span="51-51"];
m2_30 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="DefaultDateTimeHumanizeStrategy.cs", label="Exit Humanizer.StringHumanizeExtensions.Humanize(string)", span="42-42"];
m2_21 [cluster="lambda expression", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry lambda expression", span="30-30"];
m2_0 [cluster="lambda expression", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry lambda expression", span="9-9"];
m2_1 [cluster="lambda expression", file="DefaultDateTimeHumanizeStrategy.cs", label="string.Join('' '', methodName.Split(new[] { '_', '-' }))", span="9-9"];
m2_2 [cluster="lambda expression", file="DefaultDateTimeHumanizeStrategy.cs", label="Exit lambda expression", span="9-9"];
m2_16 [cluster="lambda expression", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry lambda expression", span="26-29"];
m2_17 [cluster="lambda expression", file="DefaultDateTimeHumanizeStrategy.cs", label="word.All(Char.IsUpper) && word.Length > 1\r\n                        ? word\r\n                        : word.ToLower()", span="27-29"];
m2_18 [cluster="lambda expression", file="DefaultDateTimeHumanizeStrategy.cs", label="Exit lambda expression", span="26-29"];
m2_22 [cluster="lambda expression", file="DefaultDateTimeHumanizeStrategy.cs", label="res + '' '' + word", span="30-30"];
m2_23 [cluster="lambda expression", file="DefaultDateTimeHumanizeStrategy.cs", label="Exit lambda expression", span="30-30"];
m2_57 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m2_11 [cluster="Unk.Select", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry Unk.Select", span=""];
m2_3 [cluster="string.Split(params char[])", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry string.Split(params char[])", span="0-0"];
m2_33 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", span="60-60"];
m2_34 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs", label="var humanizedString = input.Humanize()", span="62-62"];
m2_35 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs", label="return ApplyCase(humanizedString, casing);", span="64-64"];
m2_36 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs", label="Exit Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", span="60-60"];
m2_15 [cluster="Unk.Replace", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry Unk.Replace", span=""];
m2_38 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", span="73-73"];
m2_39 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs", label=casing, span="75-75"];
m2_41 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs", label="return CultureInfo.CurrentCulture.TextInfo.ToTitleCase(input);", span="78-78"];
m2_43 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs", label="return input.ToLower();", span="81-81"];
m2_45 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs", label="return input.ToUpper();", span="84-84"];
m2_47 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs", label="input.Length >= 1", span="87-87"];
m2_48 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs", label="return string.Concat(input.Substring(0, 1).ToUpper(), input.Substring(1));", span="88-88"];
m2_49 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs", label="return input.ToUpper();", span="90-90"];
m2_40 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs", label="LetterCasing.Title", span="77-77"];
m2_42 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs", label="LetterCasing.LowerCase", span="80-80"];
m2_44 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs", label="LetterCasing.AllCaps", span="83-83"];
m2_46 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs", label="LetterCasing.Sentence", span="86-86"];
m2_50 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs", label="throw new ArgumentOutOfRangeException(''casing'');", span="93-93"];
m2_51 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs", label="Exit Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", span="73-73"];
m2_5 [cluster="Humanizer.StringHumanizeExtensions.FromPascalCase(string)", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry Humanizer.StringHumanizeExtensions.FromPascalCase(string)", span="22-22"];
m2_6 [cluster="Humanizer.StringHumanizeExtensions.FromPascalCase(string)", file="DefaultDateTimeHumanizeStrategy.cs", label="var result = PascalCaseWordBoundaryRegex\r\n                .Split(name)\r\n                .Select(word =>\r\n                    word.All(Char.IsUpper) && word.Length > 1\r\n                        ? word\r\n                        : word.ToLower())\r\n                .Aggregate((res, word) => res + '' '' + word)", span="24-30"];
m2_7 [cluster="Humanizer.StringHumanizeExtensions.FromPascalCase(string)", file="DefaultDateTimeHumanizeStrategy.cs", label="result = Char.ToUpper(result[0]) +\r\n                result.Substring(1, result.Length - 1)", span="32-33"];
m2_8 [cluster="Humanizer.StringHumanizeExtensions.FromPascalCase(string)", file="DefaultDateTimeHumanizeStrategy.cs", label="return result.Replace('' i '', '' I '');", span="34-34"];
m2_9 [cluster="Humanizer.StringHumanizeExtensions.FromPascalCase(string)", file="DefaultDateTimeHumanizeStrategy.cs", label="Exit Humanizer.StringHumanizeExtensions.FromPascalCase(string)", span="22-22"];
m2_13 [cluster="Unk.ToUpper", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry Unk.ToUpper", span=""];
m2_10 [cluster="System.Text.RegularExpressions.Regex.Split(string)", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry System.Text.RegularExpressions.Regex.Split(string)", span="0-0"];
m2_20 [cluster="string.ToLower()", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry string.ToLower()", span="0-0"];
m2_55 [cluster="string.Substring(int)", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry string.Substring(int)", span="0-0"];
m4_0 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="Entry Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", span="33-33"];
m4_23 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", color=green, community=0, file="DutchNumberToWordsConverter.cs", label="0: word += units + (trema ? ''�n'' : ''en'') + tens", span="72-72"];
m4_18 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="var tens = TensMap[number / 10]", span="66-66"];
m4_5 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="var word = ''''", span="41-41"];
m4_10 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="word += m.Name", span="51-51"];
m4_11 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="word += Convert(divided) + m.Prefix + m.Name", span="53-53"];
m4_14 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="word += m.Postfix", span="57-57"];
m4_21 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="var units = UnitsMap[unit]", span="70-70"];
m4_22 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="var trema = units.EndsWith(''e'')", span="71-71"];
m4_25 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="return word;", span="79-79"];
m4_12 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="number %= m.Value", span="55-55"];
m4_16 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="number < 20", span="62-62"];
m4_19 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="var unit = number % 10", span="67-67"];
m4_24 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="word += tens", span="75-75"];
m4_3 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="number < 0", span="38-38"];
m4_6 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label=Hunderds, span="43-43"];
m4_17 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="word += UnitsMap[number]", span="63-63"];
m4_9 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="divided == 1 && !m.DisplayOneUnit", span="50-50"];
m4_7 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="var divided = number / m.Value", span="45-45"];
m4_13 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="number > 0", span="56-56"];
m4_20 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="unit > 0", span="68-68"];
m4_15 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="number > 0", span="60-60"];
m4_4 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="return string.Format(''min {0}'', Convert(-number));", span="39-39"];
m4_1 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="number == 0", span="35-35"];
m4_8 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="divided <= 0", span="47-47"];
m4_2 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="return UnitsMap[0];", span="36-36"];
m4_26 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="Exit Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", span="33-33"];
m4_28 [cluster="string.EndsWith(string)", file="DutchNumberToWordsConverter.cs", label="Entry string.EndsWith(string)", span="0-0"];
m4_27 [cluster="string.Format(string, object)", file="DutchNumberToWordsConverter.cs", label="Entry string.Format(string, object)", span="0-0"];
m4_38 [cluster="Unk.Substring", file="DutchNumberToWordsConverter.cs", label="Entry Unk.Substring", span=""];
m4_29 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="DutchNumberToWordsConverter.cs", label="Entry Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", span="91-91"];
m4_30 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="DutchNumberToWordsConverter.cs", label="var word = Convert(number)", span="93-93"];
m4_31 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="DutchNumberToWordsConverter.cs", label="OrdinalExceptions.Where(kv => word.EndsWith(kv.Key))", span="95-95"];
m4_32 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="DutchNumberToWordsConverter.cs", label="return word.Substring(0, word.Length - kv.Key.Length) + kv.Value;", span="98-98"];
m4_33 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="DutchNumberToWordsConverter.cs", label="word.LastIndexOfAny(EndingCharForSte) == (word.Length - 1)", span="104-104"];
m4_34 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="DutchNumberToWordsConverter.cs", label="return word + ''ste'';", span="105-105"];
m4_35 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="DutchNumberToWordsConverter.cs", label="return word + ''de'';", span="107-107"];
m4_36 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="DutchNumberToWordsConverter.cs", label="Exit Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", span="91-91"];
m4_39 [cluster="string.LastIndexOfAny(char[])", file="DutchNumberToWordsConverter.cs", label="Entry string.LastIndexOfAny(char[])", span="0-0"];
m4_40 [cluster="lambda expression", file="DutchNumberToWordsConverter.cs", label="Entry lambda expression", span="95-95"];
m4_41 [cluster="lambda expression", file="DutchNumberToWordsConverter.cs", label="word.EndsWith(kv.Key)", span="95-95"];
m4_42 [cluster="lambda expression", file="DutchNumberToWordsConverter.cs", label="Exit lambda expression", span="95-95"];
m4_37 [cluster="Unk.Where", file="DutchNumberToWordsConverter.cs", label="Entry Unk.Where", span=""];
m4_43 [file="DutchNumberToWordsConverter.cs", label="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter", span=""];
m4_44 [file="DutchNumberToWordsConverter.cs", label=word, span=""];
m6_4 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="FixedLengthTruncator.cs", label="return value;", span="13-13"];
m6_5 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", color=green, community=0, file="FixedLengthTruncator.cs", label="0: truncationString == null || truncationString.Length > length", span="15-15"];
m6_6 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", color=red, community=0, file="FixedLengthTruncator.cs", label="2: return value.Substring(0, length);", span="16-16"];
m6_8 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="FixedLengthTruncator.cs", label="Exit Humanizer.FixedLengthTruncator.Truncate(string, int, string)", span="7-7"];
m6_9 [cluster="string.Substring(int, int)", color=green, community=0, file="FixedLengthTruncator.cs", label="0: Entry string.Substring(int, int)", span="0-0"];
m6_10 [cluster="Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", file="FixedLengthTruncator.cs", label="Exit Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", span="25-25"];
m6_7 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", color=red, community=0, file="FixedLengthTruncator.cs", label="3: return value.Length > length ? value.Substring(0, length - truncationString.Length) + truncationString : value;", span="18-18"];
m6_0 [cluster="Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", file="FixedLengthTruncator.cs", label="Entry Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", span="5-5"];
m6_1 [cluster="Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", color=green, community=0, file="FixedLengthTruncator.cs", label="0: return new DateTime(date.Year, date.Month, date.Day, hour, min, second, millisecond);", span="7-7"];
m6_3 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, int)", file="FixedLengthTruncator.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int)", span="0-0"];
m6_2 [cluster="Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", file="FixedLengthTruncator.cs", label="Exit Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", span="5-5"];
m6_11 [cluster="Humanizer.PrepositionsExtensions.In(System.DateTime, int)", file="FixedLengthTruncator.cs", label="Entry Humanizer.PrepositionsExtensions.In(System.DateTime, int)", span="36-36"];
m6_12 [cluster="Humanizer.PrepositionsExtensions.In(System.DateTime, int)", file="FixedLengthTruncator.cs", label="return new DateTime(year, date.Month, date.Day, date.Hour, date.Minute, date.Second, date.Millisecond);", span="38-38"];
m6_13 [cluster="Humanizer.PrepositionsExtensions.In(System.DateTime, int)", file="FixedLengthTruncator.cs", label="Exit Humanizer.PrepositionsExtensions.In(System.DateTime, int)", span="36-36"];
m8_0 [cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs", label="Entry Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", span="10-10"];
m8_1 [cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", color=green, community=0, file="FixedNumberOfWordsTruncator.cs", label="2: value == null", span="12-12"];
m8_2 [cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs", label="return null;", span="13-13"];
m8_5 [cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", color=red, community=0, file="FixedNumberOfWordsTruncator.cs", label="1: var numberOfWordsProcessed = 0", span="18-18"];
m8_6 [cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs", label="var numberOfWords = value.Split((char[])null, StringSplitOptions.RemoveEmptyEntries).Count()", span="19-19"];
m8_7 [cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs", label="numberOfWords <= length", span="21-21"];
m8_24 [cluster="char.IsWhiteSpace(char)", file="FixedNumberOfWordsTruncator.cs", label="Entry char.IsWhiteSpace(char)", span="0-0"];
m8_4 [cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs", label="return value;", span="16-16"];
m8_3 [cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs", label="value.Length == 0", span="15-15"];
m8_22 [cluster="string.Split(char[], System.StringSplitOptions)", file="FixedNumberOfWordsTruncator.cs", label="Entry string.Split(char[], System.StringSplitOptions)", span="0-0"];
m8_8 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.MixedCaseSentence()", file="FixedNumberOfWordsTruncator.cs", label="Entry Humanizer.Tests.Extensions.StringDehumanizeTests.MixedCaseSentence()", span="23-23"];
m8_11 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.LowerCaseSentence()", file="FixedNumberOfWordsTruncator.cs", label="Entry Humanizer.Tests.Extensions.StringDehumanizeTests.LowerCaseSentence()", span="31-31"];
m8_12 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.LowerCaseSentence()", file="FixedNumberOfWordsTruncator.cs", label="Assert.Equal(\r\n                ''LowerCaseSentenceIsCamelized'',\r\n                ''lower case sentence is camelized''.Dehumanize())", span="33-35"];
m8_16 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.EmptySentence()", file="FixedNumberOfWordsTruncator.cs", label="Exit Humanizer.Tests.Extensions.StringDehumanizeTests.EmptySentence()", span="39-39"];
m8_17 [cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs", label="return value.Substring(0, i) + truncationString;", span="36-36"];
m8_20 [cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs", label="return value + truncationString;", span="44-44"];
m8_14 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.EmptySentence()", file="FixedNumberOfWordsTruncator.cs", label="Entry Humanizer.Tests.Extensions.StringDehumanizeTests.EmptySentence()", span="39-39"];
m8_9 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.MixedCaseSentence()", color=green, community=0, file="FixedNumberOfWordsTruncator.cs", label="2: Assert.Equal(\r\n                ''MixedCaseSentenceIsCamelized'',\r\n                ''Mixed case sentence Is Camelized''.Dehumanize())", span="25-27"];
m8_10 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.MixedCaseSentence()", file="FixedNumberOfWordsTruncator.cs", label="Exit Humanizer.Tests.Extensions.StringDehumanizeTests.MixedCaseSentence()", span="23-23"];
m8_13 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.LowerCaseSentence()", file="FixedNumberOfWordsTruncator.cs", label="Exit Humanizer.Tests.Extensions.StringDehumanizeTests.LowerCaseSentence()", span="31-31"];
m8_19 [cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs", label="i++", span="26-26"];
m8_18 [cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs", label="lastCharactersWasWhiteSpace = false", span="40-40"];
m8_15 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.EmptySentence()", file="FixedNumberOfWordsTruncator.cs", label="Assert.Equal(\r\n                '''',\r\n                ''''.Dehumanize())", span="41-43"];
m8_21 [cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs", label="Exit Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", span="10-10"];
m8_25 [cluster="string.Substring(int, int)", file="FixedNumberOfWordsTruncator.cs", label="Entry string.Substring(int, int)", span="0-0"];
m8_23 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="FixedNumberOfWordsTruncator.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m9_5 [cluster="Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", file="FrenchNumberToWordsConverter.cs", label="Entry Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", span="70-70"];
m9_26 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.SecondsAgo()", file="FrenchNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.SecondsAgo()", span="43-43"];
m9_27 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.SecondsAgo()", file="FrenchNumberToWordsConverter.cs", label="Verify(string.Format(Resources.GetResource(ResourceKeys.DateHumanize.MultipleSecondsAgo), 10), new TimeSpan(0, 0, 0, -10))", span="45-45"];
m9_28 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.SecondsAgo()", file="FrenchNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.SecondsAgo()", span="43-43"];
m9_42 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.Yesterday()", file="FrenchNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.Yesterday()", span="73-73"];
m9_43 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.Yesterday()", file="FrenchNumberToWordsConverter.cs", label="Verify(Resources.GetResource(ResourceKeys.DateHumanize.SingleDayAgo), new TimeSpan(-1, -10, 0, 0))", span="75-75"];
m9_44 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.Yesterday()", file="FrenchNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.Yesterday()", span="73-73"];
m9_6 [cluster="Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", file="FrenchNumberToWordsConverter.cs", label="Assert.Equal(number.Ordinalize(), ordinalized)", span="72-72"];
m9_4 [cluster="System.DateTime.Add(System.TimeSpan)", file="FrenchNumberToWordsConverter.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m9_39 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.HoursAgo()", file="FrenchNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.HoursAgo()", span="67-67"];
m9_40 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.HoursAgo()", file="FrenchNumberToWordsConverter.cs", label="Verify(string.Format(Resources.GetResource(ResourceKeys.DateHumanize.MultipleHoursAgo), 10), new TimeSpan(0, -10, 0, 0))", span="69-69"];
m9_41 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.HoursAgo()", file="FrenchNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.HoursAgo()", span="67-67"];
m9_22 [cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file="FrenchNumberToWordsConverter.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0"];
m9_3 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.VerifyWithCurrentDate(string, System.TimeSpan)", file="FrenchNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.VerifyWithCurrentDate(string, System.TimeSpan)", span="9-9"];
m9_29 [cluster="string.Format(string, object)", file="FrenchNumberToWordsConverter.cs", label="Entry string.Format(string, object)", span="0-0"];
m9_23 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.JustNow()", file="FrenchNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.JustNow()", span="37-37"];
m9_24 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.JustNow()", file="FrenchNumberToWordsConverter.cs", label="Verify(Resources.GetResource(ResourceKeys.DateHumanize.SingleSecondAgo), new TimeSpan(0, 0, 0, -1))", span="39-39"];
m9_25 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.JustNow()", file="FrenchNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.JustNow()", span="37-37"];
m9_0 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.VerifyWithCurrentDate(string, System.TimeSpan)", file="FrenchNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.VerifyWithCurrentDate(string, System.TimeSpan)", span="9-9"];
m9_1 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.VerifyWithCurrentDate(string, System.TimeSpan)", file="FrenchNumberToWordsConverter.cs", label="Assert.Equal(expectedString, DateTime.UtcNow.Add(deltaFromNow).Humanize())", span="11-11"];
m9_2 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.VerifyWithCurrentDate(string, System.TimeSpan)", file="FrenchNumberToWordsConverter.cs", label="Assert.Equal(expectedString, DateTime.Now.Add(deltaFromNow).Humanize(false))", span="12-12"];
m9_48 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.OneMonthAgo()", file="FrenchNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.OneMonthAgo()", span="85-85"];
m9_49 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.OneMonthAgo()", file="FrenchNumberToWordsConverter.cs", label="Verify(Resources.GetResource(ResourceKeys.DateHumanize.SingleMonthAgo), new TimeSpan(-30, 0, 0, 0))", span="87-87"];
m9_50 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.OneMonthAgo()", file="FrenchNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.OneMonthAgo()", span="85-85"];
m9_7 [cluster="Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", file="FrenchNumberToWordsConverter.cs", label="Exit Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", span="70-70"];
m9_8 [cluster="int.Ordinalize()", file="FrenchNumberToWordsConverter.cs", label="Entry int.Ordinalize()", span="25-25"];
m9_9 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.VerifyWithDateInjection(string, System.TimeSpan)", file="FrenchNumberToWordsConverter.cs", label="var now = new DateTime(2013, 6, 20, 11, 58, 22, DateTimeKind.Local)", span="18-18"];
m9_10 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.VerifyWithDateInjection(string, System.TimeSpan)", file="FrenchNumberToWordsConverter.cs", label="Assert.Equal(expectedString, utcNow.Add(deltaFromNow).Humanize(dateToCompareAgainst: utcNow))", span="20-20"];
m9_11 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.VerifyWithDateInjection(string, System.TimeSpan)", file="FrenchNumberToWordsConverter.cs", label="Assert.Equal(expectedString, now.Add(deltaFromNow).Humanize(false, now))", span="21-21"];
m9_12 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.VerifyWithDateInjection(string, System.TimeSpan)", file="FrenchNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.VerifyWithDateInjection(string, System.TimeSpan)", span="15-15"];
m9_13 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="FrenchNumberToWordsConverter.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m9_33 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.AFewMinutesAgo()", file="FrenchNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.AFewMinutesAgo()", span="55-55"];
m9_34 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.AFewMinutesAgo()", file="FrenchNumberToWordsConverter.cs", label="Verify(string.Format(Resources.GetResource(ResourceKeys.DateHumanize.MultipleMinutesAgo), 10), new TimeSpan(0, 0, -10, 0))", span="57-57"];
m9_35 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.AFewMinutesAgo()", file="FrenchNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.AFewMinutesAgo()", span="55-55"];
m9_45 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.AFewDaysAgo()", file="FrenchNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.AFewDaysAgo()", span="79-79"];
m9_46 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.AFewDaysAgo()", file="FrenchNumberToWordsConverter.cs", label="Verify(string.Format(Resources.GetResource(ResourceKeys.DateHumanize.MultipleDaysAgo), 10), new TimeSpan(-10, 0, 0, 0))", span="81-81"];
m9_47 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.AFewDaysAgo()", file="FrenchNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.AFewDaysAgo()", span="79-79"];
m9_51 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.AFewMonthsAgo()", file="FrenchNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.AFewMonthsAgo()", span="91-91"];
m9_52 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.AFewMonthsAgo()", color=green, community=0, file="FrenchNumberToWordsConverter.cs", label="0: Verify(string.Format(Resources.GetResource(ResourceKeys.DateHumanize.MultipleMonthsAgo), 2), new TimeSpan(-60, 0, 0, 0))", span="93-93"];
m9_53 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.AFewMonthsAgo()", file="FrenchNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.AFewMonthsAgo()", span="91-91"];
m9_36 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.AnHourAgo()", file="FrenchNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.AnHourAgo()", span="61-61"];
m9_37 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.AnHourAgo()", file="FrenchNumberToWordsConverter.cs", label="Verify(Resources.GetResource(ResourceKeys.DateHumanize.SingleHourAgo), new TimeSpan(0, -1, -10, 0))", span="63-63"];
m9_38 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.AnHourAgo()", file="FrenchNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.AnHourAgo()", span="61-61"];
m9_60 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.FewYearsAgo()", file="FrenchNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.FewYearsAgo()", span="109-109"];
m9_61 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.FewYearsAgo()", file="FrenchNumberToWordsConverter.cs", label="Verify(string.Format(Resources.GetResource(ResourceKeys.DateHumanize.MultipleYearsAgo), 2), new TimeSpan(-900, 0, 0, 0))", span="111-111"];
m9_62 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.FewYearsAgo()", file="FrenchNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.FewYearsAgo()", span="109-109"];
m9_54 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.OneYearAgoIsNotAccureate()", file="FrenchNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.OneYearAgoIsNotAccureate()", span="97-97"];
m9_55 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.OneYearAgoIsNotAccureate()", color=green, community=0, file="FrenchNumberToWordsConverter.cs", label="0: Verify(Resources.GetResource(ResourceKeys.DateHumanize.SingleYearAgo), new TimeSpan(-360, 0, 0, 0))", span="99-99"];
m9_56 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.OneYearAgoIsNotAccureate()", file="FrenchNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.OneYearAgoIsNotAccureate()", span="97-97"];
m9_57 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.OneYearAgo()", file="FrenchNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.OneYearAgo()", span="103-103"];
m9_58 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.OneYearAgo()", file="FrenchNumberToWordsConverter.cs", label="Verify(Resources.GetResource(ResourceKeys.DateHumanize.SingleYearAgo), new TimeSpan(-400, 0, 0, 0))", span="105-105"];
m9_59 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.OneYearAgo()", file="FrenchNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.OneYearAgo()", span="103-103"];
m9_14 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.Verify(string, System.TimeSpan)", file="FrenchNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.Verify(string, System.TimeSpan)", span="24-24"];
m9_15 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.Verify(string, System.TimeSpan)", file="FrenchNumberToWordsConverter.cs", label="VerifyWithCurrentDate(expectedString, deltaFromNow)", span="26-26"];
m9_16 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.Verify(string, System.TimeSpan)", file="FrenchNumberToWordsConverter.cs", label="VerifyWithDateInjection(expectedString, deltaFromNow)", span="27-27"];
m9_17 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.Verify(string, System.TimeSpan)", file="FrenchNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.Verify(string, System.TimeSpan)", span="24-24"];
m9_21 [cluster="Humanizer.Localisation.Resources.GetResource(string)", file="FrenchNumberToWordsConverter.cs", label="Entry Humanizer.Localisation.Resources.GetResource(string)", span="26-26"];
m9_18 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.FutureDates()", file="FrenchNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.FutureDates()", span="31-31"];
m9_19 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.FutureDates()", file="FrenchNumberToWordsConverter.cs", label="Verify(Resources.GetResource(ResourceKeys.DateHumanize.NotYet), new TimeSpan(0, 0, 1, 0))", span="33-33"];
m9_20 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.FutureDates()", file="FrenchNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.FutureDates()", span="31-31"];
m9_30 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.OneMinuteAgo()", file="FrenchNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.OneMinuteAgo()", span="49-49"];
m9_31 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.OneMinuteAgo()", file="FrenchNumberToWordsConverter.cs", label="Verify(Resources.GetResource(ResourceKeys.DateHumanize.SingleMinuteAgo), new TimeSpan(0, 0, -1, 0))", span="51-51"];
m9_32 [cluster="Humanizer.Tests.Extensions.DateHumanizeTests.OneMinuteAgo()", file="FrenchNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.OneMinuteAgo()", span="49-49"];
m9_63 [file="FrenchNumberToWordsConverter.cs", label="Humanizer.Tests.Extensions.DateHumanizeTests", span=""];
m10_0 [cluster="Humanizer.DateTimeHumanizeStrategy.IDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="IDateTimeHumanizeStrategy.cs", label="Entry Humanizer.DateTimeHumanizeStrategy.IDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", span="6-6"];
m10_1 [cluster="Humanizer.DateTimeHumanizeStrategy.IDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="IDateTimeHumanizeStrategy.cs", label="Exit Humanizer.DateTimeHumanizeStrategy.IDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", span="6-6"];
m11_0 [cluster="Humanizer.ITruncator.Truncate(string, int, string)", file="ITruncator.cs", label="Entry Humanizer.ITruncator.Truncate(string, int, string)", span="14-14"];
m11_1 [cluster="Humanizer.ITruncator.Truncate(string, int, string)", file="ITruncator.cs", label="Exit Humanizer.ITruncator.Truncate(string, int, string)", span="14-14"];
m12_12 [cluster="T.ToMaybe<T>()", file="NumberToWordsTests.cs", label="Entry T.ToMaybe<T>()", span="82-82"];
m12_0 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="NumberToWordsTests.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="17-17"];
m12_1 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="NumberToWordsTests.cs", label="this.shortName = shortName", span="20-20"];
m12_2 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="NumberToWordsTests.cs", label="this.longName = longName", span="21-21"];
m12_3 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="NumberToWordsTests.cs", label="this.separator = separator", span="22-22"];
m12_4 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="NumberToWordsTests.cs", label="this.setName = setName", span="23-23"];
m12_5 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="NumberToWordsTests.cs", label="this.helpText = helpText", span="24-24"];
m12_6 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="NumberToWordsTests.cs", label="this.metaValue = metaValue", span="25-25"];
m12_7 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="NumberToWordsTests.cs", label="this.enumValues = enumValues", span="26-26"];
m12_8 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="NumberToWordsTests.cs", label="Exit CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="17-17"];
m12_9 [cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="NumberToWordsTests.cs", label="Entry CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", span="29-29"];
m12_10 [cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", color=red, community=0, file="NumberToWordsTests.cs", label="0: return new OptionSpecification(\r\n                attribute.ShortName,\r\n                attribute.LongName,\r\n                attribute.Required,\r\n                attribute.SetName,\r\n                attribute.Min,\r\n                attribute.Max,\r\n                attribute.Separator,\r\n                attribute.DefaultValue.ToMaybe(),\r\n                conversionType,\r\n                attribute.HelpText,\r\n                attribute.MetaValue,\r\n                enumValues);", span="31-43"];
m12_11 [cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="NumberToWordsTests.cs", label="Exit CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", span="29-29"];
m12_13 [file="NumberToWordsTests.cs", label="CommandLine.Core.OptionSpecification", span=""];
m13_5 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", label="AddPlural(''(alias|status)$'', ''$1es'')", span="14-14"];
m13_6 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", label="AddPlural(''(bu)s$'', ''$1ses'')", span="15-15"];
m13_7 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", label="AddPlural(''(buffal|tomat|volcan)o$'', ''$1oes'')", span="16-16"];
m13_8 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", color=red, community=0, file="OrdinalizeExtensions.cs", label="2: AddPlural(''([ti])um$'', ''$1a'')", span="17-17"];
m13_135 [cluster="int.ToString(System.IFormatProvider)", file="OrdinalizeExtensions.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m13_28 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", label="AddSingular(''(s)eries$'', ''$1eries'')", span="38-38"];
m13_21 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", label="AddSingular(''((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$'', ''$1$2sis'')", span="31-31"];
m13_22 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", color=red, community=0, file="OrdinalizeExtensions.cs", label="2: AddSingular(''(^analy)ses$'', ''$1sis'')", span="32-32"];
m13_23 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", label="AddSingular(''([^f])ves$'', ''$1fe'')", span="33-33"];
m13_131 [cluster="Humanizer.InflectorExtensions.Ordanize(int, string)", file="OrdinalizeExtensions.cs", label="Entry Humanizer.InflectorExtensions.Ordanize(int, string)", span="226-226"];
m13_136 [cluster="Humanizer.InflectorExtensions.Ordanize(int, string)", file="OrdinalizeExtensions.cs", label="int nMod100 = number % 100", span="228-228"];
m13_138 [cluster="Humanizer.InflectorExtensions.Ordanize(int, string)", file="OrdinalizeExtensions.cs", label="return numberString + ''th'';", span="232-232"];
m13_139 [cluster="Humanizer.InflectorExtensions.Ordanize(int, string)", file="OrdinalizeExtensions.cs", label="number % 10", span="235-235"];
m13_141 [cluster="Humanizer.InflectorExtensions.Ordanize(int, string)", file="OrdinalizeExtensions.cs", label="return numberString + ''st'';", span="238-238"];
m13_143 [cluster="Humanizer.InflectorExtensions.Ordanize(int, string)", file="OrdinalizeExtensions.cs", label="return numberString + ''nd'';", span="240-240"];
m13_145 [cluster="Humanizer.InflectorExtensions.Ordanize(int, string)", file="OrdinalizeExtensions.cs", label="return numberString + ''rd'';", span="242-242"];
m13_146 [cluster="Humanizer.InflectorExtensions.Ordanize(int, string)", file="OrdinalizeExtensions.cs", label="return numberString + ''th'';", span="244-244"];
m13_137 [cluster="Humanizer.InflectorExtensions.Ordanize(int, string)", file="OrdinalizeExtensions.cs", label="nMod100 >= 11 && nMod100 <= 13", span="230-230"];
m13_140 [cluster="Humanizer.InflectorExtensions.Ordanize(int, string)", file="OrdinalizeExtensions.cs", label=1, span="237-237"];
m13_142 [cluster="Humanizer.InflectorExtensions.Ordanize(int, string)", file="OrdinalizeExtensions.cs", label=2, span="239-239"];
m13_144 [cluster="Humanizer.InflectorExtensions.Ordanize(int, string)", file="OrdinalizeExtensions.cs", label=3, span="241-241"];
m13_147 [cluster="Humanizer.InflectorExtensions.Ordanize(int, string)", file="OrdinalizeExtensions.cs", label="Exit Humanizer.InflectorExtensions.Ordanize(int, string)", span="226-226"];
m13_33 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", color=red, community=0, file="OrdinalizeExtensions.cs", label="2: AddSingular(''(o)es$'', ''$1'')", span="43-43"];
m13_34 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", color=red, community=0, file="OrdinalizeExtensions.cs", label="2: AddSingular(''(shoe)s$'', ''$1'')", span="44-44"];
m13_35 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", color=red, community=0, file="OrdinalizeExtensions.cs", label="2: AddSingular(''(cris|ax|test)es$'', ''$1is'')", span="45-45"];
m13_116 [cluster="Humanizer.InflectorExtensions.Camelize(string)", file="OrdinalizeExtensions.cs", label="Entry Humanizer.InflectorExtensions.Camelize(string)", span="183-183"];
m13_117 [cluster="Humanizer.InflectorExtensions.Camelize(string)", file="OrdinalizeExtensions.cs", label="return Uncapitalize(Pascalize(input));", span="185-185"];
m13_118 [cluster="Humanizer.InflectorExtensions.Camelize(string)", file="OrdinalizeExtensions.cs", label="Exit Humanizer.InflectorExtensions.Camelize(string)", span="183-183"];
m13_4 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", label="AddPlural(''(octop|vir|alumn|fung)us$'', ''$1i'')", span="13-13"];
m13_75 [cluster="System.Text.RegularExpressions.Regex.Replace(string, string)", file="OrdinalizeExtensions.cs", label="Entry System.Text.RegularExpressions.Regex.Replace(string, string)", span="0-0"];
m13_91 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="OrdinalizeExtensions.cs", label="Entry Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", span="140-140"];
m13_95 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="OrdinalizeExtensions.cs", label="string result = word", span="142-142"];
m13_96 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="OrdinalizeExtensions.cs", label="!Uncountables.Contains(word.ToLower())", span="144-144"];
m13_97 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="OrdinalizeExtensions.cs", label="int i = rules.Count - 1", span="146-146"];
m13_99 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="OrdinalizeExtensions.cs", label="(result = rules[i].Apply(word)) != null", span="148-148"];
m13_101 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="OrdinalizeExtensions.cs", label="return result;", span="155-155"];
m13_98 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="OrdinalizeExtensions.cs", label="i >= 0", span="146-146"];
m13_100 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="OrdinalizeExtensions.cs", label="i--", span="146-146"];
m13_102 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="OrdinalizeExtensions.cs", label="Exit Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", span="140-140"];
m13_13 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", label="AddPlural(''(x|ch|ss|sh)$'', ''$1es'')", span="22-22"];
m13_14 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", color=green, community=0, file="OrdinalizeExtensions.cs", label="2: AddPlural(''(matr|vert|ind)ix|ex$'', ''$1ices'')", span="23-23"];
m13_15 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", color=green, community=0, file="OrdinalizeExtensions.cs", label="2: AddPlural(''([m|l])ouse$'', ''$1ice'')", span="24-24"];
m13_16 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", label="AddPlural(''^(ox)$'', ''$1en'')", span="25-25"];
m13_120 [cluster="Humanizer.InflectorExtensions.Underscore(string)", file="OrdinalizeExtensions.cs", label="Entry Humanizer.InflectorExtensions.Underscore(string)", span="193-193"];
m13_121 [cluster="Humanizer.InflectorExtensions.Underscore(string)", file="OrdinalizeExtensions.cs", label="return Regex.Replace(\r\n                Regex.Replace(\r\n                    Regex.Replace(input, @''([A-Z]+)([A-Z][a-z])'', ''$1_$2''), @''([a-z\d])([A-Z])'',\r\n                    ''$1_$2''), @''[-\s]'', ''_'').ToLower();", span="195-198"];
m13_122 [cluster="Humanizer.InflectorExtensions.Underscore(string)", file="OrdinalizeExtensions.cs", label="Exit Humanizer.InflectorExtensions.Underscore(string)", span="193-193"];
m13_92 [cluster="Humanizer.InflectorExtensions.Singularize(string)", file="OrdinalizeExtensions.cs", label="Entry Humanizer.InflectorExtensions.Singularize(string)", span="135-135"];
m13_93 [cluster="Humanizer.InflectorExtensions.Singularize(string)", file="OrdinalizeExtensions.cs", label="return ApplyRules(Singulars, word);", span="137-137"];
m13_94 [cluster="Humanizer.InflectorExtensions.Singularize(string)", file="OrdinalizeExtensions.cs", label="Exit Humanizer.InflectorExtensions.Singularize(string)", span="135-135"];
m13_151 [cluster="string.Replace(char, char)", file="OrdinalizeExtensions.cs", label="Entry string.Replace(char, char)", span="0-0"];
m13_123 [cluster="System.Text.RegularExpressions.Regex.Replace(string, string, string)", file="OrdinalizeExtensions.cs", label="Entry System.Text.RegularExpressions.Regex.Replace(string, string, string)", span="0-0"];
m13_130 [cluster="int.Parse(string)", file="OrdinalizeExtensions.cs", label="Entry int.Parse(string)", span="0-0"];
m13_37 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", color=red, community=0, file="OrdinalizeExtensions.cs", label="2: AddSingular(''(alias|status)es$'', ''$1'')", span="47-47"];
m13_38 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", color=red, community=0, file="OrdinalizeExtensions.cs", label="2: AddSingular(''^(ox)en'', ''$1'')", span="48-48"];
m13_39 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", label="AddSingular(''(vert|ind)ices$'', ''$1ex'')", span="49-49"];
m13_61 [cluster="Humanizer.InflectorExtensions.AddSingular(string, string)", file="OrdinalizeExtensions.cs", label="Entry Humanizer.InflectorExtensions.AddSingular(string, string)", span="111-111"];
m13_86 [cluster="Humanizer.InflectorExtensions.AddSingular(string, string)", file="OrdinalizeExtensions.cs", label="Singulars.Add(new Rule(rule, replacement))", span="113-113"];
m13_87 [cluster="Humanizer.InflectorExtensions.AddSingular(string, string)", file="OrdinalizeExtensions.cs", label="Exit Humanizer.InflectorExtensions.AddSingular(string, string)", span="111-111"];
m13_103 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="OrdinalizeExtensions.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m13_108 [cluster="Humanizer.InflectorExtensions.Pascalize(string)", file="OrdinalizeExtensions.cs", label="Entry Humanizer.InflectorExtensions.Pascalize(string)", span="173-173"];
m13_109 [cluster="Humanizer.InflectorExtensions.Pascalize(string)", file="OrdinalizeExtensions.cs", label="return Regex.Replace(input, ''(?:^|_)(.)'', match => match.Groups[1].Value.ToUpper());", span="175-175"];
m13_110 [cluster="Humanizer.InflectorExtensions.Pascalize(string)", file="OrdinalizeExtensions.cs", label="Exit Humanizer.InflectorExtensions.Pascalize(string)", span="173-173"];
m13_115 [cluster="string.ToUpper()", file="OrdinalizeExtensions.cs", label="Entry string.ToUpper()", span="0-0"];
m13_32 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", color=red, community=0, file="OrdinalizeExtensions.cs", label="2: AddSingular(''(bus)es$'', ''$1'')", span="42-42"];
m13_17 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", label="AddPlural(''(quiz)$'', ''$1zes'')", span="26-26"];
m13_18 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", label="AddSingular(''s$'', '''')", span="28-28"];
m13_19 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", label="AddSingular(''(n)ews$'', ''$1ews'')", span="29-29"];
m13_126 [cluster="string.Substring(int, int)", file="OrdinalizeExtensions.cs", label="Entry string.Substring(int, int)", span="0-0"];
m13_20 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", color=red, community=0, file="OrdinalizeExtensions.cs", label="2: AddSingular(''([ti])a$'', ''$1um'')", span="30-30"];
m13_0 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", label="Entry Humanizer.InflectorExtensions.InflectorExtensions()", span="8-8"];
m13_1 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", color=green, community=0, file="OrdinalizeExtensions.cs", label="2: AddPlural(''$'', ''s'')", span="10-10"];
m13_2 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", label="AddPlural(''s$'', ''s'')", span="11-11"];
m13_3 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", label="AddPlural(''(ax|test)is$'', ''$1es'')", span="12-12"];
m13_9 [cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", file="OrdinalizeExtensions.cs", label="Entry Humanizer.Tests.InflectorTests.Singularize(string, string)", span="51-51"];
m13_10 [cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", file="OrdinalizeExtensions.cs", label="Assert.Equal(singular, plural.Singularize())", span="53-53"];
m13_11 [cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", file="OrdinalizeExtensions.cs", label="Exit Humanizer.Tests.InflectorTests.Singularize(string, string)", span="51-51"];
m13_12 [cluster="string.Singularize(bool)", file="OrdinalizeExtensions.cs", label="Entry string.Singularize(bool)", span="75-75"];
m13_24 [cluster="string.Dasherize()", color=red, community=0, file="OrdinalizeExtensions.cs", label="2: Entry string.Dasherize()", span="128-128"];
m13_25 [cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)", file="OrdinalizeExtensions.cs", label="Entry Humanizer.Tests.InflectorTests.Hyphenate(string, string)", span="92-92"];
m13_26 [cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)", color=red, community=0, file="OrdinalizeExtensions.cs", label="2: Assert.Equal(input.Hyphenate(), expectedOutput)", span="94-94"];
m13_27 [cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)", color=red, community=0, file="OrdinalizeExtensions.cs", label="2: Exit Humanizer.Tests.InflectorTests.Hyphenate(string, string)", span="92-92"];
m13_29 [cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", color=red, community=0, file="OrdinalizeExtensions.cs", label="2: Entry Humanizer.Tests.InflectorTests.Pascalize(string, string)", span="105-105"];
m13_30 [cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", color=red, community=0, file="OrdinalizeExtensions.cs", label="2: Assert.Equal(expectedOutput, input.Pascalize())", span="107-107"];
m13_31 [cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", color=red, community=0, file="OrdinalizeExtensions.cs", label="2: Exit Humanizer.Tests.InflectorTests.Pascalize(string, string)", span="105-105"];
m13_36 [cluster="string.Camelize()", color=red, community=0, file="OrdinalizeExtensions.cs", label="2: Entry string.Camelize()", span="105-105"];
m13_40 [cluster="string.Underscore()", file="OrdinalizeExtensions.cs", label="Entry string.Underscore()", span="116-116"];
m13_41 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", label="AddSingular(''(quiz)zes$'', ''$1'')", span="51-51"];
m13_42 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", label="AddIrregular(''person'', ''people'')", span="53-53"];
m13_43 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", label="AddIrregular(''man'', ''men'')", span="54-54"];
m13_44 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", label="AddIrregular(''child'', ''children'')", span="55-55"];
m13_45 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", label="AddIrregular(''sex'', ''sexes'')", span="56-56"];
m13_46 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", label="AddIrregular(''move'', ''moves'')", span="57-57"];
m13_47 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", label="AddIrregular(''goose'', ''geese'')", span="58-58"];
m13_48 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", label="AddIrregular(''alumna'', ''alumnae'')", span="59-59"];
m13_49 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", label="AddUncountable(''equipment'')", span="61-61"];
m13_50 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", label="AddUncountable(''information'')", span="62-62"];
m13_51 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", label="AddUncountable(''rice'')", span="63-63"];
m13_52 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", label="AddUncountable(''money'')", span="64-64"];
m13_53 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", label="AddUncountable(''species'')", span="65-65"];
m13_54 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", label="AddUncountable(''series'')", span="66-66"];
m13_55 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", label="AddUncountable(''fish'')", span="67-67"];
m13_56 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", label="AddUncountable(''sheep'')", span="68-68"];
m13_57 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", label="AddUncountable(''deer'')", span="69-69"];
m13_58 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", label="AddUncountable(''aircraft'')", span="70-70"];
m13_59 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", label="Exit Humanizer.InflectorExtensions.InflectorExtensions()", span="8-8"];
m13_62 [cluster="Humanizer.InflectorExtensions.AddIrregular(string, string)", file="OrdinalizeExtensions.cs", label="Entry Humanizer.InflectorExtensions.AddIrregular(string, string)", span="95-95"];
m13_76 [cluster="Humanizer.InflectorExtensions.AddIrregular(string, string)", file="OrdinalizeExtensions.cs", label="AddPlural(''('' + singular[0] + '')'' + singular.Substring(1) + ''$'', ''$1'' + plural.Substring(1))", span="97-97"];
m13_77 [cluster="Humanizer.InflectorExtensions.AddIrregular(string, string)", file="OrdinalizeExtensions.cs", label="AddSingular(''('' + plural[0] + '')'' + plural.Substring(1) + ''$'', ''$1'' + singular.Substring(1))", span="98-98"];
m13_78 [cluster="Humanizer.InflectorExtensions.AddIrregular(string, string)", file="OrdinalizeExtensions.cs", label="Exit Humanizer.InflectorExtensions.AddIrregular(string, string)", span="95-95"];
m13_132 [cluster="Humanizer.InflectorExtensions.Ordinalize(int)", file="OrdinalizeExtensions.cs", label="Entry Humanizer.InflectorExtensions.Ordinalize(int)", span="221-221"];
m13_133 [cluster="Humanizer.InflectorExtensions.Ordinalize(int)", file="OrdinalizeExtensions.cs", label="return Ordanize(number, number.ToString(CultureInfo.InvariantCulture));", span="223-223"];
m13_134 [cluster="Humanizer.InflectorExtensions.Ordinalize(int)", file="OrdinalizeExtensions.cs", label="Exit Humanizer.InflectorExtensions.Ordinalize(int)", span="221-221"];
m13_127 [cluster="Humanizer.InflectorExtensions.Ordinalize(string)", file="OrdinalizeExtensions.cs", label="Entry Humanizer.InflectorExtensions.Ordinalize(string)", span="211-211"];
m13_128 [cluster="Humanizer.InflectorExtensions.Ordinalize(string)", file="OrdinalizeExtensions.cs", label="return Ordanize(int.Parse(numberString), numberString);", span="213-213"];
m13_129 [cluster="Humanizer.InflectorExtensions.Ordinalize(string)", file="OrdinalizeExtensions.cs", label="Exit Humanizer.InflectorExtensions.Ordinalize(string)", span="211-211"];
m13_63 [cluster="Humanizer.InflectorExtensions.AddUncountable(string)", file="OrdinalizeExtensions.cs", label="Entry Humanizer.InflectorExtensions.AddUncountable(string)", span="101-101"];
m13_80 [cluster="Humanizer.InflectorExtensions.AddUncountable(string)", file="OrdinalizeExtensions.cs", label="Uncountables.Add(word.ToLower())", span="103-103"];
m13_81 [cluster="Humanizer.InflectorExtensions.AddUncountable(string)", file="OrdinalizeExtensions.cs", label="Exit Humanizer.InflectorExtensions.AddUncountable(string)", span="101-101"];
m13_107 [cluster="string.Humanize(Humanizer.LetterCasing)", file="OrdinalizeExtensions.cs", label="Entry string.Humanize(Humanizer.LetterCasing)", span="60-60"];
m13_148 [cluster="Humanizer.InflectorExtensions.Dasherize(string)", file="OrdinalizeExtensions.cs", label="Entry Humanizer.InflectorExtensions.Dasherize(string)", span="253-253"];
m13_149 [cluster="Humanizer.InflectorExtensions.Dasherize(string)", file="OrdinalizeExtensions.cs", label="return underscoredWord.Replace('_', '-');", span="255-255"];
m13_150 [cluster="Humanizer.InflectorExtensions.Dasherize(string)", file="OrdinalizeExtensions.cs", label="Exit Humanizer.InflectorExtensions.Dasherize(string)", span="253-253"];
m13_111 [cluster="System.Text.RegularExpressions.Regex.Replace(string, string, System.Text.RegularExpressions.MatchEvaluator)", file="OrdinalizeExtensions.cs", label="Entry System.Text.RegularExpressions.Regex.Replace(string, string, System.Text.RegularExpressions.MatchEvaluator)", span="0-0"];
m13_64 [cluster="Humanizer.InflectorExtensions.Rule.Rule(string, string)", file="OrdinalizeExtensions.cs", label="Entry Humanizer.InflectorExtensions.Rule.Rule(string, string)", span="78-78"];
m13_65 [cluster="Humanizer.InflectorExtensions.Rule.Rule(string, string)", file="OrdinalizeExtensions.cs", label="_regex = new Regex(pattern, RegexOptions.IgnoreCase)", span="80-80"];
m13_66 [cluster="Humanizer.InflectorExtensions.Rule.Rule(string, string)", file="OrdinalizeExtensions.cs", label="_replacement = replacement", span="81-81"];
m13_67 [cluster="Humanizer.InflectorExtensions.Rule.Rule(string, string)", file="OrdinalizeExtensions.cs", label="Exit Humanizer.InflectorExtensions.Rule.Rule(string, string)", span="78-78"];
m13_112 [cluster="lambda expression", file="OrdinalizeExtensions.cs", label="Entry lambda expression", span="175-175"];
m13_113 [cluster="lambda expression", file="OrdinalizeExtensions.cs", label="match.Groups[1].Value.ToUpper()", span="175-175"];
m13_114 [cluster="lambda expression", file="OrdinalizeExtensions.cs", label="Exit lambda expression", span="175-175"];
m13_69 [cluster="Humanizer.InflectorExtensions.Rule.Apply(string)", file="OrdinalizeExtensions.cs", label="Entry Humanizer.InflectorExtensions.Rule.Apply(string)", span="84-84"];
m13_70 [cluster="Humanizer.InflectorExtensions.Rule.Apply(string)", file="OrdinalizeExtensions.cs", label="!_regex.IsMatch(word)", span="86-86"];
m13_72 [cluster="Humanizer.InflectorExtensions.Rule.Apply(string)", file="OrdinalizeExtensions.cs", label="return _regex.Replace(word, _replacement);", span="91-91"];
m13_71 [cluster="Humanizer.InflectorExtensions.Rule.Apply(string)", file="OrdinalizeExtensions.cs", label="return null;", span="88-88"];
m13_73 [cluster="Humanizer.InflectorExtensions.Rule.Apply(string)", file="OrdinalizeExtensions.cs", label="Exit Humanizer.InflectorExtensions.Rule.Apply(string)", span="84-84"];
m13_88 [cluster="Humanizer.InflectorExtensions.Pluralize(string)", file="OrdinalizeExtensions.cs", label="Entry Humanizer.InflectorExtensions.Pluralize(string)", span="125-125"];
m13_89 [cluster="Humanizer.InflectorExtensions.Pluralize(string)", file="OrdinalizeExtensions.cs", label="return ApplyRules(Plurals, word);", span="127-127"];
m13_90 [cluster="Humanizer.InflectorExtensions.Pluralize(string)", file="OrdinalizeExtensions.cs", label="Exit Humanizer.InflectorExtensions.Pluralize(string)", span="125-125"];
m13_68 [cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", file="OrdinalizeExtensions.cs", label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", span="0-0"];
m13_74 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string)", file="OrdinalizeExtensions.cs", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string)", span="0-0"];
m13_104 [cluster="Humanizer.InflectorExtensions.Titleize(string)", file="OrdinalizeExtensions.cs", label="Entry Humanizer.InflectorExtensions.Titleize(string)", span="163-163"];
m13_105 [cluster="Humanizer.InflectorExtensions.Titleize(string)", file="OrdinalizeExtensions.cs", label="return input.Humanize(LetterCasing.Title);", span="165-165"];
m13_106 [cluster="Humanizer.InflectorExtensions.Titleize(string)", file="OrdinalizeExtensions.cs", label="Exit Humanizer.InflectorExtensions.Titleize(string)", span="163-163"];
m13_83 [cluster="System.Collections.Generic.List<T>.Add(T)", file="OrdinalizeExtensions.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m13_119 [cluster="Humanizer.InflectorExtensions.Uncapitalize(string)", file="OrdinalizeExtensions.cs", label="Entry Humanizer.InflectorExtensions.Uncapitalize(string)", span="201-201"];
m13_124 [cluster="Humanizer.InflectorExtensions.Uncapitalize(string)", file="OrdinalizeExtensions.cs", label="return word.Substring(0, 1).ToLower() + word.Substring(1);", span="203-203"];
m13_125 [cluster="Humanizer.InflectorExtensions.Uncapitalize(string)", file="OrdinalizeExtensions.cs", label="Exit Humanizer.InflectorExtensions.Uncapitalize(string)", span="201-201"];
m13_60 [cluster="Humanizer.InflectorExtensions.AddPlural(string, string)", file="OrdinalizeExtensions.cs", label="Entry Humanizer.InflectorExtensions.AddPlural(string, string)", span="106-106"];
m13_84 [cluster="Humanizer.InflectorExtensions.AddPlural(string, string)", file="OrdinalizeExtensions.cs", label="Plurals.Add(new Rule(rule, replacement))", span="108-108"];
m13_85 [cluster="Humanizer.InflectorExtensions.AddPlural(string, string)", file="OrdinalizeExtensions.cs", label="Exit Humanizer.InflectorExtensions.AddPlural(string, string)", span="106-106"];
m13_82 [cluster="string.ToLower()", file="OrdinalizeExtensions.cs", label="Entry string.ToLower()", span="0-0"];
m13_79 [cluster="string.Substring(int)", file="OrdinalizeExtensions.cs", label="Entry string.Substring(int)", span="0-0"];
m13_152 [file="OrdinalizeExtensions.cs", label="Humanizer.InflectorExtensions.Rule", span=""];
m14_0 [cluster="Humanizer.Tests.OrdinalizeTests.OrdinalizeString(string, string)", file="OrdinalizeTests.cs", label="Entry Humanizer.Tests.OrdinalizeTests.OrdinalizeString(string, string)", span="36-36"];
m14_1 [cluster="Humanizer.Tests.OrdinalizeTests.OrdinalizeString(string, string)", file="OrdinalizeTests.cs", label="Assert.Equal(number.Ordinalize(), ordinalized)", span="38-38"];
m14_2 [cluster="Humanizer.Tests.OrdinalizeTests.OrdinalizeString(string, string)", file="OrdinalizeTests.cs", label="Exit Humanizer.Tests.OrdinalizeTests.OrdinalizeString(string, string)", span="36-36"];
m14_5 [cluster="Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", file="OrdinalizeTests.cs", label="Entry Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", span="70-70"];
m14_6 [cluster="Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", file="OrdinalizeTests.cs", label="Assert.Equal(number.Ordinalize(), ordinalized)", span="72-72"];
m14_7 [cluster="Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", file="OrdinalizeTests.cs", label="Exit Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", span="70-70"];
m14_4 [cluster="Unk.Equal", file="OrdinalizeTests.cs", label="Entry Unk.Equal", span=""];
m14_8 [cluster="int.Ordinalize()", file="OrdinalizeTests.cs", label="Entry int.Ordinalize()", span="25-25"];
m14_3 [cluster="string.Ordinalize()", file="OrdinalizeTests.cs", label="Entry string.Ordinalize()", span="15-15"];
m15_31 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor10DaysAgo()", file="PolishNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor10DaysAgo()", span="65-65"];
m15_32 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor10DaysAgo()", color=green, community=0, file="PolishNumberToWordsConverter.cs", label="0: var tenDaysAgo = DateTime.UtcNow.AddDays(-10).Humanize()", span="67-67"];
m15_33 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor10DaysAgo()", color=green, community=0, file="PolishNumberToWordsConverter.cs", label="0: Assert.Equal(''acum 10 zile'', tenDaysAgo)", span="69-69"];
m15_34 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor10DaysAgo()", file="PolishNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor10DaysAgo()", span="65-65"];
m15_7 [cluster="System.DateTime.Humanize(bool, System.DateTime?)", file="PolishNumberToWordsConverter.cs", label="Entry System.DateTime.Humanize(bool, System.DateTime?)", span="20-20"];
m15_2 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectForThreeHoursAgo()", file="PolishNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectForThreeHoursAgo()", span="17-17"];
m15_3 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectForThreeHoursAgo()", color=green, community=0, file="PolishNumberToWordsConverter.cs", label="0: var threeHoursAgo = DateTime.UtcNow.AddHours(-3).Humanize()", span="19-19"];
m15_4 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectForThreeHoursAgo()", file="PolishNumberToWordsConverter.cs", label="Assert.Equal(''acum 3 ore'', threeHoursAgo)", span="21-21"];
m15_5 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectForThreeHoursAgo()", file="PolishNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectForThreeHoursAgo()", span="17-17"];
m15_27 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor59SecondsAgo()", file="PolishNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor59SecondsAgo()", span="57-57"];
m15_28 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor59SecondsAgo()", color=green, community=0, file="PolishNumberToWordsConverter.cs", label="0: var fiftyNineSecondsAgo = DateTime.UtcNow.AddSeconds(-59).Humanize()", span="59-59"];
m15_29 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor59SecondsAgo()", color=green, community=0, file="PolishNumberToWordsConverter.cs", label="0: Assert.Equal(''acum 59 de secunde'', fiftyNineSecondsAgo)", span="61-61"];
m15_30 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor59SecondsAgo()", file="PolishNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor59SecondsAgo()", span="57-57"];
m15_17 [cluster="System.DateTime.AddMinutes(double)", file="PolishNumberToWordsConverter.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m15_26 [cluster="System.DateTime.AddSeconds(double)", file="PolishNumberToWordsConverter.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m15_44 [cluster="System.DateTime.AddYears(int)", file="PolishNumberToWordsConverter.cs", label="Entry System.DateTime.AddYears(int)", span="0-0"];
m15_8 [cluster="Unk.Equal", file="PolishNumberToWordsConverter.cs", label="Entry Unk.Equal", span=""];
m15_40 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor119YearsAgo()", file="PolishNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor119YearsAgo()", span="81-81"];
m15_42 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor119YearsAgo()", color=green, community=0, file="PolishNumberToWordsConverter.cs", label="0: Assert.Equal(''acum 119 ani'', oneHundredNineteenYearsAgo)", span="85-85"];
m15_41 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor119YearsAgo()", file="PolishNumberToWordsConverter.cs", label="var oneHundredNineteenYearsAgo = DateTime.UtcNow.AddYears(-119).Humanize()", span="83-83"];
m15_43 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor119YearsAgo()", file="PolishNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor119YearsAgo()", span="81-81"];
m15_45 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor100YearsAgo()", file="PolishNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor100YearsAgo()", span="89-89"];
m15_46 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor100YearsAgo()", color=green, community=0, file="PolishNumberToWordsConverter.cs", label="0: var hunderedYearsAgo = DateTime.UtcNow.AddYears(-100).Humanize()", span="91-91"];
m15_47 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor100YearsAgo()", color=green, community=0, file="PolishNumberToWordsConverter.cs", label="0: Assert.Equal(''acum 100 de ani'', hunderedYearsAgo)", span="93-93"];
m15_48 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor100YearsAgo()", file="PolishNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor100YearsAgo()", span="89-89"];
m15_22 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor2SecondsAgo()", file="PolishNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor2SecondsAgo()", span="49-49"];
m15_23 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor2SecondsAgo()", file="PolishNumberToWordsConverter.cs", label="var twoSecondsAgo = DateTime.UtcNow.AddSeconds(-2).Humanize()", span="51-51"];
m15_24 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor2SecondsAgo()", file="PolishNumberToWordsConverter.cs", label="Assert.Equal(''acum 2 secunde'', twoSecondsAgo)", span="53-53"];
m15_25 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor2SecondsAgo()", file="PolishNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor2SecondsAgo()", span="49-49"];
m15_36 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor23DaysAgo()", file="PolishNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor23DaysAgo()", span="73-73"];
m15_38 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor23DaysAgo()", color=green, community=0, file="PolishNumberToWordsConverter.cs", label="0: Assert.Equal(''acum 23 de zile'', twentyThreeDaysAgo)", span="77-77"];
m15_37 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor23DaysAgo()", file="PolishNumberToWordsConverter.cs", label="var twentyThreeDaysAgo = DateTime.UtcNow.AddDays(-23).Humanize()", span="75-75"];
m15_39 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor23DaysAgo()", file="PolishNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor23DaysAgo()", span="73-73"];
m15_9 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor20HoursAgo()", file="PolishNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor20HoursAgo()", span="25-25"];
m15_10 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor20HoursAgo()", color=green, community=0, file="PolishNumberToWordsConverter.cs", label="0: var threeHoursAgo = DateTime.UtcNow.AddHours(-20).Humanize()", span="27-27"];
m15_11 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor20HoursAgo()", file="PolishNumberToWordsConverter.cs", label="Assert.Equal(''acum 20 de ore'', threeHoursAgo)", span="29-29"];
m15_12 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor20HoursAgo()", file="PolishNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor20HoursAgo()", span="25-25"];
m15_18 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor44MinutesAgo()", file="PolishNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor44MinutesAgo()", span="41-41"];
m15_19 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor44MinutesAgo()", color=green, community=0, file="PolishNumberToWordsConverter.cs", label="0: var fourtyFourMinutesAgo = DateTime.UtcNow.AddMinutes(-44).Humanize()", span="43-43"];
m15_20 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor44MinutesAgo()", file="PolishNumberToWordsConverter.cs", label="Assert.Equal(''acum 44 de minute'', fourtyFourMinutesAgo)", span="45-45"];
m15_21 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor44MinutesAgo()", file="PolishNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor44MinutesAgo()", span="41-41"];
m15_13 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor19MinutesAgo()", file="PolishNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor19MinutesAgo()", span="33-33"];
m15_14 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor19MinutesAgo()", file="PolishNumberToWordsConverter.cs", label="var nineteenMinutesAgo = DateTime.UtcNow.AddMinutes(-19).Humanize()", span="35-35"];
m15_15 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor19MinutesAgo()", file="PolishNumberToWordsConverter.cs", label="Assert.Equal(''acum 19 minute'', nineteenMinutesAgo)", span="37-37"];
m15_16 [cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor19MinutesAgo()", file="PolishNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor19MinutesAgo()", span="33-33"];
m15_35 [cluster="System.DateTime.AddDays(double)", file="PolishNumberToWordsConverter.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m15_6 [cluster="System.DateTime.AddHours(double)", file="PolishNumberToWordsConverter.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m17_4 [cluster="Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", file="PrepositionsExtensions.cs", label="Entry Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", span="15-15"];
m17_5 [cluster="Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", file="PrepositionsExtensions.cs", label="return date.At(0);", span="17-17"];
m17_6 [cluster="Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", file="PrepositionsExtensions.cs", label="Exit Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", span="15-15"];
m17_8 [cluster="Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", file="PrepositionsExtensions.cs", label="Entry Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", span="25-25"];
m17_9 [cluster="Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", file="PrepositionsExtensions.cs", label="return date.At(12);", span="27-27"];
m17_10 [cluster="Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", file="PrepositionsExtensions.cs", label="Exit Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", span="25-25"];
m17_7 [cluster="System.DateTime.At(int, int, int, int)", file="PrepositionsExtensions.cs", label="Entry System.DateTime.At(int, int, int, int)", span="5-5"];
m17_0 [cluster="Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", file="PrepositionsExtensions.cs", label="Entry Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", span="5-5"];
m17_1 [cluster="Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", file="PrepositionsExtensions.cs", label="return new DateTime(date.Year, date.Month, date.Day, hour, min, second, millisecond);", span="7-7"];
m17_2 [cluster="Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", file="PrepositionsExtensions.cs", label="Exit Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", span="5-5"];
m17_11 [cluster="Humanizer.PrepositionsExtensions.In(System.DateTime, int)", file="PrepositionsExtensions.cs", label="Entry Humanizer.PrepositionsExtensions.In(System.DateTime, int)", span="36-36"];
m17_12 [cluster="Humanizer.PrepositionsExtensions.In(System.DateTime, int)", file="PrepositionsExtensions.cs", label="return new DateTime(year, date.Month, date.Day, date.Hour, date.Minute, date.Second, date.Millisecond);", span="38-38"];
m17_13 [cluster="Humanizer.PrepositionsExtensions.In(System.DateTime, int)", file="PrepositionsExtensions.cs", label="Exit Humanizer.PrepositionsExtensions.In(System.DateTime, int)", span="36-36"];
m17_3 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, int)", file="PrepositionsExtensions.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int)", span="0-0"];
m19_35 [cluster="System.Math.Abs(int)", file="RussianOrdinalizer.cs", label="Entry System.Math.Abs(int)", span="0-0"];
m19_41 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="RussianOrdinalizer.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m19_37 [cluster="System.Collections.Generic.List<T>.List()", file="RussianOrdinalizer.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m19_60 [cluster="string.EndsWith(string)", file="RussianOrdinalizer.cs", label="Entry string.EndsWith(string)", span="0-0"];
m19_42 [cluster="System.Collections.Generic.List<T>.ToArray()", file="RussianOrdinalizer.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m19_0 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs", label="Entry Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", span="17-17"];
m19_1 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs", label="number == 0", span="19-19"];
m19_3 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs", label="number < 0", span="22-22"];
m19_4 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs", label="return string.Format(''moins {0}'', Convert(Math.Abs(number)));", span="23-23"];
m19_6 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs", label="(number / 1000000000) > 0", span="27-27"];
m19_7 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs", label="parts.Add(string.Format(''{0} milliard{1}'',\r\n                    Convert(number/1000000000),\r\n                    number/1000000000 == 1 ? '''' : ''s''))", span="29-31"];
m19_8 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs", label="number %= 1000000000", span="33-33"];
m19_9 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs", label="(number / 1000000) > 0", span="36-36"];
m19_10 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs", label="parts.Add(string.Format(''{0} million{1}'',\r\n                    Convert(number/1000000),\r\n                    number/1000000 == 1 ? '''' : ''s''))", span="38-40"];
m19_11 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs", label="number %= 1000000", span="42-42"];
m19_12 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs", label="(number / 1000) > 0", span="45-45"];
m19_13 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs", label="parts.Add(number/1000 == 1\r\n                    ? string.Format(''mille'')\r\n                    : string.Format(''{0} mille'', Convert(number/1000)))", span="47-49"];
m19_14 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs", label="number %= 1000", span="51-51"];
m19_15 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs", label="(number / 100) > 0", span="54-54"];
m19_16 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs", label="parts.Add(number < 200 ? ''cent'' : string.Format(''{0} cent'', Convert(number/100)))", span="56-56"];
m19_17 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs", label="number %= 100", span="57-57"];
m19_18 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs", label="number > 0", span="60-60"];
m19_19 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs", label="NumberExceptions.ContainsKey(number)", span="62-62"];
m19_20 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs", label="parts.Add(NumberExceptions[number])", span="63-63"];
m19_21 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs", label="number < 20", span="64-64"];
m19_22 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs", label="parts.Add(UnitsMap[number])", span="65-65"];
m19_24 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs", label="number >= 70 && (number < 80 || number >= 90)", span="69-69"];
m19_25 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs", label="int baseNumber = number < 80 ? 60 : 80", span="71-71"];
m19_26 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs", label="lastPart = string.Format(''{0}-{1}'', TensMap[baseNumber/10], Convert(number - baseNumber))", span="72-72"];
m19_27 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs", label="lastPart = TensMap[number/10]", span="76-76"];
m19_28 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs", label="(number%10) > 0", span="77-77"];
m19_29 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs", label="(number - 1) % 10 == 0", span="79-79"];
m19_31 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs", label="lastPart += string.Format(''-{0}'', UnitsMap[number%10])", span="82-82"];
m19_2 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs", label="return UnitsMap[0];", span="20-20"];
m19_5 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs", label="var parts = new List<string>()", span="25-25"];
m19_32 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs", label="parts.Add(lastPart)", span="85-85"];
m19_33 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs", label="return string.Join('' '', parts.ToArray());", span="89-89"];
m19_23 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs", label="string lastPart", span="68-68"];
m19_30 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs", label="lastPart += '' et un''", span="80-80"];
m19_34 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs", label="Exit Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", span="17-17"];
m19_39 [cluster="System.Collections.Generic.List<T>.Add(T)", file="RussianOrdinalizer.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m19_38 [cluster="string.Format(string, object, object)", file="RussianOrdinalizer.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m19_44 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="RussianOrdinalizer.cs", label="Entry Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", span="92-92"];
m19_45 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="RussianOrdinalizer.cs", label="number == 1", span="94-94"];
m19_47 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="RussianOrdinalizer.cs", label="var convertedNumber = Convert(number)", span="97-97"];
m19_46 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="RussianOrdinalizer.cs", label="return ''premier'';", span="95-95"];
m19_48 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="RussianOrdinalizer.cs", label="convertedNumber.EndsWith(''s'') && !convertedNumber.EndsWith(''trois'')", span="99-99"];
m19_49 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="RussianOrdinalizer.cs", label="convertedNumber = convertedNumber.TrimEnd('s')", span="100-100"];
m19_50 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="RussianOrdinalizer.cs", label="convertedNumber.EndsWith(''cinq'')", span="101-101"];
m19_51 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="RussianOrdinalizer.cs", label="convertedNumber += ''u''", span="102-102"];
m19_52 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="RussianOrdinalizer.cs", label="convertedNumber.EndsWith(''neuf'')", span="103-103"];
m19_53 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="RussianOrdinalizer.cs", label="convertedNumber = convertedNumber.TrimEnd('f') + ''v''", span="104-104"];
m19_54 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="RussianOrdinalizer.cs", label="convertedNumber.StartsWith(''un '')", span="106-106"];
m19_55 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="RussianOrdinalizer.cs", label="convertedNumber = convertedNumber.Remove(0, 3)", span="107-107"];
m19_56 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="RussianOrdinalizer.cs", label="convertedNumber = convertedNumber.TrimEnd('e')", span="109-109"];
m19_57 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="RussianOrdinalizer.cs", label="convertedNumber += ''ième''", span="110-110"];
m19_58 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="RussianOrdinalizer.cs", label="return convertedNumber;", span="111-111"];
m19_59 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="RussianOrdinalizer.cs", label="Exit Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", span="92-92"];
m19_40 [cluster="string.Format(string, params object[])", file="RussianOrdinalizer.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m19_43 [cluster="string.Join(string, params string[])", file="RussianOrdinalizer.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m19_62 [cluster="string.StartsWith(string)", file="RussianOrdinalizer.cs", label="Entry string.StartsWith(string)", span="0-0"];
m19_63 [cluster="string.Remove(int, int)", file="RussianOrdinalizer.cs", label="Entry string.Remove(int, int)", span="0-0"];
m19_61 [cluster="string.TrimEnd(params char[])", file="RussianOrdinalizer.cs", label="Entry string.TrimEnd(params char[])", span="0-0"];
m19_36 [cluster="string.Format(string, object)", file="RussianOrdinalizer.cs", label="Entry string.Format(string, object)", span="0-0"];
m19_64 [file="RussianOrdinalizer.cs", label="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter", span=""];
m22_10 [cluster="string.Format(string, object, object)", file="ToQuantityExtensions.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m22_5 [cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", color=red, community=0, file="ToQuantityExtensions.cs", label="0: return string.Format(''{0} {1}'', quantity, transformedInput);", span="35-35"];
m22_7 [cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", file="ToQuantityExtensions.cs", label="Exit Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", span="25-25"];
m22_8 [cluster="string.Singularize(Humanizer.Plurality)", color=green, community=0, file="ToQuantityExtensions.cs", label="2: Entry string.Singularize(Humanizer.Plurality)", span="194-194"];
m22_9 [cluster="string.Pluralize(Humanizer.Plurality)", file="ToQuantityExtensions.cs", label="Entry string.Pluralize(Humanizer.Plurality)", span="170-170"];
m22_0 [cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", file="ToQuantityExtensions.cs", label="Entry Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", span="25-25"];
m22_1 [cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", file="ToQuantityExtensions.cs", label="var transformedInput = quantity == 1\r\n                ? input.Singularize(Plurality.CouldBeEither)\r\n                : input.Pluralize(Plurality.CouldBeEither)", span="27-29"];
m22_2 [cluster="Humanizer.Tests.Localisation.fiFI.NumberToWordsTests.ToWords(int, string)", file="ToQuantityExtensions.cs", label="Entry Humanizer.Tests.Localisation.fiFI.NumberToWordsTests.ToWords(int, string)", span="35-35"];
m22_4 [cluster="Humanizer.Tests.Localisation.fiFI.NumberToWordsTests.ToWords(int, string)", file="ToQuantityExtensions.cs", label="Exit Humanizer.Tests.Localisation.fiFI.NumberToWordsTests.ToWords(int, string)", span="35-35"];
m22_6 [cluster="Unk.Equal", file="ToQuantityExtensions.cs", label="Entry Unk.Equal", span=""];
m22_3 [cluster="Humanizer.Tests.Localisation.fiFI.NumberToWordsTests.ToWords(int, string)", file="ToQuantityExtensions.cs", label="Assert.Equal(expected, number.ToWords())", span="37-37"];
m22_11 [cluster="int.ToWords()", file="ToQuantityExtensions.cs", label="Entry int.ToWords()", span="32-32"];
m23_4 [cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="ToQuantityTests.cs", label="Entry CommandLine.Core.Token.Equals(CommandLine.Core.Token)", span="55-55"];
m23_0 [cluster="CommandLine.Tests.Unit.Core.TokenTests.Equality()", file="ToQuantityTests.cs", label="Entry CommandLine.Tests.Unit.Core.TokenTests.Equality()", span="16-16"];
m23_1 [cluster="CommandLine.Tests.Unit.Core.TokenTests.Equality()", file="ToQuantityTests.cs", label="Assert.True(Token.Name(''nametok'').Equals(Token.Name(''nametok'')))", span="18-18"];
m23_2 [cluster="CommandLine.Tests.Unit.Core.TokenTests.Equality()", file="ToQuantityTests.cs", label="Exit CommandLine.Tests.Unit.Core.TokenTests.Equality()", span="16-16"];
m23_3 [cluster="CommandLine.Core.Token.Name(string)", file="ToQuantityTests.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m23_5 [cluster="Unk.True", file="ToQuantityTests.cs", label="Entry Unk.True", span=""];
m24_10 [cluster="Humanizer.Truncator.Truncate(string, int, string, Humanizer.ITruncator)", file="Truncator.cs", label="Entry Humanizer.Truncator.Truncate(string, int, string, Humanizer.ITruncator)", span="52-52"];
m24_11 [cluster="Humanizer.Truncator.Truncate(string, int, string, Humanizer.ITruncator)", file="Truncator.cs", label="truncator == null", span="54-54"];
m24_13 [cluster="Humanizer.Truncator.Truncate(string, int, string, Humanizer.ITruncator)", color=red, community=0, file="Truncator.cs", label="0: input == null", span="57-57"];
m24_15 [cluster="Humanizer.Truncator.Truncate(string, int, string, Humanizer.ITruncator)", color=green, community=0, file="Truncator.cs", label="0: return truncator.Truncate(input, length, truncationString);", span="60-60"];
m24_12 [cluster="Humanizer.Truncator.Truncate(string, int, string, Humanizer.ITruncator)", color=green, community=0, file="Truncator.cs", label="0: throw new ArgumentNullException(''truncator'');", span="55-55"];
m24_14 [cluster="Humanizer.Truncator.Truncate(string, int, string, Humanizer.ITruncator)", file="Truncator.cs", label="return null;", span="58-58"];
m24_16 [cluster="Humanizer.Truncator.Truncate(string, int, string, Humanizer.ITruncator)", file="Truncator.cs", label="Exit Humanizer.Truncator.Truncate(string, int, string, Humanizer.ITruncator)", span="52-52"];
m24_4 [cluster="Humanizer.Truncator.Truncate(string, int, Humanizer.ITruncator)", file="Truncator.cs", label="Entry Humanizer.Truncator.Truncate(string, int, Humanizer.ITruncator)", span="27-27"];
m24_5 [cluster="Humanizer.Truncator.Truncate(string, int, Humanizer.ITruncator)", color=red, community=0, file="Truncator.cs", label="0: return input.Truncate(length, ''…'', truncator);", span="29-29"];
m24_6 [cluster="Humanizer.Truncator.Truncate(string, int, Humanizer.ITruncator)", file="Truncator.cs", label="Exit Humanizer.Truncator.Truncate(string, int, Humanizer.ITruncator)", span="27-27"];
m24_17 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Truncator.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m24_0 [cluster="Humanizer.Truncator.Truncate(string, int)", file="Truncator.cs", label="Entry Humanizer.Truncator.Truncate(string, int)", span="15-15"];
m24_1 [cluster="Humanizer.Truncator.Truncate(string, int)", file="Truncator.cs", label="return input.Truncate(length, ''…'', FixedLength);", span="17-17"];
m24_2 [cluster="Humanizer.Truncator.Truncate(string, int)", file="Truncator.cs", label="Exit Humanizer.Truncator.Truncate(string, int)", span="15-15"];
m24_7 [cluster="Humanizer.Truncator.Truncate(string, int, string)", file="Truncator.cs", label="Entry Humanizer.Truncator.Truncate(string, int, string)", span="39-39"];
m24_8 [cluster="Humanizer.Truncator.Truncate(string, int, string)", color=green, community=0, file="Truncator.cs", label="0: return input.Truncate(length, truncationString, FixedLength);", span="41-41"];
m24_9 [cluster="Humanizer.Truncator.Truncate(string, int, string)", file="Truncator.cs", label="Exit Humanizer.Truncator.Truncate(string, int, string)", span="39-39"];
m24_18 [cluster="Humanizer.ITruncator.Truncate(string, int, string)", file="Truncator.cs", label="Entry Humanizer.ITruncator.Truncate(string, int, string)", span="14-14"];
m24_3 [cluster="string.Truncate(int, string, Humanizer.ITruncator)", file="Truncator.cs", label="Entry string.Truncate(int, string, Humanizer.ITruncator)", span="52-52"];
m1_0 -> m1_1  [color=red, key=0, style=solid];
m1_1 -> m1_2  [color=red, key=0, style=solid];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m1_22 -> m1_23  [color=red, key=0, style=solid];
m1_22 -> m1_25  [color=red, key=1, label="CommandLine.Core.Specification", style=dashed];
m1_22 -> m1_29  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m1_22 -> m1_30  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m1_23 -> m1_24  [color=red, key=0, style=solid];
m1_23 -> m1_25  [color=red, key=0, style=solid];
m1_25 -> m1_26  [color=red, key=0, style=solid];
m1_25 -> m1_28  [color=red, key=0, style=solid];
m1_25 -> m1_36  [color=red, key=2, style=dotted];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_31  [color=darkseagreen4, key=1, label=min, style=dashed];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_32  [color=red, key=1, label=max, style=dashed];
m1_24 -> m1_34  [color=red, key=0, style=solid];
m1_24 -> m1_35  [color=red, key=2, style=dotted];
m1_26 -> m1_27  [key=0, style=solid];
m1_28 -> m1_29  [key=0, style=solid];
m1_27 -> m1_34  [key=0, style=solid];
m1_27 -> m1_37  [key=2, style=dotted];
m1_31 -> m1_32  [color=red, key=0, style=solid];
m1_31 -> m1_33  [key=0, style=solid];
m1_32 -> m1_34  [color=red, key=0, style=solid];
m1_32 -> m1_37  [color=red, key=2, style=dotted];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_38  [key=2, style=dotted];
m1_34 -> m1_22  [color=blue, key=0, style=bold];
m1_3 -> m1_4  [key=0, style=solid];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_3  [color=blue, key=0, style=bold];
m1_39 -> m1_40  [key=0, style=solid];
m1_40 -> m1_41  [key=0, style=solid];
m1_41 -> m1_39  [color=blue, key=0, style=bold];
m1_45 -> m1_46  [key=0, style=solid];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_48  [key=2, style=dotted];
m1_47 -> m1_45  [color=blue, key=0, style=bold];
m1_42 -> m1_43  [key=0, style=solid];
m1_43 -> m1_44  [key=0, style=solid];
m1_44 -> m1_42  [color=blue, key=0, style=bold];
m1_18 -> m1_19  [key=0, style=solid];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_21  [key=2, style=dotted];
m1_20 -> m1_18  [color=blue, key=0, style=bold];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m1_10 -> m1_14  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_14  [key=0, style=solid];
m1_11 -> m1_19  [color=darkseagreen4, key=1, label=guard, style=dashed];
m1_11 -> m1_13  [color=red, key=1, label=guard, style=dashed];
m1_12 -> m1_13  [color=red, key=0, style=solid];
m1_12 -> m1_11  [key=0, style=solid];
m1_12 -> m1_16  [key=2, style=dotted];
m1_12 -> m1_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_14 -> m1_15  [key=0, style=solid];
m1_13 -> m1_15  [color=red, key=0, style=solid];
m1_13 -> m1_17  [color=red, key=2, style=dotted];
m1_15 -> m1_10  [color=blue, key=0, style=bold];
m1_6 -> m1_7  [color=red, key=0, style=solid];
m1_7 -> m1_8  [color=red, key=0, style=solid];
m1_7 -> m1_9  [color=red, key=2, style=dotted];
m1_8 -> m1_6  [color=blue, key=0, style=bold];
m1_49 -> m1_19  [color=darkseagreen4, key=1, label=guard, style=dashed];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_24 -> m2_27  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_24 -> m2_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_24 -> m2_29  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_24 -> m2_5  [color=green, key=3, label="method methodReturn string Humanize", style=bold];
m2_24 -> m2_24  [color=green, key=3, label="method methodReturn string Humanize", style=bold];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_27  [key=0, style=solid];
m2_25 -> m2_19  [key=2, style=dotted];
m2_26 -> m2_30  [key=0, style=solid];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_29  [key=0, style=solid];
m2_27 -> m2_31  [key=2, style=dotted];
m2_28 -> m2_30  [key=0, style=solid];
m2_28 -> m2_32  [key=2, style=dotted];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_5  [key=2, style=dotted];
m2_30 -> m2_24  [color=blue, key=0, style=bold];
m2_21 -> m2_22  [key=0, style=solid];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_0  [color=green, key=3, label="Field variable System.Func<string, string> FromUnderscoreDashSeparatedWords", style=bold];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_1 -> m2_4  [key=2, style=dotted];
m2_2 -> m2_0  [color=blue, key=0, style=bold];
m2_16 -> m2_17  [key=0, style=solid];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_19  [key=2, style=dotted];
m2_17 -> m2_20  [key=2, style=dotted];
m2_18 -> m2_16  [color=blue, key=0, style=bold];
m2_22 -> m2_23  [key=0, style=solid];
m2_23 -> m2_21  [color=blue, key=0, style=bold];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_35  [color=darkseagreen4, key=1, label="Humanizer.LetterCasing", style=dashed];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_37  [key=2, style=dotted];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_38  [key=2, style=dotted];
m2_36 -> m2_33  [color=blue, key=0, style=bold];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_41  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_38 -> m2_43  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_38 -> m2_45  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_38 -> m2_47  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_38 -> m2_48  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_38 -> m2_49  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_42  [key=0, style=solid];
m2_39 -> m2_44  [key=0, style=solid];
m2_39 -> m2_46  [key=0, style=solid];
m2_39 -> m2_50  [key=0, style=solid];
m2_41 -> m2_51  [key=0, style=solid];
m2_41 -> m2_52  [key=2, style=dotted];
m2_43 -> m2_51  [key=0, style=solid];
m2_43 -> m2_20  [key=2, style=dotted];
m2_45 -> m2_51  [key=0, style=solid];
m2_45 -> m2_53  [key=2, style=dotted];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_49  [key=0, style=solid];
m2_48 -> m2_51  [key=0, style=solid];
m2_48 -> m2_54  [key=2, style=dotted];
m2_48 -> m2_53  [key=2, style=dotted];
m2_48 -> m2_55  [key=2, style=dotted];
m2_48 -> m2_56  [key=2, style=dotted];
m2_49 -> m2_51  [key=0, style=solid];
m2_49 -> m2_53  [key=2, style=dotted];
m2_40 -> m2_41  [key=0, style=solid];
m2_42 -> m2_43  [key=0, style=solid];
m2_44 -> m2_45  [key=0, style=solid];
m2_46 -> m2_47  [key=0, style=solid];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_57  [key=2, style=dotted];
m2_51 -> m2_38  [color=blue, key=0, style=bold];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_24  [color=green, key=3, label="Parameter variable string name", style=bold];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_10  [key=2, style=dotted];
m2_6 -> m2_11  [key=2, style=dotted];
m2_6 -> m2_12  [key=2, style=dotted];
m2_6 -> m2_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_6 -> m2_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_13  [key=2, style=dotted];
m2_7 -> m2_14  [key=2, style=dotted];
m2_7 -> m2_7  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_15  [key=2, style=dotted];
m2_9 -> m2_5  [color=blue, key=0, style=bold];
m4_0 -> m4_18  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_5  [color=darkorchid, key=3, label="method methodReturn string Convert", style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_4  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_7  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_12  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_15  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_16  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_17  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_19  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_29  [color=darkorchid, key=3, label="Parameter variable int number", style=bold];
m4_23 -> m4_23  [color=green, key=1, label=word, style=dashed];
m4_23 -> m4_25  [color=green, key=0, style=solid];
m4_18 -> m4_23  [color=green, key=1, label=tens, style=dashed];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_24  [color=darkseagreen4, key=1, label=tens, style=dashed];
m4_5 -> m4_23  [color=green, key=1, label=word, style=dashed];
m4_5 -> m4_18  [color=darkorchid, key=3, label="Local variable string word", style=bold];
m4_5 -> m4_5  [color=darkorchid, key=3, label="Local variable string word", style=bold];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_10  [color=darkseagreen4, key=1, label=word, style=dashed];
m4_5 -> m4_11  [color=darkseagreen4, key=1, label=word, style=dashed];
m4_5 -> m4_17  [color=darkseagreen4, key=1, label=word, style=dashed];
m4_5 -> m4_24  [color=darkseagreen4, key=1, label=word, style=dashed];
m4_5 -> m4_25  [color=darkseagreen4, key=1, label=word, style=dashed];
m4_10 -> m4_23  [color=green, key=1, label=word, style=dashed];
m4_10 -> m4_10  [color=darkseagreen4, key=1, label=word, style=dashed];
m4_10 -> m4_12  [key=0, style=solid];
m4_10 -> m4_14  [color=darkseagreen4, key=1, label=word, style=dashed];
m4_10 -> m4_17  [color=darkseagreen4, key=1, label=word, style=dashed];
m4_10 -> m4_24  [color=darkseagreen4, key=1, label=word, style=dashed];
m4_10 -> m4_25  [color=darkseagreen4, key=1, label=word, style=dashed];
m4_11 -> m4_23  [color=green, key=1, label=word, style=dashed];
m4_11 -> m4_11  [color=darkseagreen4, key=1, label=word, style=dashed];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_0  [key=2, style=dotted];
m4_11 -> m4_14  [color=darkseagreen4, key=1, label=word, style=dashed];
m4_11 -> m4_17  [color=darkseagreen4, key=1, label=word, style=dashed];
m4_11 -> m4_24  [color=darkseagreen4, key=1, label=word, style=dashed];
m4_11 -> m4_25  [color=darkseagreen4, key=1, label=word, style=dashed];
m4_14 -> m4_23  [color=green, key=1, label=word, style=dashed];
m4_14 -> m4_14  [color=darkseagreen4, key=1, label=word, style=dashed];
m4_14 -> m4_6  [key=0, style=solid];
m4_14 -> m4_17  [color=darkseagreen4, key=1, label=word, style=dashed];
m4_14 -> m4_24  [color=darkseagreen4, key=1, label=word, style=dashed];
m4_14 -> m4_25  [color=darkseagreen4, key=1, label=word, style=dashed];
m4_21 -> m4_23  [color=green, key=1, label=units, style=dashed];
m4_21 -> m4_22  [key=0, style=solid];
m4_22 -> m4_23  [color=green, key=0, style=solid];
m4_22 -> m4_28  [key=2, style=dotted];
m4_25 -> m4_26  [key=0, style=solid];
m4_12 -> m4_18  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_12 -> m4_12  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_15  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_12 -> m4_16  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_12 -> m4_17  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_12 -> m4_19  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_16 -> m4_18  [key=0, style=solid];
m4_16 -> m4_17  [key=0, style=solid];
m4_19 -> m4_21  [color=darkseagreen4, key=1, label=unit, style=dashed];
m4_19 -> m4_20  [key=0, style=solid];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_24  [color=darkseagreen4, key=1, label=word, style=dashed];
m4_3 -> m4_5  [key=0, style=solid];
m4_3 -> m4_4  [key=0, style=solid];
m4_6 -> m4_10  [color=darkseagreen4, key=1, label=m, style=dashed];
m4_6 -> m4_11  [color=darkseagreen4, key=1, label=m, style=dashed];
m4_6 -> m4_14  [color=darkseagreen4, key=1, label=m, style=dashed];
m4_6 -> m4_12  [color=darkseagreen4, key=1, label=m, style=dashed];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_15  [key=0, style=solid];
m4_6 -> m4_9  [color=darkseagreen4, key=1, label=m, style=dashed];
m4_17 -> m4_25  [key=0, style=solid];
m4_17 -> m4_17  [color=darkseagreen4, key=1, label=word, style=dashed];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_11  [key=0, style=solid];
m4_7 -> m4_11  [color=darkseagreen4, key=1, label=divided, style=dashed];
m4_7 -> m4_9  [color=darkseagreen4, key=1, label=divided, style=dashed];
m4_7 -> m4_8  [key=0, style=solid];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_6  [key=0, style=solid];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_24  [key=0, style=solid];
m4_15 -> m4_25  [key=0, style=solid];
m4_15 -> m4_16  [key=0, style=solid];
m4_4 -> m4_0  [key=2, style=dotted];
m4_4 -> m4_26  [key=0, style=solid];
m4_4 -> m4_27  [key=2, style=dotted];
m4_1 -> m4_3  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_8 -> m4_6  [key=0, style=solid];
m4_8 -> m4_9  [key=0, style=solid];
m4_2 -> m4_26  [key=0, style=solid];
m4_26 -> m4_0  [color=blue, key=0, style=bold];
m4_29 -> m4_30  [key=0, style=solid];
m4_30 -> m4_0  [key=2, style=dotted];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_41  [color=darkseagreen4, key=1, label=word, style=dashed];
m4_30 -> m4_32  [color=darkseagreen4, key=1, label=word, style=dashed];
m4_30 -> m4_33  [color=darkseagreen4, key=1, label=word, style=dashed];
m4_30 -> m4_34  [color=darkseagreen4, key=1, label=word, style=dashed];
m4_30 -> m4_35  [color=darkseagreen4, key=1, label=word, style=dashed];
m4_31 -> m4_32  [key=0, style=solid];
m4_31 -> m4_33  [key=0, style=solid];
m4_31 -> m4_37  [key=2, style=dotted];
m4_31 -> m4_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_32 -> m4_36  [key=0, style=solid];
m4_32 -> m4_38  [key=2, style=dotted];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_35  [key=0, style=solid];
m4_33 -> m4_39  [key=2, style=dotted];
m4_34 -> m4_36  [key=0, style=solid];
m4_35 -> m4_36  [key=0, style=solid];
m4_36 -> m4_29  [color=blue, key=0, style=bold];
m4_40 -> m4_41  [key=0, style=solid];
m4_41 -> m4_28  [key=2, style=dotted];
m4_41 -> m4_41  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, string>", style=dashed];
m4_41 -> m4_42  [key=0, style=solid];
m4_42 -> m4_40  [color=blue, key=0, style=bold];
m4_43 -> m4_11  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter", style=dashed];
m4_43 -> m4_4  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter", style=dashed];
m4_43 -> m4_30  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter", style=dashed];
m4_44 -> m4_41  [color=darkseagreen4, key=1, label=word, style=dashed];
m6_4 -> m6_5  [color=green, key=0, style=solid];
m6_4 -> m6_8  [key=0, style=solid];
m6_5 -> m6_6  [color=red, key=0, style=solid];
m6_5 -> m6_7  [color=green, key=2, style=dotted];
m6_6 -> m6_4  [color=blue, key=0, style=bold];
m6_6 -> m6_8  [color=red, key=0, style=solid];
m6_6 -> m6_9  [color=red, key=2, style=dotted];
m6_8 -> m6_9  [color=green, key=0, style=solid];
m6_8 -> m6_0  [color=blue, key=0, style=bold];
m6_9 -> m6_10  [color=green, key=0, style=solid];
m6_9 -> m6_7  [color=green, key=2, style=dotted];
m6_10 -> m6_8  [color=blue, key=0, style=bold];
m6_7 -> m6_8  [color=red, key=0, style=solid];
m6_7 -> m6_9  [color=red, key=2, style=dotted];
m6_0 -> m6_1  [color=green, key=0, style=solid];
m6_0 -> m6_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_0 -> m6_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_0 -> m6_5  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_0 -> m6_6  [color=red, key=1, label=string, style=dashed];
m6_0 -> m6_7  [color=red, key=1, label=string, style=dashed];
m6_0 -> m6_2  [color=darkorchid, key=3, label="method methodReturn string Truncate", style=bold];
m6_0 -> m6_0  [color=darkorchid, key=3, label="method methodReturn string Truncate", style=bold];
m6_1 -> m6_2  [color=green, key=0, style=solid];
m6_1 -> m6_3  [key=0, style=solid];
m6_1 -> m6_1  [color=green, key=3, label="method methodReturn string Truncate", style=bold];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_5  [key=0, style=solid];
m6_2 -> m6_8  [key=0, style=solid];
m6_2 -> m6_0  [color=blue, key=0, style=bold];
m6_11 -> m6_12  [key=0, style=solid];
m6_12 -> m6_3  [key=2, style=dotted];
m6_12 -> m6_13  [key=0, style=solid];
m6_13 -> m6_11  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [color=green, key=0, style=solid];
m8_0 -> m8_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_0 -> m8_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_0 -> m8_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_0 -> m8_7  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_0 -> m8_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_0 -> m8_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_0 -> m8_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_0 -> m8_16  [color=darkseagreen4, key=1, label=int, style=dashed];
m8_0 -> m8_17  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_0 -> m8_20  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_0 -> m8_2  [color=darkorchid, key=3, label="method methodReturn string Truncate", style=bold];
m8_0 -> m8_0  [color=darkorchid, key=3, label="method methodReturn string Truncate", style=bold];
m8_1 -> m8_1  [color=green, key=3, label="method methodReturn string Truncate", style=bold];
m8_1 -> m8_2  [color=green, key=0, style=solid];
m8_1 -> m8_3  [color=green, key=2, style=dotted];
m8_1 -> m8_4  [color=green, key=2, style=dotted];
m8_2 -> m8_0  [color=blue, key=0, style=bold];
m8_2 -> m8_21  [key=0, style=solid];
m8_5 -> m8_6  [color=red, key=0, style=solid];
m8_5 -> m8_14  [color=red, key=1, label=numberOfWordsProcessed, style=dashed];
m8_5 -> m8_16  [color=red, key=1, label=numberOfWordsProcessed, style=dashed];
m8_5 -> m8_5  [color=red, key=3, label="Local variable int numberOfWordsProcessed", style=bold];
m8_6 -> m8_3  [key=2, style=dotted];
m8_6 -> m8_4  [key=2, style=dotted];
m8_6 -> m8_6  [color=darkorchid, key=3, label="Local variable int numberOfWordsProcessed", style=bold];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_22  [key=2, style=dotted];
m8_6 -> m8_23  [key=2, style=dotted];
m8_7 -> m8_5  [color=blue, key=0, style=bold];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_9  [color=red, key=0, style=solid];
m8_4 -> m8_21  [key=0, style=solid];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_5  [color=red, key=0, style=solid];
m8_8 -> m8_21  [key=0, style=solid];
m8_8 -> m8_9  [color=green, key=0, style=solid];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_20  [key=0, style=solid];
m8_11 -> m8_5  [color=red, key=3, label="Local variable int i", style=bold];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_18  [key=0, style=solid];
m8_12 -> m8_24  [key=2, style=dotted];
m8_12 -> m8_3  [key=2, style=dotted];
m8_12 -> m8_4  [key=2, style=dotted];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_19  [key=0, style=solid];
m8_16 -> m8_14  [color=blue, key=0, style=bold];
m8_17 -> m8_21  [key=0, style=solid];
m8_17 -> m8_25  [key=2, style=dotted];
m8_20 -> m8_21  [key=0, style=solid];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_14  [color=darkseagreen4, key=1, label=numberOfWordsProcessed, style=dashed];
m8_14 -> m8_16  [color=darkseagreen4, key=1, label=numberOfWordsProcessed, style=dashed];
m8_9 -> m8_10  [color=green, key=0, style=solid];
m8_9 -> m8_13  [color=red, key=1, label=lastCharactersWasWhiteSpace, style=dashed];
m8_9 -> m8_9  [color=red, key=3, label="Local variable bool lastCharactersWasWhiteSpace", style=bold];
m8_9 -> m8_3  [color=green, key=2, style=dotted];
m8_9 -> m8_4  [color=green, key=2, style=dotted];
m8_9 -> m8_6  [color=green, key=3, label="Local variable int i", style=bold];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_12  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_10 -> m8_17  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_10 -> m8_19  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_10 -> m8_8  [color=blue, key=0, style=bold];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_15  [key=0, style=solid];
m8_13 -> m8_11  [color=blue, key=0, style=bold];
m8_19 -> m8_11  [key=0, style=solid];
m8_19 -> m8_19  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_18 -> m8_19  [key=0, style=solid];
m8_15 -> m8_16  [key=0, style=solid];
m8_15 -> m8_3  [key=2, style=dotted];
m8_15 -> m8_4  [key=2, style=dotted];
m8_21 -> m8_0  [color=blue, key=0, style=bold];
m9_5 -> m9_6  [key=0, style=solid];
m9_26 -> m9_27  [key=0, style=solid];
m9_27 -> m9_21  [key=2, style=dotted];
m9_27 -> m9_29  [key=2, style=dotted];
m9_27 -> m9_22  [key=2, style=dotted];
m9_27 -> m9_14  [key=2, style=dotted];
m9_27 -> m9_28  [key=0, style=solid];
m9_28 -> m9_26  [color=blue, key=0, style=bold];
m9_42 -> m9_43  [key=0, style=solid];
m9_43 -> m9_21  [key=2, style=dotted];
m9_43 -> m9_22  [key=2, style=dotted];
m9_43 -> m9_14  [key=2, style=dotted];
m9_43 -> m9_44  [key=0, style=solid];
m9_44 -> m9_42  [color=blue, key=0, style=bold];
m9_6 -> m9_7  [key=0, style=solid];
m9_6 -> m9_8  [key=2, style=dotted];
m9_6 -> m9_4  [key=2, style=dotted];
m9_39 -> m9_40  [key=0, style=solid];
m9_40 -> m9_21  [key=2, style=dotted];
m9_40 -> m9_29  [key=2, style=dotted];
m9_40 -> m9_22  [key=2, style=dotted];
m9_40 -> m9_14  [key=2, style=dotted];
m9_40 -> m9_41  [key=0, style=solid];
m9_41 -> m9_39  [color=blue, key=0, style=bold];
m9_3 -> m9_0  [color=blue, key=0, style=bold];
m9_23 -> m9_24  [key=0, style=solid];
m9_24 -> m9_21  [key=2, style=dotted];
m9_24 -> m9_22  [key=2, style=dotted];
m9_24 -> m9_14  [key=2, style=dotted];
m9_24 -> m9_25  [key=0, style=solid];
m9_25 -> m9_23  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_0 -> m9_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_3  [key=2, style=dotted];
m9_1 -> m9_4  [key=2, style=dotted];
m9_1 -> m9_5  [key=2, style=dotted];
m9_1 -> m9_6  [key=2, style=dotted];
m9_2 -> m9_0  [color=blue, key=0, style=bold];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_4  [key=2, style=dotted];
m9_2 -> m9_5  [key=2, style=dotted];
m9_2 -> m9_6  [key=2, style=dotted];
m9_48 -> m9_49  [key=0, style=solid];
m9_49 -> m9_21  [key=2, style=dotted];
m9_49 -> m9_22  [key=2, style=dotted];
m9_49 -> m9_14  [key=2, style=dotted];
m9_49 -> m9_50  [key=0, style=solid];
m9_50 -> m9_48  [color=blue, key=0, style=bold];
m9_7 -> m9_8  [key=0, style=solid];
m9_7 -> m9_10  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_7 -> m9_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_7 -> m9_5  [color=blue, key=0, style=bold];
m9_8 -> m9_9  [key=0, style=solid];
m9_8 -> m9_13  [key=2, style=dotted];
m9_8 -> m9_10  [color=darkseagreen4, key=1, label=utcNow, style=dashed];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_13  [key=2, style=dotted];
m9_9 -> m9_11  [color=darkseagreen4, key=1, label=now, style=dashed];
m9_10 -> m9_11  [key=0, style=solid];
m9_10 -> m9_4  [key=2, style=dotted];
m9_10 -> m9_5  [key=2, style=dotted];
m9_10 -> m9_6  [key=2, style=dotted];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_4  [key=2, style=dotted];
m9_11 -> m9_5  [key=2, style=dotted];
m9_11 -> m9_6  [key=2, style=dotted];
m9_12 -> m9_7  [color=blue, key=0, style=bold];
m9_33 -> m9_34  [key=0, style=solid];
m9_34 -> m9_21  [key=2, style=dotted];
m9_34 -> m9_29  [key=2, style=dotted];
m9_34 -> m9_22  [key=2, style=dotted];
m9_34 -> m9_14  [key=2, style=dotted];
m9_34 -> m9_35  [key=0, style=solid];
m9_35 -> m9_33  [color=blue, key=0, style=bold];
m9_45 -> m9_46  [key=0, style=solid];
m9_46 -> m9_21  [key=2, style=dotted];
m9_46 -> m9_29  [key=2, style=dotted];
m9_46 -> m9_22  [key=2, style=dotted];
m9_46 -> m9_14  [key=2, style=dotted];
m9_46 -> m9_47  [key=0, style=solid];
m9_47 -> m9_45  [color=blue, key=0, style=bold];
m9_51 -> m9_52  [color=green, key=0, style=solid];
m9_52 -> m9_53  [color=green, key=0, style=solid];
m9_52 -> m9_21  [color=green, key=2, style=dotted];
m9_52 -> m9_29  [color=green, key=2, style=dotted];
m9_52 -> m9_22  [color=green, key=2, style=dotted];
m9_52 -> m9_14  [color=green, key=2, style=dotted];
m9_53 -> m9_51  [color=blue, key=0, style=bold];
m9_36 -> m9_37  [key=0, style=solid];
m9_37 -> m9_21  [key=2, style=dotted];
m9_37 -> m9_22  [key=2, style=dotted];
m9_37 -> m9_14  [key=2, style=dotted];
m9_37 -> m9_38  [key=0, style=solid];
m9_38 -> m9_36  [color=blue, key=0, style=bold];
m9_60 -> m9_61  [key=0, style=solid];
m9_61 -> m9_21  [key=2, style=dotted];
m9_61 -> m9_29  [key=2, style=dotted];
m9_61 -> m9_22  [key=2, style=dotted];
m9_61 -> m9_14  [key=2, style=dotted];
m9_61 -> m9_62  [key=0, style=solid];
m9_62 -> m9_60  [color=blue, key=0, style=bold];
m9_54 -> m9_55  [color=green, key=0, style=solid];
m9_54 -> m9_8  [color=darkorchid, key=3, label="Local variable string convertedNumber", style=bold];
m9_55 -> m9_56  [color=green, key=0, style=solid];
m9_55 -> m9_21  [color=green, key=2, style=dotted];
m9_55 -> m9_22  [color=green, key=2, style=dotted];
m9_55 -> m9_14  [color=green, key=2, style=dotted];
m9_56 -> m9_54  [color=blue, key=0, style=bold];
m9_57 -> m9_58  [key=0, style=solid];
m9_58 -> m9_21  [key=2, style=dotted];
m9_58 -> m9_22  [key=2, style=dotted];
m9_58 -> m9_14  [key=2, style=dotted];
m9_58 -> m9_59  [key=0, style=solid];
m9_59 -> m9_57  [color=blue, key=0, style=bold];
m9_14 -> m9_15  [key=0, style=solid];
m9_14 -> m9_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_0  [key=2, style=dotted];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_7  [key=2, style=dotted];
m9_17 -> m9_14  [color=blue, key=0, style=bold];
m9_18 -> m9_19  [key=0, style=solid];
m9_19 -> m9_21  [key=2, style=dotted];
m9_19 -> m9_22  [key=2, style=dotted];
m9_19 -> m9_14  [key=2, style=dotted];
m9_19 -> m9_20  [key=0, style=solid];
m9_20 -> m9_18  [color=blue, key=0, style=bold];
m9_30 -> m9_31  [key=0, style=solid];
m9_31 -> m9_21  [key=2, style=dotted];
m9_31 -> m9_22  [key=2, style=dotted];
m9_31 -> m9_14  [key=2, style=dotted];
m9_31 -> m9_32  [key=0, style=solid];
m9_32 -> m9_30  [color=blue, key=0, style=bold];
m9_63 -> m9_52  [color=green, key=1, label="Humanizer.Tests.Extensions.DateHumanizeTests", style=dashed];
m9_63 -> m9_55  [color=green, key=1, label="Humanizer.Tests.Extensions.DateHumanizeTests", style=dashed];
m9_63 -> m9_15  [color=darkseagreen4, key=1, label="Humanizer.Tests.Extensions.DateHumanizeTests", style=dashed];
m9_63 -> m9_16  [color=darkseagreen4, key=1, label="Humanizer.Tests.Extensions.DateHumanizeTests", style=dashed];
m9_63 -> m9_19  [color=darkseagreen4, key=1, label="Humanizer.Tests.Extensions.DateHumanizeTests", style=dashed];
m9_63 -> m9_24  [color=darkseagreen4, key=1, label="Humanizer.Tests.Extensions.DateHumanizeTests", style=dashed];
m9_63 -> m9_27  [color=darkseagreen4, key=1, label="Humanizer.Tests.Extensions.DateHumanizeTests", style=dashed];
m9_63 -> m9_31  [color=darkseagreen4, key=1, label="Humanizer.Tests.Extensions.DateHumanizeTests", style=dashed];
m9_63 -> m9_34  [color=darkseagreen4, key=1, label="Humanizer.Tests.Extensions.DateHumanizeTests", style=dashed];
m9_63 -> m9_37  [color=darkseagreen4, key=1, label="Humanizer.Tests.Extensions.DateHumanizeTests", style=dashed];
m9_63 -> m9_40  [color=darkseagreen4, key=1, label="Humanizer.Tests.Extensions.DateHumanizeTests", style=dashed];
m9_63 -> m9_43  [color=darkseagreen4, key=1, label="Humanizer.Tests.Extensions.DateHumanizeTests", style=dashed];
m9_63 -> m9_46  [color=darkseagreen4, key=1, label="Humanizer.Tests.Extensions.DateHumanizeTests", style=dashed];
m9_63 -> m9_49  [color=darkseagreen4, key=1, label="Humanizer.Tests.Extensions.DateHumanizeTests", style=dashed];
m9_63 -> m9_58  [color=darkseagreen4, key=1, label="Humanizer.Tests.Extensions.DateHumanizeTests", style=dashed];
m9_63 -> m9_61  [color=darkseagreen4, key=1, label="Humanizer.Tests.Extensions.DateHumanizeTests", style=dashed];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_0  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_0  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_0 -> m12_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_0 -> m12_3  [color=darkseagreen4, key=1, label=char, style=dashed];
m12_0 -> m12_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_0 -> m12_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_0 -> m12_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_0 -> m12_7  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m12_1 -> m12_2  [key=0, style=solid];
m12_2 -> m12_3  [key=0, style=solid];
m12_3 -> m12_4  [key=0, style=solid];
m12_4 -> m12_5  [key=0, style=solid];
m12_5 -> m12_6  [key=0, style=solid];
m12_6 -> m12_7  [key=0, style=solid];
m12_7 -> m12_8  [key=0, style=solid];
m12_8 -> m12_0  [color=blue, key=0, style=bold];
m12_9 -> m12_10  [color=red, key=0, style=solid];
m12_10 -> m12_11  [color=red, key=0, style=solid];
m12_10 -> m12_0  [color=red, key=2, style=dotted];
m12_10 -> m12_12  [color=red, key=2, style=dotted];
m12_11 -> m12_9  [color=blue, key=0, style=bold];
m12_13 -> m12_1  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m12_13 -> m12_2  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m12_13 -> m12_3  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m12_13 -> m12_4  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m12_13 -> m12_5  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m12_13 -> m12_6  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m12_13 -> m12_7  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m13_5 -> m13_6  [key=0, style=solid];
m13_5 -> m13_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_5 -> m13_60  [key=2, style=dotted];
m13_6 -> m13_3  [key=2, style=dotted];
m13_6 -> m13_4  [key=2, style=dotted];
m13_6 -> m13_7  [key=0, style=solid];
m13_6 -> m13_60  [key=2, style=dotted];
m13_7 -> m13_3  [key=2, style=dotted];
m13_7 -> m13_4  [key=2, style=dotted];
m13_7 -> m13_8  [color=red, key=0, style=solid];
m13_7 -> m13_60  [key=2, style=dotted];
m13_8 -> m13_5  [color=blue, key=0, style=bold];
m13_8 -> m13_9  [color=red, key=0, style=solid];
m13_8 -> m13_60  [color=red, key=2, style=dotted];
m13_28 -> m13_29  [color=red, key=0, style=solid];
m13_28 -> m13_61  [key=2, style=dotted];
m13_21 -> m13_22  [color=red, key=0, style=solid];
m13_21 -> m13_61  [key=2, style=dotted];
m13_22 -> m13_4  [key=2, style=dotted];
m13_22 -> m13_23  [color=red, key=0, style=solid];
m13_22 -> m13_24  [key=2, style=dotted];
m13_22 -> m13_61  [color=red, key=2, style=dotted];
m13_23 -> m13_21  [color=blue, key=0, style=bold];
m13_23 -> m13_24  [color=red, key=0, style=solid];
m13_23 -> m13_61  [key=2, style=dotted];
m13_131 -> m13_136  [key=0, style=solid];
m13_131 -> m13_138  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_131 -> m13_139  [color=darkseagreen4, key=1, label=int, style=dashed];
m13_131 -> m13_141  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_131 -> m13_143  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_131 -> m13_145  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_131 -> m13_146  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_136 -> m13_137  [key=0, style=solid];
m13_138 -> m13_147  [key=0, style=solid];
m13_139 -> m13_140  [key=0, style=solid];
m13_139 -> m13_142  [key=0, style=solid];
m13_139 -> m13_144  [key=0, style=solid];
m13_139 -> m13_146  [key=0, style=solid];
m13_141 -> m13_147  [key=0, style=solid];
m13_143 -> m13_147  [key=0, style=solid];
m13_145 -> m13_147  [key=0, style=solid];
m13_146 -> m13_147  [key=0, style=solid];
m13_137 -> m13_138  [key=0, style=solid];
m13_137 -> m13_139  [key=0, style=solid];
m13_140 -> m13_141  [key=0, style=solid];
m13_142 -> m13_143  [key=0, style=solid];
m13_144 -> m13_145  [key=0, style=solid];
m13_147 -> m13_131  [color=blue, key=0, style=bold];
m13_33 -> m13_34  [color=red, key=0, style=solid];
m13_33 -> m13_61  [color=red, key=2, style=dotted];
m13_34 -> m13_4  [key=2, style=dotted];
m13_34 -> m13_35  [color=red, key=0, style=solid];
m13_34 -> m13_36  [key=2, style=dotted];
m13_34 -> m13_61  [color=red, key=2, style=dotted];
m13_35 -> m13_33  [color=blue, key=0, style=bold];
m13_35 -> m13_36  [color=red, key=0, style=solid];
m13_35 -> m13_61  [color=red, key=2, style=dotted];
m13_116 -> m13_117  [key=0, style=solid];
m13_117 -> m13_118  [key=0, style=solid];
m13_117 -> m13_108  [key=2, style=dotted];
m13_117 -> m13_119  [key=2, style=dotted];
m13_118 -> m13_116  [color=blue, key=0, style=bold];
m13_4 -> m13_5  [key=0, style=solid];
m13_4 -> m13_60  [key=2, style=dotted];
m13_91 -> m13_95  [key=0, style=solid];
m13_91 -> m13_96  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_91 -> m13_97  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>", style=dashed];
m13_91 -> m13_99  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>", style=dashed];
m13_95 -> m13_96  [key=0, style=solid];
m13_95 -> m13_101  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_96 -> m13_97  [key=0, style=solid];
m13_96 -> m13_101  [key=0, style=solid];
m13_96 -> m13_82  [key=2, style=dotted];
m13_96 -> m13_103  [key=2, style=dotted];
m13_97 -> m13_98  [key=0, style=solid];
m13_97 -> m13_99  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_97 -> m13_100  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_99 -> m13_100  [key=0, style=solid];
m13_99 -> m13_101  [key=0, style=solid];
m13_99 -> m13_69  [key=2, style=dotted];
m13_101 -> m13_102  [key=0, style=solid];
m13_98 -> m13_99  [key=0, style=solid];
m13_98 -> m13_101  [key=0, style=solid];
m13_100 -> m13_98  [key=0, style=solid];
m13_100 -> m13_100  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_102 -> m13_91  [color=blue, key=0, style=bold];
m13_13 -> m13_14  [color=green, key=0, style=solid];
m13_13 -> m13_15  [color=green, key=1, label=string, style=dashed];
m13_13 -> m13_60  [key=2, style=dotted];
m13_14 -> m13_15  [color=green, key=0, style=solid];
m13_14 -> m13_12  [color=green, key=2, style=dotted];
m13_14 -> m13_4  [color=green, key=2, style=dotted];
m13_14 -> m13_60  [key=2, style=dotted];
m13_15 -> m13_16  [color=green, key=0, style=solid];
m13_15 -> m13_12  [color=green, key=2, style=dotted];
m13_15 -> m13_4  [color=green, key=2, style=dotted];
m13_15 -> m13_60  [key=2, style=dotted];
m13_16 -> m13_13  [color=blue, key=0, style=bold];
m13_16 -> m13_17  [key=0, style=solid];
m13_16 -> m13_60  [key=2, style=dotted];
m13_120 -> m13_121  [key=0, style=solid];
m13_121 -> m13_122  [key=0, style=solid];
m13_121 -> m13_123  [key=2, style=dotted];
m13_121 -> m13_82  [key=2, style=dotted];
m13_122 -> m13_120  [color=blue, key=0, style=bold];
m13_92 -> m13_93  [key=0, style=solid];
m13_93 -> m13_94  [key=0, style=solid];
m13_93 -> m13_91  [key=2, style=dotted];
m13_94 -> m13_92  [color=blue, key=0, style=bold];
m13_37 -> m13_38  [color=red, key=0, style=solid];
m13_37 -> m13_61  [color=red, key=2, style=dotted];
m13_38 -> m13_4  [key=2, style=dotted];
m13_38 -> m13_39  [color=red, key=0, style=solid];
m13_38 -> m13_40  [key=2, style=dotted];
m13_38 -> m13_61  [color=red, key=2, style=dotted];
m13_39 -> m13_37  [color=blue, key=0, style=bold];
m13_39 -> m13_40  [key=0, style=solid];
m13_39 -> m13_61  [key=2, style=dotted];
m13_61 -> m13_86  [key=0, style=solid];
m13_86 -> m13_87  [key=0, style=solid];
m13_86 -> m13_64  [key=2, style=dotted];
m13_86 -> m13_83  [key=2, style=dotted];
m13_87 -> m13_61  [color=blue, key=0, style=bold];
m13_108 -> m13_109  [key=0, style=solid];
m13_109 -> m13_110  [key=0, style=solid];
m13_109 -> m13_111  [key=2, style=dotted];
m13_109 -> m13_112  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_110 -> m13_108  [color=blue, key=0, style=bold];
m13_32 -> m13_33  [color=red, key=0, style=solid];
m13_32 -> m13_61  [color=red, key=2, style=dotted];
m13_17 -> m13_18  [key=0, style=solid];
m13_17 -> m13_60  [key=2, style=dotted];
m13_18 -> m13_4  [key=2, style=dotted];
m13_18 -> m13_19  [key=0, style=solid];
m13_18 -> m13_20  [key=2, style=dotted];
m13_18 -> m13_61  [key=2, style=dotted];
m13_19 -> m13_17  [color=blue, key=0, style=bold];
m13_19 -> m13_20  [color=red, key=0, style=solid];
m13_19 -> m13_61  [key=2, style=dotted];
m13_20 -> m13_21  [color=red, key=0, style=solid];
m13_20 -> m13_61  [color=red, key=2, style=dotted];
m13_0 -> m13_1  [color=green, key=0, style=solid];
m13_1 -> m13_2  [color=green, key=0, style=solid];
m13_1 -> m13_3  [color=green, key=2, style=dotted];
m13_1 -> m13_4  [color=green, key=2, style=dotted];
m13_1 -> m13_60  [key=2, style=dotted];
m13_2 -> m13_0  [color=blue, key=0, style=bold];
m13_2 -> m13_3  [key=0, style=solid];
m13_2 -> m13_60  [key=2, style=dotted];
m13_3 -> m13_4  [key=0, style=solid];
m13_3 -> m13_60  [key=2, style=dotted];
m13_9 -> m13_10  [key=0, style=solid];
m13_9 -> m13_60  [key=2, style=dotted];
m13_10 -> m13_11  [key=0, style=solid];
m13_10 -> m13_60  [key=2, style=dotted];
m13_10 -> m13_4  [key=2, style=dotted];
m13_10 -> m13_12  [key=2, style=dotted];
m13_11 -> m13_12  [key=0, style=solid];
m13_11 -> m13_60  [key=2, style=dotted];
m13_11 -> m13_9  [color=blue, key=0, style=bold];
m13_12 -> m13_13  [key=0, style=solid];
m13_12 -> m13_60  [key=2, style=dotted];
m13_24 -> m13_25  [color=red, key=0, style=solid];
m13_24 -> m13_61  [color=red, key=2, style=dotted];
m13_25 -> m13_26  [color=red, key=0, style=solid];
m13_25 -> m13_61  [key=2, style=dotted];
m13_26 -> m13_27  [color=red, key=0, style=solid];
m13_26 -> m13_61  [color=red, key=2, style=dotted];
m13_26 -> m13_4  [key=2, style=dotted];
m13_26 -> m13_28  [key=2, style=dotted];
m13_27 -> m13_28  [color=red, key=0, style=solid];
m13_27 -> m13_61  [color=red, key=2, style=dotted];
m13_27 -> m13_25  [color=blue, key=0, style=bold];
m13_29 -> m13_30  [color=red, key=0, style=solid];
m13_29 -> m13_61  [color=red, key=2, style=dotted];
m13_30 -> m13_31  [color=red, key=0, style=solid];
m13_30 -> m13_61  [color=red, key=2, style=dotted];
m13_30 -> m13_4  [key=2, style=dotted];
m13_30 -> m13_32  [key=2, style=dotted];
m13_31 -> m13_32  [color=red, key=0, style=solid];
m13_31 -> m13_61  [color=red, key=2, style=dotted];
m13_31 -> m13_29  [color=blue, key=0, style=bold];
m13_36 -> m13_37  [color=red, key=0, style=solid];
m13_36 -> m13_61  [color=red, key=2, style=dotted];
m13_40 -> m13_41  [key=0, style=solid];
m13_40 -> m13_61  [key=2, style=dotted];
m13_41 -> m13_42  [key=0, style=solid];
m13_41 -> m13_61  [key=2, style=dotted];
m13_42 -> m13_43  [key=0, style=solid];
m13_42 -> m13_62  [key=2, style=dotted];
m13_43 -> m13_44  [key=0, style=solid];
m13_43 -> m13_62  [key=2, style=dotted];
m13_44 -> m13_45  [key=0, style=solid];
m13_44 -> m13_62  [key=2, style=dotted];
m13_45 -> m13_46  [key=0, style=solid];
m13_45 -> m13_62  [key=2, style=dotted];
m13_46 -> m13_47  [key=0, style=solid];
m13_46 -> m13_62  [key=2, style=dotted];
m13_47 -> m13_48  [key=0, style=solid];
m13_47 -> m13_62  [key=2, style=dotted];
m13_48 -> m13_49  [key=0, style=solid];
m13_48 -> m13_62  [key=2, style=dotted];
m13_49 -> m13_50  [key=0, style=solid];
m13_49 -> m13_63  [key=2, style=dotted];
m13_50 -> m13_51  [key=0, style=solid];
m13_50 -> m13_63  [key=2, style=dotted];
m13_51 -> m13_52  [key=0, style=solid];
m13_51 -> m13_63  [key=2, style=dotted];
m13_52 -> m13_53  [key=0, style=solid];
m13_52 -> m13_63  [key=2, style=dotted];
m13_53 -> m13_54  [key=0, style=solid];
m13_53 -> m13_63  [key=2, style=dotted];
m13_54 -> m13_55  [key=0, style=solid];
m13_54 -> m13_63  [key=2, style=dotted];
m13_55 -> m13_56  [key=0, style=solid];
m13_55 -> m13_63  [key=2, style=dotted];
m13_56 -> m13_57  [key=0, style=solid];
m13_56 -> m13_63  [key=2, style=dotted];
m13_57 -> m13_58  [key=0, style=solid];
m13_57 -> m13_63  [key=2, style=dotted];
m13_58 -> m13_59  [key=0, style=solid];
m13_58 -> m13_63  [key=2, style=dotted];
m13_59 -> m13_0  [color=blue, key=0, style=bold];
m13_62 -> m13_76  [key=0, style=solid];
m13_62 -> m13_77  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_76 -> m13_77  [key=0, style=solid];
m13_76 -> m13_79  [key=2, style=dotted];
m13_76 -> m13_60  [key=2, style=dotted];
m13_77 -> m13_78  [key=0, style=solid];
m13_77 -> m13_79  [key=2, style=dotted];
m13_77 -> m13_61  [key=2, style=dotted];
m13_78 -> m13_62  [color=blue, key=0, style=bold];
m13_132 -> m13_133  [key=0, style=solid];
m13_133 -> m13_134  [key=0, style=solid];
m13_133 -> m13_135  [key=2, style=dotted];
m13_133 -> m13_131  [key=2, style=dotted];
m13_134 -> m13_132  [color=blue, key=0, style=bold];
m13_127 -> m13_128  [key=0, style=solid];
m13_128 -> m13_129  [key=0, style=solid];
m13_128 -> m13_130  [key=2, style=dotted];
m13_128 -> m13_131  [key=2, style=dotted];
m13_129 -> m13_127  [color=blue, key=0, style=bold];
m13_63 -> m13_80  [key=0, style=solid];
m13_80 -> m13_81  [key=0, style=solid];
m13_80 -> m13_82  [key=2, style=dotted];
m13_80 -> m13_83  [key=2, style=dotted];
m13_81 -> m13_63  [color=blue, key=0, style=bold];
m13_148 -> m13_149  [key=0, style=solid];
m13_149 -> m13_150  [key=0, style=solid];
m13_149 -> m13_151  [key=2, style=dotted];
m13_150 -> m13_148  [color=blue, key=0, style=bold];
m13_64 -> m13_65  [key=0, style=solid];
m13_64 -> m13_66  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_65 -> m13_66  [key=0, style=solid];
m13_65 -> m13_68  [key=2, style=dotted];
m13_66 -> m13_67  [key=0, style=solid];
m13_67 -> m13_64  [color=blue, key=0, style=bold];
m13_112 -> m13_113  [key=0, style=solid];
m13_113 -> m13_114  [key=0, style=solid];
m13_113 -> m13_115  [key=2, style=dotted];
m13_114 -> m13_112  [color=blue, key=0, style=bold];
m13_69 -> m13_70  [key=0, style=solid];
m13_69 -> m13_72  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_70 -> m13_71  [key=0, style=solid];
m13_70 -> m13_72  [key=0, style=solid];
m13_70 -> m13_74  [key=2, style=dotted];
m13_72 -> m13_73  [key=0, style=solid];
m13_72 -> m13_75  [key=2, style=dotted];
m13_71 -> m13_73  [key=0, style=solid];
m13_73 -> m13_69  [color=blue, key=0, style=bold];
m13_88 -> m13_89  [key=0, style=solid];
m13_89 -> m13_90  [key=0, style=solid];
m13_89 -> m13_91  [key=2, style=dotted];
m13_90 -> m13_88  [color=blue, key=0, style=bold];
m13_104 -> m13_105  [key=0, style=solid];
m13_105 -> m13_106  [key=0, style=solid];
m13_105 -> m13_107  [key=2, style=dotted];
m13_106 -> m13_104  [color=blue, key=0, style=bold];
m13_119 -> m13_124  [key=0, style=solid];
m13_124 -> m13_125  [key=0, style=solid];
m13_124 -> m13_126  [key=2, style=dotted];
m13_124 -> m13_82  [key=2, style=dotted];
m13_124 -> m13_79  [key=2, style=dotted];
m13_125 -> m13_119  [color=blue, key=0, style=bold];
m13_60 -> m13_84  [key=0, style=solid];
m13_84 -> m13_85  [key=0, style=solid];
m13_84 -> m13_64  [key=2, style=dotted];
m13_84 -> m13_83  [key=2, style=dotted];
m13_85 -> m13_60  [color=blue, key=0, style=bold];
m13_152 -> m13_65  [color=darkseagreen4, key=1, label="Humanizer.InflectorExtensions.Rule", style=dashed];
m13_152 -> m13_66  [color=darkseagreen4, key=1, label="Humanizer.InflectorExtensions.Rule", style=dashed];
m13_152 -> m13_70  [color=darkseagreen4, key=1, label="Humanizer.InflectorExtensions.Rule", style=dashed];
m13_152 -> m13_72  [color=darkseagreen4, key=1, label="Humanizer.InflectorExtensions.Rule", style=dashed];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_3  [key=2, style=dotted];
m14_1 -> m14_4  [key=2, style=dotted];
m14_2 -> m14_0  [color=blue, key=0, style=bold];
m14_5 -> m14_6  [key=0, style=solid];
m14_6 -> m14_7  [key=0, style=solid];
m14_6 -> m14_8  [key=2, style=dotted];
m14_6 -> m14_4  [key=2, style=dotted];
m14_7 -> m14_5  [color=blue, key=0, style=bold];
m15_31 -> m15_32  [color=green, key=0, style=solid];
m15_32 -> m15_33  [color=green, key=0, style=solid];
m15_32 -> m15_35  [color=green, key=2, style=dotted];
m15_32 -> m15_7  [color=green, key=2, style=dotted];
m15_33 -> m15_34  [color=green, key=0, style=solid];
m15_33 -> m15_8  [color=green, key=2, style=dotted];
m15_34 -> m15_31  [color=blue, key=0, style=bold];
m15_2 -> m15_3  [color=green, key=0, style=solid];
m15_3 -> m15_4  [color=green, key=0, style=solid];
m15_3 -> m15_6  [color=green, key=2, style=dotted];
m15_3 -> m15_7  [color=green, key=2, style=dotted];
m15_4 -> m15_5  [key=0, style=solid];
m15_4 -> m15_8  [key=2, style=dotted];
m15_5 -> m15_2  [color=blue, key=0, style=bold];
m15_27 -> m15_28  [color=green, key=0, style=solid];
m15_28 -> m15_29  [color=green, key=0, style=solid];
m15_28 -> m15_26  [color=green, key=2, style=dotted];
m15_28 -> m15_7  [color=green, key=2, style=dotted];
m15_29 -> m15_30  [color=green, key=0, style=solid];
m15_29 -> m15_8  [color=green, key=2, style=dotted];
m15_30 -> m15_27  [color=blue, key=0, style=bold];
m15_40 -> m15_41  [key=0, style=solid];
m15_42 -> m15_43  [color=green, key=0, style=solid];
m15_42 -> m15_8  [color=green, key=2, style=dotted];
m15_41 -> m15_42  [color=green, key=0, style=solid];
m15_41 -> m15_7  [key=2, style=dotted];
m15_41 -> m15_44  [key=2, style=dotted];
m15_43 -> m15_40  [color=blue, key=0, style=bold];
m15_45 -> m15_46  [color=green, key=0, style=solid];
m15_46 -> m15_47  [color=green, key=0, style=solid];
m15_46 -> m15_44  [color=green, key=2, style=dotted];
m15_46 -> m15_7  [color=green, key=2, style=dotted];
m15_47 -> m15_48  [color=green, key=0, style=solid];
m15_47 -> m15_8  [color=green, key=2, style=dotted];
m15_48 -> m15_45  [color=blue, key=0, style=bold];
m15_22 -> m15_23  [key=0, style=solid];
m15_23 -> m15_7  [key=2, style=dotted];
m15_23 -> m15_26  [key=2, style=dotted];
m15_23 -> m15_24  [key=0, style=solid];
m15_24 -> m15_8  [key=2, style=dotted];
m15_24 -> m15_25  [key=0, style=solid];
m15_25 -> m15_22  [color=blue, key=0, style=bold];
m15_36 -> m15_37  [key=0, style=solid];
m15_38 -> m15_39  [color=green, key=0, style=solid];
m15_38 -> m15_8  [color=green, key=2, style=dotted];
m15_37 -> m15_38  [color=green, key=0, style=solid];
m15_37 -> m15_7  [key=2, style=dotted];
m15_37 -> m15_35  [key=2, style=dotted];
m15_39 -> m15_36  [color=blue, key=0, style=bold];
m15_9 -> m15_10  [color=green, key=0, style=solid];
m15_10 -> m15_11  [color=green, key=0, style=solid];
m15_10 -> m15_6  [color=green, key=2, style=dotted];
m15_10 -> m15_7  [color=green, key=2, style=dotted];
m15_11 -> m15_12  [key=0, style=solid];
m15_11 -> m15_8  [key=2, style=dotted];
m15_12 -> m15_9  [color=blue, key=0, style=bold];
m15_18 -> m15_19  [color=green, key=0, style=solid];
m15_19 -> m15_20  [color=green, key=0, style=solid];
m15_19 -> m15_17  [color=green, key=2, style=dotted];
m15_19 -> m15_7  [color=green, key=2, style=dotted];
m15_20 -> m15_21  [key=0, style=solid];
m15_20 -> m15_8  [key=2, style=dotted];
m15_21 -> m15_18  [color=blue, key=0, style=bold];
m15_13 -> m15_14  [key=0, style=solid];
m15_14 -> m15_7  [key=2, style=dotted];
m15_14 -> m15_17  [key=2, style=dotted];
m15_14 -> m15_15  [key=0, style=solid];
m15_15 -> m15_8  [key=2, style=dotted];
m15_15 -> m15_16  [key=0, style=solid];
m15_16 -> m15_13  [color=blue, key=0, style=bold];
m17_4 -> m17_5  [key=0, style=solid];
m17_4 -> m17_0  [color=darkorchid, key=3, label="method methodReturn System.DateTime AtMidnight", style=bold];
m17_5 -> m17_6  [key=0, style=solid];
m17_5 -> m17_7  [key=2, style=dotted];
m17_6 -> m17_4  [color=blue, key=0, style=bold];
m17_8 -> m17_9  [key=0, style=solid];
m17_8 -> m17_0  [color=darkorchid, key=3, label="method methodReturn System.DateTime AtNoon", style=bold];
m17_9 -> m17_10  [key=0, style=solid];
m17_9 -> m17_7  [key=2, style=dotted];
m17_10 -> m17_8  [color=blue, key=0, style=bold];
m17_0 -> m17_1  [key=0, style=solid];
m17_0 -> m17_5  [color=darkorchid, key=3, label="Parameter variable int hour", style=bold];
m17_0 -> m17_9  [color=darkorchid, key=3, label="Parameter variable int hour", style=bold];
m17_1 -> m17_2  [key=0, style=solid];
m17_1 -> m17_3  [key=2, style=dotted];
m17_2 -> m17_0  [color=blue, key=0, style=bold];
m17_11 -> m17_12  [key=0, style=solid];
m17_12 -> m17_13  [key=0, style=solid];
m17_12 -> m17_3  [key=2, style=dotted];
m17_13 -> m17_11  [color=blue, key=0, style=bold];
m19_0 -> m19_1  [key=0, style=solid];
m19_0 -> m19_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_0 -> m19_4  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_0 -> m19_6  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_0 -> m19_7  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_0 -> m19_8  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_0 -> m19_9  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_0 -> m19_10  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_0 -> m19_11  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_0 -> m19_12  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_0 -> m19_13  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_0 -> m19_14  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_0 -> m19_15  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_0 -> m19_16  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_0 -> m19_17  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_0 -> m19_18  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_0 -> m19_19  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_0 -> m19_20  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_0 -> m19_21  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_0 -> m19_22  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_0 -> m19_24  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_0 -> m19_25  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_0 -> m19_26  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_0 -> m19_27  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_0 -> m19_28  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_0 -> m19_29  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_0 -> m19_31  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_1 -> m19_2  [key=0, style=solid];
m19_1 -> m19_3  [key=0, style=solid];
m19_3 -> m19_4  [key=0, style=solid];
m19_3 -> m19_5  [key=0, style=solid];
m19_4 -> m19_34  [key=0, style=solid];
m19_4 -> m19_35  [key=2, style=dotted];
m19_4 -> m19_0  [key=2, style=dotted];
m19_4 -> m19_36  [key=2, style=dotted];
m19_6 -> m19_7  [key=0, style=solid];
m19_6 -> m19_9  [key=0, style=solid];
m19_7 -> m19_8  [key=0, style=solid];
m19_7 -> m19_0  [key=2, style=dotted];
m19_7 -> m19_38  [key=2, style=dotted];
m19_7 -> m19_39  [key=2, style=dotted];
m19_8 -> m19_9  [key=0, style=solid];
m19_8 -> m19_8  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_8 -> m19_10  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_8 -> m19_11  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_8 -> m19_12  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_8 -> m19_13  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_8 -> m19_14  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_8 -> m19_15  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_8 -> m19_16  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_8 -> m19_17  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_8 -> m19_18  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_8 -> m19_19  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_8 -> m19_20  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_8 -> m19_21  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_8 -> m19_22  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_8 -> m19_24  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_8 -> m19_25  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_8 -> m19_26  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_8 -> m19_27  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_8 -> m19_28  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_8 -> m19_29  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_8 -> m19_31  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_9 -> m19_10  [key=0, style=solid];
m19_9 -> m19_12  [key=0, style=solid];
m19_10 -> m19_11  [key=0, style=solid];
m19_10 -> m19_0  [key=2, style=dotted];
m19_10 -> m19_38  [key=2, style=dotted];
m19_10 -> m19_39  [key=2, style=dotted];
m19_11 -> m19_12  [key=0, style=solid];
m19_11 -> m19_11  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_11 -> m19_13  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_11 -> m19_14  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_11 -> m19_15  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_11 -> m19_16  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_11 -> m19_17  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_11 -> m19_18  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_11 -> m19_19  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_11 -> m19_20  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_11 -> m19_21  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_11 -> m19_22  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_11 -> m19_24  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_11 -> m19_25  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_11 -> m19_26  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_11 -> m19_27  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_11 -> m19_28  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_11 -> m19_29  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_11 -> m19_31  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_12 -> m19_13  [key=0, style=solid];
m19_12 -> m19_15  [key=0, style=solid];
m19_13 -> m19_14  [key=0, style=solid];
m19_13 -> m19_40  [key=2, style=dotted];
m19_13 -> m19_0  [key=2, style=dotted];
m19_13 -> m19_36  [key=2, style=dotted];
m19_13 -> m19_39  [key=2, style=dotted];
m19_14 -> m19_15  [key=0, style=solid];
m19_14 -> m19_14  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_14 -> m19_16  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_14 -> m19_17  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_14 -> m19_18  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_14 -> m19_19  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_14 -> m19_20  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_14 -> m19_21  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_14 -> m19_22  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_14 -> m19_24  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_14 -> m19_25  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_14 -> m19_26  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_14 -> m19_27  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_14 -> m19_28  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_14 -> m19_29  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_14 -> m19_31  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_15 -> m19_16  [key=0, style=solid];
m19_15 -> m19_18  [key=0, style=solid];
m19_16 -> m19_17  [key=0, style=solid];
m19_16 -> m19_0  [key=2, style=dotted];
m19_16 -> m19_36  [key=2, style=dotted];
m19_16 -> m19_39  [key=2, style=dotted];
m19_17 -> m19_18  [key=0, style=solid];
m19_17 -> m19_17  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_17 -> m19_19  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_17 -> m19_20  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_17 -> m19_21  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_17 -> m19_22  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_17 -> m19_24  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_17 -> m19_25  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_17 -> m19_26  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_17 -> m19_27  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_17 -> m19_28  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_17 -> m19_29  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_17 -> m19_31  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_18 -> m19_19  [key=0, style=solid];
m19_18 -> m19_33  [key=0, style=solid];
m19_19 -> m19_20  [key=0, style=solid];
m19_19 -> m19_21  [key=0, style=solid];
m19_19 -> m19_41  [key=2, style=dotted];
m19_20 -> m19_33  [key=0, style=solid];
m19_20 -> m19_39  [key=2, style=dotted];
m19_21 -> m19_22  [key=0, style=solid];
m19_21 -> m19_23  [key=0, style=solid];
m19_22 -> m19_33  [key=0, style=solid];
m19_22 -> m19_39  [key=2, style=dotted];
m19_24 -> m19_25  [key=0, style=solid];
m19_24 -> m19_27  [key=0, style=solid];
m19_25 -> m19_26  [key=0, style=solid];
m19_26 -> m19_32  [key=0, style=solid];
m19_26 -> m19_0  [key=2, style=dotted];
m19_26 -> m19_38  [key=2, style=dotted];
m19_27 -> m19_28  [key=0, style=solid];
m19_27 -> m19_30  [color=darkseagreen4, key=1, label=lastPart, style=dashed];
m19_27 -> m19_31  [color=darkseagreen4, key=1, label=lastPart, style=dashed];
m19_27 -> m19_32  [color=darkseagreen4, key=1, label=lastPart, style=dashed];
m19_28 -> m19_29  [key=0, style=solid];
m19_28 -> m19_32  [key=0, style=solid];
m19_29 -> m19_30  [key=0, style=solid];
m19_29 -> m19_31  [key=0, style=solid];
m19_31 -> m19_32  [key=0, style=solid];
m19_31 -> m19_36  [key=2, style=dotted];
m19_31 -> m19_31  [color=darkseagreen4, key=1, label=lastPart, style=dashed];
m19_2 -> m19_34  [key=0, style=solid];
m19_5 -> m19_6  [key=0, style=solid];
m19_5 -> m19_37  [key=2, style=dotted];
m19_5 -> m19_7  [color=darkseagreen4, key=1, label=parts, style=dashed];
m19_5 -> m19_10  [color=darkseagreen4, key=1, label=parts, style=dashed];
m19_5 -> m19_13  [color=darkseagreen4, key=1, label=parts, style=dashed];
m19_5 -> m19_16  [color=darkseagreen4, key=1, label=parts, style=dashed];
m19_5 -> m19_20  [color=darkseagreen4, key=1, label=parts, style=dashed];
m19_5 -> m19_22  [color=darkseagreen4, key=1, label=parts, style=dashed];
m19_5 -> m19_32  [color=darkseagreen4, key=1, label=parts, style=dashed];
m19_5 -> m19_33  [color=darkseagreen4, key=1, label=parts, style=dashed];
m19_32 -> m19_33  [key=0, style=solid];
m19_32 -> m19_39  [key=2, style=dotted];
m19_33 -> m19_34  [key=0, style=solid];
m19_33 -> m19_42  [key=2, style=dotted];
m19_33 -> m19_43  [key=2, style=dotted];
m19_23 -> m19_24  [key=0, style=solid];
m19_30 -> m19_32  [key=0, style=solid];
m19_30 -> m19_30  [color=darkseagreen4, key=1, label=lastPart, style=dashed];
m19_34 -> m19_0  [color=blue, key=0, style=bold];
m19_44 -> m19_45  [key=0, style=solid];
m19_44 -> m19_47  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_45 -> m19_46  [key=0, style=solid];
m19_45 -> m19_47  [key=0, style=solid];
m19_47 -> m19_48  [key=0, style=solid];
m19_47 -> m19_0  [key=2, style=dotted];
m19_47 -> m19_49  [color=darkseagreen4, key=1, label=convertedNumber, style=dashed];
m19_47 -> m19_50  [color=darkseagreen4, key=1, label=convertedNumber, style=dashed];
m19_47 -> m19_51  [color=darkseagreen4, key=1, label=convertedNumber, style=dashed];
m19_47 -> m19_52  [color=darkseagreen4, key=1, label=convertedNumber, style=dashed];
m19_47 -> m19_53  [color=darkseagreen4, key=1, label=convertedNumber, style=dashed];
m19_47 -> m19_54  [color=darkseagreen4, key=1, label=convertedNumber, style=dashed];
m19_47 -> m19_55  [color=darkseagreen4, key=1, label=convertedNumber, style=dashed];
m19_47 -> m19_56  [color=darkseagreen4, key=1, label=convertedNumber, style=dashed];
m19_46 -> m19_59  [key=0, style=solid];
m19_48 -> m19_49  [key=0, style=solid];
m19_48 -> m19_50  [key=0, style=solid];
m19_48 -> m19_60  [key=2, style=dotted];
m19_49 -> m19_54  [key=0, style=solid];
m19_49 -> m19_61  [key=2, style=dotted];
m19_49 -> m19_49  [color=darkseagreen4, key=1, label=convertedNumber, style=dashed];
m19_49 -> m19_55  [color=darkseagreen4, key=1, label=convertedNumber, style=dashed];
m19_49 -> m19_56  [color=darkseagreen4, key=1, label=convertedNumber, style=dashed];
m19_50 -> m19_51  [key=0, style=solid];
m19_50 -> m19_52  [key=0, style=solid];
m19_50 -> m19_60  [key=2, style=dotted];
m19_51 -> m19_54  [key=0, style=solid];
m19_51 -> m19_51  [color=darkseagreen4, key=1, label=convertedNumber, style=dashed];
m19_51 -> m19_55  [color=darkseagreen4, key=1, label=convertedNumber, style=dashed];
m19_51 -> m19_56  [color=darkseagreen4, key=1, label=convertedNumber, style=dashed];
m19_52 -> m19_53  [key=0, style=solid];
m19_52 -> m19_54  [key=0, style=solid];
m19_52 -> m19_60  [key=2, style=dotted];
m19_53 -> m19_54  [key=0, style=solid];
m19_53 -> m19_61  [key=2, style=dotted];
m19_53 -> m19_53  [color=darkseagreen4, key=1, label=convertedNumber, style=dashed];
m19_53 -> m19_55  [color=darkseagreen4, key=1, label=convertedNumber, style=dashed];
m19_53 -> m19_56  [color=darkseagreen4, key=1, label=convertedNumber, style=dashed];
m19_54 -> m19_55  [key=0, style=solid];
m19_54 -> m19_56  [key=0, style=solid];
m19_54 -> m19_62  [key=2, style=dotted];
m19_55 -> m19_56  [key=0, style=solid];
m19_55 -> m19_63  [key=2, style=dotted];
m19_55 -> m19_55  [color=darkseagreen4, key=1, label=convertedNumber, style=dashed];
m19_56 -> m19_57  [key=0, style=solid];
m19_56 -> m19_61  [key=2, style=dotted];
m19_56 -> m19_56  [color=darkseagreen4, key=1, label=convertedNumber, style=dashed];
m19_57 -> m19_58  [key=0, style=solid];
m19_57 -> m19_57  [color=darkseagreen4, key=1, label=convertedNumber, style=dashed];
m19_58 -> m19_59  [key=0, style=solid];
m19_59 -> m19_44  [color=blue, key=0, style=bold];
m19_64 -> m19_4  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter", style=dashed];
m19_64 -> m19_7  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter", style=dashed];
m19_64 -> m19_10  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter", style=dashed];
m19_64 -> m19_13  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter", style=dashed];
m19_64 -> m19_16  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter", style=dashed];
m19_64 -> m19_26  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter", style=dashed];
m19_64 -> m19_47  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter", style=dashed];
m22_5 -> m22_7  [color=red, key=0, style=solid];
m22_5 -> m22_10  [color=red, key=2, style=dotted];
m22_7 -> m22_8  [color=green, key=0, style=solid];
m22_7 -> m22_0  [color=blue, key=0, style=bold];
m22_8 -> m22_9  [color=green, key=0, style=solid];
m22_8 -> m22_10  [color=green, key=2, style=dotted];
m22_8 -> m22_6  [color=green, key=2, style=dotted];
m22_9 -> m22_7  [color=blue, key=0, style=bold];
m22_0 -> m22_1  [key=0, style=solid];
m22_0 -> m22_2  [color=darkseagreen4, key=1, label="Humanizer.ShowQuantityAs", style=dashed];
m22_0 -> m22_4  [color=darkseagreen4, key=1, label="Humanizer.ShowQuantityAs", style=dashed];
m22_0 -> m22_5  [color=red, key=1, label=int, style=dashed];
m22_0 -> m22_6  [color=darkseagreen4, key=1, label=int, style=dashed];
m22_1 -> m22_2  [key=0, style=solid];
m22_1 -> m22_8  [key=2, style=dotted];
m22_1 -> m22_9  [key=2, style=dotted];
m22_1 -> m22_3  [color=darkseagreen4, key=1, label=transformedInput, style=dashed];
m22_1 -> m22_5  [color=red, key=1, label=transformedInput, style=dashed];
m22_1 -> m22_6  [color=darkseagreen4, key=1, label=transformedInput, style=dashed];
m22_2 -> m22_3  [key=0, style=solid];
m22_2 -> m22_4  [key=0, style=solid];
m22_4 -> m22_5  [color=red, key=0, style=solid];
m22_4 -> m22_6  [key=0, style=solid];
m22_4 -> m22_2  [color=blue, key=0, style=bold];
m22_6 -> m22_7  [key=0, style=solid];
m22_6 -> m22_11  [key=2, style=dotted];
m22_6 -> m22_10  [key=2, style=dotted];
m22_3 -> m22_7  [key=0, style=solid];
m22_3 -> m22_6  [key=2, style=dotted];
m22_3 -> m22_4  [key=0, style=solid];
m22_3 -> m22_5  [key=2, style=dotted];
m23_0 -> m23_1  [key=0, style=solid];
m23_1 -> m23_2  [key=0, style=solid];
m23_1 -> m23_3  [key=2, style=dotted];
m23_1 -> m23_4  [key=2, style=dotted];
m23_1 -> m23_5  [key=2, style=dotted];
m23_2 -> m23_0  [color=blue, key=0, style=bold];
m24_10 -> m24_11  [key=0, style=solid];
m24_10 -> m24_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_10 -> m24_15  [color=green, key=1, label=string, style=dashed];
m24_11 -> m24_12  [color=green, key=0, style=solid];
m24_11 -> m24_13  [color=red, key=0, style=solid];
m24_13 -> m24_14  [color=red, key=0, style=solid];
m24_13 -> m24_15  [color=green, key=0, style=solid];
m24_15 -> m24_16  [color=green, key=0, style=solid];
m24_15 -> m24_18  [color=green, key=2, style=dotted];
m24_12 -> m24_16  [color=green, key=0, style=solid];
m24_12 -> m24_17  [color=green, key=2, style=dotted];
m24_14 -> m24_16  [key=0, style=solid];
m24_16 -> m24_10  [color=blue, key=0, style=bold];
m24_4 -> m24_5  [color=red, key=0, style=solid];
m24_4 -> m24_3  [color=darkorchid, key=3, label="method methodReturn string Truncate", style=bold];
m24_5 -> m24_6  [color=red, key=0, style=solid];
m24_5 -> m24_3  [color=red, key=2, style=dotted];
m24_6 -> m24_4  [color=blue, key=0, style=bold];
m24_0 -> m24_1  [key=0, style=solid];
m24_0 -> m24_3  [color=darkorchid, key=3, label="method methodReturn string Truncate", style=bold];
m24_1 -> m24_2  [key=0, style=solid];
m24_1 -> m24_3  [key=2, style=dotted];
m24_2 -> m24_0  [color=blue, key=0, style=bold];
m24_7 -> m24_8  [color=green, key=0, style=solid];
m24_7 -> m24_3  [color=darkorchid, key=3, label="method methodReturn string Truncate", style=bold];
m24_8 -> m24_9  [color=green, key=0, style=solid];
m24_8 -> m24_3  [color=green, key=2, style=dotted];
m24_9 -> m24_7  [color=blue, key=0, style=bold];
m24_3 -> m24_0  [color=darkorchid, key=3, label="Parameter variable int length", style=bold];
m24_3 -> m24_4  [color=darkorchid, key=3, label="Parameter variable Humanizer.ITruncator truncator", style=bold];
m24_3 -> m24_7  [color=darkorchid, key=3, label="Parameter variable string truncationString", style=bold];
m24_3 -> m24_1  [color=darkorchid, key=3, label="Parameter variable string truncationString", style=bold];
m24_3 -> m24_14  [color=darkorchid, key=3, label="method methodReturn string Truncate", style=bold];
}
