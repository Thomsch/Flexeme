digraph  {
m0_11 [label="Entry Humanizer.Bytes.ByteRate.Humanize(Humanizer.Localisation.TimeUnit)", span="39-39", cluster="Humanizer.Bytes.ByteRate.Humanize(Humanizer.Localisation.TimeUnit)", file="ByteRateTests.cs"];
m0_10 [label="Entry Humanizer.Bytes.ByteSize.Per(System.TimeSpan)", span="498-498", cluster="Humanizer.Bytes.ByteSize.Per(System.TimeSpan)", file="ByteRateTests.cs"];
m0_20 [label="Entry Humanizer.Bytes.ByteSize.FromMegabytes(double)", span="130-130", cluster="Humanizer.Bytes.ByteSize.FromMegabytes(double)", file="ByteRateTests.cs"];
m0_21 [label="Entry Humanizer.Tests.Bytes.ByteRateTests.ThowsOnUnsupportedData(Humanizer.Localisation.TimeUnit)", span="56-56", cluster="Humanizer.Tests.Bytes.ByteRateTests.ThowsOnUnsupportedData(Humanizer.Localisation.TimeUnit)", file="ByteRateTests.cs"];
m0_22 [label="var dummyRate = ByteSize.FromBits(1).Per(TimeSpan.FromSeconds(1))", span="58-58", cluster="Humanizer.Tests.Bytes.ByteRateTests.ThowsOnUnsupportedData(Humanizer.Localisation.TimeUnit)", file="ByteRateTests.cs"];
m0_23 [label="Assert.Throws<NotSupportedException>(() =>\r\n            {\r\n                dummyRate.Humanize(units);\r\n            })", span="60-63", cluster="Humanizer.Tests.Bytes.ByteRateTests.ThowsOnUnsupportedData(Humanizer.Localisation.TimeUnit)", file="ByteRateTests.cs"];
m0_24 [label="Exit Humanizer.Tests.Bytes.ByteRateTests.ThowsOnUnsupportedData(Humanizer.Localisation.TimeUnit)", span="56-56", cluster="Humanizer.Tests.Bytes.ByteRateTests.ThowsOnUnsupportedData(Humanizer.Localisation.TimeUnit)", file="ByteRateTests.cs"];
m0_26 [label="Entry Unk.>", span="", cluster="Unk.>", file="ByteRateTests.cs"];
m0_0 [label="Entry Humanizer.Tests.Bytes.ByteRateTests.ByteRateTests()", span="10-10", cluster="Humanizer.Tests.Bytes.ByteRateTests.ByteRateTests()", file="ByteRateTests.cs"];
m0_1 [label="Exit Humanizer.Tests.Bytes.ByteRateTests.ByteRateTests()", span="10-10", cluster="Humanizer.Tests.Bytes.ByteRateTests.ByteRateTests()", file="ByteRateTests.cs"];
m0_13 [label="Entry Humanizer.Tests.Bytes.ByteRateTests.TimeUnitTests(long, double, Humanizer.Localisation.TimeUnit, string)", span="39-39", cluster="Humanizer.Tests.Bytes.ByteRateTests.TimeUnitTests(long, double, Humanizer.Localisation.TimeUnit, string)", file="ByteRateTests.cs"];
m0_14 [label="var size = ByteSize.FromMegabytes(megabytes)", span="41-41", cluster="Humanizer.Tests.Bytes.ByteRateTests.TimeUnitTests(long, double, Humanizer.Localisation.TimeUnit, string)", file="ByteRateTests.cs"];
m0_15 [label="var measurementInterval = TimeSpan.FromSeconds(measurementIntervalSeconds)", span="42-42", cluster="Humanizer.Tests.Bytes.ByteRateTests.TimeUnitTests(long, double, Humanizer.Localisation.TimeUnit, string)", file="ByteRateTests.cs"];
m0_17 [label="var text = rate.Humanize(displayInterval)", span="45-45", cluster="Humanizer.Tests.Bytes.ByteRateTests.TimeUnitTests(long, double, Humanizer.Localisation.TimeUnit, string)", file="ByteRateTests.cs"];
m0_18 [label="Assert.Equal(expectedValue, text)", span="47-47", cluster="Humanizer.Tests.Bytes.ByteRateTests.TimeUnitTests(long, double, Humanizer.Localisation.TimeUnit, string)", file="ByteRateTests.cs"];
m0_16 [label="var rate = size.Per(measurementInterval)", span="44-44", cluster="Humanizer.Tests.Bytes.ByteRateTests.TimeUnitTests(long, double, Humanizer.Localisation.TimeUnit, string)", file="ByteRateTests.cs"];
m0_19 [label="Exit Humanizer.Tests.Bytes.ByteRateTests.TimeUnitTests(long, double, Humanizer.Localisation.TimeUnit, string)", span="39-39", cluster="Humanizer.Tests.Bytes.ByteRateTests.TimeUnitTests(long, double, Humanizer.Localisation.TimeUnit, string)", file="ByteRateTests.cs"];
m0_25 [label="Entry Humanizer.Bytes.ByteSize.FromBits(long)", span="115-115", cluster="Humanizer.Bytes.ByteSize.FromBits(long)", file="ByteRateTests.cs"];
m0_9 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="ByteRateTests.cs"];
m0_12 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ByteRateTests.cs"];
m0_2 [label="Entry Humanizer.Tests.Bytes.ByteRateTests.HumanizesRates(long, double, string)", span="19-19", cluster="Humanizer.Tests.Bytes.ByteRateTests.HumanizesRates(long, double, string)", file="ByteRateTests.cs"];
m0_3 [label="var size = new ByteSize(inputBytes)", span="21-21", cluster="Humanizer.Tests.Bytes.ByteRateTests.HumanizesRates(long, double, string)", file="ByteRateTests.cs"];
m0_4 [label="var interval = TimeSpan.FromSeconds(perSeconds)", span="22-22", cluster="Humanizer.Tests.Bytes.ByteRateTests.HumanizesRates(long, double, string)", file="ByteRateTests.cs"];
m0_6 [label="Assert.Equal(expectedValue, rate)", span="26-26", cluster="Humanizer.Tests.Bytes.ByteRateTests.HumanizesRates(long, double, string)", file="ByteRateTests.cs"];
m0_5 [label="var rate = size.Per(interval).Humanize()", span="24-24", cluster="Humanizer.Tests.Bytes.ByteRateTests.HumanizesRates(long, double, string)", file="ByteRateTests.cs"];
m0_7 [label="Exit Humanizer.Tests.Bytes.ByteRateTests.HumanizesRates(long, double, string)", span="19-19", cluster="Humanizer.Tests.Bytes.ByteRateTests.HumanizesRates(long, double, string)", file="ByteRateTests.cs"];
m0_27 [label="Entry lambda expression", span="60-63", cluster="lambda expression", file="ByteRateTests.cs"];
m0_28 [label="dummyRate.Humanize(units)", span="62-62", cluster="lambda expression", file="ByteRateTests.cs"];
m0_29 [label="Exit lambda expression", span="60-63", cluster="lambda expression", file="ByteRateTests.cs"];
m0_8 [label="Entry Humanizer.Bytes.ByteSize.ByteSize(double)", span="102-102", cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="ByteRateTests.cs"];
m0_30 [label="Humanizer.Localisation.TimeUnit", span="", file="ByteRateTests.cs"];
m0_31 [label=dummyRate, span="", file="ByteRateTests.cs"];
m2_0 [label="Entry Humanizer.NoMatchFoundException.NoMatchFoundException()", span="9-9", cluster="Humanizer.NoMatchFoundException.NoMatchFoundException()", file="CasingTests.cs"];
m2_1 [label="Exit Humanizer.NoMatchFoundException.NoMatchFoundException()", span="9-9", cluster="Humanizer.NoMatchFoundException.NoMatchFoundException()", file="CasingTests.cs"];
m2_2 [label="Entry Humanizer.NoMatchFoundException.NoMatchFoundException(string)", span="13-13", cluster="Humanizer.NoMatchFoundException.NoMatchFoundException(string)", file="CasingTests.cs"];
m2_3 [label="Exit Humanizer.NoMatchFoundException.NoMatchFoundException(string)", span="13-13", cluster="Humanizer.NoMatchFoundException.NoMatchFoundException(string)", file="CasingTests.cs"];
m2_4 [label="Entry Humanizer.NoMatchFoundException.NoMatchFoundException(string, System.Exception)", span="18-18", cluster="Humanizer.NoMatchFoundException.NoMatchFoundException(string, System.Exception)", file="CasingTests.cs"];
m2_5 [label="Exit Humanizer.NoMatchFoundException.NoMatchFoundException(string, System.Exception)", span="18-18", cluster="Humanizer.NoMatchFoundException.NoMatchFoundException(string, System.Exception)", file="CasingTests.cs"];
m3_23 [label="Entry Unk.Sort", span="", cluster="Unk.Sort", file="ComparingTests.cs"];
m3_21 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ComparingTests.cs"];
m3_22 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="ComparingTests.cs"];
m3_0 [label="Entry Humanizer.Tests.Bytes.ComparingTests.CompareStrongTyped(double, double, int)", span="14-14", cluster="Humanizer.Tests.Bytes.ComparingTests.CompareStrongTyped(double, double, int)", file="ComparingTests.cs"];
m3_1 [label="var valueSize = new ByteSize(value)", span="16-16", cluster="Humanizer.Tests.Bytes.ComparingTests.CompareStrongTyped(double, double, int)", file="ComparingTests.cs"];
m3_2 [label="var otherSize = new ByteSize(valueToCompareWith)", span="17-17", cluster="Humanizer.Tests.Bytes.ComparingTests.CompareStrongTyped(double, double, int)", file="ComparingTests.cs"];
m3_4 [label="Assert.Equal(expectedResult, result)", span="20-20", cluster="Humanizer.Tests.Bytes.ComparingTests.CompareStrongTyped(double, double, int)", file="ComparingTests.cs"];
m3_3 [label="var result = valueSize.CompareTo(otherSize)", span="18-18", cluster="Humanizer.Tests.Bytes.ComparingTests.CompareStrongTyped(double, double, int)", file="ComparingTests.cs"];
m3_5 [label="Exit Humanizer.Tests.Bytes.ComparingTests.CompareStrongTyped(double, double, int)", span="14-14", cluster="Humanizer.Tests.Bytes.ComparingTests.CompareStrongTyped(double, double, int)", file="ComparingTests.cs"];
m3_8 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ComparingTests.cs"];
m3_9 [label="Entry Humanizer.Tests.Bytes.ComparingTests.CompareUntyped(double, double, int)", span="27-27", cluster="Humanizer.Tests.Bytes.ComparingTests.CompareUntyped(double, double, int)", file="ComparingTests.cs"];
m3_10 [label="var valueSize = new ByteSize(value)", span="29-29", cluster="Humanizer.Tests.Bytes.ComparingTests.CompareUntyped(double, double, int)", file="ComparingTests.cs"];
m3_11 [label="object otherSize = new ByteSize(valueToCompareWith)", span="30-30", cluster="Humanizer.Tests.Bytes.ComparingTests.CompareUntyped(double, double, int)", file="ComparingTests.cs"];
m3_13 [label="Assert.Equal(expectedResult, result)", span="33-33", cluster="Humanizer.Tests.Bytes.ComparingTests.CompareUntyped(double, double, int)", file="ComparingTests.cs"];
m3_12 [label="var result = valueSize.CompareTo(otherSize)", span="31-31", cluster="Humanizer.Tests.Bytes.ComparingTests.CompareUntyped(double, double, int)", file="ComparingTests.cs"];
m3_14 [label="Exit Humanizer.Tests.Bytes.ComparingTests.CompareUntyped(double, double, int)", span="27-27", cluster="Humanizer.Tests.Bytes.ComparingTests.CompareUntyped(double, double, int)", file="ComparingTests.cs"];
m3_16 [label="Entry Humanizer.Tests.Bytes.ComparingTests.SortList(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<string>)", span="39-39", cluster="Humanizer.Tests.Bytes.ComparingTests.SortList(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<string>)", file="ComparingTests.cs"];
m3_17 [label="var list = values.Select(ByteSize.Parse).ToList()", span="41-41", cluster="Humanizer.Tests.Bytes.ComparingTests.SortList(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<string>)", file="ComparingTests.cs"];
m3_19 [label="Assert.Equal(expected.Select(ByteSize.Parse), list)", span="44-44", cluster="Humanizer.Tests.Bytes.ComparingTests.SortList(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<string>)", file="ComparingTests.cs"];
m3_18 [label="list.Sort()", span="42-42", cluster="Humanizer.Tests.Bytes.ComparingTests.SortList(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<string>)", file="ComparingTests.cs"];
m3_20 [label="Exit Humanizer.Tests.Bytes.ComparingTests.SortList(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<string>)", span="39-39", cluster="Humanizer.Tests.Bytes.ComparingTests.SortList(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<string>)", file="ComparingTests.cs"];
m3_7 [label="Entry Humanizer.Bytes.ByteSize.CompareTo(Humanizer.Bytes.ByteSize)", span="224-224", cluster="Humanizer.Bytes.ByteSize.CompareTo(Humanizer.Bytes.ByteSize)", file="ComparingTests.cs"];
m3_6 [label="Entry Humanizer.Bytes.ByteSize.ByteSize(double)", span="102-102", cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="ComparingTests.cs"];
m3_15 [label="Entry Humanizer.Bytes.ByteSize.CompareTo(object)", span="213-213", cluster="Humanizer.Bytes.ByteSize.CompareTo(object)", file="ComparingTests.cs"];
m4_37 [label="TimeUnit.Month", span="64-64", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="DateHumanize.cs", color=green, community=0];
m4_31 [label="TimeUnit.Minute", span="55-55", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="DateHumanize.cs", color=green, community=0];
m4_5 [label="Entry Humanizer.StringHumanizeExtensions.FromPascalCase(string)", span="22-22", cluster="Humanizer.StringHumanizeExtensions.FromPascalCase(string)", file="DateHumanize.cs"];
m4_12 [label="Entry Unk.Aggregate", span="", cluster="Unk.Aggregate", file="DateHumanize.cs"];
m4_13 [label="Entry Unk.ToUpper", span="", cluster="Unk.ToUpper", file="DateHumanize.cs"];
m4_14 [label="Entry Unk.Substring", span="", cluster="Unk.Substring", file="DateHumanize.cs"];
m4_47 [label="Entry Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy()", span="8-8", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy()", file="DateHumanize.cs"];
m4_52 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="DateHumanize.cs"];
m4_50 [label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0", cluster="System.TimeSpan.FromMilliseconds(double)", file="DateHumanize.cs"];
m4_17 [label="word.All(Char.IsUpper) && word.Length > 1\r\n                        ? word\r\n                        : word.ToLower()", span="27-29", cluster="lambda expression", file="DateHumanize.cs"];
m4_53 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="DateHumanize.cs"];
m4_16 [label="Entry lambda expression", span="26-29", cluster="lambda expression", file="DateHumanize.cs"];
m4_19 [label="precision.HasValue", span="36-36", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="DateHumanize.cs"];
m4_38 [label="deltaFromNow = TimeSpan.FromDays(unit*31)", span="65-65", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="DateHumanize.cs", color=green, community=0];
m4_32 [label="deltaFromNow = TimeSpan.FromMinutes(unit)", span="56-56", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="DateHumanize.cs", color=green, community=0];
m4_6 [label="var result = PascalCaseWordBoundaryRegex\r\n                .Split(name)\r\n                .Select(word =>\r\n                    word.All(Char.IsUpper) && word.Length > 1\r\n                        ? word\r\n                        : word.ToLower())\r\n                .Aggregate((res, word) => res + '' '' + word)", span="24-30", cluster="Humanizer.StringHumanizeExtensions.FromPascalCase(string)", file="DateHumanize.cs"];
m4_9 [label="Exit Humanizer.StringHumanizeExtensions.FromPascalCase(string)", span="22-22", cluster="Humanizer.StringHumanizeExtensions.FromPascalCase(string)", file="DateHumanize.cs"];
m4_8 [label="return result.Replace('' i '', '' I '');", span="34-34", cluster="Humanizer.StringHumanizeExtensions.FromPascalCase(string)", file="DateHumanize.cs"];
m4_7 [label="result = Char.ToUpper(result[0]) +\r\n                result.Substring(1, result.Length - 1)", span="32-33", cluster="Humanizer.StringHumanizeExtensions.FromPascalCase(string)", file="DateHumanize.cs"];
m4_10 [label="Entry System.Text.RegularExpressions.Regex.Split(string)", span="0-0", cluster="System.Text.RegularExpressions.Regex.Split(string)", file="DateHumanize.cs"];
m4_48 [label="Entry System.TimeSpan.TimeSpan()", span="0-0", cluster="System.TimeSpan.TimeSpan()", file="DateHumanize.cs"];
m4_4 [label="Exit Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan, System.Globalization.CultureInfo)", span="11-11", cluster="Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan, System.Globalization.CultureInfo)", file="DateHumanize.cs"];
m4_51 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="DateHumanize.cs"];
m4_11 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="DateHumanize.cs"];
m4_43 [label="VerifyWithDateInjection(expectedString, deltaFromNow, culture)", span="75-75", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="DateHumanize.cs"];
m4_39 [label="TimeUnit.Year", span="67-67", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="DateHumanize.cs", color=green, community=0];
m4_40 [label="deltaFromNow = TimeSpan.FromDays(unit*366)", span="68-68", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", color=green, community=0, file="DateHumanize.cs"];
m4_41 [label="baseDate == null", span="72-72", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", color=green, community=0, file="DateHumanize.cs"];
m4_42 [label="VerifyWithCurrentDate(expectedString, deltaFromNow, culture)", span="74-74", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="DateHumanize.cs", color=green, community=0];
m4_18 [label="Exit lambda expression", span="26-29", cluster="lambda expression", file="DateHumanize.cs"];
m4_20 [label="Entry string.ToLower()", span="0-0", cluster="string.ToLower()", color=green, community=0, file="DateHumanize.cs"];
m4_22 [label="res + '' '' + word", span="30-30", cluster="lambda expression", color=green, community=0, file="DateHumanize.cs"];
m4_23 [label="Exit lambda expression", span="30-30", cluster="lambda expression", color=green, community=0, file="DateHumanize.cs"];
m4_24 [label="Entry Humanizer.StringHumanizeExtensions.Humanize(string)", span="42-42", cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="DateHumanize.cs"];
m4_25 [label="input.All(Char.IsUpper)", span="45-45", cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", color=red, community=0, file="DateHumanize.cs"];
m4_28 [label="return FromUnderscoreDashSeparatedWords(input);", span="49-49", cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="DateHumanize.cs", color=red, community=0];
m4_30 [label="Exit Humanizer.StringHumanizeExtensions.Humanize(string)", span="42-42", cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", color=green, community=0, file="DateHumanize.cs"];
m4_34 [label="var humanizedString = input.Humanize()", span="62-62", cluster="Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", color=red, community=0, file="DateHumanize.cs"];
m4_36 [label="Exit Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", span="60-60", cluster="Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", color=green, community=0, file="DateHumanize.cs"];
m4_44 [label="VerifyWithDate(expectedString, deltaFromNow, culture, baseDate.Value, baseDateUtc.Value)", span="79-79", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", color=green, community=0, file="DateHumanize.cs"];
m4_21 [label="Entry lambda expression", span="30-30", cluster="lambda expression", color=green, community=0, file="DateHumanize.cs"];
m4_26 [label="return input;", span="46-46", cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="DateHumanize.cs"];
m4_29 [label="return FromPascalCase(input);", span="51-51", cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", color=red, community=0, file="DateHumanize.cs"];
m4_33 [label="Entry Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", span="60-60", cluster="Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", color=green, community=0, file="DateHumanize.cs"];
m4_35 [label="return humanizedString.ApplyCase(casing);", span="63-63", cluster="Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", color=red, community=0, file="DateHumanize.cs"];
m4_27 [label="input.Contains('_') || input.Contains('-')", span="48-48", cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", color=red, community=0, file="DateHumanize.cs"];
m4_45 [label="Exit Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", span="34-34", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="DateHumanize.cs"];
m4_54 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="DateHumanize.cs"];
m4_46 [label="Entry Humanizer.DateTimeHumanizeStrategy.PrecisionDateTimeHumanizeStrategy.PrecisionDateTimeHumanizeStrategy(double)", span="16-16", cluster="Humanizer.DateTimeHumanizeStrategy.PrecisionDateTimeHumanizeStrategy.PrecisionDateTimeHumanizeStrategy(double)", file="DateHumanize.cs"];
m4_49 [label="Entry System.Math.Abs(int)", span="0-0", cluster="System.Math.Abs(int)", file="DateHumanize.cs"];
m4_15 [label="Entry Unk.Replace", span="", cluster="Unk.Replace", file="DateHumanize.cs"];
m4_0 [label="Entry lambda expression", span="9-9", cluster="lambda expression", file="DateHumanize.cs"];
m4_1 [label="String.Join('' '', methodName.Split(new[] { '_', '-' }))", span="9-9", cluster="lambda expression", file="DateHumanize.cs"];
m4_3 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="DateHumanize.cs"];
m4_2 [label="Exit lambda expression", span="9-9", cluster="lambda expression", file="DateHumanize.cs"];
m5_7 [label="Entry Humanizer.Tests.Localisation.es.NumberToWordsTests.ToOrdinalWords(int, string, Humanizer.GrammaticalGender)", span="58-58", cluster="Humanizer.Tests.Localisation.es.NumberToWordsTests.ToOrdinalWords(int, string, Humanizer.GrammaticalGender)", file="DateHumanizeDefaultStrategyTests.cs"];
m5_8 [label="Assert.Equal(words, number.ToOrdinalWords(gender))", span="60-60", cluster="Humanizer.Tests.Localisation.es.NumberToWordsTests.ToOrdinalWords(int, string, Humanizer.GrammaticalGender)", file="DateHumanizeDefaultStrategyTests.cs"];
m5_9 [label="Exit Humanizer.Tests.Localisation.es.NumberToWordsTests.ToOrdinalWords(int, string, Humanizer.GrammaticalGender)", span="58-58", cluster="Humanizer.Tests.Localisation.es.NumberToWordsTests.ToOrdinalWords(int, string, Humanizer.GrammaticalGender)", file="DateHumanizeDefaultStrategyTests.cs"];
m5_2 [label="Entry Humanizer.Tests.Localisation.es.NumberToWordsTests.ToWords(int, string)", span="47-47", cluster="Humanizer.Tests.Localisation.es.NumberToWordsTests.ToWords(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m5_3 [label="Assert.Equal(expected, number.ToWords())", span="49-49", cluster="Humanizer.Tests.Localisation.es.NumberToWordsTests.ToWords(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m5_4 [label="Exit Humanizer.Tests.Localisation.es.NumberToWordsTests.ToWords(int, string)", span="47-47", cluster="Humanizer.Tests.Localisation.es.NumberToWordsTests.ToWords(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m5_0 [label="Entry Humanizer.Tests.Localisation.es.NumberToWordsTests.NumberToWordsTests()", span="7-7", cluster="Humanizer.Tests.Localisation.es.NumberToWordsTests.NumberToWordsTests()", file="DateHumanizeDefaultStrategyTests.cs"];
m5_1 [label="Exit Humanizer.Tests.Localisation.es.NumberToWordsTests.NumberToWordsTests()", span="7-7", cluster="Humanizer.Tests.Localisation.es.NumberToWordsTests.NumberToWordsTests()", file="DateHumanizeDefaultStrategyTests.cs"];
m5_6 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="DateHumanizeDefaultStrategyTests.cs"];
m5_5 [label="Entry int.ToWords()", span="32-32", cluster="int.ToWords()", file="DateHumanizeDefaultStrategyTests.cs"];
m5_10 [label="Entry int.ToOrdinalWords(Humanizer.GrammaticalGender)", span="79-79", cluster="int.ToOrdinalWords(Humanizer.GrammaticalGender)", file="DateHumanizeDefaultStrategyTests.cs"];
m6_31 [label="Entry System.TimeSpan.TimeSpan(long)", span="0-0", cluster="System.TimeSpan.TimeSpan(long)", file="DateHumanizeTests.cs"];
m6_32 [label="Entry System.Math.Abs(long)", span="0-0", cluster="System.Math.Abs(long)", file="DateHumanizeTests.cs"];
m6_36 [label="Entry System.Convert.ToInt32(double)", span="0-0", cluster="System.Convert.ToInt32(double)", file="DateHumanizeTests.cs"];
m6_33 [label="Entry Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="10-10", cluster="Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", file="DateHumanizeTests.cs"];
m6_35 [label="Entry System.Math.Floor(double)", span="0-0", cluster="System.Math.Floor(double)", file="DateHumanizeTests.cs"];
m6_0 [label="Entry Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", span="18-18", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DateHumanizeTests.cs"];
m6_1 [label="var tense = input > comparisonBase ? Tense.Future : Tense.Past", span="20-20", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DateHumanizeTests.cs"];
m6_2 [label="var ts = new TimeSpan(Math.Abs(comparisonBase.Ticks - input.Ticks))", span="21-21", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DateHumanizeTests.cs"];
m6_20 [label="comparisonBase.Date.AddMonths(tense == Tense.Future ? 1 : -1) == input.Date", span="49-49", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DateHumanizeTests.cs"];
m6_4 [label="return Configurator.Formatter.DateHumanize(TimeUnit.Millisecond, tense, 0);", span="24-24", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DateHumanizeTests.cs"];
m6_6 [label="return Configurator.Formatter.DateHumanize(TimeUnit.Second, tense, ts.Seconds);", span="27-27", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DateHumanizeTests.cs"];
m6_8 [label="return Configurator.Formatter.DateHumanize(TimeUnit.Minute, tense, 1);", span="30-30", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DateHumanizeTests.cs"];
m6_10 [label="return Configurator.Formatter.DateHumanize(TimeUnit.Minute, tense, ts.Minutes);", span="33-33", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DateHumanizeTests.cs"];
m6_12 [label="return Configurator.Formatter.DateHumanize(TimeUnit.Hour, tense, 1);", span="36-36", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DateHumanizeTests.cs"];
m6_14 [label="return Configurator.Formatter.DateHumanize(TimeUnit.Hour, tense, ts.Hours);", span="39-39", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DateHumanizeTests.cs"];
m6_16 [label="return Configurator.Formatter.DateHumanize(TimeUnit.Day, tense, 1);", span="42-42", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DateHumanizeTests.cs"];
m6_18 [label="return Configurator.Formatter.DateHumanize(TimeUnit.Day, tense, ts.Days);", span="45-45", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DateHumanizeTests.cs"];
m6_21 [label="return Configurator.Formatter.DateHumanize(TimeUnit.Month, tense, 1);", span="50-50", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DateHumanizeTests.cs"];
m6_22 [label="return Configurator.Formatter.DateHumanize(TimeUnit.Day, tense, ts.Days);", span="51-51", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DateHumanizeTests.cs"];
m6_25 [label="return Configurator.Formatter.DateHumanize(TimeUnit.Month, tense, months);", span="57-57", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DateHumanizeTests.cs"];
m6_29 [label="return Configurator.Formatter.DateHumanize(TimeUnit.Year, tense, years);", span="63-63", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DateHumanizeTests.cs"];
m6_3 [label="ts.TotalMilliseconds < 500", span="23-23", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DateHumanizeTests.cs"];
m6_5 [label="ts.TotalSeconds < 60", span="26-26", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DateHumanizeTests.cs"];
m6_7 [label="ts.TotalSeconds < 120", span="29-29", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DateHumanizeTests.cs"];
m6_9 [label="ts.TotalMinutes < 45", span="32-32", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DateHumanizeTests.cs"];
m6_11 [label="ts.TotalMinutes < 90", span="35-35", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DateHumanizeTests.cs"];
m6_13 [label="ts.TotalHours < 24", span="38-38", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DateHumanizeTests.cs"];
m6_15 [label="ts.TotalHours < 48", span="41-41", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DateHumanizeTests.cs"];
m6_17 [label="ts.TotalDays < 28", span="44-44", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DateHumanizeTests.cs"];
m6_19 [label="ts.TotalDays >= 28 && ts.TotalDays < 30", span="47-47", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DateHumanizeTests.cs"];
m6_23 [label="ts.TotalDays < 345", span="54-54", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DateHumanizeTests.cs"];
m6_24 [label="int months = Convert.ToInt32(Math.Floor(ts.TotalDays / 29.5))", span="56-56", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DateHumanizeTests.cs"];
m6_26 [label="int years = Convert.ToInt32(Math.Floor(ts.TotalDays / 365))", span="60-60", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DateHumanizeTests.cs"];
m6_27 [label="years == 0", span="61-61", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DateHumanizeTests.cs"];
m6_28 [label="years = 1", span="61-61", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DateHumanizeTests.cs"];
m6_30 [label="Exit Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", span="18-18", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DateHumanizeTests.cs"];
m6_34 [label="Entry System.DateTime.AddMonths(int)", span="0-0", cluster="System.DateTime.AddMonths(int)", file="DateHumanizeTests.cs"];
m8_81 [label="Entry Unk.ToMaybe", span="", cluster="Unk.ToMaybe", file="DefaultFormatterTests.cs"];
m8_7 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="DefaultFormatterTests.cs"];
m8_35 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="DefaultFormatterTests.cs"];
m8_138 [label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="188-188", cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="DefaultFormatterTests.cs"];
m8_58 [label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", span="48-48", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", file="DefaultFormatterTests.cs"];
m8_59 [label="var replaces = tokens.Value.Select((t,i) =>\r\n                optionSequenceWithSeparatorLookup(t.Text)\r\n                    .Return(sep => Tuple.Create(i + 1, sep),\r\n                        Tuple.Create(-1, '\0'))).SkipWhile(x => x.Item1 < 0)", span="52-55", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", file="DefaultFormatterTests.cs"];
m8_60 [label="var exploded = tokens.Value.Select((t, i) =>\r\n                        replaces.FirstOrDefault(x => x.Item1 == i).ToMaybe()\r\n                            .Return(r => t.Text.Split(r.Item2).Select(str => Token.Value(str)),\r\n                                Enumerable.Empty<Token>().Concat(new[]{ t })))", span="57-60", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", file="DefaultFormatterTests.cs"];
m8_62 [label="return StatePair.Create(flattened, tokens.Errors);", span="64-64", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", file="DefaultFormatterTests.cs"];
m8_61 [label="var flattened = exploded.SelectMany(x => x)", span="62-62", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", file="DefaultFormatterTests.cs"];
m8_63 [label="Exit CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", span="48-48", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", file="DefaultFormatterTests.cs"];
m8_91 [label="Entry Unk.Split", span="", cluster="Unk.Split", file="DefaultFormatterTests.cs"];
m8_65 [label="Entry Unk.SelectMany", span="", cluster="Unk.SelectMany", file="DefaultFormatterTests.cs"];
m8_118 [label="Entry char.IsDigit(char)", span="0-0", cluster="char.IsDigit(char)", file="DefaultFormatterTests.cs"];
m8_10 [label="Entry CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Func<CommandLine.Error, CommandLine.Infrastructure.Unit>)", span="112-112", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Func<CommandLine.Error, CommandLine.Infrastructure.Unit>)", file="DefaultFormatterTests.cs"];
m8_124 [label="value.Length > 2 && value.StartsWith(''--'', StringComparison.Ordinal)", span="116-116", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Func<CommandLine.Error, CommandLine.Infrastructure.Unit>)", file="DefaultFormatterTests.cs"];
m8_128 [label="yield return Token.Name(text);", span="122-122", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Func<CommandLine.Error, CommandLine.Infrastructure.Unit>)", file="DefaultFormatterTests.cs"];
m8_129 [label="yield break;", span="123-123", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Func<CommandLine.Error, CommandLine.Infrastructure.Unit>)", file="DefaultFormatterTests.cs"];
m8_132 [label="yield break;", span="128-128", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Func<CommandLine.Error, CommandLine.Infrastructure.Unit>)", file="DefaultFormatterTests.cs"];
m8_134 [label="yield return Token.Name(parts[0]);", span="131-131", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Func<CommandLine.Error, CommandLine.Infrastructure.Unit>)", file="DefaultFormatterTests.cs"];
m8_135 [label="yield return Token.Value(parts[1]);", span="132-132", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Func<CommandLine.Error, CommandLine.Infrastructure.Unit>)", file="DefaultFormatterTests.cs"];
m8_125 [label="var text = value.Substring(2)", span="118-118", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Func<CommandLine.Error, CommandLine.Infrastructure.Unit>)", file="DefaultFormatterTests.cs"];
m8_131 [label="var _ = onError(new BadFormatTokenError(value))", span="127-127", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Func<CommandLine.Error, CommandLine.Infrastructure.Unit>)", file="DefaultFormatterTests.cs"];
m8_126 [label="var equalIndex = text.IndexOf('=')", span="119-119", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Func<CommandLine.Error, CommandLine.Infrastructure.Unit>)", file="DefaultFormatterTests.cs"];
m8_133 [label="var parts = text.Split('=')", span="130-130", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Func<CommandLine.Error, CommandLine.Infrastructure.Unit>)", file="DefaultFormatterTests.cs"];
m8_127 [label="equalIndex <= 0", span="120-120", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Func<CommandLine.Error, CommandLine.Infrastructure.Unit>)", file="DefaultFormatterTests.cs"];
m8_130 [label="equalIndex == 1", span="125-125", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Func<CommandLine.Error, CommandLine.Infrastructure.Unit>)", file="DefaultFormatterTests.cs"];
m8_136 [label="Exit CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Func<CommandLine.Error, CommandLine.Infrastructure.Unit>)", span="112-112", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Func<CommandLine.Error, CommandLine.Infrastructure.Unit>)", file="DefaultFormatterTests.cs"];
m8_121 [label="Entry string.String(char, int)", span="0-0", cluster="string.String(char, int)", file="DefaultFormatterTests.cs"];
m8_119 [label="Entry CommandLine.Core.Token.Name(string)", span="19-19", cluster="CommandLine.Core.Token.Name(string)", file="DefaultFormatterTests.cs"];
m8_11 [label="Entry CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", span="67-67", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="DefaultFormatterTests.cs"];
m8_98 [label="value.Length > 1 || value[0] == '-' || value[1] != '-'", span="71-71", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="DefaultFormatterTests.cs"];
m8_101 [label="yield return Token.Value(value);", span="77-77", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="DefaultFormatterTests.cs"];
m8_102 [label="yield break;", span="78-78", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="DefaultFormatterTests.cs"];
m8_104 [label="yield return Token.Name(text);", span="83-83", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="DefaultFormatterTests.cs"];
m8_105 [label="yield break;", span="84-84", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="DefaultFormatterTests.cs"];
m8_107 [label="yield return Token.Name(first);", span="88-88", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="DefaultFormatterTests.cs"];
m8_113 [label="yield return Token.Name(n);", span="98-98", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="DefaultFormatterTests.cs"];
m8_115 [label="yield return Token.Value(text.Substring(seen.Count()));", span="107-107", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="DefaultFormatterTests.cs"];
m8_99 [label="var text = value.Substring(1)", span="73-73", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="DefaultFormatterTests.cs"];
m8_103 [label="value.Length == 2", span="81-81", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="DefaultFormatterTests.cs"];
m8_111 [label="!seen.Contains(c) && nameLookup(n)", span="95-95", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="DefaultFormatterTests.cs"];
m8_100 [label="char.IsDigit(text[0])", span="75-75", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="DefaultFormatterTests.cs"];
m8_106 [label="var first = text.Substring(0, 1)", span="87-87", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="DefaultFormatterTests.cs"];
m8_109 [label="text.Substring(1)", span="92-92", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="DefaultFormatterTests.cs"];
m8_114 [label="seen.Count() < text.Length", span="105-105", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="DefaultFormatterTests.cs"];
m8_108 [label="var seen = new List<char> { first[0] }", span="90-90", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="DefaultFormatterTests.cs"];
m8_112 [label="seen.Add(c)", span="97-97", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="DefaultFormatterTests.cs"];
m8_110 [label="var n = new string(c, 1)", span="94-94", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="DefaultFormatterTests.cs"];
m8_116 [label="Exit CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", span="67-67", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="DefaultFormatterTests.cs"];
m8_37 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="DefaultFormatterTests.cs"];
m8_38 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", file="DefaultFormatterTests.cs"];
m8_122 [label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Contains(T)", file="DefaultFormatterTests.cs"];
m8_16 [label="Entry UnknownOptionError.cstr", span="", cluster="UnknownOptionError.cstr", file="DefaultFormatterTests.cs"];
m8_15 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="DefaultFormatterTests.cs"];
m8_120 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="DefaultFormatterTests.cs"];
m8_82 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="DefaultFormatterTests.cs"];
m8_117 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="DefaultFormatterTests.cs"];
m8_8 [label="Entry string.StartsWith(string, System.StringComparison)", span="0-0", cluster="string.StartsWith(string, System.StringComparison)", file="DefaultFormatterTests.cs"];
m8_45 [label="Entry string.EqualsOrdinal(string)", span="34-34", cluster="string.EqualsOrdinal(string)", file="DefaultFormatterTests.cs"];
m8_69 [label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0", cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="DefaultFormatterTests.cs"];
m8_83 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="DefaultFormatterTests.cs"];
m8_92 [label="Entry lambda expression", span="59-59", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_20 [label="errors.Add(e)", span="18-18", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_25 [label="!unkTokens.Contains(x)", span="32-32", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_24 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_19 [label="Entry lambda expression", span="16-20", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_21 [label="return Unit.Default;", span="19-19", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_22 [label="Exit lambda expression", span="16-20", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_26 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_42 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_46 [label="Entry lambda expression", span="41-41", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_49 [label="Entry lambda expression", span="42-42", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_52 [label="Entry lambda expression", span="42-42", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_56 [label="tokens.Concat(values)", span="43-43", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_55 [label="Entry lambda expression", span="43-43", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_43 [label="arg.EqualsOrdinal(''--'')", span="39-39", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_44 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_47 [label="!arg.EqualsOrdinal(''--'')", span="41-41", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_48 [label="Exit lambda expression", span="41-41", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_50 [label="!arg.EqualsOrdinal(''--'')", span="42-42", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_51 [label="Exit lambda expression", span="42-42", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_53 [label="Token.Value(t)", span="42-42", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_54 [label="Exit lambda expression", span="42-42", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_57 [label="Exit lambda expression", span="43-43", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_67 [label="optionSequenceWithSeparatorLookup(t.Text)\r\n                    .Return(sep => Tuple.Create(i + 1, sep),\r\n                        Tuple.Create(-1, '\0'))", span="53-55", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_66 [label="Entry lambda expression", span="52-55", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_74 [label="Entry lambda expression", span="55-55", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_78 [label="replaces.FirstOrDefault(x => x.Item1 == i).ToMaybe()\r\n                            .Return(r => t.Text.Split(r.Item2).Select(str => Token.Value(str)),\r\n                                Enumerable.Empty<Token>().Concat(new[]{ t }))", span="58-60", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_77 [label="Entry lambda expression", span="57-60", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_95 [label="Entry lambda expression", span="62-62", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_72 [label="Tuple.Create(i + 1, sep)", span="54-54", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_68 [label="Exit lambda expression", span="52-55", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_71 [label="Entry lambda expression", span="54-54", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_73 [label="Exit lambda expression", span="54-54", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_75 [label="x.Item1 < 0", span="55-55", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_76 [label="Exit lambda expression", span="55-55", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_86 [label="x.Item1 == i", span="58-58", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_89 [label="t.Text.Split(r.Item2).Select(str => Token.Value(str))", span="59-59", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_79 [label="Exit lambda expression", span="57-60", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_85 [label="Entry lambda expression", span="58-58", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_88 [label="Entry lambda expression", span="59-59", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_87 [label="Exit lambda expression", span="58-58", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_90 [label="Exit lambda expression", span="59-59", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_93 [label="Token.Value(str)", span="59-59", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_94 [label="Exit lambda expression", span="59-59", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_96 [label=x, span="62-62", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_97 [label="Exit lambda expression", span="62-62", cluster="lambda expression", file="DefaultFormatterTests.cs"];
m8_27 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="DefaultFormatterTests.cs"];
m8_80 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="DefaultFormatterTests.cs"];
m8_123 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="DefaultFormatterTests.cs"];
m8_40 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="DefaultFormatterTests.cs"];
m8_139 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="DefaultFormatterTests.cs"];
m8_0 [label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="DefaultFormatterTests.cs"];
m8_1 [label="var errors = new List<Error>()", span="15-15", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="DefaultFormatterTests.cs"];
m8_3 [label="var tokens = (from arg in arguments\r\n                          from token in !arg.StartsWith(''-'', StringComparison.Ordinal)\r\n                               ? new Token[] { Token.Value(arg) }\r\n                               : arg.StartsWith(''--'', StringComparison.Ordinal)\r\n                                     ? TokenizeLongName(arg, onError)\r\n                                     : TokenizeShortName(arg, nameLookup)\r\n                          select token).ToList()", span="22-28", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="DefaultFormatterTests.cs"];
m8_4 [label="var unkTokens = (from t in tokens where t.IsName() && !nameLookup(t.Text) select t).ToList()", span="30-30", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="DefaultFormatterTests.cs"];
m8_2 [label="Func<Error, Unit> onError = e =>\r\n                {\r\n                    errors.Add(e);\r\n                    return Unit.Default;\r\n                }", span="16-20", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="DefaultFormatterTests.cs"];
m8_5 [label="return StatePair.Create(tokens.Where(x=>!unkTokens.Contains(x)), errors.Concat(from t in unkTokens select new UnknownOptionError(t.Text)));", span="32-32", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="DefaultFormatterTests.cs"];
m8_6 [label="Exit CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="DefaultFormatterTests.cs"];
m8_41 [label="Entry CommandLine.Core.StatePair<T1>.MapValue<T1, T2>(System.Func<T1, T2>)", span="66-66", cluster="CommandLine.Core.StatePair<T1>.MapValue<T1, T2>(System.Func<T1, T2>)", file="DefaultFormatterTests.cs"];
m8_17 [label="Entry Unk.Concat", span="", cluster="Unk.Concat", file="DefaultFormatterTests.cs"];
m8_12 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="DefaultFormatterTests.cs"];
m8_23 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="DefaultFormatterTests.cs"];
m8_14 [label="Entry Unk.nameLookup", span="", cluster="Unk.nameLookup", file="DefaultFormatterTests.cs"];
m8_64 [label="Entry Unk.SkipWhile", span="", cluster="Unk.SkipWhile", file="DefaultFormatterTests.cs"];
m8_18 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="DefaultFormatterTests.cs"];
m8_137 [label="Entry string.IndexOf(char)", span="0-0", cluster="string.IndexOf(char)", file="DefaultFormatterTests.cs"];
m8_84 [label="Entry Unk.Return", span="", cluster="Unk.Return", file="DefaultFormatterTests.cs"];
m8_36 [label="Entry System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", file="DefaultFormatterTests.cs"];
m8_9 [label="Entry CommandLine.Core.Token.Value(string)", span="24-24", cluster="CommandLine.Core.Token.Value(string)", file="DefaultFormatterTests.cs"];
m8_13 [label="Entry Unk.IsName", span="", cluster="Unk.IsName", file="DefaultFormatterTests.cs"];
m8_70 [label="Entry CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="103-103", cluster="CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="DefaultFormatterTests.cs"];
m8_39 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="DefaultFormatterTests.cs"];
m8_28 [label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", span="35-35", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="DefaultFormatterTests.cs"];
m8_29 [label="arguments.Any(arg => arg.EqualsOrdinal(''--''))", span="39-39", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="DefaultFormatterTests.cs"];
m8_30 [label="var tokenizerResult = tokenizer(arguments.TakeWhile(arg => !arg.EqualsOrdinal(''--'')))", span="41-41", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="DefaultFormatterTests.cs"];
m8_31 [label="var values = arguments.SkipWhile(arg => !arg.EqualsOrdinal(''--'')).Skip(1).Select(t => Token.Value(t))", span="42-42", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="DefaultFormatterTests.cs"];
m8_33 [label="return tokenizer(arguments);", span="45-45", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="DefaultFormatterTests.cs"];
m8_32 [label="return tokenizerResult.MapValue(tokens => tokens.Concat(values));", span="43-43", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="DefaultFormatterTests.cs"];
m8_34 [label="Exit CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", span="35-35", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="DefaultFormatterTests.cs"];
m8_140 [label=errors, span="", file="DefaultFormatterTests.cs"];
m8_141 [label=unkTokens, span="", file="DefaultFormatterTests.cs"];
m8_142 [label=values, span="", file="DefaultFormatterTests.cs"];
m8_143 [label="System.Func<string, CommandLine.Infrastructure.Maybe<char>>", span="", file="DefaultFormatterTests.cs"];
m8_144 [label=int, span="", file="DefaultFormatterTests.cs"];
m8_145 [label=replaces, span="", file="DefaultFormatterTests.cs"];
m8_146 [label=int, span="", file="DefaultFormatterTests.cs"];
m8_147 [label="CommandLine.Core.Token", span="", file="DefaultFormatterTests.cs"];
m9_30 [label="Entry Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceKey(string, int)", span="57-57", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceKey(string, int)", file="DehumanizeToEnumTests.cs"];
m9_32 [label="return resourceKey;", span="59-59", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceKey(string, int)", file="DehumanizeToEnumTests.cs"];
m9_33 [label="Exit Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceKey(string, int)", span="57-57", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceKey(string, int)", file="DehumanizeToEnumTests.cs"];
m9_4 [label="Entry Humanizer.Localisation.Formatters.DefaultFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="16-16", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", file="DehumanizeToEnumTests.cs"];
m9_5 [label="return GetResourceForDate(timeUnit, timeUnitTense, unit);", span="18-18", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", file="DehumanizeToEnumTests.cs"];
m9_6 [label="Exit Humanizer.Localisation.Formatters.DefaultFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="16-16", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", file="DehumanizeToEnumTests.cs"];
m9_3 [label="Entry Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceForDate(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="35-35", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceForDate(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", file="DehumanizeToEnumTests.cs"];
m9_14 [label="string resourceKey = ResourceKeys.DateHumanize.GetResourceKey(unit, timeUnitTense: timeUnitTense, count: count)", span="37-37", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceForDate(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", file="DehumanizeToEnumTests.cs"];
m9_15 [label="return count == 1 ? Format(resourceKey) : Format(resourceKey, count);", span="38-38", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceForDate(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", file="DehumanizeToEnumTests.cs"];
m9_16 [label="Exit Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceForDate(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="35-35", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceForDate(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", file="DehumanizeToEnumTests.cs"];
m9_17 [label="Entry Humanizer.Localisation.ResourceKeys.DateHumanize.GetResourceKey(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="27-27", cluster="Humanizer.Localisation.ResourceKeys.DateHumanize.GetResourceKey(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", file="DehumanizeToEnumTests.cs"];
m9_11 [label="Entry Humanizer.Localisation.Formatters.DefaultFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", span="30-30", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", file="DehumanizeToEnumTests.cs"];
m9_12 [label="return GetResourceForTimeSpan(timeUnit, unit);", span="32-32", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", file="DehumanizeToEnumTests.cs"];
m9_13 [label="Exit Humanizer.Localisation.Formatters.DefaultFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", span="30-30", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", file="DehumanizeToEnumTests.cs"];
m9_27 [label="Entry Humanizer.Localisation.Resources.GetResource(string)", span="16-16", cluster="Humanizer.Localisation.Resources.GetResource(string)", file="DehumanizeToEnumTests.cs"];
m9_19 [label="Entry Humanizer.Localisation.Formatters.DefaultFormatter.Format(string, int)", span="52-52", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.Format(string, int)", file="DehumanizeToEnumTests.cs"];
m9_28 [label="return Resources.GetResource(GetResourceKey(resourceKey, number)).FormatWith(number);", span="54-54", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.Format(string, int)", file="DehumanizeToEnumTests.cs"];
m9_29 [label="Exit Humanizer.Localisation.Formatters.DefaultFormatter.Format(string, int)", span="52-52", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.Format(string, int)", file="DehumanizeToEnumTests.cs"];
m9_10 [label="Entry Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceForTimeSpan(Humanizer.Localisation.TimeUnit, int)", span="41-41", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceForTimeSpan(Humanizer.Localisation.TimeUnit, int)", file="DehumanizeToEnumTests.cs"];
m9_20 [label="string resourceKey = ResourceKeys.TimeSpanHumanize.GetResourceKey(unit, count)", span="43-43", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceForTimeSpan(Humanizer.Localisation.TimeUnit, int)", file="DehumanizeToEnumTests.cs"];
m9_21 [label="return count == 1 ? Format(resourceKey) : Format(resourceKey, count);", span="44-44", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceForTimeSpan(Humanizer.Localisation.TimeUnit, int)", file="DehumanizeToEnumTests.cs"];
m9_22 [label="Exit Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceForTimeSpan(Humanizer.Localisation.TimeUnit, int)", span="41-41", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceForTimeSpan(Humanizer.Localisation.TimeUnit, int)", file="DehumanizeToEnumTests.cs"];
m9_31 [label="Entry string.FormatWith(params object[])", span="15-15", cluster="string.FormatWith(params object[])", file="DehumanizeToEnumTests.cs"];
m9_18 [label="Entry Humanizer.Localisation.Formatters.DefaultFormatter.Format(string)", span="47-47", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.Format(string)", file="DehumanizeToEnumTests.cs"];
m9_24 [label="return Resources.GetResource(GetResourceKey(resourceKey));", span="49-49", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.Format(string)", file="DehumanizeToEnumTests.cs"];
m9_25 [label="Exit Humanizer.Localisation.Formatters.DefaultFormatter.Format(string)", span="47-47", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.Format(string)", file="DehumanizeToEnumTests.cs"];
m9_23 [label="Entry Humanizer.Localisation.ResourceKeys.TimeSpanHumanize.GetResourceKey(Humanizer.Localisation.TimeUnit, int)", span="19-19", cluster="Humanizer.Localisation.ResourceKeys.TimeSpanHumanize.GetResourceKey(Humanizer.Localisation.TimeUnit, int)", file="DehumanizeToEnumTests.cs"];
m9_26 [label="Entry Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceKey(string)", span="62-62", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceKey(string)", file="DehumanizeToEnumTests.cs"];
m9_34 [label="return resourceKey;", span="64-64", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceKey(string)", file="DehumanizeToEnumTests.cs"];
m9_35 [label="Exit Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceKey(string)", span="62-62", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceKey(string)", file="DehumanizeToEnumTests.cs"];
m9_7 [label="Entry Humanizer.Localisation.Formatters.DefaultFormatter.TimeSpanHumanize_Zero()", span="25-25", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.TimeSpanHumanize_Zero()", file="DehumanizeToEnumTests.cs"];
m9_8 [label="return GetResourceForTimeSpan(TimeUnit.Millisecond, 0);", span="27-27", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.TimeSpanHumanize_Zero()", file="DehumanizeToEnumTests.cs"];
m9_9 [label="Exit Humanizer.Localisation.Formatters.DefaultFormatter.TimeSpanHumanize_Zero()", span="25-25", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.TimeSpanHumanize_Zero()", file="DehumanizeToEnumTests.cs"];
m9_0 [label="Entry Humanizer.Localisation.Formatters.DefaultFormatter.DateHumanize_Now()", span="11-11", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.DateHumanize_Now()", file="DehumanizeToEnumTests.cs"];
m9_1 [label="return GetResourceForDate(TimeUnit.Millisecond, Tense.Past, 0);", span="13-13", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.DateHumanize_Now()", file="DehumanizeToEnumTests.cs"];
m9_2 [label="Exit Humanizer.Localisation.Formatters.DefaultFormatter.DateHumanize_Now()", span="11-11", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.DateHumanize_Now()", file="DehumanizeToEnumTests.cs"];
m9_36 [label="Humanizer.Localisation.Formatters.DefaultFormatter", span="", file="DehumanizeToEnumTests.cs"];
m10_5 [label="Entry Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", span="43-43", cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", file="InflectorTests.cs"];
m10_6 [label="Assert.Equal(plural, plural.Pluralize(false))", span="45-45", cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", file="InflectorTests.cs"];
m10_7 [label="Assert.Equal(plural, singular.Pluralize(false))", span="46-46", cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", file="InflectorTests.cs"];
m10_8 [label="Exit Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", span="43-43", cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", file="InflectorTests.cs"];
m10_28 [label="Entry string.Hyphenate()", span="138-138", cluster="string.Hyphenate()", file="InflectorTests.cs"];
m10_21 [label="Entry Humanizer.Tests.InflectorTests.Dasherize(string, string)", span="82-82", cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", file="InflectorTests.cs"];
m10_22 [label="Assert.Equal(input.Dasherize(), expectedOutput)", span="84-84", cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", file="InflectorTests.cs"];
m10_23 [label="Exit Humanizer.Tests.InflectorTests.Dasherize(string, string)", span="82-82", cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", file="InflectorTests.cs"];
m10_33 [label="Entry Humanizer.Tests.InflectorTests.Camelize(string, string)", span="119-119", cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)", file="InflectorTests.cs"];
m10_34 [label="Assert.Equal(expectedOutput, input.Camelize())", span="121-121", cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)", file="InflectorTests.cs"];
m10_35 [label="Exit Humanizer.Tests.InflectorTests.Camelize(string, string)", span="119-119", cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)", file="InflectorTests.cs"];
m10_41 [label="Entry Humanizer.Tests.PluralTestSource.GetEnumerator()", span="140-140", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_42 [label="yield return new object[] {''search'', ''searches''};", span="142-142", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_43 [label="yield return new object[] {''switch'', ''switches''};", span="143-143", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_44 [label="yield return new object[] {''fix'', ''fixes''};", span="144-144", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_45 [label="yield return new object[] {''box'', ''boxes''};", span="145-145", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_46 [label="yield return new object[] {''process'', ''processes''};", span="146-146", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_47 [label="yield return new object[] {''address'', ''addresses''};", span="147-147", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_48 [label="yield return new object[] {''case'', ''cases''};", span="148-148", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_49 [label="yield return new object[] {''stack'', ''stacks''};", span="149-149", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_50 [label="yield return new object[] {''wish'', ''wishes''};", span="150-150", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_51 [label="yield return new object[] {''fish'', ''fish''};", span="151-151", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_52 [label="yield return new object[] {''category'', ''categories''};", span="153-153", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_53 [label="yield return new object[] {''query'', ''queries''};", span="154-154", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_54 [label="yield return new object[] {''ability'', ''abilities''};", span="155-155", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_55 [label="yield return new object[] {''agency'', ''agencies''};", span="156-156", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_56 [label="yield return new object[] {''movie'', ''movies''};", span="157-157", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_57 [label="yield return new object[] {''archive'', ''archives''};", span="159-159", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_58 [label="yield return new object[] {''index'', ''indices''};", span="161-161", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_59 [label="yield return new object[] {''wife'', ''wives''};", span="163-163", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_60 [label="yield return new object[] {''safe'', ''saves''};", span="164-164", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_61 [label="yield return new object[] {''half'', ''halves''};", span="165-165", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_62 [label="yield return new object[] {''move'', ''moves''};", span="167-167", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_63 [label="yield return new object[] {''salesperson'', ''salespeople''};", span="169-169", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_64 [label="yield return new object[] {''person'', ''people''};", span="170-170", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_65 [label="yield return new object[] {''spokesman'', ''spokesmen''};", span="172-172", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_66 [label="yield return new object[] {''man'', ''men''};", span="173-173", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_67 [label="yield return new object[] {''woman'', ''women''};", span="174-174", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_68 [label="yield return new object[] {''basis'', ''bases''};", span="176-176", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_69 [label="yield return new object[] {''diagnosis'', ''diagnoses''};", span="177-177", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_70 [label="yield return new object[] {''datum'', ''data''};", span="179-179", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_71 [label="yield return new object[] {''medium'', ''media''};", span="180-180", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_72 [label="yield return new object[] {''analysis'', ''analyses''};", span="181-181", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_73 [label="yield return new object[] {''node_child'', ''node_children''};", span="183-183", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_74 [label="yield return new object[] {''child'', ''children''};", span="184-184", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_75 [label="yield return new object[] {''experience'', ''experiences''};", span="186-186", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_76 [label="yield return new object[] {''day'', ''days''};", span="187-187", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_77 [label="yield return new object[] {''comment'', ''comments''};", span="189-189", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_78 [label="yield return new object[] {''foobar'', ''foobars''};", span="190-190", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_79 [label="yield return new object[] {''newsletter'', ''newsletters''};", span="191-191", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_80 [label="yield return new object[] {''old_news'', ''old_news''};", span="193-193", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_81 [label="yield return new object[] {''news'', ''news''};", span="194-194", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_82 [label="yield return new object[] {''series'', ''series''};", span="196-196", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_83 [label="yield return new object[] {''species'', ''species''};", span="197-197", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_84 [label="yield return new object[] {''quiz'', ''quizzes''};", span="199-199", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_85 [label="yield return new object[] {''perspective'', ''perspectives''};", span="201-201", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_86 [label="yield return new object[] {''ox'', ''oxen''};", span="203-203", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_87 [label="yield return new object[] {''photo'', ''photos''};", span="204-204", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_88 [label="yield return new object[] {''buffalo'', ''buffaloes''};", span="205-205", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_89 [label="yield return new object[] {''tomato'', ''tomatoes''};", span="206-206", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_90 [label="yield return new object[] {''dwarf'', ''dwarves''};", span="207-207", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_91 [label="yield return new object[] {''elf'', ''elves''};", span="208-208", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_92 [label="yield return new object[] {''information'', ''information''};", span="209-209", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_93 [label="yield return new object[] {''equipment'', ''equipment''};", span="210-210", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_94 [label="yield return new object[] {''bus'', ''buses''};", span="211-211", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_95 [label="yield return new object[] {''status'', ''statuses''};", span="212-212", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_96 [label="yield return new object[] {''status_code'', ''status_codes''};", span="213-213", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_97 [label="yield return new object[] {''mouse'', ''mice''};", span="214-214", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_98 [label="yield return new object[] {''louse'', ''lice''};", span="216-216", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_99 [label="yield return new object[] {''house'', ''houses''};", span="217-217", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_100 [label="yield return new object[] {''octopus'', ''octopi''};", span="218-218", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_101 [label="yield return new object[] {''virus'', ''viri''};", span="219-219", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_102 [label="yield return new object[] {''alias'', ''aliases''};", span="220-220", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_103 [label="yield return new object[] {''portfolio'', ''portfolios''};", span="221-221", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_104 [label="yield return new object[] {''criterion'', ''criteria''};", span="222-222", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_105 [label="yield return new object[] {''vertex'', ''vertices''};", span="224-224", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_106 [label="yield return new object[] {''matrix'', ''matrices''};", span="225-225", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_107 [label="yield return new object[] {''axis'', ''axes''};", span="227-227", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_108 [label="yield return new object[] {''testis'', ''testes''};", span="228-228", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_109 [label="yield return new object[] {''crisis'', ''crises''};", span="229-229", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_110 [label="yield return new object[] {''rice'', ''rice''};", span="231-231", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_111 [label="yield return new object[] {''shoe'', ''shoes''};", span="232-232", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_112 [label="yield return new object[] {''horse'', ''horses''};", span="234-234", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_113 [label="yield return new object[] {''prize'', ''prizes''};", span="235-235", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_114 [label="yield return new object[] {''edge'', ''edges''};", span="236-236", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_115 [label="yield return new object[] {''goose'', ''geese''};", span="239-239", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_116 [label="yield return new object[] {''deer'', ''deer''};", span="240-240", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_117 [label="yield return new object[] {''sheep'', ''sheep''};", span="241-241", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_118 [label="yield return new object[] {''wolf'', ''wolves''};", span="242-242", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_119 [label="yield return new object[] {''volcano'', ''volcanoes''};", span="243-243", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_120 [label="yield return new object[] {''aircraft'', ''aircraft''};", span="244-244", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_121 [label="yield return new object[] {''alumna'', ''alumnae''};", span="245-245", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_122 [label="yield return new object[] {''alumnus'', ''alumni''};", span="246-246", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_123 [label="yield return new object[] {''fungus'', ''fungi''};", span="247-247", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_124 [label="yield return new object[] {''wave'',''waves''};", span="249-249", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_125 [label="yield return new object[] {''campus'', ''campuses''};", span="251-251", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_126 [label="yield return new object[] { ''is'', ''are'' };", span="253-253", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_127 [label="Exit Humanizer.Tests.PluralTestSource.GetEnumerator()", span="140-140", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs"];
m10_4 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="InflectorTests.cs"];
m10_13 [label="Entry Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", span="58-58", cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", file="InflectorTests.cs"];
m10_14 [label="Assert.Equal(singular, singular.Singularize(false))", span="60-60", cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", file="InflectorTests.cs"];
m10_15 [label="Assert.Equal(singular, plural.Singularize(false))", span="61-61", cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", file="InflectorTests.cs"];
m10_16 [label="Exit Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", span="58-58", cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", file="InflectorTests.cs"];
m10_37 [label="Entry Humanizer.Tests.InflectorTests.Underscore(string, string)", span="132-132", cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)", file="InflectorTests.cs"];
m10_38 [label="Assert.Equal(expectedOuput, input.Underscore())", span="134-134", cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)", file="InflectorTests.cs"];
m10_39 [label="Exit Humanizer.Tests.InflectorTests.Underscore(string, string)", span="132-132", cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)", file="InflectorTests.cs"];
m10_32 [label="Entry string.Pascalize()", span="95-95", cluster="string.Pascalize()", file="InflectorTests.cs"];
m10_17 [label="Entry Humanizer.Tests.InflectorTests.Titleize(string, string)", span="72-72", cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", file="InflectorTests.cs"];
m10_18 [label="Assert.Equal(expectedOuput, input.Titleize())", span="74-74", cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", file="InflectorTests.cs"];
m10_19 [label="Exit Humanizer.Tests.InflectorTests.Titleize(string, string)", span="72-72", cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", file="InflectorTests.cs"];
m10_20 [label="Entry string.Titleize()", span="85-85", cluster="string.Titleize()", file="InflectorTests.cs"];
m10_0 [label="Entry Humanizer.Tests.InflectorTests.Pluralize(string, string)", span="36-36", cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)", file="InflectorTests.cs"];
m10_1 [label="Assert.Equal(plural, singular.Pluralize())", span="38-38", cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)", file="InflectorTests.cs"];
m10_2 [label="Exit Humanizer.Tests.InflectorTests.Pluralize(string, string)", span="36-36", cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)", file="InflectorTests.cs"];
m10_3 [label="Entry string.Pluralize(bool)", span="52-52", cluster="string.Pluralize(bool)", file="InflectorTests.cs"];
m10_12 [label="Entry string.Singularize(bool)", span="75-75", cluster="string.Singularize(bool)", file="InflectorTests.cs"];
m10_24 [label="Entry string.Dasherize()", span="128-128", cluster="string.Dasherize()", file="InflectorTests.cs"];
m10_9 [label="Entry Humanizer.Tests.InflectorTests.Singularize(string, string)", span="51-51", cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", file="InflectorTests.cs"];
m10_10 [label="Assert.Equal(singular, plural.Singularize())", span="53-53", cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", file="InflectorTests.cs"];
m10_11 [label="Exit Humanizer.Tests.InflectorTests.Singularize(string, string)", span="51-51", cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", file="InflectorTests.cs"];
m10_29 [label="Entry Humanizer.Tests.InflectorTests.Pascalize(string, string)", span="105-105", cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", file="InflectorTests.cs"];
m10_30 [label="Assert.Equal(expectedOutput, input.Pascalize())", span="107-107", cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", file="InflectorTests.cs"];
m10_31 [label="Exit Humanizer.Tests.InflectorTests.Pascalize(string, string)", span="105-105", cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", file="InflectorTests.cs"];
m10_25 [label="Entry Humanizer.Tests.InflectorTests.Hyphenate(string, string)", span="92-92", cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)", file="InflectorTests.cs"];
m10_26 [label="Assert.Equal(input.Hyphenate(), expectedOutput)", span="94-94", cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)", file="InflectorTests.cs"];
m10_27 [label="Exit Humanizer.Tests.InflectorTests.Hyphenate(string, string)", span="92-92", cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)", file="InflectorTests.cs"];
m10_128 [label="Entry Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", span="256-256", cluster="Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", file="InflectorTests.cs"];
m10_129 [label="return GetEnumerator();", span="258-258", cluster="Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", file="InflectorTests.cs"];
m10_130 [label="Exit Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", span="256-256", cluster="Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", file="InflectorTests.cs"];
m10_36 [label="Entry string.Camelize()", span="105-105", cluster="string.Camelize()", file="InflectorTests.cs"];
m10_40 [label="Entry string.Underscore()", span="116-116", cluster="string.Underscore()", file="InflectorTests.cs"];
m10_131 [label="Humanizer.Tests.PluralTestSource", span="", file="InflectorTests.cs"];
m11_0 [label="Entry Humanizer.Tests.Localisation.sr_Latn.NumberToWordsTest.NumberToWordsTest()", span="12-12", cluster="Humanizer.Tests.Localisation.sr_Latn.NumberToWordsTest.NumberToWordsTest()", file="NumberToWordsTest.cs"];
m11_1 [label="Exit Humanizer.Tests.Localisation.sr_Latn.NumberToWordsTest.NumberToWordsTest()", span="12-12", cluster="Humanizer.Tests.Localisation.sr_Latn.NumberToWordsTest.NumberToWordsTest()", file="NumberToWordsTest.cs"];
m11_6 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="NumberToWordsTest.cs"];
m11_5 [label="Entry int.ToWords(System.Globalization.CultureInfo)", span="16-16", cluster="int.ToWords(System.Globalization.CultureInfo)", file="NumberToWordsTest.cs"];
m11_2 [label="Entry Humanizer.Tests.Localisation.sr_Latn.NumberToWordsTest.ToWords(int, string)", span="49-49", cluster="Humanizer.Tests.Localisation.sr_Latn.NumberToWordsTest.ToWords(int, string)", file="NumberToWordsTest.cs"];
m11_3 [label="Assert.Equal(expected, number.ToWords())", span="51-51", cluster="Humanizer.Tests.Localisation.sr_Latn.NumberToWordsTest.ToWords(int, string)", file="NumberToWordsTest.cs"];
m11_4 [label="Exit Humanizer.Tests.Localisation.sr_Latn.NumberToWordsTest.ToWords(int, string)", span="49-49", cluster="Humanizer.Tests.Localisation.sr_Latn.NumberToWordsTest.ToWords(int, string)", file="NumberToWordsTest.cs"];
m12_10 [label="Entry int.ToOrdinalWords(System.Globalization.CultureInfo)", span="52-52", cluster="int.ToOrdinalWords(System.Globalization.CultureInfo)", file="NumberToWordsTests.cs"];
m12_5 [label="Entry int.ToWords(System.Globalization.CultureInfo)", span="16-16", cluster="int.ToWords(System.Globalization.CultureInfo)", file="NumberToWordsTests.cs"];
m12_7 [label="Entry Humanizer.Tests.Localisation.fiFI.NumberToWordsTests.ToOrdinalWords(int, string)", span="66-66", cluster="Humanizer.Tests.Localisation.fiFI.NumberToWordsTests.ToOrdinalWords(int, string)", file="NumberToWordsTests.cs"];
m12_8 [label="Assert.Equal(expected, number.ToOrdinalWords())", span="68-68", cluster="Humanizer.Tests.Localisation.fiFI.NumberToWordsTests.ToOrdinalWords(int, string)", file="NumberToWordsTests.cs"];
m12_9 [label="Exit Humanizer.Tests.Localisation.fiFI.NumberToWordsTests.ToOrdinalWords(int, string)", span="66-66", cluster="Humanizer.Tests.Localisation.fiFI.NumberToWordsTests.ToOrdinalWords(int, string)", file="NumberToWordsTests.cs"];
m12_2 [label="Entry Humanizer.Tests.Localisation.fiFI.NumberToWordsTests.ToWords(int, string)", span="35-35", cluster="Humanizer.Tests.Localisation.fiFI.NumberToWordsTests.ToWords(int, string)", file="NumberToWordsTests.cs"];
m12_3 [label="Assert.Equal(expected, number.ToWords())", span="37-37", cluster="Humanizer.Tests.Localisation.fiFI.NumberToWordsTests.ToWords(int, string)", file="NumberToWordsTests.cs"];
m12_4 [label="Exit Humanizer.Tests.Localisation.fiFI.NumberToWordsTests.ToWords(int, string)", span="35-35", cluster="Humanizer.Tests.Localisation.fiFI.NumberToWordsTests.ToWords(int, string)", file="NumberToWordsTests.cs"];
m12_6 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="NumberToWordsTests.cs"];
m12_0 [label="Entry Humanizer.Tests.Localisation.fiFI.NumberToWordsTests.NumberToWordsTests()", span="7-7", cluster="Humanizer.Tests.Localisation.fiFI.NumberToWordsTests.NumberToWordsTests()", file="NumberToWordsTests.cs"];
m12_1 [label="Exit Humanizer.Tests.Localisation.fiFI.NumberToWordsTests.NumberToWordsTests()", span="7-7", cluster="Humanizer.Tests.Localisation.fiFI.NumberToWordsTests.NumberToWordsTests()", file="NumberToWordsTests.cs"];
m13_22 [label="Entry Humanizer.Tests.Localisation.it.OrdinalizerTests.FeminineText(string, string)", span="69-69", cluster="Humanizer.Tests.Localisation.it.OrdinalizerTests.FeminineText(string, string)", file="OrdinalizerTests.cs"];
m13_23 [label="Assert.Equal(expected, number.Ordinalize(GrammaticalGender.Feminine))", span="71-71", cluster="Humanizer.Tests.Localisation.it.OrdinalizerTests.FeminineText(string, string)", file="OrdinalizerTests.cs"];
m13_24 [label="Exit Humanizer.Tests.Localisation.it.OrdinalizerTests.FeminineText(string, string)", span="69-69", cluster="Humanizer.Tests.Localisation.it.OrdinalizerTests.FeminineText(string, string)", file="OrdinalizerTests.cs"];
m13_0 [label="Entry Humanizer.Tests.Localisation.it.OrdinalizerTests.OrdinalizerTests()", span="9-9", cluster="Humanizer.Tests.Localisation.it.OrdinalizerTests.OrdinalizerTests()", file="OrdinalizerTests.cs"];
m13_1 [label="Exit Humanizer.Tests.Localisation.it.OrdinalizerTests.OrdinalizerTests()", span="9-9", cluster="Humanizer.Tests.Localisation.it.OrdinalizerTests.OrdinalizerTests()", file="OrdinalizerTests.cs"];
m13_14 [label="Entry int.Ordinalize(Humanizer.GrammaticalGender)", span="53-53", cluster="int.Ordinalize(Humanizer.GrammaticalGender)", file="OrdinalizerTests.cs"];
m13_18 [label="Entry string.Ordinalize(Humanizer.GrammaticalGender)", span="29-29", cluster="string.Ordinalize(Humanizer.GrammaticalGender)", file="OrdinalizerTests.cs"];
m13_11 [label="Entry Humanizer.Tests.Localisation.it.OrdinalizerTests.MasculineNumber(int, string)", span="39-39", cluster="Humanizer.Tests.Localisation.it.OrdinalizerTests.MasculineNumber(int, string)", file="OrdinalizerTests.cs"];
m13_12 [label="Assert.Equal(expected, number.Ordinalize(GrammaticalGender.Masculine))", span="41-41", cluster="Humanizer.Tests.Localisation.it.OrdinalizerTests.MasculineNumber(int, string)", file="OrdinalizerTests.cs"];
m13_13 [label="Exit Humanizer.Tests.Localisation.it.OrdinalizerTests.MasculineNumber(int, string)", span="39-39", cluster="Humanizer.Tests.Localisation.it.OrdinalizerTests.MasculineNumber(int, string)", file="OrdinalizerTests.cs"];
m13_7 [label="Entry Humanizer.Tests.Localisation.it.OrdinalizerTests.GenderlessText(string, string)", span="29-29", cluster="Humanizer.Tests.Localisation.it.OrdinalizerTests.GenderlessText(string, string)", file="OrdinalizerTests.cs"];
m13_8 [label="Assert.Equal(expected, number.Ordinalize())", span="31-31", cluster="Humanizer.Tests.Localisation.it.OrdinalizerTests.GenderlessText(string, string)", file="OrdinalizerTests.cs"];
m13_9 [label="Exit Humanizer.Tests.Localisation.it.OrdinalizerTests.GenderlessText(string, string)", span="29-29", cluster="Humanizer.Tests.Localisation.it.OrdinalizerTests.GenderlessText(string, string)", file="OrdinalizerTests.cs"];
m13_2 [label="Entry Humanizer.Tests.Localisation.it.OrdinalizerTests.GenderlessNumber(int, string)", span="19-19", cluster="Humanizer.Tests.Localisation.it.OrdinalizerTests.GenderlessNumber(int, string)", file="OrdinalizerTests.cs"];
m13_3 [label="Assert.Equal(expected, number.Ordinalize())", span="21-21", cluster="Humanizer.Tests.Localisation.it.OrdinalizerTests.GenderlessNumber(int, string)", file="OrdinalizerTests.cs"];
m13_4 [label="Exit Humanizer.Tests.Localisation.it.OrdinalizerTests.GenderlessNumber(int, string)", span="19-19", cluster="Humanizer.Tests.Localisation.it.OrdinalizerTests.GenderlessNumber(int, string)", file="OrdinalizerTests.cs"];
m13_6 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="OrdinalizerTests.cs"];
m13_5 [label="Entry int.Ordinalize()", span="39-39", cluster="int.Ordinalize()", file="OrdinalizerTests.cs"];
m13_10 [label="Entry string.Ordinalize()", span="15-15", cluster="string.Ordinalize()", file="OrdinalizerTests.cs"];
m13_15 [label="Entry Humanizer.Tests.Localisation.it.OrdinalizerTests.MasculineText(string, string)", span="49-49", cluster="Humanizer.Tests.Localisation.it.OrdinalizerTests.MasculineText(string, string)", file="OrdinalizerTests.cs"];
m13_16 [label="Assert.Equal(expected, number.Ordinalize(GrammaticalGender.Masculine))", span="51-51", cluster="Humanizer.Tests.Localisation.it.OrdinalizerTests.MasculineText(string, string)", file="OrdinalizerTests.cs"];
m13_17 [label="Exit Humanizer.Tests.Localisation.it.OrdinalizerTests.MasculineText(string, string)", span="49-49", cluster="Humanizer.Tests.Localisation.it.OrdinalizerTests.MasculineText(string, string)", file="OrdinalizerTests.cs"];
m13_19 [label="Entry Humanizer.Tests.Localisation.it.OrdinalizerTests.FeminineNumber(int, string)", span="59-59", cluster="Humanizer.Tests.Localisation.it.OrdinalizerTests.FeminineNumber(int, string)", file="OrdinalizerTests.cs"];
m13_20 [label="Assert.Equal(expected, number.Ordinalize(GrammaticalGender.Feminine))", span="61-61", cluster="Humanizer.Tests.Localisation.it.OrdinalizerTests.FeminineNumber(int, string)", file="OrdinalizerTests.cs"];
m13_21 [label="Exit Humanizer.Tests.Localisation.it.OrdinalizerTests.FeminineNumber(int, string)", span="59-59", cluster="Humanizer.Tests.Localisation.it.OrdinalizerTests.FeminineNumber(int, string)", file="OrdinalizerTests.cs"];
m14_13 [label="Entry int.Ordinalize(Humanizer.GrammaticalGender)", span="53-53", cluster="int.Ordinalize(Humanizer.GrammaticalGender)", file="OrdinalizeTests.cs"];
m14_5 [label="Entry string.Ordinalize(Humanizer.GrammaticalGender)", span="29-29", cluster="string.Ordinalize(Humanizer.GrammaticalGender)", file="OrdinalizeTests.cs"];
m14_2 [label="Entry Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeString(string, string)", span="26-26", cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeString(string, string)", file="OrdinalizeTests.cs"];
m14_3 [label="Assert.Equal(number.Ordinalize(GrammaticalGender.Masculine), ordinalized)", span="28-28", cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeString(string, string)", file="OrdinalizeTests.cs"];
m14_4 [label="Exit Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeString(string, string)", span="26-26", cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeString(string, string)", file="OrdinalizeTests.cs"];
m14_6 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="OrdinalizeTests.cs"];
m14_14 [label="Entry Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeNumberFeminine(int, string)", span="85-85", cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeNumberFeminine(int, string)", file="OrdinalizeTests.cs"];
m14_15 [label="Assert.Equal(number.Ordinalize(GrammaticalGender.Feminine), ordinalized)", span="87-87", cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeNumberFeminine(int, string)", file="OrdinalizeTests.cs"];
m14_16 [label="Exit Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeNumberFeminine(int, string)", span="85-85", cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeNumberFeminine(int, string)", file="OrdinalizeTests.cs"];
m14_10 [label="Entry Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeNumber(int, string)", span="65-65", cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeNumber(int, string)", file="OrdinalizeTests.cs"];
m14_11 [label="Assert.Equal(number.Ordinalize(GrammaticalGender.Masculine), ordinalized)", span="67-67", cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeNumber(int, string)", file="OrdinalizeTests.cs"];
m14_12 [label="Exit Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeNumber(int, string)", span="65-65", cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeNumber(int, string)", file="OrdinalizeTests.cs"];
m14_0 [label="Entry Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeTests()", span="7-7", cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeTests()", file="OrdinalizeTests.cs"];
m14_1 [label="Exit Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeTests()", span="7-7", cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeTests()", file="OrdinalizeTests.cs"];
m14_7 [label="Entry Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeStringFeminine(string, string)", span="45-45", cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeStringFeminine(string, string)", file="OrdinalizeTests.cs"];
m14_8 [label="Assert.Equal(number.Ordinalize(GrammaticalGender.Feminine), ordinalized)", span="47-47", cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeStringFeminine(string, string)", file="OrdinalizeTests.cs"];
m14_9 [label="Exit Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeStringFeminine(string, string)", span="45-45", cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeStringFeminine(string, string)", file="OrdinalizeTests.cs"];
m15_2 [label="Entry Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="10-10", cluster="Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", file="ParsingTests.cs"];
m15_3 [label="Exit Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="10-10", cluster="Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", file="ParsingTests.cs"];
m15_0 [label="Entry Humanizer.Localisation.Formatters.IFormatter.DateHumanize_Now()", span="9-9", cluster="Humanizer.Localisation.Formatters.IFormatter.DateHumanize_Now()", file="ParsingTests.cs"];
m15_1 [label="Exit Humanizer.Localisation.Formatters.IFormatter.DateHumanize_Now()", span="9-9", cluster="Humanizer.Localisation.Formatters.IFormatter.DateHumanize_Now()", file="ParsingTests.cs"];
m15_6 [label="Entry Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", span="13-13", cluster="Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", file="ParsingTests.cs"];
m15_7 [label="Exit Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", span="13-13", cluster="Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", file="ParsingTests.cs"];
m15_4 [label="Entry Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize_Zero()", span="12-12", cluster="Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize_Zero()", file="ParsingTests.cs"];
m15_5 [label="Exit Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize_Zero()", span="12-12", cluster="Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize_Zero()", file="ParsingTests.cs"];
m16_4 [label="Entry Humanizer.Tests.ResourceKeyTests.TimeSpanHumanizeKeysGeneration(string, string)", span="18-18", cluster="Humanizer.Tests.ResourceKeyTests.TimeSpanHumanizeKeysGeneration(string, string)", file="ResourceKeyTests.cs"];
m16_5 [label="Assert.Equal(expected, actual)", span="20-20", cluster="Humanizer.Tests.ResourceKeyTests.TimeSpanHumanizeKeysGeneration(string, string)", file="ResourceKeyTests.cs"];
m16_6 [label="Exit Humanizer.Tests.ResourceKeyTests.TimeSpanHumanizeKeysGeneration(string, string)", span="18-18", cluster="Humanizer.Tests.ResourceKeyTests.TimeSpanHumanizeKeysGeneration(string, string)", file="ResourceKeyTests.cs"];
m16_11 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="ResourceKeyTests.cs"];
m16_12 [label="Entry Humanizer.Tests.ResourceKeyTests.TimeSpanHumanizeKeysExistence(string, string)", span="32-32", cluster="Humanizer.Tests.ResourceKeyTests.TimeSpanHumanizeKeysExistence(string, string)", file="ResourceKeyTests.cs"];
m16_13 [label="Assert.NotNull(Resources.GetResource(generatedResourceKey))", span="34-34", cluster="Humanizer.Tests.ResourceKeyTests.TimeSpanHumanizeKeysExistence(string, string)", file="ResourceKeyTests.cs"];
m16_14 [label="Exit Humanizer.Tests.ResourceKeyTests.TimeSpanHumanizeKeysExistence(string, string)", span="32-32", cluster="Humanizer.Tests.ResourceKeyTests.TimeSpanHumanizeKeysExistence(string, string)", file="ResourceKeyTests.cs"];
m16_0 [label="Entry Humanizer.Tests.ResourceKeyTests.DateHumanizeKeysGeneration(string, string)", span="11-11", cluster="Humanizer.Tests.ResourceKeyTests.DateHumanizeKeysGeneration(string, string)", file="ResourceKeyTests.cs"];
m16_1 [label="Assert.Equal(expected, actual)", span="13-13", cluster="Humanizer.Tests.ResourceKeyTests.DateHumanizeKeysGeneration(string, string)", file="ResourceKeyTests.cs"];
m16_2 [label="Exit Humanizer.Tests.ResourceKeyTests.DateHumanizeKeysGeneration(string, string)", span="11-11", cluster="Humanizer.Tests.ResourceKeyTests.DateHumanizeKeysGeneration(string, string)", file="ResourceKeyTests.cs"];
m16_3 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ResourceKeyTests.cs"];
m16_10 [label="Entry Humanizer.Localisation.Resources.GetResource(string, System.Globalization.CultureInfo)", span="18-18", cluster="Humanizer.Localisation.Resources.GetResource(string, System.Globalization.CultureInfo)", file="ResourceKeyTests.cs"];
m16_7 [label="Entry Humanizer.Tests.ResourceKeyTests.DateHumanizeKeysExistence(string, string)", span="25-25", cluster="Humanizer.Tests.ResourceKeyTests.DateHumanizeKeysExistence(string, string)", file="ResourceKeyTests.cs"];
m16_8 [label="Assert.NotNull(Resources.GetResource(generatedResourceKey))", span="27-27", cluster="Humanizer.Tests.ResourceKeyTests.DateHumanizeKeysExistence(string, string)", file="ResourceKeyTests.cs"];
m16_9 [label="Exit Humanizer.Tests.ResourceKeyTests.DateHumanizeKeysExistence(string, string)", span="25-25", cluster="Humanizer.Tests.ResourceKeyTests.DateHumanizeKeysExistence(string, string)", file="ResourceKeyTests.cs"];
m17_8 [label="Entry string.FromRoman()", span="43-43", cluster="string.FromRoman()", file="RomanNumeralTests.cs"];
m17_4 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="RomanNumeralTests.cs"];
m17_0 [label="Entry Humanizer.Tests.RomanNumeralTests.ToRoman(int, string)", span="27-27", cluster="Humanizer.Tests.RomanNumeralTests.ToRoman(int, string)", file="RomanNumeralTests.cs"];
m17_1 [label="Assert.Equal(expected, input.ToRoman())", span="29-29", cluster="Humanizer.Tests.RomanNumeralTests.ToRoman(int, string)", file="RomanNumeralTests.cs"];
m17_2 [label="Exit Humanizer.Tests.RomanNumeralTests.ToRoman(int, string)", span="27-27", cluster="Humanizer.Tests.RomanNumeralTests.ToRoman(int, string)", file="RomanNumeralTests.cs"];
m17_5 [label="Entry Humanizer.Tests.RomanNumeralTests.FromRoman(int, string)", span="52-52", cluster="Humanizer.Tests.RomanNumeralTests.FromRoman(int, string)", file="RomanNumeralTests.cs"];
m17_6 [label="Assert.Equal(expected, input.FromRoman())", span="54-54", cluster="Humanizer.Tests.RomanNumeralTests.FromRoman(int, string)", file="RomanNumeralTests.cs"];
m17_7 [label="Exit Humanizer.Tests.RomanNumeralTests.FromRoman(int, string)", span="52-52", cluster="Humanizer.Tests.RomanNumeralTests.FromRoman(int, string)", file="RomanNumeralTests.cs"];
m17_3 [label="Entry int.ToRoman()", span="84-84", cluster="int.ToRoman()", file="RomanNumeralTests.cs"];
m18_0 [label="Entry Humanizer.Tests.StringDehumanizeTests.CanDehumanizeIntoAPascalCaseWord(string, string)", span="17-17", cluster="Humanizer.Tests.StringDehumanizeTests.CanDehumanizeIntoAPascalCaseWord(string, string)", file="StringDehumanizeTests.cs"];
m18_1 [label="Assert.Equal(expectedResult, input.Dehumanize())", span="19-19", cluster="Humanizer.Tests.StringDehumanizeTests.CanDehumanizeIntoAPascalCaseWord(string, string)", file="StringDehumanizeTests.cs"];
m18_2 [label="Exit Humanizer.Tests.StringDehumanizeTests.CanDehumanizeIntoAPascalCaseWord(string, string)", span="17-17", cluster="Humanizer.Tests.StringDehumanizeTests.CanDehumanizeIntoAPascalCaseWord(string, string)", file="StringDehumanizeTests.cs"];
m18_4 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="StringDehumanizeTests.cs"];
m18_3 [label="Entry string.Dehumanize()", span="14-14", cluster="string.Dehumanize()", file="StringDehumanizeTests.cs"];
m19_0 [label="Entry Humanizer.Localisation.Ordinalizers.SpanishOrdinalizer.Convert(int, string)", span="4-4", cluster="Humanizer.Localisation.Ordinalizers.SpanishOrdinalizer.Convert(int, string)", file="StringExtensionsTests.cs"];
m19_1 [label="return Convert(number, numberString, GrammaticalGender.Masculine);", span="6-6", cluster="Humanizer.Localisation.Ordinalizers.SpanishOrdinalizer.Convert(int, string)", file="StringExtensionsTests.cs"];
m19_2 [label="Exit Humanizer.Localisation.Ordinalizers.SpanishOrdinalizer.Convert(int, string)", span="4-4", cluster="Humanizer.Localisation.Ordinalizers.SpanishOrdinalizer.Convert(int, string)", file="StringExtensionsTests.cs"];
m19_3 [label="Entry Humanizer.Localisation.Ordinalizers.SpanishOrdinalizer.Convert(int, string, Humanizer.GrammaticalGender)", span="9-9", cluster="Humanizer.Localisation.Ordinalizers.SpanishOrdinalizer.Convert(int, string, Humanizer.GrammaticalGender)", file="StringExtensionsTests.cs"];
m19_4 [label="number == 0", span="12-12", cluster="Humanizer.Localisation.Ordinalizers.SpanishOrdinalizer.Convert(int, string, Humanizer.GrammaticalGender)", file="StringExtensionsTests.cs"];
m19_6 [label="gender == GrammaticalGender.Feminine", span="15-15", cluster="Humanizer.Localisation.Ordinalizers.SpanishOrdinalizer.Convert(int, string, Humanizer.GrammaticalGender)", file="StringExtensionsTests.cs"];
m19_7 [label="return numberString + ''ª'';", span="16-16", cluster="Humanizer.Localisation.Ordinalizers.SpanishOrdinalizer.Convert(int, string, Humanizer.GrammaticalGender)", file="StringExtensionsTests.cs"];
m19_8 [label="return numberString + ''º'';", span="18-18", cluster="Humanizer.Localisation.Ordinalizers.SpanishOrdinalizer.Convert(int, string, Humanizer.GrammaticalGender)", file="StringExtensionsTests.cs"];
m19_5 [label="return ''0'';", span="13-13", cluster="Humanizer.Localisation.Ordinalizers.SpanishOrdinalizer.Convert(int, string, Humanizer.GrammaticalGender)", file="StringExtensionsTests.cs"];
m19_9 [label="Exit Humanizer.Localisation.Ordinalizers.SpanishOrdinalizer.Convert(int, string, Humanizer.GrammaticalGender)", span="9-9", cluster="Humanizer.Localisation.Ordinalizers.SpanishOrdinalizer.Convert(int, string, Humanizer.GrammaticalGender)", file="StringExtensionsTests.cs"];
m19_10 [label="Humanizer.Localisation.Ordinalizers.SpanishOrdinalizer", span="", file="StringExtensionsTests.cs"];
m20_2 [label="Entry Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="22-22", cluster="Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", file="StringHumanizeTests.cs"];
m20_3 [label="Exit Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="22-22", cluster="Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", file="StringHumanizeTests.cs"];
m20_0 [label="Entry Humanizer.Localisation.Formatters.IFormatter.DateHumanize_Now()", span="13-13", cluster="Humanizer.Localisation.Formatters.IFormatter.DateHumanize_Now()", file="StringHumanizeTests.cs"];
m20_1 [label="Exit Humanizer.Localisation.Formatters.IFormatter.DateHumanize_Now()", span="13-13", cluster="Humanizer.Localisation.Formatters.IFormatter.DateHumanize_Now()", file="StringHumanizeTests.cs"];
m20_6 [label="Entry Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", span="36-36", cluster="Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", file="StringHumanizeTests.cs"];
m20_7 [label="Exit Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", span="36-36", cluster="Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", file="StringHumanizeTests.cs"];
m20_4 [label="Entry Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize_Zero()", span="28-28", cluster="Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize_Zero()", file="StringHumanizeTests.cs"];
m20_5 [label="Exit Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize_Zero()", span="28-28", cluster="Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize_Zero()", file="StringHumanizeTests.cs"];
m21_28 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="TimeSpanHumanizerTests.cs"];
m21_29 [label="Entry Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.Weeks(int, string)", span="78-78", cluster="Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.Weeks(int, string)", file="TimeSpanHumanizerTests.cs"];
m21_30 [label="var actual = TimeSpan.FromDays(7 * weeks).Humanize()", span="80-80", cluster="Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.Weeks(int, string)", file="TimeSpanHumanizerTests.cs"];
m21_31 [label="Assert.Equal(expected, actual)", span="81-81", cluster="Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.Weeks(int, string)", file="TimeSpanHumanizerTests.cs"];
m21_32 [label="Exit Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.Weeks(int, string)", span="78-78", cluster="Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.Weeks(int, string)", file="TimeSpanHumanizerTests.cs"];
m21_19 [label="Entry Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.Hours(int, string)", span="56-56", cluster="Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.Hours(int, string)", file="TimeSpanHumanizerTests.cs"];
m21_20 [label="var actual = TimeSpan.FromHours(hours).Humanize()", span="58-58", cluster="Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.Hours(int, string)", file="TimeSpanHumanizerTests.cs"];
m21_21 [label="Assert.Equal(expected, actual)", span="59-59", cluster="Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.Hours(int, string)", file="TimeSpanHumanizerTests.cs"];
m21_22 [label="Exit Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.Hours(int, string)", span="56-56", cluster="Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.Hours(int, string)", file="TimeSpanHumanizerTests.cs"];
m21_2 [label="Entry Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.Milliseconds(int, string)", span="23-23", cluster="Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.Milliseconds(int, string)", file="TimeSpanHumanizerTests.cs"];
m21_3 [label="var actual = TimeSpan.FromMilliseconds(millisSeconds).Humanize()", span="25-25", cluster="Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.Milliseconds(int, string)", file="TimeSpanHumanizerTests.cs"];
m21_4 [label="Assert.Equal(expected, actual)", span="26-26", cluster="Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.Milliseconds(int, string)", file="TimeSpanHumanizerTests.cs"];
m21_5 [label="Exit Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.Milliseconds(int, string)", span="23-23", cluster="Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.Milliseconds(int, string)", file="TimeSpanHumanizerTests.cs"];
m21_18 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="TimeSpanHumanizerTests.cs"];
m21_9 [label="Entry Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.Seconds(int, string)", span="34-34", cluster="Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.Seconds(int, string)", file="TimeSpanHumanizerTests.cs"];
m21_10 [label="var actual = TimeSpan.FromSeconds(seconds).Humanize()", span="36-36", cluster="Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.Seconds(int, string)", file="TimeSpanHumanizerTests.cs"];
m21_11 [label="Assert.Equal(expected, actual)", span="37-37", cluster="Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.Seconds(int, string)", file="TimeSpanHumanizerTests.cs"];
m21_12 [label="Exit Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.Seconds(int, string)", span="34-34", cluster="Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.Seconds(int, string)", file="TimeSpanHumanizerTests.cs"];
m21_6 [label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0", cluster="System.TimeSpan.FromMilliseconds(double)", file="TimeSpanHumanizerTests.cs"];
m21_8 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="TimeSpanHumanizerTests.cs"];
m21_13 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="TimeSpanHumanizerTests.cs"];
m21_23 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="TimeSpanHumanizerTests.cs"];
m21_7 [label="Entry System.TimeSpan.Humanize(int, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", span="27-27", cluster="System.TimeSpan.Humanize(int, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="TimeSpanHumanizerTests.cs"];
m21_14 [label="Entry Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.Minutes(int, string)", span="45-45", cluster="Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.Minutes(int, string)", file="TimeSpanHumanizerTests.cs"];
m21_15 [label="var actual = TimeSpan.FromMinutes(minutes).Humanize()", span="47-47", cluster="Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.Minutes(int, string)", file="TimeSpanHumanizerTests.cs"];
m21_16 [label="Assert.Equal(expected, actual)", span="48-48", cluster="Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.Minutes(int, string)", file="TimeSpanHumanizerTests.cs"];
m21_17 [label="Exit Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.Minutes(int, string)", span="45-45", cluster="Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.Minutes(int, string)", file="TimeSpanHumanizerTests.cs"];
m21_0 [label="Entry Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.TimeSpanHumanizerTests()", span="14-14", cluster="Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.TimeSpanHumanizerTests()", file="TimeSpanHumanizerTests.cs"];
m21_1 [label="Exit Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.TimeSpanHumanizerTests()", span="14-14", cluster="Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.TimeSpanHumanizerTests()", file="TimeSpanHumanizerTests.cs"];
m21_24 [label="Entry Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.Days(int, string)", span="68-68", cluster="Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.Days(int, string)", file="TimeSpanHumanizerTests.cs"];
m21_25 [label="var actual = TimeSpan.FromDays(days).Humanize()", span="70-70", cluster="Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.Days(int, string)", file="TimeSpanHumanizerTests.cs"];
m21_26 [label="Assert.Equal(expected, actual)", span="71-71", cluster="Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.Days(int, string)", file="TimeSpanHumanizerTests.cs"];
m21_27 [label="Exit Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.Days(int, string)", span="68-68", cluster="Humanizer.Tests.Localisation.roRo.TimeSpanHumanizerTests.Days(int, string)", file="TimeSpanHumanizerTests.cs"];
m23_7 [label="Entry Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", span="39-39", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", file="ToQuantityTests.cs"];
m23_8 [label="Assert.Equal(expected, word.ToQuantity(quatity, ShowQuantityAs.None))", span="41-41", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", file="ToQuantityTests.cs"];
m23_9 [label="Exit Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", span="39-39", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", file="ToQuantityTests.cs"];
m23_5 [label="Entry string.ToQuantity(int, Humanizer.ShowQuantityAs)", span="46-46", cluster="string.ToQuantity(int, Humanizer.ShowQuantityAs)", file="ToQuantityTests.cs"];
m23_2 [label="Entry Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantity(string, int, string)", span="22-22", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantity(string, int, string)", file="ToQuantityTests.cs"];
m23_3 [label="Assert.Equal(expected, word.ToQuantity(quatity))", span="24-24", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantity(string, int, string)", file="ToQuantityTests.cs"];
m23_4 [label="Exit Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantity(string, int, string)", span="22-22", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantity(string, int, string)", file="ToQuantityTests.cs"];
m23_6 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ToQuantityTests.cs"];
m23_0 [label="Entry Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityTests()", span="8-8", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityTests()", file="ToQuantityTests.cs"];
m23_1 [label="Exit Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityTests()", span="8-8", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityTests()", file="ToQuantityTests.cs"];
m23_10 [label="Entry Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityNumeric(string, int, string)", span="56-56", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityNumeric(string, int, string)", file="ToQuantityTests.cs"];
m23_11 [label="Assert.Equal(expected, word.ToQuantity(quatity, ShowQuantityAs.Numeric))", span="59-59", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityNumeric(string, int, string)", file="ToQuantityTests.cs"];
m23_12 [label="Exit Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityNumeric(string, int, string)", span="56-56", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityNumeric(string, int, string)", file="ToQuantityTests.cs"];
m23_13 [label="Entry Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWords(string, int, string)", span="75-75", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWords(string, int, string)", file="ToQuantityTests.cs"];
m23_14 [label="Assert.Equal(expected, word.ToQuantity(quatity, ShowQuantityAs.Words))", span="77-77", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWords(string, int, string)", file="ToQuantityTests.cs"];
m23_15 [label="Exit Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWords(string, int, string)", span="75-75", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWords(string, int, string)", file="ToQuantityTests.cs"];
m24_11 [label="Entry Humanizer.Tests.TransformersTests.TransformToUpperCase(string, string)", span="43-43", cluster="Humanizer.Tests.TransformersTests.TransformToUpperCase(string, string)", file="TransformersTests.cs"];
m24_12 [label="Assert.Equal(expectedOutput, input.Transform(To.UpperCase))", span="45-45", cluster="Humanizer.Tests.TransformersTests.TransformToUpperCase(string, string)", file="TransformersTests.cs"];
m24_13 [label="Exit Humanizer.Tests.TransformersTests.TransformToUpperCase(string, string)", span="43-43", cluster="Humanizer.Tests.TransformersTests.TransformToUpperCase(string, string)", file="TransformersTests.cs"];
m24_4 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="TransformersTests.cs"];
m24_3 [label="Entry string.Transform(params Humanizer.IStringTransformer[])", span="15-15", cluster="string.Transform(params Humanizer.IStringTransformer[])", file="TransformersTests.cs"];
m24_5 [label="Entry Humanizer.Tests.TransformersTests.TransformToLowerCase(string, string)", span="25-25", cluster="Humanizer.Tests.TransformersTests.TransformToLowerCase(string, string)", file="TransformersTests.cs"];
m24_6 [label="Assert.Equal(expectedOutput, input.Transform(To.LowerCase))", span="27-27", cluster="Humanizer.Tests.TransformersTests.TransformToLowerCase(string, string)", file="TransformersTests.cs"];
m24_7 [label="Exit Humanizer.Tests.TransformersTests.TransformToLowerCase(string, string)", span="25-25", cluster="Humanizer.Tests.TransformersTests.TransformToLowerCase(string, string)", file="TransformersTests.cs"];
m24_0 [label="Entry Humanizer.Tests.TransformersTests.TransformToTitleCase(string, string)", span="15-15", cluster="Humanizer.Tests.TransformersTests.TransformToTitleCase(string, string)", file="TransformersTests.cs"];
m24_1 [label="Assert.Equal(expectedOutput, input.Transform(To.TitleCase))", span="17-17", cluster="Humanizer.Tests.TransformersTests.TransformToTitleCase(string, string)", file="TransformersTests.cs"];
m24_2 [label="Exit Humanizer.Tests.TransformersTests.TransformToTitleCase(string, string)", span="15-15", cluster="Humanizer.Tests.TransformersTests.TransformToTitleCase(string, string)", file="TransformersTests.cs"];
m24_8 [label="Entry Humanizer.Tests.TransformersTests.TransformToSentenceCase(string, string)", span="34-34", cluster="Humanizer.Tests.TransformersTests.TransformToSentenceCase(string, string)", file="TransformersTests.cs"];
m24_9 [label="Assert.Equal(expectedOutput, input.Transform(To.SentenceCase))", span="36-36", cluster="Humanizer.Tests.TransformersTests.TransformToSentenceCase(string, string)", file="TransformersTests.cs"];
m24_10 [label="Exit Humanizer.Tests.TransformersTests.TransformToSentenceCase(string, string)", span="34-34", cluster="Humanizer.Tests.TransformersTests.TransformToSentenceCase(string, string)", file="TransformersTests.cs"];
m25_4 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="TruncatorTests.cs"];
m25_6 [label="Entry Unk.Join", span="", cluster="Unk.Join", file="TruncatorTests.cs"];
m25_5 [label="Entry string.Humanize(Humanizer.LetterCasing)", span="62-62", cluster="string.Humanize(Humanizer.LetterCasing)", file="TruncatorTests.cs"];
m25_0 [label="Entry Humanizer.StringDehumanizeExtensions.Dehumanize(string)", span="11-11", cluster="Humanizer.StringDehumanizeExtensions.Dehumanize(string)", file="TruncatorTests.cs"];
m25_1 [label="var titlizedWords = \r\n                (from word in input.Split(' ')\r\n                select word.Humanize(LetterCasing.Title))", span="13-15", cluster="Humanizer.StringDehumanizeExtensions.Dehumanize(string)", file="TruncatorTests.cs"];
m25_2 [label="return string.Join('''', titlizedWords);", span="17-17", cluster="Humanizer.StringDehumanizeExtensions.Dehumanize(string)", file="TruncatorTests.cs"];
m25_3 [label="Exit Humanizer.StringDehumanizeExtensions.Dehumanize(string)", span="11-11", cluster="Humanizer.StringDehumanizeExtensions.Dehumanize(string)", file="TruncatorTests.cs"];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.TimeUnit"];
m0_21 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.TimeUnit"];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_25  [key=2, style=dotted];
m0_22 -> m0_9  [key=2, style=dotted];
m0_22 -> m0_10  [key=2, style=dotted];
m0_22 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label=dummyRate];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_26  [key=2, style=dotted];
m0_23 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_24 -> m0_21  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [key=0, style=bold, color=blue];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label=double];
m0_13 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.TimeUnit"];
m0_13 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_20  [key=2, style=dotted];
m0_14 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label=size];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_9  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_11  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_12  [key=2, style=dotted];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_10  [key=2, style=dotted];
m0_19 -> m0_13  [key=0, style=bold, color=blue];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label=double];
m0_2 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_8  [key=2, style=dotted];
m0_3 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label=size];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_9  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_12  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_10  [key=2, style=dotted];
m0_5 -> m0_11  [key=2, style=dotted];
m0_7 -> m0_2  [key=0, style=bold, color=blue];
m0_27 -> m0_28  [key=0, style=solid];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_11  [key=2, style=dotted];
m0_29 -> m0_27  [key=0, style=bold, color=blue];
m0_30 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.TimeUnit"];
m0_31 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label=dummyRate];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_0  [key=0, style=bold, color=blue];
m2_2 -> m2_3  [key=0, style=solid];
m2_3 -> m2_2  [key=0, style=bold, color=blue];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_4  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_2  [key=1, style=dashed, color=darkseagreen4, label=double];
m3_0 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_6  [key=2, style=dotted];
m3_1 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label=valueSize];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_6  [key=2, style=dotted];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_8  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_7  [key=2, style=dotted];
m3_3 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label=valueSize];
m3_5 -> m3_0  [key=0, style=bold, color=blue];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_11  [key=1, style=dashed, color=darkseagreen4, label=double];
m3_9 -> m3_13  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_6  [key=2, style=dotted];
m3_10 -> m3_12  [key=1, style=dashed, color=darkseagreen4, label=valueSize];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_6  [key=2, style=dotted];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_8  [key=2, style=dotted];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_15  [key=2, style=dotted];
m3_12 -> m3_12  [key=1, style=dashed, color=darkseagreen4, label=valueSize];
m3_14 -> m3_9  [key=0, style=bold, color=blue];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_19  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_21  [key=2, style=dotted];
m3_17 -> m3_22  [key=2, style=dotted];
m3_17 -> m3_19  [key=1, style=dashed, color=darkseagreen4, label=list];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_21  [key=2, style=dotted];
m3_19 -> m3_8  [key=2, style=dotted];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_23  [key=2, style=dotted];
m3_20 -> m3_16  [key=0, style=bold, color=blue];
m4_37 -> m4_38  [key=0, style=solid, color=green];
m4_31 -> m4_32  [key=0, style=solid, color=green];
m4_5 -> m4_22  [key=3, color=green, style=bold, label="Parameter variable System.TimeSpan deltaFromBase"];
m4_5 -> m4_18  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Globalization.CultureInfo culture"];
m4_5 -> m4_0  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Globalization.CultureInfo culture"];
m4_5 -> m4_12  [key=0, style=solid];
m4_5 -> m4_13  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_5 -> m4_6  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Globalization.CultureInfo culture"];
m4_5 -> m4_2  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime baseDate"];
m4_5 -> m4_8  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime baseDate"];
m4_5 -> m4_1  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime baseDateUtc"];
m4_5 -> m4_7  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime baseDateUtc"];
m4_5 -> m4_24  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_15  [key=2, style=dotted];
m4_12 -> m4_16  [key=2, style=dotted];
m4_12 -> m4_17  [key=2, style=dotted];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_15  [key=2, style=dotted];
m4_13 -> m4_16  [key=2, style=dotted];
m4_13 -> m4_17  [key=2, style=dotted];
m4_14 -> m4_5  [key=0, style=bold, color=blue];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_19  [key=2, style=dotted];
m4_17 -> m4_20  [key=2, style=dotted];
m4_16 -> m4_17  [key=0, style=solid];
m4_19 -> m4_20  [key=0, style=solid, color=green];
m4_19 -> m4_21  [key=0, style=solid, color=green];
m4_38 -> m4_41  [key=0, style=solid, color=green];
m4_38 -> m4_54  [key=2, style=dotted, color=green];
m4_32 -> m4_41  [key=0, style=solid, color=green];
m4_32 -> m4_52  [key=2, style=dotted, color=green];
m4_6 -> m4_22  [key=3, color=green, style=bold, label="Parameter variable System.TimeSpan deltaFromNow"];
m4_6 -> m4_18  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Globalization.CultureInfo culture"];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_9  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_6 -> m4_10  [key=2, style=dotted];
m4_6 -> m4_11  [key=2, style=dotted];
m4_6 -> m4_12  [key=2, style=dotted];
m4_6 -> m4_16  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_6 -> m4_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_9 -> m4_5  [key=2, style=dotted];
m4_9 -> m4_10  [key=0, style=solid];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_11  [key=2, style=dotted];
m4_8 -> m4_15  [key=2, style=dotted];
m4_7 -> m4_9  [key=1, style=dashed, color=darkseagreen4, label=utcNow];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_11  [key=2, style=dotted];
m4_7 -> m4_13  [key=2, style=dotted];
m4_7 -> m4_14  [key=2, style=dotted];
m4_7 -> m4_7  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_10 -> m4_6  [key=0, style=bold, color=blue];
m4_4 -> m4_0  [key=0, style=bold, color=blue];
m4_43 -> m4_45  [key=0, style=solid];
m4_43 -> m4_6  [key=2, style=dotted];
m4_39 -> m4_40  [key=0, style=solid, color=green];
m4_39 -> m4_41  [key=1, style=dashed, color=red, label="params Humanizer.IStringTransformer[]"];
m4_40 -> m4_41  [key=0, style=solid, color=green];
m4_40 -> m4_37  [key=2, style=dotted, color=red];
m4_40 -> m4_24  [key=3, color=red, style=bold, label="Local variable string humanizedString"];
m4_40 -> m4_42  [key=1, style=dashed, color=green, label=deltaFromNow];
m4_40 -> m4_44  [key=1, style=dashed, color=green, label=deltaFromNow];
m4_40 -> m4_54  [key=2, style=dotted, color=green];
m4_40 -> m4_43  [key=1, style=dashed, color=green, label=deltaFromNow];
m4_41 -> m4_42  [key=0, style=solid, color=green];
m4_41 -> m4_43  [key=2, style=dotted, color=red];
m4_41 -> m4_44  [key=0, style=solid, color=green];
m4_42 -> m4_39  [key=0, style=bold, color=blue];
m4_42 -> m4_43  [key=0, style=solid, color=green];
m4_42 -> m4_0  [key=2, style=dotted, color=green];
m4_18 -> m4_20  [key=1, style=dashed, color=green, label="double?"];
m4_18 -> m4_23  [key=1, style=dashed, color=green, label=int];
m4_18 -> m4_41  [key=1, style=dashed, color=green, label="System.DateTime?"];
m4_18 -> m4_42  [key=1, style=dashed, color=green, label=string];
m4_18 -> m4_44  [key=1, style=dashed, color=green, label=string];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_24  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.Tense"];
m4_18 -> m4_26  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.TimeUnit"];
m4_18 -> m4_43  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_18 -> m4_16  [key=0, style=bold, color=blue];
m4_20 -> m4_22  [key=0, style=solid, color=green];
m4_20 -> m4_46  [key=2, style=dotted, color=green];
m4_22 -> m4_23  [key=0, style=solid, color=green];
m4_22 -> m4_48  [key=2, style=dotted, color=green];
m4_23 -> m4_23  [key=1, style=dashed, color=green, label=int];
m4_23 -> m4_24  [key=0, style=solid, color=green];
m4_23 -> m4_49  [key=2, style=dotted, color=green];
m4_23 -> m4_25  [key=1, style=dashed, color=green, label=int];
m4_23 -> m4_28  [key=1, style=dashed, color=green, label=int];
m4_23 -> m4_30  [key=1, style=dashed, color=green, label=int];
m4_23 -> m4_32  [key=1, style=dashed, color=green, label=int];
m4_23 -> m4_34  [key=1, style=dashed, color=green, label=int];
m4_23 -> m4_36  [key=1, style=dashed, color=green, label=int];
m4_23 -> m4_38  [key=1, style=dashed, color=green, label=int];
m4_23 -> m4_40  [key=1, style=dashed, color=green, label=int];
m4_23 -> m4_21  [key=0, style=bold, color=blue];
m4_24 -> m4_25  [key=0, style=solid, color=red];
m4_24 -> m4_26  [key=0, style=solid];
m4_24 -> m4_27  [key=1, style=dashed, color=red, label=string];
m4_24 -> m4_28  [key=1, style=dashed, color=red, label=string];
m4_24 -> m4_29  [key=1, style=dashed, color=red, label=string];
m4_24 -> m4_24  [key=3, color=darkorchid, style=bold, label="method methodReturn string Humanize"];
m4_24 -> m4_5  [key=3, color=darkorchid, style=bold, label="method methodReturn string Humanize"];
m4_25 -> m4_25  [key=1, style=dashed, color=green, label=int];
m4_25 -> m4_26  [key=0, style=solid, color=red];
m4_25 -> m4_28  [key=1, style=dashed, color=green, label=int];
m4_25 -> m4_30  [key=1, style=dashed, color=green, label=int];
m4_25 -> m4_32  [key=1, style=dashed, color=green, label=int];
m4_25 -> m4_34  [key=1, style=dashed, color=green, label=int];
m4_25 -> m4_36  [key=1, style=dashed, color=green, label=int];
m4_25 -> m4_38  [key=1, style=dashed, color=green, label=int];
m4_25 -> m4_40  [key=1, style=dashed, color=green, label=int];
m4_25 -> m4_27  [key=0, style=solid, color=red];
m4_25 -> m4_19  [key=2, style=dotted, color=red];
m4_28 -> m4_41  [key=0, style=solid, color=green];
m4_28 -> m4_50  [key=2, style=dotted];
m4_28 -> m4_30  [key=0, style=solid, color=red];
m4_28 -> m4_32  [key=2, style=dotted, color=red];
m4_30 -> m4_41  [key=0, style=solid, color=green];
m4_30 -> m4_51  [key=2, style=dotted, color=green];
m4_30 -> m4_24  [key=0, style=bold, color=blue];
m4_34 -> m4_41  [key=0, style=solid, color=green];
m4_34 -> m4_53  [key=2, style=dotted, color=green];
m4_34 -> m4_35  [key=0, style=solid, color=red];
m4_34 -> m4_37  [key=2, style=dotted, color=red];
m4_34 -> m4_24  [key=3, color=red, style=bold, label="Local variable string humanizedString"];
m4_36 -> m4_41  [key=0, style=solid, color=green];
m4_36 -> m4_54  [key=2, style=dotted, color=green];
m4_36 -> m4_33  [key=0, style=bold, color=blue];
m4_44 -> m4_45  [key=0, style=solid, color=green];
m4_44 -> m4_5  [key=2, style=dotted, color=green];
m4_21 -> m4_22  [key=0, style=solid, color=green];
m4_21 -> m4_47  [key=2, style=dotted, color=green];
m4_26 -> m4_27  [key=0, style=solid, color=green];
m4_26 -> m4_29  [key=0, style=solid, color=green];
m4_26 -> m4_31  [key=0, style=solid, color=green];
m4_26 -> m4_33  [key=0, style=solid, color=green];
m4_26 -> m4_35  [key=0, style=solid, color=green];
m4_26 -> m4_37  [key=0, style=solid, color=green];
m4_26 -> m4_39  [key=0, style=solid, color=green];
m4_26 -> m4_30  [key=0, style=solid];
m4_29 -> m4_30  [key=0, style=solid, color=red];
m4_29 -> m4_5  [key=2, style=dotted, color=red];
m4_33 -> m4_34  [key=0, style=solid, color=red];
m4_33 -> m4_35  [key=1, style=dashed, color=red, label="Humanizer.LetterCasing"];
m4_35 -> m4_36  [key=0, style=solid, color=red];
m4_35 -> m4_38  [key=2, style=dotted, color=red];
m4_27 -> m4_28  [key=0, style=solid, color=red];
m4_27 -> m4_29  [key=0, style=solid, color=red];
m4_27 -> m4_31  [key=2, style=dotted, color=red];
m4_45 -> m4_18  [key=0, style=bold, color=blue];
m4_0 -> m4_22  [key=3, color=green, style=bold, label="Parameter variable System.TimeSpan deltaFromNow"];
m4_0 -> m4_18  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Globalization.CultureInfo culture"];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_0 -> m4_0  [key=3, color=darkorchid, style=bold, label="Field variable System.Func<string, string> FromUnderscoreDashSeparatedWords"];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label=utcNow];
m4_1 -> m4_4  [key=2, style=dotted];
m4_3 -> m4_5  [key=2, style=dotted];
m4_3 -> m4_4  [key=0, style=solid];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_0  [key=0, style=bold, color=blue];
m5_7 -> m5_8  [key=0, style=solid];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_10  [key=2, style=dotted];
m5_8 -> m5_6  [key=2, style=dotted];
m5_9 -> m5_7  [key=0, style=bold, color=blue];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_5  [key=2, style=dotted];
m5_3 -> m5_6  [key=2, style=dotted];
m5_4 -> m5_2  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_0  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_2  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m6_0 -> m6_20  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_4  [key=1, style=dashed, color=darkseagreen4, label=tense];
m6_1 -> m6_6  [key=1, style=dashed, color=darkseagreen4, label=tense];
m6_1 -> m6_8  [key=1, style=dashed, color=darkseagreen4, label=tense];
m6_1 -> m6_10  [key=1, style=dashed, color=darkseagreen4, label=tense];
m6_1 -> m6_12  [key=1, style=dashed, color=darkseagreen4, label=tense];
m6_1 -> m6_14  [key=1, style=dashed, color=darkseagreen4, label=tense];
m6_1 -> m6_16  [key=1, style=dashed, color=darkseagreen4, label=tense];
m6_1 -> m6_18  [key=1, style=dashed, color=darkseagreen4, label=tense];
m6_1 -> m6_20  [key=1, style=dashed, color=darkseagreen4, label=tense];
m6_1 -> m6_21  [key=1, style=dashed, color=darkseagreen4, label=tense];
m6_1 -> m6_22  [key=1, style=dashed, color=darkseagreen4, label=tense];
m6_1 -> m6_25  [key=1, style=dashed, color=darkseagreen4, label=tense];
m6_1 -> m6_29  [key=1, style=dashed, color=darkseagreen4, label=tense];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_31  [key=2, style=dotted];
m6_2 -> m6_32  [key=2, style=dotted];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_22  [key=0, style=solid];
m6_20 -> m6_34  [key=2, style=dotted];
m6_4 -> m6_30  [key=0, style=solid];
m6_4 -> m6_33  [key=2, style=dotted];
m6_6 -> m6_30  [key=0, style=solid];
m6_6 -> m6_33  [key=2, style=dotted];
m6_6 -> m6_6  [key=1, style=dashed, color=darkseagreen4, label=ts];
m6_6 -> m6_7  [key=1, style=dashed, color=darkseagreen4, label=ts];
m6_8 -> m6_30  [key=0, style=solid];
m6_8 -> m6_33  [key=2, style=dotted];
m6_10 -> m6_30  [key=0, style=solid];
m6_10 -> m6_33  [key=2, style=dotted];
m6_10 -> m6_10  [key=1, style=dashed, color=darkseagreen4, label=ts];
m6_10 -> m6_11  [key=1, style=dashed, color=darkseagreen4, label=ts];
m6_12 -> m6_30  [key=0, style=solid];
m6_12 -> m6_33  [key=2, style=dotted];
m6_14 -> m6_30  [key=0, style=solid];
m6_14 -> m6_33  [key=2, style=dotted];
m6_14 -> m6_14  [key=1, style=dashed, color=darkseagreen4, label=ts];
m6_14 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label=ts];
m6_16 -> m6_30  [key=0, style=solid];
m6_16 -> m6_33  [key=2, style=dotted];
m6_18 -> m6_30  [key=0, style=solid];
m6_18 -> m6_33  [key=2, style=dotted];
m6_18 -> m6_18  [key=1, style=dashed, color=darkseagreen4, label=ts];
m6_18 -> m6_19  [key=1, style=dashed, color=darkseagreen4, label=ts];
m6_21 -> m6_30  [key=0, style=solid];
m6_21 -> m6_33  [key=2, style=dotted];
m6_22 -> m6_30  [key=0, style=solid];
m6_22 -> m6_33  [key=2, style=dotted];
m6_22 -> m6_22  [key=1, style=dashed, color=darkseagreen4, label=ts];
m6_22 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label=ts];
m6_25 -> m6_30  [key=0, style=solid];
m6_25 -> m6_33  [key=2, style=dotted];
m6_29 -> m6_30  [key=0, style=solid];
m6_29 -> m6_33  [key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_5  [key=0, style=solid];
m6_3 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label=ts];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_7  [key=0, style=solid];
m6_5 -> m6_5  [key=1, style=dashed, color=darkseagreen4, label=ts];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_9  [key=0, style=solid];
m6_7 -> m6_7  [key=1, style=dashed, color=darkseagreen4, label=ts];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_11  [key=0, style=solid];
m6_9 -> m6_9  [key=1, style=dashed, color=darkseagreen4, label=ts];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_13  [key=0, style=solid];
m6_11 -> m6_11  [key=1, style=dashed, color=darkseagreen4, label=ts];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_15  [key=0, style=solid];
m6_13 -> m6_13  [key=1, style=dashed, color=darkseagreen4, label=ts];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_17  [key=0, style=solid];
m6_15 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label=ts];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_19  [key=0, style=solid];
m6_17 -> m6_17  [key=1, style=dashed, color=darkseagreen4, label=ts];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_23  [key=0, style=solid];
m6_19 -> m6_19  [key=1, style=dashed, color=darkseagreen4, label=ts];
m6_19 -> m6_22  [key=1, style=dashed, color=darkseagreen4, label=ts];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_26  [key=0, style=solid];
m6_23 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label=ts];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_35  [key=2, style=dotted];
m6_24 -> m6_36  [key=2, style=dotted];
m6_24 -> m6_24  [key=1, style=dashed, color=darkseagreen4, label=ts];
m6_24 -> m6_26  [key=1, style=dashed, color=darkseagreen4, label=ts];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_35  [key=2, style=dotted];
m6_26 -> m6_36  [key=2, style=dotted];
m6_26 -> m6_26  [key=1, style=dashed, color=darkseagreen4, label=ts];
m6_26 -> m6_29  [key=1, style=dashed, color=darkseagreen4, label=years];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_29  [key=0, style=solid];
m6_28 -> m6_29  [key=0, style=solid];
m6_30 -> m6_0  [key=0, style=bold, color=blue];
m8_58 -> m8_59  [key=0, style=solid];
m8_58 -> m8_67  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, CommandLine.Infrastructure.Maybe<char>>"];
m8_58 -> m8_60  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>"];
m8_58 -> m8_62  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>"];
m8_59 -> m8_60  [key=0, style=solid];
m8_59 -> m8_40  [key=2, style=dotted];
m8_59 -> m8_64  [key=2, style=dotted];
m8_59 -> m8_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_59 -> m8_74  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_59 -> m8_78  [key=1, style=dashed, color=darkseagreen4, label=replaces];
m8_60 -> m8_61  [key=0, style=solid];
m8_60 -> m8_40  [key=2, style=dotted];
m8_60 -> m8_77  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_62 -> m8_63  [key=0, style=solid];
m8_62 -> m8_18  [key=2, style=dotted];
m8_61 -> m8_62  [key=0, style=solid];
m8_61 -> m8_65  [key=2, style=dotted];
m8_61 -> m8_95  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_63 -> m8_58  [key=0, style=bold, color=blue];
m8_10 -> m8_124  [key=0, style=solid];
m8_10 -> m8_128  [key=0, style=bold, color=crimson];
m8_10 -> m8_129  [key=0, style=bold, color=crimson];
m8_10 -> m8_132  [key=0, style=bold, color=crimson];
m8_10 -> m8_134  [key=0, style=bold, color=crimson];
m8_10 -> m8_135  [key=0, style=bold, color=crimson];
m8_10 -> m8_125  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_10 -> m8_131  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_124 -> m8_125  [key=0, style=solid];
m8_124 -> m8_136  [key=0, style=solid];
m8_124 -> m8_8  [key=2, style=dotted];
m8_128 -> m8_129  [key=0, style=solid];
m8_128 -> m8_119  [key=2, style=dotted];
m8_129 -> m8_130  [key=0, style=solid];
m8_132 -> m8_133  [key=0, style=solid];
m8_134 -> m8_135  [key=0, style=solid];
m8_134 -> m8_119  [key=2, style=dotted];
m8_135 -> m8_136  [key=0, style=solid];
m8_135 -> m8_9  [key=2, style=dotted];
m8_125 -> m8_126  [key=0, style=solid];
m8_125 -> m8_117  [key=2, style=dotted];
m8_125 -> m8_128  [key=1, style=dashed, color=darkseagreen4, label=text];
m8_125 -> m8_133  [key=1, style=dashed, color=darkseagreen4, label=text];
m8_131 -> m8_132  [key=0, style=solid];
m8_131 -> m8_138  [key=2, style=dotted];
m8_131 -> m8_37  [key=2, style=dotted];
m8_126 -> m8_127  [key=0, style=solid];
m8_126 -> m8_137  [key=2, style=dotted];
m8_126 -> m8_130  [key=1, style=dashed, color=darkseagreen4, label=equalIndex];
m8_133 -> m8_134  [key=0, style=solid];
m8_133 -> m8_139  [key=2, style=dotted];
m8_133 -> m8_135  [key=1, style=dashed, color=darkseagreen4, label=parts];
m8_127 -> m8_128  [key=0, style=solid];
m8_127 -> m8_130  [key=0, style=solid];
m8_130 -> m8_131  [key=0, style=solid];
m8_130 -> m8_133  [key=0, style=solid];
m8_136 -> m8_10  [key=0, style=bold, color=blue];
m8_11 -> m8_98  [key=0, style=solid];
m8_11 -> m8_101  [key=0, style=bold, color=crimson];
m8_11 -> m8_102  [key=0, style=bold, color=crimson];
m8_11 -> m8_104  [key=0, style=bold, color=crimson];
m8_11 -> m8_105  [key=0, style=bold, color=crimson];
m8_11 -> m8_107  [key=0, style=bold, color=crimson];
m8_11 -> m8_113  [key=0, style=bold, color=crimson];
m8_11 -> m8_115  [key=0, style=bold, color=crimson];
m8_11 -> m8_99  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_11 -> m8_103  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_11 -> m8_111  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, bool>"];
m8_98 -> m8_99  [key=0, style=solid];
m8_98 -> m8_116  [key=0, style=solid];
m8_101 -> m8_102  [key=0, style=solid];
m8_101 -> m8_9  [key=2, style=dotted];
m8_102 -> m8_103  [key=0, style=solid];
m8_104 -> m8_105  [key=0, style=solid];
m8_104 -> m8_119  [key=2, style=dotted];
m8_105 -> m8_106  [key=0, style=solid];
m8_107 -> m8_108  [key=0, style=solid];
m8_107 -> m8_119  [key=2, style=dotted];
m8_113 -> m8_109  [key=0, style=solid];
m8_113 -> m8_119  [key=2, style=dotted];
m8_115 -> m8_116  [key=0, style=solid];
m8_115 -> m8_123  [key=2, style=dotted];
m8_115 -> m8_117  [key=2, style=dotted];
m8_115 -> m8_9  [key=2, style=dotted];
m8_99 -> m8_100  [key=0, style=solid];
m8_99 -> m8_117  [key=2, style=dotted];
m8_99 -> m8_104  [key=1, style=dashed, color=darkseagreen4, label=text];
m8_99 -> m8_106  [key=1, style=dashed, color=darkseagreen4, label=text];
m8_99 -> m8_109  [key=1, style=dashed, color=darkseagreen4, label=text];
m8_99 -> m8_114  [key=1, style=dashed, color=darkseagreen4, label=text];
m8_99 -> m8_115  [key=1, style=dashed, color=darkseagreen4, label=text];
m8_103 -> m8_104  [key=0, style=solid];
m8_103 -> m8_106  [key=0, style=solid];
m8_111 -> m8_112  [key=0, style=solid];
m8_111 -> m8_114  [key=0, style=solid];
m8_111 -> m8_122  [key=2, style=dotted];
m8_111 -> m8_37  [key=2, style=dotted];
m8_100 -> m8_101  [key=0, style=solid];
m8_100 -> m8_103  [key=0, style=solid];
m8_100 -> m8_118  [key=2, style=dotted];
m8_106 -> m8_107  [key=0, style=solid];
m8_106 -> m8_120  [key=2, style=dotted];
m8_106 -> m8_108  [key=1, style=dashed, color=darkseagreen4, label=first];
m8_109 -> m8_110  [key=0, style=solid];
m8_109 -> m8_114  [key=0, style=solid];
m8_109 -> m8_117  [key=2, style=dotted];
m8_109 -> m8_111  [key=1, style=dashed, color=darkseagreen4, label=c];
m8_109 -> m8_112  [key=1, style=dashed, color=darkseagreen4, label=c];
m8_114 -> m8_115  [key=0, style=solid];
m8_114 -> m8_116  [key=0, style=solid];
m8_114 -> m8_123  [key=2, style=dotted];
m8_108 -> m8_109  [key=0, style=solid];
m8_108 -> m8_7  [key=2, style=dotted];
m8_108 -> m8_111  [key=1, style=dashed, color=darkseagreen4, label=seen];
m8_108 -> m8_112  [key=1, style=dashed, color=darkseagreen4, label=seen];
m8_108 -> m8_114  [key=1, style=dashed, color=darkseagreen4, label=seen];
m8_108 -> m8_115  [key=1, style=dashed, color=darkseagreen4, label=seen];
m8_112 -> m8_113  [key=0, style=solid];
m8_112 -> m8_23  [key=2, style=dotted];
m8_110 -> m8_111  [key=0, style=solid];
m8_110 -> m8_121  [key=2, style=dotted];
m8_110 -> m8_113  [key=1, style=dashed, color=darkseagreen4, label=n];
m8_116 -> m8_11  [key=0, style=bold, color=blue];
m8_92 -> m8_93  [key=0, style=solid];
m8_20 -> m8_21  [key=0, style=solid];
m8_20 -> m8_23  [key=2, style=dotted];
m8_25 -> m8_26  [key=0, style=solid];
m8_25 -> m8_27  [key=2, style=dotted];
m8_24 -> m8_25  [key=0, style=solid];
m8_19 -> m8_20  [key=0, style=solid];
m8_21 -> m8_22  [key=0, style=solid];
m8_22 -> m8_19  [key=0, style=bold, color=blue];
m8_26 -> m8_24  [key=0, style=bold, color=blue];
m8_42 -> m8_43  [key=0, style=solid];
m8_46 -> m8_47  [key=0, style=solid];
m8_49 -> m8_50  [key=0, style=solid];
m8_52 -> m8_53  [key=0, style=solid];
m8_56 -> m8_57  [key=0, style=solid];
m8_56 -> m8_17  [key=2, style=dotted];
m8_55 -> m8_56  [key=0, style=solid];
m8_43 -> m8_44  [key=0, style=solid];
m8_43 -> m8_45  [key=2, style=dotted];
m8_44 -> m8_42  [key=0, style=bold, color=blue];
m8_47 -> m8_48  [key=0, style=solid];
m8_47 -> m8_45  [key=2, style=dotted];
m8_48 -> m8_46  [key=0, style=bold, color=blue];
m8_50 -> m8_51  [key=0, style=solid];
m8_50 -> m8_45  [key=2, style=dotted];
m8_51 -> m8_49  [key=0, style=bold, color=blue];
m8_53 -> m8_54  [key=0, style=solid];
m8_53 -> m8_9  [key=2, style=dotted];
m8_54 -> m8_52  [key=0, style=bold, color=blue];
m8_57 -> m8_55  [key=0, style=bold, color=blue];
m8_67 -> m8_68  [key=0, style=solid];
m8_67 -> m8_37  [key=2, style=dotted];
m8_67 -> m8_69  [key=2, style=dotted];
m8_67 -> m8_70  [key=2, style=dotted];
m8_67 -> m8_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_66 -> m8_67  [key=0, style=solid];
m8_66 -> m8_72  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_74 -> m8_75  [key=0, style=solid];
m8_78 -> m8_79  [key=0, style=solid];
m8_78 -> m8_80  [key=2, style=dotted];
m8_78 -> m8_81  [key=2, style=dotted];
m8_78 -> m8_82  [key=2, style=dotted];
m8_78 -> m8_83  [key=2, style=dotted];
m8_78 -> m8_84  [key=2, style=dotted];
m8_78 -> m8_85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_78 -> m8_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_77 -> m8_78  [key=0, style=solid];
m8_77 -> m8_86  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_77 -> m8_89  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m8_95 -> m8_96  [key=0, style=solid];
m8_72 -> m8_73  [key=0, style=solid];
m8_72 -> m8_69  [key=2, style=dotted];
m8_68 -> m8_66  [key=0, style=bold, color=blue];
m8_71 -> m8_72  [key=0, style=solid];
m8_73 -> m8_71  [key=0, style=bold, color=blue];
m8_75 -> m8_76  [key=0, style=solid];
m8_76 -> m8_74  [key=0, style=bold, color=blue];
m8_86 -> m8_87  [key=0, style=solid];
m8_89 -> m8_90  [key=0, style=solid];
m8_89 -> m8_91  [key=2, style=dotted];
m8_89 -> m8_40  [key=2, style=dotted];
m8_89 -> m8_92  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_79 -> m8_77  [key=0, style=bold, color=blue];
m8_85 -> m8_86  [key=0, style=solid];
m8_88 -> m8_89  [key=0, style=solid];
m8_87 -> m8_85  [key=0, style=bold, color=blue];
m8_90 -> m8_88  [key=0, style=bold, color=blue];
m8_93 -> m8_94  [key=0, style=solid];
m8_93 -> m8_9  [key=2, style=dotted];
m8_94 -> m8_92  [key=0, style=bold, color=blue];
m8_96 -> m8_97  [key=0, style=solid];
m8_97 -> m8_95  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_3  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m8_0 -> m8_4  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, bool>"];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_7  [key=2, style=dotted];
m8_1 -> m8_20  [key=1, style=dashed, color=darkseagreen4, label=errors];
m8_1 -> m8_5  [key=1, style=dashed, color=darkseagreen4, label=errors];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_8  [key=2, style=dotted];
m8_3 -> m8_9  [key=2, style=dotted];
m8_3 -> m8_10  [key=2, style=dotted];
m8_3 -> m8_11  [key=2, style=dotted];
m8_3 -> m8_12  [key=2, style=dotted];
m8_3 -> m8_3  [key=1, style=dashed, color=darkseagreen4, label=arg];
m8_3 -> m8_5  [key=1, style=dashed, color=darkseagreen4, label=tokens];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_13  [key=2, style=dotted];
m8_4 -> m8_14  [key=2, style=dotted];
m8_4 -> m8_12  [key=2, style=dotted];
m8_4 -> m8_4  [key=1, style=dashed, color=darkseagreen4, label=t];
m8_4 -> m8_25  [key=1, style=dashed, color=darkseagreen4, label=unkTokens];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_20  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_15  [key=2, style=dotted];
m8_5 -> m8_16  [key=2, style=dotted];
m8_5 -> m8_17  [key=2, style=dotted];
m8_5 -> m8_18  [key=2, style=dotted];
m8_5 -> m8_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_5 -> m8_5  [key=1, style=dashed, color=darkseagreen4, label=t];
m8_6 -> m8_0  [key=0, style=bold, color=blue];
m8_28 -> m8_29  [key=0, style=solid];
m8_28 -> m8_30  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m8_28 -> m8_31  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m8_28 -> m8_33  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m8_29 -> m8_30  [key=0, style=solid];
m8_29 -> m8_33  [key=0, style=solid];
m8_29 -> m8_35  [key=2, style=dotted];
m8_29 -> m8_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_36  [key=2, style=dotted];
m8_30 -> m8_37  [key=2, style=dotted];
m8_30 -> m8_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_30 -> m8_32  [key=1, style=dashed, color=darkseagreen4, label=tokenizerResult];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_38  [key=2, style=dotted];
m8_31 -> m8_39  [key=2, style=dotted];
m8_31 -> m8_40  [key=2, style=dotted];
m8_31 -> m8_49  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_31 -> m8_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_31 -> m8_56  [key=1, style=dashed, color=darkseagreen4, label=values];
m8_33 -> m8_34  [key=0, style=solid];
m8_33 -> m8_37  [key=2, style=dotted];
m8_32 -> m8_34  [key=0, style=solid];
m8_32 -> m8_41  [key=2, style=dotted];
m8_32 -> m8_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_34 -> m8_28  [key=0, style=bold, color=blue];
m8_140 -> m8_20  [key=1, style=dashed, color=darkseagreen4, label=errors];
m8_141 -> m8_25  [key=1, style=dashed, color=darkseagreen4, label=unkTokens];
m8_142 -> m8_56  [key=1, style=dashed, color=darkseagreen4, label=values];
m8_143 -> m8_67  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, CommandLine.Infrastructure.Maybe<char>>"];
m8_144 -> m8_72  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_145 -> m8_78  [key=1, style=dashed, color=darkseagreen4, label=replaces];
m8_146 -> m8_86  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_147 -> m8_89  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m9_30 -> m9_32  [key=0, style=solid];
m9_32 -> m9_33  [key=0, style=solid];
m9_33 -> m9_30  [key=0, style=bold, color=blue];
m9_4 -> m9_5  [key=0, style=solid];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_3  [key=2, style=dotted];
m9_6 -> m9_4  [key=0, style=bold, color=blue];
m9_3 -> m9_14  [key=0, style=solid];
m9_3 -> m9_15  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_14 -> m9_15  [key=0, style=solid];
m9_14 -> m9_17  [key=2, style=dotted];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_18  [key=2, style=dotted];
m9_15 -> m9_19  [key=2, style=dotted];
m9_15 -> m9_15  [key=3, color=darkorchid, style=bold, label="Local variable string calculatedDescription"];
m9_16 -> m9_3  [key=0, style=bold, color=blue];
m9_11 -> m9_12  [key=0, style=solid];
m9_12 -> m9_13  [key=0, style=solid];
m9_12 -> m9_10  [key=2, style=dotted];
m9_13 -> m9_11  [key=0, style=bold, color=blue];
m9_19 -> m9_28  [key=0, style=solid];
m9_28 -> m9_29  [key=0, style=solid];
m9_28 -> m9_30  [key=2, style=dotted];
m9_28 -> m9_27  [key=2, style=dotted];
m9_28 -> m9_31  [key=2, style=dotted];
m9_29 -> m9_19  [key=0, style=bold, color=blue];
m9_10 -> m9_20  [key=0, style=solid];
m9_10 -> m9_21  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_20 -> m9_21  [key=0, style=solid];
m9_20 -> m9_23  [key=2, style=dotted];
m9_21 -> m9_22  [key=0, style=solid];
m9_21 -> m9_18  [key=2, style=dotted];
m9_21 -> m9_19  [key=2, style=dotted];
m9_22 -> m9_10  [key=0, style=bold, color=blue];
m9_18 -> m9_24  [key=0, style=solid];
m9_24 -> m9_25  [key=0, style=solid];
m9_24 -> m9_26  [key=2, style=dotted];
m9_24 -> m9_27  [key=2, style=dotted];
m9_25 -> m9_18  [key=0, style=bold, color=blue];
m9_26 -> m9_34  [key=0, style=solid];
m9_34 -> m9_35  [key=0, style=solid];
m9_35 -> m9_26  [key=0, style=bold, color=blue];
m9_7 -> m9_8  [key=0, style=solid];
m9_8 -> m9_9  [key=0, style=solid];
m9_8 -> m9_10  [key=2, style=dotted];
m9_9 -> m9_7  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_3  [key=2, style=dotted];
m9_2 -> m9_0  [key=0, style=bold, color=blue];
m9_36 -> m9_1  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.Formatters.DefaultFormatter"];
m9_36 -> m9_5  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.Formatters.DefaultFormatter"];
m9_36 -> m9_8  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.Formatters.DefaultFormatter"];
m9_36 -> m9_12  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.Formatters.DefaultFormatter"];
m9_36 -> m9_15  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.Formatters.DefaultFormatter"];
m9_36 -> m9_21  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.Formatters.DefaultFormatter"];
m9_36 -> m9_24  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.Formatters.DefaultFormatter"];
m9_36 -> m9_28  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.Formatters.DefaultFormatter"];
m10_5 -> m10_6  [key=0, style=solid];
m10_5 -> m10_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_6 -> m10_7  [key=0, style=solid];
m10_6 -> m10_3  [key=2, style=dotted];
m10_6 -> m10_4  [key=2, style=dotted];
m10_7 -> m10_8  [key=0, style=solid];
m10_7 -> m10_3  [key=2, style=dotted];
m10_7 -> m10_4  [key=2, style=dotted];
m10_8 -> m10_5  [key=0, style=bold, color=blue];
m10_21 -> m10_22  [key=0, style=solid];
m10_22 -> m10_23  [key=0, style=solid];
m10_22 -> m10_24  [key=2, style=dotted];
m10_22 -> m10_4  [key=2, style=dotted];
m10_23 -> m10_21  [key=0, style=bold, color=blue];
m10_33 -> m10_34  [key=0, style=solid];
m10_34 -> m10_35  [key=0, style=solid];
m10_34 -> m10_36  [key=2, style=dotted];
m10_34 -> m10_4  [key=2, style=dotted];
m10_35 -> m10_33  [key=0, style=bold, color=blue];
m10_41 -> m10_42  [key=0, style=solid];
m10_41 -> m10_43  [key=0, style=bold, color=crimson];
m10_41 -> m10_44  [key=0, style=bold, color=crimson];
m10_41 -> m10_45  [key=0, style=bold, color=crimson];
m10_41 -> m10_46  [key=0, style=bold, color=crimson];
m10_41 -> m10_47  [key=0, style=bold, color=crimson];
m10_41 -> m10_48  [key=0, style=bold, color=crimson];
m10_41 -> m10_49  [key=0, style=bold, color=crimson];
m10_41 -> m10_50  [key=0, style=bold, color=crimson];
m10_41 -> m10_51  [key=0, style=bold, color=crimson];
m10_41 -> m10_52  [key=0, style=bold, color=crimson];
m10_41 -> m10_53  [key=0, style=bold, color=crimson];
m10_41 -> m10_54  [key=0, style=bold, color=crimson];
m10_41 -> m10_55  [key=0, style=bold, color=crimson];
m10_41 -> m10_56  [key=0, style=bold, color=crimson];
m10_41 -> m10_57  [key=0, style=bold, color=crimson];
m10_41 -> m10_58  [key=0, style=bold, color=crimson];
m10_41 -> m10_59  [key=0, style=bold, color=crimson];
m10_41 -> m10_60  [key=0, style=bold, color=crimson];
m10_41 -> m10_61  [key=0, style=bold, color=crimson];
m10_41 -> m10_62  [key=0, style=bold, color=crimson];
m10_41 -> m10_63  [key=0, style=bold, color=crimson];
m10_41 -> m10_64  [key=0, style=bold, color=crimson];
m10_41 -> m10_65  [key=0, style=bold, color=crimson];
m10_41 -> m10_66  [key=0, style=bold, color=crimson];
m10_41 -> m10_67  [key=0, style=bold, color=crimson];
m10_41 -> m10_68  [key=0, style=bold, color=crimson];
m10_41 -> m10_69  [key=0, style=bold, color=crimson];
m10_41 -> m10_70  [key=0, style=bold, color=crimson];
m10_41 -> m10_71  [key=0, style=bold, color=crimson];
m10_41 -> m10_72  [key=0, style=bold, color=crimson];
m10_41 -> m10_73  [key=0, style=bold, color=crimson];
m10_41 -> m10_74  [key=0, style=bold, color=crimson];
m10_41 -> m10_75  [key=0, style=bold, color=crimson];
m10_41 -> m10_76  [key=0, style=bold, color=crimson];
m10_41 -> m10_77  [key=0, style=bold, color=crimson];
m10_41 -> m10_78  [key=0, style=bold, color=crimson];
m10_41 -> m10_79  [key=0, style=bold, color=crimson];
m10_41 -> m10_80  [key=0, style=bold, color=crimson];
m10_41 -> m10_81  [key=0, style=bold, color=crimson];
m10_41 -> m10_82  [key=0, style=bold, color=crimson];
m10_41 -> m10_83  [key=0, style=bold, color=crimson];
m10_41 -> m10_84  [key=0, style=bold, color=crimson];
m10_41 -> m10_85  [key=0, style=bold, color=crimson];
m10_41 -> m10_86  [key=0, style=bold, color=crimson];
m10_41 -> m10_87  [key=0, style=bold, color=crimson];
m10_41 -> m10_88  [key=0, style=bold, color=crimson];
m10_41 -> m10_89  [key=0, style=bold, color=crimson];
m10_41 -> m10_90  [key=0, style=bold, color=crimson];
m10_41 -> m10_91  [key=0, style=bold, color=crimson];
m10_41 -> m10_92  [key=0, style=bold, color=crimson];
m10_41 -> m10_93  [key=0, style=bold, color=crimson];
m10_41 -> m10_94  [key=0, style=bold, color=crimson];
m10_41 -> m10_95  [key=0, style=bold, color=crimson];
m10_41 -> m10_96  [key=0, style=bold, color=crimson];
m10_41 -> m10_97  [key=0, style=bold, color=crimson];
m10_41 -> m10_98  [key=0, style=bold, color=crimson];
m10_41 -> m10_99  [key=0, style=bold, color=crimson];
m10_41 -> m10_100  [key=0, style=bold, color=crimson];
m10_41 -> m10_101  [key=0, style=bold, color=crimson];
m10_41 -> m10_102  [key=0, style=bold, color=crimson];
m10_41 -> m10_103  [key=0, style=bold, color=crimson];
m10_41 -> m10_104  [key=0, style=bold, color=crimson];
m10_41 -> m10_105  [key=0, style=bold, color=crimson];
m10_41 -> m10_106  [key=0, style=bold, color=crimson];
m10_41 -> m10_107  [key=0, style=bold, color=crimson];
m10_41 -> m10_108  [key=0, style=bold, color=crimson];
m10_41 -> m10_109  [key=0, style=bold, color=crimson];
m10_41 -> m10_110  [key=0, style=bold, color=crimson];
m10_41 -> m10_111  [key=0, style=bold, color=crimson];
m10_41 -> m10_112  [key=0, style=bold, color=crimson];
m10_41 -> m10_113  [key=0, style=bold, color=crimson];
m10_41 -> m10_114  [key=0, style=bold, color=crimson];
m10_41 -> m10_115  [key=0, style=bold, color=crimson];
m10_41 -> m10_116  [key=0, style=bold, color=crimson];
m10_41 -> m10_117  [key=0, style=bold, color=crimson];
m10_41 -> m10_118  [key=0, style=bold, color=crimson];
m10_41 -> m10_119  [key=0, style=bold, color=crimson];
m10_41 -> m10_120  [key=0, style=bold, color=crimson];
m10_41 -> m10_121  [key=0, style=bold, color=crimson];
m10_41 -> m10_122  [key=0, style=bold, color=crimson];
m10_41 -> m10_123  [key=0, style=bold, color=crimson];
m10_41 -> m10_124  [key=0, style=bold, color=crimson];
m10_41 -> m10_125  [key=0, style=bold, color=crimson];
m10_41 -> m10_126  [key=0, style=bold, color=crimson];
m10_42 -> m10_43  [key=0, style=solid];
m10_43 -> m10_44  [key=0, style=solid];
m10_44 -> m10_45  [key=0, style=solid];
m10_45 -> m10_46  [key=0, style=solid];
m10_46 -> m10_47  [key=0, style=solid];
m10_47 -> m10_48  [key=0, style=solid];
m10_48 -> m10_49  [key=0, style=solid];
m10_49 -> m10_50  [key=0, style=solid];
m10_50 -> m10_51  [key=0, style=solid];
m10_51 -> m10_52  [key=0, style=solid];
m10_52 -> m10_53  [key=0, style=solid];
m10_53 -> m10_54  [key=0, style=solid];
m10_54 -> m10_55  [key=0, style=solid];
m10_55 -> m10_56  [key=0, style=solid];
m10_56 -> m10_57  [key=0, style=solid];
m10_57 -> m10_58  [key=0, style=solid];
m10_58 -> m10_59  [key=0, style=solid];
m10_59 -> m10_60  [key=0, style=solid];
m10_60 -> m10_61  [key=0, style=solid];
m10_61 -> m10_62  [key=0, style=solid];
m10_62 -> m10_63  [key=0, style=solid];
m10_63 -> m10_64  [key=0, style=solid];
m10_64 -> m10_65  [key=0, style=solid];
m10_65 -> m10_66  [key=0, style=solid];
m10_66 -> m10_67  [key=0, style=solid];
m10_67 -> m10_68  [key=0, style=solid];
m10_68 -> m10_69  [key=0, style=solid];
m10_69 -> m10_70  [key=0, style=solid];
m10_70 -> m10_71  [key=0, style=solid];
m10_71 -> m10_72  [key=0, style=solid];
m10_72 -> m10_73  [key=0, style=solid];
m10_73 -> m10_74  [key=0, style=solid];
m10_74 -> m10_75  [key=0, style=solid];
m10_75 -> m10_76  [key=0, style=solid];
m10_76 -> m10_77  [key=0, style=solid];
m10_77 -> m10_78  [key=0, style=solid];
m10_78 -> m10_79  [key=0, style=solid];
m10_79 -> m10_80  [key=0, style=solid];
m10_80 -> m10_81  [key=0, style=solid];
m10_81 -> m10_82  [key=0, style=solid];
m10_82 -> m10_83  [key=0, style=solid];
m10_83 -> m10_84  [key=0, style=solid];
m10_84 -> m10_85  [key=0, style=solid];
m10_85 -> m10_86  [key=0, style=solid];
m10_86 -> m10_87  [key=0, style=solid];
m10_87 -> m10_88  [key=0, style=solid];
m10_88 -> m10_89  [key=0, style=solid];
m10_89 -> m10_90  [key=0, style=solid];
m10_90 -> m10_91  [key=0, style=solid];
m10_91 -> m10_92  [key=0, style=solid];
m10_92 -> m10_93  [key=0, style=solid];
m10_93 -> m10_94  [key=0, style=solid];
m10_94 -> m10_95  [key=0, style=solid];
m10_95 -> m10_96  [key=0, style=solid];
m10_96 -> m10_97  [key=0, style=solid];
m10_97 -> m10_98  [key=0, style=solid];
m10_98 -> m10_99  [key=0, style=solid];
m10_99 -> m10_100  [key=0, style=solid];
m10_100 -> m10_101  [key=0, style=solid];
m10_101 -> m10_102  [key=0, style=solid];
m10_102 -> m10_103  [key=0, style=solid];
m10_103 -> m10_104  [key=0, style=solid];
m10_104 -> m10_105  [key=0, style=solid];
m10_105 -> m10_106  [key=0, style=solid];
m10_106 -> m10_107  [key=0, style=solid];
m10_107 -> m10_108  [key=0, style=solid];
m10_108 -> m10_109  [key=0, style=solid];
m10_109 -> m10_110  [key=0, style=solid];
m10_110 -> m10_111  [key=0, style=solid];
m10_111 -> m10_112  [key=0, style=solid];
m10_112 -> m10_113  [key=0, style=solid];
m10_113 -> m10_114  [key=0, style=solid];
m10_114 -> m10_115  [key=0, style=solid];
m10_115 -> m10_116  [key=0, style=solid];
m10_116 -> m10_117  [key=0, style=solid];
m10_117 -> m10_118  [key=0, style=solid];
m10_118 -> m10_119  [key=0, style=solid];
m10_119 -> m10_120  [key=0, style=solid];
m10_120 -> m10_121  [key=0, style=solid];
m10_121 -> m10_122  [key=0, style=solid];
m10_122 -> m10_123  [key=0, style=solid];
m10_123 -> m10_124  [key=0, style=solid];
m10_124 -> m10_125  [key=0, style=solid];
m10_125 -> m10_126  [key=0, style=solid];
m10_126 -> m10_127  [key=0, style=solid];
m10_127 -> m10_41  [key=0, style=bold, color=blue];
m10_13 -> m10_14  [key=0, style=solid];
m10_13 -> m10_15  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_14 -> m10_15  [key=0, style=solid];
m10_14 -> m10_12  [key=2, style=dotted];
m10_14 -> m10_4  [key=2, style=dotted];
m10_15 -> m10_16  [key=0, style=solid];
m10_15 -> m10_12  [key=2, style=dotted];
m10_15 -> m10_4  [key=2, style=dotted];
m10_16 -> m10_13  [key=0, style=bold, color=blue];
m10_37 -> m10_38  [key=0, style=solid];
m10_38 -> m10_39  [key=0, style=solid];
m10_38 -> m10_40  [key=2, style=dotted];
m10_38 -> m10_4  [key=2, style=dotted];
m10_39 -> m10_37  [key=0, style=bold, color=blue];
m10_17 -> m10_18  [key=0, style=solid];
m10_18 -> m10_19  [key=0, style=solid];
m10_18 -> m10_20  [key=2, style=dotted];
m10_18 -> m10_4  [key=2, style=dotted];
m10_19 -> m10_17  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_3  [key=2, style=dotted];
m10_1 -> m10_4  [key=2, style=dotted];
m10_2 -> m10_0  [key=0, style=bold, color=blue];
m10_9 -> m10_10  [key=0, style=solid];
m10_10 -> m10_11  [key=0, style=solid];
m10_10 -> m10_12  [key=2, style=dotted];
m10_10 -> m10_4  [key=2, style=dotted];
m10_11 -> m10_9  [key=0, style=bold, color=blue];
m10_29 -> m10_30  [key=0, style=solid];
m10_30 -> m10_31  [key=0, style=solid];
m10_30 -> m10_32  [key=2, style=dotted];
m10_30 -> m10_4  [key=2, style=dotted];
m10_31 -> m10_29  [key=0, style=bold, color=blue];
m10_25 -> m10_26  [key=0, style=solid];
m10_26 -> m10_27  [key=0, style=solid];
m10_26 -> m10_28  [key=2, style=dotted];
m10_26 -> m10_4  [key=2, style=dotted];
m10_27 -> m10_25  [key=0, style=bold, color=blue];
m10_128 -> m10_129  [key=0, style=solid];
m10_128 -> m10_41  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator"];
m10_129 -> m10_130  [key=0, style=solid];
m10_129 -> m10_41  [key=2, style=dotted];
m10_130 -> m10_128  [key=0, style=bold, color=blue];
m10_131 -> m10_129  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.PluralTestSource"];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_0  [key=0, style=bold, color=blue];
m11_2 -> m11_3  [key=0, style=solid];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_5  [key=2, style=dotted];
m11_3 -> m11_6  [key=2, style=dotted];
m11_4 -> m11_2  [key=0, style=bold, color=blue];
m12_7 -> m12_8  [key=0, style=solid];
m12_8 -> m12_9  [key=0, style=solid];
m12_8 -> m12_10  [key=2, style=dotted];
m12_8 -> m12_6  [key=2, style=dotted];
m12_9 -> m12_7  [key=0, style=bold, color=blue];
m12_2 -> m12_3  [key=0, style=solid];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_5  [key=2, style=dotted];
m12_3 -> m12_6  [key=2, style=dotted];
m12_4 -> m12_2  [key=0, style=bold, color=blue];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_0  [key=0, style=bold, color=blue];
m13_22 -> m13_23  [key=0, style=solid];
m13_23 -> m13_24  [key=0, style=solid];
m13_23 -> m13_18  [key=2, style=dotted];
m13_23 -> m13_6  [key=2, style=dotted];
m13_24 -> m13_22  [key=0, style=bold, color=blue];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_0  [key=0, style=bold, color=blue];
m13_11 -> m13_12  [key=0, style=solid];
m13_12 -> m13_13  [key=0, style=solid];
m13_12 -> m13_14  [key=2, style=dotted];
m13_12 -> m13_6  [key=2, style=dotted];
m13_13 -> m13_11  [key=0, style=bold, color=blue];
m13_7 -> m13_8  [key=0, style=solid];
m13_8 -> m13_9  [key=0, style=solid];
m13_8 -> m13_10  [key=2, style=dotted];
m13_8 -> m13_6  [key=2, style=dotted];
m13_9 -> m13_7  [key=0, style=bold, color=blue];
m13_2 -> m13_3  [key=0, style=solid];
m13_3 -> m13_4  [key=0, style=solid];
m13_3 -> m13_5  [key=2, style=dotted];
m13_3 -> m13_6  [key=2, style=dotted];
m13_4 -> m13_2  [key=0, style=bold, color=blue];
m13_15 -> m13_16  [key=0, style=solid];
m13_16 -> m13_17  [key=0, style=solid];
m13_16 -> m13_18  [key=2, style=dotted];
m13_16 -> m13_6  [key=2, style=dotted];
m13_17 -> m13_15  [key=0, style=bold, color=blue];
m13_19 -> m13_20  [key=0, style=solid];
m13_20 -> m13_21  [key=0, style=solid];
m13_20 -> m13_14  [key=2, style=dotted];
m13_20 -> m13_6  [key=2, style=dotted];
m13_21 -> m13_19  [key=0, style=bold, color=blue];
m14_2 -> m14_3  [key=0, style=solid];
m14_3 -> m14_4  [key=0, style=solid];
m14_3 -> m14_5  [key=2, style=dotted];
m14_3 -> m14_6  [key=2, style=dotted];
m14_4 -> m14_2  [key=0, style=bold, color=blue];
m14_14 -> m14_15  [key=0, style=solid];
m14_15 -> m14_16  [key=0, style=solid];
m14_15 -> m14_13  [key=2, style=dotted];
m14_15 -> m14_6  [key=2, style=dotted];
m14_16 -> m14_14  [key=0, style=bold, color=blue];
m14_10 -> m14_11  [key=0, style=solid];
m14_11 -> m14_12  [key=0, style=solid];
m14_11 -> m14_13  [key=2, style=dotted];
m14_11 -> m14_6  [key=2, style=dotted];
m14_12 -> m14_10  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_0  [key=0, style=bold, color=blue];
m14_7 -> m14_8  [key=0, style=solid];
m14_8 -> m14_9  [key=0, style=solid];
m14_8 -> m14_5  [key=2, style=dotted];
m14_8 -> m14_6  [key=2, style=dotted];
m14_9 -> m14_7  [key=0, style=bold, color=blue];
m15_2 -> m15_3  [key=0, style=solid];
m15_3 -> m15_2  [key=0, style=bold, color=blue];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_0  [key=0, style=bold, color=blue];
m15_6 -> m15_7  [key=0, style=solid];
m15_6 -> m15_6  [key=3, color=green, style=bold, label="Field variable int NumberOfRomanNumeralMaps"];
m15_7 -> m15_6  [key=0, style=bold, color=blue];
m15_4 -> m15_5  [key=0, style=solid];
m15_5 -> m15_4  [key=0, style=bold, color=blue];
m16_4 -> m16_5  [key=0, style=solid];
m16_5 -> m16_6  [key=0, style=solid];
m16_5 -> m16_3  [key=2, style=dotted];
m16_6 -> m16_4  [key=0, style=bold, color=blue];
m16_12 -> m16_13  [key=0, style=solid];
m16_13 -> m16_14  [key=0, style=solid];
m16_13 -> m16_10  [key=2, style=dotted];
m16_13 -> m16_11  [key=2, style=dotted];
m16_14 -> m16_12  [key=0, style=bold, color=blue];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_2  [key=0, style=solid];
m16_1 -> m16_3  [key=2, style=dotted];
m16_2 -> m16_0  [key=0, style=bold, color=blue];
m16_7 -> m16_8  [key=0, style=solid];
m16_8 -> m16_9  [key=0, style=solid];
m16_8 -> m16_10  [key=2, style=dotted];
m16_8 -> m16_11  [key=2, style=dotted];
m16_9 -> m16_7  [key=0, style=bold, color=blue];
m17_0 -> m17_1  [key=0, style=solid];
m17_1 -> m17_2  [key=0, style=solid];
m17_1 -> m17_3  [key=2, style=dotted];
m17_1 -> m17_4  [key=2, style=dotted];
m17_2 -> m17_0  [key=0, style=bold, color=blue];
m17_5 -> m17_6  [key=0, style=solid];
m17_6 -> m17_7  [key=0, style=solid];
m17_6 -> m17_8  [key=2, style=dotted];
m17_6 -> m17_4  [key=2, style=dotted];
m17_7 -> m17_5  [key=0, style=bold, color=blue];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_2  [key=0, style=solid];
m18_1 -> m18_3  [key=2, style=dotted];
m18_1 -> m18_4  [key=2, style=dotted];
m18_2 -> m18_0  [key=0, style=bold, color=blue];
m19_0 -> m19_1  [key=0, style=solid];
m19_0 -> m19_3  [key=3, color=darkorchid, style=bold, label="method methodReturn string Convert"];
m19_1 -> m19_2  [key=0, style=solid];
m19_1 -> m19_3  [key=2, style=dotted];
m19_2 -> m19_0  [key=0, style=bold, color=blue];
m19_3 -> m19_4  [key=0, style=solid];
m19_3 -> m19_6  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.GrammaticalGender"];
m19_3 -> m19_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_3 -> m19_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_3 -> m19_0  [key=3, color=darkorchid, style=bold, label="Parameter variable string numberString"];
m19_3 -> m19_1  [key=3, color=darkorchid, style=bold, label="Parameter variable Humanizer.GrammaticalGender gender"];
m19_3 -> m19_5  [key=3, color=darkorchid, style=bold, label="method methodReturn string Convert"];
m19_3 -> m19_3  [key=3, color=darkorchid, style=bold, label="Field variable string Format"];
m19_4 -> m19_5  [key=0, style=solid];
m19_4 -> m19_6  [key=0, style=solid];
m19_6 -> m19_7  [key=0, style=solid];
m19_6 -> m19_8  [key=0, style=solid];
m19_7 -> m19_9  [key=0, style=solid];
m19_8 -> m19_9  [key=0, style=solid];
m19_5 -> m19_9  [key=0, style=solid];
m19_9 -> m19_3  [key=0, style=bold, color=blue];
m19_10 -> m19_1  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.Ordinalizers.SpanishOrdinalizer"];
m20_2 -> m20_3  [key=0, style=solid];
m20_3 -> m20_2  [key=0, style=bold, color=blue];
m20_0 -> m20_1  [key=0, style=solid];
m20_1 -> m20_0  [key=0, style=bold, color=blue];
m20_6 -> m20_7  [key=0, style=solid];
m20_7 -> m20_6  [key=0, style=bold, color=blue];
m20_4 -> m20_5  [key=0, style=solid];
m20_5 -> m20_4  [key=0, style=bold, color=blue];
m21_29 -> m21_30  [key=0, style=solid];
m21_29 -> m21_31  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_30 -> m21_31  [key=0, style=solid];
m21_30 -> m21_28  [key=2, style=dotted];
m21_30 -> m21_7  [key=2, style=dotted];
m21_31 -> m21_32  [key=0, style=solid];
m21_31 -> m21_8  [key=2, style=dotted];
m21_32 -> m21_29  [key=0, style=bold, color=blue];
m21_19 -> m21_20  [key=0, style=solid];
m21_19 -> m21_21  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_20 -> m21_21  [key=0, style=solid];
m21_20 -> m21_23  [key=2, style=dotted];
m21_20 -> m21_7  [key=2, style=dotted];
m21_21 -> m21_22  [key=0, style=solid];
m21_21 -> m21_8  [key=2, style=dotted];
m21_22 -> m21_19  [key=0, style=bold, color=blue];
m21_2 -> m21_3  [key=0, style=solid];
m21_2 -> m21_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_3 -> m21_4  [key=0, style=solid];
m21_3 -> m21_6  [key=2, style=dotted];
m21_3 -> m21_7  [key=2, style=dotted];
m21_4 -> m21_5  [key=0, style=solid];
m21_4 -> m21_8  [key=2, style=dotted];
m21_5 -> m21_2  [key=0, style=bold, color=blue];
m21_9 -> m21_10  [key=0, style=solid];
m21_9 -> m21_11  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_10 -> m21_11  [key=0, style=solid];
m21_10 -> m21_13  [key=2, style=dotted];
m21_10 -> m21_7  [key=2, style=dotted];
m21_11 -> m21_12  [key=0, style=solid];
m21_11 -> m21_8  [key=2, style=dotted];
m21_12 -> m21_9  [key=0, style=bold, color=blue];
m21_14 -> m21_15  [key=0, style=solid];
m21_14 -> m21_16  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_15 -> m21_16  [key=0, style=solid];
m21_15 -> m21_18  [key=2, style=dotted];
m21_15 -> m21_7  [key=2, style=dotted];
m21_16 -> m21_17  [key=0, style=solid];
m21_16 -> m21_8  [key=2, style=dotted];
m21_17 -> m21_14  [key=0, style=bold, color=blue];
m21_0 -> m21_1  [key=0, style=solid];
m21_1 -> m21_0  [key=0, style=bold, color=blue];
m21_24 -> m21_25  [key=0, style=solid];
m21_24 -> m21_26  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_25 -> m21_26  [key=0, style=solid];
m21_25 -> m21_28  [key=2, style=dotted];
m21_25 -> m21_7  [key=2, style=dotted];
m21_26 -> m21_27  [key=0, style=solid];
m21_26 -> m21_8  [key=2, style=dotted];
m21_27 -> m21_24  [key=0, style=bold, color=blue];
m23_7 -> m23_8  [key=0, style=solid];
m23_8 -> m23_9  [key=0, style=solid];
m23_8 -> m23_5  [key=2, style=dotted];
m23_8 -> m23_6  [key=2, style=dotted];
m23_9 -> m23_7  [key=0, style=bold, color=blue];
m23_2 -> m23_3  [key=0, style=solid];
m23_3 -> m23_4  [key=0, style=solid];
m23_3 -> m23_5  [key=2, style=dotted];
m23_3 -> m23_6  [key=2, style=dotted];
m23_4 -> m23_2  [key=0, style=bold, color=blue];
m23_0 -> m23_1  [key=0, style=solid];
m23_1 -> m23_0  [key=0, style=bold, color=blue];
m23_10 -> m23_11  [key=0, style=solid];
m23_11 -> m23_12  [key=0, style=solid];
m23_11 -> m23_5  [key=2, style=dotted];
m23_11 -> m23_6  [key=2, style=dotted];
m23_12 -> m23_10  [key=0, style=bold, color=blue];
m23_13 -> m23_14  [key=0, style=solid];
m23_14 -> m23_15  [key=0, style=solid];
m23_14 -> m23_5  [key=2, style=dotted];
m23_14 -> m23_6  [key=2, style=dotted];
m23_15 -> m23_13  [key=0, style=bold, color=blue];
m24_11 -> m24_12  [key=0, style=solid];
m24_12 -> m24_13  [key=0, style=solid];
m24_12 -> m24_3  [key=2, style=dotted];
m24_12 -> m24_4  [key=2, style=dotted];
m24_13 -> m24_11  [key=0, style=bold, color=blue];
m24_5 -> m24_6  [key=0, style=solid];
m24_6 -> m24_7  [key=0, style=solid];
m24_6 -> m24_3  [key=2, style=dotted];
m24_6 -> m24_4  [key=2, style=dotted];
m24_7 -> m24_5  [key=0, style=bold, color=blue];
m24_0 -> m24_1  [key=0, style=solid];
m24_1 -> m24_2  [key=0, style=solid];
m24_1 -> m24_3  [key=2, style=dotted];
m24_1 -> m24_4  [key=2, style=dotted];
m24_2 -> m24_0  [key=0, style=bold, color=blue];
m24_8 -> m24_9  [key=0, style=solid];
m24_9 -> m24_10  [key=0, style=solid];
m24_9 -> m24_3  [key=2, style=dotted];
m24_9 -> m24_4  [key=2, style=dotted];
m24_10 -> m24_8  [key=0, style=bold, color=blue];
m25_0 -> m25_1  [key=0, style=solid];
m25_1 -> m25_2  [key=0, style=solid];
m25_1 -> m25_4  [key=2, style=dotted];
m25_1 -> m25_5  [key=2, style=dotted];
m25_1 -> m25_1  [key=1, style=dashed, color=darkseagreen4, label=word];
m25_2 -> m25_3  [key=0, style=solid];
m25_2 -> m25_6  [key=2, style=dotted];
m25_3 -> m25_0  [key=0, style=bold, color=blue];
}
