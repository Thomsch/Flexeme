digraph  {
n9 [label="Humanizer.Tests.AmbientCulture", span=""];
n0 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", label="Entry Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", span="10-10"];
n1 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", label="_culture = Thread.CurrentThread.CurrentUICulture", span="12-12"];
n2 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", label="Thread.CurrentThread.CurrentUICulture = culture", span="13-13"];
n3 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", label="Exit Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", span="10-10"];
n4 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(string)", label="Entry Humanizer.Tests.AmbientCulture.AmbientCulture(string)", span="16-16"];
n5 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(string)", label="Exit Humanizer.Tests.AmbientCulture.AmbientCulture(string)", span="16-16"];
n6 [cluster="Humanizer.Tests.AmbientCulture.Dispose()", label="Entry Humanizer.Tests.AmbientCulture.Dispose()", span="21-21"];
n7 [cluster="Humanizer.Tests.AmbientCulture.Dispose()", label="Thread.CurrentThread.CurrentUICulture = _culture", span="23-23"];
n8 [cluster="Humanizer.Tests.AmbientCulture.Dispose()", label="Exit Humanizer.Tests.AmbientCulture.Dispose()", span="21-21"];
d2 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", color=green, community=0, label="0: Thread.CurrentThread.CurrentCulture = culture", span="13-13"];
d1 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", label="_culture = Thread.CurrentThread.CurrentUICulture", span="12-12"];
d3 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", label="Thread.CurrentThread.CurrentUICulture = culture", span="14-14"];
m0_45 [cluster="Humanizer.Bytes.ByteSize.FromBits(long)", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromBits(long)", span="93-93"];
m0_18 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.Megabytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.Megabytes()", span="39-39"];
m0_19 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.Megabytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromMegabytes(2), (2.0).Megabytes())", span="41-41"];
m0_20 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.Megabytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.Megabytes()", span="39-39"];
m0_4 [cluster="double.Terabytes()", file="ByteSizeExtensionsTests.cs", label="Entry double.Terabytes()", span="75-75"];
m0_5 [cluster="Unk.Equal", file="ByteSizeExtensionsTests.cs", label="Entry Unk.Equal", span=""];
m0_21 [cluster="Humanizer.Bytes.ByteSize.FromMegabytes(double)", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromMegabytes(double)", span="108-108"];
m0_37 [cluster="Humanizer.Bytes.ByteSize.FromBytes(double)", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromBytes(double)", span="98-98"];
m0_31 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesKilobytes(double, string, string)", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesKilobytes(double, string, string)", span="63-63"];
m0_32 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesKilobytes(double, string, string)", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(expectedValue, input.Kilobytes().Humanize(format))", span="65-65"];
m0_33 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesKilobytes(double, string, string)", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesKilobytes(double, string, string)", span="63-63"];
m0_3 [cluster="Humanizer.Bytes.ByteSize.FromTerabytes(double)", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromTerabytes(double)", span="118-118"];
m0_30 [cluster="double.Kilobytes()", file="ByteSizeExtensionsTests.cs", label="Entry double.Kilobytes()", span="45-45"];
m0_15 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesGigabytes(double, string, string)", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesGigabytes(double, string, string)", span="33-33"];
m0_16 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesGigabytes(double, string, string)", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(expectedValue, input.Gigabytes().Humanize(format))", span="35-35"];
m0_17 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesGigabytes(double, string, string)", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesGigabytes(double, string, string)", span="33-33"];
m0_14 [cluster="double.Gigabytes()", file="ByteSizeExtensionsTests.cs", label="Entry double.Gigabytes()", span="65-65"];
m0_26 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.Kilobytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.Kilobytes()", span="54-54"];
m0_27 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.Kilobytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromKilobytes(2), (2.0).Kilobytes())", span="56-56"];
m0_28 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.Kilobytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.Kilobytes()", span="54-54"];
m0_47 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBits(long, string, string)", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBits(long, string, string)", span="93-93"];
m0_48 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBits(long, string, string)", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(expectedValue, input.Bits().Humanize(format))", span="95-95"];
m0_49 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBits(long, string, string)", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBits(long, string, string)", span="93-93"];
m0_13 [cluster="Humanizer.Bytes.ByteSize.FromGigabytes(double)", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromGigabytes(double)", span="113-113"];
m0_42 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.Bits()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.Bits()", span="84-84"];
m0_43 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.Bits()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromBits(2), (2).Bits())", span="86-86"];
m0_44 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.Bits()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.Bits()", span="84-84"];
m0_29 [cluster="Humanizer.Bytes.ByteSize.FromKilobytes(double)", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromKilobytes(double)", span="103-103"];
m0_9 [cluster="Humanizer.Bytes.ByteSize.Humanize(string)", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Bytes.ByteSize.Humanize(string)", span="86-86"];
m0_34 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.Bytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.Bytes()", span="69-69"];
m0_35 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.Bytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromBytes(2), (2.0).Bytes())", span="71-71"];
m0_36 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.Bytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.Bytes()", span="69-69"];
m0_39 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBytes(double, string, string)", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBytes(double, string, string)", span="78-78"];
m0_40 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBytes(double, string, string)", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(expectedValue, input.Bytes().Humanize(format))", span="80-80"];
m0_41 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBytes(double, string, string)", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBytes(double, string, string)", span="78-78"];
m0_38 [cluster="double.Bytes()", file="ByteSizeExtensionsTests.cs", label="Entry double.Bytes()", span="35-35"];
m0_0 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.Terabytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.Terabytes()", span="9-9"];
m0_1 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.Terabytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromTerabytes(2), (2.0).Terabytes())", span="11-11"];
m0_2 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.Terabytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.Terabytes()", span="9-9"];
m0_6 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesTerabytes(double, string, string)", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesTerabytes(double, string, string)", span="18-18"];
m0_7 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesTerabytes(double, string, string)", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(expectedValue, input.Terabytes().Humanize(format))", span="20-20"];
m0_8 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesTerabytes(double, string, string)", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesTerabytes(double, string, string)", span="18-18"];
m0_10 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.Gigabytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.Gigabytes()", span="24-24"];
m0_11 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.Gigabytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromGigabytes(2), (2.0).Gigabytes())", span="26-26"];
m0_12 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.Gigabytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.Gigabytes()", span="24-24"];
m0_46 [cluster="int.Bits()", file="ByteSizeExtensionsTests.cs", label="Entry int.Bits()", span="25-25"];
m0_23 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesMegabytes(double, string, string)", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesMegabytes(double, string, string)", span="48-48"];
m0_24 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesMegabytes(double, string, string)", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(expectedValue, input.Megabytes().Humanize(format))", span="50-50"];
m0_25 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesMegabytes(double, string, string)", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesMegabytes(double, string, string)", span="48-48"];
m0_22 [cluster="double.Megabytes()", file="ByteSizeExtensionsTests.cs", label="Entry double.Megabytes()", span="55-55"];
m0_50 [cluster="long.Bits()", file="ByteSizeExtensionsTests.cs", label="Entry long.Bits()", span="15-15"];
m1_51 [cluster="Humanizer.Bytes.ByteSize.FromBits(long)", file="ParsingTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromBits(long)", span="93-93"];
m1_5 [cluster="Unk.Equal", file="ParsingTests.cs", label="Entry Unk.Equal", span=""];
m1_26 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParseWorksWithLotsOfSpaces()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.TryParseWorksWithLotsOfSpaces()", span="45-45"];
m1_27 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParseWorksWithLotsOfSpaces()", file="ParsingTests.cs", label="Assert.Equal(ByteSize.FromKilobytes(100), ByteSize.Parse('' 100 KB ''))", span="47-47"];
m1_28 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParseWorksWithLotsOfSpaces()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.TryParseWorksWithLotsOfSpaces()", span="45-45"];
m1_12 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ParsingTests.cs", label="Entry Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", span="280-280"];
m1_17 [cluster="Humanizer.Bytes.ByteSize.FromMegabytes(double)", file="ParsingTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromMegabytes(double)", span="108-108"];
m1_55 [cluster="Humanizer.Bytes.ByteSize.FromBytes(double)", file="ParsingTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromBytes(double)", span="98-98"];
m1_32 [cluster="Unk.>", file="ParsingTests.cs", label="Entry Unk.>", span=""];
m1_18 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParseReturnsFalseOnBadValue(string)", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.TryParseReturnsFalseOnBadValue(string)", span="35-35"];
m1_19 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParseReturnsFalseOnBadValue(string)", file="ParsingTests.cs", label="ByteSize resultByteSize", span="37-37"];
m1_20 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParseReturnsFalseOnBadValue(string)", file="ParsingTests.cs", label="var resultBool = ByteSize.TryParse(input, out resultByteSize)", span="38-38"];
m1_21 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParseReturnsFalseOnBadValue(string)", file="ParsingTests.cs", label="Assert.False(resultBool)", span="40-40"];
m1_22 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParseReturnsFalseOnBadValue(string)", file="ParsingTests.cs", label="Assert.Equal(new ByteSize(), resultByteSize)", span="41-41"];
m1_23 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParseReturnsFalseOnBadValue(string)", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.TryParseReturnsFalseOnBadValue(string)", span="35-35"];
m1_24 [cluster="Unk.False", file="ParsingTests.cs", label="Entry Unk.False", span=""];
m1_48 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseBits()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseBits()", span="69-69"];
m1_49 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseBits()", file="ParsingTests.cs", label="Assert.Equal(ByteSize.FromBits(1), ByteSize.Parse(''1b''))", span="71-71"];
m1_50 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseBits()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseBits()", span="69-69"];
m1_42 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnNull()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnNull()", span="63-63"];
m1_43 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnNull()", file="ParsingTests.cs", label="Assert.Throws<ArgumentNullException>(() => { ByteSize.Parse(null); })", span="65-65"];
m1_44 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnNull()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnNull()", span="63-63"];
m1_4 [cluster="Humanizer.Bytes.ByteSize.Parse(string)", file="ParsingTests.cs", label="Entry Humanizer.Bytes.ByteSize.Parse(string)", span="354-354"];
m1_29 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnPartialBits()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnPartialBits()", span="51-51"];
m1_30 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnPartialBits()", file="ParsingTests.cs", label="Assert.Throws<FormatException>(() => { ByteSize.Parse(''10.5b''); })", span="53-53"];
m1_31 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnPartialBits()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnPartialBits()", span="51-51"];
m1_66 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseTerabytes()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseTerabytes()", span="99-99"];
m1_67 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseTerabytes()", file="ParsingTests.cs", label="Assert.Equal(ByteSize.FromTerabytes(100), ByteSize.Parse(''100TB''))", span="101-101"];
m1_68 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseTerabytes()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseTerabytes()", span="99-99"];
m1_69 [cluster="Humanizer.Bytes.ByteSize.FromTerabytes(double)", file="ParsingTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromTerabytes(double)", span="118-118"];
m1_36 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnInvalid()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnInvalid()", span="57-57"];
m1_37 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnInvalid()", file="ParsingTests.cs", label="Assert.Throws<FormatException>(() => { ByteSize.Parse(''Unexpected Value''); })", span="59-59"];
m1_38 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnInvalid()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnInvalid()", span="57-57"];
m1_59 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseMegabytes()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseMegabytes()", span="87-87"];
m1_60 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseMegabytes()", file="ParsingTests.cs", label="Assert.Equal(ByteSize.FromMegabytes(1000), ByteSize.Parse(''1000MB''))", span="89-89"];
m1_61 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseMegabytes()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseMegabytes()", span="87-87"];
m1_56 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseKilobytes()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseKilobytes()", span="81-81"];
m1_57 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseKilobytes()", file="ParsingTests.cs", label="Assert.Equal(ByteSize.FromKilobytes(1020), ByteSize.Parse(''1020KB''))", span="83-83"];
m1_58 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseKilobytes()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseKilobytes()", span="81-81"];
m1_65 [cluster="Humanizer.Bytes.ByteSize.FromGigabytes(double)", file="ParsingTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromGigabytes(double)", span="113-113"];
m1_3 [cluster="Humanizer.Bytes.ByteSize.FromKilobytes(double)", file="ParsingTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromKilobytes(double)", span="103-103"];
m1_0 [cluster="Humanizer.Tests.Bytes.ParsingTests.Parse()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.Parse()", span="10-10"];
m1_1 [cluster="Humanizer.Tests.Bytes.ParsingTests.Parse()", file="ParsingTests.cs", label="Assert.Equal(ByteSize.FromKilobytes(1020), ByteSize.Parse(''1020KB''))", span="12-12"];
m1_2 [cluster="Humanizer.Tests.Bytes.ParsingTests.Parse()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.Parse()", span="10-10"];
m1_45 [cluster="lambda expression", file="ParsingTests.cs", label="Entry lambda expression", span="65-65"];
m1_33 [cluster="lambda expression", file="ParsingTests.cs", label="Entry lambda expression", span="53-53"];
m1_34 [cluster="lambda expression", file="ParsingTests.cs", label="ByteSize.Parse(''10.5b'')", span="53-53"];
m1_35 [cluster="lambda expression", file="ParsingTests.cs", label="Exit lambda expression", span="53-53"];
m1_39 [cluster="lambda expression", file="ParsingTests.cs", label="Entry lambda expression", span="59-59"];
m1_40 [cluster="lambda expression", file="ParsingTests.cs", label="ByteSize.Parse(''Unexpected Value'')", span="59-59"];
m1_41 [cluster="lambda expression", file="ParsingTests.cs", label="Exit lambda expression", span="59-59"];
m1_46 [cluster="lambda expression", file="ParsingTests.cs", label="ByteSize.Parse(null)", span="65-65"];
m1_47 [cluster="lambda expression", file="ParsingTests.cs", label="Exit lambda expression", span="65-65"];
m1_62 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseGigabytes()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseGigabytes()", span="93-93"];
m1_63 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseGigabytes()", file="ParsingTests.cs", label="Assert.Equal(ByteSize.FromGigabytes(805), ByteSize.Parse(''805GB''))", span="95-95"];
m1_64 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseGigabytes()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseGigabytes()", span="93-93"];
m1_13 [cluster="Unk.True", file="ParsingTests.cs", label="Entry Unk.True", span=""];
m1_25 [cluster="Humanizer.Bytes.ByteSize.ByteSize()", file="ParsingTests.cs", label="Entry Humanizer.Bytes.ByteSize.ByteSize()", span="8-8"];
m1_52 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseBytes()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseBytes()", span="75-75"];
m1_53 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseBytes()", file="ParsingTests.cs", label="Assert.Equal(ByteSize.FromBytes(1), ByteSize.Parse(''1B''))", span="77-77"];
m1_54 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseBytes()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseBytes()", span="75-75"];
m1_6 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParse()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.TryParse()", span="16-16"];
m1_7 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParse()", file="ParsingTests.cs", label="ByteSize resultByteSize", span="18-18"];
m1_8 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParse()", file="ParsingTests.cs", label="var resultBool = ByteSize.TryParse(''1020KB'', out resultByteSize)", span="19-19"];
m1_9 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParse()", file="ParsingTests.cs", label="Assert.True(resultBool)", span="21-21"];
m1_10 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParse()", file="ParsingTests.cs", label="Assert.Equal(ByteSize.FromKilobytes(1020), resultByteSize)", span="22-22"];
m1_11 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParse()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.TryParse()", span="16-16"];
m1_14 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseDecimalMegabytes()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseDecimalMegabytes()", span="26-26"];
m1_15 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseDecimalMegabytes()", file="ParsingTests.cs", label="Assert.Equal(ByteSize.FromMegabytes(100.5), ByteSize.Parse(''100.5MB''))", span="28-28"];
m1_16 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseDecimalMegabytes()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseDecimalMegabytes()", span="26-26"];
m2_39 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsLargestMetricPrefixLargerThanZero()", file="ToStringTests.cs", label="Entry Humanizer.Tests.Bytes.ToStringTests.ReturnsLargestMetricPrefixLargerThanZero()", span="68-68"];
m2_40 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsLargestMetricPrefixLargerThanZero()", file="ToStringTests.cs", label="Assert.Equal(''512 KB'', ByteSize.FromMegabytes(.5).ToString(''#.#''))", span="70-70"];
m2_41 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsLargestMetricPrefixLargerThanZero()", file="ToStringTests.cs", label="Exit Humanizer.Tests.Bytes.ToStringTests.ReturnsLargestMetricPrefixLargerThanZero()", span="68-68"];
m2_16 [cluster="Humanizer.Bytes.ByteSize.FromBits(long)", file="ToStringTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromBits(long)", span="93-93"];
m2_4 [cluster="Humanizer.Bytes.ByteSize.ToString()", file="ToStringTests.cs", label="Entry Humanizer.Bytes.ByteSize.ToString()", span="129-129"];
m2_5 [cluster="Unk.Equal", file="ToStringTests.cs", label="Entry Unk.Equal", span=""];
m2_17 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsBytes()", file="ToStringTests.cs", label="Entry Humanizer.Tests.Bytes.ToStringTests.ReturnsBytes()", span="32-32"];
m2_18 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsBytes()", file="ToStringTests.cs", label="Assert.Equal(''10 B'', ByteSize.FromBytes(10).ToString(''##.#### B''))", span="34-34"];
m2_19 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsBytes()", file="ToStringTests.cs", label="Exit Humanizer.Tests.Bytes.ToStringTests.ReturnsBytes()", span="32-32"];
m2_27 [cluster="Humanizer.Bytes.ByteSize.FromMegabytes(double)", file="ToStringTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromMegabytes(double)", span="108-108"];
m2_20 [cluster="Humanizer.Bytes.ByteSize.FromBytes(double)", file="ToStringTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromBytes(double)", span="98-98"];
m2_9 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ToStringTests.cs", label="Entry Humanizer.Bytes.ByteSize.ToString(string)", span="134-134"];
m2_21 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsKilobytes()", file="ToStringTests.cs", label="Entry Humanizer.Tests.Bytes.ToStringTests.ReturnsKilobytes()", span="38-38"];
m2_22 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsKilobytes()", file="ToStringTests.cs", label="Assert.Equal(''10 KB'', ByteSize.FromKilobytes(10).ToString(''##.#### KB''))", span="40-40"];
m2_23 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsKilobytes()", file="ToStringTests.cs", label="Exit Humanizer.Tests.Bytes.ToStringTests.ReturnsKilobytes()", span="38-38"];
m2_28 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsGigabytes()", file="ToStringTests.cs", label="Entry Humanizer.Tests.Bytes.ToStringTests.ReturnsGigabytes()", span="50-50"];
m2_29 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsGigabytes()", file="ToStringTests.cs", label="Assert.Equal(''10 GB'', ByteSize.FromGigabytes(10).ToString(''##.#### GB''))", span="52-52"];
m2_30 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsGigabytes()", file="ToStringTests.cs", label="Exit Humanizer.Tests.Bytes.ToStringTests.ReturnsGigabytes()", span="50-50"];
m2_32 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsTerabytes()", file="ToStringTests.cs", label="Entry Humanizer.Tests.Bytes.ToStringTests.ReturnsTerabytes()", span="56-56"];
m2_33 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsTerabytes()", file="ToStringTests.cs", label="Assert.Equal(''10 TB'', ByteSize.FromTerabytes(10).ToString(''##.#### TB''))", span="58-58"];
m2_34 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsTerabytes()", file="ToStringTests.cs", label="Exit Humanizer.Tests.Bytes.ToStringTests.ReturnsTerabytes()", span="56-56"];
m2_35 [cluster="Humanizer.Bytes.ByteSize.FromTerabytes(double)", file="ToStringTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromTerabytes(double)", span="118-118"];
m2_10 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsProvidedNumberFormat()", file="ToStringTests.cs", label="Entry Humanizer.Tests.Bytes.ToStringTests.ReturnsProvidedNumberFormat()", span="20-20"];
m2_11 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsProvidedNumberFormat()", file="ToStringTests.cs", label="Assert.Equal(''10.1234 KB'', ByteSize.FromKilobytes(10.1234).ToString(''#.#### KB''))", span="22-22"];
m2_12 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsProvidedNumberFormat()", file="ToStringTests.cs", label="Exit Humanizer.Tests.Bytes.ToStringTests.ReturnsProvidedNumberFormat()", span="20-20"];
m2_6 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsDefaultNumberFormat()", file="ToStringTests.cs", label="Entry Humanizer.Tests.Bytes.ToStringTests.ReturnsDefaultNumberFormat()", span="14-14"];
m2_7 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsDefaultNumberFormat()", file="ToStringTests.cs", label="Assert.Equal(''10.5 KB'', ByteSize.FromKilobytes(10.5).ToString(''KB''))", span="16-16"];
m2_8 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsDefaultNumberFormat()", file="ToStringTests.cs", label="Exit Humanizer.Tests.Bytes.ToStringTests.ReturnsDefaultNumberFormat()", span="14-14"];
m2_36 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsSelectedFormat()", file="ToStringTests.cs", label="Entry Humanizer.Tests.Bytes.ToStringTests.ReturnsSelectedFormat()", span="62-62"];
m2_37 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsSelectedFormat()", file="ToStringTests.cs", label="Assert.Equal(''10.0 TB'', ByteSize.FromTerabytes(10).ToString(''0.0 TB''))", span="64-64"];
m2_38 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsSelectedFormat()", file="ToStringTests.cs", label="Exit Humanizer.Tests.Bytes.ToStringTests.ReturnsSelectedFormat()", span="62-62"];
m2_31 [cluster="Humanizer.Bytes.ByteSize.FromGigabytes(double)", file="ToStringTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromGigabytes(double)", span="113-113"];
m2_3 [cluster="Humanizer.Bytes.ByteSize.FromKilobytes(double)", file="ToStringTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromKilobytes(double)", span="103-103"];
m2_42 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsLargestMetricPrefixLargerThanZeroForNegativeValues()", file="ToStringTests.cs", label="Entry Humanizer.Tests.Bytes.ToStringTests.ReturnsLargestMetricPrefixLargerThanZeroForNegativeValues()", span="74-74"];
m2_43 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsLargestMetricPrefixLargerThanZeroForNegativeValues()", file="ToStringTests.cs", label="Assert.Equal(''-512 KB'', ByteSize.FromMegabytes(-.5).ToString(''#.#''))", span="76-76"];
m2_44 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsLargestMetricPrefixLargerThanZeroForNegativeValues()", file="ToStringTests.cs", label="Exit Humanizer.Tests.Bytes.ToStringTests.ReturnsLargestMetricPrefixLargerThanZeroForNegativeValues()", span="74-74"];
m2_13 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsBits()", file="ToStringTests.cs", label="Entry Humanizer.Tests.Bytes.ToStringTests.ReturnsBits()", span="26-26"];
m2_14 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsBits()", file="ToStringTests.cs", label="Assert.Equal(''10 b'', ByteSize.FromBits(10).ToString(''##.#### b''))", span="28-28"];
m2_15 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsBits()", file="ToStringTests.cs", label="Exit Humanizer.Tests.Bytes.ToStringTests.ReturnsBits()", span="26-26"];
m2_0 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsLargestMetricSuffix()", file="ToStringTests.cs", label="Entry Humanizer.Tests.Bytes.ToStringTests.ReturnsLargestMetricSuffix()", span="8-8"];
m2_1 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsLargestMetricSuffix()", file="ToStringTests.cs", label="Assert.Equal(''10.5 KB'', ByteSize.FromKilobytes(10.5).ToString())", span="10-10"];
m2_2 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsLargestMetricSuffix()", file="ToStringTests.cs", label="Exit Humanizer.Tests.Bytes.ToStringTests.ReturnsLargestMetricSuffix()", span="8-8"];
m2_24 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsMegabytes()", file="ToStringTests.cs", label="Entry Humanizer.Tests.Bytes.ToStringTests.ReturnsMegabytes()", span="44-44"];
m2_25 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsMegabytes()", file="ToStringTests.cs", label="Assert.Equal(''10 MB'', ByteSize.FromMegabytes(10).ToString(''##.#### MB''))", span="46-46"];
m2_26 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsMegabytes()", file="ToStringTests.cs", label="Exit Humanizer.Tests.Bytes.ToStringTests.ReturnsMegabytes()", span="44-44"];
n9 -> n1  [color=darkseagreen4, key=1, label="Humanizer.Tests.AmbientCulture", style=dashed];
n9 -> n7  [color=darkseagreen4, key=1, label="Humanizer.Tests.AmbientCulture", style=dashed];
n9 -> d1  [color=darkseagreen4, key=1, label="Humanizer.Tests.AmbientCulture", style=dashed];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
n0 -> d2  [color=green, key=1, label="System.Globalization.CultureInfo", style=dashed];
n0 -> d1  [key=0, style=solid];
n0 -> d3  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
n1 -> n2  [key=0, style=solid];
n2 -> n3  [key=0, style=solid];
n3 -> n0  [color=blue, key=0, style=bold];
n4 -> n5  [key=0, style=solid];
n5 -> n4  [color=blue, key=0, style=bold];
n6 -> n7  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n8 -> n6  [color=blue, key=0, style=bold];
d2 -> d3  [color=green, key=0, style=solid];
d1 -> d2  [color=green, key=0, style=solid];
d3 -> n3  [key=0, style=solid];
m0_18 -> m0_19  [key=0, style=solid];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_21  [key=2, style=dotted];
m0_19 -> m0_22  [key=2, style=dotted];
m0_19 -> m0_5  [key=2, style=dotted];
m0_20 -> m0_18  [color=blue, key=0, style=bold];
m0_31 -> m0_32  [key=0, style=solid];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_30  [key=2, style=dotted];
m0_32 -> m0_9  [key=2, style=dotted];
m0_32 -> m0_5  [key=2, style=dotted];
m0_33 -> m0_31  [color=blue, key=0, style=bold];
m0_15 -> m0_16  [key=0, style=solid];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_14  [key=2, style=dotted];
m0_16 -> m0_9  [key=2, style=dotted];
m0_16 -> m0_5  [key=2, style=dotted];
m0_17 -> m0_15  [color=blue, key=0, style=bold];
m0_26 -> m0_27  [key=0, style=solid];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_29  [key=2, style=dotted];
m0_27 -> m0_30  [key=2, style=dotted];
m0_27 -> m0_5  [key=2, style=dotted];
m0_28 -> m0_26  [color=blue, key=0, style=bold];
m0_47 -> m0_48  [key=0, style=solid];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_50  [key=2, style=dotted];
m0_48 -> m0_9  [key=2, style=dotted];
m0_48 -> m0_5  [key=2, style=dotted];
m0_49 -> m0_47  [color=blue, key=0, style=bold];
m0_42 -> m0_43  [key=0, style=solid];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_45  [key=2, style=dotted];
m0_43 -> m0_46  [key=2, style=dotted];
m0_43 -> m0_5  [key=2, style=dotted];
m0_44 -> m0_42  [color=blue, key=0, style=bold];
m0_34 -> m0_35  [key=0, style=solid];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_37  [key=2, style=dotted];
m0_35 -> m0_38  [key=2, style=dotted];
m0_35 -> m0_5  [key=2, style=dotted];
m0_36 -> m0_34  [color=blue, key=0, style=bold];
m0_39 -> m0_40  [key=0, style=solid];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_38  [key=2, style=dotted];
m0_40 -> m0_9  [key=2, style=dotted];
m0_40 -> m0_5  [key=2, style=dotted];
m0_41 -> m0_39  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=2, style=dotted];
m0_1 -> m0_4  [key=2, style=dotted];
m0_1 -> m0_5  [key=2, style=dotted];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_6 -> m0_7  [key=0, style=solid];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_4  [key=2, style=dotted];
m0_7 -> m0_9  [key=2, style=dotted];
m0_7 -> m0_5  [key=2, style=dotted];
m0_8 -> m0_6  [color=blue, key=0, style=bold];
m0_10 -> m0_11  [key=0, style=solid];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_13  [key=2, style=dotted];
m0_11 -> m0_14  [key=2, style=dotted];
m0_11 -> m0_5  [key=2, style=dotted];
m0_12 -> m0_10  [color=blue, key=0, style=bold];
m0_23 -> m0_24  [key=0, style=solid];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_22  [key=2, style=dotted];
m0_24 -> m0_9  [key=2, style=dotted];
m0_24 -> m0_5  [key=2, style=dotted];
m0_25 -> m0_23  [color=blue, key=0, style=bold];
m1_26 -> m1_27  [key=0, style=solid];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_3  [key=2, style=dotted];
m1_27 -> m1_4  [key=2, style=dotted];
m1_27 -> m1_5  [key=2, style=dotted];
m1_28 -> m1_26  [color=blue, key=0, style=bold];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_20  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_19 -> m1_20  [key=0, style=solid];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_12  [key=2, style=dotted];
m1_20 -> m1_22  [color=darkseagreen4, key=1, label=resultByteSize, style=dashed];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_24  [key=2, style=dotted];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_25  [key=2, style=dotted];
m1_22 -> m1_5  [key=2, style=dotted];
m1_23 -> m1_18  [color=blue, key=0, style=bold];
m1_48 -> m1_49  [key=0, style=solid];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_51  [key=2, style=dotted];
m1_49 -> m1_4  [key=2, style=dotted];
m1_49 -> m1_5  [key=2, style=dotted];
m1_50 -> m1_48  [color=blue, key=0, style=bold];
m1_42 -> m1_43  [key=0, style=solid];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_32  [key=2, style=dotted];
m1_43 -> m1_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_44 -> m1_42  [color=blue, key=0, style=bold];
m1_29 -> m1_30  [key=0, style=solid];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_32  [key=2, style=dotted];
m1_30 -> m1_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_31 -> m1_29  [color=blue, key=0, style=bold];
m1_66 -> m1_67  [key=0, style=solid];
m1_67 -> m1_68  [key=0, style=solid];
m1_67 -> m1_69  [key=2, style=dotted];
m1_67 -> m1_4  [key=2, style=dotted];
m1_67 -> m1_5  [key=2, style=dotted];
m1_68 -> m1_66  [color=blue, key=0, style=bold];
m1_36 -> m1_37  [key=0, style=solid];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_32  [key=2, style=dotted];
m1_37 -> m1_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_38 -> m1_36  [color=blue, key=0, style=bold];
m1_59 -> m1_60  [key=0, style=solid];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_17  [key=2, style=dotted];
m1_60 -> m1_4  [key=2, style=dotted];
m1_60 -> m1_5  [key=2, style=dotted];
m1_61 -> m1_59  [color=blue, key=0, style=bold];
m1_56 -> m1_57  [key=0, style=solid];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_3  [key=2, style=dotted];
m1_57 -> m1_4  [key=2, style=dotted];
m1_57 -> m1_5  [key=2, style=dotted];
m1_58 -> m1_56  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_1 -> m1_4  [key=2, style=dotted];
m1_1 -> m1_5  [key=2, style=dotted];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m1_45 -> m1_46  [key=0, style=solid];
m1_33 -> m1_34  [key=0, style=solid];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_4  [key=2, style=dotted];
m1_35 -> m1_33  [color=blue, key=0, style=bold];
m1_39 -> m1_40  [key=0, style=solid];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_4  [key=2, style=dotted];
m1_41 -> m1_39  [color=blue, key=0, style=bold];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_4  [key=2, style=dotted];
m1_47 -> m1_45  [color=blue, key=0, style=bold];
m1_62 -> m1_63  [key=0, style=solid];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_65  [key=2, style=dotted];
m1_63 -> m1_4  [key=2, style=dotted];
m1_63 -> m1_5  [key=2, style=dotted];
m1_64 -> m1_62  [color=blue, key=0, style=bold];
m1_52 -> m1_53  [key=0, style=solid];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_55  [key=2, style=dotted];
m1_53 -> m1_4  [key=2, style=dotted];
m1_53 -> m1_5  [key=2, style=dotted];
m1_54 -> m1_52  [color=blue, key=0, style=bold];
m1_6 -> m1_7  [key=0, style=solid];
m1_7 -> m1_8  [key=0, style=solid];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_12  [key=2, style=dotted];
m1_8 -> m1_10  [color=darkseagreen4, key=1, label=resultByteSize, style=dashed];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_13  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_3  [key=2, style=dotted];
m1_10 -> m1_5  [key=2, style=dotted];
m1_11 -> m1_6  [color=blue, key=0, style=bold];
m1_14 -> m1_15  [key=0, style=solid];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_17  [key=2, style=dotted];
m1_15 -> m1_4  [key=2, style=dotted];
m1_15 -> m1_5  [key=2, style=dotted];
m1_16 -> m1_14  [color=blue, key=0, style=bold];
m2_39 -> m2_40  [key=0, style=solid];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_27  [key=2, style=dotted];
m2_40 -> m2_9  [key=2, style=dotted];
m2_40 -> m2_5  [key=2, style=dotted];
m2_41 -> m2_39  [color=blue, key=0, style=bold];
m2_17 -> m2_18  [key=0, style=solid];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_20  [key=2, style=dotted];
m2_18 -> m2_9  [key=2, style=dotted];
m2_18 -> m2_5  [key=2, style=dotted];
m2_19 -> m2_17  [color=blue, key=0, style=bold];
m2_21 -> m2_22  [key=0, style=solid];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_3  [key=2, style=dotted];
m2_22 -> m2_9  [key=2, style=dotted];
m2_22 -> m2_5  [key=2, style=dotted];
m2_23 -> m2_21  [color=blue, key=0, style=bold];
m2_28 -> m2_29  [key=0, style=solid];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_31  [key=2, style=dotted];
m2_29 -> m2_9  [key=2, style=dotted];
m2_29 -> m2_5  [key=2, style=dotted];
m2_30 -> m2_28  [color=blue, key=0, style=bold];
m2_32 -> m2_33  [key=0, style=solid];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_35  [key=2, style=dotted];
m2_33 -> m2_9  [key=2, style=dotted];
m2_33 -> m2_5  [key=2, style=dotted];
m2_34 -> m2_32  [color=blue, key=0, style=bold];
m2_10 -> m2_11  [key=0, style=solid];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_3  [key=2, style=dotted];
m2_11 -> m2_9  [key=2, style=dotted];
m2_11 -> m2_5  [key=2, style=dotted];
m2_12 -> m2_10  [color=blue, key=0, style=bold];
m2_6 -> m2_7  [key=0, style=solid];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_3  [key=2, style=dotted];
m2_7 -> m2_9  [key=2, style=dotted];
m2_7 -> m2_5  [key=2, style=dotted];
m2_8 -> m2_6  [color=blue, key=0, style=bold];
m2_36 -> m2_37  [key=0, style=solid];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_35  [key=2, style=dotted];
m2_37 -> m2_9  [key=2, style=dotted];
m2_37 -> m2_5  [key=2, style=dotted];
m2_38 -> m2_36  [color=blue, key=0, style=bold];
m2_42 -> m2_43  [key=0, style=solid];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_27  [key=2, style=dotted];
m2_43 -> m2_9  [key=2, style=dotted];
m2_43 -> m2_5  [key=2, style=dotted];
m2_44 -> m2_42  [color=blue, key=0, style=bold];
m2_13 -> m2_14  [key=0, style=solid];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_16  [key=2, style=dotted];
m2_14 -> m2_9  [key=2, style=dotted];
m2_14 -> m2_5  [key=2, style=dotted];
m2_15 -> m2_13  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_1 -> m2_4  [key=2, style=dotted];
m2_1 -> m2_5  [key=2, style=dotted];
m2_2 -> m2_0  [color=blue, key=0, style=bold];
m2_24 -> m2_25  [key=0, style=solid];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_27  [key=2, style=dotted];
m2_25 -> m2_9  [key=2, style=dotted];
m2_25 -> m2_5  [key=2, style=dotted];
m2_26 -> m2_24  [color=blue, key=0, style=bold];
}
