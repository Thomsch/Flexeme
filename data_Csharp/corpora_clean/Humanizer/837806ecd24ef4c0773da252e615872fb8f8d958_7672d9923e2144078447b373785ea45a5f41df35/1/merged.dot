digraph  {
d17 [label="Assert.Equal(singular, singular.Singularize(Plurality.Singular))", span="44-44", cluster="Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord(string, string)", color=green, community=0];
d16 [label="Entry Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord(string, string)", span="42-42", cluster="Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord(string, string)"];
d18 [label="Exit Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord(string, string)", span="42-42", cluster="Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord(string, string)"];
d15 [label="Entry string.Singularize(Humanizer.Plurality)", span="171-171", cluster="string.Singularize(Humanizer.Plurality)"];
d4 [label="Entry Unk.Equal", span="", cluster="Unk.Equal"];
d21 [label="Assert.Equal(singular, plural.Singularize(Plurality.CouldBeEither))", span="52-52", cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", color=green, community=0];
d19 [label="Entry Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", span="49-49", cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)"];
d20 [label="Assert.Equal(singular, singular.Singularize(Plurality.CouldBeEither))", span="51-51", cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)"];
d22 [label="Exit Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", span="49-49", cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)"];
d28 [label="Assert.Equal(input.Dasherize(), expectedOutput)", span="75-75", cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", color=green, community=0];
d27 [label="Entry Humanizer.Tests.InflectorTests.Dasherize(string, string)", span="73-73", cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)"];
d29 [label="Exit Humanizer.Tests.InflectorTests.Dasherize(string, string)", span="73-73", cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)"];
d30 [label="Entry string.Dasherize()", span="259-259", cluster="string.Dasherize()"];
d13 [label="Assert.Equal(singular, plural.Singularize())", span="37-37", cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)"];
d1 [label="Assert.Equal(plural, singular.Pluralize())", span="15-15", cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)"];
d6 [label="Assert.Equal(plural, plural.Pluralize(Plurality.Plural))", span="22-22", cluster="Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord(string, string)"];
d9 [label="Assert.Equal(plural, plural.Pluralize(Plurality.CouldBeEither))", span="29-29", cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)"];
d10 [label="Assert.Equal(plural, singular.Pluralize(Plurality.CouldBeEither))", span="30-30", cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)"];
d24 [label="Assert.Equal(expectedOuput, input.Titleize())", span="65-65", cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)"];
d32 [label="Assert.Equal(input.Hyphenate(), expectedOutput)", span="85-85", cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)"];
d36 [label="Assert.Equal(expectedOutput, input.Pascalize())", span="98-98", cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)"];
d40 [label="Assert.Equal(expectedOutput, input.Camelize())", span="112-112", cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)"];
d44 [label="Assert.Equal(expectedOuput, input.Underscore())", span="125-125", cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)"];
d12 [label="Entry Humanizer.Tests.InflectorTests.Singularize(string, string)", span="35-35", cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)"];
d14 [label="Exit Humanizer.Tests.InflectorTests.Singularize(string, string)", span="35-35", cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)"];
d0 [label="Entry Humanizer.Tests.InflectorTests.Pluralize(string, string)", span="13-13", cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)"];
d2 [label="Exit Humanizer.Tests.InflectorTests.Pluralize(string, string)", span="13-13", cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)"];
d3 [label="Entry string.Pluralize(Humanizer.Plurality)", span="147-147", cluster="string.Pluralize(Humanizer.Plurality)"];
d5 [label="Entry Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord(string, string)", span="20-20", cluster="Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord(string, string)"];
d7 [label="Exit Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord(string, string)", span="20-20", cluster="Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord(string, string)"];
d8 [label="Entry Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", span="27-27", cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)"];
d11 [label="Exit Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", span="27-27", cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)"];
d23 [label="Entry Humanizer.Tests.InflectorTests.Titleize(string, string)", span="63-63", cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)"];
d25 [label="Exit Humanizer.Tests.InflectorTests.Titleize(string, string)", span="63-63", cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)"];
d26 [label="Entry string.Titleize()", span="216-216", cluster="string.Titleize()"];
d31 [label="Entry Humanizer.Tests.InflectorTests.Hyphenate(string, string)", span="83-83", cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)"];
d33 [label="Exit Humanizer.Tests.InflectorTests.Hyphenate(string, string)", span="83-83", cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)"];
d34 [label="Entry string.Hyphenate()", span="269-269", cluster="string.Hyphenate()"];
d35 [label="Entry Humanizer.Tests.InflectorTests.Pascalize(string, string)", span="96-96", cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)"];
d37 [label="Exit Humanizer.Tests.InflectorTests.Pascalize(string, string)", span="96-96", cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)"];
d38 [label="Entry string.Pascalize()", span="226-226", cluster="string.Pascalize()"];
d39 [label="Entry Humanizer.Tests.InflectorTests.Camelize(string, string)", span="110-110", cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)"];
d41 [label="Exit Humanizer.Tests.InflectorTests.Camelize(string, string)", span="110-110", cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)"];
d42 [label="Entry string.Camelize()", span="236-236", cluster="string.Camelize()"];
d43 [label="Entry Humanizer.Tests.InflectorTests.Underscore(string, string)", span="123-123", cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)"];
d45 [label="Exit Humanizer.Tests.InflectorTests.Underscore(string, string)", span="123-123", cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)"];
d46 [label="Entry string.Underscore()", span="247-247", cluster="string.Underscore()"];
m1_8 [label="Entry string.FromRoman()", span="43-43", cluster="string.FromRoman()", file="DateHumanizeTests.fi-FI.cs"];
m1_0 [label="Entry Humanizer.Tests.RomanNumeralTests.ToRoman(int, string)", span="26-26", cluster="Humanizer.Tests.RomanNumeralTests.ToRoman(int, string)", file="DateHumanizeTests.fi-FI.cs"];
m1_1 [label="Assert.Equal(expected, input.ToRoman())", span="28-28", cluster="Humanizer.Tests.RomanNumeralTests.ToRoman(int, string)", file="DateHumanizeTests.fi-FI.cs"];
m1_2 [label="Exit Humanizer.Tests.RomanNumeralTests.ToRoman(int, string)", span="26-26", cluster="Humanizer.Tests.RomanNumeralTests.ToRoman(int, string)", file="DateHumanizeTests.fi-FI.cs"];
m1_5 [label="Entry Humanizer.Tests.RomanNumeralTests.FromRoman(int, string)", span="51-51", cluster="Humanizer.Tests.RomanNumeralTests.FromRoman(int, string)", file="DateHumanizeTests.fi-FI.cs"];
m1_6 [label="Assert.Equal(expected, input.FromRoman())", span="53-53", cluster="Humanizer.Tests.RomanNumeralTests.FromRoman(int, string)", file="DateHumanizeTests.fi-FI.cs"];
m1_7 [label="Exit Humanizer.Tests.RomanNumeralTests.FromRoman(int, string)", span="51-51", cluster="Humanizer.Tests.RomanNumeralTests.FromRoman(int, string)", file="DateHumanizeTests.fi-FI.cs"];
m1_3 [label="Entry int.ToRoman()", span="84-84", cluster="int.ToRoman()", file="DateHumanizeTests.fi-FI.cs"];
m3_9 [label="Entry Humanizer.Tests.Localisation.RussianDateHumanizeTests.NMinutesAgo(int, string)", span="52-52", cluster="Humanizer.Tests.Localisation.RussianDateHumanizeTests.NMinutesAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m3_10 [label="var humanize = DateTime.UtcNow.AddMinutes(-1 * number).Humanize()", span="54-54", cluster="Humanizer.Tests.Localisation.RussianDateHumanizeTests.NMinutesAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m3_11 [label="Assert.Equal(expected, humanize)", span="55-55", cluster="Humanizer.Tests.Localisation.RussianDateHumanizeTests.NMinutesAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m3_12 [label="Exit Humanizer.Tests.Localisation.RussianDateHumanizeTests.NMinutesAgo(int, string)", span="52-52", cluster="Humanizer.Tests.Localisation.RussianDateHumanizeTests.NMinutesAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m3_7 [label="Entry System.DateTime.Humanize(bool, System.DateTime?)", span="18-18", cluster="System.DateTime.Humanize(bool, System.DateTime?)", file="DateHumanizeTests.ru-RU.cs"];
m3_28 [label="Entry System.DateTime.AddMonths(int)", span="0-0", cluster="System.DateTime.AddMonths(int)", file="DateHumanizeTests.ru-RU.cs"];
m3_13 [label="Entry System.DateTime.AddMinutes(double)", span="0-0", cluster="System.DateTime.AddMinutes(double)", file="DateHumanizeTests.ru-RU.cs"];
m3_34 [label="Entry Humanizer.Tests.Localisation.RussianDateHumanizeTests.NotYet()", span="137-137", cluster="Humanizer.Tests.Localisation.RussianDateHumanizeTests.NotYet()", file="DateHumanizeTests.ru-RU.cs"];
m3_35 [label="var humanize = DateTime.UtcNow.AddDays(1).Humanize()", span="139-139", cluster="Humanizer.Tests.Localisation.RussianDateHumanizeTests.NotYet()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs"];
m3_36 [label="Assert.Equal(''в будущем'', humanize)", span="140-140", cluster="Humanizer.Tests.Localisation.RussianDateHumanizeTests.NotYet()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs"];
m3_37 [label="Exit Humanizer.Tests.Localisation.RussianDateHumanizeTests.NotYet()", span="137-137", cluster="Humanizer.Tests.Localisation.RussianDateHumanizeTests.NotYet()", file="DateHumanizeTests.ru-RU.cs"];
m3_14 [label="Entry Humanizer.Tests.Localisation.RussianDateHumanizeTests.NHoursAgo(int, string)", span="72-72", cluster="Humanizer.Tests.Localisation.RussianDateHumanizeTests.NHoursAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m3_15 [label="var humanize = DateTime.UtcNow.AddHours(-1 * number).Humanize()", span="74-74", cluster="Humanizer.Tests.Localisation.RussianDateHumanizeTests.NHoursAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m3_16 [label="Assert.Equal(expected, humanize)", span="75-75", cluster="Humanizer.Tests.Localisation.RussianDateHumanizeTests.NHoursAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m3_17 [label="Exit Humanizer.Tests.Localisation.RussianDateHumanizeTests.NHoursAgo(int, string)", span="72-72", cluster="Humanizer.Tests.Localisation.RussianDateHumanizeTests.NHoursAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m3_6 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)", file="DateHumanizeTests.ru-RU.cs"];
m3_24 [label="Entry Humanizer.Tests.Localisation.RussianDateHumanizeTests.NMonthsAgo(int, string)", span="109-109", cluster="Humanizer.Tests.Localisation.RussianDateHumanizeTests.NMonthsAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m3_25 [label="var humanize = DateTime.UtcNow.Date.AddMonths(-1 * number).Humanize()", span="111-111", cluster="Humanizer.Tests.Localisation.RussianDateHumanizeTests.NMonthsAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m3_26 [label="Assert.Equal(expected, humanize)", span="112-112", cluster="Humanizer.Tests.Localisation.RussianDateHumanizeTests.NMonthsAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m3_27 [label="Exit Humanizer.Tests.Localisation.RussianDateHumanizeTests.NMonthsAgo(int, string)", span="109-109", cluster="Humanizer.Tests.Localisation.RussianDateHumanizeTests.NMonthsAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m3_33 [label="Entry System.DateTime.AddYears(int)", span="0-0", cluster="System.DateTime.AddYears(int)", file="DateHumanizeTests.ru-RU.cs"];
m3_29 [label="Entry Humanizer.Tests.Localisation.RussianDateHumanizeTests.NYearsAgo(int, string)", span="130-130", cluster="Humanizer.Tests.Localisation.RussianDateHumanizeTests.NYearsAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m3_30 [label="var humanize = DateTime.UtcNow.Date.AddYears(-1 * number).Humanize()", span="132-132", cluster="Humanizer.Tests.Localisation.RussianDateHumanizeTests.NYearsAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m3_31 [label="Assert.Equal(expected, humanize)", span="133-133", cluster="Humanizer.Tests.Localisation.RussianDateHumanizeTests.NYearsAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m3_32 [label="Exit Humanizer.Tests.Localisation.RussianDateHumanizeTests.NYearsAgo(int, string)", span="130-130", cluster="Humanizer.Tests.Localisation.RussianDateHumanizeTests.NYearsAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m3_0 [label="Entry Humanizer.Tests.Localisation.RussianDateHumanizeTests.RussianDateHumanizeTests()", span="8-8", cluster="Humanizer.Tests.Localisation.RussianDateHumanizeTests.RussianDateHumanizeTests()", file="DateHumanizeTests.ru-RU.cs"];
m3_1 [label="Exit Humanizer.Tests.Localisation.RussianDateHumanizeTests.RussianDateHumanizeTests()", span="8-8", cluster="Humanizer.Tests.Localisation.RussianDateHumanizeTests.RussianDateHumanizeTests()", file="DateHumanizeTests.ru-RU.cs"];
m3_19 [label="Entry Humanizer.Tests.Localisation.RussianDateHumanizeTests.NDaysAgo(int, string)", span="94-94", cluster="Humanizer.Tests.Localisation.RussianDateHumanizeTests.NDaysAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m3_20 [label="var humanize = DateTime.UtcNow.Date.AddDays(-1 * number).Humanize()", span="96-96", cluster="Humanizer.Tests.Localisation.RussianDateHumanizeTests.NDaysAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m3_21 [label="Assert.Equal(expected, humanize)", span="97-97", cluster="Humanizer.Tests.Localisation.RussianDateHumanizeTests.NDaysAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m3_22 [label="Exit Humanizer.Tests.Localisation.RussianDateHumanizeTests.NDaysAgo(int, string)", span="94-94", cluster="Humanizer.Tests.Localisation.RussianDateHumanizeTests.NDaysAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m3_2 [label="Entry Humanizer.Tests.Localisation.RussianDateHumanizeTests.NSecondsAgo(int, string)", span="29-29", cluster="Humanizer.Tests.Localisation.RussianDateHumanizeTests.NSecondsAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m3_3 [label="var humanize = DateTime.UtcNow.AddSeconds(-1 * number).Humanize()", span="31-31", cluster="Humanizer.Tests.Localisation.RussianDateHumanizeTests.NSecondsAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m3_4 [label="Assert.Equal(expected, humanize)", span="32-32", cluster="Humanizer.Tests.Localisation.RussianDateHumanizeTests.NSecondsAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m3_5 [label="Exit Humanizer.Tests.Localisation.RussianDateHumanizeTests.NSecondsAgo(int, string)", span="29-29", cluster="Humanizer.Tests.Localisation.RussianDateHumanizeTests.NSecondsAgo(int, string)", file="DateHumanizeTests.ru-RU.cs"];
m3_23 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="DateHumanizeTests.ru-RU.cs"];
m3_18 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="DateHumanizeTests.ru-RU.cs"];
m4_11 [label="Entry Humanizer.Localisation.ArabicFormatter.ArabicFormatter()", span="2-2", cluster="Humanizer.Localisation.ArabicFormatter.ArabicFormatter()", file="DefaultFormatter.cs"];
m4_3 [label="Entry Humanizer.Localisation.RomanianFormatter.RomanianFormatter()", span="2-2", cluster="Humanizer.Localisation.RomanianFormatter.RomanianFormatter()", file="DefaultFormatter.cs"];
m4_7 [label="Entry Humanizer.Localisation.RussianFormatter.RussianFormatter()", span="2-2", cluster="Humanizer.Localisation.RussianFormatter.RussianFormatter()", file="DefaultFormatter.cs"];
m4_15 [label="Entry Humanizer.Localisation.CzechSlovakFormatter.CzechSlovakFormatter()", span="2-2", cluster="Humanizer.Localisation.CzechSlovakFormatter.CzechSlovakFormatter()", file="DefaultFormatter.cs"];
m4_16 [label="Entry lambda expression", span="19-19", cluster="lambda expression", file="DefaultFormatter.cs"];
m4_0 [label="Entry lambda expression", span="15-15", cluster="lambda expression", file="DefaultFormatter.cs"];
m4_1 [label="new RomanianFormatter()", span="15-15", cluster="lambda expression", file="DefaultFormatter.cs"];
m4_2 [label="Exit lambda expression", span="15-15", cluster="lambda expression", file="DefaultFormatter.cs"];
m4_4 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="DefaultFormatter.cs"];
m4_5 [label="new RussianFormatter()", span="16-16", cluster="lambda expression", file="DefaultFormatter.cs"];
m4_6 [label="Exit lambda expression", span="16-16", cluster="lambda expression", file="DefaultFormatter.cs"];
m4_8 [label="Entry lambda expression", span="17-17", cluster="lambda expression", file="DefaultFormatter.cs"];
m4_9 [label="new ArabicFormatter()", span="17-17", cluster="lambda expression", file="DefaultFormatter.cs"];
m4_10 [label="Exit lambda expression", span="17-17", cluster="lambda expression", file="DefaultFormatter.cs"];
m4_12 [label="Entry lambda expression", span="18-18", cluster="lambda expression", file="DefaultFormatter.cs"];
m4_13 [label="new CzechSlovakFormatter()", span="18-18", cluster="lambda expression", file="DefaultFormatter.cs"];
m4_14 [label="Exit lambda expression", span="18-18", cluster="lambda expression", file="DefaultFormatter.cs"];
m4_17 [label="new CzechSlovakFormatter()", span="19-19", cluster="lambda expression", file="DefaultFormatter.cs"];
m4_18 [label="Exit lambda expression", span="19-19", cluster="lambda expression", file="DefaultFormatter.cs"];
m6_0 [label="Entry Humanizer.Localisation.ArabicFormatter.GetResourceKey(string, int)", span="7-7", cluster="Humanizer.Localisation.ArabicFormatter.GetResourceKey(string, int)", file="IFormatter.cs"];
m6_1 [label="number == 2", span="10-10", cluster="Humanizer.Localisation.ArabicFormatter.GetResourceKey(string, int)", file="IFormatter.cs"];
m6_2 [label="return resourceKey + DualPostfix;", span="11-11", cluster="Humanizer.Localisation.ArabicFormatter.GetResourceKey(string, int)", file="IFormatter.cs"];
m6_3 [label="number >= 3 && number <= 10", span="14-14", cluster="Humanizer.Localisation.ArabicFormatter.GetResourceKey(string, int)", file="IFormatter.cs"];
m6_4 [label="return resourceKey + PluralPostfix;", span="15-15", cluster="Humanizer.Localisation.ArabicFormatter.GetResourceKey(string, int)", file="IFormatter.cs"];
m6_5 [label="return resourceKey;", span="17-17", cluster="Humanizer.Localisation.ArabicFormatter.GetResourceKey(string, int)", color=red, community=0, file="IFormatter.cs"];
m6_6 [label="Exit Humanizer.Localisation.ArabicFormatter.GetResourceKey(string, int)", span="7-7", cluster="Humanizer.Localisation.ArabicFormatter.GetResourceKey(string, int)", file="IFormatter.cs"];
d17 -> d18  [key=0, style=solid, color=green];
d17 -> d15  [key=2, style=dotted, color=green];
d17 -> d4  [key=2, style=dotted, color=green];
d16 -> d17  [key=0, style=solid, color=green];
d18 -> d16  [key=0, style=bold, color=blue];
d21 -> d22  [key=0, style=solid, color=green];
d21 -> d15  [key=2, style=dotted, color=green];
d21 -> d4  [key=2, style=dotted, color=green];
d19 -> d21  [key=1, style=dashed, color=green, label=string];
d19 -> d20  [key=0, style=solid];
d20 -> d21  [key=0, style=solid, color=green];
d20 -> d15  [key=2, style=dotted];
d20 -> d4  [key=2, style=dotted];
d22 -> d19  [key=0, style=bold, color=blue];
d28 -> d29  [key=0, style=solid, color=green];
d28 -> d30  [key=2, style=dotted, color=green];
d28 -> d4  [key=2, style=dotted, color=green];
d27 -> d28  [key=0, style=solid, color=green];
d29 -> d27  [key=0, style=bold, color=blue];
d13 -> d15  [key=2, style=dotted];
d13 -> d4  [key=2, style=dotted];
d13 -> d14  [key=0, style=solid];
d1 -> d4  [key=2, style=dotted];
d1 -> d2  [key=0, style=solid];
d1 -> d3  [key=2, style=dotted];
d6 -> d4  [key=2, style=dotted];
d6 -> d7  [key=0, style=solid];
d6 -> d3  [key=2, style=dotted];
d9 -> d4  [key=2, style=dotted];
d9 -> d10  [key=0, style=solid];
d9 -> d3  [key=2, style=dotted];
d10 -> d4  [key=2, style=dotted];
d10 -> d11  [key=0, style=solid];
d10 -> d3  [key=2, style=dotted];
d24 -> d4  [key=2, style=dotted];
d24 -> d25  [key=0, style=solid];
d24 -> d26  [key=2, style=dotted];
d32 -> d4  [key=2, style=dotted];
d32 -> d33  [key=0, style=solid];
d32 -> d34  [key=2, style=dotted];
d36 -> d4  [key=2, style=dotted];
d36 -> d37  [key=0, style=solid];
d36 -> d38  [key=2, style=dotted];
d40 -> d4  [key=2, style=dotted];
d40 -> d41  [key=0, style=solid];
d40 -> d42  [key=2, style=dotted];
d44 -> d4  [key=2, style=dotted];
d44 -> d45  [key=0, style=solid];
d44 -> d46  [key=2, style=dotted];
d12 -> d13  [key=0, style=solid];
d14 -> d12  [key=0, style=bold, color=blue];
d0 -> d1  [key=0, style=solid];
d2 -> d0  [key=0, style=bold, color=blue];
d5 -> d6  [key=0, style=solid];
d7 -> d5  [key=0, style=bold, color=blue];
d8 -> d9  [key=0, style=solid];
d8 -> d10  [key=1, style=dashed, color=darkseagreen4, label=string];
d11 -> d8  [key=0, style=bold, color=blue];
d23 -> d24  [key=0, style=solid];
d25 -> d23  [key=0, style=bold, color=blue];
d31 -> d32  [key=0, style=solid];
d33 -> d31  [key=0, style=bold, color=blue];
d35 -> d36  [key=0, style=solid];
d37 -> d35  [key=0, style=bold, color=blue];
d39 -> d40  [key=0, style=solid];
d41 -> d39  [key=0, style=bold, color=blue];
d43 -> d44  [key=0, style=solid];
d45 -> d43  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_1 -> d4  [key=2, style=dotted];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m1_5 -> m1_6  [key=0, style=solid];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_8  [key=2, style=dotted];
m1_6 -> d4  [key=2, style=dotted];
m1_7 -> m1_5  [key=0, style=bold, color=blue];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_11  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_13  [key=2, style=dotted];
m3_10 -> m3_7  [key=2, style=dotted];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> d4  [key=2, style=dotted];
m3_12 -> m3_9  [key=0, style=bold, color=blue];
m3_34 -> m3_35  [key=0, style=solid, color=red];
m3_35 -> m3_36  [key=0, style=solid, color=red];
m3_35 -> m3_23  [key=2, style=dotted, color=red];
m3_35 -> m3_7  [key=2, style=dotted, color=red];
m3_36 -> m3_37  [key=0, style=solid, color=red];
m3_36 -> d4  [key=2, style=dotted, color=red];
m3_37 -> m3_34  [key=0, style=bold, color=blue];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_16  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_18  [key=2, style=dotted];
m3_15 -> m3_7  [key=2, style=dotted];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> d4  [key=2, style=dotted];
m3_17 -> m3_14  [key=0, style=bold, color=blue];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_26  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_28  [key=2, style=dotted];
m3_25 -> m3_7  [key=2, style=dotted];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> d4  [key=2, style=dotted];
m3_27 -> m3_24  [key=0, style=bold, color=blue];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_31  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_33  [key=2, style=dotted];
m3_30 -> m3_7  [key=2, style=dotted];
m3_31 -> m3_32  [key=0, style=solid];
m3_31 -> d4  [key=2, style=dotted];
m3_32 -> m3_29  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_0  [key=0, style=bold, color=blue];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_21  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_23  [key=2, style=dotted];
m3_20 -> m3_7  [key=2, style=dotted];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> d4  [key=2, style=dotted];
m3_22 -> m3_19  [key=0, style=bold, color=blue];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_6  [key=2, style=dotted];
m3_3 -> m3_7  [key=2, style=dotted];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> d4  [key=2, style=dotted];
m3_5 -> m3_2  [key=0, style=bold, color=blue];
m4_16 -> m4_17  [key=0, style=solid];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=2, style=dotted];
m4_2 -> m4_0  [key=0, style=bold, color=blue];
m4_4 -> m4_5  [key=0, style=solid];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_7  [key=2, style=dotted];
m4_6 -> m4_4  [key=0, style=bold, color=blue];
m4_8 -> m4_9  [key=0, style=solid];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_11  [key=2, style=dotted];
m4_10 -> m4_8  [key=0, style=bold, color=blue];
m4_12 -> m4_13  [key=0, style=solid];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_15  [key=2, style=dotted];
m4_14 -> m4_12  [key=0, style=bold, color=blue];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_15  [key=2, style=dotted];
m4_18 -> m4_16  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_0 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_0 -> m6_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_0 -> m6_5  [key=1, style=dashed, color=red, label=string];
m6_0 -> m6_0  [key=3, color=green, style=bold, label="method methodReturn string GetResourceKey"];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=0, style=solid];
m6_2 -> m6_6  [key=0, style=solid];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_5  [key=0, style=solid, color=red];
m6_4 -> m6_6  [key=0, style=solid];
m6_5 -> m6_6  [key=0, style=solid, color=red];
m6_6 -> m6_0  [key=0, style=bold, color=blue];
}
