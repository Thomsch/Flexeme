digraph  {
n135 [label="Humanizer.Tests.PluralTestSource", span=""];
n0 [label="Entry Humanizer.Tests.InflectorTests.Pluralize(string, string)", span="35-35", cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)"];
n1 [label="Assert.Equal(plural, singular.Pluralize())", span="37-37", cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)"];
n2 [label="Exit Humanizer.Tests.InflectorTests.Pluralize(string, string)", span="35-35", cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)"];
n3 [label="Entry string.Pluralize(bool)", span="40-40", cluster="string.Pluralize(bool)"];
n4 [label="Entry Unk.Equal", span="", cluster="Unk.Equal"];
n5 [label="Entry Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", span="42-42", cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)"];
n6 [label="Assert.Equal(plural, plural.Pluralize(false))", span="44-44", cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)"];
n7 [label="Assert.Equal(plural, singular.Pluralize(false))", span="45-45", cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)"];
n8 [label="Exit Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", span="42-42", cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)"];
n9 [label="Entry Humanizer.Tests.InflectorTests.Singularize(string, string)", span="50-50", cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)"];
n10 [label="Assert.Equal(singular, plural.Singularize())", span="52-52", cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)"];
n11 [label="Exit Humanizer.Tests.InflectorTests.Singularize(string, string)", span="50-50", cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)"];
n12 [label="Entry string.Singularize(bool)", span="51-51", cluster="string.Singularize(bool)"];
n13 [label="Entry Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", span="57-57", cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)"];
n14 [label="Assert.Equal(singular, singular.Singularize(false))", span="59-59", cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)"];
n15 [label="Assert.Equal(singular, plural.Singularize(false))", span="60-60", cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)"];
n16 [label="Exit Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", span="57-57", cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)"];
n17 [label="Entry Humanizer.Tests.InflectorTests.Titleize(string, string)", span="71-71", cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)"];
n18 [label="Assert.Equal(expectedOuput, input.Titleize())", span="73-73", cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)"];
n19 [label="Exit Humanizer.Tests.InflectorTests.Titleize(string, string)", span="71-71", cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)"];
n20 [label="Entry string.Titleize()", span="61-61", cluster="string.Titleize()"];
n21 [label="Entry Humanizer.Tests.InflectorTests.Dasherize(string, string)", span="81-81", cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)"];
n22 [label="Assert.Equal(input.Dasherize(), expectedOutput)", span="83-83", cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)"];
n23 [label="Exit Humanizer.Tests.InflectorTests.Dasherize(string, string)", span="81-81", cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)"];
n24 [label="Entry string.Dasherize()", span="104-104", cluster="string.Dasherize()"];
n25 [label="Entry Humanizer.Tests.InflectorTests.Hyphenate(string, string)", span="91-91", cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)"];
n26 [label="Assert.Equal(input.Hyphenate(), expectedOutput)", span="93-93", cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)"];
n27 [label="Exit Humanizer.Tests.InflectorTests.Hyphenate(string, string)", span="91-91", cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)"];
n28 [label="Entry string.Hyphenate()", span="114-114", cluster="string.Hyphenate()"];
n29 [label="Entry Humanizer.Tests.InflectorTests.Pascalize(string, string)", span="104-104", cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)"];
n30 [label="Assert.Equal(expectedOutput, input.Pascalize())", span="106-106", cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)"];
n31 [label="Exit Humanizer.Tests.InflectorTests.Pascalize(string, string)", span="104-104", cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)"];
n32 [label="Entry string.Pascalize()", span="71-71", cluster="string.Pascalize()"];
n33 [label="Entry Humanizer.Tests.InflectorTests.Camelize(string, string)", span="118-118", cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)"];
n34 [label="Assert.Equal(expectedOutput, input.Camelize())", span="120-120", cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)"];
n35 [label="Exit Humanizer.Tests.InflectorTests.Camelize(string, string)", span="118-118", cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)"];
n36 [label="Entry string.Camelize()", span="81-81", cluster="string.Camelize()"];
n37 [label="Entry Humanizer.Tests.InflectorTests.Underscore(string, string)", span="131-131", cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)"];
n38 [label="Assert.Equal(expectedOuput, input.Underscore())", span="133-133", cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)"];
n39 [label="Exit Humanizer.Tests.InflectorTests.Underscore(string, string)", span="131-131", cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)"];
n40 [label="Entry string.Underscore()", span="92-92", cluster="string.Underscore()"];
n41 [label="Entry Humanizer.Tests.PluralTestSource.GetEnumerator()", span="139-139", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n42 [label="yield return new object[] {''search'', ''searches''};", span="141-141", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n43 [label="yield return new object[] {''switch'', ''switches''};", span="142-142", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n44 [label="yield return new object[] {''fix'', ''fixes''};", span="143-143", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n45 [label="yield return new object[] {''box'', ''boxes''};", span="144-144", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n46 [label="yield return new object[] {''process'', ''processes''};", span="145-145", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n47 [label="yield return new object[] {''address'', ''addresses''};", span="146-146", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n48 [label="yield return new object[] {''case'', ''cases''};", span="147-147", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n49 [label="yield return new object[] {''stack'', ''stacks''};", span="148-148", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n50 [label="yield return new object[] {''wish'', ''wishes''};", span="149-149", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n51 [label="yield return new object[] {''fish'', ''fish''};", span="150-150", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n52 [label="yield return new object[] {''category'', ''categories''};", span="152-152", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n53 [label="yield return new object[] {''query'', ''queries''};", span="153-153", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n54 [label="yield return new object[] {''ability'', ''abilities''};", span="154-154", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n55 [label="yield return new object[] {''agency'', ''agencies''};", span="155-155", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n56 [label="yield return new object[] {''movie'', ''movies''};", span="156-156", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n57 [label="yield return new object[] {''archive'', ''archives''};", span="158-158", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n58 [label="yield return new object[] {''index'', ''indices''};", span="160-160", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n59 [label="yield return new object[] {''wife'', ''wives''};", span="162-162", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n60 [label="yield return new object[] {''safe'', ''saves''};", span="163-163", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n61 [label="yield return new object[] {''half'', ''halves''};", span="164-164", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n62 [label="yield return new object[] {''move'', ''moves''};", span="166-166", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n63 [label="yield return new object[] {''salesperson'', ''salespeople''};", span="168-168", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n64 [label="yield return new object[] {''person'', ''people''};", span="169-169", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n65 [label="yield return new object[] {''spokesman'', ''spokesmen''};", span="171-171", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n66 [label="yield return new object[] {''man'', ''men''};", span="172-172", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n67 [label="yield return new object[] {''woman'', ''women''};", span="173-173", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n68 [label="yield return new object[] {''basis'', ''bases''};", span="175-175", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n69 [label="yield return new object[] {''diagnosis'', ''diagnoses''};", span="176-176", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n70 [label="yield return new object[] {''datum'', ''data''};", span="178-178", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n71 [label="yield return new object[] {''medium'', ''media''};", span="179-179", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n72 [label="yield return new object[] {''analysis'', ''analyses''};", span="180-180", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n73 [label="yield return new object[] {''node_child'', ''node_children''};", span="182-182", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n74 [label="yield return new object[] {''child'', ''children''};", span="183-183", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n75 [label="yield return new object[] {''experience'', ''experiences''};", span="185-185", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n76 [label="yield return new object[] {''day'', ''days''};", span="186-186", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n77 [label="yield return new object[] {''comment'', ''comments''};", span="188-188", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n78 [label="yield return new object[] {''foobar'', ''foobars''};", span="189-189", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n79 [label="yield return new object[] {''newsletter'', ''newsletters''};", span="190-190", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n80 [label="yield return new object[] {''old_news'', ''old_news''};", span="192-192", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n81 [label="yield return new object[] {''news'', ''news''};", span="193-193", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n82 [label="yield return new object[] {''series'', ''series''};", span="195-195", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n83 [label="yield return new object[] {''species'', ''species''};", span="196-196", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n84 [label="yield return new object[] {''quiz'', ''quizzes''};", span="198-198", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n85 [label="yield return new object[] {''perspective'', ''perspectives''};", span="200-200", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n86 [label="yield return new object[] {''ox'', ''oxen''};", span="202-202", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n87 [label="yield return new object[] {''photo'', ''photos''};", span="203-203", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n88 [label="yield return new object[] {''buffalo'', ''buffaloes''};", span="204-204", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n89 [label="yield return new object[] {''tomato'', ''tomatoes''};", span="205-205", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n90 [label="yield return new object[] {''dwarf'', ''dwarves''};", span="206-206", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n91 [label="yield return new object[] {''elf'', ''elves''};", span="207-207", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n92 [label="yield return new object[] {''information'', ''information''};", span="208-208", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n93 [label="yield return new object[] {''equipment'', ''equipment''};", span="209-209", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n94 [label="yield return new object[] {''bus'', ''buses''};", span="210-210", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n95 [label="yield return new object[] {''status'', ''statuses''};", span="211-211", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n96 [label="yield return new object[] {''status_code'', ''status_codes''};", span="212-212", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n97 [label="yield return new object[] {''mouse'', ''mice''};", span="213-213", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n98 [label="yield return new object[] {''louse'', ''lice''};", span="215-215", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n99 [label="yield return new object[] {''house'', ''houses''};", span="216-216", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n100 [label="yield return new object[] {''octopus'', ''octopi''};", span="217-217", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n101 [label="yield return new object[] {''virus'', ''viri''};", span="218-218", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n102 [label="yield return new object[] {''alias'', ''aliases''};", span="219-219", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n103 [label="yield return new object[] {''portfolio'', ''portfolios''};", span="220-220", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n104 [label="yield return new object[] {''criterion'', ''criteria''};", span="221-221", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n105 [label="yield return new object[] {''vertex'', ''vertices''};", span="223-223", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n106 [label="yield return new object[] {''matrix'', ''matrices''};", span="224-224", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n107 [label="yield return new object[] {''axis'', ''axes''};", span="226-226", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n108 [label="yield return new object[] {''testis'', ''testes''};", span="227-227", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n109 [label="yield return new object[] {''crisis'', ''crises''};", span="228-228", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n110 [label="yield return new object[] {''rice'', ''rice''};", span="230-230", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n111 [label="yield return new object[] {''shoe'', ''shoes''};", span="231-231", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n112 [label="yield return new object[] {''horse'', ''horses''};", span="233-233", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n113 [label="yield return new object[] {''prize'', ''prizes''};", span="234-234", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n114 [label="yield return new object[] {''edge'', ''edges''};", span="235-235", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n115 [label="yield return new object[] {''goose'', ''geese''};", span="238-238", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n116 [label="yield return new object[] {''deer'', ''deer''};", span="239-239", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n117 [label="yield return new object[] {''sheep'', ''sheep''};", span="240-240", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n118 [label="yield return new object[] {''wolf'', ''wolves''};", span="241-241", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n119 [label="yield return new object[] {''volcano'', ''volcanoes''};", span="242-242", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n120 [label="yield return new object[] {''aircraft'', ''aircraft''};", span="243-243", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n121 [label="yield return new object[] {''alumna'', ''alumnae''};", span="244-244", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n122 [label="yield return new object[] {''alumnus'', ''alumni''};", span="245-245", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n123 [label="yield return new object[] {''fungus'', ''fungi''};", span="246-246", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n124 [label="yield return new object[] {''water'', ''water''};", span="247-247", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n125 [label="yield return new object[] {''waters'', ''waters''};", span="248-248", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n126 [label="yield return new object[] {''semen'', ''semen''};", span="249-249", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n127 [label="yield return new object[] {''sperm'', ''sperm''};", span="250-250", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n128 [label="yield return new object[] {''wave'',''waves''};", span="252-252", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n129 [label="yield return new object[] {''campus'', ''campuses''};", span="254-254", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n130 [label="yield return new object[] { ''is'', ''are'' };", span="256-256", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=red, community=0];
n131 [label="Exit Humanizer.Tests.PluralTestSource.GetEnumerator()", span="139-139", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()"];
n132 [label="Entry Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", span="259-259", cluster="Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()"];
n133 [label="return GetEnumerator();", span="261-261", cluster="Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()"];
n134 [label="Exit Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", span="259-259", cluster="Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()"];
d130 [label="yield return new object[] {''is'', ''are''};", span="256-256", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d131 [label="yield return new object[] {''addendum'',''addenda''};", span="259-259", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d132 [label="yield return new object[] {''alga'',''algae''};", span="260-260", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d133 [label="yield return new object[] {''apparatus'',''apparatuses''};", span="261-261", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d134 [label="yield return new object[] {''appendix'',''appendices''};", span="262-262", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d135 [label="yield return new object[] {''bias'',''biases''};", span="263-263", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d136 [label="yield return new object[] {''bison'',''bison''};", span="264-264", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d137 [label="yield return new object[] {''blitz'',''blitzes''};", span="265-265", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d138 [label="yield return new object[] {''buzz'',''buzzes''};", span="266-266", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d139 [label="yield return new object[] {''cactus'',''cacti''};", span="267-267", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d140 [label="yield return new object[] {''codex'',''codices''};", span="268-268", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d141 [label="yield return new object[] {''corps'',''corps''};", span="269-269", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d142 [label="yield return new object[] {''corpus'',''corpora''};", span="270-270", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d143 [label="yield return new object[] {''curriculum'',''curricula''};", span="271-271", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d144 [label="yield return new object[] {''database'',''databases''};", span="272-272", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d145 [label="yield return new object[] {''die'',''dice''};", span="273-273", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d146 [label="yield return new object[] {''echo'',''echoes''};", span="274-274", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d147 [label="yield return new object[] {''ellipsis'',''ellipses''};", span="275-275", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d148 [label="yield return new object[] {''elk'',''elk''};", span="276-276", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d149 [label="yield return new object[] {''emphasis'',''emphases''};", span="277-277", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d150 [label="yield return new object[] {''embargo'',''embargoes''};", span="278-278", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d151 [label="yield return new object[] {''focus'',''foci''};", span="279-279", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d152 [label="yield return new object[] {''foot'',''feet''};", span="280-280", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d153 [label="yield return new object[] {''genus'',''genera''};", span="281-281", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d154 [label="yield return new object[] {''grass'',''grass''};", span="282-282", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d155 [label="yield return new object[] {''hair'',''hair''};", span="283-283", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d156 [label="yield return new object[] {''hero'',''heroes''};", span="284-284", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d157 [label="yield return new object[] {''hippopotamus'',''hippopotami''};", span="285-285", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d158 [label="yield return new object[] {''hoof'',''hooves''};", span="286-286", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d159 [label="yield return new object[] {''iris'',''irises''};", span="287-287", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d160 [label="yield return new object[] {''larva'',''larvae''};", span="288-288", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d161 [label="yield return new object[] {''leaf'',''leaves''};", span="289-289", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d162 [label="yield return new object[] {''loaf'',''loaves''};", span="290-290", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d163 [label="yield return new object[] {''luggage'',''luggage''};", span="291-291", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d164 [label="yield return new object[] {''means'',''means''};", span="292-292", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d165 [label="yield return new object[] {''millennium'',''milennia''};", span="293-293", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d166 [label="yield return new object[] {''minutia'',''minutiae''};", span="294-294", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d167 [label="yield return new object[] {''moose'',''moose''};", span="295-295", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d168 [label="yield return new object[] {''mosquito'',''mosquitoes''};", span="296-296", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d169 [label="yield return new object[] {''mud'',''mud''};", span="297-297", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d170 [label="yield return new object[] {''nucleus'',''nuclei''};", span="298-298", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d171 [label="yield return new object[] {''neurosis'',''neuroses''};", span="299-299", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d172 [label="yield return new object[] {''oasis'',''oases''};", span="300-300", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d173 [label="yield return new object[] {''offspring'',''offspring''};", span="301-301", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d174 [label="yield return new object[] {''paralysis'',''paralyses''};", span="302-302", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d175 [label="yield return new object[] {''phenomenon'',''phenomena''};", span="303-303", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d176 [label="yield return new object[] {''potato'',''potatoes''};", span="304-304", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d177 [label="yield return new object[] {''radius'',''radii''};", span="305-305", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d178 [label="yield return new object[] {''salmon'',''salmon''};", span="306-306", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d179 [label="yield return new object[] {''scissors'',''scissors''};", span="307-307", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d180 [label="yield return new object[] {''shoe'',''shoees''};", span="308-308", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d181 [label="yield return new object[] {''shrimp'',''shrimp''};", span="309-309", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d182 [label="yield return new object[] {''someone'',''someone''};", span="310-310", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d183 [label="yield return new object[] {''stimulus'',''stimuli''};", span="311-311", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d184 [label="yield return new object[] {''swine'',''swine''};", span="312-312", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d185 [label="yield return new object[] {''syllabus'',''syllabi''};", span="313-313", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d186 [label="yield return new object[] {''that'',''those''};", span="314-314", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d187 [label="yield return new object[] {''thief'',''thieves''};", span="315-315", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d188 [label="yield return new object[] {''this'',''these''};", span="316-316", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d189 [label="yield return new object[] {''tooth'',''teeth''};", span="317-317", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d190 [label="yield return new object[] {''torpedo'',''torpedoes''};", span="318-318", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d191 [label="yield return new object[] {''trellis'',''trellises''};", span="319-319", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d192 [label="yield return new object[] {''trout'',''trout''};", span="320-320", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d193 [label="yield return new object[] {''tuna'',''tuna''};", span="321-321", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d194 [label="yield return new object[] {''vertebra'',''vertebrae''};", span="322-322", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d195 [label="yield return new object[] {''veto'',''vetoes''};", span="323-323", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d196 [label="yield return new object[] {''virus'',''viruses''};", span="324-324", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d197 [label="yield return new object[] {''vita'',''vitae''};", span="325-325", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d198 [label="yield return new object[] {''walrus'',''walruses''};", span="326-326", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d199 [label="yield return new object[] {''waltz'',''waltzes''};", span="327-327", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d200 [label="yield return new object[] {''water'',''water''};", span="328-328", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
d201 [label="yield return new object[] {''zombie'',''zombies''};", span="329-329", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", color=green, community=0];
m0_6 [label="Assert.Equal(plural, plural.Pluralize(false))", span="44-44", cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", file="Vocabularies.cs"];
m0_7 [label="Assert.Equal(plural, singular.Pluralize(false))", span="45-45", cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", file="Vocabularies.cs"];
m0_28 [label="Entry string.Hyphenate()", span="138-138", cluster="string.Hyphenate()", file="Vocabularies.cs"];
m0_21 [label="Entry Humanizer.Tests.InflectorTests.Dasherize(string, string)", span="81-81", cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", file="Vocabularies.cs"];
m0_22 [label="Assert.Equal(input.Dasherize(), expectedOutput)", span="83-83", cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", file="Vocabularies.cs"];
m0_23 [label="Exit Humanizer.Tests.InflectorTests.Dasherize(string, string)", span="81-81", cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", file="Vocabularies.cs"];
m0_33 [label="Entry Humanizer.Tests.InflectorTests.Camelize(string, string)", span="118-118", cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)", file="Vocabularies.cs"];
m0_34 [label="Assert.Equal(expectedOutput, input.Camelize())", span="120-120", cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)", file="Vocabularies.cs", color=green, community=0];
m0_35 [label="Exit Humanizer.Tests.InflectorTests.Camelize(string, string)", span="118-118", cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)", file="Vocabularies.cs"];
m0_41 [label="Entry Humanizer.Tests.PluralTestSource.GetEnumerator()", span="139-139", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_42 [label="yield return new object[] {''search'', ''searches''};", span="141-141", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_43 [label="yield return new object[] {''switch'', ''switches''};", span="142-142", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_44 [label="yield return new object[] {''fix'', ''fixes''};", span="143-143", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_45 [label="yield return new object[] {''box'', ''boxes''};", span="144-144", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_46 [label="yield return new object[] {''process'', ''processes''};", span="145-145", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_47 [label="yield return new object[] {''address'', ''addresses''};", span="146-146", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_48 [label="yield return new object[] {''case'', ''cases''};", span="147-147", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_49 [label="yield return new object[] {''stack'', ''stacks''};", span="148-148", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_50 [label="yield return new object[] {''wish'', ''wishes''};", span="149-149", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_51 [label="yield return new object[] {''fish'', ''fish''};", span="150-150", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_52 [label="yield return new object[] {''category'', ''categories''};", span="152-152", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_53 [label="yield return new object[] {''query'', ''queries''};", span="153-153", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_54 [label="yield return new object[] {''ability'', ''abilities''};", span="154-154", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_55 [label="yield return new object[] {''agency'', ''agencies''};", span="155-155", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_56 [label="yield return new object[] {''movie'', ''movies''};", span="156-156", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_57 [label="yield return new object[] {''archive'', ''archives''};", span="158-158", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_58 [label="yield return new object[] {''index'', ''indices''};", span="160-160", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_59 [label="yield return new object[] {''wife'', ''wives''};", span="162-162", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_60 [label="yield return new object[] {''safe'', ''saves''};", span="163-163", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_61 [label="yield return new object[] {''half'', ''halves''};", span="164-164", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_62 [label="yield return new object[] {''move'', ''moves''};", span="166-166", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_63 [label="yield return new object[] {''salesperson'', ''salespeople''};", span="168-168", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_64 [label="yield return new object[] {''person'', ''people''};", span="169-169", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_65 [label="yield return new object[] {''spokesman'', ''spokesmen''};", span="171-171", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_66 [label="yield return new object[] {''man'', ''men''};", span="172-172", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_67 [label="yield return new object[] {''woman'', ''women''};", span="173-173", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_68 [label="yield return new object[] {''basis'', ''bases''};", span="175-175", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_69 [label="yield return new object[] {''diagnosis'', ''diagnoses''};", span="176-176", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_70 [label="yield return new object[] {''datum'', ''data''};", span="178-178", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_71 [label="yield return new object[] {''medium'', ''media''};", span="179-179", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_72 [label="yield return new object[] {''analysis'', ''analyses''};", span="180-180", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_73 [label="yield return new object[] {''node_child'', ''node_children''};", span="182-182", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_74 [label="yield return new object[] {''child'', ''children''};", span="183-183", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_75 [label="yield return new object[] {''experience'', ''experiences''};", span="185-185", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_76 [label="yield return new object[] {''day'', ''days''};", span="186-186", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_77 [label="yield return new object[] {''comment'', ''comments''};", span="188-188", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_78 [label="yield return new object[] {''foobar'', ''foobars''};", span="189-189", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_79 [label="yield return new object[] {''newsletter'', ''newsletters''};", span="190-190", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_80 [label="yield return new object[] {''old_news'', ''old_news''};", span="192-192", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_81 [label="yield return new object[] {''news'', ''news''};", span="193-193", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_82 [label="yield return new object[] {''series'', ''series''};", span="195-195", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_83 [label="yield return new object[] {''species'', ''species''};", span="196-196", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_84 [label="yield return new object[] {''quiz'', ''quizzes''};", span="198-198", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_85 [label="yield return new object[] {''perspective'', ''perspectives''};", span="200-200", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_86 [label="yield return new object[] {''ox'', ''oxen''};", span="202-202", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_87 [label="yield return new object[] {''photo'', ''photos''};", span="203-203", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_88 [label="yield return new object[] {''buffalo'', ''buffaloes''};", span="204-204", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_89 [label="yield return new object[] {''tomato'', ''tomatoes''};", span="205-205", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_90 [label="yield return new object[] {''dwarf'', ''dwarves''};", span="206-206", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_91 [label="yield return new object[] {''elf'', ''elves''};", span="207-207", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_92 [label="yield return new object[] {''information'', ''information''};", span="208-208", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_93 [label="yield return new object[] {''equipment'', ''equipment''};", span="209-209", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_94 [label="yield return new object[] {''bus'', ''buses''};", span="210-210", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_95 [label="yield return new object[] {''status'', ''statuses''};", span="211-211", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_96 [label="yield return new object[] {''status_code'', ''status_codes''};", span="212-212", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_97 [label="yield return new object[] {''mouse'', ''mice''};", span="213-213", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_98 [label="yield return new object[] {''louse'', ''lice''};", span="215-215", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_99 [label="yield return new object[] {''house'', ''houses''};", span="216-216", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_100 [label="yield return new object[] {''octopus'', ''octopi''};", span="217-217", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_101 [label="yield return new object[] {''virus'', ''viri''};", span="218-218", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_102 [label="yield return new object[] {''alias'', ''aliases''};", span="219-219", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_103 [label="yield return new object[] {''portfolio'', ''portfolios''};", span="220-220", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_104 [label="yield return new object[] {''criterion'', ''criteria''};", span="221-221", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_105 [label="yield return new object[] {''vertex'', ''vertices''};", span="223-223", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_106 [label="yield return new object[] {''matrix'', ''matrices''};", span="224-224", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_107 [label="yield return new object[] {''axis'', ''axes''};", span="226-226", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_108 [label="yield return new object[] {''testis'', ''testes''};", span="227-227", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_109 [label="yield return new object[] {''crisis'', ''crises''};", span="228-228", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_110 [label="yield return new object[] {''rice'', ''rice''};", span="230-230", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_111 [label="yield return new object[] {''shoe'', ''shoes''};", span="231-231", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_112 [label="yield return new object[] {''horse'', ''horses''};", span="233-233", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_113 [label="yield return new object[] {''prize'', ''prizes''};", span="234-234", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_114 [label="yield return new object[] {''edge'', ''edges''};", span="235-235", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_115 [label="yield return new object[] {''goose'', ''geese''};", span="238-238", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_116 [label="yield return new object[] {''deer'', ''deer''};", span="239-239", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_117 [label="yield return new object[] {''sheep'', ''sheep''};", span="240-240", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_118 [label="yield return new object[] {''wolf'', ''wolves''};", span="241-241", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_119 [label="yield return new object[] {''volcano'', ''volcanoes''};", span="242-242", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_120 [label="yield return new object[] {''aircraft'', ''aircraft''};", span="243-243", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_121 [label="yield return new object[] {''alumna'', ''alumnae''};", span="244-244", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_122 [label="yield return new object[] {''alumnus'', ''alumni''};", span="245-245", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_123 [label="yield return new object[] {''fungus'', ''fungi''};", span="246-246", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_124 [label="yield return new object[] {''wave'',''waves''};", span="248-248", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_125 [label="yield return new object[] {''campus'', ''campuses''};", span="250-250", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_126 [label="yield return new object[] { ''is'', ''are'' };", span="252-252", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_127 [label="Exit Humanizer.Tests.PluralTestSource.GetEnumerator()", span="139-139", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="Vocabularies.cs"];
m0_4 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="Vocabularies.cs"];
m0_13 [label="Entry Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", span="57-57", cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", file="Vocabularies.cs"];
m0_14 [label="Assert.Equal(singular, singular.Singularize(false))", span="59-59", cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", file="Vocabularies.cs"];
m0_15 [label="Assert.Equal(singular, plural.Singularize(false))", span="60-60", cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", file="Vocabularies.cs"];
m0_16 [label="Exit Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", span="57-57", cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", file="Vocabularies.cs"];
m0_37 [label="Entry Humanizer.Tests.InflectorTests.Underscore(string, string)", span="131-131", cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)", file="Vocabularies.cs"];
m0_38 [label="Assert.Equal(expectedOuput, input.Underscore())", span="133-133", cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)", file="Vocabularies.cs"];
m0_39 [label="Exit Humanizer.Tests.InflectorTests.Underscore(string, string)", span="131-131", cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)", file="Vocabularies.cs"];
m0_32 [label="Entry string.Pascalize()", span="95-95", cluster="string.Pascalize()", file="Vocabularies.cs"];
m0_17 [label="Entry Humanizer.Tests.InflectorTests.Titleize(string, string)", span="71-71", cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", file="Vocabularies.cs"];
m0_18 [label="Assert.Equal(expectedOuput, input.Titleize())", span="73-73", cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", file="Vocabularies.cs"];
m0_19 [label="Exit Humanizer.Tests.InflectorTests.Titleize(string, string)", span="71-71", cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", file="Vocabularies.cs"];
m0_20 [label="Entry string.Titleize()", span="85-85", cluster="string.Titleize()", file="Vocabularies.cs"];
m0_0 [label="Entry Humanizer.Tests.InflectorTests.Pluralize(string, string)", span="35-35", cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)", file="Vocabularies.cs"];
m0_1 [label="Assert.Equal(plural, singular.Pluralize())", span="37-37", cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)", color=green, community=0, file="Vocabularies.cs"];
m0_2 [label="Exit Humanizer.Tests.InflectorTests.Pluralize(string, string)", span="35-35", cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)", file="Vocabularies.cs"];
m0_3 [label="Entry string.Pluralize(bool)", span="52-52", cluster="string.Pluralize(bool)", file="Vocabularies.cs"];
m0_12 [label="Entry string.Singularize(bool)", span="75-75", cluster="string.Singularize(bool)", file="Vocabularies.cs"];
m0_24 [label="Entry string.Dasherize()", span="128-128", cluster="string.Dasherize()", file="Vocabularies.cs"];
m0_9 [label="Entry Humanizer.Tests.InflectorTests.Singularize(string, string)", span="50-50", cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", file="Vocabularies.cs"];
m0_10 [label="Assert.Equal(singular, plural.Singularize())", span="52-52", cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", file="Vocabularies.cs"];
m0_11 [label="Exit Humanizer.Tests.InflectorTests.Singularize(string, string)", span="50-50", cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", file="Vocabularies.cs"];
m0_29 [label="Entry Humanizer.Tests.InflectorTests.Pascalize(string, string)", span="104-104", cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", file="Vocabularies.cs"];
m0_30 [label="Assert.Equal(expectedOutput, input.Pascalize())", span="106-106", cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", file="Vocabularies.cs"];
m0_31 [label="Exit Humanizer.Tests.InflectorTests.Pascalize(string, string)", span="104-104", cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", file="Vocabularies.cs"];
m0_25 [label="Entry Humanizer.Tests.InflectorTests.Hyphenate(string, string)", span="91-91", cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)", file="Vocabularies.cs"];
m0_26 [label="Assert.Equal(input.Hyphenate(), expectedOutput)", span="93-93", cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)", file="Vocabularies.cs"];
m0_27 [label="Exit Humanizer.Tests.InflectorTests.Hyphenate(string, string)", span="91-91", cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)", file="Vocabularies.cs"];
m0_128 [label="Entry Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", span="255-255", cluster="Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", file="Vocabularies.cs"];
m0_129 [label="return GetEnumerator();", span="257-257", cluster="Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", file="Vocabularies.cs"];
m0_130 [label="Exit Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", span="255-255", cluster="Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", file="Vocabularies.cs"];
m0_36 [label="Entry string.Camelize()", span="105-105", cluster="string.Camelize()", file="Vocabularies.cs"];
m0_40 [label="Entry string.Underscore()", span="116-116", cluster="string.Underscore()", file="Vocabularies.cs"];
m0_131 [label="Humanizer.Tests.PluralTestSource", span="", file="Vocabularies.cs"];
n135 -> n133  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.PluralTestSource"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=2, style=dotted];
n1 -> n4  [key=2, style=dotted];
n2 -> n0  [key=0, style=bold, color=blue];
n5 -> n6  [key=0, style=solid];
n5 -> n7  [key=1, style=dashed, color=darkseagreen4, label=string];
n6 -> n7  [key=0, style=solid];
n6 -> n3  [key=2, style=dotted];
n6 -> n4  [key=2, style=dotted];
n7 -> n8  [key=0, style=solid];
n7 -> n3  [key=2, style=dotted];
n7 -> n4  [key=2, style=dotted];
n8 -> n5  [key=0, style=bold, color=blue];
n9 -> n10  [key=0, style=solid];
n10 -> n11  [key=0, style=solid];
n10 -> n12  [key=2, style=dotted];
n10 -> n4  [key=2, style=dotted];
n11 -> n9  [key=0, style=bold, color=blue];
n13 -> n14  [key=0, style=solid];
n13 -> n15  [key=1, style=dashed, color=darkseagreen4, label=string];
n14 -> n15  [key=0, style=solid];
n14 -> n12  [key=2, style=dotted];
n14 -> n4  [key=2, style=dotted];
n15 -> n16  [key=0, style=solid];
n15 -> n12  [key=2, style=dotted];
n15 -> n4  [key=2, style=dotted];
n16 -> n13  [key=0, style=bold, color=blue];
n17 -> n18  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n18 -> n20  [key=2, style=dotted];
n18 -> n4  [key=2, style=dotted];
n19 -> n17  [key=0, style=bold, color=blue];
n21 -> n22  [key=0, style=solid];
n22 -> n23  [key=0, style=solid];
n22 -> n24  [key=2, style=dotted];
n22 -> n4  [key=2, style=dotted];
n23 -> n21  [key=0, style=bold, color=blue];
n25 -> n26  [key=0, style=solid];
n26 -> n27  [key=0, style=solid];
n26 -> n28  [key=2, style=dotted];
n26 -> n4  [key=2, style=dotted];
n27 -> n25  [key=0, style=bold, color=blue];
n29 -> n30  [key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n30 -> n32  [key=2, style=dotted];
n30 -> n4  [key=2, style=dotted];
n31 -> n29  [key=0, style=bold, color=blue];
n33 -> n34  [key=0, style=solid];
n34 -> n35  [key=0, style=solid];
n34 -> n36  [key=2, style=dotted];
n34 -> n4  [key=2, style=dotted];
n35 -> n33  [key=0, style=bold, color=blue];
n37 -> n38  [key=0, style=solid];
n38 -> n39  [key=0, style=solid];
n38 -> n40  [key=2, style=dotted];
n38 -> n4  [key=2, style=dotted];
n39 -> n37  [key=0, style=bold, color=blue];
n41 -> n42  [key=0, style=solid];
n41 -> n43  [key=0, style=bold, color=crimson];
n41 -> n44  [key=0, style=bold, color=crimson];
n41 -> n45  [key=0, style=bold, color=crimson];
n41 -> n46  [key=0, style=bold, color=crimson];
n41 -> n47  [key=0, style=bold, color=crimson];
n41 -> n48  [key=0, style=bold, color=crimson];
n41 -> n49  [key=0, style=bold, color=crimson];
n41 -> n50  [key=0, style=bold, color=crimson];
n41 -> n51  [key=0, style=bold, color=crimson];
n41 -> n52  [key=0, style=bold, color=crimson];
n41 -> n53  [key=0, style=bold, color=crimson];
n41 -> n54  [key=0, style=bold, color=crimson];
n41 -> n55  [key=0, style=bold, color=crimson];
n41 -> n56  [key=0, style=bold, color=crimson];
n41 -> n57  [key=0, style=bold, color=crimson];
n41 -> n58  [key=0, style=bold, color=crimson];
n41 -> n59  [key=0, style=bold, color=crimson];
n41 -> n60  [key=0, style=bold, color=crimson];
n41 -> n61  [key=0, style=bold, color=crimson];
n41 -> n62  [key=0, style=bold, color=crimson];
n41 -> n63  [key=0, style=bold, color=crimson];
n41 -> n64  [key=0, style=bold, color=crimson];
n41 -> n65  [key=0, style=bold, color=crimson];
n41 -> n66  [key=0, style=bold, color=crimson];
n41 -> n67  [key=0, style=bold, color=crimson];
n41 -> n68  [key=0, style=bold, color=crimson];
n41 -> n69  [key=0, style=bold, color=crimson];
n41 -> n70  [key=0, style=bold, color=crimson];
n41 -> n71  [key=0, style=bold, color=crimson];
n41 -> n72  [key=0, style=bold, color=crimson];
n41 -> n73  [key=0, style=bold, color=crimson];
n41 -> n74  [key=0, style=bold, color=crimson];
n41 -> n75  [key=0, style=bold, color=crimson];
n41 -> n76  [key=0, style=bold, color=crimson];
n41 -> n77  [key=0, style=bold, color=crimson];
n41 -> n78  [key=0, style=bold, color=crimson];
n41 -> n79  [key=0, style=bold, color=crimson];
n41 -> n80  [key=0, style=bold, color=crimson];
n41 -> n81  [key=0, style=bold, color=crimson];
n41 -> n82  [key=0, style=bold, color=crimson];
n41 -> n83  [key=0, style=bold, color=crimson];
n41 -> n84  [key=0, style=bold, color=crimson];
n41 -> n85  [key=0, style=bold, color=crimson];
n41 -> n86  [key=0, style=bold, color=crimson];
n41 -> n87  [key=0, style=bold, color=crimson];
n41 -> n88  [key=0, style=bold, color=crimson];
n41 -> n89  [key=0, style=bold, color=crimson];
n41 -> n90  [key=0, style=bold, color=crimson];
n41 -> n91  [key=0, style=bold, color=crimson];
n41 -> n92  [key=0, style=bold, color=crimson];
n41 -> n93  [key=0, style=bold, color=crimson];
n41 -> n94  [key=0, style=bold, color=crimson];
n41 -> n95  [key=0, style=bold, color=crimson];
n41 -> n96  [key=0, style=bold, color=crimson];
n41 -> n97  [key=0, style=bold, color=crimson];
n41 -> n98  [key=0, style=bold, color=crimson];
n41 -> n99  [key=0, style=bold, color=crimson];
n41 -> n100  [key=0, style=bold, color=crimson];
n41 -> n101  [key=0, style=bold, color=crimson];
n41 -> n102  [key=0, style=bold, color=crimson];
n41 -> n103  [key=0, style=bold, color=crimson];
n41 -> n104  [key=0, style=bold, color=crimson];
n41 -> n105  [key=0, style=bold, color=crimson];
n41 -> n106  [key=0, style=bold, color=crimson];
n41 -> n107  [key=0, style=bold, color=crimson];
n41 -> n108  [key=0, style=bold, color=crimson];
n41 -> n109  [key=0, style=bold, color=crimson];
n41 -> n110  [key=0, style=bold, color=crimson];
n41 -> n111  [key=0, style=bold, color=crimson];
n41 -> n112  [key=0, style=bold, color=crimson];
n41 -> n113  [key=0, style=bold, color=crimson];
n41 -> n114  [key=0, style=bold, color=crimson];
n41 -> n115  [key=0, style=bold, color=crimson];
n41 -> n116  [key=0, style=bold, color=crimson];
n41 -> n117  [key=0, style=bold, color=crimson];
n41 -> n118  [key=0, style=bold, color=crimson];
n41 -> n119  [key=0, style=bold, color=crimson];
n41 -> n120  [key=0, style=bold, color=crimson];
n41 -> n121  [key=0, style=bold, color=crimson];
n41 -> n122  [key=0, style=bold, color=crimson];
n41 -> n123  [key=0, style=bold, color=crimson];
n41 -> n124  [key=0, style=bold, color=crimson];
n41 -> n125  [key=0, style=bold, color=crimson];
n41 -> n126  [key=0, style=bold, color=crimson];
n41 -> n127  [key=0, style=bold, color=crimson];
n41 -> n128  [key=0, style=bold, color=crimson];
n41 -> n129  [key=0, style=bold, color=crimson];
n41 -> n130  [key=0, style=bold, color=red];
n41 -> d130  [key=0, style=bold, color=green];
n41 -> d131  [key=0, style=bold, color=green];
n41 -> d132  [key=0, style=bold, color=green];
n41 -> d133  [key=0, style=bold, color=green];
n41 -> d134  [key=0, style=bold, color=green];
n41 -> d135  [key=0, style=bold, color=green];
n41 -> d136  [key=0, style=bold, color=green];
n41 -> d137  [key=0, style=bold, color=green];
n41 -> d138  [key=0, style=bold, color=green];
n41 -> d139  [key=0, style=bold, color=green];
n41 -> d140  [key=0, style=bold, color=green];
n41 -> d141  [key=0, style=bold, color=green];
n41 -> d142  [key=0, style=bold, color=green];
n41 -> d143  [key=0, style=bold, color=green];
n41 -> d144  [key=0, style=bold, color=green];
n41 -> d145  [key=0, style=bold, color=green];
n41 -> d146  [key=0, style=bold, color=green];
n41 -> d147  [key=0, style=bold, color=green];
n41 -> d148  [key=0, style=bold, color=green];
n41 -> d149  [key=0, style=bold, color=green];
n41 -> d150  [key=0, style=bold, color=green];
n41 -> d151  [key=0, style=bold, color=green];
n41 -> d152  [key=0, style=bold, color=green];
n41 -> d153  [key=0, style=bold, color=green];
n41 -> d154  [key=0, style=bold, color=green];
n41 -> d155  [key=0, style=bold, color=green];
n41 -> d156  [key=0, style=bold, color=green];
n41 -> d157  [key=0, style=bold, color=green];
n41 -> d158  [key=0, style=bold, color=green];
n41 -> d159  [key=0, style=bold, color=green];
n41 -> d160  [key=0, style=bold, color=green];
n41 -> d161  [key=0, style=bold, color=green];
n41 -> d162  [key=0, style=bold, color=green];
n41 -> d163  [key=0, style=bold, color=green];
n41 -> d164  [key=0, style=bold, color=green];
n41 -> d165  [key=0, style=bold, color=green];
n41 -> d166  [key=0, style=bold, color=green];
n41 -> d167  [key=0, style=bold, color=green];
n41 -> d168  [key=0, style=bold, color=green];
n41 -> d169  [key=0, style=bold, color=green];
n41 -> d170  [key=0, style=bold, color=green];
n41 -> d171  [key=0, style=bold, color=green];
n41 -> d172  [key=0, style=bold, color=green];
n41 -> d173  [key=0, style=bold, color=green];
n41 -> d174  [key=0, style=bold, color=green];
n41 -> d175  [key=0, style=bold, color=green];
n41 -> d176  [key=0, style=bold, color=green];
n41 -> d177  [key=0, style=bold, color=green];
n41 -> d178  [key=0, style=bold, color=green];
n41 -> d179  [key=0, style=bold, color=green];
n41 -> d180  [key=0, style=bold, color=green];
n41 -> d181  [key=0, style=bold, color=green];
n41 -> d182  [key=0, style=bold, color=green];
n41 -> d183  [key=0, style=bold, color=green];
n41 -> d184  [key=0, style=bold, color=green];
n41 -> d185  [key=0, style=bold, color=green];
n41 -> d186  [key=0, style=bold, color=green];
n41 -> d187  [key=0, style=bold, color=green];
n41 -> d188  [key=0, style=bold, color=green];
n41 -> d189  [key=0, style=bold, color=green];
n41 -> d190  [key=0, style=bold, color=green];
n41 -> d191  [key=0, style=bold, color=green];
n41 -> d192  [key=0, style=bold, color=green];
n41 -> d193  [key=0, style=bold, color=green];
n41 -> d194  [key=0, style=bold, color=green];
n41 -> d195  [key=0, style=bold, color=green];
n41 -> d196  [key=0, style=bold, color=green];
n41 -> d197  [key=0, style=bold, color=green];
n41 -> d198  [key=0, style=bold, color=green];
n41 -> d199  [key=0, style=bold, color=green];
n41 -> d200  [key=0, style=bold, color=green];
n41 -> d201  [key=0, style=bold, color=green];
n42 -> n43  [key=0, style=solid];
n43 -> n44  [key=0, style=solid];
n44 -> n45  [key=0, style=solid];
n45 -> n46  [key=0, style=solid];
n46 -> n47  [key=0, style=solid];
n47 -> n48  [key=0, style=solid];
n48 -> n49  [key=0, style=solid];
n49 -> n50  [key=0, style=solid];
n50 -> n51  [key=0, style=solid];
n51 -> n52  [key=0, style=solid];
n52 -> n53  [key=0, style=solid];
n53 -> n54  [key=0, style=solid];
n54 -> n55  [key=0, style=solid];
n55 -> n56  [key=0, style=solid];
n56 -> n57  [key=0, style=solid];
n57 -> n58  [key=0, style=solid];
n58 -> n59  [key=0, style=solid];
n59 -> n60  [key=0, style=solid];
n60 -> n61  [key=0, style=solid];
n61 -> n62  [key=0, style=solid];
n62 -> n63  [key=0, style=solid];
n63 -> n64  [key=0, style=solid];
n64 -> n65  [key=0, style=solid];
n65 -> n66  [key=0, style=solid];
n66 -> n67  [key=0, style=solid];
n67 -> n68  [key=0, style=solid];
n68 -> n69  [key=0, style=solid];
n69 -> n70  [key=0, style=solid];
n70 -> n71  [key=0, style=solid];
n71 -> n72  [key=0, style=solid];
n72 -> n73  [key=0, style=solid];
n73 -> n74  [key=0, style=solid];
n74 -> n75  [key=0, style=solid];
n75 -> n76  [key=0, style=solid];
n76 -> n77  [key=0, style=solid];
n77 -> n78  [key=0, style=solid];
n78 -> n79  [key=0, style=solid];
n79 -> n80  [key=0, style=solid];
n80 -> n81  [key=0, style=solid];
n81 -> n82  [key=0, style=solid];
n82 -> n83  [key=0, style=solid];
n83 -> n84  [key=0, style=solid];
n84 -> n85  [key=0, style=solid];
n85 -> n86  [key=0, style=solid];
n86 -> n87  [key=0, style=solid];
n87 -> n88  [key=0, style=solid];
n88 -> n89  [key=0, style=solid];
n89 -> n90  [key=0, style=solid];
n90 -> n91  [key=0, style=solid];
n91 -> n92  [key=0, style=solid];
n92 -> n93  [key=0, style=solid];
n93 -> n94  [key=0, style=solid];
n94 -> n95  [key=0, style=solid];
n95 -> n96  [key=0, style=solid];
n96 -> n97  [key=0, style=solid];
n97 -> n98  [key=0, style=solid];
n98 -> n99  [key=0, style=solid];
n99 -> n100  [key=0, style=solid];
n100 -> n101  [key=0, style=solid];
n101 -> n102  [key=0, style=solid];
n102 -> n103  [key=0, style=solid];
n103 -> n104  [key=0, style=solid];
n104 -> n105  [key=0, style=solid];
n105 -> n106  [key=0, style=solid];
n106 -> n107  [key=0, style=solid];
n107 -> n108  [key=0, style=solid];
n108 -> n109  [key=0, style=solid];
n109 -> n110  [key=0, style=solid];
n110 -> n111  [key=0, style=solid];
n111 -> n112  [key=0, style=solid];
n112 -> n113  [key=0, style=solid];
n113 -> n114  [key=0, style=solid];
n114 -> n115  [key=0, style=solid];
n115 -> n116  [key=0, style=solid];
n116 -> n117  [key=0, style=solid];
n117 -> n118  [key=0, style=solid];
n118 -> n119  [key=0, style=solid];
n119 -> n120  [key=0, style=solid];
n120 -> n121  [key=0, style=solid];
n121 -> n122  [key=0, style=solid];
n122 -> n123  [key=0, style=solid];
n123 -> n124  [key=0, style=solid];
n124 -> n125  [key=0, style=solid];
n125 -> n126  [key=0, style=solid];
n126 -> n127  [key=0, style=solid];
n127 -> n128  [key=0, style=solid];
n128 -> n129  [key=0, style=solid];
n129 -> n130  [key=0, style=solid, color=red];
n129 -> d130  [key=0, style=solid, color=green];
n130 -> n131  [key=0, style=solid, color=red];
n131 -> n41  [key=0, style=bold, color=blue];
n132 -> n133  [key=0, style=solid];
n132 -> n41  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator"];
n133 -> n134  [key=0, style=solid];
n133 -> n41  [key=2, style=dotted];
n134 -> n132  [key=0, style=bold, color=blue];
d130 -> d131  [key=0, style=solid, color=green];
d131 -> d132  [key=0, style=solid, color=green];
d132 -> d133  [key=0, style=solid, color=green];
d133 -> d134  [key=0, style=solid, color=green];
d134 -> d135  [key=0, style=solid, color=green];
d135 -> d136  [key=0, style=solid, color=green];
d136 -> d137  [key=0, style=solid, color=green];
d137 -> d138  [key=0, style=solid, color=green];
d138 -> d139  [key=0, style=solid, color=green];
d139 -> d140  [key=0, style=solid, color=green];
d140 -> d141  [key=0, style=solid, color=green];
d141 -> d142  [key=0, style=solid, color=green];
d142 -> d143  [key=0, style=solid, color=green];
d143 -> d144  [key=0, style=solid, color=green];
d144 -> d145  [key=0, style=solid, color=green];
d145 -> d146  [key=0, style=solid, color=green];
d146 -> d147  [key=0, style=solid, color=green];
d147 -> d148  [key=0, style=solid, color=green];
d148 -> d149  [key=0, style=solid, color=green];
d149 -> d150  [key=0, style=solid, color=green];
d150 -> d151  [key=0, style=solid, color=green];
d151 -> d152  [key=0, style=solid, color=green];
d152 -> d153  [key=0, style=solid, color=green];
d153 -> d154  [key=0, style=solid, color=green];
d154 -> d155  [key=0, style=solid, color=green];
d155 -> d156  [key=0, style=solid, color=green];
d156 -> d157  [key=0, style=solid, color=green];
d157 -> d158  [key=0, style=solid, color=green];
d158 -> d159  [key=0, style=solid, color=green];
d159 -> d160  [key=0, style=solid, color=green];
d160 -> d161  [key=0, style=solid, color=green];
d161 -> d162  [key=0, style=solid, color=green];
d162 -> d163  [key=0, style=solid, color=green];
d163 -> d164  [key=0, style=solid, color=green];
d164 -> d165  [key=0, style=solid, color=green];
d165 -> d166  [key=0, style=solid, color=green];
d166 -> d167  [key=0, style=solid, color=green];
d167 -> d168  [key=0, style=solid, color=green];
d168 -> d169  [key=0, style=solid, color=green];
d169 -> d170  [key=0, style=solid, color=green];
d170 -> d171  [key=0, style=solid, color=green];
d171 -> d172  [key=0, style=solid, color=green];
d172 -> d173  [key=0, style=solid, color=green];
d173 -> d174  [key=0, style=solid, color=green];
d174 -> d175  [key=0, style=solid, color=green];
d175 -> d176  [key=0, style=solid, color=green];
d176 -> d177  [key=0, style=solid, color=green];
d177 -> d178  [key=0, style=solid, color=green];
d178 -> d179  [key=0, style=solid, color=green];
d179 -> d180  [key=0, style=solid, color=green];
d180 -> d181  [key=0, style=solid, color=green];
d181 -> d182  [key=0, style=solid, color=green];
d182 -> d183  [key=0, style=solid, color=green];
d183 -> d184  [key=0, style=solid, color=green];
d184 -> d185  [key=0, style=solid, color=green];
d185 -> d186  [key=0, style=solid, color=green];
d186 -> d187  [key=0, style=solid, color=green];
d187 -> d188  [key=0, style=solid, color=green];
d188 -> d189  [key=0, style=solid, color=green];
d189 -> d190  [key=0, style=solid, color=green];
d190 -> d191  [key=0, style=solid, color=green];
d191 -> d192  [key=0, style=solid, color=green];
d192 -> d193  [key=0, style=solid, color=green];
d193 -> d194  [key=0, style=solid, color=green];
d194 -> d195  [key=0, style=solid, color=green];
d195 -> d196  [key=0, style=solid, color=green];
d196 -> d197  [key=0, style=solid, color=green];
d197 -> d198  [key=0, style=solid, color=green];
d198 -> d199  [key=0, style=solid, color=green];
d199 -> d200  [key=0, style=solid, color=green];
d200 -> d201  [key=0, style=solid, color=green];
d201 -> n131  [key=0, style=solid, color=green];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_3  [key=2, style=dotted];
m0_6 -> m0_4  [key=2, style=dotted];
m0_7 -> n8  [key=0, style=solid];
m0_7 -> m0_3  [key=2, style=dotted];
m0_7 -> m0_4  [key=2, style=dotted];
m0_21 -> m0_22  [key=0, style=solid];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_24  [key=2, style=dotted];
m0_22 -> m0_4  [key=2, style=dotted];
m0_23 -> m0_21  [key=0, style=bold, color=blue];
m0_33 -> m0_34  [key=0, style=solid, color=green];
m0_34 -> m0_35  [key=0, style=solid, color=green];
m0_34 -> m0_36  [key=2, style=dotted, color=green];
m0_34 -> m0_4  [key=2, style=dotted, color=green];
m0_35 -> m0_33  [key=0, style=bold, color=blue];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_43  [key=0, style=bold, color=crimson];
m0_41 -> m0_44  [key=0, style=bold, color=crimson];
m0_41 -> m0_45  [key=0, style=bold, color=crimson];
m0_41 -> m0_46  [key=0, style=bold, color=crimson];
m0_41 -> m0_47  [key=0, style=bold, color=crimson];
m0_41 -> m0_48  [key=0, style=bold, color=crimson];
m0_41 -> m0_49  [key=0, style=bold, color=crimson];
m0_41 -> m0_50  [key=0, style=bold, color=crimson];
m0_41 -> m0_51  [key=0, style=bold, color=crimson];
m0_41 -> m0_52  [key=0, style=bold, color=crimson];
m0_41 -> m0_53  [key=0, style=bold, color=crimson];
m0_41 -> m0_54  [key=0, style=bold, color=crimson];
m0_41 -> m0_55  [key=0, style=bold, color=crimson];
m0_41 -> m0_56  [key=0, style=bold, color=crimson];
m0_41 -> m0_57  [key=0, style=bold, color=crimson];
m0_41 -> m0_58  [key=0, style=bold, color=crimson];
m0_41 -> m0_59  [key=0, style=bold, color=crimson];
m0_41 -> m0_60  [key=0, style=bold, color=crimson];
m0_41 -> m0_61  [key=0, style=bold, color=crimson];
m0_41 -> m0_62  [key=0, style=bold, color=crimson];
m0_41 -> m0_63  [key=0, style=bold, color=crimson];
m0_41 -> m0_64  [key=0, style=bold, color=crimson];
m0_41 -> m0_65  [key=0, style=bold, color=crimson];
m0_41 -> m0_66  [key=0, style=bold, color=crimson];
m0_41 -> m0_67  [key=0, style=bold, color=crimson];
m0_41 -> m0_68  [key=0, style=bold, color=crimson];
m0_41 -> m0_69  [key=0, style=bold, color=crimson];
m0_41 -> m0_70  [key=0, style=bold, color=crimson];
m0_41 -> m0_71  [key=0, style=bold, color=crimson];
m0_41 -> m0_72  [key=0, style=bold, color=crimson];
m0_41 -> m0_73  [key=0, style=bold, color=crimson];
m0_41 -> m0_74  [key=0, style=bold, color=crimson];
m0_41 -> m0_75  [key=0, style=bold, color=crimson];
m0_41 -> m0_76  [key=0, style=bold, color=crimson];
m0_41 -> m0_77  [key=0, style=bold, color=crimson];
m0_41 -> m0_78  [key=0, style=bold, color=crimson];
m0_41 -> m0_79  [key=0, style=bold, color=crimson];
m0_41 -> m0_80  [key=0, style=bold, color=crimson];
m0_41 -> m0_81  [key=0, style=bold, color=crimson];
m0_41 -> m0_82  [key=0, style=bold, color=crimson];
m0_41 -> m0_83  [key=0, style=bold, color=crimson];
m0_41 -> m0_84  [key=0, style=bold, color=crimson];
m0_41 -> m0_85  [key=0, style=bold, color=crimson];
m0_41 -> m0_86  [key=0, style=bold, color=crimson];
m0_41 -> m0_87  [key=0, style=bold, color=crimson];
m0_41 -> m0_88  [key=0, style=bold, color=crimson];
m0_41 -> m0_89  [key=0, style=bold, color=crimson];
m0_41 -> m0_90  [key=0, style=bold, color=crimson];
m0_41 -> m0_91  [key=0, style=bold, color=crimson];
m0_41 -> m0_92  [key=0, style=bold, color=crimson];
m0_41 -> m0_93  [key=0, style=bold, color=crimson];
m0_41 -> m0_94  [key=0, style=bold, color=crimson];
m0_41 -> m0_95  [key=0, style=bold, color=crimson];
m0_41 -> m0_96  [key=0, style=bold, color=crimson];
m0_41 -> m0_97  [key=0, style=bold, color=crimson];
m0_41 -> m0_98  [key=0, style=bold, color=crimson];
m0_41 -> m0_99  [key=0, style=bold, color=crimson];
m0_41 -> m0_100  [key=0, style=bold, color=crimson];
m0_41 -> m0_101  [key=0, style=bold, color=crimson];
m0_41 -> m0_102  [key=0, style=bold, color=crimson];
m0_41 -> m0_103  [key=0, style=bold, color=crimson];
m0_41 -> m0_104  [key=0, style=bold, color=crimson];
m0_41 -> m0_105  [key=0, style=bold, color=crimson];
m0_41 -> m0_106  [key=0, style=bold, color=crimson];
m0_41 -> m0_107  [key=0, style=bold, color=crimson];
m0_41 -> m0_108  [key=0, style=bold, color=crimson];
m0_41 -> m0_109  [key=0, style=bold, color=crimson];
m0_41 -> m0_110  [key=0, style=bold, color=crimson];
m0_41 -> m0_111  [key=0, style=bold, color=crimson];
m0_41 -> m0_112  [key=0, style=bold, color=crimson];
m0_41 -> m0_113  [key=0, style=bold, color=crimson];
m0_41 -> m0_114  [key=0, style=bold, color=crimson];
m0_41 -> m0_115  [key=0, style=bold, color=crimson];
m0_41 -> m0_116  [key=0, style=bold, color=crimson];
m0_41 -> m0_117  [key=0, style=bold, color=crimson];
m0_41 -> m0_118  [key=0, style=bold, color=crimson];
m0_41 -> m0_119  [key=0, style=bold, color=crimson];
m0_41 -> m0_120  [key=0, style=bold, color=crimson];
m0_41 -> m0_121  [key=0, style=bold, color=crimson];
m0_41 -> m0_122  [key=0, style=bold, color=crimson];
m0_41 -> m0_123  [key=0, style=bold, color=crimson];
m0_41 -> m0_124  [key=0, style=bold, color=crimson];
m0_41 -> m0_125  [key=0, style=bold, color=crimson];
m0_41 -> m0_126  [key=0, style=bold, color=crimson];
m0_42 -> m0_43  [key=0, style=solid];
m0_43 -> m0_44  [key=0, style=solid];
m0_44 -> m0_45  [key=0, style=solid];
m0_45 -> m0_46  [key=0, style=solid];
m0_46 -> m0_47  [key=0, style=solid];
m0_47 -> m0_48  [key=0, style=solid];
m0_48 -> m0_49  [key=0, style=solid];
m0_49 -> m0_50  [key=0, style=solid];
m0_50 -> m0_51  [key=0, style=solid];
m0_51 -> m0_52  [key=0, style=solid];
m0_52 -> m0_53  [key=0, style=solid];
m0_53 -> m0_54  [key=0, style=solid];
m0_54 -> m0_55  [key=0, style=solid];
m0_55 -> m0_56  [key=0, style=solid];
m0_56 -> m0_57  [key=0, style=solid];
m0_57 -> m0_58  [key=0, style=solid];
m0_58 -> m0_59  [key=0, style=solid];
m0_59 -> m0_60  [key=0, style=solid];
m0_60 -> m0_61  [key=0, style=solid];
m0_61 -> m0_62  [key=0, style=solid];
m0_62 -> m0_63  [key=0, style=solid];
m0_63 -> m0_64  [key=0, style=solid];
m0_64 -> m0_65  [key=0, style=solid];
m0_65 -> m0_66  [key=0, style=solid];
m0_66 -> m0_67  [key=0, style=solid];
m0_67 -> m0_68  [key=0, style=solid];
m0_68 -> m0_69  [key=0, style=solid];
m0_69 -> m0_70  [key=0, style=solid];
m0_70 -> m0_71  [key=0, style=solid];
m0_71 -> m0_72  [key=0, style=solid];
m0_72 -> m0_73  [key=0, style=solid];
m0_73 -> m0_74  [key=0, style=solid];
m0_74 -> m0_75  [key=0, style=solid];
m0_75 -> m0_76  [key=0, style=solid];
m0_76 -> m0_77  [key=0, style=solid];
m0_77 -> m0_78  [key=0, style=solid];
m0_78 -> m0_79  [key=0, style=solid];
m0_79 -> m0_80  [key=0, style=solid];
m0_80 -> m0_81  [key=0, style=solid];
m0_81 -> m0_82  [key=0, style=solid];
m0_82 -> m0_83  [key=0, style=solid];
m0_83 -> m0_84  [key=0, style=solid];
m0_84 -> m0_85  [key=0, style=solid];
m0_85 -> m0_86  [key=0, style=solid];
m0_86 -> m0_87  [key=0, style=solid];
m0_87 -> m0_88  [key=0, style=solid];
m0_88 -> m0_89  [key=0, style=solid];
m0_89 -> m0_90  [key=0, style=solid];
m0_90 -> m0_91  [key=0, style=solid];
m0_91 -> m0_92  [key=0, style=solid];
m0_92 -> m0_93  [key=0, style=solid];
m0_93 -> m0_94  [key=0, style=solid];
m0_94 -> m0_95  [key=0, style=solid];
m0_95 -> m0_96  [key=0, style=solid];
m0_96 -> m0_97  [key=0, style=solid];
m0_97 -> m0_98  [key=0, style=solid];
m0_98 -> m0_99  [key=0, style=solid];
m0_99 -> m0_100  [key=0, style=solid];
m0_100 -> m0_101  [key=0, style=solid];
m0_101 -> m0_102  [key=0, style=solid];
m0_102 -> m0_103  [key=0, style=solid];
m0_103 -> m0_104  [key=0, style=solid];
m0_104 -> m0_105  [key=0, style=solid];
m0_105 -> m0_106  [key=0, style=solid];
m0_106 -> m0_107  [key=0, style=solid];
m0_107 -> m0_108  [key=0, style=solid];
m0_108 -> m0_109  [key=0, style=solid];
m0_109 -> m0_110  [key=0, style=solid];
m0_110 -> m0_111  [key=0, style=solid];
m0_111 -> m0_112  [key=0, style=solid];
m0_112 -> m0_113  [key=0, style=solid];
m0_113 -> m0_114  [key=0, style=solid];
m0_114 -> m0_115  [key=0, style=solid];
m0_115 -> m0_116  [key=0, style=solid];
m0_116 -> m0_117  [key=0, style=solid];
m0_117 -> m0_118  [key=0, style=solid];
m0_118 -> m0_119  [key=0, style=solid];
m0_119 -> m0_120  [key=0, style=solid];
m0_120 -> m0_121  [key=0, style=solid];
m0_121 -> m0_122  [key=0, style=solid];
m0_122 -> m0_123  [key=0, style=solid];
m0_123 -> m0_124  [key=0, style=solid];
m0_124 -> m0_125  [key=0, style=solid];
m0_125 -> m0_126  [key=0, style=solid];
m0_126 -> m0_127  [key=0, style=solid];
m0_127 -> m0_41  [key=0, style=bold, color=blue];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_12  [key=2, style=dotted];
m0_14 -> m0_4  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_12  [key=2, style=dotted];
m0_15 -> m0_4  [key=2, style=dotted];
m0_16 -> m0_13  [key=0, style=bold, color=blue];
m0_37 -> m0_38  [key=0, style=solid];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_40  [key=2, style=dotted];
m0_38 -> m0_4  [key=2, style=dotted];
m0_39 -> m0_37  [key=0, style=bold, color=blue];
m0_17 -> m0_18  [key=0, style=solid];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_20  [key=2, style=dotted];
m0_18 -> m0_4  [key=2, style=dotted];
m0_19 -> m0_17  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid, color=green];
m0_1 -> m0_2  [key=0, style=solid, color=green];
m0_1 -> m0_3  [key=2, style=dotted, color=green];
m0_1 -> m0_4  [key=2, style=dotted, color=green];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_9 -> m0_10  [key=0, style=solid];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_12  [key=2, style=dotted];
m0_10 -> m0_4  [key=2, style=dotted];
m0_11 -> m0_9  [key=0, style=bold, color=blue];
m0_29 -> m0_30  [key=0, style=solid];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_32  [key=2, style=dotted];
m0_30 -> m0_4  [key=2, style=dotted];
m0_31 -> m0_29  [key=0, style=bold, color=blue];
m0_25 -> m0_26  [key=0, style=solid];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_28  [key=2, style=dotted];
m0_26 -> m0_4  [key=2, style=dotted];
m0_27 -> m0_25  [key=0, style=bold, color=blue];
m0_128 -> m0_129  [key=0, style=solid];
m0_128 -> m0_41  [key=3, color=green, style=bold, label="method methodReturn System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator"];
m0_129 -> m0_130  [key=0, style=solid];
m0_129 -> m0_41  [key=2, style=dotted];
m0_130 -> m0_128  [key=0, style=bold, color=blue];
m0_131 -> m0_129  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.PluralTestSource"];
}
