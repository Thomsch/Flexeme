digraph  {
d1 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", color=green, community=0, label="0: casing", span="19-19"];
d0 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", label="Entry Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", span="17-17"];
d2 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", color=green, community=0, label="0: LetterCasing.Title", span="21-21"];
d4 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", color=green, community=0, label="0: LetterCasing.LowerCase", span="24-24"];
d6 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", color=green, community=0, label="0: LetterCasing.AllCaps", span="27-27"];
d8 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", color=green, community=0, label="0: LetterCasing.Sentence", span="30-30"];
d12 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", color=green, community=0, label="0: throw new ArgumentOutOfRangeException(''casing'');", span="37-37"];
d3 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", color=green, community=0, label="0: return CultureInfo.CurrentCulture.TextInfo.ToTitleCase(input);", span="22-22"];
d13 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", label="Exit Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", span="17-17"];
d14 [cluster="System.Globalization.TextInfo.ToTitleCase(string)", label="Entry System.Globalization.TextInfo.ToTitleCase(string)", span="0-0"];
d5 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", color=green, community=0, label="0: return input.ToLower();", span="25-25"];
d15 [cluster="string.ToLower()", label="Entry string.ToLower()", span="0-0"];
d7 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", color=green, community=0, label="0: return input.ToUpper();", span="28-28"];
d16 [cluster="string.ToUpper()", label="Entry string.ToUpper()", span="0-0"];
d9 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", color=green, community=0, label="0: input.Length >= 1", span="31-31"];
d10 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", color=green, community=0, label="0: return String.Concat(input.Substring(0, 1).ToUpper(), input.Substring(1));", span="32-32"];
d11 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", color=green, community=0, label="0: return input.ToUpper();", span="34-34"];
d17 [cluster="string.Substring(int, int)", label="Entry string.Substring(int, int)", span="0-0"];
d18 [cluster="string.Substring(int)", label="Entry string.Substring(int)", span="0-0"];
d19 [cluster="string.Concat(string, string)", label="Entry string.Concat(string, string)", span="0-0"];
d20 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
d34 [cluster="Humanizer.CasingExtensions.Camelize(string)", label="return word.Substring(0, 1).ToLower() + word.Substring(1);", span="69-69"];
d37 [cluster="Humanizer.CasingExtensions.Underscore(string)", label="return Regex.Replace(\r\n                Regex.Replace(\r\n                    Regex.Replace(input, @''([A-Z]+)([A-Z][a-z])'', ''$1_$2''), @''([a-z\d])([A-Z])'', ''$1_$2''), @''[-\s]'', ''_'').ToLower();", span="79-81"];
d30 [cluster="lambda expression", label="match.Groups[1].Value.ToUpper()", span="58-58"];
d33 [cluster="Humanizer.CasingExtensions.Camelize(string)", label="string word = Pascalize(input)", span="68-68"];
d35 [cluster="Humanizer.CasingExtensions.Camelize(string)", label="Exit Humanizer.CasingExtensions.Camelize(string)", span="66-66"];
d36 [cluster="Humanizer.CasingExtensions.Underscore(string)", label="Entry Humanizer.CasingExtensions.Underscore(string)", span="77-77"];
d38 [cluster="Humanizer.CasingExtensions.Underscore(string)", label="Exit Humanizer.CasingExtensions.Underscore(string)", span="77-77"];
d39 [cluster="System.Text.RegularExpressions.Regex.Replace(string, string, string)", label="Entry System.Text.RegularExpressions.Regex.Replace(string, string, string)", span="0-0"];
d29 [cluster="lambda expression", label="Entry lambda expression", span="58-58"];
d31 [cluster="lambda expression", label="Exit lambda expression", span="58-58"];
d32 [cluster="Humanizer.CasingExtensions.Camelize(string)", label="Entry Humanizer.CasingExtensions.Camelize(string)", span="66-66"];
d25 [cluster="Humanizer.CasingExtensions.Pascalize(string)", label="Entry Humanizer.CasingExtensions.Pascalize(string)", span="56-56"];
d26 [cluster="Humanizer.CasingExtensions.Pascalize(string)", label="return Regex.Replace(input, ''(?:^|_)(.)'', match => match.Groups[1].Value.ToUpper());", span="58-58"];
d27 [cluster="Humanizer.CasingExtensions.Pascalize(string)", label="Exit Humanizer.CasingExtensions.Pascalize(string)", span="56-56"];
d28 [cluster="System.Text.RegularExpressions.Regex.Replace(string, string, System.Text.RegularExpressions.MatchEvaluator)", label="Entry System.Text.RegularExpressions.Regex.Replace(string, string, System.Text.RegularExpressions.MatchEvaluator)", span="0-0"];
m0_9 [cluster="Humanizer.Tests.CasingTests.Camelize(string, string)", file="CasingTests.cs", label="Entry Humanizer.Tests.CasingTests.Camelize(string, string)", span="40-40"];
m0_10 [cluster="Humanizer.Tests.CasingTests.Camelize(string, string)", file="CasingTests.cs", label="Assert.Equal(expectedOutput, input.Camelize())", span="42-42"];
m0_11 [cluster="Humanizer.Tests.CasingTests.Camelize(string, string)", file="CasingTests.cs", label="Exit Humanizer.Tests.CasingTests.Camelize(string, string)", span="40-40"];
m0_13 [cluster="Humanizer.Tests.CasingTests.Titleize(string, string)", file="CasingTests.cs", label="Entry Humanizer.Tests.CasingTests.Titleize(string, string)", span="53-53"];
m0_14 [cluster="Humanizer.Tests.CasingTests.Titleize(string, string)", file="CasingTests.cs", label="Assert.Equal(expectedOuput, input.Titleize())", span="55-55"];
m0_15 [cluster="Humanizer.Tests.CasingTests.Titleize(string, string)", file="CasingTests.cs", label="Exit Humanizer.Tests.CasingTests.Titleize(string, string)", span="53-53"];
m0_12 [cluster="string.Camelize()", file="CasingTests.cs", label="Entry string.Camelize()", span="66-66"];
m0_20 [cluster="string.Underscore()", file="CasingTests.cs", label="Entry string.Underscore()", span="77-77"];
m0_17 [cluster="Humanizer.Tests.CasingTests.Underscore(string, string)", file="CasingTests.cs", label="Entry Humanizer.Tests.CasingTests.Underscore(string, string)", span="64-64"];
m0_18 [cluster="Humanizer.Tests.CasingTests.Underscore(string, string)", file="CasingTests.cs", label="Assert.Equal(expectedOuput, input.Underscore())", span="66-66"];
m0_19 [cluster="Humanizer.Tests.CasingTests.Underscore(string, string)", file="CasingTests.cs", label="Exit Humanizer.Tests.CasingTests.Underscore(string, string)", span="64-64"];
m0_3 [cluster="string.Dasherize()", file="CasingTests.cs", label="Entry string.Dasherize()", span="89-89"];
m0_4 [cluster="Unk.Equal", file="CasingTests.cs", label="Entry Unk.Equal", span=""];
m0_5 [cluster="Humanizer.Tests.CasingTests.Pascalize(string, string)", file="CasingTests.cs", label="Entry Humanizer.Tests.CasingTests.Pascalize(string, string)", span="26-26"];
m0_6 [cluster="Humanizer.Tests.CasingTests.Pascalize(string, string)", file="CasingTests.cs", label="Assert.Equal(expectedOutput, input.Pascalize())", span="28-28"];
m0_7 [cluster="Humanizer.Tests.CasingTests.Pascalize(string, string)", file="CasingTests.cs", label="Exit Humanizer.Tests.CasingTests.Pascalize(string, string)", span="26-26"];
m0_8 [cluster="string.Pascalize()", file="CasingTests.cs", label="Entry string.Pascalize()", span="56-56"];
m0_0 [cluster="Humanizer.Tests.CasingTests.Dasherize(string, string)", file="CasingTests.cs", label="Entry Humanizer.Tests.CasingTests.Dasherize(string, string)", span="13-13"];
m0_1 [cluster="Humanizer.Tests.CasingTests.Dasherize(string, string)", color=green, community=0, file="CasingTests.cs", label="0: Assert.Equal(expectedOutput, input.Dasherize())", span="15-15"];
m0_2 [cluster="Humanizer.Tests.CasingTests.Dasherize(string, string)", file="CasingTests.cs", label="Exit Humanizer.Tests.CasingTests.Dasherize(string, string)", span="13-13"];
m0_16 [cluster="string.Titleize()", file="CasingTests.cs", label="Entry string.Titleize()", span="46-46"];
m1_12 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncator(string, int, string)", file="InflectorExtensions.cs", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncator(string, int, string)", span="51-51"];
m1_13 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncator(string, int, string)", file="InflectorExtensions.cs", label="Assert.Equal(expectedOutput, input.Truncate(length, Truncator.FixedNumberOfWords))", span="53-53"];
m1_14 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncator(string, int, string)", file="InflectorExtensions.cs", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncator(string, int, string)", span="51-51"];
m1_15 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationString(string, int, string, string)", file="InflectorExtensions.cs", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithTruncationString(string, int, string, string)", span="65-65"];
m1_16 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationString(string, int, string, string)", file="InflectorExtensions.cs", label="Assert.Equal(expectedOutput, input.Truncate(length, truncationString))", span="67-67"];
m1_17 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationString(string, int, string, string)", file="InflectorExtensions.cs", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithTruncationString(string, int, string, string)", span="65-65"];
m1_8 [cluster="string.Truncate(int, Humanizer.ITruncator)", file="InflectorExtensions.cs", label="Entry string.Truncate(int, Humanizer.ITruncator)", span="27-27"];
m1_22 [cluster="string.Truncate(int, string, Humanizer.ITruncator)", file="InflectorExtensions.cs", label="Entry string.Truncate(int, string, Humanizer.ITruncator)", span="52-52"];
m1_4 [cluster="Unk.Equal", file="InflectorExtensions.cs", label="Entry Unk.Equal", span=""];
m1_26 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)", file="InflectorExtensions.cs", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)", span="110-110"];
m1_27 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)", file="InflectorExtensions.cs", label="Assert.Equal(expectedOutput, input.Truncate(length, truncationString, Truncator.FixedNumberOfWords))", span="112-112"];
m1_28 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)", file="InflectorExtensions.cs", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)", span="110-110"];
m1_5 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncator(string, int, string)", file="InflectorExtensions.cs", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncator(string, int, string)", span="26-26"];
m1_6 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncator(string, int, string)", file="InflectorExtensions.cs", label="Assert.Equal(expectedOutput, input.Truncate(length, Truncator.FixedLength))", span="28-28"];
m1_7 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncator(string, int, string)", file="InflectorExtensions.cs", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncator(string, int, string)", span="26-26"];
m1_23 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncator(string, int, string, string)", file="InflectorExtensions.cs", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncator(string, int, string, string)", span="95-95"];
m1_24 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncator(string, int, string, string)", file="InflectorExtensions.cs", label="Assert.Equal(expectedOutput, input.Truncate(length, truncationString, Truncator.FixedNumberOfCharacters))", span="97-97"];
m1_25 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncator(string, int, string, string)", file="InflectorExtensions.cs", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncator(string, int, string, string)", span="95-95"];
m1_0 [cluster="Humanizer.Tests.TruncatorTests.Truncate(string, int, string)", file="InflectorExtensions.cs", label="Entry Humanizer.Tests.TruncatorTests.Truncate(string, int, string)", span="14-14"];
m1_1 [cluster="Humanizer.Tests.TruncatorTests.Truncate(string, int, string)", file="InflectorExtensions.cs", label="Assert.Equal(expectedOutput, input.Truncate(length))", span="16-16"];
m1_2 [cluster="Humanizer.Tests.TruncatorTests.Truncate(string, int, string)", file="InflectorExtensions.cs", label="Exit Humanizer.Tests.TruncatorTests.Truncate(string, int, string)", span="14-14"];
m1_18 [cluster="string.Truncate(int, string)", file="InflectorExtensions.cs", label="Entry string.Truncate(int, string)", span="39-39"];
m1_3 [cluster="string.Truncate(int)", file="InflectorExtensions.cs", label="Entry string.Truncate(int)", span="15-15"];
m1_19 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncator(string, int, string, string)", file="InflectorExtensions.cs", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncator(string, int, string, string)", span="80-80"];
m1_20 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncator(string, int, string, string)", file="InflectorExtensions.cs", label="Assert.Equal(expectedOutput, input.Truncate(length, truncationString, Truncator.FixedLength))", span="82-82"];
m1_21 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncator(string, int, string, string)", file="InflectorExtensions.cs", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncator(string, int, string, string)", span="80-80"];
m1_9 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", file="InflectorExtensions.cs", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", span="38-38"];
m1_10 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", file="InflectorExtensions.cs", label="Assert.Equal(expectedOutput, input.Truncate(length, Truncator.FixedNumberOfCharacters))", span="40-40"];
m1_11 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", file="InflectorExtensions.cs", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", span="38-38"];
m4_0 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeExtensions.cs", label="Entry Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", span="33-33"];
m4_1 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeExtensions.cs", label="number == 0", span="35-35"];
m4_3 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeExtensions.cs", label="number < 0", span="38-38"];
m4_4 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeExtensions.cs", label="return string.Format(''min {0}'', Convert(-number));", span="39-39"];
m4_7 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeExtensions.cs", label="var divided = number / m.Value", span="45-45"];
m4_12 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeExtensions.cs", label="number %= m.Value", span="55-55"];
m4_15 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeExtensions.cs", label="number > 0", span="60-60"];
m4_16 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeExtensions.cs", label="number < 20", span="62-62"];
m4_17 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", color=red, community=0, file="StringHumanizeExtensions.cs", label="0: word += UnitsMap[number]", span="63-63"];
m4_18 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", color=red, community=0, file="StringHumanizeExtensions.cs", label="1: var tens = TensMap[number / 10]", span="66-66"];
m4_19 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", color=red, community=0, file="StringHumanizeExtensions.cs", label="0: var unit = number % 10", span="67-67"];
m4_2 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeExtensions.cs", label="return UnitsMap[0];", span="36-36"];
m4_5 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeExtensions.cs", label="var word = ''''", span="41-41"];
m4_6 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeExtensions.cs", label=Hunderds, span="43-43"];
m4_10 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeExtensions.cs", label="word += m.Name", span="51-51"];
m4_11 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeExtensions.cs", label="word += Convert(divided) + m.Prefix + m.Name", span="53-53"];
m4_23 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", color=red, community=0, file="StringHumanizeExtensions.cs", label="0: word += units + (trema ? ''�n'' : ''en'') + tens", span="72-72"];
m4_24 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", color=red, community=0, file="StringHumanizeExtensions.cs", label="0: word += tens", span="75-75"];
m4_25 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", color=red, community=0, file="StringHumanizeExtensions.cs", label="0: return word;", span="79-79"];
m4_9 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeExtensions.cs", label="divided == 1 && !m.DisplayOneUnit", span="50-50"];
m4_14 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeExtensions.cs", label="word += m.Postfix", span="57-57"];
m4_8 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeExtensions.cs", label="divided <= 0", span="47-47"];
m4_13 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeExtensions.cs", label="number > 0", span="56-56"];
m4_20 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", color=red, community=0, file="StringHumanizeExtensions.cs", label="1: unit > 0", span="68-68"];
m4_21 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", color=red, community=0, file="StringHumanizeExtensions.cs", label="1: var units = UnitsMap[unit]", span="70-70"];
m4_22 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", color=red, community=0, file="StringHumanizeExtensions.cs", label="1: var trema = units.EndsWith(''e'')", span="71-71"];
m4_26 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeExtensions.cs", label="Exit Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", span="33-33"];
m4_28 [cluster="string.EndsWith(string)", file="StringHumanizeExtensions.cs", label="Entry string.EndsWith(string)", span="0-0"];
m4_38 [cluster="Unk.Substring", file="StringHumanizeExtensions.cs", label="Entry Unk.Substring", span=""];
m4_29 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="StringHumanizeExtensions.cs", label="Entry Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", span="91-91"];
m4_30 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", color=red, community=0, file="StringHumanizeExtensions.cs", label="0: var word = Convert(number)", span="93-93"];
m4_31 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", color=red, community=0, file="StringHumanizeExtensions.cs", label="0: OrdinalExceptions.Where(kv => word.EndsWith(kv.Key))", span="95-95"];
m4_32 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", color=red, community=0, file="StringHumanizeExtensions.cs", label="0: return word.Substring(0, word.Length - kv.Key.Length) + kv.Value;", span="98-98"];
m4_33 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", color=red, community=0, file="StringHumanizeExtensions.cs", label="0: word.LastIndexOfAny(EndingCharForSte) == (word.Length - 1)", span="104-104"];
m4_34 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", color=red, community=0, file="StringHumanizeExtensions.cs", label="0: return word + ''ste'';", span="105-105"];
m4_35 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", color=red, community=0, file="StringHumanizeExtensions.cs", label="0: return word + ''de'';", span="107-107"];
m4_36 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="StringHumanizeExtensions.cs", label="Exit Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", span="91-91"];
m4_40 [cluster="lambda expression", file="StringHumanizeExtensions.cs", label="Entry lambda expression", span="95-95"];
m4_41 [cluster="lambda expression", color=red, community=0, file="StringHumanizeExtensions.cs", label="0: word.EndsWith(kv.Key)", span="95-95"];
m4_42 [cluster="lambda expression", file="StringHumanizeExtensions.cs", label="Exit lambda expression", span="95-95"];
m4_39 [cluster="string.LastIndexOfAny(char[])", file="StringHumanizeExtensions.cs", label="Entry string.LastIndexOfAny(char[])", span="0-0"];
m4_27 [cluster="string.Format(string, object)", file="StringHumanizeExtensions.cs", label="Entry string.Format(string, object)", span="0-0"];
m4_37 [cluster="Unk.Where", file="StringHumanizeExtensions.cs", label="Entry Unk.Where", span=""];
m4_43 [file="StringHumanizeExtensions.cs", label="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter", span=""];
m4_44 [file="StringHumanizeExtensions.cs", label=word, span=""];
d1 -> d2  [color=green, key=0, style=solid];
d1 -> d4  [color=green, key=0, style=solid];
d1 -> d6  [color=green, key=0, style=solid];
d1 -> d8  [color=green, key=0, style=solid];
d1 -> d12  [color=green, key=0, style=solid];
d0 -> d1  [color=green, key=0, style=solid];
d0 -> d3  [color=green, key=1, label=string, style=dashed];
d0 -> d5  [color=green, key=1, label=string, style=dashed];
d0 -> d7  [color=green, key=1, label=string, style=dashed];
d0 -> d9  [color=green, key=1, label=string, style=dashed];
d0 -> d10  [color=green, key=1, label=string, style=dashed];
d0 -> d11  [color=green, key=1, label=string, style=dashed];
d2 -> d3  [color=green, key=0, style=solid];
d4 -> d5  [color=green, key=0, style=solid];
d6 -> d7  [color=green, key=0, style=solid];
d8 -> d9  [color=green, key=0, style=solid];
d12 -> d13  [color=green, key=0, style=solid];
d12 -> d20  [color=green, key=2, style=dotted];
d3 -> d13  [color=green, key=0, style=solid];
d3 -> d14  [color=green, key=2, style=dotted];
d13 -> d0  [color=blue, key=0, style=bold];
d5 -> d13  [color=green, key=0, style=solid];
d5 -> d15  [color=green, key=2, style=dotted];
d7 -> d13  [color=green, key=0, style=solid];
d7 -> d16  [color=green, key=2, style=dotted];
d9 -> d10  [color=green, key=0, style=solid];
d9 -> d11  [color=green, key=0, style=solid];
d10 -> d13  [color=green, key=0, style=solid];
d10 -> d17  [color=green, key=2, style=dotted];
d10 -> d16  [color=green, key=2, style=dotted];
d10 -> d18  [color=green, key=2, style=dotted];
d10 -> d19  [color=green, key=2, style=dotted];
d11 -> d13  [color=green, key=0, style=solid];
d11 -> d16  [color=green, key=2, style=dotted];
d34 -> d15  [key=2, style=dotted];
d34 -> d17  [key=2, style=dotted];
d34 -> d18  [key=2, style=dotted];
d34 -> d35  [key=0, style=solid];
d37 -> d15  [key=2, style=dotted];
d37 -> d38  [key=0, style=solid];
d37 -> d39  [key=2, style=dotted];
d30 -> d16  [key=2, style=dotted];
d30 -> d31  [key=0, style=solid];
d33 -> d34  [key=0, style=solid];
d33 -> d25  [key=2, style=dotted];
d35 -> d32  [color=blue, key=0, style=bold];
d36 -> d37  [key=0, style=solid];
d38 -> d36  [color=blue, key=0, style=bold];
d29 -> d30  [key=0, style=solid];
d31 -> d29  [color=blue, key=0, style=bold];
d32 -> d33  [key=0, style=solid];
d25 -> d32  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
d25 -> d26  [key=0, style=solid];
d26 -> d29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d26 -> d27  [key=0, style=solid];
d26 -> d28  [key=2, style=dotted];
d27 -> d25  [color=blue, key=0, style=bold];
m0_9 -> m0_10  [key=0, style=solid];
m0_10 -> m0_4  [key=2, style=dotted];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_12  [key=2, style=dotted];
m0_11 -> m0_9  [color=blue, key=0, style=bold];
m0_13 -> m0_14  [key=0, style=solid];
m0_14 -> m0_4  [key=2, style=dotted];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_16  [key=2, style=dotted];
m0_15 -> m0_13  [color=blue, key=0, style=bold];
m0_17 -> m0_18  [key=0, style=solid];
m0_18 -> m0_4  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_20  [key=2, style=dotted];
m0_19 -> m0_17  [color=blue, key=0, style=bold];
m0_5 -> m0_6  [key=0, style=solid];
m0_6 -> m0_4  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_8  [key=2, style=dotted];
m0_7 -> m0_5  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [color=green, key=0, style=solid];
m0_1 -> m0_2  [color=green, key=0, style=solid];
m0_1 -> m0_3  [color=green, key=2, style=dotted];
m0_1 -> m0_4  [color=green, key=2, style=dotted];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m1_12 -> m1_13  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_8  [key=2, style=dotted];
m1_13 -> m1_4  [key=2, style=dotted];
m1_14 -> m1_12  [color=blue, key=0, style=bold];
m1_15 -> m1_16  [key=0, style=solid];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_18  [key=2, style=dotted];
m1_16 -> m1_4  [key=2, style=dotted];
m1_17 -> m1_15  [color=blue, key=0, style=bold];
m1_26 -> m1_27  [key=0, style=solid];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_22  [key=2, style=dotted];
m1_27 -> m1_4  [key=2, style=dotted];
m1_28 -> m1_26  [color=blue, key=0, style=bold];
m1_5 -> m1_6  [key=0, style=solid];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_8  [key=2, style=dotted];
m1_6 -> m1_4  [key=2, style=dotted];
m1_7 -> m1_5  [color=blue, key=0, style=bold];
m1_23 -> m1_24  [key=0, style=solid];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_22  [key=2, style=dotted];
m1_24 -> m1_4  [key=2, style=dotted];
m1_25 -> m1_23  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_1 -> m1_4  [key=2, style=dotted];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m1_19 -> m1_20  [key=0, style=solid];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_22  [key=2, style=dotted];
m1_20 -> m1_4  [key=2, style=dotted];
m1_21 -> m1_19  [color=blue, key=0, style=bold];
m1_9 -> m1_10  [key=0, style=solid];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_8  [key=2, style=dotted];
m1_10 -> m1_4  [key=2, style=dotted];
m1_11 -> m1_9  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_4  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_7  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_12  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_15  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_16  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_17  [color=red, key=1, label=int, style=dashed];
m4_0 -> m4_18  [color=red, key=1, label=int, style=dashed];
m4_0 -> m4_19  [color=red, key=1, label=int, style=dashed];
m4_0 -> m4_29  [color=darkorchid, key=3, label="Parameter variable int number", style=bold];
m4_0 -> m4_5  [color=darkorchid, key=3, label="method methodReturn string Convert", style=bold];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=0, style=solid];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_5  [key=0, style=solid];
m4_4 -> m4_26  [key=0, style=solid];
m4_4 -> m4_0  [key=2, style=dotted];
m4_4 -> m4_27  [key=2, style=dotted];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_9  [color=darkseagreen4, key=1, label=divided, style=dashed];
m4_7 -> m4_11  [color=darkseagreen4, key=1, label=divided, style=dashed];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_12  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_12 -> m4_15  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_12 -> m4_16  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_12 -> m4_17  [color=red, key=1, label=int, style=dashed];
m4_12 -> m4_18  [color=red, key=1, label=int, style=dashed];
m4_12 -> m4_19  [color=red, key=1, label=int, style=dashed];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_25  [color=red, key=0, style=solid];
m4_16 -> m4_17  [color=red, key=0, style=solid];
m4_16 -> m4_18  [color=red, key=0, style=solid];
m4_17 -> m4_25  [color=red, key=0, style=solid];
m4_17 -> m4_17  [color=red, key=1, label=word, style=dashed];
m4_18 -> m4_19  [color=red, key=0, style=solid];
m4_18 -> m4_23  [color=red, key=1, label=tens, style=dashed];
m4_18 -> m4_24  [color=red, key=1, label=tens, style=dashed];
m4_19 -> m4_20  [color=red, key=0, style=solid];
m4_19 -> m4_21  [color=red, key=1, label=unit, style=dashed];
m4_2 -> m4_26  [key=0, style=solid];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_10  [color=darkseagreen4, key=1, label=word, style=dashed];
m4_5 -> m4_11  [color=darkseagreen4, key=1, label=word, style=dashed];
m4_5 -> m4_17  [color=red, key=1, label=word, style=dashed];
m4_5 -> m4_23  [color=red, key=1, label=word, style=dashed];
m4_5 -> m4_24  [color=red, key=1, label=word, style=dashed];
m4_5 -> m4_25  [color=red, key=1, label=word, style=dashed];
m4_5 -> m4_5  [color=darkorchid, key=3, label="Local variable string word", style=bold];
m4_5 -> m4_18  [color=red, key=3, label="Local variable string word", style=bold];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_15  [key=0, style=solid];
m4_6 -> m4_9  [color=darkseagreen4, key=1, label=m, style=dashed];
m4_6 -> m4_10  [color=darkseagreen4, key=1, label=m, style=dashed];
m4_6 -> m4_11  [color=darkseagreen4, key=1, label=m, style=dashed];
m4_6 -> m4_12  [color=darkseagreen4, key=1, label=m, style=dashed];
m4_6 -> m4_14  [color=darkseagreen4, key=1, label=m, style=dashed];
m4_10 -> m4_12  [key=0, style=solid];
m4_10 -> m4_10  [color=darkseagreen4, key=1, label=word, style=dashed];
m4_10 -> m4_14  [color=darkseagreen4, key=1, label=word, style=dashed];
m4_10 -> m4_17  [color=red, key=1, label=word, style=dashed];
m4_10 -> m4_23  [color=red, key=1, label=word, style=dashed];
m4_10 -> m4_24  [color=red, key=1, label=word, style=dashed];
m4_10 -> m4_25  [color=red, key=1, label=word, style=dashed];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_0  [key=2, style=dotted];
m4_11 -> m4_11  [color=darkseagreen4, key=1, label=word, style=dashed];
m4_11 -> m4_14  [color=darkseagreen4, key=1, label=word, style=dashed];
m4_11 -> m4_17  [color=red, key=1, label=word, style=dashed];
m4_11 -> m4_23  [color=red, key=1, label=word, style=dashed];
m4_11 -> m4_24  [color=red, key=1, label=word, style=dashed];
m4_11 -> m4_25  [color=red, key=1, label=word, style=dashed];
m4_23 -> m4_25  [color=red, key=0, style=solid];
m4_23 -> m4_23  [color=red, key=1, label=word, style=dashed];
m4_24 -> m4_25  [color=red, key=0, style=solid];
m4_24 -> m4_24  [color=red, key=1, label=word, style=dashed];
m4_25 -> m4_26  [color=red, key=0, style=solid];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_11  [key=0, style=solid];
m4_14 -> m4_6  [key=0, style=solid];
m4_14 -> m4_14  [color=darkseagreen4, key=1, label=word, style=dashed];
m4_14 -> m4_17  [color=red, key=1, label=word, style=dashed];
m4_14 -> m4_23  [color=red, key=1, label=word, style=dashed];
m4_14 -> m4_24  [color=red, key=1, label=word, style=dashed];
m4_14 -> m4_25  [color=red, key=1, label=word, style=dashed];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_6  [key=0, style=solid];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_6  [key=0, style=solid];
m4_20 -> m4_21  [color=red, key=0, style=solid];
m4_20 -> m4_24  [color=red, key=0, style=solid];
m4_21 -> m4_22  [color=red, key=0, style=solid];
m4_21 -> m4_23  [color=red, key=1, label=units, style=dashed];
m4_22 -> m4_23  [color=red, key=0, style=solid];
m4_22 -> m4_28  [color=red, key=2, style=dotted];
m4_26 -> m4_0  [color=blue, key=0, style=bold];
m4_29 -> m4_30  [color=red, key=0, style=solid];
m4_30 -> m4_31  [color=red, key=0, style=solid];
m4_30 -> m4_0  [color=red, key=2, style=dotted];
m4_30 -> m4_41  [color=red, key=1, label=word, style=dashed];
m4_30 -> m4_32  [color=red, key=1, label=word, style=dashed];
m4_30 -> m4_33  [color=red, key=1, label=word, style=dashed];
m4_30 -> m4_34  [color=red, key=1, label=word, style=dashed];
m4_30 -> m4_35  [color=red, key=1, label=word, style=dashed];
m4_31 -> m4_32  [color=red, key=0, style=solid];
m4_31 -> m4_33  [color=red, key=0, style=solid];
m4_31 -> m4_37  [color=red, key=2, style=dotted];
m4_31 -> m4_40  [color=red, key=1, label="lambda expression", style=dashed];
m4_32 -> m4_36  [color=red, key=0, style=solid];
m4_32 -> m4_38  [color=red, key=2, style=dotted];
m4_33 -> m4_34  [color=red, key=0, style=solid];
m4_33 -> m4_35  [color=red, key=0, style=solid];
m4_33 -> m4_39  [color=red, key=2, style=dotted];
m4_34 -> m4_36  [color=red, key=0, style=solid];
m4_35 -> m4_36  [color=red, key=0, style=solid];
m4_36 -> m4_29  [color=blue, key=0, style=bold];
m4_40 -> m4_41  [color=red, key=0, style=solid];
m4_40 -> m4_40  [color=green, key=3, label="Field variable System.Func<string, string> FromUnderscoreDashSeparatedWords", style=bold];
m4_41 -> m4_42  [color=red, key=0, style=solid];
m4_41 -> m4_28  [color=red, key=2, style=dotted];
m4_41 -> m4_41  [color=red, key=1, label="System.Collections.Generic.KeyValuePair<string, string>", style=dashed];
m4_42 -> m4_40  [color=blue, key=0, style=bold];
m4_43 -> m4_4  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter", style=dashed];
m4_43 -> m4_11  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter", style=dashed];
m4_43 -> m4_30  [color=red, key=1, label="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter", style=dashed];
m4_44 -> m4_41  [color=red, key=1, label=word, style=dashed];
}
