digraph  {
n0 [cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.DateHumanizeTests()", label="Entry Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.DateHumanizeTests()", span="7-7"];
n1 [cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.DateHumanizeTests()", label="Exit Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.DateHumanizeTests()", span="7-7"];
n2 [cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.DaysAgo(int, string)", label="Entry Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.DaysAgo(int, string)", span="17-17"];
n3 [cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.DaysAgo(int, string)", label="DateHumanize.Verify(expected, days, TimeUnit.Day, Tense.Past)", span="19-19"];
n4 [cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.DaysAgo(int, string)", label="Exit Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.DaysAgo(int, string)", span="17-17"];
n5 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?)", label="Entry Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?)", span="29-29"];
n6 [cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.HoursAgo(int, string)", label="Entry Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.HoursAgo(int, string)", span="27-27"];
n7 [cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.HoursAgo(int, string)", label="DateHumanize.Verify(expected, hours, TimeUnit.Hour, Tense.Past)", span="29-29"];
n8 [cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.HoursAgo(int, string)", label="Exit Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.HoursAgo(int, string)", span="27-27"];
n9 [cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.MinutesAgo(int, string)", label="Entry Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.MinutesAgo(int, string)", span="37-37"];
n10 [cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.MinutesAgo(int, string)", label="DateHumanize.Verify(expected, minutes, TimeUnit.Minute, Tense.Past)", span="39-39"];
n11 [cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.MinutesAgo(int, string)", label="Exit Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.MinutesAgo(int, string)", span="37-37"];
n12 [cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.MonthsAgo(int, string)", label="Entry Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.MonthsAgo(int, string)", span="47-47"];
n13 [cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.MonthsAgo(int, string)", label="DateHumanize.Verify(expected, months, TimeUnit.Month, Tense.Past)", span="49-49"];
n14 [cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.MonthsAgo(int, string)", label="Exit Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.MonthsAgo(int, string)", span="47-47"];
n15 [cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.SecondsAgo(int, string)", label="Entry Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.SecondsAgo(int, string)", span="57-57"];
n16 [cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.SecondsAgo(int, string)", label="DateHumanize.Verify(expected, seconds, TimeUnit.Second, Tense.Past)", span="59-59"];
n17 [cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.SecondsAgo(int, string)", label="Exit Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.SecondsAgo(int, string)", span="57-57"];
n18 [cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.YearsAgo(int, string)", label="Entry Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.YearsAgo(int, string)", span="67-67"];
n19 [cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.YearsAgo(int, string)", label="DateHumanize.Verify(expected, years, TimeUnit.Year, Tense.Past)", span="69-69"];
n20 [cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.YearsAgo(int, string)", label="Exit Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.YearsAgo(int, string)", span="67-67"];
d1 [cluster="Humanizer.Localisation.ArabicFormatter.GetResourceKey(string, int)", color=green, community=0, label="2: number == 2", span="8-8"];
d0 [cluster="Humanizer.Localisation.ArabicFormatter.GetResourceKey(string, int)", label="Entry Humanizer.Localisation.ArabicFormatter.GetResourceKey(string, int)", span="6-6"];
d2 [cluster="Humanizer.Localisation.ArabicFormatter.GetResourceKey(string, int)", color=green, community=1, label="1: return resourceKey + DualPostfix;", span="10-10"];
d3 [cluster="Humanizer.Localisation.ArabicFormatter.GetResourceKey(string, int)", color=green, community=1, label="1: return resourceKey;", span="12-12"];
d4 [cluster="Humanizer.Localisation.ArabicFormatter.GetResourceKey(string, int)", label="Exit Humanizer.Localisation.ArabicFormatter.GetResourceKey(string, int)", span="6-6"];
m0_8 [cluster="lambda expression", file="Configurator.cs", label="Entry lambda expression", span="17-17"];
m0_5 [cluster="lambda expression", color=green, community=0, file="Configurator.cs", label="0: new RussianFormatter()", span="16-16"];
m0_4 [cluster="lambda expression", file="Configurator.cs", label="Entry lambda expression", span="16-16"];
m0_6 [cluster="lambda expression", file="Configurator.cs", label="Exit lambda expression", span="16-16"];
m0_9 [cluster="lambda expression", color=green, community=0, file="Configurator.cs", label="0: new ArabicFormatter()", span="17-17"];
m0_10 [cluster="lambda expression", file="Configurator.cs", label="Exit lambda expression", span="17-17"];
m0_7 [cluster="Humanizer.Localisation.RussianFormatter.RussianFormatter()", file="Configurator.cs", label="Entry Humanizer.Localisation.RussianFormatter.RussianFormatter()", span="2-2"];
m0_11 [cluster="Humanizer.Localisation.ArabicFormatter.ArabicFormatter()", file="Configurator.cs", label="Entry Humanizer.Localisation.ArabicFormatter.ArabicFormatter()", span="2-2"];
m2_14 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="TimeSpanTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m2_0 [cluster="Humanizer.Tests.Extensions.Inflector.TitleizeTests.Titleize()", file="TimeSpanTests.cs", label="Entry Humanizer.Tests.Extensions.Inflector.TitleizeTests.Titleize()", span="7-7"];
m2_1 [cluster="Humanizer.Tests.Extensions.Inflector.TitleizeTests.Titleize()", color=green, community=0, file="TimeSpanTests.cs", label="0: TestData", span="9-9"];
m2_2 [cluster="Humanizer.Tests.Extensions.Inflector.TitleizeTests.Titleize()", color=green, community=0, file="TimeSpanTests.cs", label="0: Assert.Equal(pair.Key.Titleize(), pair.Value)", span="11-11"];
m2_3 [cluster="Humanizer.Tests.Extensions.Inflector.TitleizeTests.Titleize()", file="TimeSpanTests.cs", label="Exit Humanizer.Tests.Extensions.Inflector.TitleizeTests.Titleize()", span="7-7"];
m2_5 [cluster="Unk.Equal", file="TimeSpanTests.cs", label="Entry Unk.Equal", span=""];
m2_4 [cluster="string.Titleize()", file="TimeSpanTests.cs", label="Entry string.Titleize()", span="163-163"];
m2_6 [cluster="Humanizer.Tests.Extensions.Inflector.TitleizeTests.TitleizeTests()", file="TimeSpanTests.cs", label="Entry Humanizer.Tests.Extensions.Inflector.TitleizeTests.TitleizeTests()", span="15-15"];
m2_7 [cluster="Humanizer.Tests.Extensions.Inflector.TitleizeTests.TitleizeTests()", color=green, community=0, file="TimeSpanTests.cs", label="2: TestData.Add(''some title'', ''Some Title'')", span="18-18"];
m2_8 [cluster="Humanizer.Tests.Extensions.Inflector.TitleizeTests.TitleizeTests()", color=green, community=0, file="TimeSpanTests.cs", label="2: TestData.Add(''some-title'', ''Some Title'')", span="19-19"];
m2_9 [cluster="Humanizer.Tests.Extensions.Inflector.TitleizeTests.TitleizeTests()", color=green, community=0, file="TimeSpanTests.cs", label="2: TestData.Add(''sometitle'', ''Sometitle'')", span="20-20"];
m2_10 [cluster="Humanizer.Tests.Extensions.Inflector.TitleizeTests.TitleizeTests()", color=green, community=0, file="TimeSpanTests.cs", label="2: TestData.Add(''some-title: The begining'', ''Some Title: The Begining'')", span="21-21"];
m2_11 [cluster="Humanizer.Tests.Extensions.Inflector.TitleizeTests.TitleizeTests()", color=green, community=0, file="TimeSpanTests.cs", label="0: TestData.Add(''some_title:_the_begining'', ''Some Title: The Begining'')", span="22-22"];
m2_12 [cluster="Humanizer.Tests.Extensions.Inflector.TitleizeTests.TitleizeTests()", color=green, community=0, file="TimeSpanTests.cs", label="2: TestData.Add(''some title: The_begining'', ''Some Title: The Begining'')", span="23-23"];
m2_13 [cluster="Humanizer.Tests.Extensions.Inflector.TitleizeTests.TitleizeTests()", file="TimeSpanTests.cs", label="Exit Humanizer.Tests.Extensions.Inflector.TitleizeTests.TitleizeTests()", span="15-15"];
m2_15 [file="TimeSpanTests.cs", label="Humanizer.Tests.Extensions.Inflector.TitleizeTests", span=""];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [color=blue, key=0, style=bold];
n2 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n3 -> n5  [key=2, style=dotted];
n4 -> n2  [color=blue, key=0, style=bold];
n6 -> n7  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n7 -> n5  [key=2, style=dotted];
n8 -> n6  [color=blue, key=0, style=bold];
n9 -> n10  [key=0, style=solid];
n10 -> n11  [key=0, style=solid];
n10 -> n5  [key=2, style=dotted];
n11 -> n9  [color=blue, key=0, style=bold];
n12 -> n13  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n13 -> n5  [key=2, style=dotted];
n14 -> n12  [color=blue, key=0, style=bold];
n15 -> n16  [key=0, style=solid];
n16 -> n17  [key=0, style=solid];
n16 -> n5  [key=2, style=dotted];
n17 -> n15  [color=blue, key=0, style=bold];
n18 -> n19  [key=0, style=solid];
n19 -> n20  [key=0, style=solid];
n19 -> n5  [key=2, style=dotted];
n20 -> n18  [color=blue, key=0, style=bold];
d1 -> d2  [color=green, key=0, style=solid];
d1 -> d3  [color=green, key=0, style=solid];
d0 -> d1  [color=green, key=0, style=solid];
d0 -> d2  [color=green, key=1, label=string, style=dashed];
d0 -> d3  [color=green, key=1, label=string, style=dashed];
d0 -> d0  [color=darkorchid, key=3, label="method methodReturn string GetResourceKey", style=bold];
d2 -> d4  [color=green, key=0, style=solid];
d3 -> d4  [color=green, key=0, style=solid];
d4 -> d0  [color=blue, key=0, style=bold];
m0_8 -> m0_9  [color=green, key=0, style=solid];
m0_5 -> m0_6  [color=green, key=0, style=solid];
m0_5 -> m0_7  [color=green, key=2, style=dotted];
m0_4 -> m0_5  [color=green, key=0, style=solid];
m0_6 -> m0_4  [color=blue, key=0, style=bold];
m0_9 -> m0_10  [color=green, key=0, style=solid];
m0_9 -> m0_11  [color=green, key=2, style=dotted];
m0_10 -> m0_8  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [color=green, key=0, style=solid];
m2_1 -> m2_2  [color=green, key=0, style=solid];
m2_1 -> m2_3  [color=green, key=0, style=solid];
m2_2 -> m2_1  [color=green, key=0, style=solid];
m2_2 -> m2_2  [color=green, key=1, label=pair, style=dashed];
m2_2 -> m2_4  [color=green, key=2, style=dotted];
m2_2 -> m2_5  [color=green, key=2, style=dotted];
m2_3 -> m2_0  [color=blue, key=0, style=bold];
m2_6 -> m2_7  [color=green, key=0, style=solid];
m2_7 -> m2_8  [color=green, key=0, style=solid];
m2_7 -> m2_14  [color=green, key=2, style=dotted];
m2_8 -> m2_9  [color=green, key=0, style=solid];
m2_8 -> m2_14  [color=green, key=2, style=dotted];
m2_9 -> m2_10  [color=green, key=0, style=solid];
m2_9 -> m2_14  [color=green, key=2, style=dotted];
m2_10 -> m2_11  [color=green, key=0, style=solid];
m2_10 -> m2_14  [color=green, key=2, style=dotted];
m2_11 -> m2_12  [color=green, key=0, style=solid];
m2_11 -> m2_14  [color=green, key=2, style=dotted];
m2_12 -> m2_13  [color=green, key=0, style=solid];
m2_12 -> m2_14  [color=green, key=2, style=dotted];
m2_13 -> m2_6  [color=blue, key=0, style=bold];
m2_15 -> m2_1  [color=green, key=1, label="Humanizer.Tests.Extensions.Inflector.TitleizeTests", style=dashed];
m2_15 -> m2_7  [color=green, key=1, label="Humanizer.Tests.Extensions.Inflector.TitleizeTests", style=dashed];
m2_15 -> m2_8  [color=green, key=1, label="Humanizer.Tests.Extensions.Inflector.TitleizeTests", style=dashed];
m2_15 -> m2_9  [color=green, key=1, label="Humanizer.Tests.Extensions.Inflector.TitleizeTests", style=dashed];
m2_15 -> m2_10  [color=green, key=1, label="Humanizer.Tests.Extensions.Inflector.TitleizeTests", style=dashed];
m2_15 -> m2_11  [color=green, key=1, label="Humanizer.Tests.Extensions.Inflector.TitleizeTests", style=dashed];
m2_15 -> m2_12  [color=green, key=1, label="Humanizer.Tests.Extensions.Inflector.TitleizeTests", style=dashed];
}
