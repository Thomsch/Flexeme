digraph  {
d1 [cluster="Humanizer.Configuration.CollectionFormatterRegistry.CollectionFormatterRegistry()", color=green, community=0, label="-1: Register<EnglishCollectionFormatter>(''en'')", span="9-9"];
d4 [label="Humanizer.Configuration.CollectionFormatterRegistry", span=""];
d0 [cluster="Humanizer.Configuration.CollectionFormatterRegistry.CollectionFormatterRegistry()", label="Entry Humanizer.Configuration.CollectionFormatterRegistry.CollectionFormatterRegistry()", span="6-6"];
d2 [cluster="Humanizer.Configuration.CollectionFormatterRegistry.CollectionFormatterRegistry()", label="Exit Humanizer.Configuration.CollectionFormatterRegistry.CollectionFormatterRegistry()", span="6-6"];
d3 [cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.Register<T>(string)", label="Entry Humanizer.Configuration.LocaliserRegistry<TLocaliser>.Register<T>(string)", span="45-45"];
m3_51 [cluster="Humanizer.Bytes.ByteSize.FromBits(long)", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Bytes.ByteSize.FromBits(long)", span="93-93"];
m3_5 [cluster="Unk.Equal", file="DefaultCollectionFormatter.cs", label="Entry Unk.Equal", span=""];
m3_26 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParseWorksWithLotsOfSpaces()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.TryParseWorksWithLotsOfSpaces()", span="45-45"];
m3_27 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParseWorksWithLotsOfSpaces()", file="DefaultCollectionFormatter.cs", label="Assert.Equal(ByteSize.FromKilobytes(100), ByteSize.Parse('' 100 KB ''))", span="47-47"];
m3_28 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParseWorksWithLotsOfSpaces()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.TryParseWorksWithLotsOfSpaces()", span="45-45"];
m3_12 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", span="280-280"];
m3_17 [cluster="Humanizer.Bytes.ByteSize.FromMegabytes(double)", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Bytes.ByteSize.FromMegabytes(double)", span="108-108"];
m3_55 [cluster="Humanizer.Bytes.ByteSize.FromBytes(double)", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Bytes.ByteSize.FromBytes(double)", span="98-98"];
m3_32 [cluster="Unk.>", file="DefaultCollectionFormatter.cs", label="Entry Unk.>", span=""];
m3_48 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseBits()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseBits()", span="69-69"];
m3_49 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseBits()", file="DefaultCollectionFormatter.cs", label="Assert.Equal(ByteSize.FromBits(1), ByteSize.Parse(''1b''))", span="71-71"];
m3_50 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseBits()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseBits()", span="69-69"];
m3_18 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParseReturnsFalseOnBadValue(string)", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.TryParseReturnsFalseOnBadValue(string)", span="35-35"];
m3_22 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParseReturnsFalseOnBadValue(string)", file="DefaultCollectionFormatter.cs", label="Assert.Equal(new ByteSize(), resultByteSize)", span="41-41"];
m3_20 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParseReturnsFalseOnBadValue(string)", file="DefaultCollectionFormatter.cs", label="var resultBool = ByteSize.TryParse(input, out resultByteSize)", span="38-38"];
m3_21 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParseReturnsFalseOnBadValue(string)", file="DefaultCollectionFormatter.cs", label="Assert.False(resultBool)", span="40-40"];
m3_19 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParseReturnsFalseOnBadValue(string)", file="DefaultCollectionFormatter.cs", label="ByteSize resultByteSize", span="37-37"];
m3_23 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParseReturnsFalseOnBadValue(string)", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.TryParseReturnsFalseOnBadValue(string)", span="35-35"];
m3_24 [cluster="Unk.False", file="DefaultCollectionFormatter.cs", label="Entry Unk.False", span=""];
m3_42 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnNull()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnNull()", span="63-63"];
m3_43 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnNull()", file="DefaultCollectionFormatter.cs", label="Assert.Throws<ArgumentNullException>(() => { ByteSize.Parse(null); })", span="65-65"];
m3_44 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnNull()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnNull()", span="63-63"];
m3_4 [cluster="Humanizer.Bytes.ByteSize.Parse(string)", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Bytes.ByteSize.Parse(string)", span="354-354"];
m3_29 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnPartialBits()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnPartialBits()", span="51-51"];
m3_30 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnPartialBits()", file="DefaultCollectionFormatter.cs", label="Assert.Throws<FormatException>(() => { ByteSize.Parse(''10.5b''); })", span="53-53"];
m3_31 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnPartialBits()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnPartialBits()", span="51-51"];
m3_66 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseTerabytes()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseTerabytes()", span="99-99"];
m3_67 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseTerabytes()", file="DefaultCollectionFormatter.cs", label="Assert.Equal(ByteSize.FromTerabytes(100), ByteSize.Parse(''100TB''))", span="101-101"];
m3_68 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseTerabytes()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseTerabytes()", span="99-99"];
m3_69 [cluster="Humanizer.Bytes.ByteSize.FromTerabytes(double)", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Bytes.ByteSize.FromTerabytes(double)", span="118-118"];
m3_36 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnInvalid()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnInvalid()", span="57-57"];
m3_37 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnInvalid()", file="DefaultCollectionFormatter.cs", label="Assert.Throws<FormatException>(() => { ByteSize.Parse(''Unexpected Value''); })", span="59-59"];
m3_38 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnInvalid()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnInvalid()", span="57-57"];
m3_59 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseMegabytes()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseMegabytes()", span="87-87"];
m3_60 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseMegabytes()", file="DefaultCollectionFormatter.cs", label="Assert.Equal(ByteSize.FromMegabytes(1000), ByteSize.Parse(''1000MB''))", span="89-89"];
m3_61 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseMegabytes()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseMegabytes()", span="87-87"];
m3_56 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseKilobytes()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseKilobytes()", span="81-81"];
m3_57 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseKilobytes()", file="DefaultCollectionFormatter.cs", label="Assert.Equal(ByteSize.FromKilobytes(1020), ByteSize.Parse(''1020KB''))", span="83-83"];
m3_58 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseKilobytes()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseKilobytes()", span="81-81"];
m3_65 [cluster="Humanizer.Bytes.ByteSize.FromGigabytes(double)", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Bytes.ByteSize.FromGigabytes(double)", span="113-113"];
m3_3 [cluster="Humanizer.Bytes.ByteSize.FromKilobytes(double)", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Bytes.ByteSize.FromKilobytes(double)", span="103-103"];
m3_0 [cluster="Humanizer.Tests.Bytes.ParsingTests.Parse()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.Parse()", span="10-10"];
m3_1 [cluster="Humanizer.Tests.Bytes.ParsingTests.Parse()", color=green, community=0, file="DefaultCollectionFormatter.cs", label="-1: Assert.Equal(ByteSize.FromKilobytes(1020), ByteSize.Parse(''1020KB''))", span="12-12"];
m3_2 [cluster="Humanizer.Tests.Bytes.ParsingTests.Parse()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.Parse()", span="10-10"];
m3_45 [cluster="lambda expression", file="DefaultCollectionFormatter.cs", label="Entry lambda expression", span="65-65"];
m3_34 [cluster="lambda expression", file="DefaultCollectionFormatter.cs", label="ByteSize.Parse(''10.5b'')", span="53-53"];
m3_40 [cluster="lambda expression", file="DefaultCollectionFormatter.cs", label="ByteSize.Parse(''Unexpected Value'')", span="59-59"];
m3_46 [cluster="lambda expression", file="DefaultCollectionFormatter.cs", label="ByteSize.Parse(null)", span="65-65"];
m3_33 [cluster="lambda expression", file="DefaultCollectionFormatter.cs", label="Entry lambda expression", span="53-53"];
m3_35 [cluster="lambda expression", file="DefaultCollectionFormatter.cs", label="Exit lambda expression", span="53-53"];
m3_39 [cluster="lambda expression", file="DefaultCollectionFormatter.cs", label="Entry lambda expression", span="59-59"];
m3_41 [cluster="lambda expression", file="DefaultCollectionFormatter.cs", label="Exit lambda expression", span="59-59"];
m3_47 [cluster="lambda expression", file="DefaultCollectionFormatter.cs", label="Exit lambda expression", span="65-65"];
m3_62 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseGigabytes()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseGigabytes()", span="93-93"];
m3_63 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseGigabytes()", file="DefaultCollectionFormatter.cs", label="Assert.Equal(ByteSize.FromGigabytes(805), ByteSize.Parse(''805GB''))", span="95-95"];
m3_64 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseGigabytes()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseGigabytes()", span="93-93"];
m3_13 [cluster="Unk.True", file="DefaultCollectionFormatter.cs", label="Entry Unk.True", span=""];
m3_25 [cluster="Humanizer.Bytes.ByteSize.ByteSize()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Bytes.ByteSize.ByteSize()", span="8-8"];
m3_52 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseBytes()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseBytes()", span="75-75"];
m3_53 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseBytes()", file="DefaultCollectionFormatter.cs", label="Assert.Equal(ByteSize.FromBytes(1), ByteSize.Parse(''1B''))", span="77-77"];
m3_54 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseBytes()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseBytes()", span="75-75"];
m3_6 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParse()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.TryParse()", span="16-16"];
m3_7 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParse()", color=green, community=0, file="DefaultCollectionFormatter.cs", label="-1: ByteSize resultByteSize", span="18-18"];
m3_8 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParse()", color=green, community=0, file="DefaultCollectionFormatter.cs", label="-1: var resultBool = ByteSize.TryParse(''1020KB'', out resultByteSize)", span="19-19"];
m3_9 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParse()", color=green, community=0, file="DefaultCollectionFormatter.cs", label="-1: Assert.True(resultBool)", span="21-21"];
m3_10 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParse()", color=green, community=0, file="DefaultCollectionFormatter.cs", label="-1: Assert.Equal(ByteSize.FromKilobytes(1020), resultByteSize)", span="22-22"];
m3_11 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParse()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.TryParse()", span="16-16"];
m3_14 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseDecimalMegabytes()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseDecimalMegabytes()", span="26-26"];
m3_15 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseDecimalMegabytes()", color=green, community=0, file="DefaultCollectionFormatter.cs", label="-1: Assert.Equal(ByteSize.FromMegabytes(100.5), ByteSize.Parse(''100.5MB''))", span="28-28"];
m3_16 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseDecimalMegabytes()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseDecimalMegabytes()", span="26-26"];
d1 -> d2  [color=green, key=0, style=solid];
d1 -> d3  [color=green, key=2, style=dotted];
d4 -> d1  [color=green, key=1, label="Humanizer.Configuration.CollectionFormatterRegistry", style=dashed];
d0 -> d1  [color=green, key=0, style=solid];
d2 -> d0  [color=blue, key=0, style=bold];
m3_26 -> m3_27  [key=0, style=solid];
m3_27 -> m3_3  [key=2, style=dotted];
m3_27 -> m3_4  [key=2, style=dotted];
m3_27 -> m3_5  [key=2, style=dotted];
m3_27 -> m3_28  [key=0, style=solid];
m3_28 -> m3_26  [color=blue, key=0, style=bold];
m3_48 -> m3_49  [key=0, style=solid];
m3_49 -> m3_4  [key=2, style=dotted];
m3_49 -> m3_5  [key=2, style=dotted];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_51  [key=2, style=dotted];
m3_50 -> m3_48  [color=blue, key=0, style=bold];
m3_18 -> m3_20  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_18 -> m3_19  [key=0, style=solid];
m3_22 -> m3_5  [key=2, style=dotted];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_25  [key=2, style=dotted];
m3_20 -> m3_12  [key=2, style=dotted];
m3_20 -> m3_22  [color=darkseagreen4, key=1, label=resultByteSize, style=dashed];
m3_20 -> m3_21  [key=0, style=solid];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_24  [key=2, style=dotted];
m3_19 -> m3_20  [key=0, style=solid];
m3_23 -> m3_18  [color=blue, key=0, style=bold];
m3_42 -> m3_43  [key=0, style=solid];
m3_43 -> m3_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_43 -> m3_44  [key=0, style=solid];
m3_43 -> m3_32  [key=2, style=dotted];
m3_44 -> m3_42  [color=blue, key=0, style=bold];
m3_29 -> m3_30  [key=0, style=solid];
m3_30 -> m3_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_32  [key=2, style=dotted];
m3_31 -> m3_29  [color=blue, key=0, style=bold];
m3_66 -> m3_67  [key=0, style=solid];
m3_67 -> m3_4  [key=2, style=dotted];
m3_67 -> m3_5  [key=2, style=dotted];
m3_67 -> m3_68  [key=0, style=solid];
m3_67 -> m3_69  [key=2, style=dotted];
m3_68 -> m3_66  [color=blue, key=0, style=bold];
m3_36 -> m3_37  [key=0, style=solid];
m3_37 -> m3_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_37 -> m3_38  [key=0, style=solid];
m3_37 -> m3_32  [key=2, style=dotted];
m3_38 -> m3_36  [color=blue, key=0, style=bold];
m3_59 -> m3_60  [key=0, style=solid];
m3_60 -> m3_4  [key=2, style=dotted];
m3_60 -> m3_5  [key=2, style=dotted];
m3_60 -> m3_17  [key=2, style=dotted];
m3_60 -> m3_61  [key=0, style=solid];
m3_61 -> m3_59  [color=blue, key=0, style=bold];
m3_56 -> m3_57  [key=0, style=solid];
m3_57 -> m3_3  [key=2, style=dotted];
m3_57 -> m3_4  [key=2, style=dotted];
m3_57 -> m3_5  [key=2, style=dotted];
m3_57 -> m3_58  [key=0, style=solid];
m3_58 -> m3_56  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [color=green, key=0, style=solid];
m3_1 -> m3_2  [color=green, key=0, style=solid];
m3_1 -> m3_3  [color=green, key=2, style=dotted];
m3_1 -> m3_4  [color=green, key=2, style=dotted];
m3_1 -> m3_5  [color=green, key=2, style=dotted];
m3_2 -> m3_0  [color=blue, key=0, style=bold];
m3_45 -> m3_46  [key=0, style=solid];
m3_34 -> m3_4  [key=2, style=dotted];
m3_34 -> m3_35  [key=0, style=solid];
m3_40 -> m3_4  [key=2, style=dotted];
m3_40 -> m3_41  [key=0, style=solid];
m3_46 -> m3_4  [key=2, style=dotted];
m3_46 -> m3_47  [key=0, style=solid];
m3_33 -> m3_34  [key=0, style=solid];
m3_35 -> m3_33  [color=blue, key=0, style=bold];
m3_39 -> m3_40  [key=0, style=solid];
m3_41 -> m3_39  [color=blue, key=0, style=bold];
m3_47 -> m3_45  [color=blue, key=0, style=bold];
m3_62 -> m3_63  [key=0, style=solid];
m3_63 -> m3_4  [key=2, style=dotted];
m3_63 -> m3_5  [key=2, style=dotted];
m3_63 -> m3_64  [key=0, style=solid];
m3_63 -> m3_65  [key=2, style=dotted];
m3_64 -> m3_62  [color=blue, key=0, style=bold];
m3_52 -> m3_53  [key=0, style=solid];
m3_53 -> m3_4  [key=2, style=dotted];
m3_53 -> m3_5  [key=2, style=dotted];
m3_53 -> m3_54  [key=0, style=solid];
m3_53 -> m3_55  [key=2, style=dotted];
m3_54 -> m3_52  [color=blue, key=0, style=bold];
m3_6 -> m3_7  [color=green, key=0, style=solid];
m3_7 -> m3_8  [color=green, key=0, style=solid];
m3_8 -> m3_9  [color=green, key=0, style=solid];
m3_8 -> m3_12  [color=green, key=2, style=dotted];
m3_8 -> m3_10  [color=green, key=1, label=resultByteSize, style=dashed];
m3_9 -> m3_10  [color=green, key=0, style=solid];
m3_9 -> m3_13  [color=green, key=2, style=dotted];
m3_10 -> m3_11  [color=green, key=0, style=solid];
m3_10 -> m3_3  [color=green, key=2, style=dotted];
m3_10 -> m3_5  [color=green, key=2, style=dotted];
m3_11 -> m3_6  [color=blue, key=0, style=bold];
m3_14 -> m3_15  [color=green, key=0, style=solid];
m3_15 -> m3_16  [color=green, key=0, style=solid];
m3_15 -> m3_17  [color=green, key=2, style=dotted];
m3_15 -> m3_4  [color=green, key=2, style=dotted];
m3_15 -> m3_5  [color=green, key=2, style=dotted];
m3_16 -> m3_14  [color=blue, key=0, style=bold];
}
