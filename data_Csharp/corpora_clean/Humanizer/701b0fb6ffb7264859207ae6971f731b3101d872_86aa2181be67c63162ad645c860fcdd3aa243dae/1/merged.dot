digraph  {
n45 [label="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter", span=""];
n0 [label="Entry Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", span="12-12", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
n1 [label="number == 0", span="14-14", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
n3 [label="number < 0", span="17-17", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
n4 [label="return string.Format(''menos {0}'', Convert(Math.Abs(number)));", span="18-18", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n6 [label="(number / 1000000000) > 0", span="22-22", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
n7 [label="number / 1000000000 > 2", span="24-24", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n8 [label="parts.Add(string.Format(''{0} bilhões'', Convert(number / 1000000000)))", span="26-26", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n9 [label="parts.Add(string.Format(''{0} bilhão'', Convert(number / 1000000000)))", span="30-30", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n10 [label="number %= 1000000000", span="32-32", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
n11 [label="(number / 1000000) > 0", span="35-35", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
n12 [label="number / 1000000 > 2", span="37-37", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n13 [label="parts.Add(string.Format(''{0} milhões'', Convert(number / 1000000)))", span="39-39", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n14 [label="parts.Add(string.Format(''{0} milhão'', Convert(number / 1000000)))", span="43-43", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n15 [label="number %= 1000000", span="45-45", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
n16 [label="(number / 1000) > 0", span="48-48", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
n17 [label="number / 1000 == 1", span="50-50", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n19 [label="parts.Add(string.Format(''{0} mil'', Convert(number / 1000)))", span="53-53", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n20 [label="number %= 1000", span="55-55", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
n21 [label="(number / 100) > 0", span="58-58", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
n22 [label="number == 100", span="60-60", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
n26 [label="parts.Add(portugueseHundredsMap[(number / 100)])", span="73-73", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n27 [label="number %= 100", span="76-76", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
n28 [label="number > 0", span="79-79", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
n31 [label="number < 20", span="84-84", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
n32 [label="parts.Add(portugueseUnitsMap[number])", span="85-85", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n33 [label="var lastPart = portugueseTensMap[number / 10]", span="88-88", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n34 [label="(number % 10) > 0", span="89-89", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
n35 [label="lastPart += string.Format('' e {0}'', portugueseUnitsMap[number % 10])", span="90-90", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n2 [label="return ''zero'';", span="15-15", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
n5 [label="var parts = new List<string>()", span="20-20", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
n41 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()"];
n18 [label="parts.Add(''mil'')", span="51-51", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n23 [label="parts.Count > 0", span="62-62", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n24 [label="parts.Add(''e cem'')", span="64-64", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n25 [label="parts.Add(''cem'')", span="68-68", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n29 [label="parts.Count != 0", span="81-81", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
n30 [label="parts.Add(''e'')", span="82-82", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
n36 [label="parts.Add(lastPart)", span="92-92", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
n37 [label="return string.Join('' '', parts.ToArray());", span="96-96", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
n40 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)"];
n42 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)"];
n38 [label="Exit Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", span="12-12", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
n39 [label="Entry System.Math.Abs(int)", span="0-0", cluster="System.Math.Abs(int)"];
n43 [label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0", cluster="System.Collections.Generic.List<T>.ToArray()"];
n44 [label="Entry string.Join(string, params string[])", span="0-0", cluster="string.Join(string, params string[])"];
d1 [label="number == 0", span="14-14", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=green, community=0];
d0 [label="Entry Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", span="12-12", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
d2 [label="return ''zero'';", span="15-15", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=green, community=0];
d3 [label="number < 0", span="17-17", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
d9 [label="parts.Add(string.Format(''{0} bilhão'', Convert(number / 1000000000)))", span="30-30", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=green, community=0];
d7 [label="number / 1000000000 > 2", span="24-24", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
d5 [label="var parts = new List<string>()", span="20-20", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
d10 [label="number %= 1000000000", span="32-32", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
d42 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)"];
d12 [label="number / 1000000 > 2", span="37-37", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=green, community=0];
d13 [label="parts.Add(string.Format(''{0} milhões'', Convert(number / 1000000)))", span="39-39", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=green, community=0];
d14 [label="parts.Add(string.Format(''{0} milhão'', Convert(number / 1000000)))", span="43-43", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
d15 [label="number %= 1000000", span="45-45", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
d16 [label="(number / 1000) > 0", span="48-48", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=green, community=0];
d17 [label="number / 1000 == 1", span="50-50", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
d21 [label="(number / 100) > 0", span="58-58", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=green, community=0];
d20 [label="number %= 1000", span="55-55", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=green, community=0];
d19 [label="parts.Add(string.Format(''{0} mil'', Convert(number / 1000)))", span="53-53", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
d18 [label="parts.Add(''mil'')", span="51-51", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
d22 [label="number == 100", span="60-60", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
d26 [label="parts.Add(portugueseHundredsMap[(number / 100)])", span="73-73", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
d27 [label="number %= 100", span="76-76", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=green, community=0];
d31 [label="number < 20", span="84-84", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=green, community=0];
d32 [label="parts.Add(portugueseUnitsMap[number])", span="85-85", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=green, community=0];
d33 [label="var lastPart = portugueseTensMap[number / 10]", span="88-88", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=green, community=0];
d34 [label="(number % 10) > 0", span="89-89", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=green, community=0];
d35 [label="lastPart += string.Format('' e {0}'', portugueseUnitsMap[number % 10])", span="90-90", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=green, community=0];
d24 [label="parts.Add(''e cem'')", span="64-64", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
d25 [label="parts.Add(''cem'')", span="68-68", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
d37 [label="return string.Join('' '', parts.ToArray());", span="96-96", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=green, community=0];
d36 [label="parts.Add(lastPart)", span="92-92", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=green, community=0];
d38 [label="Exit Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", span="12-12", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
d4 [label="return string.Format(''menos {0}'', Convert(Math.Abs(number)));", span="18-18", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
d8 [label="parts.Add(string.Format(''{0} bilhões'', Convert(number / 1000000000)))", span="26-26", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
d23 [label="parts.Count > 0", span="62-62", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
m0_7 [label="Entry Humanizer.Localisation.Formatters.RussianFormatter.RussianFormatter()", span="2-2", cluster="Humanizer.Localisation.Formatters.RussianFormatter.RussianFormatter()", file="Configurator.cs"];
m0_3 [label="Entry Humanizer.Localisation.Formatters.RomanianFormatter.RomanianFormatter()", span="2-2", cluster="Humanizer.Localisation.Formatters.RomanianFormatter.RomanianFormatter()", file="Configurator.cs"];
m0_15 [label="Entry Humanizer.Localisation.Formatters.CzechSlovakPolishFormatter.CzechSlovakPolishFormatter()", span="2-2", cluster="Humanizer.Localisation.Formatters.CzechSlovakPolishFormatter.CzechSlovakPolishFormatter()", file="Configurator.cs"];
m0_11 [label="Entry Humanizer.Localisation.Formatters.ArabicFormatter.ArabicFormatter()", span="2-2", cluster="Humanizer.Localisation.Formatters.ArabicFormatter.ArabicFormatter()", file="Configurator.cs"];
m0_19 [label="Entry lambda expression", span="21-21", cluster="lambda expression", file="Configurator.cs"];
m0_0 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="Configurator.cs"];
m0_1 [label="new RomanianFormatter()", span="16-16", cluster="lambda expression", file="Configurator.cs"];
m0_2 [label="Exit lambda expression", span="16-16", cluster="lambda expression", file="Configurator.cs"];
m0_4 [label="Entry lambda expression", span="17-17", cluster="lambda expression", file="Configurator.cs"];
m0_5 [label="new RussianFormatter()", span="17-17", cluster="lambda expression", file="Configurator.cs"];
m0_6 [label="Exit lambda expression", span="17-17", cluster="lambda expression", file="Configurator.cs"];
m0_8 [label="Entry lambda expression", span="18-18", cluster="lambda expression", file="Configurator.cs"];
m0_9 [label="new ArabicFormatter()", span="18-18", cluster="lambda expression", file="Configurator.cs"];
m0_10 [label="Exit lambda expression", span="18-18", cluster="lambda expression", file="Configurator.cs"];
m0_12 [label="Entry lambda expression", span="19-19", cluster="lambda expression", file="Configurator.cs"];
m0_13 [label="new CzechSlovakPolishFormatter()", span="19-19", cluster="lambda expression", file="Configurator.cs", color=green, community=0];
m0_14 [label="Exit lambda expression", span="19-19", cluster="lambda expression", file="Configurator.cs"];
m0_16 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="Configurator.cs"];
m0_17 [label="new CzechSlovakPolishFormatter()", span="20-20", cluster="lambda expression", file="Configurator.cs"];
m0_18 [label="Exit lambda expression", span="20-20", cluster="lambda expression", file="Configurator.cs"];
m0_20 [label="new CzechSlovakPolishFormatter()", span="21-21", cluster="lambda expression", file="Configurator.cs"];
m0_21 [label="Exit lambda expression", span="21-21", cluster="lambda expression", file="Configurator.cs"];
m2_13 [label="DateHumanize.Verify(expected, seconds, TimeUnit.Second, Tense.Future, DefaultPrecision)", span="60-60", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.SecondsFromNow(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs", color=green, community=0];
m2_14 [label="DateHumanize.Verify(expected, minutes, TimeUnit.Minute, Tense.Past, defaultPrecision)", span="72-72", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MinutesAgo(int, string)", color=red, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs"];
m2_16 [label="Entry Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MinutesFromNow(int, string)", span="84-84", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MinutesFromNow(int, string)", color=green, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs"];
m2_15 [label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MinutesAgo(int, string)", span="70-70", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MinutesAgo(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m2_3 [label="DateHumanize.Verify(expected, milliseconds, TimeUnit.Millisecond, Tense.Past, DefaultPrecision)", span="20-20", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MillisecondsAgo(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs", color=green, community=0];
m2_31 [label="DateHumanize.Verify(expected, days, TimeUnit.Day, Tense.Future, DefaultPrecision)", span="145-145", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.DaysFromNow(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs", color=green, community=0];
m2_32 [label="DateHumanize.Verify(expected, months, TimeUnit.Month, Tense.Past, defaultPrecision)", span="156-156", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MonthsAgo(int, string)", color=red, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs"];
m2_34 [label="Entry Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MonthsFromNow(int, string)", span="167-167", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MonthsFromNow(int, string)", color=green, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs"];
m2_33 [label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MonthsAgo(int, string)", span="154-154", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MonthsAgo(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m2_10 [label="DateHumanize.Verify(expected, seconds, TimeUnit.Second, Tense.Past, DefaultPrecision)", span="46-46", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.SecondsAgo(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs", color=green, community=0];
m2_11 [label="DateHumanize.Verify(expected, seconds, TimeUnit.Second, Tense.Future, defaultPrecision)", span="58-58", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.SecondsFromNow(int, string)", color=red, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs"];
m2_12 [label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.SecondsFromNow(int, string)", span="56-56", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.SecondsFromNow(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m2_28 [label="DateHumanize.Verify(expected, days, TimeUnit.Day, Tense.Past, DefaultPrecision)", span="131-131", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.DaysAgo(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs", color=green, community=0];
m2_29 [label="DateHumanize.Verify(expected, days, TimeUnit.Day, Tense.Future, defaultPrecision)", span="143-143", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.DaysFromNow(int, string)", color=red, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs"];
m2_30 [label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.DaysFromNow(int, string)", span="141-141", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.DaysFromNow(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m2_35 [label="DateHumanize.Verify(expected, months, TimeUnit.Month, Tense.Future, defaultPrecision)", span="169-169", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MonthsFromNow(int, string)", color=red, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs"];
m2_37 [label="Entry Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.YearsAgo(int, string)", span="175-175", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.YearsAgo(int, string)", color=green, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs"];
m2_36 [label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MonthsFromNow(int, string)", span="167-167", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MonthsFromNow(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m2_22 [label="DateHumanize.Verify(expected, hours, TimeUnit.Hour, Tense.Past, DefaultPrecision)", span="103-103", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.HoursAgo(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs", color=green, community=0];
m2_23 [label="DateHumanize.Verify(expected, hours, TimeUnit.Hour, Tense.Future, defaultPrecision)", span="115-115", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.HoursFromNow(int, string)", color=red, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs"];
m2_25 [label="Entry Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.DaysAgo(int, string)", span="127-127", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.DaysAgo(int, string)", color=green, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs"];
m2_24 [label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.HoursFromNow(int, string)", span="113-113", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.HoursFromNow(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m2_26 [label="DateHumanize.Verify(expected, days, TimeUnit.Day, Tense.Past, defaultPrecision)", span="129-129", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.DaysAgo(int, string)", color=red, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs"];
m2_27 [label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.DaysAgo(int, string)", span="127-127", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.DaysAgo(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m2_38 [label="DateHumanize.Verify(expected, years, TimeUnit.Year, Tense.Past, defaultPrecision)", span="177-177", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.YearsAgo(int, string)", color=red, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs"];
m2_40 [label="Entry Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.YearsFromNow(int, string)", span="183-183", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.YearsFromNow(int, string)", color=green, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs"];
m2_39 [label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.YearsAgo(int, string)", span="175-175", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.YearsAgo(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m2_17 [label="DateHumanize.Verify(expected, minutes, TimeUnit.Minute, Tense.Future, defaultPrecision)", span="86-86", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MinutesFromNow(int, string)", color=red, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs"];
m2_19 [label="Entry Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.HoursAgo(int, string)", span="99-99", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.HoursAgo(int, string)", color=green, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs"];
m2_18 [label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MinutesFromNow(int, string)", span="84-84", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MinutesFromNow(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m2_41 [label="DateHumanize.Verify(expected, years, TimeUnit.Year, Tense.Future, defaultPrecision)", span="185-185", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.YearsFromNow(int, string)", color=red, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs"];
m2_43 [label="DateHumanize.Verify(expected, years, TimeUnit.Year, Tense.Future, DefaultPrecision)", span="187-187", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.YearsFromNow(int, string)", color=green, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs"];
m2_42 [label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.YearsFromNow(int, string)", span="183-183", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.YearsFromNow(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m2_7 [label="DateHumanize.Verify(expected, milliseconds, TimeUnit.Millisecond, Tense.Future, DefaultPrecision)", span="32-32", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MillisecondsFromNow(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs", color=green, community=0];
m2_8 [label="DateHumanize.Verify(expected, seconds, TimeUnit.Second, Tense.Past, defaultPrecision)", span="44-44", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.SecondsAgo(int, string)", color=red, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs"];
m2_9 [label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.SecondsAgo(int, string)", span="42-42", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.SecondsAgo(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m2_5 [label="DateHumanize.Verify(expected, milliseconds, TimeUnit.Millisecond, Tense.Future, defaultPrecision)", span="30-30", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MillisecondsFromNow(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs", color=red, community=0];
m2_20 [label="DateHumanize.Verify(expected, hours, TimeUnit.Hour, Tense.Past, defaultPrecision)", span="101-101", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.HoursAgo(int, string)", color=red, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs"];
m2_21 [label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.HoursAgo(int, string)", span="99-99", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.HoursAgo(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m2_4 [label="Entry Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MillisecondsFromNow(int, string)", span="28-28", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MillisecondsFromNow(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m2_6 [label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MillisecondsFromNow(int, string)", span="28-28", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MillisecondsFromNow(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m2_0 [label="Entry Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MillisecondsAgo(int, string)", span="16-16", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MillisecondsAgo(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m2_1 [label="DateHumanize.Verify(expected, milliseconds, TimeUnit.Millisecond, Tense.Past, defaultPrecision)", span="18-18", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MillisecondsAgo(int, string)", color=red, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs"];
m2_2 [label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MillisecondsAgo(int, string)", span="16-16", cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MillisecondsAgo(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs"];
m3_3 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="DefaultNumberToWordsConverter.cs"];
m3_0 [label="Entry Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.Convert(int)", span="4-4", cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.Convert(int)", file="DefaultNumberToWordsConverter.cs"];
m3_1 [label="return number.ToString();", span="6-6", cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.Convert(int)", file="DefaultNumberToWordsConverter.cs", color=green, community=0];
m3_2 [label="Exit Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.Convert(int)", span="4-4", cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.Convert(int)", file="DefaultNumberToWordsConverter.cs"];
m3_4 [label="Entry Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.ConvertToOrdinal(int)", span="9-9", cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.ConvertToOrdinal(int)", file="DefaultNumberToWordsConverter.cs"];
m3_5 [label="return number.ToString();", span="11-11", cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.ConvertToOrdinal(int)", file="DefaultNumberToWordsConverter.cs"];
m3_6 [label="Exit Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.ConvertToOrdinal(int)", span="9-9", cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.ConvertToOrdinal(int)", file="DefaultNumberToWordsConverter.cs"];
m4_13 [label="Entry int.Ordinalize(Humanizer.GrammaticalGender)", span="53-53", cluster="int.Ordinalize(Humanizer.GrammaticalGender)", file="EnglishNumberToWordsConverter.cs"];
m4_5 [label="Entry string.Ordinalize(Humanizer.GrammaticalGender)", span="29-29", cluster="string.Ordinalize(Humanizer.GrammaticalGender)", file="EnglishNumberToWordsConverter.cs"];
m4_2 [label="Entry Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeString(string, string)", span="25-25", cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeString(string, string)", file="EnglishNumberToWordsConverter.cs"];
m4_3 [label="Assert.Equal(number.Ordinalize(GrammaticalGender.Masculine), ordinalized)", span="27-27", cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeString(string, string)", file="EnglishNumberToWordsConverter.cs"];
m4_4 [label="Exit Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeString(string, string)", span="25-25", cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeString(string, string)", file="EnglishNumberToWordsConverter.cs"];
m4_6 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="EnglishNumberToWordsConverter.cs"];
m4_14 [label="Entry Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeNumberFeminine(int, string)", span="84-84", cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeNumberFeminine(int, string)", file="EnglishNumberToWordsConverter.cs"];
m4_15 [label="Assert.Equal(number.Ordinalize(GrammaticalGender.Feminine), ordinalized)", span="86-86", cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeNumberFeminine(int, string)", file="EnglishNumberToWordsConverter.cs"];
m4_16 [label="Exit Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeNumberFeminine(int, string)", span="84-84", cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeNumberFeminine(int, string)", file="EnglishNumberToWordsConverter.cs"];
m4_10 [label="Entry Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeNumber(int, string)", span="64-64", cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeNumber(int, string)", file="EnglishNumberToWordsConverter.cs"];
m4_11 [label="Assert.Equal(number.Ordinalize(GrammaticalGender.Masculine), ordinalized)", span="66-66", cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeNumber(int, string)", file="EnglishNumberToWordsConverter.cs"];
m4_12 [label="Exit Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeNumber(int, string)", span="64-64", cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeNumber(int, string)", file="EnglishNumberToWordsConverter.cs"];
m4_0 [label="Entry Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeTests()", span="6-6", cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeTests()", file="EnglishNumberToWordsConverter.cs"];
m4_1 [label="Exit Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeTests()", span="6-6", cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeTests()", file="EnglishNumberToWordsConverter.cs"];
m4_7 [label="Entry Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeStringFeminine(string, string)", span="44-44", cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeStringFeminine(string, string)", file="EnglishNumberToWordsConverter.cs"];
m4_8 [label="Assert.Equal(number.Ordinalize(GrammaticalGender.Feminine), ordinalized)", span="46-46", cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeStringFeminine(string, string)", file="EnglishNumberToWordsConverter.cs"];
m4_9 [label="Exit Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeStringFeminine(string, string)", span="44-44", cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeStringFeminine(string, string)", file="EnglishNumberToWordsConverter.cs"];
m9_2 [label="Entry Humanizer.Localisation.NumberToWords.INumberToWordsConverter.ConvertToOrdinal(int)", span="19-19", cluster="Humanizer.Localisation.NumberToWords.INumberToWordsConverter.ConvertToOrdinal(int)", file="INumberToWordsConverter.cs"];
m9_3 [label="Exit Humanizer.Localisation.NumberToWords.INumberToWordsConverter.ConvertToOrdinal(int)", span="19-19", cluster="Humanizer.Localisation.NumberToWords.INumberToWordsConverter.ConvertToOrdinal(int)", file="INumberToWordsConverter.cs"];
m9_0 [label="Entry Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(int)", span="12-12", cluster="Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(int)", file="INumberToWordsConverter.cs"];
m9_1 [label="Exit Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(int)", span="12-12", cluster="Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(int)", file="INumberToWordsConverter.cs"];
m10_4 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="NumberToOrdinalWordsTests.cs"];
m10_0 [label="Entry Humanizer.Tests.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", span="50-50", cluster="Humanizer.Tests.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", file="NumberToOrdinalWordsTests.cs"];
m10_1 [label="Assert.Equal(words, number.ToOrdinalWords())", span="52-52", cluster="Humanizer.Tests.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", file="NumberToOrdinalWordsTests.cs"];
m10_2 [label="Exit Humanizer.Tests.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", span="50-50", cluster="Humanizer.Tests.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", file="NumberToOrdinalWordsTests.cs"];
m10_3 [label="Entry int.ToOrdinalWords()", span="37-37", cluster="int.ToOrdinalWords()", file="NumberToOrdinalWordsTests.cs"];
m11_7 [label="Entry Unk.NotEqual", span="", cluster="Unk.NotEqual", file="NumberToWordsFactoryTests.cs"];
m11_5 [label="Entry Humanizer.Tests.AmbientCulture.AmbientCulture(string)", span="17-17", cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(string)", file="NumberToWordsFactoryTests.cs"];
m11_6 [label="Entry int.ToWords()", span="27-27", cluster="int.ToWords()", file="NumberToWordsFactoryTests.cs"];
m11_8 [label="Entry Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetRfcStandardLanguageSpecificFactory()", span="17-17", cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetRfcStandardLanguageSpecificFactory()", file="NumberToWordsFactoryTests.cs"];
m11_9 [label="new AmbientCulture(''pt-BR'')", span="19-19", cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetRfcStandardLanguageSpecificFactory()", color=red, community=0, file="NumberToWordsFactoryTests.cs"];
m11_10 [label="string result = 1000000000.ToWords()", span="21-21", cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetRfcStandardLanguageSpecificFactory()", color=red, community=0, file="NumberToWordsFactoryTests.cs"];
m11_11 [label="Assert.NotEqual(''1000000000'', result)", span="22-22", cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetRfcStandardLanguageSpecificFactory()", color=red, community=0, file="NumberToWordsFactoryTests.cs"];
m11_12 [label="Exit Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetRfcStandardLanguageSpecificFactory()", span="17-17", cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetRfcStandardLanguageSpecificFactory()", file="NumberToWordsFactoryTests.cs"];
m11_0 [label="Entry Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetTwoLetterIsoLanguageSpecificFactory()", span="7-7", cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetTwoLetterIsoLanguageSpecificFactory()", file="NumberToWordsFactoryTests.cs"];
m11_1 [label="new AmbientCulture(''ar'')", span="9-9", cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetTwoLetterIsoLanguageSpecificFactory()", color=red, community=0, file="NumberToWordsFactoryTests.cs"];
m11_2 [label="string result = 1000000000.ToWords()", span="11-11", cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetTwoLetterIsoLanguageSpecificFactory()", color=red, community=0, file="NumberToWordsFactoryTests.cs"];
m11_3 [label="Assert.NotEqual(''1000000000'', result)", span="12-12", cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetTwoLetterIsoLanguageSpecificFactory()", color=red, community=0, file="NumberToWordsFactoryTests.cs"];
m11_4 [label="Exit Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetTwoLetterIsoLanguageSpecificFactory()", span="7-7", cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetTwoLetterIsoLanguageSpecificFactory()", file="NumberToWordsFactoryTests.cs"];
m11_13 [label="Entry Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetCorrectRfcStandardLanguageSpecificFactory()", span="27-27", cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetCorrectRfcStandardLanguageSpecificFactory()", file="NumberToWordsFactoryTests.cs"];
m11_14 [label="string resultPtBr", span="29-29", cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetCorrectRfcStandardLanguageSpecificFactory()", color=red, community=0, file="NumberToWordsFactoryTests.cs"];
m11_15 [label="int number = 1000000000", span="30-30", cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetCorrectRfcStandardLanguageSpecificFactory()", color=red, community=0, file="NumberToWordsFactoryTests.cs"];
m11_16 [label="new AmbientCulture(''pt-BR'')", span="31-31", cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetCorrectRfcStandardLanguageSpecificFactory()", color=red, community=0, file="NumberToWordsFactoryTests.cs"];
m11_17 [label="resultPtBr = number.ToWords()", span="33-33", cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetCorrectRfcStandardLanguageSpecificFactory()", color=red, community=0, file="NumberToWordsFactoryTests.cs"];
m11_20 [label="resultPtPt = number.ToWords()", span="39-39", cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetCorrectRfcStandardLanguageSpecificFactory()", color=red, community=0, file="NumberToWordsFactoryTests.cs"];
m11_18 [label="string resultPtPt", span="36-36", cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetCorrectRfcStandardLanguageSpecificFactory()", color=red, community=0, file="NumberToWordsFactoryTests.cs"];
m11_21 [label="Assert.NotEqual(resultPtBr, resultPtPt)", span="42-42", cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetCorrectRfcStandardLanguageSpecificFactory()", color=red, community=0, file="NumberToWordsFactoryTests.cs"];
m11_19 [label="new AmbientCulture(''pt-PT'')", span="37-37", cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetCorrectRfcStandardLanguageSpecificFactory()", color=red, community=0, file="NumberToWordsFactoryTests.cs"];
m11_22 [label="Exit Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetCorrectRfcStandardLanguageSpecificFactory()", span="27-27", cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetCorrectRfcStandardLanguageSpecificFactory()", file="NumberToWordsFactoryTests.cs"];
m12_2 [label="Entry Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.ToWordsPortuguese(int, string)", span="41-41", cluster="Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.ToWordsPortuguese(int, string)", file="NumberToWordsTests.cs"];
m12_3 [label="Assert.Equal(expected, number.ToWords())", span="43-43", cluster="Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.ToWordsPortuguese(int, string)", file="NumberToWordsTests.cs"];
m12_4 [label="Exit Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.ToWordsPortuguese(int, string)", span="41-41", cluster="Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.ToWordsPortuguese(int, string)", file="NumberToWordsTests.cs"];
m12_0 [label="Entry Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.NumberToWordsTests()", span="7-7", cluster="Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.NumberToWordsTests()", file="NumberToWordsTests.cs"];
m12_1 [label="Exit Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.NumberToWordsTests()", span="7-7", cluster="Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.NumberToWordsTests()", file="NumberToWordsTests.cs"];
m12_5 [label="Entry int.ToWords()", span="27-27", cluster="int.ToWords()", file="NumberToWordsTests.cs"];
m12_6 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="NumberToWordsTests.cs"];
m13_0 [label="Entry Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", span="7-7", cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", file="RussianFormatter.cs"];
m13_1 [label="var mod100 = number%100", span="9-9", cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=green, community=0, file="RussianFormatter.cs"];
m13_3 [label="var mod10 = number%10", span="12-12", cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=red, community=0, file="RussianFormatter.cs"];
m13_5 [label="return resourceKey + SingularPostfix;", span="15-15", cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=green, community=0, file="RussianFormatter.cs"];
m13_7 [label="return resourceKey + PaucalPostfix;", span="18-18", cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=green, community=0, file="RussianFormatter.cs"];
m13_8 [label="return resourceKey;", span="21-21", cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=red, community=0, file="RussianFormatter.cs"];
m13_2 [label="mod100/10 != 1", span="10-10", cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=green, community=0, file="RussianFormatter.cs"];
m13_4 [label="mod10 == 1", span="14-14", cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=green, community=0, file="RussianFormatter.cs"];
m13_6 [label="mod10 > 1 && mod10 < 5", span="17-17", cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=green, community=0, file="RussianFormatter.cs"];
m13_9 [label="Exit Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", span="7-7", cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", file="RussianFormatter.cs"];
m16_6 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="SpanishNumberToWordsConverter.cs"];
m16_33 [label="Entry Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.NoTime()", span="64-64", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.NoTime()", file="SpanishNumberToWordsConverter.cs"];
m16_34 [label="var noTime = TimeSpan.Zero", span="66-66", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.NoTime()", file="SpanishNumberToWordsConverter.cs"];
m16_35 [label="var actual = noTime.Humanize()", span="67-67", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.NoTime()", file="SpanishNumberToWordsConverter.cs"];
m16_36 [label="Assert.Equal(''pas de temps'', actual)", span="68-68", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.NoTime()", file="SpanishNumberToWordsConverter.cs"];
m16_37 [label="Exit Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.NoTime()", span="64-64", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.NoTime()", file="SpanishNumberToWordsConverter.cs"];
m16_0 [label="Entry Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.TimeSpanHumanizeTests()", span="7-7", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.TimeSpanHumanizeTests()", file="SpanishNumberToWordsConverter.cs"];
m16_1 [label="Exit Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.TimeSpanHumanizeTests()", span="7-7", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.TimeSpanHumanizeTests()", file="SpanishNumberToWordsConverter.cs"];
m16_22 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="SpanishNumberToWordsConverter.cs"];
m16_28 [label="Entry Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Milliseconds(int, string)", span="57-57", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Milliseconds(int, string)", file="SpanishNumberToWordsConverter.cs"];
m16_29 [label="var actual = TimeSpan.FromMilliseconds(ms).Humanize()", span="59-59", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Milliseconds(int, string)", file="SpanishNumberToWordsConverter.cs"];
m16_30 [label="Assert.Equal(expected, actual)", span="60-60", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Milliseconds(int, string)", file="SpanishNumberToWordsConverter.cs"];
m16_31 [label="Exit Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Milliseconds(int, string)", span="57-57", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Milliseconds(int, string)", file="SpanishNumberToWordsConverter.cs"];
m16_32 [label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0", cluster="System.TimeSpan.FromMilliseconds(double)", file="SpanishNumberToWordsConverter.cs"];
m16_8 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="SpanishNumberToWordsConverter.cs"];
m16_27 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="SpanishNumberToWordsConverter.cs"];
m16_17 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="SpanishNumberToWordsConverter.cs"];
m16_18 [label="Entry Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Minutes(int, string)", span="39-39", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Minutes(int, string)", file="SpanishNumberToWordsConverter.cs"];
m16_19 [label="var actual = TimeSpan.FromMinutes(minutes).Humanize()", span="41-41", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Minutes(int, string)", file="SpanishNumberToWordsConverter.cs"];
m16_20 [label="Assert.Equal(expected, actual)", span="42-42", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Minutes(int, string)", file="SpanishNumberToWordsConverter.cs"];
m16_21 [label="Exit Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Minutes(int, string)", span="39-39", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Minutes(int, string)", file="SpanishNumberToWordsConverter.cs"];
m16_2 [label="Entry Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Weeks(int, string)", span="12-12", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Weeks(int, string)", file="SpanishNumberToWordsConverter.cs"];
m16_3 [label="var actual = TimeSpan.FromDays(days).Humanize()", span="14-14", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Weeks(int, string)", file="SpanishNumberToWordsConverter.cs"];
m16_4 [label="Assert.Equal(expected, actual)", span="15-15", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Weeks(int, string)", file="SpanishNumberToWordsConverter.cs"];
m16_5 [label="Exit Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Weeks(int, string)", span="12-12", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Weeks(int, string)", file="SpanishNumberToWordsConverter.cs"];
m16_9 [label="Entry Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Days(int, string)", span="21-21", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Days(int, string)", file="SpanishNumberToWordsConverter.cs"];
m16_10 [label="var actual = TimeSpan.FromDays(days).Humanize()", span="23-23", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Days(int, string)", file="SpanishNumberToWordsConverter.cs"];
m16_11 [label="Assert.Equal(expected, actual)", span="24-24", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Days(int, string)", file="SpanishNumberToWordsConverter.cs"];
m16_12 [label="Exit Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Days(int, string)", span="21-21", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Days(int, string)", file="SpanishNumberToWordsConverter.cs"];
m16_13 [label="Entry Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Hours(int, string)", span="30-30", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Hours(int, string)", file="SpanishNumberToWordsConverter.cs"];
m16_14 [label="var actual = TimeSpan.FromHours(hours).Humanize()", span="32-32", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Hours(int, string)", file="SpanishNumberToWordsConverter.cs"];
m16_15 [label="Assert.Equal(expected, actual)", span="33-33", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Hours(int, string)", file="SpanishNumberToWordsConverter.cs"];
m16_16 [label="Exit Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Hours(int, string)", span="30-30", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Hours(int, string)", file="SpanishNumberToWordsConverter.cs"];
m16_7 [label="Entry System.TimeSpan.Humanize(int, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", span="27-27", cluster="System.TimeSpan.Humanize(int, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="SpanishNumberToWordsConverter.cs"];
m16_23 [label="Entry Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Seconds(int, string)", span="48-48", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Seconds(int, string)", file="SpanishNumberToWordsConverter.cs"];
m16_24 [label="var actual = TimeSpan.FromSeconds(seconds).Humanize()", span="50-50", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Seconds(int, string)", file="SpanishNumberToWordsConverter.cs"];
m16_25 [label="Assert.Equal(expected, actual)", span="51-51", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Seconds(int, string)", file="SpanishNumberToWordsConverter.cs"];
m16_26 [label="Exit Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Seconds(int, string)", span="48-48", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Seconds(int, string)", file="SpanishNumberToWordsConverter.cs"];
n45 -> n4  [key=1, style=dashed, color=red, label="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter"];
n45 -> n8  [key=1, style=dashed, color=red, label="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter"];
n45 -> n9  [key=1, style=dashed, color=red, label="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter"];
n45 -> n13  [key=1, style=dashed, color=red, label="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter"];
n45 -> n14  [key=1, style=dashed, color=red, label="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter"];
n45 -> n19  [key=1, style=dashed, color=red, label="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter"];
n45 -> d9  [key=1, style=dashed, color=green, label="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter"];
n45 -> d13  [key=1, style=dashed, color=green, label="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter"];
n45 -> d14  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter"];
n45 -> d19  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter"];
n45 -> d4  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter"];
n45 -> d8  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter"];
n0 -> n1  [key=0, style=solid];
n0 -> n3  [key=1, style=dashed, color=darkseagreen4, label=int];
n0 -> n4  [key=1, style=dashed, color=red, label=int];
n0 -> n6  [key=1, style=dashed, color=darkseagreen4, label=int];
n0 -> n7  [key=1, style=dashed, color=red, label=int];
n0 -> n8  [key=1, style=dashed, color=red, label=int];
n0 -> n9  [key=1, style=dashed, color=red, label=int];
n0 -> n10  [key=1, style=dashed, color=darkseagreen4, label=int];
n0 -> n11  [key=1, style=dashed, color=darkseagreen4, label=int];
n0 -> n12  [key=1, style=dashed, color=red, label=int];
n0 -> n13  [key=1, style=dashed, color=red, label=int];
n0 -> n14  [key=1, style=dashed, color=red, label=int];
n0 -> n15  [key=1, style=dashed, color=darkseagreen4, label=int];
n0 -> n16  [key=1, style=dashed, color=darkseagreen4, label=int];
n0 -> n17  [key=1, style=dashed, color=red, label=int];
n0 -> n19  [key=1, style=dashed, color=red, label=int];
n0 -> n20  [key=1, style=dashed, color=darkseagreen4, label=int];
n0 -> n21  [key=1, style=dashed, color=darkseagreen4, label=int];
n0 -> n22  [key=1, style=dashed, color=darkseagreen4, label=int];
n0 -> n26  [key=1, style=dashed, color=red, label=int];
n0 -> n27  [key=1, style=dashed, color=darkseagreen4, label=int];
n0 -> n28  [key=1, style=dashed, color=darkseagreen4, label=int];
n0 -> n31  [key=1, style=dashed, color=darkseagreen4, label=int];
n0 -> n32  [key=1, style=dashed, color=red, label=int];
n0 -> n33  [key=1, style=dashed, color=red, label=int];
n0 -> n34  [key=1, style=dashed, color=darkseagreen4, label=int];
n0 -> n35  [key=1, style=dashed, color=red, label=int];
n0 -> n2  [key=3, color=darkorchid, style=bold, label="method methodReturn string Convert"];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid, color=red];
n3 -> n5  [key=0, style=solid];
n4 -> n38  [key=0, style=solid, color=red];
n4 -> n39  [key=2, style=dotted, color=red];
n4 -> n0  [key=2, style=dotted, color=red];
n4 -> n40  [key=2, style=dotted, color=red];
n6 -> n7  [key=0, style=solid, color=red];
n6 -> n11  [key=0, style=solid];
n6 -> d7  [key=0, style=solid];
n7 -> n8  [key=0, style=solid, color=red];
n7 -> n9  [key=0, style=solid, color=red];
n8 -> n10  [key=0, style=solid, color=red];
n8 -> n0  [key=2, style=dotted, color=red];
n8 -> n40  [key=2, style=dotted, color=red];
n8 -> n42  [key=2, style=dotted, color=red];
n9 -> n10  [key=0, style=solid, color=red];
n9 -> n0  [key=2, style=dotted, color=red];
n9 -> n40  [key=2, style=dotted, color=red];
n9 -> n42  [key=2, style=dotted, color=red];
n10 -> n11  [key=0, style=solid];
n10 -> n10  [key=1, style=dashed, color=darkseagreen4, label=int];
n10 -> n12  [key=1, style=dashed, color=red, label=int];
n10 -> n13  [key=1, style=dashed, color=red, label=int];
n10 -> n14  [key=1, style=dashed, color=red, label=int];
n10 -> n15  [key=1, style=dashed, color=darkseagreen4, label=int];
n10 -> n16  [key=1, style=dashed, color=darkseagreen4, label=int];
n10 -> n17  [key=1, style=dashed, color=red, label=int];
n10 -> n19  [key=1, style=dashed, color=red, label=int];
n10 -> n20  [key=1, style=dashed, color=darkseagreen4, label=int];
n10 -> n21  [key=1, style=dashed, color=darkseagreen4, label=int];
n10 -> n22  [key=1, style=dashed, color=darkseagreen4, label=int];
n10 -> n26  [key=1, style=dashed, color=red, label=int];
n10 -> n27  [key=1, style=dashed, color=darkseagreen4, label=int];
n10 -> n28  [key=1, style=dashed, color=darkseagreen4, label=int];
n10 -> n31  [key=1, style=dashed, color=darkseagreen4, label=int];
n10 -> n32  [key=1, style=dashed, color=red, label=int];
n10 -> n33  [key=1, style=dashed, color=red, label=int];
n10 -> n34  [key=1, style=dashed, color=darkseagreen4, label=int];
n10 -> n35  [key=1, style=dashed, color=red, label=int];
n11 -> n12  [key=0, style=solid, color=red];
n11 -> n16  [key=0, style=solid];
n11 -> d12  [key=0, style=solid, color=green];
n11 -> d16  [key=0, style=solid, color=green];
n12 -> n13  [key=0, style=solid, color=red];
n12 -> n14  [key=0, style=solid, color=red];
n13 -> n15  [key=0, style=solid, color=red];
n13 -> n0  [key=2, style=dotted, color=red];
n13 -> n40  [key=2, style=dotted, color=red];
n13 -> n42  [key=2, style=dotted, color=red];
n14 -> n15  [key=0, style=solid, color=red];
n14 -> n0  [key=2, style=dotted, color=red];
n14 -> n40  [key=2, style=dotted, color=red];
n14 -> n42  [key=2, style=dotted, color=red];
n15 -> n16  [key=0, style=solid];
n15 -> n15  [key=1, style=dashed, color=darkseagreen4, label=int];
n15 -> n17  [key=1, style=dashed, color=red, label=int];
n15 -> n19  [key=1, style=dashed, color=red, label=int];
n15 -> n20  [key=1, style=dashed, color=darkseagreen4, label=int];
n15 -> n21  [key=1, style=dashed, color=darkseagreen4, label=int];
n15 -> n22  [key=1, style=dashed, color=darkseagreen4, label=int];
n15 -> n26  [key=1, style=dashed, color=red, label=int];
n15 -> n27  [key=1, style=dashed, color=darkseagreen4, label=int];
n15 -> n28  [key=1, style=dashed, color=darkseagreen4, label=int];
n15 -> n31  [key=1, style=dashed, color=darkseagreen4, label=int];
n15 -> n32  [key=1, style=dashed, color=red, label=int];
n15 -> n33  [key=1, style=dashed, color=red, label=int];
n15 -> n34  [key=1, style=dashed, color=darkseagreen4, label=int];
n15 -> n35  [key=1, style=dashed, color=red, label=int];
n16 -> n17  [key=0, style=solid, color=red];
n16 -> n21  [key=0, style=solid];
n17 -> n18  [key=0, style=solid, color=red];
n17 -> n19  [key=0, style=solid, color=red];
n19 -> n20  [key=0, style=solid, color=red];
n19 -> n0  [key=2, style=dotted, color=red];
n19 -> n40  [key=2, style=dotted, color=red];
n19 -> n42  [key=2, style=dotted, color=red];
n20 -> n21  [key=0, style=solid];
n20 -> n20  [key=1, style=dashed, color=darkseagreen4, label=int];
n20 -> n22  [key=1, style=dashed, color=darkseagreen4, label=int];
n20 -> n26  [key=1, style=dashed, color=red, label=int];
n20 -> n27  [key=1, style=dashed, color=darkseagreen4, label=int];
n20 -> n28  [key=1, style=dashed, color=darkseagreen4, label=int];
n20 -> n31  [key=1, style=dashed, color=darkseagreen4, label=int];
n20 -> n32  [key=1, style=dashed, color=red, label=int];
n20 -> n33  [key=1, style=dashed, color=red, label=int];
n20 -> n34  [key=1, style=dashed, color=darkseagreen4, label=int];
n20 -> n35  [key=1, style=dashed, color=red, label=int];
n21 -> n22  [key=0, style=solid];
n21 -> n28  [key=0, style=solid];
n22 -> n23  [key=0, style=solid, color=red];
n22 -> n26  [key=0, style=solid, color=red];
n26 -> n27  [key=0, style=solid, color=red];
n26 -> n42  [key=2, style=dotted, color=red];
n27 -> n28  [key=0, style=solid];
n27 -> n27  [key=1, style=dashed, color=darkseagreen4, label=int];
n27 -> n31  [key=1, style=dashed, color=darkseagreen4, label=int];
n27 -> n32  [key=1, style=dashed, color=red, label=int];
n27 -> n33  [key=1, style=dashed, color=red, label=int];
n27 -> n34  [key=1, style=dashed, color=darkseagreen4, label=int];
n27 -> n35  [key=1, style=dashed, color=red, label=int];
n28 -> n29  [key=0, style=solid];
n28 -> n37  [key=0, style=solid];
n28 -> d37  [key=0, style=solid, color=green];
n31 -> n32  [key=0, style=solid, color=red];
n31 -> n33  [key=0, style=solid, color=red];
n32 -> n37  [key=0, style=solid, color=red];
n32 -> n42  [key=2, style=dotted, color=red];
n33 -> n34  [key=0, style=solid, color=red];
n33 -> n35  [key=1, style=dashed, color=red, label=lastPart];
n33 -> n36  [key=1, style=dashed, color=red, label=lastPart];
n34 -> n35  [key=0, style=solid, color=red];
n34 -> n36  [key=0, style=solid];
n35 -> n36  [key=0, style=solid, color=red];
n35 -> n40  [key=2, style=dotted, color=red];
n35 -> n35  [key=1, style=dashed, color=red, label=lastPart];
n2 -> n38  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n5 -> n41  [key=2, style=dotted];
n5 -> n8  [key=1, style=dashed, color=red, label=parts];
n5 -> n9  [key=1, style=dashed, color=red, label=parts];
n5 -> n13  [key=1, style=dashed, color=red, label=parts];
n5 -> n14  [key=1, style=dashed, color=red, label=parts];
n5 -> n18  [key=1, style=dashed, color=red, label=parts];
n5 -> n19  [key=1, style=dashed, color=red, label=parts];
n5 -> n23  [key=1, style=dashed, color=red, label=parts];
n5 -> n24  [key=1, style=dashed, color=red, label=parts];
n5 -> n25  [key=1, style=dashed, color=red, label=parts];
n5 -> n26  [key=1, style=dashed, color=red, label=parts];
n5 -> n29  [key=1, style=dashed, color=darkseagreen4, label=parts];
n5 -> n30  [key=1, style=dashed, color=darkseagreen4, label=parts];
n5 -> n32  [key=1, style=dashed, color=red, label=parts];
n5 -> n36  [key=1, style=dashed, color=darkseagreen4, label=parts];
n5 -> n37  [key=1, style=dashed, color=darkseagreen4, label=parts];
n18 -> n20  [key=0, style=solid, color=red];
n18 -> n42  [key=2, style=dotted, color=red];
n23 -> n24  [key=0, style=solid, color=red];
n23 -> n25  [key=0, style=solid, color=red];
n24 -> n27  [key=0, style=solid, color=red];
n24 -> n42  [key=2, style=dotted, color=red];
n25 -> n27  [key=0, style=solid, color=red];
n25 -> n42  [key=2, style=dotted, color=red];
n29 -> n30  [key=0, style=solid];
n29 -> n31  [key=0, style=solid];
n29 -> d31  [key=0, style=solid, color=green];
n30 -> n31  [key=0, style=solid];
n30 -> n42  [key=2, style=dotted];
n30 -> d31  [key=0, style=solid, color=green];
n30 -> d42  [key=2, style=dotted];
n36 -> n37  [key=0, style=solid];
n36 -> n42  [key=2, style=dotted];
n37 -> n38  [key=0, style=solid];
n37 -> n43  [key=2, style=dotted];
n37 -> n44  [key=2, style=dotted];
n38 -> n0  [key=0, style=bold, color=blue];
d1 -> d2  [key=0, style=solid, color=green];
d1 -> d3  [key=0, style=solid, color=green];
d0 -> d1  [key=0, style=solid, color=green];
d0 -> d9  [key=1, style=dashed, color=green, label=int];
d0 -> d12  [key=1, style=dashed, color=green, label=int];
d0 -> d13  [key=1, style=dashed, color=green, label=int];
d0 -> d16  [key=1, style=dashed, color=green, label=int];
d0 -> d20  [key=1, style=dashed, color=green, label=int];
d0 -> d21  [key=1, style=dashed, color=green, label=int];
d0 -> d27  [key=1, style=dashed, color=green, label=int];
d0 -> d31  [key=1, style=dashed, color=green, label=int];
d0 -> d32  [key=1, style=dashed, color=green, label=int];
d0 -> d33  [key=1, style=dashed, color=green, label=int];
d0 -> d34  [key=1, style=dashed, color=green, label=int];
d0 -> d35  [key=1, style=dashed, color=green, label=int];
d0 -> d2  [key=3, color=green, style=bold, label="method methodReturn string Convert"];
d0 -> d3  [key=1, style=dashed, color=darkseagreen4, label=int];
d0 -> d4  [key=1, style=dashed, color=darkseagreen4, label=int];
d0 -> n6  [key=1, style=dashed, color=darkseagreen4, label=int];
d0 -> d7  [key=1, style=dashed, color=darkseagreen4, label=int];
d0 -> d8  [key=1, style=dashed, color=darkseagreen4, label=int];
d0 -> d10  [key=1, style=dashed, color=darkseagreen4, label=int];
d0 -> n11  [key=1, style=dashed, color=darkseagreen4, label=int];
d0 -> d14  [key=1, style=dashed, color=darkseagreen4, label=int];
d0 -> d15  [key=1, style=dashed, color=darkseagreen4, label=int];
d0 -> d17  [key=1, style=dashed, color=darkseagreen4, label=int];
d0 -> d19  [key=1, style=dashed, color=darkseagreen4, label=int];
d0 -> d22  [key=1, style=dashed, color=darkseagreen4, label=int];
d0 -> d26  [key=1, style=dashed, color=darkseagreen4, label=int];
d0 -> n28  [key=1, style=dashed, color=darkseagreen4, label=int];
d2 -> d38  [key=0, style=solid, color=green];
d3 -> d4  [key=0, style=solid];
d3 -> d5  [key=0, style=solid];
d9 -> d10  [key=0, style=solid, color=green];
d9 -> d0  [key=2, style=dotted, color=green];
d9 -> n40  [key=2, style=dotted, color=green];
d9 -> d42  [key=2, style=dotted, color=green];
d7 -> d9  [key=0, style=solid, color=green];
d7 -> d8  [key=0, style=solid];
d5 -> d9  [key=1, style=dashed, color=green, label=parts];
d5 -> d13  [key=1, style=dashed, color=green, label=parts];
d5 -> d32  [key=1, style=dashed, color=green, label=parts];
d5 -> d36  [key=1, style=dashed, color=green, label=parts];
d5 -> d37  [key=1, style=dashed, color=green, label=parts];
d5 -> n6  [key=0, style=solid];
d5 -> n41  [key=2, style=dotted];
d5 -> d8  [key=1, style=dashed, color=darkseagreen4, label=parts];
d5 -> d14  [key=1, style=dashed, color=darkseagreen4, label=parts];
d5 -> d18  [key=1, style=dashed, color=darkseagreen4, label=parts];
d5 -> d19  [key=1, style=dashed, color=darkseagreen4, label=parts];
d5 -> d23  [key=1, style=dashed, color=darkseagreen4, label=parts];
d5 -> d24  [key=1, style=dashed, color=darkseagreen4, label=parts];
d5 -> d25  [key=1, style=dashed, color=darkseagreen4, label=parts];
d5 -> d26  [key=1, style=dashed, color=darkseagreen4, label=parts];
d5 -> n29  [key=1, style=dashed, color=darkseagreen4, label=parts];
d5 -> n30  [key=1, style=dashed, color=darkseagreen4, label=parts];
d10 -> d12  [key=1, style=dashed, color=green, label=int];
d10 -> d13  [key=1, style=dashed, color=green, label=int];
d10 -> d16  [key=1, style=dashed, color=green, label=int];
d10 -> d20  [key=1, style=dashed, color=green, label=int];
d10 -> d21  [key=1, style=dashed, color=green, label=int];
d10 -> d27  [key=1, style=dashed, color=green, label=int];
d10 -> d31  [key=1, style=dashed, color=green, label=int];
d10 -> d32  [key=1, style=dashed, color=green, label=int];
d10 -> d33  [key=1, style=dashed, color=green, label=int];
d10 -> d34  [key=1, style=dashed, color=green, label=int];
d10 -> d35  [key=1, style=dashed, color=green, label=int];
d10 -> d10  [key=1, style=dashed, color=darkseagreen4, label=int];
d10 -> n11  [key=0, style=solid];
d10 -> d14  [key=1, style=dashed, color=darkseagreen4, label=int];
d10 -> d15  [key=1, style=dashed, color=darkseagreen4, label=int];
d10 -> d17  [key=1, style=dashed, color=darkseagreen4, label=int];
d10 -> d19  [key=1, style=dashed, color=darkseagreen4, label=int];
d10 -> d22  [key=1, style=dashed, color=darkseagreen4, label=int];
d10 -> d26  [key=1, style=dashed, color=darkseagreen4, label=int];
d10 -> n28  [key=1, style=dashed, color=darkseagreen4, label=int];
d12 -> d13  [key=0, style=solid, color=green];
d12 -> d14  [key=0, style=solid, color=green];
d13 -> d15  [key=0, style=solid, color=green];
d13 -> d0  [key=2, style=dotted, color=green];
d13 -> n40  [key=2, style=dotted, color=green];
d13 -> d42  [key=2, style=dotted, color=green];
d14 -> d0  [key=2, style=dotted];
d14 -> d42  [key=2, style=dotted];
d14 -> d15  [key=0, style=solid];
d14 -> n40  [key=2, style=dotted];
d15 -> d16  [key=0, style=solid, color=green];
d15 -> d20  [key=1, style=dashed, color=green, label=int];
d15 -> d21  [key=1, style=dashed, color=green, label=int];
d15 -> d27  [key=1, style=dashed, color=green, label=int];
d15 -> d31  [key=1, style=dashed, color=green, label=int];
d15 -> d32  [key=1, style=dashed, color=green, label=int];
d15 -> d33  [key=1, style=dashed, color=green, label=int];
d15 -> d34  [key=1, style=dashed, color=green, label=int];
d15 -> d35  [key=1, style=dashed, color=green, label=int];
d15 -> d15  [key=1, style=dashed, color=darkseagreen4, label=int];
d15 -> d17  [key=1, style=dashed, color=darkseagreen4, label=int];
d15 -> d19  [key=1, style=dashed, color=darkseagreen4, label=int];
d15 -> d22  [key=1, style=dashed, color=darkseagreen4, label=int];
d15 -> d26  [key=1, style=dashed, color=darkseagreen4, label=int];
d15 -> n28  [key=1, style=dashed, color=darkseagreen4, label=int];
d16 -> d17  [key=0, style=solid, color=green];
d16 -> d21  [key=0, style=solid, color=green];
d17 -> d18  [key=0, style=solid];
d17 -> d19  [key=0, style=solid];
d21 -> d22  [key=0, style=solid, color=green];
d21 -> n28  [key=0, style=solid, color=green];
d20 -> d20  [key=1, style=dashed, color=green, label=int];
d20 -> d21  [key=0, style=solid, color=green];
d20 -> d22  [key=1, style=dashed, color=green, label=int];
d20 -> d26  [key=1, style=dashed, color=green, label=int];
d20 -> d27  [key=1, style=dashed, color=green, label=int];
d20 -> n28  [key=1, style=dashed, color=green, label=int];
d20 -> d31  [key=1, style=dashed, color=green, label=int];
d20 -> d32  [key=1, style=dashed, color=green, label=int];
d20 -> d33  [key=1, style=dashed, color=green, label=int];
d20 -> d34  [key=1, style=dashed, color=green, label=int];
d20 -> d35  [key=1, style=dashed, color=green, label=int];
d19 -> d20  [key=0, style=solid, color=green];
d19 -> d0  [key=2, style=dotted];
d19 -> d42  [key=2, style=dotted];
d19 -> n40  [key=2, style=dotted];
d18 -> d20  [key=0, style=solid, color=green];
d18 -> d42  [key=2, style=dotted];
d22 -> d23  [key=0, style=solid];
d22 -> d26  [key=0, style=solid];
d26 -> d27  [key=0, style=solid, color=green];
d26 -> d42  [key=2, style=dotted];
d27 -> d27  [key=1, style=dashed, color=green, label=int];
d27 -> n28  [key=0, style=solid, color=green];
d27 -> d31  [key=1, style=dashed, color=green, label=int];
d27 -> d32  [key=1, style=dashed, color=green, label=int];
d27 -> d33  [key=1, style=dashed, color=green, label=int];
d27 -> d34  [key=1, style=dashed, color=green, label=int];
d27 -> d35  [key=1, style=dashed, color=green, label=int];
d31 -> d32  [key=0, style=solid, color=green];
d31 -> d33  [key=0, style=solid, color=green];
d32 -> d37  [key=0, style=solid, color=green];
d32 -> d42  [key=2, style=dotted, color=green];
d33 -> d34  [key=0, style=solid, color=green];
d33 -> d35  [key=1, style=dashed, color=green, label=lastPart];
d33 -> d36  [key=1, style=dashed, color=green, label=lastPart];
d34 -> d35  [key=0, style=solid, color=green];
d34 -> d36  [key=0, style=solid, color=green];
d35 -> d35  [key=1, style=dashed, color=green, label=lastPart];
d35 -> d36  [key=0, style=solid, color=green];
d35 -> n40  [key=2, style=dotted, color=green];
d24 -> d27  [key=0, style=solid, color=green];
d24 -> d42  [key=2, style=dotted];
d25 -> d27  [key=0, style=solid, color=green];
d25 -> d42  [key=2, style=dotted];
d37 -> d38  [key=0, style=solid, color=green];
d37 -> n43  [key=2, style=dotted, color=green];
d37 -> n44  [key=2, style=dotted, color=green];
d36 -> d37  [key=0, style=solid, color=green];
d36 -> d42  [key=2, style=dotted, color=green];
d38 -> d0  [key=0, style=bold, color=blue];
d4 -> d0  [key=2, style=dotted];
d4 -> d38  [key=0, style=solid];
d4 -> n39  [key=2, style=dotted];
d4 -> n40  [key=2, style=dotted];
d8 -> d0  [key=2, style=dotted];
d8 -> d10  [key=0, style=solid];
d8 -> d42  [key=2, style=dotted];
d8 -> n40  [key=2, style=dotted];
d23 -> d24  [key=0, style=solid];
d23 -> d25  [key=0, style=solid];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_17  [key=0, style=solid, color=green];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=2, style=dotted];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_7  [key=2, style=dotted];
m0_6 -> m0_4  [key=0, style=bold, color=blue];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_11  [key=2, style=dotted];
m0_10 -> m0_8  [key=0, style=bold, color=blue];
m0_12 -> m0_13  [key=0, style=solid, color=green];
m0_13 -> m0_14  [key=0, style=solid, color=green];
m0_13 -> m0_15  [key=2, style=dotted, color=green];
m0_13 -> m0_18  [key=0, style=solid, color=green];
m0_14 -> m0_12  [key=0, style=bold, color=blue];
m0_16 -> m0_17  [key=0, style=solid, color=red];
m0_16 -> m0_13  [key=0, style=solid, color=green];
m0_17 -> m0_18  [key=0, style=solid, color=red];
m0_17 -> m0_15  [key=2, style=dotted];
m0_17 -> m0_21  [key=0, style=solid, color=green];
m0_18 -> m0_16  [key=0, style=bold, color=blue];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_15  [key=2, style=dotted];
m0_21 -> m0_19  [key=0, style=bold, color=blue];
m2_13 -> m2_14  [key=0, style=solid, color=red];
m2_13 -> m2_16  [key=0, style=solid, color=green];
m2_13 -> m2_12  [key=0, style=solid, color=green];
m2_13 -> m2_5  [key=2, style=dotted, color=green];
m2_14 -> m2_15  [key=0, style=solid, color=red];
m2_14 -> m2_3  [key=2, style=dotted, color=red];
m2_16 -> m2_15  [key=0, style=solid, color=green];
m2_16 -> m2_5  [key=2, style=dotted, color=green];
m2_16 -> m2_17  [key=0, style=solid, color=red];
m2_16 -> m2_19  [key=0, style=solid, color=green];
m2_15 -> m2_13  [key=0, style=bold, color=blue];
m2_3 -> m2_2  [key=0, style=solid, color=green];
m2_3 -> m2_5  [key=2, style=dotted, color=green];
m2_31 -> m2_32  [key=0, style=solid, color=red];
m2_31 -> m2_34  [key=0, style=solid, color=green];
m2_31 -> m2_30  [key=0, style=solid, color=green];
m2_31 -> m2_5  [key=2, style=dotted, color=green];
m2_32 -> m2_33  [key=0, style=solid, color=red];
m2_32 -> m2_3  [key=2, style=dotted, color=red];
m2_34 -> m2_33  [key=0, style=solid, color=green];
m2_34 -> m2_5  [key=2, style=dotted, color=green];
m2_34 -> m2_35  [key=0, style=solid, color=red];
m2_34 -> m2_37  [key=0, style=solid, color=green];
m2_33 -> m2_31  [key=0, style=bold, color=blue];
m2_10 -> m2_11  [key=0, style=solid, color=red];
m2_10 -> m2_13  [key=0, style=solid, color=green];
m2_10 -> m2_9  [key=0, style=solid, color=green];
m2_10 -> m2_5  [key=2, style=dotted, color=green];
m2_11 -> m2_12  [key=0, style=solid, color=red];
m2_11 -> m2_3  [key=2, style=dotted, color=red];
m2_12 -> m2_10  [key=0, style=bold, color=blue];
m2_28 -> m2_29  [key=0, style=solid, color=red];
m2_28 -> m2_31  [key=0, style=solid, color=green];
m2_28 -> m2_27  [key=0, style=solid, color=green];
m2_28 -> m2_5  [key=2, style=dotted, color=green];
m2_29 -> m2_30  [key=0, style=solid, color=red];
m2_29 -> m2_3  [key=2, style=dotted, color=red];
m2_30 -> m2_28  [key=0, style=bold, color=blue];
m2_35 -> m2_36  [key=0, style=solid, color=red];
m2_35 -> m2_3  [key=2, style=dotted, color=red];
m2_37 -> m2_36  [key=0, style=solid, color=green];
m2_37 -> m2_5  [key=2, style=dotted, color=green];
m2_37 -> m2_38  [key=0, style=solid, color=red];
m2_37 -> m2_40  [key=0, style=solid, color=green];
m2_36 -> m2_34  [key=0, style=bold, color=blue];
m2_22 -> m2_23  [key=0, style=solid, color=red];
m2_22 -> m2_25  [key=0, style=solid, color=green];
m2_22 -> m2_21  [key=0, style=solid, color=green];
m2_22 -> m2_5  [key=2, style=dotted, color=green];
m2_23 -> m2_24  [key=0, style=solid, color=red];
m2_23 -> m2_3  [key=2, style=dotted, color=red];
m2_25 -> m2_24  [key=0, style=solid, color=green];
m2_25 -> m2_5  [key=2, style=dotted, color=green];
m2_25 -> m2_26  [key=0, style=solid, color=red];
m2_25 -> m2_28  [key=0, style=solid, color=green];
m2_24 -> m2_22  [key=0, style=bold, color=blue];
m2_26 -> m2_27  [key=0, style=solid, color=red];
m2_26 -> m2_3  [key=2, style=dotted, color=red];
m2_27 -> m2_25  [key=0, style=bold, color=blue];
m2_38 -> m2_39  [key=0, style=solid, color=red];
m2_38 -> m2_3  [key=2, style=dotted, color=red];
m2_40 -> m2_39  [key=0, style=solid, color=green];
m2_40 -> m2_5  [key=2, style=dotted, color=green];
m2_40 -> m2_41  [key=0, style=solid, color=red];
m2_40 -> m2_43  [key=0, style=solid, color=green];
m2_39 -> m2_37  [key=0, style=bold, color=blue];
m2_17 -> m2_18  [key=0, style=solid, color=red];
m2_17 -> m2_3  [key=2, style=dotted, color=red];
m2_19 -> m2_18  [key=0, style=solid, color=green];
m2_19 -> m2_5  [key=2, style=dotted, color=green];
m2_19 -> m2_20  [key=0, style=solid, color=red];
m2_19 -> m2_22  [key=0, style=solid, color=green];
m2_18 -> m2_16  [key=0, style=bold, color=blue];
m2_41 -> m2_42  [key=0, style=solid, color=red];
m2_41 -> m2_3  [key=2, style=dotted, color=red];
m2_43 -> m2_42  [key=0, style=solid, color=green];
m2_43 -> m2_5  [key=2, style=dotted, color=green];
m2_42 -> m2_40  [key=0, style=bold, color=blue];
m2_7 -> m2_8  [key=0, style=solid, color=red];
m2_7 -> m2_10  [key=0, style=solid, color=green];
m2_7 -> m2_6  [key=0, style=solid, color=green];
m2_7 -> m2_5  [key=2, style=dotted, color=green];
m2_8 -> m2_9  [key=0, style=solid, color=red];
m2_8 -> m2_3  [key=2, style=dotted, color=red];
m2_9 -> m2_7  [key=0, style=bold, color=blue];
m2_5 -> m2_6  [key=0, style=solid, color=red];
m2_5 -> m2_3  [key=2, style=dotted, color=red];
m2_20 -> m2_21  [key=0, style=solid, color=red];
m2_20 -> m2_3  [key=2, style=dotted, color=red];
m2_21 -> m2_19  [key=0, style=bold, color=blue];
m2_4 -> m2_5  [key=0, style=solid, color=red];
m2_4 -> m2_7  [key=0, style=solid, color=green];
m2_6 -> m2_4  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid, color=red];
m2_0 -> m2_3  [key=0, style=solid, color=green];
m2_1 -> m2_2  [key=0, style=solid, color=red];
m2_1 -> m2_3  [key=2, style=dotted, color=red];
m2_2 -> m2_0  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid, color=green];
m3_1 -> m3_2  [key=0, style=solid, color=green];
m3_1 -> m3_3  [key=2, style=dotted, color=green];
m3_2 -> m3_0  [key=0, style=bold, color=blue];
m3_4 -> m3_5  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_3  [key=2, style=dotted];
m3_6 -> m3_4  [key=0, style=bold, color=blue];
m4_2 -> m4_3  [key=0, style=solid];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_5  [key=2, style=dotted];
m4_3 -> m4_6  [key=2, style=dotted];
m4_4 -> m4_2  [key=0, style=bold, color=blue];
m4_14 -> m4_15  [key=0, style=solid];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_13  [key=2, style=dotted];
m4_15 -> m4_6  [key=2, style=dotted];
m4_16 -> m4_14  [key=0, style=bold, color=blue];
m4_10 -> m4_11  [key=0, style=solid];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_13  [key=2, style=dotted];
m4_11 -> m4_6  [key=2, style=dotted];
m4_12 -> m4_10  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_0  [key=0, style=bold, color=blue];
m4_7 -> m4_8  [key=0, style=solid];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_5  [key=2, style=dotted];
m4_8 -> m4_6  [key=2, style=dotted];
m4_9 -> m4_7  [key=0, style=bold, color=blue];
m9_2 -> m9_3  [key=0, style=solid];
m9_3 -> m9_2  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_0  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_3  [key=2, style=dotted];
m10_1 -> m10_4  [key=2, style=dotted];
m10_2 -> m10_0  [key=0, style=bold, color=blue];
m11_8 -> m11_9  [key=0, style=solid, color=red];
m11_9 -> m11_10  [key=0, style=solid, color=red];
m11_9 -> m11_5  [key=2, style=dotted, color=red];
m11_10 -> m11_11  [key=0, style=solid, color=red];
m11_10 -> m11_6  [key=2, style=dotted, color=red];
m11_11 -> m11_12  [key=0, style=solid, color=red];
m11_11 -> m11_7  [key=2, style=dotted, color=red];
m11_12 -> m11_8  [key=0, style=bold, color=blue];
m11_0 -> m11_1  [key=0, style=solid, color=red];
m11_1 -> m11_2  [key=0, style=solid, color=red];
m11_1 -> m11_5  [key=2, style=dotted, color=red];
m11_2 -> m11_3  [key=0, style=solid, color=red];
m11_2 -> m11_6  [key=2, style=dotted, color=red];
m11_3 -> m11_4  [key=0, style=solid, color=red];
m11_3 -> m11_7  [key=2, style=dotted, color=red];
m11_4 -> m11_0  [key=0, style=bold, color=blue];
m11_13 -> m11_14  [key=0, style=solid, color=red];
m11_14 -> m11_15  [key=0, style=solid, color=red];
m11_15 -> m11_16  [key=0, style=solid, color=red];
m11_15 -> m11_17  [key=1, style=dashed, color=red, label=number];
m11_15 -> m11_20  [key=1, style=dashed, color=red, label=number];
m11_15 -> m11_15  [key=3, color=red, style=bold, label="Local variable int number"];
m11_16 -> m11_17  [key=0, style=solid, color=red];
m11_16 -> m11_5  [key=2, style=dotted, color=red];
m11_17 -> m11_18  [key=0, style=solid, color=red];
m11_17 -> m11_6  [key=2, style=dotted, color=red];
m11_17 -> m11_21  [key=1, style=dashed, color=red, label=resultPtBr];
m11_20 -> m11_21  [key=0, style=solid, color=red];
m11_20 -> m11_6  [key=2, style=dotted, color=red];
m11_18 -> m11_19  [key=0, style=solid, color=red];
m11_21 -> m11_22  [key=0, style=solid, color=red];
m11_21 -> m11_7  [key=2, style=dotted, color=red];
m11_19 -> m11_20  [key=0, style=solid, color=red];
m11_19 -> m11_5  [key=2, style=dotted, color=red];
m11_22 -> m11_13  [key=0, style=bold, color=blue];
m12_2 -> m12_3  [key=0, style=solid];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_5  [key=2, style=dotted];
m12_3 -> m12_6  [key=2, style=dotted];
m12_4 -> m12_2  [key=0, style=bold, color=blue];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_0  [key=0, style=bold, color=blue];
m13_0 -> m13_1  [key=0, style=solid, color=green];
m13_0 -> m13_3  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_0 -> m13_5  [key=1, style=dashed, color=green, label=string];
m13_0 -> m13_7  [key=1, style=dashed, color=green, label=string];
m13_0 -> m13_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_0 -> m13_0  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetResourceKey"];
m13_1 -> m13_2  [key=0, style=solid, color=green];
m13_3 -> m13_4  [key=0, style=solid, color=green];
m13_3 -> m13_6  [key=1, style=dashed, color=green, label=mod10];
m13_5 -> m13_9  [key=0, style=solid, color=green];
m13_7 -> m13_9  [key=0, style=solid, color=green];
m13_8 -> m13_9  [key=0, style=solid, color=red];
m13_2 -> m13_3  [key=0, style=solid, color=green];
m13_2 -> m13_8  [key=0, style=solid, color=green];
m13_4 -> m13_5  [key=0, style=solid, color=green];
m13_4 -> m13_6  [key=0, style=solid, color=green];
m13_6 -> m13_7  [key=0, style=solid, color=green];
m13_6 -> m13_8  [key=0, style=solid, color=green];
m13_9 -> m13_0  [key=0, style=bold, color=blue];
m16_33 -> m16_34  [key=0, style=solid];
m16_34 -> m16_35  [key=0, style=solid];
m16_35 -> m16_36  [key=0, style=solid];
m16_35 -> m16_7  [key=2, style=dotted];
m16_36 -> m16_37  [key=0, style=solid];
m16_36 -> m16_8  [key=2, style=dotted];
m16_37 -> m16_33  [key=0, style=bold, color=blue];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_0  [key=0, style=bold, color=blue];
m16_28 -> m16_29  [key=0, style=solid];
m16_28 -> m16_30  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_29 -> m16_30  [key=0, style=solid];
m16_29 -> m16_32  [key=2, style=dotted];
m16_29 -> m16_7  [key=2, style=dotted];
m16_30 -> m16_31  [key=0, style=solid];
m16_30 -> m16_8  [key=2, style=dotted];
m16_31 -> m16_28  [key=0, style=bold, color=blue];
m16_18 -> m16_19  [key=0, style=solid];
m16_18 -> m16_20  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_19 -> m16_20  [key=0, style=solid];
m16_19 -> m16_22  [key=2, style=dotted];
m16_19 -> m16_7  [key=2, style=dotted];
m16_20 -> m16_21  [key=0, style=solid];
m16_20 -> m16_8  [key=2, style=dotted];
m16_21 -> m16_18  [key=0, style=bold, color=blue];
m16_2 -> m16_3  [key=0, style=solid];
m16_2 -> m16_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_3 -> m16_4  [key=0, style=solid];
m16_3 -> m16_6  [key=2, style=dotted];
m16_3 -> m16_7  [key=2, style=dotted];
m16_4 -> m16_5  [key=0, style=solid];
m16_4 -> m16_8  [key=2, style=dotted];
m16_5 -> m16_2  [key=0, style=bold, color=blue];
m16_9 -> m16_10  [key=0, style=solid];
m16_9 -> m16_11  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_10 -> m16_11  [key=0, style=solid];
m16_10 -> m16_6  [key=2, style=dotted];
m16_10 -> m16_7  [key=2, style=dotted];
m16_11 -> m16_12  [key=0, style=solid];
m16_11 -> m16_8  [key=2, style=dotted];
m16_12 -> m16_9  [key=0, style=bold, color=blue];
m16_13 -> m16_14  [key=0, style=solid];
m16_13 -> m16_15  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_14 -> m16_15  [key=0, style=solid];
m16_14 -> m16_17  [key=2, style=dotted];
m16_14 -> m16_7  [key=2, style=dotted];
m16_15 -> m16_16  [key=0, style=solid];
m16_15 -> m16_8  [key=2, style=dotted];
m16_16 -> m16_13  [key=0, style=bold, color=blue];
m16_23 -> m16_24  [key=0, style=solid];
m16_23 -> m16_25  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_24 -> m16_25  [key=0, style=solid];
m16_24 -> m16_27  [key=2, style=dotted];
m16_24 -> m16_7  [key=2, style=dotted];
m16_25 -> m16_26  [key=0, style=solid];
m16_25 -> m16_8  [key=2, style=dotted];
m16_26 -> m16_23  [key=0, style=bold, color=blue];
}
