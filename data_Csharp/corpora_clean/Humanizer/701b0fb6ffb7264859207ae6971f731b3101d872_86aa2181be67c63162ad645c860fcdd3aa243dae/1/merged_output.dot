digraph  {
n45 [label="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter", span=""];
n0 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="Entry Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", span="12-12"];
n1 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="number == 0", span="14-14"];
n3 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="number < 0", span="17-17"];
n4 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="0: return string.Format(''menos {0}'', Convert(Math.Abs(number)));", span="18-18"];
n6 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="(number / 1000000000) > 0", span="22-22"];
n7 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="3: number / 1000000000 > 2", span="24-24"];
n8 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="0: parts.Add(string.Format(''{0} bilhões'', Convert(number / 1000000000)))", span="26-26"];
n9 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="0: parts.Add(string.Format(''{0} bilhão'', Convert(number / 1000000000)))", span="30-30"];
n10 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="number %= 1000000000", span="32-32"];
n11 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="(number / 1000000) > 0", span="35-35"];
n12 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="3: number / 1000000 > 2", span="37-37"];
n13 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="0: parts.Add(string.Format(''{0} milhões'', Convert(number / 1000000)))", span="39-39"];
n14 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="0: parts.Add(string.Format(''{0} milhão'', Convert(number / 1000000)))", span="43-43"];
n15 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="number %= 1000000", span="45-45"];
n16 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="(number / 1000) > 0", span="48-48"];
n17 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="3: number / 1000 == 1", span="50-50"];
n19 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="0: parts.Add(string.Format(''{0} mil'', Convert(number / 1000)))", span="53-53"];
n20 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="number %= 1000", span="55-55"];
n21 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="(number / 100) > 0", span="58-58"];
n22 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="number == 100", span="60-60"];
n26 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="0: parts.Add(portugueseHundredsMap[(number / 100)])", span="73-73"];
n27 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="number %= 100", span="76-76"];
n28 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="number > 0", span="79-79"];
n31 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="number < 20", span="84-84"];
n32 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="5: parts.Add(portugueseUnitsMap[number])", span="85-85"];
n33 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="3: var lastPart = portugueseTensMap[number / 10]", span="88-88"];
n34 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="(number % 10) > 0", span="89-89"];
n35 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="0: lastPart += string.Format('' e {0}'', portugueseUnitsMap[number % 10])", span="90-90"];
n2 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="return ''zero'';", span="15-15"];
n5 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="var parts = new List<string>()", span="20-20"];
n41 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n18 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="0: parts.Add(''mil'')", span="51-51"];
n23 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="3: parts.Count > 0", span="62-62"];
n24 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="0: parts.Add(''e cem'')", span="64-64"];
n25 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="0: parts.Add(''cem'')", span="68-68"];
n29 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="parts.Count != 0", span="81-81"];
n30 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="parts.Add(''e'')", span="82-82"];
n36 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="parts.Add(lastPart)", span="92-92"];
n37 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="return string.Join('' '', parts.ToArray());", span="96-96"];
n40 [cluster="string.Format(string, object)", label="Entry string.Format(string, object)", span="0-0"];
n42 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n38 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="Exit Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", span="12-12"];
n39 [cluster="System.Math.Abs(int)", label="Entry System.Math.Abs(int)", span="0-0"];
n43 [cluster="System.Collections.Generic.List<T>.ToArray()", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
n44 [cluster="string.Join(string, params string[])", label="Entry string.Join(string, params string[])", span="0-0"];
d1 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=green, community=0, label="3: number == 0", span="14-14"];
d0 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="Entry Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", span="12-12"];
d2 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: return ''zero'';", span="15-15"];
d3 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="number < 0", span="17-17"];
d9 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: parts.Add(string.Format(''{0} bilhão'', Convert(number / 1000000000)))", span="30-30"];
d7 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="number / 1000000000 > 2", span="24-24"];
d5 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="var parts = new List<string>()", span="20-20"];
d10 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="number %= 1000000000", span="32-32"];
d42 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
d12 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=green, community=0, label="3: number / 1000000 > 2", span="37-37"];
d13 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: parts.Add(string.Format(''{0} milhões'', Convert(number / 1000000)))", span="39-39"];
d14 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="parts.Add(string.Format(''{0} milhão'', Convert(number / 1000000)))", span="43-43"];
d15 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="number %= 1000000", span="45-45"];
d16 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=green, community=0, label="5: (number / 1000) > 0", span="48-48"];
d17 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="number / 1000 == 1", span="50-50"];
d21 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: (number / 100) > 0", span="58-58"];
d20 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: number %= 1000", span="55-55"];
d19 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="parts.Add(string.Format(''{0} mil'', Convert(number / 1000)))", span="53-53"];
d18 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="parts.Add(''mil'')", span="51-51"];
d22 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="number == 100", span="60-60"];
d26 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="parts.Add(portugueseHundredsMap[(number / 100)])", span="73-73"];
d27 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: number %= 100", span="76-76"];
d31 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=green, community=0, label="3: number < 20", span="84-84"];
d32 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=green, community=0, label="5: parts.Add(portugueseUnitsMap[number])", span="85-85"];
d33 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=green, community=0, label="3: var lastPart = portugueseTensMap[number / 10]", span="88-88"];
d34 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: (number % 10) > 0", span="89-89"];
d35 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: lastPart += string.Format('' e {0}'', portugueseUnitsMap[number % 10])", span="90-90"];
d24 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="parts.Add(''e cem'')", span="64-64"];
d25 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="parts.Add(''cem'')", span="68-68"];
d37 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=green, community=0, label="0: return string.Join('' '', parts.ToArray());", span="96-96"];
d36 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=green, community=0, label="5: parts.Add(lastPart)", span="92-92"];
d38 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="Exit Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", span="12-12"];
d4 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="return string.Format(''menos {0}'', Convert(Math.Abs(number)));", span="18-18"];
d8 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="parts.Add(string.Format(''{0} bilhões'', Convert(number / 1000000000)))", span="26-26"];
d23 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="parts.Count > 0", span="62-62"];
m0_7 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.RussianFormatter()", file="Configurator.cs", label="Entry Humanizer.Localisation.Formatters.RussianFormatter.RussianFormatter()", span="2-2"];
m0_3 [cluster="Humanizer.Localisation.Formatters.RomanianFormatter.RomanianFormatter()", file="Configurator.cs", label="Entry Humanizer.Localisation.Formatters.RomanianFormatter.RomanianFormatter()", span="2-2"];
m0_15 [cluster="Humanizer.Localisation.Formatters.CzechSlovakPolishFormatter.CzechSlovakPolishFormatter()", file="Configurator.cs", label="Entry Humanizer.Localisation.Formatters.CzechSlovakPolishFormatter.CzechSlovakPolishFormatter()", span="2-2"];
m0_11 [cluster="Humanizer.Localisation.Formatters.ArabicFormatter.ArabicFormatter()", file="Configurator.cs", label="Entry Humanizer.Localisation.Formatters.ArabicFormatter.ArabicFormatter()", span="2-2"];
m0_19 [cluster="lambda expression", file="Configurator.cs", label="Entry lambda expression", span="21-21"];
m0_0 [cluster="lambda expression", file="Configurator.cs", label="Entry lambda expression", span="16-16"];
m0_1 [cluster="lambda expression", file="Configurator.cs", label="new RomanianFormatter()", span="16-16"];
m0_2 [cluster="lambda expression", file="Configurator.cs", label="Exit lambda expression", span="16-16"];
m0_4 [cluster="lambda expression", file="Configurator.cs", label="Entry lambda expression", span="17-17"];
m0_5 [cluster="lambda expression", file="Configurator.cs", label="new RussianFormatter()", span="17-17"];
m0_6 [cluster="lambda expression", file="Configurator.cs", label="Exit lambda expression", span="17-17"];
m0_8 [cluster="lambda expression", file="Configurator.cs", label="Entry lambda expression", span="18-18"];
m0_9 [cluster="lambda expression", file="Configurator.cs", label="new ArabicFormatter()", span="18-18"];
m0_10 [cluster="lambda expression", file="Configurator.cs", label="Exit lambda expression", span="18-18"];
m0_12 [cluster="lambda expression", file="Configurator.cs", label="Entry lambda expression", span="19-19"];
m0_13 [cluster="lambda expression", color=green, community=0, file="Configurator.cs", label="8: new CzechSlovakPolishFormatter()", span="19-19"];
m0_14 [cluster="lambda expression", file="Configurator.cs", label="Exit lambda expression", span="19-19"];
m0_16 [cluster="lambda expression", file="Configurator.cs", label="Entry lambda expression", span="20-20"];
m0_17 [cluster="lambda expression", file="Configurator.cs", label="new CzechSlovakPolishFormatter()", span="20-20"];
m0_18 [cluster="lambda expression", file="Configurator.cs", label="Exit lambda expression", span="20-20"];
m0_20 [cluster="lambda expression", file="Configurator.cs", label="new CzechSlovakPolishFormatter()", span="21-21"];
m0_21 [cluster="lambda expression", file="Configurator.cs", label="Exit lambda expression", span="21-21"];
m2_13 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.SecondsFromNow(int, string)", color=green, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs", label="4: DateHumanize.Verify(expected, seconds, TimeUnit.Second, Tense.Future, DefaultPrecision)", span="60-60"];
m2_14 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MinutesAgo(int, string)", color=red, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs", label="4: DateHumanize.Verify(expected, minutes, TimeUnit.Minute, Tense.Past, defaultPrecision)", span="72-72"];
m2_16 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MinutesFromNow(int, string)", color=green, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs", label="4: Entry Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MinutesFromNow(int, string)", span="84-84"];
m2_15 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MinutesAgo(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MinutesAgo(int, string)", span="70-70"];
m2_3 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MillisecondsAgo(int, string)", color=green, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs", label="4: DateHumanize.Verify(expected, milliseconds, TimeUnit.Millisecond, Tense.Past, DefaultPrecision)", span="20-20"];
m2_31 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.DaysFromNow(int, string)", color=green, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs", label="2: DateHumanize.Verify(expected, days, TimeUnit.Day, Tense.Future, DefaultPrecision)", span="145-145"];
m2_32 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MonthsAgo(int, string)", color=red, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs", label="2: DateHumanize.Verify(expected, months, TimeUnit.Month, Tense.Past, defaultPrecision)", span="156-156"];
m2_34 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MonthsFromNow(int, string)", color=green, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs", label="2: Entry Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MonthsFromNow(int, string)", span="167-167"];
m2_33 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MonthsAgo(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MonthsAgo(int, string)", span="154-154"];
m2_10 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.SecondsAgo(int, string)", color=green, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs", label="4: DateHumanize.Verify(expected, seconds, TimeUnit.Second, Tense.Past, DefaultPrecision)", span="46-46"];
m2_11 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.SecondsFromNow(int, string)", color=red, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs", label="4: DateHumanize.Verify(expected, seconds, TimeUnit.Second, Tense.Future, defaultPrecision)", span="58-58"];
m2_12 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.SecondsFromNow(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.SecondsFromNow(int, string)", span="56-56"];
m2_28 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.DaysAgo(int, string)", color=green, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs", label="2: DateHumanize.Verify(expected, days, TimeUnit.Day, Tense.Past, DefaultPrecision)", span="131-131"];
m2_29 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.DaysFromNow(int, string)", color=red, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs", label="2: DateHumanize.Verify(expected, days, TimeUnit.Day, Tense.Future, defaultPrecision)", span="143-143"];
m2_30 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.DaysFromNow(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.DaysFromNow(int, string)", span="141-141"];
m2_35 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MonthsFromNow(int, string)", color=red, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs", label="2: DateHumanize.Verify(expected, months, TimeUnit.Month, Tense.Future, defaultPrecision)", span="169-169"];
m2_37 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.YearsAgo(int, string)", color=green, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs", label="2: Entry Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.YearsAgo(int, string)", span="175-175"];
m2_36 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MonthsFromNow(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MonthsFromNow(int, string)", span="167-167"];
m2_22 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.HoursAgo(int, string)", color=green, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs", label="4: DateHumanize.Verify(expected, hours, TimeUnit.Hour, Tense.Past, DefaultPrecision)", span="103-103"];
m2_23 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.HoursFromNow(int, string)", color=red, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs", label="4: DateHumanize.Verify(expected, hours, TimeUnit.Hour, Tense.Future, defaultPrecision)", span="115-115"];
m2_25 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.DaysAgo(int, string)", color=green, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs", label="4: Entry Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.DaysAgo(int, string)", span="127-127"];
m2_24 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.HoursFromNow(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.HoursFromNow(int, string)", span="113-113"];
m2_26 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.DaysAgo(int, string)", color=red, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs", label="4: DateHumanize.Verify(expected, days, TimeUnit.Day, Tense.Past, defaultPrecision)", span="129-129"];
m2_27 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.DaysAgo(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.DaysAgo(int, string)", span="127-127"];
m2_38 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.YearsAgo(int, string)", color=red, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs", label="2: DateHumanize.Verify(expected, years, TimeUnit.Year, Tense.Past, defaultPrecision)", span="177-177"];
m2_40 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.YearsFromNow(int, string)", color=green, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs", label="2: Entry Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.YearsFromNow(int, string)", span="183-183"];
m2_39 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.YearsAgo(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.YearsAgo(int, string)", span="175-175"];
m2_17 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MinutesFromNow(int, string)", color=red, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs", label="4: DateHumanize.Verify(expected, minutes, TimeUnit.Minute, Tense.Future, defaultPrecision)", span="86-86"];
m2_19 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.HoursAgo(int, string)", color=green, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs", label="4: Entry Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.HoursAgo(int, string)", span="99-99"];
m2_18 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MinutesFromNow(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MinutesFromNow(int, string)", span="84-84"];
m2_41 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.YearsFromNow(int, string)", color=red, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs", label="2: DateHumanize.Verify(expected, years, TimeUnit.Year, Tense.Future, defaultPrecision)", span="185-185"];
m2_43 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.YearsFromNow(int, string)", color=green, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs", label="2: DateHumanize.Verify(expected, years, TimeUnit.Year, Tense.Future, DefaultPrecision)", span="187-187"];
m2_42 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.YearsFromNow(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.YearsFromNow(int, string)", span="183-183"];
m2_7 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MillisecondsFromNow(int, string)", color=green, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs", label="4: DateHumanize.Verify(expected, milliseconds, TimeUnit.Millisecond, Tense.Future, DefaultPrecision)", span="32-32"];
m2_8 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.SecondsAgo(int, string)", color=red, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs", label="4: DateHumanize.Verify(expected, seconds, TimeUnit.Second, Tense.Past, defaultPrecision)", span="44-44"];
m2_9 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.SecondsAgo(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.SecondsAgo(int, string)", span="42-42"];
m2_5 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MillisecondsFromNow(int, string)", color=red, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs", label="4: DateHumanize.Verify(expected, milliseconds, TimeUnit.Millisecond, Tense.Future, defaultPrecision)", span="30-30"];
m2_20 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.HoursAgo(int, string)", color=red, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs", label="4: DateHumanize.Verify(expected, hours, TimeUnit.Hour, Tense.Past, defaultPrecision)", span="101-101"];
m2_21 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.HoursAgo(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.HoursAgo(int, string)", span="99-99"];
m2_4 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MillisecondsFromNow(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="Entry Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MillisecondsFromNow(int, string)", span="28-28"];
m2_6 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MillisecondsFromNow(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MillisecondsFromNow(int, string)", span="28-28"];
m2_0 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MillisecondsAgo(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="Entry Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MillisecondsAgo(int, string)", span="16-16"];
m2_1 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MillisecondsAgo(int, string)", color=red, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs", label="4: DateHumanize.Verify(expected, milliseconds, TimeUnit.Millisecond, Tense.Past, defaultPrecision)", span="18-18"];
m2_2 [cluster="Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MillisecondsAgo(int, string)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="Exit Humanizer.Tests.DateTimeHumanizePrecisionStrategyTests.MillisecondsAgo(int, string)", span="16-16"];
m3_3 [cluster="int.ToString()", file="DefaultNumberToWordsConverter.cs", label="Entry int.ToString()", span="0-0"];
m3_0 [cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.Convert(int)", file="DefaultNumberToWordsConverter.cs", label="Entry Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.Convert(int)", span="4-4"];
m3_1 [cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.Convert(int)", color=green, community=0, file="DefaultNumberToWordsConverter.cs", label="1: return number.ToString();", span="6-6"];
m3_2 [cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.Convert(int)", file="DefaultNumberToWordsConverter.cs", label="Exit Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.Convert(int)", span="4-4"];
m3_4 [cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.ConvertToOrdinal(int)", file="DefaultNumberToWordsConverter.cs", label="Entry Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.ConvertToOrdinal(int)", span="9-9"];
m3_5 [cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.ConvertToOrdinal(int)", file="DefaultNumberToWordsConverter.cs", label="return number.ToString();", span="11-11"];
m3_6 [cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.ConvertToOrdinal(int)", file="DefaultNumberToWordsConverter.cs", label="Exit Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.ConvertToOrdinal(int)", span="9-9"];
m4_13 [cluster="int.Ordinalize(Humanizer.GrammaticalGender)", file="EnglishNumberToWordsConverter.cs", label="Entry int.Ordinalize(Humanizer.GrammaticalGender)", span="53-53"];
m4_5 [cluster="string.Ordinalize(Humanizer.GrammaticalGender)", file="EnglishNumberToWordsConverter.cs", label="Entry string.Ordinalize(Humanizer.GrammaticalGender)", span="29-29"];
m4_2 [cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeString(string, string)", file="EnglishNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeString(string, string)", span="25-25"];
m4_3 [cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeString(string, string)", file="EnglishNumberToWordsConverter.cs", label="Assert.Equal(number.Ordinalize(GrammaticalGender.Masculine), ordinalized)", span="27-27"];
m4_4 [cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeString(string, string)", file="EnglishNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeString(string, string)", span="25-25"];
m4_6 [cluster="Unk.Equal", file="EnglishNumberToWordsConverter.cs", label="Entry Unk.Equal", span=""];
m4_14 [cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeNumberFeminine(int, string)", file="EnglishNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeNumberFeminine(int, string)", span="84-84"];
m4_15 [cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeNumberFeminine(int, string)", file="EnglishNumberToWordsConverter.cs", label="Assert.Equal(number.Ordinalize(GrammaticalGender.Feminine), ordinalized)", span="86-86"];
m4_16 [cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeNumberFeminine(int, string)", file="EnglishNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeNumberFeminine(int, string)", span="84-84"];
m4_10 [cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeNumber(int, string)", file="EnglishNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeNumber(int, string)", span="64-64"];
m4_11 [cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeNumber(int, string)", file="EnglishNumberToWordsConverter.cs", label="Assert.Equal(number.Ordinalize(GrammaticalGender.Masculine), ordinalized)", span="66-66"];
m4_12 [cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeNumber(int, string)", file="EnglishNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeNumber(int, string)", span="64-64"];
m4_0 [cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeTests()", file="EnglishNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeTests()", span="6-6"];
m4_1 [cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeTests()", file="EnglishNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeTests()", span="6-6"];
m4_7 [cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeStringFeminine(string, string)", file="EnglishNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeStringFeminine(string, string)", span="44-44"];
m4_8 [cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeStringFeminine(string, string)", file="EnglishNumberToWordsConverter.cs", label="Assert.Equal(number.Ordinalize(GrammaticalGender.Feminine), ordinalized)", span="46-46"];
m4_9 [cluster="Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeStringFeminine(string, string)", file="EnglishNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Localisation.ptBR.OrdinalizeTests.OrdinalizeStringFeminine(string, string)", span="44-44"];
m9_2 [cluster="Humanizer.Localisation.NumberToWords.INumberToWordsConverter.ConvertToOrdinal(int)", file="INumberToWordsConverter.cs", label="Entry Humanizer.Localisation.NumberToWords.INumberToWordsConverter.ConvertToOrdinal(int)", span="19-19"];
m9_3 [cluster="Humanizer.Localisation.NumberToWords.INumberToWordsConverter.ConvertToOrdinal(int)", file="INumberToWordsConverter.cs", label="Exit Humanizer.Localisation.NumberToWords.INumberToWordsConverter.ConvertToOrdinal(int)", span="19-19"];
m9_0 [cluster="Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(int)", file="INumberToWordsConverter.cs", label="Entry Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(int)", span="12-12"];
m9_1 [cluster="Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(int)", file="INumberToWordsConverter.cs", label="Exit Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(int)", span="12-12"];
m10_4 [cluster="Unk.Equal", file="NumberToOrdinalWordsTests.cs", label="Entry Unk.Equal", span=""];
m10_0 [cluster="Humanizer.Tests.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", file="NumberToOrdinalWordsTests.cs", label="Entry Humanizer.Tests.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", span="50-50"];
m10_1 [cluster="Humanizer.Tests.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", file="NumberToOrdinalWordsTests.cs", label="Assert.Equal(words, number.ToOrdinalWords())", span="52-52"];
m10_2 [cluster="Humanizer.Tests.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", file="NumberToOrdinalWordsTests.cs", label="Exit Humanizer.Tests.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", span="50-50"];
m10_3 [cluster="int.ToOrdinalWords()", file="NumberToOrdinalWordsTests.cs", label="Entry int.ToOrdinalWords()", span="37-37"];
m11_7 [cluster="Unk.NotEqual", file="NumberToWordsFactoryTests.cs", label="Entry Unk.NotEqual", span=""];
m11_5 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(string)", file="NumberToWordsFactoryTests.cs", label="Entry Humanizer.Tests.AmbientCulture.AmbientCulture(string)", span="17-17"];
m11_6 [cluster="int.ToWords()", file="NumberToWordsFactoryTests.cs", label="Entry int.ToWords()", span="27-27"];
m11_8 [cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetRfcStandardLanguageSpecificFactory()", file="NumberToWordsFactoryTests.cs", label="Entry Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetRfcStandardLanguageSpecificFactory()", span="17-17"];
m11_9 [cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetRfcStandardLanguageSpecificFactory()", color=red, community=0, file="NumberToWordsFactoryTests.cs", label="7: new AmbientCulture(''pt-BR'')", span="19-19"];
m11_10 [cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetRfcStandardLanguageSpecificFactory()", color=red, community=0, file="NumberToWordsFactoryTests.cs", label="7: string result = 1000000000.ToWords()", span="21-21"];
m11_11 [cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetRfcStandardLanguageSpecificFactory()", color=red, community=0, file="NumberToWordsFactoryTests.cs", label="7: Assert.NotEqual(''1000000000'', result)", span="22-22"];
m11_12 [cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetRfcStandardLanguageSpecificFactory()", file="NumberToWordsFactoryTests.cs", label="Exit Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetRfcStandardLanguageSpecificFactory()", span="17-17"];
m11_0 [cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetTwoLetterIsoLanguageSpecificFactory()", file="NumberToWordsFactoryTests.cs", label="Entry Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetTwoLetterIsoLanguageSpecificFactory()", span="7-7"];
m11_1 [cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetTwoLetterIsoLanguageSpecificFactory()", color=red, community=0, file="NumberToWordsFactoryTests.cs", label="0: new AmbientCulture(''ar'')", span="9-9"];
m11_2 [cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetTwoLetterIsoLanguageSpecificFactory()", color=red, community=0, file="NumberToWordsFactoryTests.cs", label="1: string result = 1000000000.ToWords()", span="11-11"];
m11_3 [cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetTwoLetterIsoLanguageSpecificFactory()", color=red, community=0, file="NumberToWordsFactoryTests.cs", label="5: Assert.NotEqual(''1000000000'', result)", span="12-12"];
m11_4 [cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetTwoLetterIsoLanguageSpecificFactory()", file="NumberToWordsFactoryTests.cs", label="Exit Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetTwoLetterIsoLanguageSpecificFactory()", span="7-7"];
m11_13 [cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetCorrectRfcStandardLanguageSpecificFactory()", file="NumberToWordsFactoryTests.cs", label="Entry Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetCorrectRfcStandardLanguageSpecificFactory()", span="27-27"];
m11_14 [cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetCorrectRfcStandardLanguageSpecificFactory()", color=red, community=0, file="NumberToWordsFactoryTests.cs", label="8: string resultPtBr", span="29-29"];
m11_15 [cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetCorrectRfcStandardLanguageSpecificFactory()", color=red, community=0, file="NumberToWordsFactoryTests.cs", label="8: int number = 1000000000", span="30-30"];
m11_16 [cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetCorrectRfcStandardLanguageSpecificFactory()", color=red, community=0, file="NumberToWordsFactoryTests.cs", label="0: new AmbientCulture(''pt-BR'')", span="31-31"];
m11_17 [cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetCorrectRfcStandardLanguageSpecificFactory()", color=red, community=0, file="NumberToWordsFactoryTests.cs", label="5: resultPtBr = number.ToWords()", span="33-33"];
m11_20 [cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetCorrectRfcStandardLanguageSpecificFactory()", color=red, community=0, file="NumberToWordsFactoryTests.cs", label="5: resultPtPt = number.ToWords()", span="39-39"];
m11_18 [cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetCorrectRfcStandardLanguageSpecificFactory()", color=red, community=0, file="NumberToWordsFactoryTests.cs", label="7: string resultPtPt", span="36-36"];
m11_21 [cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetCorrectRfcStandardLanguageSpecificFactory()", color=red, community=0, file="NumberToWordsFactoryTests.cs", label="0: Assert.NotEqual(resultPtBr, resultPtPt)", span="42-42"];
m11_19 [cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetCorrectRfcStandardLanguageSpecificFactory()", color=red, community=0, file="NumberToWordsFactoryTests.cs", label="0: new AmbientCulture(''pt-PT'')", span="37-37"];
m11_22 [cluster="Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetCorrectRfcStandardLanguageSpecificFactory()", file="NumberToWordsFactoryTests.cs", label="Exit Humanizer.Tests.Localisation.NumberToWordsFactoryTests.CanGetCorrectRfcStandardLanguageSpecificFactory()", span="27-27"];
m12_2 [cluster="Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.ToWordsPortuguese(int, string)", file="NumberToWordsTests.cs", label="Entry Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.ToWordsPortuguese(int, string)", span="41-41"];
m12_3 [cluster="Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.ToWordsPortuguese(int, string)", file="NumberToWordsTests.cs", label="Assert.Equal(expected, number.ToWords())", span="43-43"];
m12_4 [cluster="Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.ToWordsPortuguese(int, string)", file="NumberToWordsTests.cs", label="Exit Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.ToWordsPortuguese(int, string)", span="41-41"];
m12_0 [cluster="Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.NumberToWordsTests()", file="NumberToWordsTests.cs", label="Entry Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.NumberToWordsTests()", span="7-7"];
m12_1 [cluster="Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.NumberToWordsTests()", file="NumberToWordsTests.cs", label="Exit Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.NumberToWordsTests()", span="7-7"];
m12_5 [cluster="int.ToWords()", file="NumberToWordsTests.cs", label="Entry int.ToWords()", span="27-27"];
m12_6 [cluster="Unk.Equal", file="NumberToWordsTests.cs", label="Entry Unk.Equal", span=""];
m13_0 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", file="RussianFormatter.cs", label="Entry Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", span="7-7"];
m13_1 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=green, community=0, file="RussianFormatter.cs", label="6: var mod100 = number%100", span="9-9"];
m13_3 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=red, community=0, file="RussianFormatter.cs", label="6: var mod10 = number%10", span="12-12"];
m13_5 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=green, community=0, file="RussianFormatter.cs", label="6: return resourceKey + SingularPostfix;", span="15-15"];
m13_7 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=green, community=0, file="RussianFormatter.cs", label="6: return resourceKey + PaucalPostfix;", span="18-18"];
m13_8 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=red, community=0, file="RussianFormatter.cs", label="6: return resourceKey;", span="21-21"];
m13_2 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=green, community=0, file="RussianFormatter.cs", label="6: mod100/10 != 1", span="10-10"];
m13_4 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=green, community=0, file="RussianFormatter.cs", label="6: mod10 == 1", span="14-14"];
m13_6 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=green, community=0, file="RussianFormatter.cs", label="6: mod10 > 1 && mod10 < 5", span="17-17"];
m13_9 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", file="RussianFormatter.cs", label="Exit Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", span="7-7"];
m16_6 [cluster="System.TimeSpan.FromDays(double)", file="SpanishNumberToWordsConverter.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m16_33 [cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.NoTime()", file="SpanishNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.NoTime()", span="64-64"];
m16_34 [cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.NoTime()", file="SpanishNumberToWordsConverter.cs", label="var noTime = TimeSpan.Zero", span="66-66"];
m16_35 [cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.NoTime()", file="SpanishNumberToWordsConverter.cs", label="var actual = noTime.Humanize()", span="67-67"];
m16_36 [cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.NoTime()", file="SpanishNumberToWordsConverter.cs", label="Assert.Equal(''pas de temps'', actual)", span="68-68"];
m16_37 [cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.NoTime()", file="SpanishNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.NoTime()", span="64-64"];
m16_0 [cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.TimeSpanHumanizeTests()", file="SpanishNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.TimeSpanHumanizeTests()", span="7-7"];
m16_1 [cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.TimeSpanHumanizeTests()", file="SpanishNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.TimeSpanHumanizeTests()", span="7-7"];
m16_22 [cluster="System.TimeSpan.FromMinutes(double)", file="SpanishNumberToWordsConverter.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m16_28 [cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Milliseconds(int, string)", file="SpanishNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Milliseconds(int, string)", span="57-57"];
m16_29 [cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Milliseconds(int, string)", file="SpanishNumberToWordsConverter.cs", label="var actual = TimeSpan.FromMilliseconds(ms).Humanize()", span="59-59"];
m16_30 [cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Milliseconds(int, string)", file="SpanishNumberToWordsConverter.cs", label="Assert.Equal(expected, actual)", span="60-60"];
m16_31 [cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Milliseconds(int, string)", file="SpanishNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Milliseconds(int, string)", span="57-57"];
m16_32 [cluster="System.TimeSpan.FromMilliseconds(double)", file="SpanishNumberToWordsConverter.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m16_8 [cluster="Unk.Equal", file="SpanishNumberToWordsConverter.cs", label="Entry Unk.Equal", span=""];
m16_27 [cluster="System.TimeSpan.FromSeconds(double)", file="SpanishNumberToWordsConverter.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m16_17 [cluster="System.TimeSpan.FromHours(double)", file="SpanishNumberToWordsConverter.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m16_18 [cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Minutes(int, string)", file="SpanishNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Minutes(int, string)", span="39-39"];
m16_19 [cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Minutes(int, string)", file="SpanishNumberToWordsConverter.cs", label="var actual = TimeSpan.FromMinutes(minutes).Humanize()", span="41-41"];
m16_20 [cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Minutes(int, string)", file="SpanishNumberToWordsConverter.cs", label="Assert.Equal(expected, actual)", span="42-42"];
m16_21 [cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Minutes(int, string)", file="SpanishNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Minutes(int, string)", span="39-39"];
m16_2 [cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Weeks(int, string)", file="SpanishNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Weeks(int, string)", span="12-12"];
m16_3 [cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Weeks(int, string)", file="SpanishNumberToWordsConverter.cs", label="var actual = TimeSpan.FromDays(days).Humanize()", span="14-14"];
m16_4 [cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Weeks(int, string)", file="SpanishNumberToWordsConverter.cs", label="Assert.Equal(expected, actual)", span="15-15"];
m16_5 [cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Weeks(int, string)", file="SpanishNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Weeks(int, string)", span="12-12"];
m16_9 [cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Days(int, string)", file="SpanishNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Days(int, string)", span="21-21"];
m16_10 [cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Days(int, string)", file="SpanishNumberToWordsConverter.cs", label="var actual = TimeSpan.FromDays(days).Humanize()", span="23-23"];
m16_11 [cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Days(int, string)", file="SpanishNumberToWordsConverter.cs", label="Assert.Equal(expected, actual)", span="24-24"];
m16_12 [cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Days(int, string)", file="SpanishNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Days(int, string)", span="21-21"];
m16_13 [cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Hours(int, string)", file="SpanishNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Hours(int, string)", span="30-30"];
m16_14 [cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Hours(int, string)", file="SpanishNumberToWordsConverter.cs", label="var actual = TimeSpan.FromHours(hours).Humanize()", span="32-32"];
m16_15 [cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Hours(int, string)", file="SpanishNumberToWordsConverter.cs", label="Assert.Equal(expected, actual)", span="33-33"];
m16_16 [cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Hours(int, string)", file="SpanishNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Hours(int, string)", span="30-30"];
m16_7 [cluster="System.TimeSpan.Humanize(int, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="SpanishNumberToWordsConverter.cs", label="Entry System.TimeSpan.Humanize(int, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", span="27-27"];
m16_23 [cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Seconds(int, string)", file="SpanishNumberToWordsConverter.cs", label="Entry Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Seconds(int, string)", span="48-48"];
m16_24 [cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Seconds(int, string)", file="SpanishNumberToWordsConverter.cs", label="var actual = TimeSpan.FromSeconds(seconds).Humanize()", span="50-50"];
m16_25 [cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Seconds(int, string)", file="SpanishNumberToWordsConverter.cs", label="Assert.Equal(expected, actual)", span="51-51"];
m16_26 [cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Seconds(int, string)", file="SpanishNumberToWordsConverter.cs", label="Exit Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Seconds(int, string)", span="48-48"];
n45 -> n4  [color=red, key=1, label="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter", style=dashed];
n45 -> n8  [color=red, key=1, label="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter", style=dashed];
n45 -> n9  [color=red, key=1, label="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter", style=dashed];
n45 -> n13  [color=red, key=1, label="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter", style=dashed];
n45 -> n14  [color=red, key=1, label="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter", style=dashed];
n45 -> n19  [color=red, key=1, label="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter", style=dashed];
n45 -> d9  [color=green, key=1, label="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter", style=dashed];
n45 -> d13  [color=green, key=1, label="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter", style=dashed];
n45 -> d14  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter", style=dashed];
n45 -> d19  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter", style=dashed];
n45 -> d4  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter", style=dashed];
n45 -> d8  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter", style=dashed];
n0 -> n1  [key=0, style=solid];
n0 -> n3  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n4  [color=red, key=1, label=int, style=dashed];
n0 -> n6  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n7  [color=red, key=1, label=int, style=dashed];
n0 -> n8  [color=red, key=1, label=int, style=dashed];
n0 -> n9  [color=red, key=1, label=int, style=dashed];
n0 -> n10  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n11  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n12  [color=red, key=1, label=int, style=dashed];
n0 -> n13  [color=red, key=1, label=int, style=dashed];
n0 -> n14  [color=red, key=1, label=int, style=dashed];
n0 -> n15  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n16  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n17  [color=red, key=1, label=int, style=dashed];
n0 -> n19  [color=red, key=1, label=int, style=dashed];
n0 -> n20  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n21  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n22  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n26  [color=red, key=1, label=int, style=dashed];
n0 -> n27  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n28  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n31  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n32  [color=red, key=1, label=int, style=dashed];
n0 -> n33  [color=red, key=1, label=int, style=dashed];
n0 -> n34  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n35  [color=red, key=1, label=int, style=dashed];
n0 -> n2  [color=darkorchid, key=3, label="method methodReturn string Convert", style=bold];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=0, style=solid];
n3 -> n4  [color=red, key=0, style=solid];
n3 -> n5  [key=0, style=solid];
n4 -> n38  [color=red, key=0, style=solid];
n4 -> n39  [color=red, key=2, style=dotted];
n4 -> n0  [color=red, key=2, style=dotted];
n4 -> n40  [color=red, key=2, style=dotted];
n6 -> n7  [color=red, key=0, style=solid];
n6 -> n11  [key=0, style=solid];
n6 -> d7  [key=0, style=solid];
n7 -> n8  [color=red, key=0, style=solid];
n7 -> n9  [color=red, key=0, style=solid];
n8 -> n10  [color=red, key=0, style=solid];
n8 -> n0  [color=red, key=2, style=dotted];
n8 -> n40  [color=red, key=2, style=dotted];
n8 -> n42  [color=red, key=2, style=dotted];
n9 -> n10  [color=red, key=0, style=solid];
n9 -> n0  [color=red, key=2, style=dotted];
n9 -> n40  [color=red, key=2, style=dotted];
n9 -> n42  [color=red, key=2, style=dotted];
n10 -> n11  [key=0, style=solid];
n10 -> n10  [color=darkseagreen4, key=1, label=int, style=dashed];
n10 -> n12  [color=red, key=1, label=int, style=dashed];
n10 -> n13  [color=red, key=1, label=int, style=dashed];
n10 -> n14  [color=red, key=1, label=int, style=dashed];
n10 -> n15  [color=darkseagreen4, key=1, label=int, style=dashed];
n10 -> n16  [color=darkseagreen4, key=1, label=int, style=dashed];
n10 -> n17  [color=red, key=1, label=int, style=dashed];
n10 -> n19  [color=red, key=1, label=int, style=dashed];
n10 -> n20  [color=darkseagreen4, key=1, label=int, style=dashed];
n10 -> n21  [color=darkseagreen4, key=1, label=int, style=dashed];
n10 -> n22  [color=darkseagreen4, key=1, label=int, style=dashed];
n10 -> n26  [color=red, key=1, label=int, style=dashed];
n10 -> n27  [color=darkseagreen4, key=1, label=int, style=dashed];
n10 -> n28  [color=darkseagreen4, key=1, label=int, style=dashed];
n10 -> n31  [color=darkseagreen4, key=1, label=int, style=dashed];
n10 -> n32  [color=red, key=1, label=int, style=dashed];
n10 -> n33  [color=red, key=1, label=int, style=dashed];
n10 -> n34  [color=darkseagreen4, key=1, label=int, style=dashed];
n10 -> n35  [color=red, key=1, label=int, style=dashed];
n11 -> n12  [color=red, key=0, style=solid];
n11 -> n16  [key=0, style=solid];
n11 -> d12  [color=green, key=0, style=solid];
n11 -> d16  [color=green, key=0, style=solid];
n12 -> n13  [color=red, key=0, style=solid];
n12 -> n14  [color=red, key=0, style=solid];
n13 -> n15  [color=red, key=0, style=solid];
n13 -> n0  [color=red, key=2, style=dotted];
n13 -> n40  [color=red, key=2, style=dotted];
n13 -> n42  [color=red, key=2, style=dotted];
n14 -> n15  [color=red, key=0, style=solid];
n14 -> n0  [color=red, key=2, style=dotted];
n14 -> n40  [color=red, key=2, style=dotted];
n14 -> n42  [color=red, key=2, style=dotted];
n15 -> n16  [key=0, style=solid];
n15 -> n15  [color=darkseagreen4, key=1, label=int, style=dashed];
n15 -> n17  [color=red, key=1, label=int, style=dashed];
n15 -> n19  [color=red, key=1, label=int, style=dashed];
n15 -> n20  [color=darkseagreen4, key=1, label=int, style=dashed];
n15 -> n21  [color=darkseagreen4, key=1, label=int, style=dashed];
n15 -> n22  [color=darkseagreen4, key=1, label=int, style=dashed];
n15 -> n26  [color=red, key=1, label=int, style=dashed];
n15 -> n27  [color=darkseagreen4, key=1, label=int, style=dashed];
n15 -> n28  [color=darkseagreen4, key=1, label=int, style=dashed];
n15 -> n31  [color=darkseagreen4, key=1, label=int, style=dashed];
n15 -> n32  [color=red, key=1, label=int, style=dashed];
n15 -> n33  [color=red, key=1, label=int, style=dashed];
n15 -> n34  [color=darkseagreen4, key=1, label=int, style=dashed];
n15 -> n35  [color=red, key=1, label=int, style=dashed];
n16 -> n17  [color=red, key=0, style=solid];
n16 -> n21  [key=0, style=solid];
n17 -> n18  [color=red, key=0, style=solid];
n17 -> n19  [color=red, key=0, style=solid];
n19 -> n20  [color=red, key=0, style=solid];
n19 -> n0  [color=red, key=2, style=dotted];
n19 -> n40  [color=red, key=2, style=dotted];
n19 -> n42  [color=red, key=2, style=dotted];
n20 -> n21  [key=0, style=solid];
n20 -> n20  [color=darkseagreen4, key=1, label=int, style=dashed];
n20 -> n22  [color=darkseagreen4, key=1, label=int, style=dashed];
n20 -> n26  [color=red, key=1, label=int, style=dashed];
n20 -> n27  [color=darkseagreen4, key=1, label=int, style=dashed];
n20 -> n28  [color=darkseagreen4, key=1, label=int, style=dashed];
n20 -> n31  [color=darkseagreen4, key=1, label=int, style=dashed];
n20 -> n32  [color=red, key=1, label=int, style=dashed];
n20 -> n33  [color=red, key=1, label=int, style=dashed];
n20 -> n34  [color=darkseagreen4, key=1, label=int, style=dashed];
n20 -> n35  [color=red, key=1, label=int, style=dashed];
n21 -> n22  [key=0, style=solid];
n21 -> n28  [key=0, style=solid];
n22 -> n23  [color=red, key=0, style=solid];
n22 -> n26  [color=red, key=0, style=solid];
n26 -> n27  [color=red, key=0, style=solid];
n26 -> n42  [color=red, key=2, style=dotted];
n27 -> n28  [key=0, style=solid];
n27 -> n27  [color=darkseagreen4, key=1, label=int, style=dashed];
n27 -> n31  [color=darkseagreen4, key=1, label=int, style=dashed];
n27 -> n32  [color=red, key=1, label=int, style=dashed];
n27 -> n33  [color=red, key=1, label=int, style=dashed];
n27 -> n34  [color=darkseagreen4, key=1, label=int, style=dashed];
n27 -> n35  [color=red, key=1, label=int, style=dashed];
n28 -> n29  [key=0, style=solid];
n28 -> n37  [key=0, style=solid];
n28 -> d37  [color=green, key=0, style=solid];
n31 -> n32  [color=red, key=0, style=solid];
n31 -> n33  [color=red, key=0, style=solid];
n32 -> n37  [color=red, key=0, style=solid];
n32 -> n42  [color=red, key=2, style=dotted];
n33 -> n34  [color=red, key=0, style=solid];
n33 -> n35  [color=red, key=1, label=lastPart, style=dashed];
n33 -> n36  [color=red, key=1, label=lastPart, style=dashed];
n34 -> n35  [color=red, key=0, style=solid];
n34 -> n36  [key=0, style=solid];
n35 -> n36  [color=red, key=0, style=solid];
n35 -> n40  [color=red, key=2, style=dotted];
n35 -> n35  [color=red, key=1, label=lastPart, style=dashed];
n2 -> n38  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n5 -> n41  [key=2, style=dotted];
n5 -> n8  [color=red, key=1, label=parts, style=dashed];
n5 -> n9  [color=red, key=1, label=parts, style=dashed];
n5 -> n13  [color=red, key=1, label=parts, style=dashed];
n5 -> n14  [color=red, key=1, label=parts, style=dashed];
n5 -> n18  [color=red, key=1, label=parts, style=dashed];
n5 -> n19  [color=red, key=1, label=parts, style=dashed];
n5 -> n23  [color=red, key=1, label=parts, style=dashed];
n5 -> n24  [color=red, key=1, label=parts, style=dashed];
n5 -> n25  [color=red, key=1, label=parts, style=dashed];
n5 -> n26  [color=red, key=1, label=parts, style=dashed];
n5 -> n29  [color=darkseagreen4, key=1, label=parts, style=dashed];
n5 -> n30  [color=darkseagreen4, key=1, label=parts, style=dashed];
n5 -> n32  [color=red, key=1, label=parts, style=dashed];
n5 -> n36  [color=darkseagreen4, key=1, label=parts, style=dashed];
n5 -> n37  [color=darkseagreen4, key=1, label=parts, style=dashed];
n18 -> n20  [color=red, key=0, style=solid];
n18 -> n42  [color=red, key=2, style=dotted];
n23 -> n24  [color=red, key=0, style=solid];
n23 -> n25  [color=red, key=0, style=solid];
n24 -> n27  [color=red, key=0, style=solid];
n24 -> n42  [color=red, key=2, style=dotted];
n25 -> n27  [color=red, key=0, style=solid];
n25 -> n42  [color=red, key=2, style=dotted];
n29 -> n30  [key=0, style=solid];
n29 -> n31  [key=0, style=solid];
n29 -> d31  [color=green, key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n30 -> n42  [key=2, style=dotted];
n30 -> d31  [color=green, key=0, style=solid];
n30 -> d42  [key=2, style=dotted];
n36 -> n37  [key=0, style=solid];
n36 -> n42  [key=2, style=dotted];
n37 -> n38  [key=0, style=solid];
n37 -> n43  [key=2, style=dotted];
n37 -> n44  [key=2, style=dotted];
n38 -> n0  [color=blue, key=0, style=bold];
d1 -> d2  [color=green, key=0, style=solid];
d1 -> d3  [color=green, key=0, style=solid];
d0 -> d1  [color=green, key=0, style=solid];
d0 -> d9  [color=green, key=1, label=int, style=dashed];
d0 -> d12  [color=green, key=1, label=int, style=dashed];
d0 -> d13  [color=green, key=1, label=int, style=dashed];
d0 -> d16  [color=green, key=1, label=int, style=dashed];
d0 -> d20  [color=green, key=1, label=int, style=dashed];
d0 -> d21  [color=green, key=1, label=int, style=dashed];
d0 -> d27  [color=green, key=1, label=int, style=dashed];
d0 -> d31  [color=green, key=1, label=int, style=dashed];
d0 -> d32  [color=green, key=1, label=int, style=dashed];
d0 -> d33  [color=green, key=1, label=int, style=dashed];
d0 -> d34  [color=green, key=1, label=int, style=dashed];
d0 -> d35  [color=green, key=1, label=int, style=dashed];
d0 -> d2  [color=green, key=3, label="method methodReturn string Convert", style=bold];
d0 -> d3  [color=darkseagreen4, key=1, label=int, style=dashed];
d0 -> d4  [color=darkseagreen4, key=1, label=int, style=dashed];
d0 -> n6  [color=darkseagreen4, key=1, label=int, style=dashed];
d0 -> d7  [color=darkseagreen4, key=1, label=int, style=dashed];
d0 -> d8  [color=darkseagreen4, key=1, label=int, style=dashed];
d0 -> d10  [color=darkseagreen4, key=1, label=int, style=dashed];
d0 -> n11  [color=darkseagreen4, key=1, label=int, style=dashed];
d0 -> d14  [color=darkseagreen4, key=1, label=int, style=dashed];
d0 -> d15  [color=darkseagreen4, key=1, label=int, style=dashed];
d0 -> d17  [color=darkseagreen4, key=1, label=int, style=dashed];
d0 -> d19  [color=darkseagreen4, key=1, label=int, style=dashed];
d0 -> d22  [color=darkseagreen4, key=1, label=int, style=dashed];
d0 -> d26  [color=darkseagreen4, key=1, label=int, style=dashed];
d0 -> n28  [color=darkseagreen4, key=1, label=int, style=dashed];
d2 -> d38  [color=green, key=0, style=solid];
d3 -> d4  [key=0, style=solid];
d3 -> d5  [key=0, style=solid];
d9 -> d10  [color=green, key=0, style=solid];
d9 -> d0  [color=green, key=2, style=dotted];
d9 -> n40  [color=green, key=2, style=dotted];
d9 -> d42  [color=green, key=2, style=dotted];
d7 -> d9  [color=green, key=0, style=solid];
d7 -> d8  [key=0, style=solid];
d5 -> d9  [color=green, key=1, label=parts, style=dashed];
d5 -> d13  [color=green, key=1, label=parts, style=dashed];
d5 -> d32  [color=green, key=1, label=parts, style=dashed];
d5 -> d36  [color=green, key=1, label=parts, style=dashed];
d5 -> d37  [color=green, key=1, label=parts, style=dashed];
d5 -> n6  [key=0, style=solid];
d5 -> n41  [key=2, style=dotted];
d5 -> d8  [color=darkseagreen4, key=1, label=parts, style=dashed];
d5 -> d14  [color=darkseagreen4, key=1, label=parts, style=dashed];
d5 -> d18  [color=darkseagreen4, key=1, label=parts, style=dashed];
d5 -> d19  [color=darkseagreen4, key=1, label=parts, style=dashed];
d5 -> d23  [color=darkseagreen4, key=1, label=parts, style=dashed];
d5 -> d24  [color=darkseagreen4, key=1, label=parts, style=dashed];
d5 -> d25  [color=darkseagreen4, key=1, label=parts, style=dashed];
d5 -> d26  [color=darkseagreen4, key=1, label=parts, style=dashed];
d5 -> n29  [color=darkseagreen4, key=1, label=parts, style=dashed];
d5 -> n30  [color=darkseagreen4, key=1, label=parts, style=dashed];
d10 -> d12  [color=green, key=1, label=int, style=dashed];
d10 -> d13  [color=green, key=1, label=int, style=dashed];
d10 -> d16  [color=green, key=1, label=int, style=dashed];
d10 -> d20  [color=green, key=1, label=int, style=dashed];
d10 -> d21  [color=green, key=1, label=int, style=dashed];
d10 -> d27  [color=green, key=1, label=int, style=dashed];
d10 -> d31  [color=green, key=1, label=int, style=dashed];
d10 -> d32  [color=green, key=1, label=int, style=dashed];
d10 -> d33  [color=green, key=1, label=int, style=dashed];
d10 -> d34  [color=green, key=1, label=int, style=dashed];
d10 -> d35  [color=green, key=1, label=int, style=dashed];
d10 -> d10  [color=darkseagreen4, key=1, label=int, style=dashed];
d10 -> n11  [key=0, style=solid];
d10 -> d14  [color=darkseagreen4, key=1, label=int, style=dashed];
d10 -> d15  [color=darkseagreen4, key=1, label=int, style=dashed];
d10 -> d17  [color=darkseagreen4, key=1, label=int, style=dashed];
d10 -> d19  [color=darkseagreen4, key=1, label=int, style=dashed];
d10 -> d22  [color=darkseagreen4, key=1, label=int, style=dashed];
d10 -> d26  [color=darkseagreen4, key=1, label=int, style=dashed];
d10 -> n28  [color=darkseagreen4, key=1, label=int, style=dashed];
d12 -> d13  [color=green, key=0, style=solid];
d12 -> d14  [color=green, key=0, style=solid];
d13 -> d15  [color=green, key=0, style=solid];
d13 -> d0  [color=green, key=2, style=dotted];
d13 -> n40  [color=green, key=2, style=dotted];
d13 -> d42  [color=green, key=2, style=dotted];
d14 -> d0  [key=2, style=dotted];
d14 -> d42  [key=2, style=dotted];
d14 -> d15  [key=0, style=solid];
d14 -> n40  [key=2, style=dotted];
d15 -> d16  [color=green, key=0, style=solid];
d15 -> d20  [color=green, key=1, label=int, style=dashed];
d15 -> d21  [color=green, key=1, label=int, style=dashed];
d15 -> d27  [color=green, key=1, label=int, style=dashed];
d15 -> d31  [color=green, key=1, label=int, style=dashed];
d15 -> d32  [color=green, key=1, label=int, style=dashed];
d15 -> d33  [color=green, key=1, label=int, style=dashed];
d15 -> d34  [color=green, key=1, label=int, style=dashed];
d15 -> d35  [color=green, key=1, label=int, style=dashed];
d15 -> d15  [color=darkseagreen4, key=1, label=int, style=dashed];
d15 -> d17  [color=darkseagreen4, key=1, label=int, style=dashed];
d15 -> d19  [color=darkseagreen4, key=1, label=int, style=dashed];
d15 -> d22  [color=darkseagreen4, key=1, label=int, style=dashed];
d15 -> d26  [color=darkseagreen4, key=1, label=int, style=dashed];
d15 -> n28  [color=darkseagreen4, key=1, label=int, style=dashed];
d16 -> d17  [color=green, key=0, style=solid];
d16 -> d21  [color=green, key=0, style=solid];
d17 -> d18  [key=0, style=solid];
d17 -> d19  [key=0, style=solid];
d21 -> d22  [color=green, key=0, style=solid];
d21 -> n28  [color=green, key=0, style=solid];
d20 -> d20  [color=green, key=1, label=int, style=dashed];
d20 -> d21  [color=green, key=0, style=solid];
d20 -> d22  [color=green, key=1, label=int, style=dashed];
d20 -> d26  [color=green, key=1, label=int, style=dashed];
d20 -> d27  [color=green, key=1, label=int, style=dashed];
d20 -> n28  [color=green, key=1, label=int, style=dashed];
d20 -> d31  [color=green, key=1, label=int, style=dashed];
d20 -> d32  [color=green, key=1, label=int, style=dashed];
d20 -> d33  [color=green, key=1, label=int, style=dashed];
d20 -> d34  [color=green, key=1, label=int, style=dashed];
d20 -> d35  [color=green, key=1, label=int, style=dashed];
d19 -> d20  [color=green, key=0, style=solid];
d19 -> d0  [key=2, style=dotted];
d19 -> d42  [key=2, style=dotted];
d19 -> n40  [key=2, style=dotted];
d18 -> d20  [color=green, key=0, style=solid];
d18 -> d42  [key=2, style=dotted];
d22 -> d23  [key=0, style=solid];
d22 -> d26  [key=0, style=solid];
d26 -> d27  [color=green, key=0, style=solid];
d26 -> d42  [key=2, style=dotted];
d27 -> d27  [color=green, key=1, label=int, style=dashed];
d27 -> n28  [color=green, key=0, style=solid];
d27 -> d31  [color=green, key=1, label=int, style=dashed];
d27 -> d32  [color=green, key=1, label=int, style=dashed];
d27 -> d33  [color=green, key=1, label=int, style=dashed];
d27 -> d34  [color=green, key=1, label=int, style=dashed];
d27 -> d35  [color=green, key=1, label=int, style=dashed];
d31 -> d32  [color=green, key=0, style=solid];
d31 -> d33  [color=green, key=0, style=solid];
d32 -> d37  [color=green, key=0, style=solid];
d32 -> d42  [color=green, key=2, style=dotted];
d33 -> d34  [color=green, key=0, style=solid];
d33 -> d35  [color=green, key=1, label=lastPart, style=dashed];
d33 -> d36  [color=green, key=1, label=lastPart, style=dashed];
d34 -> d35  [color=green, key=0, style=solid];
d34 -> d36  [color=green, key=0, style=solid];
d35 -> d35  [color=green, key=1, label=lastPart, style=dashed];
d35 -> d36  [color=green, key=0, style=solid];
d35 -> n40  [color=green, key=2, style=dotted];
d24 -> d27  [color=green, key=0, style=solid];
d24 -> d42  [key=2, style=dotted];
d25 -> d27  [color=green, key=0, style=solid];
d25 -> d42  [key=2, style=dotted];
d37 -> d38  [color=green, key=0, style=solid];
d37 -> n43  [color=green, key=2, style=dotted];
d37 -> n44  [color=green, key=2, style=dotted];
d36 -> d37  [color=green, key=0, style=solid];
d36 -> d42  [color=green, key=2, style=dotted];
d38 -> d0  [color=blue, key=0, style=bold];
d4 -> d0  [key=2, style=dotted];
d4 -> d38  [key=0, style=solid];
d4 -> n39  [key=2, style=dotted];
d4 -> n40  [key=2, style=dotted];
d8 -> d0  [key=2, style=dotted];
d8 -> d10  [key=0, style=solid];
d8 -> d42  [key=2, style=dotted];
d8 -> n40  [key=2, style=dotted];
d23 -> d24  [key=0, style=solid];
d23 -> d25  [key=0, style=solid];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_17  [color=green, key=0, style=solid];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=2, style=dotted];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_7  [key=2, style=dotted];
m0_6 -> m0_4  [color=blue, key=0, style=bold];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_11  [key=2, style=dotted];
m0_10 -> m0_8  [color=blue, key=0, style=bold];
m0_12 -> m0_13  [color=green, key=0, style=solid];
m0_13 -> m0_14  [color=green, key=0, style=solid];
m0_13 -> m0_15  [color=green, key=2, style=dotted];
m0_13 -> m0_18  [color=green, key=0, style=solid];
m0_14 -> m0_12  [color=blue, key=0, style=bold];
m0_16 -> m0_17  [color=red, key=0, style=solid];
m0_16 -> m0_13  [color=green, key=0, style=solid];
m0_17 -> m0_18  [color=red, key=0, style=solid];
m0_17 -> m0_15  [key=2, style=dotted];
m0_17 -> m0_21  [color=green, key=0, style=solid];
m0_18 -> m0_16  [color=blue, key=0, style=bold];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_15  [key=2, style=dotted];
m0_21 -> m0_19  [color=blue, key=0, style=bold];
m2_13 -> m2_14  [color=red, key=0, style=solid];
m2_13 -> m2_16  [color=green, key=0, style=solid];
m2_13 -> m2_12  [color=green, key=0, style=solid];
m2_13 -> m2_5  [color=green, key=2, style=dotted];
m2_14 -> m2_15  [color=red, key=0, style=solid];
m2_14 -> m2_3  [color=red, key=2, style=dotted];
m2_16 -> m2_15  [color=green, key=0, style=solid];
m2_16 -> m2_5  [color=green, key=2, style=dotted];
m2_16 -> m2_17  [color=red, key=0, style=solid];
m2_16 -> m2_19  [color=green, key=0, style=solid];
m2_15 -> m2_13  [color=blue, key=0, style=bold];
m2_3 -> m2_2  [color=green, key=0, style=solid];
m2_3 -> m2_5  [color=green, key=2, style=dotted];
m2_31 -> m2_32  [color=red, key=0, style=solid];
m2_31 -> m2_34  [color=green, key=0, style=solid];
m2_31 -> m2_30  [color=green, key=0, style=solid];
m2_31 -> m2_5  [color=green, key=2, style=dotted];
m2_32 -> m2_33  [color=red, key=0, style=solid];
m2_32 -> m2_3  [color=red, key=2, style=dotted];
m2_34 -> m2_33  [color=green, key=0, style=solid];
m2_34 -> m2_5  [color=green, key=2, style=dotted];
m2_34 -> m2_35  [color=red, key=0, style=solid];
m2_34 -> m2_37  [color=green, key=0, style=solid];
m2_33 -> m2_31  [color=blue, key=0, style=bold];
m2_10 -> m2_11  [color=red, key=0, style=solid];
m2_10 -> m2_13  [color=green, key=0, style=solid];
m2_10 -> m2_9  [color=green, key=0, style=solid];
m2_10 -> m2_5  [color=green, key=2, style=dotted];
m2_11 -> m2_12  [color=red, key=0, style=solid];
m2_11 -> m2_3  [color=red, key=2, style=dotted];
m2_12 -> m2_10  [color=blue, key=0, style=bold];
m2_28 -> m2_29  [color=red, key=0, style=solid];
m2_28 -> m2_31  [color=green, key=0, style=solid];
m2_28 -> m2_27  [color=green, key=0, style=solid];
m2_28 -> m2_5  [color=green, key=2, style=dotted];
m2_29 -> m2_30  [color=red, key=0, style=solid];
m2_29 -> m2_3  [color=red, key=2, style=dotted];
m2_30 -> m2_28  [color=blue, key=0, style=bold];
m2_35 -> m2_36  [color=red, key=0, style=solid];
m2_35 -> m2_3  [color=red, key=2, style=dotted];
m2_37 -> m2_36  [color=green, key=0, style=solid];
m2_37 -> m2_5  [color=green, key=2, style=dotted];
m2_37 -> m2_38  [color=red, key=0, style=solid];
m2_37 -> m2_40  [color=green, key=0, style=solid];
m2_36 -> m2_34  [color=blue, key=0, style=bold];
m2_22 -> m2_23  [color=red, key=0, style=solid];
m2_22 -> m2_25  [color=green, key=0, style=solid];
m2_22 -> m2_21  [color=green, key=0, style=solid];
m2_22 -> m2_5  [color=green, key=2, style=dotted];
m2_23 -> m2_24  [color=red, key=0, style=solid];
m2_23 -> m2_3  [color=red, key=2, style=dotted];
m2_25 -> m2_24  [color=green, key=0, style=solid];
m2_25 -> m2_5  [color=green, key=2, style=dotted];
m2_25 -> m2_26  [color=red, key=0, style=solid];
m2_25 -> m2_28  [color=green, key=0, style=solid];
m2_24 -> m2_22  [color=blue, key=0, style=bold];
m2_26 -> m2_27  [color=red, key=0, style=solid];
m2_26 -> m2_3  [color=red, key=2, style=dotted];
m2_27 -> m2_25  [color=blue, key=0, style=bold];
m2_38 -> m2_39  [color=red, key=0, style=solid];
m2_38 -> m2_3  [color=red, key=2, style=dotted];
m2_40 -> m2_39  [color=green, key=0, style=solid];
m2_40 -> m2_5  [color=green, key=2, style=dotted];
m2_40 -> m2_41  [color=red, key=0, style=solid];
m2_40 -> m2_43  [color=green, key=0, style=solid];
m2_39 -> m2_37  [color=blue, key=0, style=bold];
m2_17 -> m2_18  [color=red, key=0, style=solid];
m2_17 -> m2_3  [color=red, key=2, style=dotted];
m2_19 -> m2_18  [color=green, key=0, style=solid];
m2_19 -> m2_5  [color=green, key=2, style=dotted];
m2_19 -> m2_20  [color=red, key=0, style=solid];
m2_19 -> m2_22  [color=green, key=0, style=solid];
m2_18 -> m2_16  [color=blue, key=0, style=bold];
m2_41 -> m2_42  [color=red, key=0, style=solid];
m2_41 -> m2_3  [color=red, key=2, style=dotted];
m2_43 -> m2_42  [color=green, key=0, style=solid];
m2_43 -> m2_5  [color=green, key=2, style=dotted];
m2_42 -> m2_40  [color=blue, key=0, style=bold];
m2_7 -> m2_8  [color=red, key=0, style=solid];
m2_7 -> m2_10  [color=green, key=0, style=solid];
m2_7 -> m2_6  [color=green, key=0, style=solid];
m2_7 -> m2_5  [color=green, key=2, style=dotted];
m2_8 -> m2_9  [color=red, key=0, style=solid];
m2_8 -> m2_3  [color=red, key=2, style=dotted];
m2_9 -> m2_7  [color=blue, key=0, style=bold];
m2_5 -> m2_6  [color=red, key=0, style=solid];
m2_5 -> m2_3  [color=red, key=2, style=dotted];
m2_20 -> m2_21  [color=red, key=0, style=solid];
m2_20 -> m2_3  [color=red, key=2, style=dotted];
m2_21 -> m2_19  [color=blue, key=0, style=bold];
m2_4 -> m2_5  [color=red, key=0, style=solid];
m2_4 -> m2_7  [color=green, key=0, style=solid];
m2_6 -> m2_4  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [color=red, key=0, style=solid];
m2_0 -> m2_3  [color=green, key=0, style=solid];
m2_1 -> m2_2  [color=red, key=0, style=solid];
m2_1 -> m2_3  [color=red, key=2, style=dotted];
m2_2 -> m2_0  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [color=green, key=0, style=solid];
m3_1 -> m3_2  [color=green, key=0, style=solid];
m3_1 -> m3_3  [color=green, key=2, style=dotted];
m3_2 -> m3_0  [color=blue, key=0, style=bold];
m3_4 -> m3_5  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_3  [key=2, style=dotted];
m3_6 -> m3_4  [color=blue, key=0, style=bold];
m4_2 -> m4_3  [key=0, style=solid];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_5  [key=2, style=dotted];
m4_3 -> m4_6  [key=2, style=dotted];
m4_4 -> m4_2  [color=blue, key=0, style=bold];
m4_14 -> m4_15  [key=0, style=solid];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_13  [key=2, style=dotted];
m4_15 -> m4_6  [key=2, style=dotted];
m4_16 -> m4_14  [color=blue, key=0, style=bold];
m4_10 -> m4_11  [key=0, style=solid];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_13  [key=2, style=dotted];
m4_11 -> m4_6  [key=2, style=dotted];
m4_12 -> m4_10  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_0  [color=blue, key=0, style=bold];
m4_7 -> m4_8  [key=0, style=solid];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_5  [key=2, style=dotted];
m4_8 -> m4_6  [key=2, style=dotted];
m4_9 -> m4_7  [color=blue, key=0, style=bold];
m9_2 -> m9_3  [key=0, style=solid];
m9_3 -> m9_2  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_0  [color=blue, key=0, style=bold];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_3  [key=2, style=dotted];
m10_1 -> m10_4  [key=2, style=dotted];
m10_2 -> m10_0  [color=blue, key=0, style=bold];
m11_8 -> m11_9  [color=red, key=0, style=solid];
m11_9 -> m11_10  [color=red, key=0, style=solid];
m11_9 -> m11_5  [color=red, key=2, style=dotted];
m11_10 -> m11_11  [color=red, key=0, style=solid];
m11_10 -> m11_6  [color=red, key=2, style=dotted];
m11_11 -> m11_12  [color=red, key=0, style=solid];
m11_11 -> m11_7  [color=red, key=2, style=dotted];
m11_12 -> m11_8  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [color=red, key=0, style=solid];
m11_1 -> m11_2  [color=red, key=0, style=solid];
m11_1 -> m11_5  [color=red, key=2, style=dotted];
m11_2 -> m11_3  [color=red, key=0, style=solid];
m11_2 -> m11_6  [color=red, key=2, style=dotted];
m11_3 -> m11_4  [color=red, key=0, style=solid];
m11_3 -> m11_7  [color=red, key=2, style=dotted];
m11_4 -> m11_0  [color=blue, key=0, style=bold];
m11_13 -> m11_14  [color=red, key=0, style=solid];
m11_14 -> m11_15  [color=red, key=0, style=solid];
m11_15 -> m11_16  [color=red, key=0, style=solid];
m11_15 -> m11_17  [color=red, key=1, label=number, style=dashed];
m11_15 -> m11_20  [color=red, key=1, label=number, style=dashed];
m11_15 -> m11_15  [color=red, key=3, label="Local variable int number", style=bold];
m11_16 -> m11_17  [color=red, key=0, style=solid];
m11_16 -> m11_5  [color=red, key=2, style=dotted];
m11_17 -> m11_18  [color=red, key=0, style=solid];
m11_17 -> m11_6  [color=red, key=2, style=dotted];
m11_17 -> m11_21  [color=red, key=1, label=resultPtBr, style=dashed];
m11_20 -> m11_21  [color=red, key=0, style=solid];
m11_20 -> m11_6  [color=red, key=2, style=dotted];
m11_18 -> m11_19  [color=red, key=0, style=solid];
m11_21 -> m11_22  [color=red, key=0, style=solid];
m11_21 -> m11_7  [color=red, key=2, style=dotted];
m11_19 -> m11_20  [color=red, key=0, style=solid];
m11_19 -> m11_5  [color=red, key=2, style=dotted];
m11_22 -> m11_13  [color=blue, key=0, style=bold];
m12_2 -> m12_3  [key=0, style=solid];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_5  [key=2, style=dotted];
m12_3 -> m12_6  [key=2, style=dotted];
m12_4 -> m12_2  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_0  [color=blue, key=0, style=bold];
m13_0 -> m13_1  [color=green, key=0, style=solid];
m13_0 -> m13_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m13_0 -> m13_5  [color=green, key=1, label=string, style=dashed];
m13_0 -> m13_7  [color=green, key=1, label=string, style=dashed];
m13_0 -> m13_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_0 -> m13_0  [color=darkorchid, key=3, label="method methodReturn string GetResourceKey", style=bold];
m13_1 -> m13_2  [color=green, key=0, style=solid];
m13_3 -> m13_4  [color=green, key=0, style=solid];
m13_3 -> m13_6  [color=green, key=1, label=mod10, style=dashed];
m13_5 -> m13_9  [color=green, key=0, style=solid];
m13_7 -> m13_9  [color=green, key=0, style=solid];
m13_8 -> m13_9  [color=red, key=0, style=solid];
m13_2 -> m13_3  [color=green, key=0, style=solid];
m13_2 -> m13_8  [color=green, key=0, style=solid];
m13_4 -> m13_5  [color=green, key=0, style=solid];
m13_4 -> m13_6  [color=green, key=0, style=solid];
m13_6 -> m13_7  [color=green, key=0, style=solid];
m13_6 -> m13_8  [color=green, key=0, style=solid];
m13_9 -> m13_0  [color=blue, key=0, style=bold];
m16_33 -> m16_34  [key=0, style=solid];
m16_34 -> m16_35  [key=0, style=solid];
m16_35 -> m16_36  [key=0, style=solid];
m16_35 -> m16_7  [key=2, style=dotted];
m16_36 -> m16_37  [key=0, style=solid];
m16_36 -> m16_8  [key=2, style=dotted];
m16_37 -> m16_33  [color=blue, key=0, style=bold];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_0  [color=blue, key=0, style=bold];
m16_28 -> m16_29  [key=0, style=solid];
m16_28 -> m16_30  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_29 -> m16_30  [key=0, style=solid];
m16_29 -> m16_32  [key=2, style=dotted];
m16_29 -> m16_7  [key=2, style=dotted];
m16_30 -> m16_31  [key=0, style=solid];
m16_30 -> m16_8  [key=2, style=dotted];
m16_31 -> m16_28  [color=blue, key=0, style=bold];
m16_18 -> m16_19  [key=0, style=solid];
m16_18 -> m16_20  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_19 -> m16_20  [key=0, style=solid];
m16_19 -> m16_22  [key=2, style=dotted];
m16_19 -> m16_7  [key=2, style=dotted];
m16_20 -> m16_21  [key=0, style=solid];
m16_20 -> m16_8  [key=2, style=dotted];
m16_21 -> m16_18  [color=blue, key=0, style=bold];
m16_2 -> m16_3  [key=0, style=solid];
m16_2 -> m16_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_3 -> m16_4  [key=0, style=solid];
m16_3 -> m16_6  [key=2, style=dotted];
m16_3 -> m16_7  [key=2, style=dotted];
m16_4 -> m16_5  [key=0, style=solid];
m16_4 -> m16_8  [key=2, style=dotted];
m16_5 -> m16_2  [color=blue, key=0, style=bold];
m16_9 -> m16_10  [key=0, style=solid];
m16_9 -> m16_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_10 -> m16_11  [key=0, style=solid];
m16_10 -> m16_6  [key=2, style=dotted];
m16_10 -> m16_7  [key=2, style=dotted];
m16_11 -> m16_12  [key=0, style=solid];
m16_11 -> m16_8  [key=2, style=dotted];
m16_12 -> m16_9  [color=blue, key=0, style=bold];
m16_13 -> m16_14  [key=0, style=solid];
m16_13 -> m16_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_14 -> m16_15  [key=0, style=solid];
m16_14 -> m16_17  [key=2, style=dotted];
m16_14 -> m16_7  [key=2, style=dotted];
m16_15 -> m16_16  [key=0, style=solid];
m16_15 -> m16_8  [key=2, style=dotted];
m16_16 -> m16_13  [color=blue, key=0, style=bold];
m16_23 -> m16_24  [key=0, style=solid];
m16_23 -> m16_25  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_24 -> m16_25  [key=0, style=solid];
m16_24 -> m16_27  [key=2, style=dotted];
m16_24 -> m16_7  [key=2, style=dotted];
m16_25 -> m16_26  [key=0, style=solid];
m16_25 -> m16_8  [key=2, style=dotted];
m16_26 -> m16_23  [color=blue, key=0, style=bold];
}
