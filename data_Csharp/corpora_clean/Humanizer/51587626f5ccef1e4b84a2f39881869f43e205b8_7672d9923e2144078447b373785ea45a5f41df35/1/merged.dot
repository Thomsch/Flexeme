digraph  {
m0_5 [label="Entry Humanizer.StringHumanizeExtensions.FromPascalCase(string)", span="22-22", cluster="Humanizer.StringHumanizeExtensions.FromPascalCase(string)", file="StringHumanizeExtensions.cs"];
m0_37 [label="Entry string.Humanize()", span="42-42", cluster="string.Humanize()", file="StringHumanizeExtensions.cs"];
m0_31 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="StringHumanizeExtensions.cs"];
m0_2 [label="Entry Humanizer.Tests.Localisation.he.DateHumanizeTests.DaysAgo(int, string)", span="14-14", cluster="Humanizer.Tests.Localisation.he.DateHumanizeTests.DaysAgo(int, string)", file="StringHumanizeExtensions.cs"];
m0_3 [label="DateHumanize.Verify(expected, days, TimeUnit.Day, Tense.Past)", span="16-16", cluster="Humanizer.Tests.Localisation.he.DateHumanizeTests.DaysAgo(int, string)", file="StringHumanizeExtensions.cs"];
m0_4 [label="Exit Humanizer.Tests.Localisation.he.DateHumanizeTests.DaysAgo(int, string)", span="14-14", cluster="Humanizer.Tests.Localisation.he.DateHumanizeTests.DaysAgo(int, string)", file="StringHumanizeExtensions.cs"];
m0_15 [label="Entry Unk.Replace", span="", cluster="Unk.Replace", file="StringHumanizeExtensions.cs"];
m0_16 [label="Entry lambda expression", span="26-29", cluster="lambda expression", file="StringHumanizeExtensions.cs"];
m0_17 [label="word.All(Char.IsUpper) && word.Length > 1\r\n                        ? word\r\n                        : word.ToLower()", span="27-29", cluster="lambda expression", file="StringHumanizeExtensions.cs"];
m0_19 [label="DateHumanize.Verify(expected, years, TimeUnit.Year, Tense.Past)", span="66-66", cluster="Humanizer.Tests.Localisation.he.DateHumanizeTests.YearsAgo(int, string)", file="StringHumanizeExtensions.cs"];
m0_0 [label="Entry Humanizer.Tests.Localisation.he.DateHumanizeTests.DateHumanizeTests()", span="7-7", cluster="Humanizer.Tests.Localisation.he.DateHumanizeTests.DateHumanizeTests()", file="StringHumanizeExtensions.cs"];
m0_1 [label="Exit Humanizer.Tests.Localisation.he.DateHumanizeTests.DateHumanizeTests()", span="7-7", cluster="Humanizer.Tests.Localisation.he.DateHumanizeTests.DateHumanizeTests()", file="StringHumanizeExtensions.cs"];
m0_38 [label="Entry string.ApplyCase(Humanizer.LetterCasing)", span="16-16", cluster="string.ApplyCase(Humanizer.LetterCasing)", file="StringHumanizeExtensions.cs"];
m0_32 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="StringHumanizeExtensions.cs"];
m0_12 [label="Entry Humanizer.Tests.Localisation.he.DateHumanizeTests.MonthsAgo(int, string)", span="44-44", cluster="Humanizer.Tests.Localisation.he.DateHumanizeTests.MonthsAgo(int, string)", file="StringHumanizeExtensions.cs"];
m0_18 [label="Exit lambda expression", span="26-29", cluster="lambda expression", file="StringHumanizeExtensions.cs"];
m0_20 [label="Entry string.ToLower()", span="0-0", cluster="string.ToLower()", file="StringHumanizeExtensions.cs"];
m0_14 [label="Exit Humanizer.Tests.Localisation.he.DateHumanizeTests.MonthsAgo(int, string)", span="44-44", cluster="Humanizer.Tests.Localisation.he.DateHumanizeTests.MonthsAgo(int, string)", file="StringHumanizeExtensions.cs"];
m0_24 [label="Entry Humanizer.StringHumanizeExtensions.Humanize(string)", span="42-42", cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="StringHumanizeExtensions.cs"];
m0_25 [label="input.All(Char.IsUpper)", span="45-45", cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="StringHumanizeExtensions.cs"];
m0_26 [label="return input;", span="46-46", cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="StringHumanizeExtensions.cs"];
m0_27 [label="input.Contains('_') || input.Contains('-')", span="48-48", cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="StringHumanizeExtensions.cs"];
m0_28 [label="return FromUnderscoreDashSeparatedWords(input);", span="49-49", cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="StringHumanizeExtensions.cs"];
m0_29 [label="return FromPascalCase(input);", span="51-51", cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="StringHumanizeExtensions.cs"];
m0_30 [label="Exit Humanizer.StringHumanizeExtensions.Humanize(string)", span="42-42", cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="StringHumanizeExtensions.cs"];
m0_21 [label="Entry lambda expression", span="30-30", cluster="lambda expression", file="StringHumanizeExtensions.cs"];
m0_22 [label="res + '' '' + word", span="30-30", cluster="lambda expression", file="StringHumanizeExtensions.cs"];
m0_23 [label="Exit lambda expression", span="30-30", cluster="lambda expression", file="StringHumanizeExtensions.cs"];
m0_9 [label="Exit Humanizer.StringHumanizeExtensions.FromPascalCase(string)", span="22-22", cluster="Humanizer.StringHumanizeExtensions.FromPascalCase(string)", file="StringHumanizeExtensions.cs"];
m0_10 [label="Entry System.Text.RegularExpressions.Regex.Split(string)", span="0-0", cluster="System.Text.RegularExpressions.Regex.Split(string)", file="StringHumanizeExtensions.cs"];
m0_11 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="StringHumanizeExtensions.cs"];
m0_33 [label="Entry Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", span="60-60", cluster="Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", file="StringHumanizeExtensions.cs"];
m0_34 [label="var humanizedString = input.Humanize()", span="62-62", cluster="Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", file="StringHumanizeExtensions.cs"];
m0_35 [label="return humanizedString.ApplyCase(casing);", span="63-63", cluster="Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", file="StringHumanizeExtensions.cs"];
m0_36 [label="Exit Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", span="60-60", cluster="Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", file="StringHumanizeExtensions.cs"];
m0_13 [label="Entry Unk.ToUpper", span="", cluster="Unk.ToUpper", file="StringHumanizeExtensions.cs"];
m0_6 [label="Entry Humanizer.Tests.Localisation.he.DateHumanizeTests.HoursAgo(int, string)", span="24-24", cluster="Humanizer.Tests.Localisation.he.DateHumanizeTests.HoursAgo(int, string)", file="StringHumanizeExtensions.cs"];
m0_8 [label="Exit Humanizer.Tests.Localisation.he.DateHumanizeTests.HoursAgo(int, string)", span="24-24", cluster="Humanizer.Tests.Localisation.he.DateHumanizeTests.HoursAgo(int, string)", file="StringHumanizeExtensions.cs"];
m0_7 [label="DateHumanize.Verify(expected, hours, TimeUnit.Hour, Tense.Past)", span="26-26", cluster="Humanizer.Tests.Localisation.he.DateHumanizeTests.HoursAgo(int, string)", file="StringHumanizeExtensions.cs"];
m0_39 [label="Entry Humanizer.StringHumanizeExtensions.Humanize(string, params IStringTransformer[])", span="72-72", cluster="Humanizer.StringHumanizeExtensions.Humanize(string, params IStringTransformer[])", file="StringHumanizeExtensions.cs"];
m0_40 [label="var humanizedString = input.Humanize()", span="74-74", cluster="Humanizer.StringHumanizeExtensions.Humanize(string, params IStringTransformer[])", color=green, community=0, file="StringHumanizeExtensions.cs"];
m0_41 [label="return humanizedString.Transform(transformers);", span="75-75", cluster="Humanizer.StringHumanizeExtensions.Humanize(string, params IStringTransformer[])", color=green, community=0, file="StringHumanizeExtensions.cs"];
m0_42 [label="Exit Humanizer.StringHumanizeExtensions.Humanize(string, params IStringTransformer[])", span="72-72", cluster="Humanizer.StringHumanizeExtensions.Humanize(string, params IStringTransformer[])", file="StringHumanizeExtensions.cs"];
m0_43 [label="Entry Unk.Transform", span="", cluster="Unk.Transform", file="StringHumanizeExtensions.cs"];
m1_0 [label="Entry Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", span="33-33", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs"];
m1_1 [label="number == 0", span="35-35", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs"];
m1_3 [label="number < 0", span="38-38", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs"];
m1_4 [label="return string.Format(''min {0}'', Convert(-number));", span="39-39", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs"];
m1_7 [label="var divided = number / m.Value", span="45-45", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs"];
m1_12 [label="number %= m.Value", span="55-55", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs"];
m1_15 [label="number > 0", span="60-60", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs"];
m1_16 [label="number < 20", span="62-62", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs"];
m1_17 [label="word += UnitsMap[number]", span="63-63", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs"];
m1_18 [label="var tens = TensMap[number / 10]", span="66-66", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs"];
m1_19 [label="var unit = number % 10", span="67-67", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs"];
m1_2 [label="return UnitsMap[0];", span="36-36", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs"];
m1_5 [label="var word = ''''", span="41-41", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs"];
m1_6 [label=Hunderds, span="43-43", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs"];
m1_10 [label="word += m.Name", span="51-51", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs"];
m1_11 [label="word += Convert(divided) + m.Prefix + m.Name", span="53-53", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs"];
m1_23 [label="word += units + (trema ? ''�n'' : ''en'') + tens", span="72-72", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs"];
m1_24 [label="word += tens", span="75-75", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs"];
m1_25 [label="return word;", span="79-79", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs"];
m1_9 [label="divided == 1 && !m.DisplayOneUnit", span="50-50", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs"];
m1_14 [label="word += m.Postfix", span="57-57", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs"];
m1_8 [label="divided <= 0", span="47-47", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs"];
m1_13 [label="number > 0", span="56-56", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs"];
m1_20 [label="unit > 0", span="68-68", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs"];
m1_21 [label="var units = UnitsMap[unit]", span="70-70", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs"];
m1_22 [label="var trema = units.EndsWith(''e'')", span="71-71", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs"];
m1_26 [label="Exit Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", span="33-33", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs"];
m1_28 [label="Entry string.EndsWith(string)", span="0-0", cluster="string.EndsWith(string)", file="StringHumanizeTests.cs"];
m1_38 [label="Entry Unk.Substring", span="", cluster="Unk.Substring", file="StringHumanizeTests.cs"];
m1_29 [label="Entry Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", span="91-91", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="StringHumanizeTests.cs"];
m1_30 [label="var word = Convert(number)", span="93-93", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="StringHumanizeTests.cs"];
m1_31 [label="OrdinalExceptions.Where(kv => word.EndsWith(kv.Key))", span="95-95", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="StringHumanizeTests.cs"];
m1_32 [label="return word.Substring(0, word.Length - kv.Key.Length) + kv.Value;", span="98-98", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="StringHumanizeTests.cs"];
m1_33 [label="word.LastIndexOfAny(EndingCharForSte) == (word.Length - 1)", span="104-104", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="StringHumanizeTests.cs"];
m1_34 [label="return word + ''ste'';", span="105-105", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="StringHumanizeTests.cs"];
m1_35 [label="return word + ''de'';", span="107-107", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="StringHumanizeTests.cs"];
m1_36 [label="Exit Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", span="91-91", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="StringHumanizeTests.cs"];
m1_40 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="StringHumanizeTests.cs"];
m1_41 [label="word.EndsWith(kv.Key)", span="95-95", cluster="lambda expression", file="StringHumanizeTests.cs"];
m1_42 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="StringHumanizeTests.cs"];
m1_39 [label="Entry string.LastIndexOfAny(char[])", span="0-0", cluster="string.LastIndexOfAny(char[])", file="StringHumanizeTests.cs"];
m1_27 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="StringHumanizeTests.cs"];
m1_37 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="StringHumanizeTests.cs"];
m1_43 [label="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter", span="", file="StringHumanizeTests.cs"];
m1_44 [label=word, span="", file="StringHumanizeTests.cs"];
m4_0 [label="Entry Humanizer.Transformer.ToSentenceCase.Transform(string)", span="6-6", cluster="Humanizer.Transformer.ToSentenceCase.Transform(string)", file="ToSentenceCase.cs"];
m4_1 [label="input.Length >= 1", span="8-8", cluster="Humanizer.Transformer.ToSentenceCase.Transform(string)", color=green, community=0, file="ToSentenceCase.cs"];
m4_2 [label="return String.Concat(input.Substring(0, 1).ToUpper(), input.Substring(1));", span="9-9", cluster="Humanizer.Transformer.ToSentenceCase.Transform(string)", color=green, community=0, file="ToSentenceCase.cs"];
m4_3 [label="return input.ToUpper();", span="11-11", cluster="Humanizer.Transformer.ToSentenceCase.Transform(string)", color=green, community=0, file="ToSentenceCase.cs"];
m4_4 [label="Exit Humanizer.Transformer.ToSentenceCase.Transform(string)", span="6-6", cluster="Humanizer.Transformer.ToSentenceCase.Transform(string)", file="ToSentenceCase.cs"];
m4_8 [label="Entry string.Concat(string, string)", span="0-0", cluster="string.Concat(string, string)", file="ToSentenceCase.cs"];
m4_6 [label="Entry string.ToUpper()", span="0-0", cluster="string.ToUpper()", file="ToSentenceCase.cs"];
m4_5 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="ToSentenceCase.cs"];
m4_7 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="ToSentenceCase.cs"];
m5_0 [label="Entry Humanizer.Transformer.ToTitleCase.Transform(string)", span="6-6", cluster="Humanizer.Transformer.ToTitleCase.Transform(string)", file="ToTitleCase.cs"];
m5_1 [label="return CultureInfo.CurrentCulture.TextInfo.ToTitleCase(input);", span="8-8", cluster="Humanizer.Transformer.ToTitleCase.Transform(string)", color=green, community=0, file="ToTitleCase.cs"];
m5_2 [label="Exit Humanizer.Transformer.ToTitleCase.Transform(string)", span="6-6", cluster="Humanizer.Transformer.ToTitleCase.Transform(string)", file="ToTitleCase.cs"];
m5_3 [label="Entry System.Globalization.TextInfo.ToTitleCase(string)", span="0-0", cluster="System.Globalization.TextInfo.ToTitleCase(string)", file="ToTitleCase.cs"];
m6_0 [label="Entry Humanizer.Transformer.ToUpperCase.Transform(string)", span="4-4", cluster="Humanizer.Transformer.ToUpperCase.Transform(string)", file="ToUpperCase.cs"];
m6_1 [label="return input.ToUpper();", span="6-6", cluster="Humanizer.Transformer.ToUpperCase.Transform(string)", color=green, community=0, file="ToUpperCase.cs"];
m6_2 [label="Exit Humanizer.Transformer.ToUpperCase.Transform(string)", span="4-4", cluster="Humanizer.Transformer.ToUpperCase.Transform(string)", file="ToUpperCase.cs"];
m6_3 [label="Entry string.ToUpper()", span="0-0", cluster="string.ToUpper()", file="ToUpperCase.cs"];
m7_11 [label="Entry Humanizer.Tests.TransformersTests.TransformToUpperCase(string, string)", span="40-40", cluster="Humanizer.Tests.TransformersTests.TransformToUpperCase(string, string)", file="TransformersTests.cs"];
m7_12 [label="Assert.Equal(expectedOutput, input.TransformWith(Transformers.ToUpperCase))", span="42-42", cluster="Humanizer.Tests.TransformersTests.TransformToUpperCase(string, string)", color=green, community=0, file="TransformersTests.cs"];
m7_13 [label="Exit Humanizer.Tests.TransformersTests.TransformToUpperCase(string, string)", span="40-40", cluster="Humanizer.Tests.TransformersTests.TransformToUpperCase(string, string)", file="TransformersTests.cs"];
m7_4 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="TransformersTests.cs"];
m7_3 [label="Entry string.TransformWith(params Humanizer.Transformer.IStringTransformer[])", span="16-16", cluster="string.TransformWith(params Humanizer.Transformer.IStringTransformer[])", file="TransformersTests.cs"];
m7_5 [label="Entry Humanizer.Tests.TransformersTests.TransformToLowerCase(string, string)", span="22-22", cluster="Humanizer.Tests.TransformersTests.TransformToLowerCase(string, string)", file="TransformersTests.cs"];
m7_6 [label="Assert.Equal(expectedOutput, input.TransformWith(Transformers.ToLowerCase))", span="24-24", cluster="Humanizer.Tests.TransformersTests.TransformToLowerCase(string, string)", color=green, community=0, file="TransformersTests.cs"];
m7_7 [label="Exit Humanizer.Tests.TransformersTests.TransformToLowerCase(string, string)", span="22-22", cluster="Humanizer.Tests.TransformersTests.TransformToLowerCase(string, string)", file="TransformersTests.cs"];
m7_0 [label="Entry Humanizer.Tests.TransformersTests.TransformToTitleCase(string, string)", span="12-12", cluster="Humanizer.Tests.TransformersTests.TransformToTitleCase(string, string)", file="TransformersTests.cs"];
m7_1 [label="Assert.Equal(expectedOutput, input.TransformWith(Transformers.ToTitleCase))", span="14-14", cluster="Humanizer.Tests.TransformersTests.TransformToTitleCase(string, string)", color=green, community=0, file="TransformersTests.cs"];
m7_2 [label="Exit Humanizer.Tests.TransformersTests.TransformToTitleCase(string, string)", span="12-12", cluster="Humanizer.Tests.TransformersTests.TransformToTitleCase(string, string)", file="TransformersTests.cs"];
m7_8 [label="Entry Humanizer.Tests.TransformersTests.TransformToSentenceCase(string, string)", span="31-31", cluster="Humanizer.Tests.TransformersTests.TransformToSentenceCase(string, string)", file="TransformersTests.cs"];
m7_9 [label="Assert.Equal(expectedOutput, input.TransformWith(Transformers.ToSentenceCase))", span="33-33", cluster="Humanizer.Tests.TransformersTests.TransformToSentenceCase(string, string)", color=green, community=0, file="TransformersTests.cs"];
m7_10 [label="Exit Humanizer.Tests.TransformersTests.TransformToSentenceCase(string, string)", span="31-31", cluster="Humanizer.Tests.TransformersTests.TransformToSentenceCase(string, string)", file="TransformersTests.cs"];
m0_5 -> m0_24  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m0_5 -> m0_6  [key=0, style=solid];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_5  [key=2, style=dotted];
m0_4 -> m0_2  [key=0, style=bold, color=blue];
m0_15 -> m0_16  [key=0, style=solid];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_5  [key=2, style=dotted];
m0_17 -> m0_15  [key=0, style=bold, color=blue];
m0_17 -> m0_19  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_20  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_5  [key=2, style=dotted];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [key=0, style=bold, color=blue];
m0_12 -> m0_13  [key=0, style=solid];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_16  [key=0, style=bold, color=blue];
m0_20 -> m0_18  [key=0, style=bold, color=blue];
m0_14 -> m0_12  [key=0, style=bold, color=blue];
m0_24 -> m0_24  [key=3, color=darkorchid, style=bold, label="method methodReturn string Humanize"];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_24 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_24 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_24 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_24 -> m0_5  [key=3, color=darkorchid, style=bold, label="method methodReturn string Humanize"];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_27  [key=0, style=solid];
m0_25 -> m0_19  [key=2, style=dotted];
m0_26 -> m0_30  [key=0, style=solid];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_29  [key=0, style=solid];
m0_27 -> m0_31  [key=2, style=dotted];
m0_28 -> m0_30  [key=0, style=solid];
m0_28 -> m0_32  [key=2, style=dotted];
m0_29 -> m0_5  [key=2, style=dotted];
m0_29 -> m0_30  [key=0, style=solid];
m0_30 -> m0_24  [key=0, style=bold, color=blue];
m0_21 -> m0_22  [key=0, style=solid];
m0_22 -> m0_23  [key=0, style=solid];
m0_23 -> m0_21  [key=0, style=bold, color=blue];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_5  [key=0, style=bold, color=blue];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_5  [key=2, style=dotted];
m0_11 -> m0_9  [key=0, style=bold, color=blue];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.LetterCasing"];
m0_34 -> m0_37  [key=2, style=dotted];
m0_34 -> m0_24  [key=3, color=darkorchid, style=bold, label="Local variable string humanizedString"];
m0_34 -> m0_35  [key=0, style=solid];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_38  [key=2, style=dotted];
m0_36 -> m0_33  [key=0, style=bold, color=blue];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_5  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_10  [key=2, style=dotted];
m0_6 -> m0_11  [key=2, style=dotted];
m0_6 -> m0_12  [key=2, style=dotted];
m0_6 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_6 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_15  [key=2, style=dotted];
m0_8 -> m0_6  [key=0, style=bold, color=blue];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label=result];
m0_7 -> m0_13  [key=2, style=dotted];
m0_7 -> m0_14  [key=2, style=dotted];
m0_7 -> m0_5  [key=2, style=dotted];
m0_39 -> m0_40  [key=0, style=solid, color=green];
m0_39 -> m0_41  [key=1, style=dashed, color=green, label="params IStringTransformer[]"];
m0_40 -> m0_41  [key=0, style=solid, color=green];
m0_40 -> m0_37  [key=2, style=dotted, color=green];
m0_40 -> m0_24  [key=3, color=green, style=bold, label="Local variable string humanizedString"];
m0_41 -> m0_42  [key=0, style=solid, color=green];
m0_41 -> m0_43  [key=2, style=dotted, color=green];
m0_42 -> m0_39  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_0 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_0 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_0 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_0 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_0 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_0 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_0 -> m1_18  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_0 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_5  [key=0, style=solid];
m1_4 -> m1_26  [key=0, style=solid];
m1_4 -> m1_0  [key=2, style=dotted];
m1_4 -> m1_27  [key=2, style=dotted];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label=divided];
m1_7 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label=divided];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_12 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_12 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_12 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_12 -> m1_18  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_12 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_25  [key=0, style=solid];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_18  [key=0, style=solid];
m1_17 -> m1_25  [key=0, style=solid];
m1_17 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label=word];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label=tens];
m1_18 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label=tens];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label=unit];
m1_2 -> m1_26  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label=word];
m1_5 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label=word];
m1_5 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label=word];
m1_5 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label=word];
m1_5 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label=word];
m1_5 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label=word];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_15  [key=0, style=solid];
m1_6 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label=m];
m1_6 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label=m];
m1_6 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label=m];
m1_6 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label=m];
m1_6 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label=m];
m1_10 -> m1_12  [key=0, style=solid];
m1_10 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label=word];
m1_10 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label=word];
m1_10 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label=word];
m1_10 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label=word];
m1_10 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label=word];
m1_10 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label=word];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_0  [key=2, style=dotted];
m1_11 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label=word];
m1_11 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label=word];
m1_11 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label=word];
m1_11 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label=word];
m1_11 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label=word];
m1_11 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label=word];
m1_23 -> m1_25  [key=0, style=solid];
m1_23 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label=word];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label=word];
m1_25 -> m1_26  [key=0, style=solid];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_11  [key=0, style=solid];
m1_14 -> m1_6  [key=0, style=solid];
m1_14 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label=word];
m1_14 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label=word];
m1_14 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label=word];
m1_14 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label=word];
m1_14 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label=word];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_6  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_6  [key=0, style=solid];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_24  [key=0, style=solid];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label=units];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_28  [key=2, style=dotted];
m1_26 -> m1_0  [key=0, style=bold, color=blue];
m1_29 -> m1_30  [key=0, style=solid];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_0  [key=2, style=dotted];
m1_30 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label=word];
m1_30 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label=word];
m1_30 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label=word];
m1_30 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label=word];
m1_30 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label=word];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_33  [key=0, style=solid];
m1_31 -> m1_37  [key=2, style=dotted];
m1_31 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_32 -> m1_36  [key=0, style=solid];
m1_32 -> m1_38  [key=2, style=dotted];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_35  [key=0, style=solid];
m1_33 -> m1_39  [key=2, style=dotted];
m1_34 -> m1_36  [key=0, style=solid];
m1_35 -> m1_36  [key=0, style=solid];
m1_36 -> m1_29  [key=0, style=bold, color=blue];
m1_40 -> m1_41  [key=0, style=solid];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_28  [key=2, style=dotted];
m1_41 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, string>"];
m1_42 -> m1_40  [key=0, style=bold, color=blue];
m1_43 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter"];
m1_43 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter"];
m1_43 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter"];
m1_44 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label=word];
m4_0 -> m4_1  [key=0, style=solid, color=green];
m4_0 -> m4_2  [key=1, style=dashed, color=green, label=string];
m4_0 -> m4_3  [key=1, style=dashed, color=green, label=string];
m4_1 -> m4_2  [key=0, style=solid, color=green];
m4_1 -> m4_3  [key=0, style=solid, color=green];
m4_2 -> m4_4  [key=0, style=solid, color=green];
m4_2 -> m4_5  [key=2, style=dotted, color=green];
m4_2 -> m4_6  [key=2, style=dotted, color=green];
m4_2 -> m4_7  [key=2, style=dotted, color=green];
m4_2 -> m4_8  [key=2, style=dotted, color=green];
m4_3 -> m4_4  [key=0, style=solid, color=green];
m4_3 -> m4_6  [key=2, style=dotted, color=green];
m4_4 -> m4_0  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid, color=green];
m5_1 -> m5_2  [key=0, style=solid, color=green];
m5_1 -> m5_3  [key=2, style=dotted, color=green];
m5_2 -> m5_0  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid, color=green];
m6_1 -> m6_2  [key=0, style=solid, color=green];
m6_1 -> m6_3  [key=2, style=dotted, color=green];
m6_2 -> m6_0  [key=0, style=bold, color=blue];
m7_11 -> m7_12  [key=0, style=solid, color=green];
m7_12 -> m7_13  [key=0, style=solid, color=green];
m7_12 -> m7_3  [key=2, style=dotted, color=green];
m7_12 -> m7_4  [key=2, style=dotted, color=green];
m7_13 -> m7_11  [key=0, style=bold, color=blue];
m7_5 -> m7_6  [key=0, style=solid, color=green];
m7_6 -> m7_7  [key=0, style=solid, color=green];
m7_6 -> m7_3  [key=2, style=dotted, color=green];
m7_6 -> m7_4  [key=2, style=dotted, color=green];
m7_7 -> m7_5  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid, color=green];
m7_1 -> m7_2  [key=0, style=solid, color=green];
m7_1 -> m7_3  [key=2, style=dotted, color=green];
m7_1 -> m7_4  [key=2, style=dotted, color=green];
m7_2 -> m7_0  [key=0, style=bold, color=blue];
m7_8 -> m7_9  [key=0, style=solid, color=green];
m7_9 -> m7_10  [key=0, style=solid, color=green];
m7_9 -> m7_3  [key=2, style=dotted, color=green];
m7_9 -> m7_4  [key=2, style=dotted, color=green];
m7_10 -> m7_8  [key=0, style=bold, color=blue];
}
