digraph  {
m0_5 [cluster="Humanizer.StringHumanizeExtensions.FromPascalCase(string)", file="StringHumanizeExtensions.cs", label="Entry Humanizer.StringHumanizeExtensions.FromPascalCase(string)", span="22-22"];
m0_37 [cluster="string.Humanize()", file="StringHumanizeExtensions.cs", label="Entry string.Humanize()", span="42-42"];
m0_31 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="StringHumanizeExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m0_2 [cluster="Humanizer.Tests.Localisation.he.DateHumanizeTests.DaysAgo(int, string)", file="StringHumanizeExtensions.cs", label="Entry Humanizer.Tests.Localisation.he.DateHumanizeTests.DaysAgo(int, string)", span="14-14"];
m0_3 [cluster="Humanizer.Tests.Localisation.he.DateHumanizeTests.DaysAgo(int, string)", file="StringHumanizeExtensions.cs", label="DateHumanize.Verify(expected, days, TimeUnit.Day, Tense.Past)", span="16-16"];
m0_4 [cluster="Humanizer.Tests.Localisation.he.DateHumanizeTests.DaysAgo(int, string)", file="StringHumanizeExtensions.cs", label="Exit Humanizer.Tests.Localisation.he.DateHumanizeTests.DaysAgo(int, string)", span="14-14"];
m0_15 [cluster="Unk.Replace", file="StringHumanizeExtensions.cs", label="Entry Unk.Replace", span=""];
m0_16 [cluster="lambda expression", file="StringHumanizeExtensions.cs", label="Entry lambda expression", span="26-29"];
m0_17 [cluster="lambda expression", file="StringHumanizeExtensions.cs", label="word.All(Char.IsUpper) && word.Length > 1\r\n                        ? word\r\n                        : word.ToLower()", span="27-29"];
m0_19 [cluster="Humanizer.Tests.Localisation.he.DateHumanizeTests.YearsAgo(int, string)", file="StringHumanizeExtensions.cs", label="DateHumanize.Verify(expected, years, TimeUnit.Year, Tense.Past)", span="66-66"];
m0_0 [cluster="Humanizer.Tests.Localisation.he.DateHumanizeTests.DateHumanizeTests()", file="StringHumanizeExtensions.cs", label="Entry Humanizer.Tests.Localisation.he.DateHumanizeTests.DateHumanizeTests()", span="7-7"];
m0_1 [cluster="Humanizer.Tests.Localisation.he.DateHumanizeTests.DateHumanizeTests()", file="StringHumanizeExtensions.cs", label="Exit Humanizer.Tests.Localisation.he.DateHumanizeTests.DateHumanizeTests()", span="7-7"];
m0_38 [cluster="string.ApplyCase(Humanizer.LetterCasing)", file="StringHumanizeExtensions.cs", label="Entry string.ApplyCase(Humanizer.LetterCasing)", span="16-16"];
m0_32 [cluster="System.Func<T, TResult>.Invoke(T)", file="StringHumanizeExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m0_12 [cluster="Humanizer.Tests.Localisation.he.DateHumanizeTests.MonthsAgo(int, string)", file="StringHumanizeExtensions.cs", label="Entry Humanizer.Tests.Localisation.he.DateHumanizeTests.MonthsAgo(int, string)", span="44-44"];
m0_18 [cluster="lambda expression", file="StringHumanizeExtensions.cs", label="Exit lambda expression", span="26-29"];
m0_20 [cluster="string.ToLower()", file="StringHumanizeExtensions.cs", label="Entry string.ToLower()", span="0-0"];
m0_14 [cluster="Humanizer.Tests.Localisation.he.DateHumanizeTests.MonthsAgo(int, string)", file="StringHumanizeExtensions.cs", label="Exit Humanizer.Tests.Localisation.he.DateHumanizeTests.MonthsAgo(int, string)", span="44-44"];
m0_24 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="StringHumanizeExtensions.cs", label="Entry Humanizer.StringHumanizeExtensions.Humanize(string)", span="42-42"];
m0_25 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="StringHumanizeExtensions.cs", label="input.All(Char.IsUpper)", span="45-45"];
m0_26 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="StringHumanizeExtensions.cs", label="return input;", span="46-46"];
m0_27 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="StringHumanizeExtensions.cs", label="input.Contains('_') || input.Contains('-')", span="48-48"];
m0_28 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="StringHumanizeExtensions.cs", label="return FromUnderscoreDashSeparatedWords(input);", span="49-49"];
m0_29 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="StringHumanizeExtensions.cs", label="return FromPascalCase(input);", span="51-51"];
m0_30 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="StringHumanizeExtensions.cs", label="Exit Humanizer.StringHumanizeExtensions.Humanize(string)", span="42-42"];
m0_21 [cluster="lambda expression", file="StringHumanizeExtensions.cs", label="Entry lambda expression", span="30-30"];
m0_22 [cluster="lambda expression", file="StringHumanizeExtensions.cs", label="res + '' '' + word", span="30-30"];
m0_23 [cluster="lambda expression", file="StringHumanizeExtensions.cs", label="Exit lambda expression", span="30-30"];
m0_9 [cluster="Humanizer.StringHumanizeExtensions.FromPascalCase(string)", file="StringHumanizeExtensions.cs", label="Exit Humanizer.StringHumanizeExtensions.FromPascalCase(string)", span="22-22"];
m0_10 [cluster="System.Text.RegularExpressions.Regex.Split(string)", file="StringHumanizeExtensions.cs", label="Entry System.Text.RegularExpressions.Regex.Split(string)", span="0-0"];
m0_11 [cluster="Unk.Select", file="StringHumanizeExtensions.cs", label="Entry Unk.Select", span=""];
m0_33 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", file="StringHumanizeExtensions.cs", label="Entry Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", span="60-60"];
m0_34 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", file="StringHumanizeExtensions.cs", label="var humanizedString = input.Humanize()", span="62-62"];
m0_35 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", file="StringHumanizeExtensions.cs", label="return humanizedString.ApplyCase(casing);", span="63-63"];
m0_36 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", file="StringHumanizeExtensions.cs", label="Exit Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", span="60-60"];
m0_13 [cluster="Unk.ToUpper", file="StringHumanizeExtensions.cs", label="Entry Unk.ToUpper", span=""];
m0_6 [cluster="Humanizer.Tests.Localisation.he.DateHumanizeTests.HoursAgo(int, string)", file="StringHumanizeExtensions.cs", label="Entry Humanizer.Tests.Localisation.he.DateHumanizeTests.HoursAgo(int, string)", span="24-24"];
m0_8 [cluster="Humanizer.Tests.Localisation.he.DateHumanizeTests.HoursAgo(int, string)", file="StringHumanizeExtensions.cs", label="Exit Humanizer.Tests.Localisation.he.DateHumanizeTests.HoursAgo(int, string)", span="24-24"];
m0_7 [cluster="Humanizer.Tests.Localisation.he.DateHumanizeTests.HoursAgo(int, string)", file="StringHumanizeExtensions.cs", label="DateHumanize.Verify(expected, hours, TimeUnit.Hour, Tense.Past)", span="26-26"];
m0_39 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string, params IStringTransformer[])", file="StringHumanizeExtensions.cs", label="Entry Humanizer.StringHumanizeExtensions.Humanize(string, params IStringTransformer[])", span="72-72"];
m0_40 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string, params IStringTransformer[])", color=green, community=0, file="StringHumanizeExtensions.cs", label="var humanizedString = input.Humanize()", prediction=0, span="74-74"];
m0_41 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string, params IStringTransformer[])", color=green, community=0, file="StringHumanizeExtensions.cs", label="return humanizedString.Transform(transformers);", prediction=1, span="75-75"];
m0_42 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string, params IStringTransformer[])", file="StringHumanizeExtensions.cs", label="Exit Humanizer.StringHumanizeExtensions.Humanize(string, params IStringTransformer[])", span="72-72"];
m0_43 [cluster="Unk.Transform", file="StringHumanizeExtensions.cs", label="Entry Unk.Transform", span=""];
m1_0 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs", label="Entry Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", span="33-33"];
m1_1 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs", label="number == 0", span="35-35"];
m1_3 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs", label="number < 0", span="38-38"];
m1_4 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs", label="return string.Format(''min {0}'', Convert(-number));", span="39-39"];
m1_7 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs", label="var divided = number / m.Value", span="45-45"];
m1_12 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs", label="number %= m.Value", span="55-55"];
m1_15 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs", label="number > 0", span="60-60"];
m1_16 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs", label="number < 20", span="62-62"];
m1_17 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs", label="word += UnitsMap[number]", span="63-63"];
m1_18 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs", label="var tens = TensMap[number / 10]", span="66-66"];
m1_19 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs", label="var unit = number % 10", span="67-67"];
m1_2 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs", label="return UnitsMap[0];", span="36-36"];
m1_5 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs", label="var word = ''''", span="41-41"];
m1_6 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs", label=Hunderds, span="43-43"];
m1_10 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs", label="word += m.Name", span="51-51"];
m1_11 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs", label="word += Convert(divided) + m.Prefix + m.Name", span="53-53"];
m1_23 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs", label="word += units + (trema ? ''�n'' : ''en'') + tens", span="72-72"];
m1_24 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs", label="word += tens", span="75-75"];
m1_25 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs", label="return word;", span="79-79"];
m1_9 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs", label="divided == 1 && !m.DisplayOneUnit", span="50-50"];
m1_14 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs", label="word += m.Postfix", span="57-57"];
m1_8 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs", label="divided <= 0", span="47-47"];
m1_13 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs", label="number > 0", span="56-56"];
m1_20 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs", label="unit > 0", span="68-68"];
m1_21 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs", label="var units = UnitsMap[unit]", span="70-70"];
m1_22 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs", label="var trema = units.EndsWith(''e'')", span="71-71"];
m1_26 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="StringHumanizeTests.cs", label="Exit Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", span="33-33"];
m1_28 [cluster="string.EndsWith(string)", file="StringHumanizeTests.cs", label="Entry string.EndsWith(string)", span="0-0"];
m1_38 [cluster="Unk.Substring", file="StringHumanizeTests.cs", label="Entry Unk.Substring", span=""];
m1_29 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="StringHumanizeTests.cs", label="Entry Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", span="91-91"];
m1_30 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="StringHumanizeTests.cs", label="var word = Convert(number)", span="93-93"];
m1_31 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="StringHumanizeTests.cs", label="OrdinalExceptions.Where(kv => word.EndsWith(kv.Key))", span="95-95"];
m1_32 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="StringHumanizeTests.cs", label="return word.Substring(0, word.Length - kv.Key.Length) + kv.Value;", span="98-98"];
m1_33 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="StringHumanizeTests.cs", label="word.LastIndexOfAny(EndingCharForSte) == (word.Length - 1)", span="104-104"];
m1_34 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="StringHumanizeTests.cs", label="return word + ''ste'';", span="105-105"];
m1_35 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="StringHumanizeTests.cs", label="return word + ''de'';", span="107-107"];
m1_36 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="StringHumanizeTests.cs", label="Exit Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", span="91-91"];
m1_40 [cluster="lambda expression", file="StringHumanizeTests.cs", label="Entry lambda expression", span="95-95"];
m1_41 [cluster="lambda expression", file="StringHumanizeTests.cs", label="word.EndsWith(kv.Key)", span="95-95"];
m1_42 [cluster="lambda expression", file="StringHumanizeTests.cs", label="Exit lambda expression", span="95-95"];
m1_39 [cluster="string.LastIndexOfAny(char[])", file="StringHumanizeTests.cs", label="Entry string.LastIndexOfAny(char[])", span="0-0"];
m1_27 [cluster="string.Format(string, object)", file="StringHumanizeTests.cs", label="Entry string.Format(string, object)", span="0-0"];
m1_37 [cluster="Unk.Where", file="StringHumanizeTests.cs", label="Entry Unk.Where", span=""];
m1_43 [file="StringHumanizeTests.cs", label="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter", span=""];
m1_44 [file="StringHumanizeTests.cs", label=word, span=""];
m4_0 [cluster="Humanizer.Transformer.ToSentenceCase.Transform(string)", file="ToSentenceCase.cs", label="Entry Humanizer.Transformer.ToSentenceCase.Transform(string)", span="6-6"];
m4_1 [cluster="Humanizer.Transformer.ToSentenceCase.Transform(string)", color=green, community=0, file="ToSentenceCase.cs", label="input.Length >= 1", prediction=2, span="8-8"];
m4_2 [cluster="Humanizer.Transformer.ToSentenceCase.Transform(string)", color=green, community=0, file="ToSentenceCase.cs", label="return String.Concat(input.Substring(0, 1).ToUpper(), input.Substring(1));", prediction=3, span="9-9"];
m4_3 [cluster="Humanizer.Transformer.ToSentenceCase.Transform(string)", color=green, community=0, file="ToSentenceCase.cs", label="return input.ToUpper();", prediction=3, span="11-11"];
m4_4 [cluster="Humanizer.Transformer.ToSentenceCase.Transform(string)", file="ToSentenceCase.cs", label="Exit Humanizer.Transformer.ToSentenceCase.Transform(string)", span="6-6"];
m4_8 [cluster="string.Concat(string, string)", file="ToSentenceCase.cs", label="Entry string.Concat(string, string)", span="0-0"];
m4_6 [cluster="string.ToUpper()", file="ToSentenceCase.cs", label="Entry string.ToUpper()", span="0-0"];
m4_5 [cluster="string.Substring(int, int)", file="ToSentenceCase.cs", label="Entry string.Substring(int, int)", span="0-0"];
m4_7 [cluster="string.Substring(int)", file="ToSentenceCase.cs", label="Entry string.Substring(int)", span="0-0"];
m5_0 [cluster="Humanizer.Transformer.ToTitleCase.Transform(string)", file="ToTitleCase.cs", label="Entry Humanizer.Transformer.ToTitleCase.Transform(string)", span="6-6"];
m5_1 [cluster="Humanizer.Transformer.ToTitleCase.Transform(string)", color=green, community=0, file="ToTitleCase.cs", label="return CultureInfo.CurrentCulture.TextInfo.ToTitleCase(input);", prediction=5, span="8-8"];
m5_2 [cluster="Humanizer.Transformer.ToTitleCase.Transform(string)", file="ToTitleCase.cs", label="Exit Humanizer.Transformer.ToTitleCase.Transform(string)", span="6-6"];
m5_3 [cluster="System.Globalization.TextInfo.ToTitleCase(string)", file="ToTitleCase.cs", label="Entry System.Globalization.TextInfo.ToTitleCase(string)", span="0-0"];
m6_0 [cluster="Humanizer.Transformer.ToUpperCase.Transform(string)", file="ToUpperCase.cs", label="Entry Humanizer.Transformer.ToUpperCase.Transform(string)", span="4-4"];
m6_1 [cluster="Humanizer.Transformer.ToUpperCase.Transform(string)", color=green, community=0, file="ToUpperCase.cs", label="return input.ToUpper();", prediction=6, span="6-6"];
m6_2 [cluster="Humanizer.Transformer.ToUpperCase.Transform(string)", file="ToUpperCase.cs", label="Exit Humanizer.Transformer.ToUpperCase.Transform(string)", span="4-4"];
m6_3 [cluster="string.ToUpper()", file="ToUpperCase.cs", label="Entry string.ToUpper()", span="0-0"];
m7_11 [cluster="Humanizer.Tests.TransformersTests.TransformToUpperCase(string, string)", file="TransformersTests.cs", label="Entry Humanizer.Tests.TransformersTests.TransformToUpperCase(string, string)", span="40-40"];
m7_12 [cluster="Humanizer.Tests.TransformersTests.TransformToUpperCase(string, string)", color=green, community=0, file="TransformersTests.cs", label="Assert.Equal(expectedOutput, input.TransformWith(Transformers.ToUpperCase))", prediction=7, span="42-42"];
m7_13 [cluster="Humanizer.Tests.TransformersTests.TransformToUpperCase(string, string)", file="TransformersTests.cs", label="Exit Humanizer.Tests.TransformersTests.TransformToUpperCase(string, string)", span="40-40"];
m7_4 [cluster="Unk.Equal", file="TransformersTests.cs", label="Entry Unk.Equal", span=""];
m7_3 [cluster="string.TransformWith(params Humanizer.Transformer.IStringTransformer[])", file="TransformersTests.cs", label="Entry string.TransformWith(params Humanizer.Transformer.IStringTransformer[])", span="16-16"];
m7_5 [cluster="Humanizer.Tests.TransformersTests.TransformToLowerCase(string, string)", file="TransformersTests.cs", label="Entry Humanizer.Tests.TransformersTests.TransformToLowerCase(string, string)", span="22-22"];
m7_6 [cluster="Humanizer.Tests.TransformersTests.TransformToLowerCase(string, string)", color=green, community=0, file="TransformersTests.cs", label="Assert.Equal(expectedOutput, input.TransformWith(Transformers.ToLowerCase))", prediction=8, span="24-24"];
m7_7 [cluster="Humanizer.Tests.TransformersTests.TransformToLowerCase(string, string)", file="TransformersTests.cs", label="Exit Humanizer.Tests.TransformersTests.TransformToLowerCase(string, string)", span="22-22"];
m7_0 [cluster="Humanizer.Tests.TransformersTests.TransformToTitleCase(string, string)", file="TransformersTests.cs", label="Entry Humanizer.Tests.TransformersTests.TransformToTitleCase(string, string)", span="12-12"];
m7_1 [cluster="Humanizer.Tests.TransformersTests.TransformToTitleCase(string, string)", color=green, community=0, file="TransformersTests.cs", label="Assert.Equal(expectedOutput, input.TransformWith(Transformers.ToTitleCase))", prediction=9, span="14-14"];
m7_2 [cluster="Humanizer.Tests.TransformersTests.TransformToTitleCase(string, string)", file="TransformersTests.cs", label="Exit Humanizer.Tests.TransformersTests.TransformToTitleCase(string, string)", span="12-12"];
m7_8 [cluster="Humanizer.Tests.TransformersTests.TransformToSentenceCase(string, string)", file="TransformersTests.cs", label="Entry Humanizer.Tests.TransformersTests.TransformToSentenceCase(string, string)", span="31-31"];
m7_9 [cluster="Humanizer.Tests.TransformersTests.TransformToSentenceCase(string, string)", color=green, community=0, file="TransformersTests.cs", label="Assert.Equal(expectedOutput, input.TransformWith(Transformers.ToSentenceCase))", prediction=10, span="33-33"];
m7_10 [cluster="Humanizer.Tests.TransformersTests.TransformToSentenceCase(string, string)", file="TransformersTests.cs", label="Exit Humanizer.Tests.TransformersTests.TransformToSentenceCase(string, string)", span="31-31"];
m0_24 -> m0_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_24 -> m0_27  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_24 -> m0_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_24 -> m0_29  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_33 -> m0_35  [color=darkseagreen4, key=1, label="Humanizer.LetterCasing", style=dashed];
m0_6 -> m0_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_6 -> m0_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_7 -> m0_7  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_39 -> m0_41  [color=green, key=1, label="params IStringTransformer[]", style=dashed];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_0 -> m1_4  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_0 -> m1_15  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_0 -> m1_16  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_7 -> m1_9  [color=darkseagreen4, key=1, label=divided, style=dashed];
m1_12 -> m1_15  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_12 -> m1_16  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_5 -> m1_25  [color=darkseagreen4, key=1, label=word, style=dashed];
m1_6 -> m1_9  [color=darkseagreen4, key=1, label=m, style=dashed];
m1_10 -> m1_25  [color=darkseagreen4, key=1, label=word, style=dashed];
m1_11 -> m1_25  [color=darkseagreen4, key=1, label=word, style=dashed];
m1_14 -> m1_25  [color=darkseagreen4, key=1, label=word, style=dashed];
m1_30 -> m1_41  [color=darkseagreen4, key=1, label=word, style=dashed];
m1_30 -> m1_32  [color=darkseagreen4, key=1, label=word, style=dashed];
m1_30 -> m1_33  [color=darkseagreen4, key=1, label=word, style=dashed];
m1_30 -> m1_34  [color=darkseagreen4, key=1, label=word, style=dashed];
m1_30 -> m1_35  [color=darkseagreen4, key=1, label=word, style=dashed];
m1_31 -> m1_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_41 -> m1_41  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, string>", style=dashed];
m1_43 -> m1_4  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter", style=dashed];
m1_44 -> m1_41  [color=darkseagreen4, key=1, label=word, style=dashed];
m4_0 -> m4_2  [color=green, key=1, label=string, style=dashed];
m4_0 -> m4_3  [color=green, key=1, label=string, style=dashed];
}
