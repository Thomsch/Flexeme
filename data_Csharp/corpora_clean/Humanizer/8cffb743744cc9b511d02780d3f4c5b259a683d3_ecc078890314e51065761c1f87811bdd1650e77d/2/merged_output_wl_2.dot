digraph  {
m3_10 [cluster="System.IO.Path.GetDirectoryName(string)", file="CreatingTests.cs", label="Entry System.IO.Path.GetDirectoryName(string)", span="0-0"];
m3_12 [cluster="System.IO.Path.ChangeExtension(string, string)", file="CreatingTests.cs", label="Entry System.IO.Path.ChangeExtension(string, string)", span="0-0"];
m3_16 [cluster="Unk.CreatePublicApiForAssembly", file="CreatingTests.cs", label="Entry Unk.CreatePublicApiForAssembly", span=""];
m3_14 [cluster="ReaderParameters.cstr", file="CreatingTests.cs", label="Entry ReaderParameters.cstr", span=""];
m3_0 [cluster="Humanizer.Tests.ApiApprover.PublicApiApprovalTest.approve_public_api()", file="CreatingTests.cs", label="Entry Humanizer.Tests.ApiApprover.PublicApiApprovalTest.approve_public_api()", span="15-15"];
m3_1 [cluster="Humanizer.Tests.ApiApprover.PublicApiApprovalTest.approve_public_api()", color=green, community=0, file="CreatingTests.cs", label="0: var assemblyPath = typeof(StringHumanizeExtensions).Assembly.Location", span="17-17"];
m3_2 [cluster="Humanizer.Tests.ApiApprover.PublicApiApprovalTest.approve_public_api()", color=green, community=0, file="CreatingTests.cs", label="0: var assemblyResolver = new DefaultAssemblyResolver()", span="19-19"];
m3_3 [cluster="Humanizer.Tests.ApiApprover.PublicApiApprovalTest.approve_public_api()", color=green, community=0, file="CreatingTests.cs", label="0: assemblyResolver.AddSearchDirectory(Path.GetDirectoryName(assemblyPath))", span="20-20"];
m3_4 [cluster="Humanizer.Tests.ApiApprover.PublicApiApprovalTest.approve_public_api()", color=green, community=0, file="CreatingTests.cs", label="0: var readSymbols = File.Exists(Path.ChangeExtension(assemblyPath, ''.pdb''))", span="22-22"];
m3_5 [cluster="Humanizer.Tests.ApiApprover.PublicApiApprovalTest.approve_public_api()", file="CreatingTests.cs", label="var asm = AssemblyDefinition.ReadAssembly(assemblyPath, new ReaderParameters(ReadingMode.Deferred)\r\n            {\r\n                ReadSymbols = readSymbols,\r\n                AssemblyResolver = assemblyResolver\r\n            })", span="23-27"];
m3_6 [cluster="Humanizer.Tests.ApiApprover.PublicApiApprovalTest.approve_public_api()", file="CreatingTests.cs", label="var publicApi = PublicApiGenerator.CreatePublicApiForAssembly(asm)", span="29-29"];
m3_7 [cluster="Humanizer.Tests.ApiApprover.PublicApiApprovalTest.approve_public_api()", file="CreatingTests.cs", label="Approvals.Verify(publicApi)", span="30-30"];
m3_8 [cluster="Humanizer.Tests.ApiApprover.PublicApiApprovalTest.approve_public_api()", file="CreatingTests.cs", label="Exit Humanizer.Tests.ApiApprover.PublicApiApprovalTest.approve_public_api()", span="15-15"];
m3_17 [cluster="Unk.Verify", file="CreatingTests.cs", label="Entry Unk.Verify", span=""];
m3_11 [cluster="Unk.AddSearchDirectory", file="CreatingTests.cs", label="Entry Unk.AddSearchDirectory", span=""];
m3_13 [cluster="System.IO.File.Exists(string)", file="CreatingTests.cs", label="Entry System.IO.File.Exists(string)", span="0-0"];
m3_9 [cluster="DefaultAssemblyResolver.cstr", file="CreatingTests.cs", label="Entry DefaultAssemblyResolver.cstr", span=""];
m3_15 [cluster="Unk.ReadAssembly", file="CreatingTests.cs", label="Entry Unk.ReadAssembly", span=""];
m4_0 [cluster="Humanizer.Localisation.CzechSlovakFormatter.GetResourceKey(string, int)", file="CzechSlovakFormatter.cs", label="Entry Humanizer.Localisation.CzechSlovakFormatter.GetResourceKey(string, int)", span="6-6"];
m4_1 [cluster="Humanizer.Localisation.CzechSlovakFormatter.GetResourceKey(string, int)", file="CzechSlovakFormatter.cs", label="number > 1 && number < 5", span="8-8"];
m4_2 [cluster="Humanizer.Localisation.CzechSlovakFormatter.GetResourceKey(string, int)", file="CzechSlovakFormatter.cs", label="return resourceKey + PaucalPostfix;", span="9-9"];
m4_3 [cluster="Humanizer.Localisation.CzechSlovakFormatter.GetResourceKey(string, int)", file="CzechSlovakFormatter.cs", label="return resourceKey;", span="11-11"];
m4_4 [cluster="Humanizer.Localisation.CzechSlovakFormatter.GetResourceKey(string, int)", file="CzechSlovakFormatter.cs", label="Exit Humanizer.Localisation.CzechSlovakFormatter.GetResourceKey(string, int)", span="6-6"];
m5_43 [cluster="System.Math.Abs(int)", file="DateHumanize.cs", label="Entry System.Math.Abs(int)", span="0-0"];
m5_16 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?)", file="DateHumanize.cs", label="Entry Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?)", span="29-29"];
m5_17 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?)", color=green, community=0, file="DateHumanize.cs", label="0: precision.HasValue", span="31-31"];
m5_18 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?)", color=green, community=0, file="DateHumanize.cs", label="0: Configurator.DateTimeHumanizeStrategy = new PrecisionDateTimeStrategy(precision.Value)", span="32-32"];
m5_19 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?)", color=green, community=0, file="DateHumanize.cs", label="0: Configurator.DateTimeHumanizeStrategy = new DefaultDateTimeStrategy()", span="34-34"];
m5_20 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?)", file="DateHumanize.cs", label="var deltaFromNow = new TimeSpan()", span="36-36"];
m5_21 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?)", file="DateHumanize.cs", label="unit = Math.Abs(unit)", span="37-37"];
m5_22 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?)", file="DateHumanize.cs", label="tense == Tense.Past", span="39-39"];
m5_24 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?)", file="DateHumanize.cs", label=timeUnit, span="42-42"];
m5_37 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?)", file="DateHumanize.cs", label="VerifyWithCurrentDate(expectedString, deltaFromNow)", span="64-64"];
m5_38 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?)", file="DateHumanize.cs", label="VerifyWithDateInjection(expectedString, deltaFromNow)", span="65-65"];
m5_23 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?)", file="DateHumanize.cs", label="unit = -unit", span="40-40"];
m5_26 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?)", file="DateHumanize.cs", label="deltaFromNow = TimeSpan.FromSeconds(unit)", span="45-45"];
m5_28 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?)", file="DateHumanize.cs", label="deltaFromNow = TimeSpan.FromMinutes(unit)", span="48-48"];
m5_30 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?)", file="DateHumanize.cs", label="deltaFromNow = TimeSpan.FromHours(unit)", span="51-51"];
m5_32 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?)", file="DateHumanize.cs", label="deltaFromNow = TimeSpan.FromDays(unit)", span="54-54"];
m5_34 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?)", file="DateHumanize.cs", label="deltaFromNow = TimeSpan.FromDays(unit*31)", span="57-57"];
m5_36 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?)", file="DateHumanize.cs", label="deltaFromNow = TimeSpan.FromDays(unit*366)", span="60-60"];
m5_25 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?)", file="DateHumanize.cs", label="TimeUnit.Second", span="44-44"];
m5_27 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?)", file="DateHumanize.cs", label="TimeUnit.Minute", span="47-47"];
m5_29 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?)", file="DateHumanize.cs", label="TimeUnit.Hour", span="50-50"];
m5_31 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?)", file="DateHumanize.cs", label="TimeUnit.Day", span="53-53"];
m5_33 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?)", file="DateHumanize.cs", label="TimeUnit.Month", span="56-56"];
m5_35 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?)", file="DateHumanize.cs", label="TimeUnit.Year", span="59-59"];
m5_39 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?)", file="DateHumanize.cs", label="Exit Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?)", span="29-29"];
m5_0 [cluster="Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan)", file="DateHumanize.cs", label="Entry Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan)", span="10-10"];
m5_1 [cluster="Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan)", file="DateHumanize.cs", label="var utcNow = DateTime.UtcNow", span="12-12"];
m5_3 [cluster="Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan)", file="DateHumanize.cs", label="Assert.Equal(expectedString, utcNow.Add(deltaFromNow).Humanize(utcDate: true, dateToCompareAgainst: utcNow))", span="16-16"];
m5_4 [cluster="Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan)", file="DateHumanize.cs", label="Assert.Equal(expectedString, localNow.Add(deltaFromNow).Humanize(utcDate: false, dateToCompareAgainst: localNow))", span="17-17"];
m5_2 [cluster="Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan)", file="DateHumanize.cs", label="var localNow = DateTime.Now", span="13-13"];
m5_5 [cluster="Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan)", file="DateHumanize.cs", label="Exit Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan)", span="10-10"];
m5_6 [cluster="System.DateTime.Add(System.TimeSpan)", file="DateHumanize.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m5_7 [cluster="System.DateTime.Humanize(bool, System.DateTime?)", file="DateHumanize.cs", label="Entry System.DateTime.Humanize(bool, System.DateTime?)", span="17-17"];
m5_42 [cluster="System.TimeSpan.TimeSpan()", file="DateHumanize.cs", label="Entry System.TimeSpan.TimeSpan()", span="0-0"];
m5_45 [cluster="System.TimeSpan.FromMinutes(double)", file="DateHumanize.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m5_41 [cluster="Humanizer.DateTimeStrategy.DefaultDateTimeStrategy.DefaultDateTimeStrategy()", file="DateHumanize.cs", label="Entry Humanizer.DateTimeStrategy.DefaultDateTimeStrategy.DefaultDateTimeStrategy()", span="9-9"];
m5_9 [cluster="Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan)", file="DateHumanize.cs", label="Entry Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan)", span="20-20"];
m5_10 [cluster="Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan)", file="DateHumanize.cs", label="var utcNow = new DateTime(2013, 6, 20, 9, 58, 22, DateTimeKind.Utc)", span="22-22"];
m5_12 [cluster="Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan)", file="DateHumanize.cs", label="Assert.Equal(expectedString, utcNow.Add(deltaFromNow).Humanize(utcDate: true, dateToCompareAgainst: utcNow))", span="25-25"];
m5_13 [cluster="Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan)", file="DateHumanize.cs", label="Assert.Equal(expectedString, now.Add(deltaFromNow).Humanize(false, now))", span="26-26"];
m5_11 [cluster="Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan)", file="DateHumanize.cs", label="var now = new DateTime(2013, 6, 20, 11, 58, 22, DateTimeKind.Local)", span="23-23"];
m5_14 [cluster="Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan)", file="DateHumanize.cs", label="Exit Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan)", span="20-20"];
m5_8 [cluster="Unk.Equal", file="DateHumanize.cs", label="Entry Unk.Equal", span=""];
m5_15 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="DateHumanize.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m5_44 [cluster="System.TimeSpan.FromSeconds(double)", file="DateHumanize.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m5_46 [cluster="System.TimeSpan.FromHours(double)", file="DateHumanize.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m5_47 [cluster="System.TimeSpan.FromDays(double)", file="DateHumanize.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m5_40 [cluster="Humanizer.DateTimeStrategy.PrecisionDateTimeStrategy.PrecisionDateTimeStrategy(double)", file="DateHumanize.cs", label="Entry Humanizer.DateTimeStrategy.PrecisionDateTimeStrategy.PrecisionDateTimeStrategy(double)", span="10-10"];
m6_6 [cluster="int.ToString(System.IFormatProvider)", file="DateHumanizeExtensions.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m6_0 [cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.DefaultNumberToWordsConverter(System.Globalization.CultureInfo)", file="DateHumanizeExtensions.cs", label="Entry Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.DefaultNumberToWordsConverter(System.Globalization.CultureInfo)", span="12-12"];
m6_1 [cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.DefaultNumberToWordsConverter(System.Globalization.CultureInfo)", file="DateHumanizeExtensions.cs", label="_culture = culture", span="14-14"];
m6_2 [cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.DefaultNumberToWordsConverter(System.Globalization.CultureInfo)", file="DateHumanizeExtensions.cs", label="Exit Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.DefaultNumberToWordsConverter(System.Globalization.CultureInfo)", span="12-12"];
m6_3 [cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.Convert(int)", file="DateHumanizeExtensions.cs", label="Entry Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.Convert(int)", span="22-22"];
m6_4 [cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.Convert(int)", color=red, community=0, file="DateHumanizeExtensions.cs", label="0: return number.ToString(_culture);", span="24-24"];
m6_5 [cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.Convert(int)", file="DateHumanizeExtensions.cs", label="Exit Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.Convert(int)", span="22-22"];
m6_7 [cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.ConvertToOrdinal(int)", file="DateHumanizeExtensions.cs", label="Entry Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.ConvertToOrdinal(int)", span="32-32"];
m6_8 [cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.ConvertToOrdinal(int)", color=red, community=0, file="DateHumanizeExtensions.cs", label="0: return number.ToString(_culture);", span="34-34"];
m6_9 [cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.ConvertToOrdinal(int)", file="DateHumanizeExtensions.cs", label="Exit Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.ConvertToOrdinal(int)", span="32-32"];
m6_10 [file="DateHumanizeExtensions.cs", label="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter", span=""];
m9_72 [cluster="Humanizer.Inflections.Vocabulary.Vocabulary()", file="DateHumanizeTests.ru-RU.cs", label="Entry Humanizer.Inflections.Vocabulary.Vocabulary()", span="13-13"];
m9_75 [cluster="Humanizer.Inflections.Vocabulary.AddIrregular(string, string)", file="DateHumanizeTests.ru-RU.cs", label="Entry Humanizer.Inflections.Vocabulary.AddIrregular(string, string)", span="26-26"];
m9_76 [cluster="Humanizer.Inflections.Vocabulary.AddUncountable(string)", file="DateHumanizeTests.ru-RU.cs", label="Entry Humanizer.Inflections.Vocabulary.AddUncountable(string)", span="36-36"];
m9_73 [cluster="Humanizer.Inflections.Vocabulary.AddPlural(string, string)", file="DateHumanizeTests.ru-RU.cs", label="Entry Humanizer.Inflections.Vocabulary.AddPlural(string, string)", span="46-46"];
m9_0 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="DateHumanizeTests.ru-RU.cs", label="Entry Humanizer.Inflections.Vocabularies.BuildDefault()", span="25-25"];
m9_1 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default = new Vocabulary()", span="27-27"];
m9_2 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddPlural(''$'', ''s'')", span="29-29"];
m9_3 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddPlural(''s$'', ''s'')", span="30-30"];
m9_4 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddPlural(''(ax|test)is$'', ''$1es'')", span="31-31"];
m9_5 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddPlural(''(octop|vir|alumn|fung)us$'', ''$1i'')", span="32-32"];
m9_6 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddPlural(''(alias|status)$'', ''$1es'')", span="33-33"];
m9_7 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddPlural(''(bu)s$'', ''$1ses'')", span="34-34"];
m9_8 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddPlural(''(buffal|tomat|volcan)o$'', ''$1oes'')", span="35-35"];
m9_9 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddPlural(''([ti])um$'', ''$1a'')", span="36-36"];
m9_10 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddPlural(''sis$'', ''ses'')", span="37-37"];
m9_11 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddPlural(''(?:([^f])fe|([lr])f)$'', ''$1$2ves'')", span="38-38"];
m9_12 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddPlural(''(hive)$'', ''$1s'')", span="39-39"];
m9_13 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddPlural(''([^aeiouy]|qu)y$'', ''$1ies'')", span="40-40"];
m9_14 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddPlural(''(x|ch|ss|sh)$'', ''$1es'')", span="41-41"];
m9_15 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddPlural(''(matr|vert|ind)ix|ex$'', ''$1ices'')", span="42-42"];
m9_16 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddPlural(''([m|l])ouse$'', ''$1ice'')", span="43-43"];
m9_17 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddPlural(''^(ox)$'', ''$1en'')", span="44-44"];
m9_18 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddPlural(''(quiz)$'', ''$1zes'')", span="45-45"];
m9_19 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddPlural(''(campus)$'', ''$1es'')", span="46-46"];
m9_20 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddPlural(''^is$'', ''are'')", span="47-47"];
m9_21 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddSingular(''s$'', '''')", span="49-49"];
m9_22 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddSingular(''(n)ews$'', ''$1ews'')", span="50-50"];
m9_23 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddSingular(''([ti])a$'', ''$1um'')", span="51-51"];
m9_24 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddSingular(''((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$'', ''$1$2sis'')", span="52-52"];
m9_25 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddSingular(''(^analy)ses$'', ''$1sis'')", span="53-53"];
m9_26 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddSingular(''([^f])ves$'', ''$1fe'')", span="54-54"];
m9_27 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddSingular(''(hive)s$'', ''$1'')", span="55-55"];
m9_28 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddSingular(''(tive)s$'', ''$1'')", span="56-56"];
m9_29 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddSingular(''([lr])ves$'', ''$1f'')", span="57-57"];
m9_30 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddSingular(''([^aeiouy]|qu)ies$'', ''$1y'')", span="58-58"];
m9_31 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddSingular(''(s)eries$'', ''$1eries'')", span="59-59"];
m9_32 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddSingular(''(m)ovies$'', ''$1ovie'')", span="60-60"];
m9_33 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddSingular(''(x|ch|ss|sh)es$'', ''$1'')", span="61-61"];
m9_34 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddSingular(''([m|l])ice$'', ''$1ouse'')", span="62-62"];
m9_35 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddSingular(''(bus)es$'', ''$1'')", span="63-63"];
m9_36 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddSingular(''(o)es$'', ''$1'')", span="64-64"];
m9_37 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddSingular(''(shoe)s$'', ''$1'')", span="65-65"];
m9_38 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddSingular(''(cris|ax|test)es$'', ''$1is'')", span="66-66"];
m9_39 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddSingular(''(octop|vir|alumn|fung)i$'', ''$1us'')", span="67-67"];
m9_40 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddSingular(''(alias|status)es$'', ''$1'')", span="68-68"];
m9_41 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddSingular(''^(ox)en'', ''$1'')", span="69-69"];
m9_42 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddSingular(''(vert|ind)ices$'', ''$1ex'')", span="70-70"];
m9_43 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddSingular(''(matr)ices$'', ''$1ix'')", span="71-71"];
m9_44 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddSingular(''(quiz)zes$'', ''$1'')", span="72-72"];
m9_45 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddSingular(''(campus)es$'', ''$1'')", span="73-73"];
m9_46 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddSingular(''^are$'', ''is'')", span="74-74"];
m9_47 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddIrregular(''person'', ''people'')", span="76-76"];
m9_48 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddIrregular(''man'', ''men'')", span="77-77"];
m9_49 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddIrregular(''child'', ''children'')", span="78-78"];
m9_50 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddIrregular(''sex'', ''sexes'')", span="79-79"];
m9_51 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddIrregular(''move'', ''moves'')", span="80-80"];
m9_52 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddIrregular(''goose'', ''geese'')", span="81-81"];
m9_53 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddIrregular(''alumna'', ''alumnae'')", span="82-82"];
m9_54 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddIrregular(''criterion'', ''criteria'')", span="83-83"];
m9_55 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddIrregular(''wave'', ''waves'')", span="84-84"];
m9_56 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddUncountable(''equipment'')", span="86-86"];
m9_57 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddUncountable(''information'')", span="87-87"];
m9_58 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddUncountable(''rice'')", span="88-88"];
m9_59 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddUncountable(''money'')", span="89-89"];
m9_60 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddUncountable(''species'')", span="90-90"];
m9_61 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddUncountable(''series'')", span="91-91"];
m9_62 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddUncountable(''fish'')", span="92-92"];
m9_63 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddUncountable(''sheep'')", span="93-93"];
m9_64 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddUncountable(''deer'')", span="94-94"];
m9_65 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddUncountable(''aircraft'')", span="95-95"];
m9_66 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddUncountable(''oz'')", span="96-96"];
m9_67 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddUncountable(''tsp'')", span="97-97"];
m9_68 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddUncountable(''tbsp'')", span="98-98"];
m9_69 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddUncountable(''ml'')", span="99-99"];
m9_70 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=red, community=0, file="DateHumanizeTests.ru-RU.cs", label="0: _default.AddUncountable(''l'')", span="100-100"];
m9_71 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="DateHumanizeTests.ru-RU.cs", label="Exit Humanizer.Inflections.Vocabularies.BuildDefault()", span="25-25"];
m9_74 [cluster="Humanizer.Inflections.Vocabulary.AddSingular(string, string)", file="DateHumanizeTests.ru-RU.cs", label="Entry Humanizer.Inflections.Vocabulary.AddSingular(string, string)", span="56-56"];
m12_71 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="210-210"];
m12_72 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="DefaultFormatter.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(NameInfo.EmptyName) }", span="213-213"];
m12_73 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="DefaultFormatter.cs", label="var result = InvokeBuild<Options_With_Sequence_And_Only_Min_Constraint_For_Value>(\r\n                new string[] { })", span="216-217"];
m12_74 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="DefaultFormatter.cs", label="((NotParsed<Options_With_Sequence_And_Only_Min_Constraint_For_Value>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="220-220"];
m12_75 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="210-210"];
m12_295 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Can_define_options_on_interface_properties(string[], string)", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Can_define_options_on_interface_properties(string[], string)", span="853-853"];
m12_296 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Can_define_options_on_interface_properties(string[], string)", file="DefaultFormatter.cs", label="var result = InvokeBuild<Options_With_Interface>(\r\n                arguments)", span="856-857"];
m12_297 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Can_define_options_on_interface_properties(string[], string)", file="DefaultFormatter.cs", label="expected.ShouldBeEquivalentTo(((Parsed<Options_With_Interface>)result).Value.InputFile)", span="860-860"];
m12_298 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Can_define_options_on_interface_properties(string[], string)", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Can_define_options_on_interface_properties(string[], string)", span="853-853"];
m12_342 [cluster="System.Uri.Uri(string)", file="DefaultFormatter.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m12_184 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", span="564-564"];
m12_185 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="DefaultFormatter.cs", label="var expectedResult = new[] { new UnknownOptionError(''z'') }", span="567-567"];
m12_186 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="DefaultFormatter.cs", label="var result = InvokeBuild<Simple_Options>(\r\n                new[] { ''-z'', ''-x'' })", span="570-571"];
m12_187 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="DefaultFormatter.cs", label="((NotParsed<Simple_Options>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="574-574"];
m12_188 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", span="564-564"];
m12_233 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_constraint_set_to_zero_throws_exception()", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_constraint_set_to_zero_throws_exception()", span="747-747"];
m12_234 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_constraint_set_to_zero_throws_exception()", file="DefaultFormatter.cs", label="Action test = () => InvokeBuild<Options_With_Min_Set_To_Zero>(\r\n                new string[] { })", span="750-751"];
m12_235 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_constraint_set_to_zero_throws_exception()", file="DefaultFormatter.cs", label="Assert.Throws<InvalidOperationException>(test)", span="754-754"];
m12_236 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_constraint_set_to_zero_throws_exception()", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_constraint_set_to_zero_throws_exception()", span="747-747"];
m12_70 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="DefaultFormatter.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m12_317 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_mutable()", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_mutable()", span="921-921"];
m12_318 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_mutable()", file="DefaultFormatter.cs", label="var expectedResult = new Simple_Options { StringValue=''strval0'', IntSequence=new[] { 9, 7, 8 }, BoolValue = true,  LongValue = 9876543210L }", span="924-924"];
m12_319 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_mutable()", file="DefaultFormatter.cs", label="var result = InvokeBuild<Simple_Options>(\r\n                new[] { ''--stringvalue=strval0'', ''-i'', ''9'', ''7'', ''8'', ''-x'', ''9876543210'' })", span="927-928"];
m12_320 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_mutable()", file="DefaultFormatter.cs", label="expectedResult.ShouldBeEquivalentTo(((Parsed<Simple_Options>)result).Value)", span="931-931"];
m12_321 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_mutable()", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_mutable()", span="921-921"];
m12_76 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="DefaultFormatter.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="371-371"];
m12_207 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="648-648"];
m12_208 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="DefaultFormatter.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(NameInfo.EmptyName) }", span="651-651"];
m12_209 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="DefaultFormatter.cs", label="var result = InvokeBuild<Options_With_Sequence_Having_Both_Min_And_Max_Equal>(\r\n                new[] { ''one'', ''two'', ''this-is-too-much'' })", span="654-655"];
m12_210 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="DefaultFormatter.cs", label="((NotParsed<Options_With_Sequence_Having_Both_Min_And_Max_Equal>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="658-658"];
m12_211 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="648-648"];
m12_91 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_ignore_case(string[], CommandLine.Tests.Fakes.Colors)", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_ignore_case(string[], CommandLine.Tests.Fakes.Colors)", span="285-285"];
m12_92 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_ignore_case(string[], CommandLine.Tests.Fakes.Colors)", file="DefaultFormatter.cs", label="var result = InvokeBuildEnumValuesCaseIgnore<Simple_Options_With_Enum>(\r\n                arguments)", span="290-291"];
m12_93 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_ignore_case(string[], CommandLine.Tests.Fakes.Colors)", file="DefaultFormatter.cs", label="expected.ShouldBeEquivalentTo(((Parsed<Simple_Options_With_Enum>)result).Value.Colors)", span="294-294"];
m12_94 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_ignore_case(string[], CommandLine.Tests.Fakes.Colors)", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_ignore_case(string[], CommandLine.Tests.Fakes.Colors)", span="285-285"];
m12_162 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", span="498-498"];
m12_163 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="DefaultFormatter.cs", label="var expectedResult = new[]\r\n            {\r\n                new MissingRequiredOptionError(new NameInfo('''', ''ftpurl'')),\r\n                new MissingRequiredOptionError(new NameInfo('''', ''weburl''))\r\n            }", span="500-504"];
m12_164 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="DefaultFormatter.cs", label="var result = InvokeBuild<Options_With_Required_Set_To_True_Within_Same_Set>(\r\n                new string[] { })", span="506-507"];
m12_165 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="DefaultFormatter.cs", label="((NotParsed<Options_With_Required_Set_To_True_Within_Same_Set>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="510-510"];
m12_166 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", span="498-498"];
m12_267 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_generates_RepeatedOptionError(string[], int)", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_generates_RepeatedOptionError(string[], int)", span="804-804"];
m12_268 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_generates_RepeatedOptionError(string[], int)", file="DefaultFormatter.cs", label="var result = InvokeBuild<Simple_Options>(\r\n                arguments)", span="807-808"];
m12_269 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_generates_RepeatedOptionError(string[], int)", file="DefaultFormatter.cs", label="((NotParsed<Simple_Options>)result).Errors.Should().HaveCount(x => x == expected)", span="811-811"];
m12_270 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_generates_RepeatedOptionError(string[], int)", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_generates_RepeatedOptionError(string[], int)", span="804-804"];
m12_117 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", span="375-375"];
m12_118 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="DefaultFormatter.cs", label="var result = InvokeBuild<Options_With_Sequence_Without_Range_For_Value>(\r\n                arguments)", span="380-381"];
m12_119 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="DefaultFormatter.cs", label="expected.ShouldBeEquivalentTo(((Parsed<Options_With_Sequence_Without_Range_For_Value>)result).Value.LongSequence)", span="384-384"];
m12_120 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", span="375-375"];
m12_13 [cluster="CommandLine.Core.Tokenizer.ConfigureTokenizer(System.StringComparer, bool, bool)", file="DefaultFormatter.cs", label="Entry CommandLine.Core.Tokenizer.ConfigureTokenizer(System.StringComparer, bool, bool)", span="110-110"];
m12_156 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", span="482-482"];
m12_157 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="DefaultFormatter.cs", label="var expectedResult = new Options_With_Required_Set_To_True_Within_Same_Set {\r\n                FtpUrl = ''str1'',\r\n                WebUrl = ''str2''\r\n            }", span="484-487"];
m12_158 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="DefaultFormatter.cs", label="var result = InvokeBuild<Options_With_Required_Set_To_True_Within_Same_Set>(\r\n                new[] { ''--ftpurl'', ''str1'', ''--weburl'', ''str2'' })", span="489-490"];
m12_159 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="DefaultFormatter.cs", label="expectedResult.ShouldBeEquivalentTo(((Parsed<Options_With_Required_Set_To_True_Within_Same_Set>)result).Value)", span="493-493"];
m12_160 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", span="482-482"];
m12_198 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", span="613-613"];
m12_199 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="DefaultFormatter.cs", label="var expectedResult = new[] { new MissingRequiredOptionError(NameInfo.EmptyName) }", span="616-616"];
m12_200 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="DefaultFormatter.cs", label="var result = InvokeBuild<Options_With_Required_Set_To_True_For_Values>(\r\n                new string[] { })", span="619-620"];
m12_201 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="DefaultFormatter.cs", label="((NotParsed<Options_With_Required_Set_To_True_For_Values>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="623-623"];
m12_202 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", span="613-613"];
m12_149 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="DefaultFormatter.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="18-18"];
m12_281 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_with_long_options_generates_RepeatedOptionError(string[], int)", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_with_long_options_generates_RepeatedOptionError(string[], int)", span="828-828"];
m12_282 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_with_long_options_generates_RepeatedOptionError(string[], int)", file="DefaultFormatter.cs", label="var result = InvokeBuild<Simple_Options>(\r\n                arguments)", span="831-832"];
m12_283 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_with_long_options_generates_RepeatedOptionError(string[], int)", file="DefaultFormatter.cs", label="((NotParsed<Simple_Options>)result).Errors.Should().HaveCount(x => x == expected)", span="835-835"];
m12_284 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_with_long_options_generates_RepeatedOptionError(string[], int)", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_with_long_options_generates_RepeatedOptionError(string[], int)", span="828-828"];
m12_60 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", span="179-179"];
m12_61 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="DefaultFormatter.cs", label="var result = InvokeBuild<Options_With_Sequence_And_Only_Max_Constraint>(\r\n                arguments)", span="184-185"];
m12_62 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="DefaultFormatter.cs", label="((Parsed<Options_With_Sequence_And_Only_Max_Constraint>)result).Value.StringSequence.ShouldBeEquivalentTo(expected)", span="188-188"];
m12_63 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", span="179-179"];
m12_36 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="DefaultFormatter.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m12_100 [cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", file="DefaultFormatter.cs", label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="360-360"];
m12_263 [cluster="Unk.HaveCount", file="DefaultFormatter.cs", label="Entry Unk.HaveCount", span=""];
m12_87 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", span="264-264"];
m12_88 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="DefaultFormatter.cs", label="var result = InvokeBuild<Simple_Options_With_Enum>(\r\n                arguments)", span="269-270"];
m12_89 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="DefaultFormatter.cs", label="expected.ShouldBeEquivalentTo(((Parsed<Simple_Options_With_Enum>)result).Value.Colors)", span="273-273"];
m12_90 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", span="264-264"];
m12_5 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, bool, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="DefaultFormatter.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, bool, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="18-18"];
m12_183 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="DefaultFormatter.cs", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="316-316"];
m12_40 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", span="80-80"];
m12_41 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="DefaultFormatter.cs", label="var result = InvokeBuild<Simple_Options>(\r\n                arguments)", span="85-86"];
m12_42 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="DefaultFormatter.cs", label="((Parsed<Simple_Options>)result).Value.LongValue.ShouldBeEquivalentTo(expected)", span="89-89"];
m12_43 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", span="80-80"];
m12_313 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.Options_With_Scalar_Value_And_Adjacent_SequenceString)", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.Options_With_Scalar_Value_And_Adjacent_SequenceString)", span="906-906"];
m12_314 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.Options_With_Scalar_Value_And_Adjacent_SequenceString)", file="DefaultFormatter.cs", label="var result = InvokeBuild<Options_With_Scalar_Value_And_Adjacent_SequenceString>(\r\n                arguments)", span="911-912"];
m12_315 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.Options_With_Scalar_Value_And_Adjacent_SequenceString)", file="DefaultFormatter.cs", label="expected.ShouldBeEquivalentTo(((Parsed<Options_With_Scalar_Value_And_Adjacent_SequenceString>)result).Value)", span="915-915"];
m12_316 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.Options_With_Scalar_Value_And_Adjacent_SequenceString)", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.Options_With_Scalar_Value_And_Adjacent_SequenceString)", span="906-906"];
m12_216 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", span="687-687"];
m12_217 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", file="DefaultFormatter.cs", label="var result = InvokeBuild<Options_With_Nullables>(\r\n                arguments)", span="692-693"];
m12_218 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", file="DefaultFormatter.cs", label="expected.ShouldBeEquivalentTo(((Parsed<Options_With_Nullables>)result).Value.NullableLong)", span="696-696"];
m12_219 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", span="687-687"];
m12_332 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_immutable_instance(string[], CommandLine.Tests.Fakes.Immutable_Simple_Options)", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_immutable_instance(string[], CommandLine.Tests.Fakes.Immutable_Simple_Options)", span="956-956"];
m12_333 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_immutable_instance(string[], CommandLine.Tests.Fakes.Immutable_Simple_Options)", file="DefaultFormatter.cs", label="var result = InvokeBuildImmutable<Immutable_Simple_Options>(\r\n                arguments)", span="961-962"];
m12_334 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_immutable_instance(string[], CommandLine.Tests.Fakes.Immutable_Simple_Options)", file="DefaultFormatter.cs", label="expected.ShouldBeEquivalentTo(((Parsed<Immutable_Simple_Options>)result).Value)", span="965-965"];
m12_335 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_immutable_instance(string[], CommandLine.Tests.Fakes.Immutable_Simple_Options)", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_immutable_instance(string[], CommandLine.Tests.Fakes.Immutable_Simple_Options)", span="956-956"];
m12_241 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Max_constraint_set_to_zero_throws_exception()", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Max_constraint_set_to_zero_throws_exception()", span="758-758"];
m12_242 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Max_constraint_set_to_zero_throws_exception()", file="DefaultFormatter.cs", label="Action test = () => InvokeBuild<Options_With_Max_Set_To_Zero>(\r\n                new string[] { })", span="761-762"];
m12_243 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Max_constraint_set_to_zero_throws_exception()", file="DefaultFormatter.cs", label="Assert.Throws<InvalidOperationException>(test)", span="765-765"];
m12_244 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Max_constraint_set_to_zero_throws_exception()", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Max_constraint_set_to_zero_throws_exception()", span="758-758"];
m12_101 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", span="316-316"];
m12_102 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="DefaultFormatter.cs", label="var expectedResult = new[] { new BadFormatConversionError(new NameInfo('''', ''colors'')) }", span="319-319"];
m12_103 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="DefaultFormatter.cs", label="var result = InvokeBuild<Simple_Options_With_Enum>(\r\n                new[] { ''--colors'', ''Yellow'' })", span="322-323"];
m12_104 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="DefaultFormatter.cs", label="((NotParsed<Simple_Options_With_Enum>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="326-326"];
m12_105 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", span="316-316"];
m12_220 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", span="705-705"];
m12_221 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="DefaultFormatter.cs", label="var result = InvokeBuild<Options_With_FSharpOption>(\r\n                arguments)", span="710-711"];
m12_223 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="DefaultFormatter.cs", label="expectedValue.ShouldBeEquivalentTo(((Parsed<Options_With_FSharpOption>)result).Value.FileName.Value)", span="716-716"];
m12_224 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="DefaultFormatter.cs", label="expectedSome.ShouldBeEquivalentTo(FSharpOption<string>.get_IsSome(((Parsed<Options_With_FSharpOption>)result).Value.FileName))", span="718-718"];
m12_222 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="DefaultFormatter.cs", label="((Parsed<Options_With_FSharpOption>)result).Value.FileName != null", span="714-714"];
m12_225 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", span="705-705"];
m12_24 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.InvokeBuildImmutable<T>(string[])", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.InvokeBuildImmutable<T>(string[])", span="47-47"];
m12_25 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.InvokeBuildImmutable<T>(string[])", file="DefaultFormatter.cs", label="return InstanceBuilder.Build(\r\n                Maybe.Nothing<Func<T>>(),\r\n                (args, optionSpecs) => Tokenizer.ConfigureTokenizer(StringComparer.Ordinal, false, false)(args, optionSpecs),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                false,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>());", span="49-56"];
m12_26 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.InvokeBuildImmutable<T>(string[])", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.InvokeBuildImmutable<T>(string[])", span="47-47"];
m12_194 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", span="598-598"];
m12_195 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="DefaultFormatter.cs", label="var result = InvokeBuild<Simple_Options>(\r\n                arguments)", span="603-604"];
m12_196 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="DefaultFormatter.cs", label="((Parsed<Simple_Options>)result).Value.StringValue.ShouldBeEquivalentTo(expected)", span="607-607"];
m12_197 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", span="598-598"];
m12_106 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", span="332-332"];
m12_107 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="DefaultFormatter.cs", label="var expectedResult = new[] { new BadFormatConversionError(new NameInfo('''', ''colors'')) }", span="335-335"];
m12_108 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="DefaultFormatter.cs", label="var result = InvokeBuild<Simple_Options_With_Enum>(\r\n                new[] { ''--colors'', ''RED'' })", span="338-339"];
m12_109 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="DefaultFormatter.cs", label="((NotParsed<Simple_Options_With_Enum>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="342-342"];
m12_110 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", span="332-332"];
m12_3 [cluster="CSharpx.Maybe.Just<T>(T)", file="DefaultFormatter.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124"];
m12_125 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", span="413-413"];
m12_126 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="DefaultFormatter.cs", label="var result = InvokeBuild<Options_With_Sequence_Having_Separator_Set>(\r\n                arguments)", span="418-419"];
m12_127 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="DefaultFormatter.cs", label="expected.ShouldBeEquivalentTo(((Parsed<Options_With_Sequence_Having_Separator_Set>)result).Value.StringSequence)", span="422-422"];
m12_128 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", span="413-413"];
m12_95 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", span="300-300"];
m12_96 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="DefaultFormatter.cs", label="var expectedResult = new[] { new BadFormatConversionError(new NameInfo('''', ''colors'')) }", span="303-303"];
m12_97 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="DefaultFormatter.cs", label="var result = InvokeBuild<Simple_Options_With_Enum>(\r\n                new[] { ''--colors'', ''3'' })", span="306-307"];
m12_98 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="DefaultFormatter.cs", label="((NotParsed<Simple_Options_With_Enum>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="310-310"];
m12_99 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", span="300-300"];
m12_82 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="242-242"];
m12_83 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="DefaultFormatter.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(NameInfo.EmptyName) }", span="245-245"];
m12_84 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="DefaultFormatter.cs", label="var result = InvokeBuild<Options_With_Sequence_And_Only_Max_Constraint_For_Value>(\r\n                new[] { ''one'', ''two'', ''three'', ''this-is-too-much'' })", span="248-249"];
m12_85 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="DefaultFormatter.cs", label="((NotParsed<Options_With_Sequence_And_Only_Max_Constraint_For_Value>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="252-252"];
m12_86 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="242-242"];
m12_56 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", span="160-160"];
m12_57 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="DefaultFormatter.cs", label="var result = InvokeBuild<Options_With_Sequence_And_Only_Min_Constraint>(\r\n                arguments)", span="165-166"];
m12_58 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="DefaultFormatter.cs", label="((Parsed<Options_With_Sequence_And_Only_Min_Constraint>)result).Value.StringSequence.ShouldBeEquivalentTo(expected)", span="169-169"];
m12_59 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", span="160-160"];
m12_299 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", span="871-871"];
m12_300 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", file="DefaultFormatter.cs", label="var result = InvokeBuild<Options_With_Two_Option_Required_Set_To_True_And_Two_Sets>(\r\n                arguments)", span="874-875"];
m12_301 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", file="DefaultFormatter.cs", label="type == ParserResultType.NotParsed", span="878-878"];
m12_302 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", file="DefaultFormatter.cs", label="((NotParsed<Options_With_Two_Option_Required_Set_To_True_And_Two_Sets>)result).Errors.Should().HaveCount(x => x == expected)", span="880-880"];
m12_303 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", file="DefaultFormatter.cs", label="type == ParserResultType.Parsed", span="882-882"];
m12_304 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", file="DefaultFormatter.cs", label="result.Should().BeOfType<Parsed<Options_With_Two_Option_Required_Set_To_True_And_Two_Sets>>()", span="884-884"];
m12_305 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", span="871-871"];
m12_145 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>)", file="DefaultFormatter.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>)", span="14-14"];
m12_344 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_with_dashes_except_in_beginning(string[], string)", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_with_dashes_except_in_beginning(string[], string)", span="995-995"];
m12_345 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_with_dashes_except_in_beginning(string[], string)", file="DefaultFormatter.cs", label="var result = InvokeBuild<Simple_Options>(\r\n                arguments)", span="1000-1001"];
m12_346 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_with_dashes_except_in_beginning(string[], string)", file="DefaultFormatter.cs", label="expected.ShouldBeEquivalentTo(((Parsed<Simple_Options>)result).Value.StringValue)", span="1004-1004"];
m12_347 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_with_dashes_except_in_beginning(string[], string)", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_with_dashes_except_in_beginning(string[], string)", span="995-995"];
m12_329 [cluster="lambda expression", file="DefaultFormatter.cs", label="Entry lambda expression", span="951-951"];
m12_6 [cluster="lambda expression", file="DefaultFormatter.cs", label="Entry lambda expression", span="25-25"];
m12_10 [cluster="lambda expression", file="DefaultFormatter.cs", label="Entry lambda expression", span="26-26"];
m12_7 [cluster="lambda expression", file="DefaultFormatter.cs", label="new T()", span="25-25"];
m12_8 [cluster="lambda expression", file="DefaultFormatter.cs", label="Exit lambda expression", span="25-25"];
m12_11 [cluster="lambda expression", file="DefaultFormatter.cs", label="Tokenizer.ConfigureTokenizer(StringComparer.Ordinal, false, false)(args, optionSpecs)", span="26-26"];
m12_12 [cluster="lambda expression", file="DefaultFormatter.cs", label="Exit lambda expression", span="26-26"];
m12_18 [cluster="lambda expression", file="DefaultFormatter.cs", label="Entry lambda expression", span="38-38"];
m12_21 [cluster="lambda expression", file="DefaultFormatter.cs", label="Entry lambda expression", span="39-39"];
m12_19 [cluster="lambda expression", file="DefaultFormatter.cs", label="new T()", span="38-38"];
m12_20 [cluster="lambda expression", file="DefaultFormatter.cs", label="Exit lambda expression", span="38-38"];
m12_22 [cluster="lambda expression", file="DefaultFormatter.cs", label="Tokenizer.ConfigureTokenizer(StringComparer.Ordinal, false, false)(args, optionSpecs)", span="39-39"];
m12_23 [cluster="lambda expression", file="DefaultFormatter.cs", label="Exit lambda expression", span="39-39"];
m12_28 [cluster="lambda expression", file="DefaultFormatter.cs", label="Entry lambda expression", span="51-51"];
m12_29 [cluster="lambda expression", file="DefaultFormatter.cs", label="Tokenizer.ConfigureTokenizer(StringComparer.Ordinal, false, false)(args, optionSpecs)", span="51-51"];
m12_30 [cluster="lambda expression", file="DefaultFormatter.cs", label="Exit lambda expression", span="51-51"];
m12_135 [cluster="lambda expression", file="DefaultFormatter.cs", label="Entry lambda expression", span="445-445"];
m12_138 [cluster="lambda expression", file="DefaultFormatter.cs", label="Entry lambda expression", span="446-448"];
m12_136 [cluster="lambda expression", file="DefaultFormatter.cs", label="new Simple_Options_With_Values()", span="445-445"];
m12_137 [cluster="lambda expression", file="DefaultFormatter.cs", label="Exit lambda expression", span="445-445"];
m12_139 [cluster="lambda expression", file="DefaultFormatter.cs", label="Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)))", span="447-448"];
m12_143 [cluster="lambda expression", file="DefaultFormatter.cs", label="Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))", span="448-448"];
m12_147 [cluster="lambda expression", file="DefaultFormatter.cs", label="NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)", span="448-448"];
m12_140 [cluster="lambda expression", file="DefaultFormatter.cs", label="Exit lambda expression", span="446-448"];
m12_142 [cluster="lambda expression", file="DefaultFormatter.cs", label="Entry lambda expression", span="448-448"];
m12_144 [cluster="lambda expression", file="DefaultFormatter.cs", label="Exit lambda expression", span="448-448"];
m12_146 [cluster="lambda expression", file="DefaultFormatter.cs", label="Entry lambda expression", span="448-448"];
m12_148 [cluster="lambda expression", file="DefaultFormatter.cs", label="Exit lambda expression", span="448-448"];
m12_238 [cluster="lambda expression", file="DefaultFormatter.cs", label="Entry lambda expression", span="750-751"];
m12_239 [cluster="lambda expression", file="DefaultFormatter.cs", label="InvokeBuild<Options_With_Min_Set_To_Zero>(\r\n                new string[] { })", span="750-751"];
m12_240 [cluster="lambda expression", file="DefaultFormatter.cs", label="Exit lambda expression", span="750-751"];
m12_245 [cluster="lambda expression", file="DefaultFormatter.cs", label="Entry lambda expression", span="761-762"];
m12_246 [cluster="lambda expression", file="DefaultFormatter.cs", label="InvokeBuild<Options_With_Max_Set_To_Zero>(\r\n                new string[] { })", span="761-762"];
m12_247 [cluster="lambda expression", file="DefaultFormatter.cs", label="Exit lambda expression", span="761-762"];
m12_252 [cluster="lambda expression", file="DefaultFormatter.cs", label="Entry lambda expression", span="772-773"];
m12_253 [cluster="lambda expression", file="DefaultFormatter.cs", label="InvokeBuild<Options_With_Both_Min_And_Max_Set_To_Zero>(\r\n                new string[] { })", span="772-773"];
m12_254 [cluster="lambda expression", file="DefaultFormatter.cs", label="Exit lambda expression", span="772-773"];
m12_265 [cluster="lambda expression", file="DefaultFormatter.cs", label="x == expected", span="794-794"];
m12_264 [cluster="lambda expression", file="DefaultFormatter.cs", label="Entry lambda expression", span="794-794"];
m12_266 [cluster="lambda expression", file="DefaultFormatter.cs", label="Exit lambda expression", span="794-794"];
m12_272 [cluster="lambda expression", file="DefaultFormatter.cs", label="x == expected", span="811-811"];
m12_271 [cluster="lambda expression", file="DefaultFormatter.cs", label="Entry lambda expression", span="811-811"];
m12_273 [cluster="lambda expression", file="DefaultFormatter.cs", label="Exit lambda expression", span="811-811"];
m12_279 [cluster="lambda expression", file="DefaultFormatter.cs", label="x == expected", span="823-823"];
m12_278 [cluster="lambda expression", file="DefaultFormatter.cs", label="Entry lambda expression", span="823-823"];
m12_280 [cluster="lambda expression", file="DefaultFormatter.cs", label="Exit lambda expression", span="823-823"];
m12_286 [cluster="lambda expression", file="DefaultFormatter.cs", label="x == expected", span="835-835"];
m12_285 [cluster="lambda expression", file="DefaultFormatter.cs", label="Entry lambda expression", span="835-835"];
m12_287 [cluster="lambda expression", file="DefaultFormatter.cs", label="Exit lambda expression", span="835-835"];
m12_293 [cluster="lambda expression", file="DefaultFormatter.cs", label="x == expected", span="847-847"];
m12_292 [cluster="lambda expression", file="DefaultFormatter.cs", label="Entry lambda expression", span="847-847"];
m12_294 [cluster="lambda expression", file="DefaultFormatter.cs", label="Exit lambda expression", span="847-847"];
m12_307 [cluster="lambda expression", file="DefaultFormatter.cs", label="x == expected", span="880-880"];
m12_306 [cluster="lambda expression", file="DefaultFormatter.cs", label="Entry lambda expression", span="880-880"];
m12_308 [cluster="lambda expression", file="DefaultFormatter.cs", label="Exit lambda expression", span="880-880"];
m12_330 [cluster="lambda expression", file="DefaultFormatter.cs", label="x == expected", span="951-951"];
m12_331 [cluster="lambda expression", file="DefaultFormatter.cs", label="Exit lambda expression", span="951-951"];
m12_288 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_with_mixed_short_long_options_generates_RepeatedOptionError(string[], int)", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_with_mixed_short_long_options_generates_RepeatedOptionError(string[], int)", span="840-840"];
m12_289 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_with_mixed_short_long_options_generates_RepeatedOptionError(string[], int)", file="DefaultFormatter.cs", label="var result = InvokeBuild<Simple_Options>(\r\n                arguments)", span="843-844"];
m12_290 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_with_mixed_short_long_options_generates_RepeatedOptionError(string[], int)", file="DefaultFormatter.cs", label="((NotParsed<Simple_Options>)result).Errors.Should().HaveCount(x => x == expected)", span="847-847"];
m12_291 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_with_mixed_short_long_options_generates_RepeatedOptionError(string[], int)", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_with_mixed_short_long_options_generates_RepeatedOptionError(string[], int)", span="840-840"];
m12_64 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", span="194-194"];
m12_65 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="DefaultFormatter.cs", label="var expectedResult = new[] { new MissingValueOptionError(new NameInfo(''s'', ''string-seq'')) }", span="197-197"];
m12_66 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="DefaultFormatter.cs", label="var result = InvokeBuild<Options_With_Sequence_And_Only_Min_Constraint>(\r\n                new[] { ''-s'' })", span="200-201"];
m12_67 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="DefaultFormatter.cs", label="((NotParsed<Options_With_Sequence_And_Only_Min_Constraint>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="204-204"];
m12_68 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", span="194-194"];
m12_226 [cluster="Unk.get_IsSome", file="DefaultFormatter.cs", label="Entry Unk.get_IsSome", span=""];
m12_38 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="DefaultFormatter.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="404-404"];
m12_39 [cluster="Unk.ShouldBeEquivalentTo", file="DefaultFormatter.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m12_14 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="DefaultFormatter.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m12_343 [cluster="CommandLine.Tests.Fakes.MySimpleType.MySimpleType(string)", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Fakes.MySimpleType.MySimpleType(string)", span="12-12"];
m12_37 [cluster="CommandLine.TypeInfo.Create(System.Type)", file="DefaultFormatter.cs", label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29"];
m12_155 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo, string)", file="DefaultFormatter.cs", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo, string)", span="340-340"];
m12_121 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", span="394-394"];
m12_122 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="DefaultFormatter.cs", label="var result = InvokeBuild<Options_With_Sequence_Having_Separator_Set>(\r\n                arguments)", span="399-400"];
m12_123 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="DefaultFormatter.cs", label="expected.ShouldBeEquivalentTo(((Parsed<Options_With_Sequence_Having_Separator_Set>)result).Value.LongSequence)", span="403-403"];
m12_124 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", span="394-394"];
m12_248 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_and_max_constraint_set_to_zero_throws_exception()", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_and_max_constraint_set_to_zero_throws_exception()", span="769-769"];
m12_249 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_and_max_constraint_set_to_zero_throws_exception()", file="DefaultFormatter.cs", label="Action test = () => InvokeBuild<Options_With_Both_Min_And_Max_Set_To_Zero>(\r\n                new string[] { })", span="772-773"];
m12_250 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_and_max_constraint_set_to_zero_throws_exception()", file="DefaultFormatter.cs", label="Assert.Throws<InvalidOperationException>(test)", span="776-776"];
m12_251 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_and_max_constraint_set_to_zero_throws_exception()", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_and_max_constraint_set_to_zero_throws_exception()", span="769-769"];
m12_0 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.InvokeBuild<T>(string[])", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.InvokeBuild<T>(string[])", span="21-21"];
m12_1 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.InvokeBuild<T>(string[])", file="DefaultFormatter.cs", label="return InstanceBuilder.Build(\r\n                Maybe.Just<Func<T>>(() => new T()),\r\n                (args, optionSpecs) => Tokenizer.ConfigureTokenizer(StringComparer.Ordinal, false, false)(args, optionSpecs),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                false,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>());", span="24-31"];
m12_2 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.InvokeBuild<T>(string[])", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.InvokeBuild<T>(string[])", span="21-21"];
m12_309 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.Options_With_Required_Set_To_True_For_Values)", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.Options_With_Required_Set_To_True_For_Values)", span="890-890"];
m12_310 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.Options_With_Required_Set_To_True_For_Values)", file="DefaultFormatter.cs", label="var result = InvokeBuild<Options_With_Required_Set_To_True_For_Values>(\r\n                arguments)", span="895-896"];
m12_311 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.Options_With_Required_Set_To_True_For_Values)", file="DefaultFormatter.cs", label="expected.ShouldBeEquivalentTo(((Parsed<Options_With_Required_Set_To_True_For_Values>)result).Value)", span="899-899"];
m12_312 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.Options_With_Required_Set_To_True_For_Values)", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.Options_With_Required_Set_To_True_For_Values)", span="890-890"];
m12_227 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", span="726-726"];
m12_228 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", file="DefaultFormatter.cs", label="var result = InvokeBuild<Options_With_FSharpOption>(\r\n                arguments)", span="731-732"];
m12_230 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", file="DefaultFormatter.cs", label="expectedValue.ShouldBeEquivalentTo(((Parsed<Options_With_FSharpOption>)result).Value.Offset.Value)", span="737-737"];
m12_231 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", file="DefaultFormatter.cs", label="expectedSome.ShouldBeEquivalentTo(FSharpOption<int>.get_IsSome(((Parsed<Options_With_FSharpOption>)result).Value.Offset))", span="739-739"];
m12_229 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", file="DefaultFormatter.cs", label="((Parsed<Options_With_FSharpOption>)result).Value.Offset != null", span="735-735"];
m12_232 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", span="726-726"];
m12_336 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_type_with_single_string_ctor_builds_up_correct_instance()", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_type_with_single_string_ctor_builds_up_correct_instance()", span="971-971"];
m12_337 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_type_with_single_string_ctor_builds_up_correct_instance()", file="DefaultFormatter.cs", label="var expectedResult = new Options_With_Uri_And_SimpleType { EndPoint = new Uri(''http://localhost/test/''), MyValue = new MySimpleType(''custom-value'') }", span="974-974"];
m12_338 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_type_with_single_string_ctor_builds_up_correct_instance()", file="DefaultFormatter.cs", label="var result = InvokeBuild<Options_With_Uri_And_SimpleType>(\r\n                new[] { ''--endpoint=http://localhost/test/'', ''custom-value'' })", span="977-978"];
m12_339 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_type_with_single_string_ctor_builds_up_correct_instance()", file="DefaultFormatter.cs", label="expectedResult.ShouldBeEquivalentTo(((Parsed<Options_With_Uri_And_SimpleType>)result).Value)", span="981-981"];
m12_340 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_type_with_single_string_ctor_builds_up_correct_instance()", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_type_with_single_string_ctor_builds_up_correct_instance()", span="971-971"];
m12_44 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", span="100-100"];
m12_45 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="DefaultFormatter.cs", label="var result = InvokeBuild<Simple_Options_With_Double_Value>(\r\n                arguments)", span="105-106"];
m12_46 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="DefaultFormatter.cs", label="((Parsed<Simple_Options_With_Double_Value>)result).Value.DoubleValue.ShouldBeEquivalentTo(expected)", span="109-109"];
m12_47 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", span="100-100"];
m12_274 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_with_short_options_generates_RepeatedOptionError(string[], int)", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_with_short_options_generates_RepeatedOptionError(string[], int)", span="816-816"];
m12_275 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_with_short_options_generates_RepeatedOptionError(string[], int)", file="DefaultFormatter.cs", label="var result = InvokeBuild<Simple_Options>(\r\n                arguments)", span="819-820"];
m12_276 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_with_short_options_generates_RepeatedOptionError(string[], int)", file="DefaultFormatter.cs", label="((NotParsed<Simple_Options>)result).Errors.Should().HaveCount(x => x == expected)", span="823-823"];
m12_277 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_with_short_options_generates_RepeatedOptionError(string[], int)", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_with_short_options_generates_RepeatedOptionError(string[], int)", span="816-816"];
m12_15 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.InvokeBuildEnumValuesCaseIgnore<T>(string[])", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.InvokeBuildEnumValuesCaseIgnore<T>(string[])", span="34-34"];
m12_16 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.InvokeBuildEnumValuesCaseIgnore<T>(string[])", file="DefaultFormatter.cs", label="return InstanceBuilder.Build(\r\n                Maybe.Just<Func<T>>(() => new T()),\r\n                (args, optionSpecs) => Tokenizer.ConfigureTokenizer(StringComparer.Ordinal, false, false)(args, optionSpecs),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                true,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>());", span="37-44"];
m12_17 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.InvokeBuildEnumValuesCaseIgnore<T>(string[])", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.InvokeBuildEnumValuesCaseIgnore<T>(string[])", span="34-34"];
m12_52 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", span="140-140"];
m12_53 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="DefaultFormatter.cs", label="var result = InvokeBuild<Simple_Options>(\r\n                arguments)", span="145-146"];
m12_54 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="DefaultFormatter.cs", label="((Parsed<Simple_Options>)result).Value.IntSequence.ShouldBeEquivalentTo(expected)", span="149-149"];
m12_55 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", span="140-140"];
m12_111 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="348-348"];
m12_112 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="DefaultFormatter.cs", label="var expectedResult = new Simple_Options_With_Values\r\n                {\r\n                    StringValue = string.Empty,\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''a'', ''b'', ''c'' },\r\n                    IntValue = 20\r\n                }", span="351-357"];
m12_113 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="DefaultFormatter.cs", label="var result = InvokeBuild<Simple_Options_With_Values>(\r\n                new[] { ''10'', ''a'', ''b'', ''c'', ''20'' })", span="360-361"];
m12_114 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="DefaultFormatter.cs", label="expectedResult.ShouldBeEquivalentTo(((Parsed<Simple_Options_With_Values>)result).Value)", span="364-364"];
m12_115 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="348-348"];
m12_173 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", span="532-532"];
m12_174 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="DefaultFormatter.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(new NameInfo(''i'', '''')) }", span="535-535"];
m12_175 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="DefaultFormatter.cs", label="var result = InvokeBuild<Simple_Options>(\r\n                new[] { ''-i'', ''10'' })", span="538-539"];
m12_176 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="DefaultFormatter.cs", label="((NotParsed<Simple_Options>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="542-542"];
m12_177 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", span="532-532"];
m12_203 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", span="633-633"];
m12_204 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="DefaultFormatter.cs", label="var result = InvokeBuild<Simple_Options>(\r\n                arguments)", span="638-639"];
m12_205 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="DefaultFormatter.cs", label="expected.ShouldBeEquivalentTo(((Parsed<Simple_Options>)result).Value.StringValue)", span="642-642"];
m12_206 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", span="633-633"];
m12_255 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", span="785-785"];
m12_256 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", file="DefaultFormatter.cs", label="var result = InvokeBuild<Options_With_Named_And_Empty_Sets>(\r\n                arguments)", span="788-789"];
m12_257 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", file="DefaultFormatter.cs", label="type == ParserResultType.NotParsed", span="792-792"];
m12_258 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", file="DefaultFormatter.cs", label="((NotParsed<Options_With_Named_And_Empty_Sets>)result).Errors.Should().HaveCount(x => x == expected)", span="794-794"];
m12_259 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", file="DefaultFormatter.cs", label="type == ParserResultType.Parsed", span="796-796"];
m12_260 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", file="DefaultFormatter.cs", label="result.Should().BeOfType<Parsed<Options_With_Named_And_Empty_Sets>>()", span="798-798"];
m12_261 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", span="785-785"];
m12_150 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="462-462"];
m12_151 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="DefaultFormatter.cs", label="var expectedResult = new[]\r\n                {\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''weburl''), string.Empty),\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''ftpurl''), string.Empty)\r\n                }", span="465-469"];
m12_152 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="DefaultFormatter.cs", label="var result = InvokeBuild<Options_With_Two_Sets>(\r\n                new[] { ''--weburl'', ''http://mywebsite.org/'', ''--ftpurl'', ''fpt://ftpsite.org/'' })", span="472-473"];
m12_153 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="DefaultFormatter.cs", label="((NotParsed<Options_With_Two_Sets>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="476-476"];
m12_154 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="462-462"];
m12_129 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="431-431"];
m12_130 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="DefaultFormatter.cs", label="var expectedResult = new Simple_Options_With_Values\r\n                {\r\n                    StringValue = ''str1'',\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''-a'', ''--bee'', ''-c'' },\r\n                    IntValue = 20\r\n                }", span="434-440"];
m12_131 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="DefaultFormatter.cs", label="var arguments = new[] { ''--stringvalue'', ''str1'', ''--'', ''10'', ''-a'', ''--bee'', ''-c'', ''20'' }", span="441-441"];
m12_133 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="DefaultFormatter.cs", label="expectedResult.ShouldBeEquivalentTo(((Parsed<Simple_Options_With_Values>)result).Value)", span="456-456"];
m12_132 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="DefaultFormatter.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<Simple_Options_With_Values>>(() => new Simple_Options_With_Values()),\r\n                (a, optionSpecs) =>\r\n                    Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                false,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="444-453"];
m12_134 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="431-431"];
m12_116 [cluster="CommandLine.Tests.Fakes.Simple_Options_With_Values.Simple_Options_With_Values()", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Fakes.Simple_Options_With_Values.Simple_Options_With_Values()", span="6-6"];
m12_189 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", span="580-580"];
m12_190 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="DefaultFormatter.cs", label="var expectedResult = new[] { new UnknownOptionError(''z'') }", span="583-583"];
m12_191 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="DefaultFormatter.cs", label="var result = InvokeBuild<Simple_Options>(\r\n                new[] { ''-zx'' })", span="586-587"];
m12_192 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="DefaultFormatter.cs", label="((NotParsed<Simple_Options>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="590-590"];
m12_193 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", span="580-580"];
m12_212 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", span="668-668"];
m12_213 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", file="DefaultFormatter.cs", label="var result = InvokeBuild<Options_With_Nullables>(\r\n                arguments)", span="673-674"];
m12_214 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", file="DefaultFormatter.cs", label="expected.ShouldBeEquivalentTo(((Parsed<Options_With_Nullables>)result).Value.NullableInt)", span="677-677"];
m12_215 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", span="668-668"];
m12_31 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", span="60-60"];
m12_32 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="DefaultFormatter.cs", label="var expectedResult = new NotParsed<Simple_Options>(\r\n                TypeInfo.Create(typeof(Simple_Options)), new Error[] { new HelpRequestedError() })", span="63-64"];
m12_33 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="DefaultFormatter.cs", label="var result = InvokeBuild<Simple_Options>(\r\n                new[] { ''--help'' })", span="67-68"];
m12_34 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="DefaultFormatter.cs", label="result.ShouldBeEquivalentTo(expectedResult)", span="71-71"];
m12_35 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", span="60-60"];
m12_9 [cluster="T.cstr", file="DefaultFormatter.cs", label="Entry T.cstr", span=""];
m12_27 [cluster="CSharpx.Maybe.Nothing<T>()", file="DefaultFormatter.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m12_262 [cluster="Unk.Should", file="DefaultFormatter.cs", label="Entry Unk.Should", span=""];
m12_237 [cluster="Unk.>", file="DefaultFormatter.cs", label="Entry Unk.>", span=""];
m12_341 [cluster="CommandLine.Tests.Fakes.Options_With_Uri_And_SimpleType.Options_With_Uri_And_SimpleType()", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Fakes.Options_With_Uri_And_SimpleType.Options_With_Uri_And_SimpleType()", span="23-23"];
m12_141 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="DefaultFormatter.cs", label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", span="45-45"];
m12_323 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_generate_MissingRequiredOptionError(string[], int)", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_generate_MissingRequiredOptionError(string[], int)", span="943-943"];
m12_324 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_generate_MissingRequiredOptionError(string[], int)", file="DefaultFormatter.cs", label="var result = InvokeBuild<Options_With_Two_Options_Having_Required_Set_To_True>(\r\n                arguments)", span="946-947"];
m12_326 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_generate_MissingRequiredOptionError(string[], int)", file="DefaultFormatter.cs", label="errors.OfType<MissingRequiredOptionError>().Should().HaveCount(x => x == expected)", span="951-951"];
m12_325 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_generate_MissingRequiredOptionError(string[], int)", file="DefaultFormatter.cs", label="var errors = ((NotParsed<Options_With_Two_Options_Having_Required_Set_To_True>)result).Errors", span="950-950"];
m12_327 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_generate_MissingRequiredOptionError(string[], int)", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_generate_MissingRequiredOptionError(string[], int)", span="943-943"];
m12_178 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", span="548-548"];
m12_179 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="DefaultFormatter.cs", label="var expectedResult = new[] { new UnknownOptionError(''xyz'') }", span="551-551"];
m12_180 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="DefaultFormatter.cs", label="var result = InvokeBuild<Simple_Options>(\r\n                new[] { ''--stringvalue'', ''abc'', ''--xyz'' })", span="554-555"];
m12_181 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="DefaultFormatter.cs", label="((NotParsed<Simple_Options>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="558-558"];
m12_182 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", span="548-548"];
m12_77 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", span="226-226"];
m12_78 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="DefaultFormatter.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(new NameInfo(''s'', ''string-seq'')) }", span="229-229"];
m12_79 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="DefaultFormatter.cs", label="var result = InvokeBuild<Options_With_Sequence_And_Only_Max_Constraint>(\r\n                new[] { ''--string-seq=one'', ''two'', ''three'', ''this-is-too-much'' })", span="232-233"];
m12_80 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="DefaultFormatter.cs", label="((NotParsed<Options_With_Sequence_And_Only_Max_Constraint>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="236-236"];
m12_81 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", span="226-226"];
m12_168 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="516-516"];
m12_169 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="DefaultFormatter.cs", label="var expectedResult = new[] { new MissingRequiredOptionError(new NameInfo('''', ''str'')) }", span="519-519"];
m12_170 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="DefaultFormatter.cs", label="var result = InvokeBuild<Options_With_Required_Set_To_True>(\r\n                new string[] { })", span="522-523"];
m12_171 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="DefaultFormatter.cs", label="((NotParsed<Options_With_Required_Set_To_True>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="526-526"];
m12_172 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="516-516"];
m12_167 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="DefaultFormatter.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="327-327"];
m12_69 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="DefaultFormatter.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="305-305"];
m12_48 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", span="121-121"];
m12_49 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="DefaultFormatter.cs", label="var result = InvokeBuild<Options_With_Sequence>(\r\n                arguments)", span="126-127"];
m12_50 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="DefaultFormatter.cs", label="((Parsed<Options_With_Sequence>)result).Value.IntSequence.ShouldBeEquivalentTo(expected)", span="130-130"];
m12_51 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", span="121-121"];
m12_322 [cluster="CommandLine.Tests.Fakes.Simple_Options.Simple_Options()", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Fakes.Simple_Options.Simple_Options()", span="6-6"];
m12_328 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="DefaultFormatter.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m12_161 [cluster="CommandLine.Tests.Fakes.Options_With_Required_Set_To_True_Within_Same_Set.Options_With_Required_Set_To_True_Within_Same_Set()", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Fakes.Options_With_Required_Set_To_True_Within_Same_Set.Options_With_Required_Set_To_True_Within_Same_Set()", span="4-4"];
m12_348 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_Guid(string[], CommandLine.Tests.Fakes.Options_With_Guid)", file="DefaultFormatter.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_Guid(string[], CommandLine.Tests.Fakes.Options_With_Guid)", span="1011-1011"];
m12_349 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_Guid(string[], CommandLine.Tests.Fakes.Options_With_Guid)", file="DefaultFormatter.cs", label="var result = InvokeBuild<Options_With_Guid>(\r\n                arguments)", span="1016-1017"];
m12_350 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_Guid(string[], CommandLine.Tests.Fakes.Options_With_Guid)", file="DefaultFormatter.cs", label="expected.ShouldBeEquivalentTo(((Parsed<Options_With_Guid>)result).Value)", span="1020-1020"];
m12_351 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_Guid(string[], CommandLine.Tests.Fakes.Options_With_Guid)", file="DefaultFormatter.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_Guid(string[], CommandLine.Tests.Fakes.Options_With_Guid)", span="1011-1011"];
m12_4 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="DefaultFormatter.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m12_352 [file="DefaultFormatter.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m12_353 [file="DefaultFormatter.cs", label=int, span=""];
m12_354 [file="DefaultFormatter.cs", label=int, span=""];
m12_355 [file="DefaultFormatter.cs", label=int, span=""];
m12_356 [file="DefaultFormatter.cs", label=int, span=""];
m12_357 [file="DefaultFormatter.cs", label=int, span=""];
m12_358 [file="DefaultFormatter.cs", label=int, span=""];
m12_359 [file="DefaultFormatter.cs", label=int, span=""];
m17_4 [cluster="Humanizer.Localisation.IFormatter.TimeSpanHumanize_Zero()", file="IFormatter.cs", label="Entry Humanizer.Localisation.IFormatter.TimeSpanHumanize_Zero()", span="12-12"];
m17_5 [cluster="Humanizer.Localisation.IFormatter.TimeSpanHumanize_Zero()", file="IFormatter.cs", label="Exit Humanizer.Localisation.IFormatter.TimeSpanHumanize_Zero()", span="12-12"];
m17_6 [cluster="Humanizer.Localisation.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", file="IFormatter.cs", label="Entry Humanizer.Localisation.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", span="13-13"];
m17_7 [cluster="Humanizer.Localisation.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", file="IFormatter.cs", label="Exit Humanizer.Localisation.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", span="13-13"];
m17_2 [cluster="Humanizer.Localisation.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", file="IFormatter.cs", label="Entry Humanizer.Localisation.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="10-10"];
m17_3 [cluster="Humanizer.Localisation.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", file="IFormatter.cs", label="Exit Humanizer.Localisation.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="10-10"];
m17_0 [cluster="Humanizer.Localisation.IFormatter.DateHumanize_Now()", file="IFormatter.cs", label="Entry Humanizer.Localisation.IFormatter.DateHumanize_Now()", span="9-9"];
m17_1 [cluster="Humanizer.Localisation.IFormatter.DateHumanize_Now()", file="IFormatter.cs", label="Exit Humanizer.Localisation.IFormatter.DateHumanize_Now()", span="9-9"];
m18_8 [cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", file="InflectorTests.cs", label="Entry Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", span="27-27"];
m18_9 [cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", file="InflectorTests.cs", label="Assert.Equal(plural, plural.Pluralize(Plurality.CouldBeEither))", span="29-29"];
m18_10 [cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", file="InflectorTests.cs", label="Assert.Equal(plural, singular.Pluralize(Plurality.CouldBeEither))", span="30-30"];
m18_11 [cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", span="27-27"];
m18_34 [cluster="string.Hyphenate()", file="InflectorTests.cs", label="Entry string.Hyphenate()", span="269-269"];
m18_27 [cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", file="InflectorTests.cs", label="Entry Humanizer.Tests.InflectorTests.Dasherize(string, string)", span="73-73"];
m18_28 [cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", file="InflectorTests.cs", label="Assert.Equal(input.Dasherize(), expectedOutput)", span="75-75"];
m18_29 [cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.Dasherize(string, string)", span="73-73"];
m18_16 [cluster="Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord(string, string)", file="InflectorTests.cs", label="Entry Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord(string, string)", span="42-42"];
m18_17 [cluster="Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord(string, string)", file="InflectorTests.cs", label="Assert.Equal(singular, singular.Singularize(Plurality.Singular))", span="44-44"];
m18_18 [cluster="Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord(string, string)", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord(string, string)", span="42-42"];
m18_39 [cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)", file="InflectorTests.cs", label="Entry Humanizer.Tests.InflectorTests.Camelize(string, string)", span="110-110"];
m18_40 [cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)", file="InflectorTests.cs", label="Assert.Equal(expectedOutput, input.Camelize())", span="112-112"];
m18_41 [cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.Camelize(string, string)", span="110-110"];
m18_47 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="Entry Humanizer.Tests.PluralTestSource.GetEnumerator()", span="131-131"];
m18_48 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''search'', ''searches''};", span="133-133"];
m18_49 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''switch'', ''switches''};", span="134-134"];
m18_50 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''fix'', ''fixes''};", span="135-135"];
m18_51 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''box'', ''boxes''};", span="136-136"];
m18_52 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''process'', ''processes''};", span="137-137"];
m18_53 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''address'', ''addresses''};", span="138-138"];
m18_54 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''case'', ''cases''};", span="139-139"];
m18_55 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''stack'', ''stacks''};", span="140-140"];
m18_56 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''wish'', ''wishes''};", span="141-141"];
m18_57 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''fish'', ''fish''};", span="142-142"];
m18_58 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''category'', ''categories''};", span="144-144"];
m18_59 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''query'', ''queries''};", span="145-145"];
m18_60 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''ability'', ''abilities''};", span="146-146"];
m18_61 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''agency'', ''agencies''};", span="147-147"];
m18_62 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''movie'', ''movies''};", span="148-148"];
m18_63 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''archive'', ''archives''};", span="150-150"];
m18_64 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''index'', ''indices''};", span="152-152"];
m18_65 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''wife'', ''wives''};", span="154-154"];
m18_66 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''safe'', ''saves''};", span="155-155"];
m18_67 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''half'', ''halves''};", span="156-156"];
m18_68 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''move'', ''moves''};", span="158-158"];
m18_69 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''salesperson'', ''salespeople''};", span="160-160"];
m18_70 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''person'', ''people''};", span="161-161"];
m18_71 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''spokesman'', ''spokesmen''};", span="163-163"];
m18_72 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''man'', ''men''};", span="164-164"];
m18_73 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''woman'', ''women''};", span="165-165"];
m18_74 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''basis'', ''bases''};", span="167-167"];
m18_75 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''diagnosis'', ''diagnoses''};", span="168-168"];
m18_76 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''datum'', ''data''};", span="170-170"];
m18_77 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''medium'', ''media''};", span="171-171"];
m18_78 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''analysis'', ''analyses''};", span="172-172"];
m18_79 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''node_child'', ''node_children''};", span="174-174"];
m18_80 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''child'', ''children''};", span="175-175"];
m18_81 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''experience'', ''experiences''};", span="177-177"];
m18_82 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''day'', ''days''};", span="178-178"];
m18_83 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''comment'', ''comments''};", span="180-180"];
m18_84 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''foobar'', ''foobars''};", span="181-181"];
m18_85 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''newsletter'', ''newsletters''};", span="182-182"];
m18_86 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''old_news'', ''old_news''};", span="184-184"];
m18_87 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''news'', ''news''};", span="185-185"];
m18_88 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''series'', ''series''};", span="187-187"];
m18_89 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''species'', ''species''};", span="188-188"];
m18_90 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''quiz'', ''quizzes''};", span="190-190"];
m18_91 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''perspective'', ''perspectives''};", span="192-192"];
m18_92 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''ox'', ''oxen''};", span="194-194"];
m18_93 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''photo'', ''photos''};", span="195-195"];
m18_94 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''buffalo'', ''buffaloes''};", span="196-196"];
m18_95 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''tomato'', ''tomatoes''};", span="197-197"];
m18_96 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''dwarf'', ''dwarves''};", span="198-198"];
m18_97 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''elf'', ''elves''};", span="199-199"];
m18_98 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''information'', ''information''};", span="200-200"];
m18_99 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''equipment'', ''equipment''};", span="201-201"];
m18_100 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''bus'', ''buses''};", span="202-202"];
m18_101 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''status'', ''statuses''};", span="203-203"];
m18_102 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''status_code'', ''status_codes''};", span="204-204"];
m18_103 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''mouse'', ''mice''};", span="205-205"];
m18_104 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''louse'', ''lice''};", span="207-207"];
m18_105 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''house'', ''houses''};", span="208-208"];
m18_106 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''octopus'', ''octopi''};", span="209-209"];
m18_107 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''virus'', ''viri''};", span="210-210"];
m18_108 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''alias'', ''aliases''};", span="211-211"];
m18_109 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''portfolio'', ''portfolios''};", span="212-212"];
m18_110 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''vertex'', ''vertices''};", span="214-214"];
m18_111 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''matrix'', ''matrices''};", span="215-215"];
m18_112 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''axis'', ''axes''};", span="217-217"];
m18_113 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''testis'', ''testes''};", span="218-218"];
m18_114 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''crisis'', ''crises''};", span="219-219"];
m18_115 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''rice'', ''rice''};", span="221-221"];
m18_116 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''shoe'', ''shoes''};", span="222-222"];
m18_117 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''horse'', ''horses''};", span="224-224"];
m18_118 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''prize'', ''prizes''};", span="225-225"];
m18_119 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''edge'', ''edges''};", span="226-226"];
m18_120 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''goose'', ''geese''};", span="229-229"];
m18_121 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''deer'', ''deer''};", span="230-230"];
m18_122 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''sheep'', ''sheep''};", span="231-231"];
m18_123 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''wolf'', ''wolves''};", span="232-232"];
m18_124 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''volcano'', ''volcanoes''};", span="233-233"];
m18_125 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''aircraft'', ''aircraft''};", span="234-234"];
m18_126 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''alumna'', ''alumnae''};", span="235-235"];
m18_127 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''alumnus'', ''alumni''};", span="236-236"];
m18_128 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''fungus'', ''fungi''};", span="237-237"];
m18_129 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="Exit Humanizer.Tests.PluralTestSource.GetEnumerator()", span="131-131"];
m18_4 [cluster="Unk.Equal", file="InflectorTests.cs", label="Entry Unk.Equal", span=""];
m18_19 [cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", file="InflectorTests.cs", label="Entry Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", span="49-49"];
m18_20 [cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", file="InflectorTests.cs", label="Assert.Equal(singular, singular.Singularize(Plurality.CouldBeEither))", span="51-51"];
m18_21 [cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", file="InflectorTests.cs", label="Assert.Equal(singular, plural.Singularize(Plurality.CouldBeEither))", span="52-52"];
m18_22 [cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", span="49-49"];
m18_43 [cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)", file="InflectorTests.cs", label="Entry Humanizer.Tests.InflectorTests.Underscore(string, string)", span="123-123"];
m18_44 [cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)", file="InflectorTests.cs", label="Assert.Equal(expectedOuput, input.Underscore())", span="125-125"];
m18_45 [cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.Underscore(string, string)", span="123-123"];
m18_3 [cluster="string.Pluralize(Humanizer.Plurality)", file="InflectorTests.cs", label="Entry string.Pluralize(Humanizer.Plurality)", span="147-147"];
m18_38 [cluster="string.Pascalize()", file="InflectorTests.cs", label="Entry string.Pascalize()", span="226-226"];
m18_23 [cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", file="InflectorTests.cs", label="Entry Humanizer.Tests.InflectorTests.Titleize(string, string)", span="63-63"];
m18_24 [cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", file="InflectorTests.cs", label="Assert.Equal(expectedOuput, input.Titleize())", span="65-65"];
m18_25 [cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.Titleize(string, string)", span="63-63"];
m18_26 [cluster="string.Titleize()", file="InflectorTests.cs", label="Entry string.Titleize()", span="216-216"];
m18_0 [cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)", file="InflectorTests.cs", label="Entry Humanizer.Tests.InflectorTests.Pluralize(string, string)", span="13-13"];
m18_1 [cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)", file="InflectorTests.cs", label="Assert.Equal(plural, singular.Pluralize())", span="15-15"];
m18_2 [cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.Pluralize(string, string)", span="13-13"];
m18_30 [cluster="string.Dasherize()", file="InflectorTests.cs", label="Entry string.Dasherize()", span="259-259"];
m18_12 [cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", file="InflectorTests.cs", label="Entry Humanizer.Tests.InflectorTests.Singularize(string, string)", span="35-35"];
m18_13 [cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", file="InflectorTests.cs", label="Assert.Equal(singular, plural.Singularize())", span="37-37"];
m18_14 [cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.Singularize(string, string)", span="35-35"];
m18_35 [cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", file="InflectorTests.cs", label="Entry Humanizer.Tests.InflectorTests.Pascalize(string, string)", span="96-96"];
m18_36 [cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", file="InflectorTests.cs", label="Assert.Equal(expectedOutput, input.Pascalize())", span="98-98"];
m18_37 [cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.Pascalize(string, string)", span="96-96"];
m18_31 [cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)", file="InflectorTests.cs", label="Entry Humanizer.Tests.InflectorTests.Hyphenate(string, string)", span="83-83"];
m18_32 [cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)", file="InflectorTests.cs", label="Assert.Equal(input.Hyphenate(), expectedOutput)", span="85-85"];
m18_33 [cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.Hyphenate(string, string)", span="83-83"];
m18_130 [cluster="Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", file="InflectorTests.cs", label="Entry Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", span="240-240"];
m18_131 [cluster="Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", file="InflectorTests.cs", label="return GetEnumerator();", span="242-242"];
m18_132 [cluster="Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", file="InflectorTests.cs", label="Exit Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", span="240-240"];
m18_42 [cluster="string.Camelize()", file="InflectorTests.cs", label="Entry string.Camelize()", span="236-236"];
m18_46 [cluster="string.Underscore()", file="InflectorTests.cs", label="Entry string.Underscore()", span="247-247"];
m18_5 [cluster="Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord(string, string)", file="InflectorTests.cs", label="Entry Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord(string, string)", span="20-20"];
m18_6 [cluster="Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord(string, string)", file="InflectorTests.cs", label="Assert.Equal(plural, plural.Pluralize(Plurality.Plural))", span="22-22"];
m18_7 [cluster="Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord(string, string)", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord(string, string)", span="20-20"];
m18_15 [cluster="string.Singularize(Humanizer.Plurality)", file="InflectorTests.cs", label="Entry string.Singularize(Humanizer.Plurality)", span="171-171"];
m18_133 [file="InflectorTests.cs", label="Humanizer.Tests.PluralTestSource", span=""];
m20_0 [cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", file="NumberToOrdinalWordsExtension.cs", label="Entry Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", span="15-15"];
m20_1 [cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", color=red, community=0, file="NumberToOrdinalWordsExtension.cs", label="0: string towords", span="17-17"];
m20_2 [cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", color=red, community=0, file="NumberToOrdinalWordsExtension.cs", label="0: ExceptionNumbersToWords(number, out towords)", span="19-19"];
m20_4 [cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", color=red, community=0, file="NumberToOrdinalWordsExtension.cs", label="0: number > 20", span="23-23"];
m20_6 [cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", color=red, community=0, file="NumberToOrdinalWordsExtension.cs", label="0: ExceptionNumbersToWords(number%10, out exceptionPart)", span="26-26"];
m20_7 [cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", color=red, community=0, file="NumberToOrdinalWordsExtension.cs", label="0: var normalPart = number - number%10", span="28-28"];
m20_10 [cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", color=red, community=0, file="NumberToOrdinalWordsExtension.cs", label="2: return NormalNumberToWords(number);", span="34-34"];
m20_3 [cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", color=red, community=0, file="NumberToOrdinalWordsExtension.cs", label="0: return towords;", span="20-20"];
m20_5 [cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", color=red, community=0, file="NumberToOrdinalWordsExtension.cs", label="0: string exceptionPart", span="25-25"];
m20_9 [cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", color=red, community=0, file="NumberToOrdinalWordsExtension.cs", label="0: return towords + '' '' + exceptionPart;", span="30-30"];
m20_8 [cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", color=red, community=0, file="NumberToOrdinalWordsExtension.cs", label="0: towords = RemoveOnePrefix(normalPart.ToWords())", span="29-29"];
m20_11 [cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", file="NumberToOrdinalWordsExtension.cs", label="Exit Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", span="15-15"];
m20_34 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="NumberToOrdinalWordsExtension.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m20_22 [cluster="string.Replace(char, char)", file="NumberToOrdinalWordsExtension.cs", label="Entry string.Replace(char, char)", span="0-0"];
m20_35 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="NumberToOrdinalWordsExtension.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m20_23 [cluster="string.EndsWith(string)", file="NumberToOrdinalWordsExtension.cs", label="Entry string.EndsWith(string)", span="0-0"];
m20_12 [cluster="Humanizer.NumberToOrdinalWordsExtension.ExceptionNumbersToWords(int, out string)", file="NumberToOrdinalWordsExtension.cs", label="Entry Humanizer.NumberToOrdinalWordsExtension.ExceptionNumbersToWords(int, out string)", span="58-58"];
m20_31 [cluster="Humanizer.NumberToOrdinalWordsExtension.ExceptionNumbersToWords(int, out string)", color=red, community=1, file="NumberToOrdinalWordsExtension.cs", label="0: var exceptions = new Dictionary<int, string>\r\n            {\r\n                {1, ''first''},\r\n                {2, ''second''},\r\n                {3, ''third''},\r\n                {4, ''forth''},\r\n                {5, ''fifth''},\r\n                {8, ''eighth''},\r\n                {9, ''ninth''},\r\n                {12, ''twelfth''},\r\n            }", span="60-70"];
m20_32 [cluster="Humanizer.NumberToOrdinalWordsExtension.ExceptionNumbersToWords(int, out string)", color=red, community=0, file="NumberToOrdinalWordsExtension.cs", label="0: return exceptions.TryGetValue(number, out words);", span="72-72"];
m20_33 [cluster="Humanizer.NumberToOrdinalWordsExtension.ExceptionNumbersToWords(int, out string)", file="NumberToOrdinalWordsExtension.cs", label="Exit Humanizer.NumberToOrdinalWordsExtension.ExceptionNumbersToWords(int, out string)", span="58-58"];
m20_13 [cluster="int.ToWords()", file="NumberToOrdinalWordsExtension.cs", label="Entry int.ToWords()", span="16-16"];
m20_30 [cluster="string.Remove(int, int)", file="NumberToOrdinalWordsExtension.cs", label="Entry string.Remove(int, int)", span="0-0"];
m20_24 [cluster="string.TrimEnd(params char[])", file="NumberToOrdinalWordsExtension.cs", label="Entry string.TrimEnd(params char[])", span="0-0"];
m20_14 [cluster="Humanizer.NumberToOrdinalWordsExtension.RemoveOnePrefix(string)", file="NumberToOrdinalWordsExtension.cs", label="Entry Humanizer.NumberToOrdinalWordsExtension.RemoveOnePrefix(string)", span="49-49"];
m20_25 [cluster="Humanizer.NumberToOrdinalWordsExtension.RemoveOnePrefix(string)", color=red, community=0, file="NumberToOrdinalWordsExtension.cs", label="0: towords.IndexOf(''one'', StringComparison.Ordinal) == 0", span="52-52"];
m20_26 [cluster="Humanizer.NumberToOrdinalWordsExtension.RemoveOnePrefix(string)", color=red, community=0, file="NumberToOrdinalWordsExtension.cs", label="0: towords = towords.Remove(0, 4)", span="53-53"];
m20_27 [cluster="Humanizer.NumberToOrdinalWordsExtension.RemoveOnePrefix(string)", color=red, community=0, file="NumberToOrdinalWordsExtension.cs", label="1: return towords;", span="55-55"];
m20_28 [cluster="Humanizer.NumberToOrdinalWordsExtension.RemoveOnePrefix(string)", file="NumberToOrdinalWordsExtension.cs", label="Exit Humanizer.NumberToOrdinalWordsExtension.RemoveOnePrefix(string)", span="49-49"];
m20_15 [cluster="Humanizer.NumberToOrdinalWordsExtension.NormalNumberToWords(int)", file="NumberToOrdinalWordsExtension.cs", label="Entry Humanizer.NumberToOrdinalWordsExtension.NormalNumberToWords(int)", span="37-37"];
m20_16 [cluster="Humanizer.NumberToOrdinalWordsExtension.NormalNumberToWords(int)", color=red, community=0, file="NumberToOrdinalWordsExtension.cs", label="0: string towords = number.ToWords().Replace('-', ' ')", span="39-39"];
m20_17 [cluster="Humanizer.NumberToOrdinalWordsExtension.NormalNumberToWords(int)", color=red, community=0, file="NumberToOrdinalWordsExtension.cs", label="0: towords = RemoveOnePrefix(towords)", span="41-41"];
m20_18 [cluster="Humanizer.NumberToOrdinalWordsExtension.NormalNumberToWords(int)", color=red, community=0, file="NumberToOrdinalWordsExtension.cs", label="0: towords.EndsWith(''y'')", span="43-43"];
m20_19 [cluster="Humanizer.NumberToOrdinalWordsExtension.NormalNumberToWords(int)", color=red, community=0, file="NumberToOrdinalWordsExtension.cs", label="0: towords = towords.TrimEnd('y') + ''ie''", span="44-44"];
m20_20 [cluster="Humanizer.NumberToOrdinalWordsExtension.NormalNumberToWords(int)", color=red, community=0, file="NumberToOrdinalWordsExtension.cs", label="0: return towords + ''th'';", span="46-46"];
m20_21 [cluster="Humanizer.NumberToOrdinalWordsExtension.NormalNumberToWords(int)", file="NumberToOrdinalWordsExtension.cs", label="Exit Humanizer.NumberToOrdinalWordsExtension.NormalNumberToWords(int)", span="37-37"];
m20_29 [cluster="string.IndexOf(string, System.StringComparison)", file="NumberToOrdinalWordsExtension.cs", label="Entry string.IndexOf(string, System.StringComparison)", span="0-0"];
m21_11 [cluster="Unk.>", file="ParsingTests.cs", label="Entry Unk.>", span=""];
m21_5 [cluster="Humanizer.Tests.StringExtensionsTests.CanFormatStringWithMoreArguments()", file="ParsingTests.cs", label="Entry Humanizer.Tests.StringExtensionsTests.CanFormatStringWithMoreArguments()", span="18-18"];
m21_6 [cluster="Humanizer.Tests.StringExtensionsTests.CanFormatStringWithMoreArguments()", color=green, community=0, file="ParsingTests.cs", label="0: Assert.Equal(Expected, Format.FormatWith(1, 2, 3, 4, 5))", span="20-20"];
m21_7 [cluster="Humanizer.Tests.StringExtensionsTests.CanFormatStringWithMoreArguments()", file="ParsingTests.cs", label="Exit Humanizer.Tests.StringExtensionsTests.CanFormatStringWithMoreArguments()", span="18-18"];
m21_15 [cluster="Humanizer.Tests.StringExtensionsTests.FormatCannotBeNull()", file="ParsingTests.cs", label="Entry Humanizer.Tests.StringExtensionsTests.FormatCannotBeNull()", span="30-30"];
m21_16 [cluster="Humanizer.Tests.StringExtensionsTests.FormatCannotBeNull()", file="ParsingTests.cs", label="string format = null", span="32-32"];
m21_17 [cluster="Humanizer.Tests.StringExtensionsTests.FormatCannotBeNull()", file="ParsingTests.cs", label="Assert.Throws<ArgumentNullException>(() => format.FormatWith(1, 2))", span="33-33"];
m21_18 [cluster="Humanizer.Tests.StringExtensionsTests.FormatCannotBeNull()", file="ParsingTests.cs", label="Exit Humanizer.Tests.StringExtensionsTests.FormatCannotBeNull()", span="30-30"];
m21_0 [cluster="Humanizer.Tests.StringExtensionsTests.CanFormatStringWithExactNumberOfArguments()", file="ParsingTests.cs", label="Entry Humanizer.Tests.StringExtensionsTests.CanFormatStringWithExactNumberOfArguments()", span="12-12"];
m21_1 [cluster="Humanizer.Tests.StringExtensionsTests.CanFormatStringWithExactNumberOfArguments()", color=green, community=0, file="ParsingTests.cs", label="0: Assert.Equal(Expected, Format.FormatWith(1, 2, 3))", span="14-14"];
m21_2 [cluster="Humanizer.Tests.StringExtensionsTests.CanFormatStringWithExactNumberOfArguments()", file="ParsingTests.cs", label="Exit Humanizer.Tests.StringExtensionsTests.CanFormatStringWithExactNumberOfArguments()", span="12-12"];
m21_4 [cluster="Unk.Equal", file="ParsingTests.cs", label="Entry Unk.Equal", span=""];
m21_26 [cluster="string.FormatWith(System.IFormatProvider, params object[])", file="ParsingTests.cs", label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="27-27"];
m21_3 [cluster="string.FormatWith(params object[])", file="ParsingTests.cs", label="Entry string.FormatWith(params object[])", span="15-15"];
m21_8 [cluster="Humanizer.Tests.StringExtensionsTests.CannotFormatStringWithLessArguments()", file="ParsingTests.cs", label="Entry Humanizer.Tests.StringExtensionsTests.CannotFormatStringWithLessArguments()", span="24-24"];
m21_9 [cluster="Humanizer.Tests.StringExtensionsTests.CannotFormatStringWithLessArguments()", file="ParsingTests.cs", label="Assert.Throws<FormatException>(() => Format.FormatWith(1, 2))", span="26-26"];
m21_10 [cluster="Humanizer.Tests.StringExtensionsTests.CannotFormatStringWithLessArguments()", file="ParsingTests.cs", label="Exit Humanizer.Tests.StringExtensionsTests.CannotFormatStringWithLessArguments()", span="24-24"];
m21_19 [cluster="lambda expression", file="ParsingTests.cs", label="Entry lambda expression", span="33-33"];
m21_12 [cluster="lambda expression", file="ParsingTests.cs", label="Entry lambda expression", span="26-26"];
m21_13 [cluster="lambda expression", file="ParsingTests.cs", label="Format.FormatWith(1, 2)", span="26-26"];
m21_14 [cluster="lambda expression", file="ParsingTests.cs", label="Exit lambda expression", span="26-26"];
m21_20 [cluster="lambda expression", file="ParsingTests.cs", label="format.FormatWith(1, 2)", span="33-33"];
m21_21 [cluster="lambda expression", file="ParsingTests.cs", label="Exit lambda expression", span="33-33"];
m21_22 [cluster="Humanizer.Tests.StringExtensionsTests.CanSpecifyCultureExplicitly(string, string)", file="ParsingTests.cs", label="Entry Humanizer.Tests.StringExtensionsTests.CanSpecifyCultureExplicitly(string, string)", span="39-39"];
m21_23 [cluster="Humanizer.Tests.StringExtensionsTests.CanSpecifyCultureExplicitly(string, string)", file="ParsingTests.cs", label="Assert.Equal(expected, ''{0:N2}''.FormatWith(new CultureInfo(culture), 6666.66))", span="41-41"];
m21_24 [cluster="Humanizer.Tests.StringExtensionsTests.CanSpecifyCultureExplicitly(string, string)", file="ParsingTests.cs", label="Exit Humanizer.Tests.StringExtensionsTests.CanSpecifyCultureExplicitly(string, string)", span="39-39"];
m21_25 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="ParsingTests.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m21_27 [file="ParsingTests.cs", label=format, span=""];
m23_0 [cluster="Humanizer.Localisation.RomanianFormatter.GetResourceKey(string, int)", file="RomanianFormatter.cs", label="Entry Humanizer.Localisation.RomanianFormatter.GetResourceKey(string, int)", span="6-6"];
m23_1 [cluster="Humanizer.Localisation.RomanianFormatter.GetResourceKey(string, int)", file="RomanianFormatter.cs", label="var mod100 = number%100", span="8-8"];
m23_3 [cluster="Humanizer.Localisation.RomanianFormatter.GetResourceKey(string, int)", file="RomanianFormatter.cs", label="return resourceKey;", span="12-12"];
m23_4 [cluster="Humanizer.Localisation.RomanianFormatter.GetResourceKey(string, int)", file="RomanianFormatter.cs", label="return resourceKey + Above20PostFix;", span="15-15"];
m23_2 [cluster="Humanizer.Localisation.RomanianFormatter.GetResourceKey(string, int)", file="RomanianFormatter.cs", label="0 < mod100 && mod100 < 20", span="10-10"];
m23_5 [cluster="Humanizer.Localisation.RomanianFormatter.GetResourceKey(string, int)", file="RomanianFormatter.cs", label="Exit Humanizer.Localisation.RomanianFormatter.GetResourceKey(string, int)", span="6-6"];
m3_0 -> m3_1  [color=green, key=0, style=solid];
m3_1 -> m3_2  [color=green, key=0, style=solid];
m3_1 -> m3_3  [color=green, key=1, label=assemblyPath, style=dashed];
m3_1 -> m3_4  [color=green, key=1, label=assemblyPath, style=dashed];
m3_1 -> m3_5  [color=green, key=1, label=assemblyPath, style=dashed];
m3_2 -> m3_3  [color=green, key=0, style=solid];
m3_2 -> m3_9  [color=green, key=2, style=dotted];
m3_2 -> m3_5  [color=green, key=1, label=assemblyResolver, style=dashed];
m3_3 -> m3_4  [color=green, key=0, style=solid];
m3_3 -> m3_10  [color=green, key=2, style=dotted];
m3_3 -> m3_11  [color=green, key=2, style=dotted];
m3_4 -> m3_5  [color=green, key=0, style=solid];
m3_4 -> m3_12  [color=green, key=2, style=dotted];
m3_4 -> m3_13  [color=green, key=2, style=dotted];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_14  [key=2, style=dotted];
m3_5 -> m3_15  [key=2, style=dotted];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_16  [key=2, style=dotted];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_17  [key=2, style=dotted];
m3_8 -> m3_0  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_0 -> m4_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_0 -> m4_0  [color=darkorchid, key=3, label="method methodReturn string GetResourceKey", style=bold];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=0, style=solid];
m4_2 -> m4_4  [key=0, style=solid];
m4_3 -> m4_4  [key=0, style=solid];
m4_4 -> m4_0  [color=blue, key=0, style=bold];
m5_16 -> m5_17  [color=green, key=0, style=solid];
m5_16 -> m5_18  [color=green, key=1, label="double?", style=dashed];
m5_16 -> m5_21  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_16 -> m5_22  [color=darkseagreen4, key=1, label="Humanizer.Localisation.Tense", style=dashed];
m5_16 -> m5_24  [color=darkseagreen4, key=1, label="Humanizer.Localisation.TimeUnit", style=dashed];
m5_16 -> m5_37  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_16 -> m5_38  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_17 -> m5_18  [color=green, key=0, style=solid];
m5_17 -> m5_19  [color=green, key=0, style=solid];
m5_18 -> m5_20  [color=green, key=0, style=solid];
m5_18 -> m5_40  [color=green, key=2, style=dotted];
m5_19 -> m5_20  [color=green, key=0, style=solid];
m5_19 -> m5_41  [color=green, key=2, style=dotted];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_42  [key=2, style=dotted];
m5_21 -> m5_21  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_43  [key=2, style=dotted];
m5_21 -> m5_23  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_21 -> m5_26  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_21 -> m5_28  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_21 -> m5_30  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_21 -> m5_32  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_21 -> m5_34  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_21 -> m5_36  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_24  [key=0, style=solid];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_27  [key=0, style=solid];
m5_24 -> m5_29  [key=0, style=solid];
m5_24 -> m5_31  [key=0, style=solid];
m5_24 -> m5_33  [key=0, style=solid];
m5_24 -> m5_35  [key=0, style=solid];
m5_37 -> m5_0  [key=2, style=dotted];
m5_37 -> m5_38  [key=0, style=solid];
m5_38 -> m5_9  [key=2, style=dotted];
m5_38 -> m5_39  [key=0, style=solid];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_23  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_23 -> m5_26  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_23 -> m5_28  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_23 -> m5_30  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_23 -> m5_32  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_23 -> m5_34  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_23 -> m5_36  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_26 -> m5_37  [key=0, style=solid];
m5_26 -> m5_44  [key=2, style=dotted];
m5_28 -> m5_37  [key=0, style=solid];
m5_28 -> m5_45  [key=2, style=dotted];
m5_30 -> m5_37  [key=0, style=solid];
m5_30 -> m5_46  [key=2, style=dotted];
m5_32 -> m5_37  [key=0, style=solid];
m5_32 -> m5_47  [key=2, style=dotted];
m5_34 -> m5_37  [key=0, style=solid];
m5_34 -> m5_47  [key=2, style=dotted];
m5_36 -> m5_37  [key=0, style=solid];
m5_36 -> m5_38  [color=darkseagreen4, key=1, label=deltaFromNow, style=dashed];
m5_36 -> m5_47  [key=2, style=dotted];
m5_25 -> m5_26  [key=0, style=solid];
m5_27 -> m5_28  [key=0, style=solid];
m5_29 -> m5_30  [key=0, style=solid];
m5_31 -> m5_32  [key=0, style=solid];
m5_33 -> m5_34  [key=0, style=solid];
m5_35 -> m5_36  [key=0, style=solid];
m5_39 -> m5_16  [color=blue, key=0, style=bold];
m5_0 -> m5_16  [color=darkorchid, key=3, label="Parameter variable string expectedString", style=bold];
m5_0 -> m5_20  [color=darkorchid, key=3, label="Parameter variable System.TimeSpan deltaFromNow", style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_0 -> m5_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [color=darkseagreen4, key=1, label=utcNow, style=dashed];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_6  [key=2, style=dotted];
m5_3 -> m5_7  [key=2, style=dotted];
m5_3 -> m5_8  [key=2, style=dotted];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_6  [key=2, style=dotted];
m5_4 -> m5_7  [key=2, style=dotted];
m5_4 -> m5_8  [key=2, style=dotted];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_4  [color=darkseagreen4, key=1, label=localNow, style=dashed];
m5_5 -> m5_0  [color=blue, key=0, style=bold];
m5_9 -> m5_16  [color=darkorchid, key=3, label="Parameter variable string expectedString", style=bold];
m5_9 -> m5_20  [color=darkorchid, key=3, label="Parameter variable System.TimeSpan deltaFromNow", style=bold];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_9 -> m5_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_15  [key=2, style=dotted];
m5_10 -> m5_12  [color=darkseagreen4, key=1, label=utcNow, style=dashed];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_6  [key=2, style=dotted];
m5_12 -> m5_7  [key=2, style=dotted];
m5_12 -> m5_8  [key=2, style=dotted];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_6  [key=2, style=dotted];
m5_13 -> m5_7  [key=2, style=dotted];
m5_13 -> m5_8  [key=2, style=dotted];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_13  [color=darkseagreen4, key=1, label=now, style=dashed];
m5_11 -> m5_15  [key=2, style=dotted];
m5_14 -> m5_9  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_2 -> m6_0  [color=blue, key=0, style=bold];
m6_3 -> m6_4  [color=red, key=0, style=solid];
m6_4 -> m6_5  [color=red, key=0, style=solid];
m6_4 -> m6_6  [color=red, key=2, style=dotted];
m6_5 -> m6_3  [color=blue, key=0, style=bold];
m6_7 -> m6_8  [color=red, key=0, style=solid];
m6_8 -> m6_9  [color=red, key=0, style=solid];
m6_8 -> m6_6  [color=red, key=2, style=dotted];
m6_9 -> m6_7  [color=blue, key=0, style=bold];
m6_10 -> m6_1  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter", style=dashed];
m6_10 -> m6_4  [color=red, key=1, label="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter", style=dashed];
m6_10 -> m6_8  [color=red, key=1, label="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter", style=dashed];
m9_0 -> m9_1  [color=red, key=0, style=solid];
m9_1 -> m9_2  [color=red, key=0, style=solid];
m9_1 -> m9_72  [color=red, key=2, style=dotted];
m9_2 -> m9_3  [color=red, key=0, style=solid];
m9_2 -> m9_73  [color=red, key=2, style=dotted];
m9_3 -> m9_4  [color=red, key=0, style=solid];
m9_3 -> m9_73  [color=red, key=2, style=dotted];
m9_4 -> m9_5  [color=red, key=0, style=solid];
m9_4 -> m9_73  [color=red, key=2, style=dotted];
m9_5 -> m9_6  [color=red, key=0, style=solid];
m9_5 -> m9_73  [color=red, key=2, style=dotted];
m9_6 -> m9_7  [color=red, key=0, style=solid];
m9_6 -> m9_73  [color=red, key=2, style=dotted];
m9_7 -> m9_8  [color=red, key=0, style=solid];
m9_7 -> m9_73  [color=red, key=2, style=dotted];
m9_8 -> m9_9  [color=red, key=0, style=solid];
m9_8 -> m9_73  [color=red, key=2, style=dotted];
m9_9 -> m9_10  [color=red, key=0, style=solid];
m9_9 -> m9_73  [color=red, key=2, style=dotted];
m9_10 -> m9_11  [color=red, key=0, style=solid];
m9_10 -> m9_73  [color=red, key=2, style=dotted];
m9_11 -> m9_12  [color=red, key=0, style=solid];
m9_11 -> m9_73  [color=red, key=2, style=dotted];
m9_12 -> m9_13  [color=red, key=0, style=solid];
m9_12 -> m9_73  [color=red, key=2, style=dotted];
m9_13 -> m9_14  [color=red, key=0, style=solid];
m9_13 -> m9_73  [color=red, key=2, style=dotted];
m9_14 -> m9_15  [color=red, key=0, style=solid];
m9_14 -> m9_73  [color=red, key=2, style=dotted];
m9_15 -> m9_16  [color=red, key=0, style=solid];
m9_15 -> m9_73  [color=red, key=2, style=dotted];
m9_16 -> m9_17  [color=red, key=0, style=solid];
m9_16 -> m9_73  [color=red, key=2, style=dotted];
m9_17 -> m9_18  [color=red, key=0, style=solid];
m9_17 -> m9_73  [color=red, key=2, style=dotted];
m9_18 -> m9_19  [color=red, key=0, style=solid];
m9_18 -> m9_73  [color=red, key=2, style=dotted];
m9_19 -> m9_20  [color=red, key=0, style=solid];
m9_19 -> m9_73  [color=red, key=2, style=dotted];
m9_20 -> m9_21  [color=red, key=0, style=solid];
m9_20 -> m9_73  [color=red, key=2, style=dotted];
m9_21 -> m9_22  [color=red, key=0, style=solid];
m9_21 -> m9_74  [color=red, key=2, style=dotted];
m9_22 -> m9_23  [color=red, key=0, style=solid];
m9_22 -> m9_74  [color=red, key=2, style=dotted];
m9_23 -> m9_24  [color=red, key=0, style=solid];
m9_23 -> m9_74  [color=red, key=2, style=dotted];
m9_24 -> m9_25  [color=red, key=0, style=solid];
m9_24 -> m9_74  [color=red, key=2, style=dotted];
m9_25 -> m9_26  [color=red, key=0, style=solid];
m9_25 -> m9_74  [color=red, key=2, style=dotted];
m9_26 -> m9_27  [color=red, key=0, style=solid];
m9_26 -> m9_74  [color=red, key=2, style=dotted];
m9_27 -> m9_28  [color=red, key=0, style=solid];
m9_27 -> m9_74  [color=red, key=2, style=dotted];
m9_28 -> m9_29  [color=red, key=0, style=solid];
m9_28 -> m9_74  [color=red, key=2, style=dotted];
m9_29 -> m9_30  [color=red, key=0, style=solid];
m9_29 -> m9_74  [color=red, key=2, style=dotted];
m9_30 -> m9_31  [color=red, key=0, style=solid];
m9_30 -> m9_74  [color=red, key=2, style=dotted];
m9_31 -> m9_32  [color=red, key=0, style=solid];
m9_31 -> m9_74  [color=red, key=2, style=dotted];
m9_32 -> m9_33  [color=red, key=0, style=solid];
m9_32 -> m9_74  [color=red, key=2, style=dotted];
m9_33 -> m9_34  [color=red, key=0, style=solid];
m9_33 -> m9_74  [color=red, key=2, style=dotted];
m9_34 -> m9_35  [color=red, key=0, style=solid];
m9_34 -> m9_74  [color=red, key=2, style=dotted];
m9_35 -> m9_36  [color=red, key=0, style=solid];
m9_35 -> m9_74  [color=red, key=2, style=dotted];
m9_36 -> m9_37  [color=red, key=0, style=solid];
m9_36 -> m9_74  [color=red, key=2, style=dotted];
m9_37 -> m9_38  [color=red, key=0, style=solid];
m9_37 -> m9_74  [color=red, key=2, style=dotted];
m9_38 -> m9_39  [color=red, key=0, style=solid];
m9_38 -> m9_74  [color=red, key=2, style=dotted];
m9_39 -> m9_40  [color=red, key=0, style=solid];
m9_39 -> m9_74  [color=red, key=2, style=dotted];
m9_40 -> m9_41  [color=red, key=0, style=solid];
m9_40 -> m9_74  [color=red, key=2, style=dotted];
m9_41 -> m9_42  [color=red, key=0, style=solid];
m9_41 -> m9_74  [color=red, key=2, style=dotted];
m9_42 -> m9_43  [color=red, key=0, style=solid];
m9_42 -> m9_74  [color=red, key=2, style=dotted];
m9_43 -> m9_44  [color=red, key=0, style=solid];
m9_43 -> m9_74  [color=red, key=2, style=dotted];
m9_44 -> m9_45  [color=red, key=0, style=solid];
m9_44 -> m9_74  [color=red, key=2, style=dotted];
m9_45 -> m9_46  [color=red, key=0, style=solid];
m9_45 -> m9_74  [color=red, key=2, style=dotted];
m9_46 -> m9_47  [color=red, key=0, style=solid];
m9_46 -> m9_74  [color=red, key=2, style=dotted];
m9_47 -> m9_48  [color=red, key=0, style=solid];
m9_47 -> m9_75  [color=red, key=2, style=dotted];
m9_48 -> m9_49  [color=red, key=0, style=solid];
m9_48 -> m9_75  [color=red, key=2, style=dotted];
m9_49 -> m9_50  [color=red, key=0, style=solid];
m9_49 -> m9_75  [color=red, key=2, style=dotted];
m9_50 -> m9_51  [color=red, key=0, style=solid];
m9_50 -> m9_75  [color=red, key=2, style=dotted];
m9_51 -> m9_52  [color=red, key=0, style=solid];
m9_51 -> m9_75  [color=red, key=2, style=dotted];
m9_52 -> m9_53  [color=red, key=0, style=solid];
m9_52 -> m9_75  [color=red, key=2, style=dotted];
m9_53 -> m9_54  [color=red, key=0, style=solid];
m9_53 -> m9_75  [color=red, key=2, style=dotted];
m9_54 -> m9_55  [color=red, key=0, style=solid];
m9_54 -> m9_75  [color=red, key=2, style=dotted];
m9_55 -> m9_56  [color=red, key=0, style=solid];
m9_55 -> m9_75  [color=red, key=2, style=dotted];
m9_56 -> m9_57  [color=red, key=0, style=solid];
m9_56 -> m9_76  [color=red, key=2, style=dotted];
m9_57 -> m9_58  [color=red, key=0, style=solid];
m9_57 -> m9_76  [color=red, key=2, style=dotted];
m9_58 -> m9_59  [color=red, key=0, style=solid];
m9_58 -> m9_76  [color=red, key=2, style=dotted];
m9_59 -> m9_60  [color=red, key=0, style=solid];
m9_59 -> m9_76  [color=red, key=2, style=dotted];
m9_60 -> m9_61  [color=red, key=0, style=solid];
m9_60 -> m9_76  [color=red, key=2, style=dotted];
m9_61 -> m9_62  [color=red, key=0, style=solid];
m9_61 -> m9_76  [color=red, key=2, style=dotted];
m9_62 -> m9_63  [color=red, key=0, style=solid];
m9_62 -> m9_76  [color=red, key=2, style=dotted];
m9_63 -> m9_64  [color=red, key=0, style=solid];
m9_63 -> m9_76  [color=red, key=2, style=dotted];
m9_64 -> m9_65  [color=red, key=0, style=solid];
m9_64 -> m9_76  [color=red, key=2, style=dotted];
m9_65 -> m9_66  [color=red, key=0, style=solid];
m9_65 -> m9_76  [color=red, key=2, style=dotted];
m9_66 -> m9_67  [color=red, key=0, style=solid];
m9_66 -> m9_76  [color=red, key=2, style=dotted];
m9_67 -> m9_68  [color=red, key=0, style=solid];
m9_67 -> m9_76  [color=red, key=2, style=dotted];
m9_68 -> m9_69  [color=red, key=0, style=solid];
m9_68 -> m9_76  [color=red, key=2, style=dotted];
m9_69 -> m9_70  [color=red, key=0, style=solid];
m9_69 -> m9_76  [color=red, key=2, style=dotted];
m9_70 -> m9_71  [color=red, key=0, style=solid];
m9_70 -> m9_76  [color=red, key=2, style=dotted];
m9_71 -> m9_0  [color=blue, key=0, style=bold];
m12_71 -> m12_72  [key=0, style=solid];
m12_72 -> m12_73  [key=0, style=solid];
m12_72 -> m12_76  [key=2, style=dotted];
m12_72 -> m12_74  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m12_73 -> m12_74  [key=0, style=solid];
m12_73 -> m12_0  [key=2, style=dotted];
m12_74 -> m12_75  [key=0, style=solid];
m12_74 -> m12_39  [key=2, style=dotted];
m12_75 -> m12_71  [color=blue, key=0, style=bold];
m12_295 -> m12_296  [key=0, style=solid];
m12_295 -> m12_297  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_296 -> m12_297  [key=0, style=solid];
m12_296 -> m12_0  [key=2, style=dotted];
m12_297 -> m12_298  [key=0, style=solid];
m12_297 -> m12_39  [key=2, style=dotted];
m12_298 -> m12_295  [color=blue, key=0, style=bold];
m12_184 -> m12_185  [key=0, style=solid];
m12_185 -> m12_186  [key=0, style=solid];
m12_185 -> m12_183  [key=2, style=dotted];
m12_185 -> m12_187  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m12_186 -> m12_187  [key=0, style=solid];
m12_186 -> m12_0  [key=2, style=dotted];
m12_187 -> m12_188  [key=0, style=solid];
m12_187 -> m12_39  [key=2, style=dotted];
m12_188 -> m12_184  [color=blue, key=0, style=bold];
m12_233 -> m12_234  [key=0, style=solid];
m12_234 -> m12_235  [key=0, style=solid];
m12_234 -> m12_234  [color=darkorchid, key=3, label="Local variable System.Action test", style=bold];
m12_235 -> m12_236  [key=0, style=solid];
m12_235 -> m12_237  [key=2, style=dotted];
m12_236 -> m12_233  [color=blue, key=0, style=bold];
m12_317 -> m12_318  [key=0, style=solid];
m12_318 -> m12_319  [key=0, style=solid];
m12_318 -> m12_322  [key=2, style=dotted];
m12_318 -> m12_320  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m12_319 -> m12_320  [key=0, style=solid];
m12_319 -> m12_0  [key=2, style=dotted];
m12_320 -> m12_321  [key=0, style=solid];
m12_320 -> m12_39  [key=2, style=dotted];
m12_321 -> m12_317  [color=blue, key=0, style=bold];
m12_207 -> m12_208  [key=0, style=solid];
m12_208 -> m12_209  [key=0, style=solid];
m12_208 -> m12_76  [key=2, style=dotted];
m12_208 -> m12_210  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m12_209 -> m12_210  [key=0, style=solid];
m12_209 -> m12_0  [key=2, style=dotted];
m12_210 -> m12_211  [key=0, style=solid];
m12_210 -> m12_39  [key=2, style=dotted];
m12_211 -> m12_207  [color=blue, key=0, style=bold];
m12_91 -> m12_92  [key=0, style=solid];
m12_91 -> m12_93  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Colors", style=dashed];
m12_92 -> m12_93  [key=0, style=solid];
m12_92 -> m12_15  [key=2, style=dotted];
m12_93 -> m12_94  [key=0, style=solid];
m12_93 -> m12_39  [key=2, style=dotted];
m12_93 -> m12_93  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Colors", style=dashed];
m12_94 -> m12_91  [color=blue, key=0, style=bold];
m12_162 -> m12_163  [key=0, style=solid];
m12_163 -> m12_164  [key=0, style=solid];
m12_163 -> m12_167  [key=2, style=dotted];
m12_163 -> m12_70  [key=2, style=dotted];
m12_163 -> m12_165  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m12_164 -> m12_165  [key=0, style=solid];
m12_164 -> m12_0  [key=2, style=dotted];
m12_165 -> m12_166  [key=0, style=solid];
m12_165 -> m12_39  [key=2, style=dotted];
m12_166 -> m12_162  [color=blue, key=0, style=bold];
m12_267 -> m12_268  [key=0, style=solid];
m12_267 -> m12_269  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_267 -> m12_272  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_268 -> m12_269  [key=0, style=solid];
m12_268 -> m12_0  [key=2, style=dotted];
m12_269 -> m12_270  [key=0, style=solid];
m12_269 -> m12_262  [key=2, style=dotted];
m12_269 -> m12_263  [key=2, style=dotted];
m12_269 -> m12_271  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_270 -> m12_267  [color=blue, key=0, style=bold];
m12_117 -> m12_118  [key=0, style=solid];
m12_117 -> m12_119  [color=darkseagreen4, key=1, label="long[]", style=dashed];
m12_118 -> m12_119  [key=0, style=solid];
m12_118 -> m12_0  [key=2, style=dotted];
m12_119 -> m12_120  [key=0, style=solid];
m12_119 -> m12_39  [key=2, style=dotted];
m12_120 -> m12_117  [color=blue, key=0, style=bold];
m12_156 -> m12_157  [key=0, style=solid];
m12_157 -> m12_158  [key=0, style=solid];
m12_157 -> m12_161  [key=2, style=dotted];
m12_157 -> m12_159  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m12_158 -> m12_159  [key=0, style=solid];
m12_158 -> m12_0  [key=2, style=dotted];
m12_159 -> m12_160  [key=0, style=solid];
m12_159 -> m12_39  [key=2, style=dotted];
m12_160 -> m12_156  [color=blue, key=0, style=bold];
m12_198 -> m12_199  [key=0, style=solid];
m12_199 -> m12_200  [key=0, style=solid];
m12_199 -> m12_167  [key=2, style=dotted];
m12_199 -> m12_201  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m12_200 -> m12_201  [key=0, style=solid];
m12_200 -> m12_0  [key=2, style=dotted];
m12_201 -> m12_202  [key=0, style=solid];
m12_201 -> m12_39  [key=2, style=dotted];
m12_202 -> m12_198  [color=blue, key=0, style=bold];
m12_281 -> m12_282  [key=0, style=solid];
m12_281 -> m12_283  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_281 -> m12_286  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_282 -> m12_283  [key=0, style=solid];
m12_282 -> m12_0  [key=2, style=dotted];
m12_283 -> m12_284  [key=0, style=solid];
m12_283 -> m12_262  [key=2, style=dotted];
m12_283 -> m12_263  [key=2, style=dotted];
m12_283 -> m12_285  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_284 -> m12_281  [color=blue, key=0, style=bold];
m12_60 -> m12_61  [key=0, style=solid];
m12_60 -> m12_62  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m12_61 -> m12_62  [key=0, style=solid];
m12_61 -> m12_0  [key=2, style=dotted];
m12_62 -> m12_63  [key=0, style=solid];
m12_62 -> m12_39  [key=2, style=dotted];
m12_63 -> m12_60  [color=blue, key=0, style=bold];
m12_100 -> m12_0  [color=darkorchid, key=3, label="Local variable CommandLine.ParserResult<CommandLine.Tests.Fakes.Simple_Options_With_Values> result", style=bold];
m12_87 -> m12_88  [key=0, style=solid];
m12_87 -> m12_89  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Colors", style=dashed];
m12_88 -> m12_89  [key=0, style=solid];
m12_88 -> m12_0  [key=2, style=dotted];
m12_89 -> m12_90  [key=0, style=solid];
m12_89 -> m12_39  [key=2, style=dotted];
m12_89 -> m12_89  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Colors", style=dashed];
m12_90 -> m12_87  [color=blue, key=0, style=bold];
m12_40 -> m12_41  [key=0, style=solid];
m12_40 -> m12_42  [color=darkseagreen4, key=1, label=long, style=dashed];
m12_41 -> m12_42  [key=0, style=solid];
m12_41 -> m12_0  [key=2, style=dotted];
m12_42 -> m12_43  [key=0, style=solid];
m12_42 -> m12_39  [key=2, style=dotted];
m12_43 -> m12_40  [color=blue, key=0, style=bold];
m12_313 -> m12_314  [key=0, style=solid];
m12_313 -> m12_315  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Options_With_Scalar_Value_And_Adjacent_SequenceString", style=dashed];
m12_314 -> m12_315  [key=0, style=solid];
m12_314 -> m12_0  [key=2, style=dotted];
m12_315 -> m12_316  [key=0, style=solid];
m12_315 -> m12_39  [key=2, style=dotted];
m12_316 -> m12_313  [color=blue, key=0, style=bold];
m12_216 -> m12_217  [key=0, style=solid];
m12_216 -> m12_218  [color=darkseagreen4, key=1, label="long?", style=dashed];
m12_217 -> m12_218  [key=0, style=solid];
m12_217 -> m12_0  [key=2, style=dotted];
m12_218 -> m12_219  [key=0, style=solid];
m12_218 -> m12_39  [key=2, style=dotted];
m12_219 -> m12_216  [color=blue, key=0, style=bold];
m12_332 -> m12_333  [key=0, style=solid];
m12_332 -> m12_334  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Immutable_Simple_Options", style=dashed];
m12_333 -> m12_334  [key=0, style=solid];
m12_333 -> m12_24  [key=2, style=dotted];
m12_334 -> m12_335  [key=0, style=solid];
m12_334 -> m12_39  [key=2, style=dotted];
m12_335 -> m12_332  [color=blue, key=0, style=bold];
m12_241 -> m12_242  [key=0, style=solid];
m12_242 -> m12_243  [key=0, style=solid];
m12_242 -> m12_242  [color=darkorchid, key=3, label="Local variable System.Action test", style=bold];
m12_243 -> m12_244  [key=0, style=solid];
m12_243 -> m12_237  [key=2, style=dotted];
m12_244 -> m12_241  [color=blue, key=0, style=bold];
m12_101 -> m12_102  [key=0, style=solid];
m12_102 -> m12_103  [key=0, style=solid];
m12_102 -> m12_100  [key=2, style=dotted];
m12_102 -> m12_70  [key=2, style=dotted];
m12_102 -> m12_104  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m12_103 -> m12_104  [key=0, style=solid];
m12_103 -> m12_0  [key=2, style=dotted];
m12_104 -> m12_105  [key=0, style=solid];
m12_104 -> m12_39  [key=2, style=dotted];
m12_105 -> m12_101  [color=blue, key=0, style=bold];
m12_220 -> m12_221  [key=0, style=solid];
m12_220 -> m12_223  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_220 -> m12_224  [color=darkseagreen4, key=1, label=bool, style=dashed];
m12_221 -> m12_222  [key=0, style=solid];
m12_221 -> m12_0  [key=2, style=dotted];
m12_221 -> m12_223  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_221 -> m12_224  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_223 -> m12_224  [key=0, style=solid];
m12_223 -> m12_39  [key=2, style=dotted];
m12_224 -> m12_225  [key=0, style=solid];
m12_224 -> m12_226  [key=2, style=dotted];
m12_224 -> m12_39  [key=2, style=dotted];
m12_222 -> m12_223  [key=0, style=solid];
m12_222 -> m12_224  [key=0, style=solid];
m12_225 -> m12_220  [color=blue, key=0, style=bold];
m12_24 -> m12_25  [key=0, style=solid];
m12_24 -> m12_332  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m12_25 -> m12_26  [key=0, style=solid];
m12_25 -> m12_27  [key=2, style=dotted];
m12_25 -> m12_4  [key=2, style=dotted];
m12_25 -> m12_5  [key=2, style=dotted];
m12_25 -> m12_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_26 -> m12_24  [color=blue, key=0, style=bold];
m12_194 -> m12_195  [key=0, style=solid];
m12_194 -> m12_196  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_195 -> m12_196  [key=0, style=solid];
m12_195 -> m12_0  [key=2, style=dotted];
m12_196 -> m12_197  [key=0, style=solid];
m12_196 -> m12_39  [key=2, style=dotted];
m12_197 -> m12_194  [color=blue, key=0, style=bold];
m12_106 -> m12_107  [key=0, style=solid];
m12_107 -> m12_108  [key=0, style=solid];
m12_107 -> m12_100  [key=2, style=dotted];
m12_107 -> m12_70  [key=2, style=dotted];
m12_107 -> m12_109  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m12_108 -> m12_109  [key=0, style=solid];
m12_108 -> m12_0  [key=2, style=dotted];
m12_109 -> m12_110  [key=0, style=solid];
m12_109 -> m12_39  [key=2, style=dotted];
m12_110 -> m12_106  [color=blue, key=0, style=bold];
m12_125 -> m12_126  [key=0, style=solid];
m12_125 -> m12_127  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m12_126 -> m12_127  [key=0, style=solid];
m12_126 -> m12_0  [key=2, style=dotted];
m12_127 -> m12_128  [key=0, style=solid];
m12_127 -> m12_39  [key=2, style=dotted];
m12_128 -> m12_125  [color=blue, key=0, style=bold];
m12_95 -> m12_96  [key=0, style=solid];
m12_96 -> m12_97  [key=0, style=solid];
m12_96 -> m12_100  [key=2, style=dotted];
m12_96 -> m12_70  [key=2, style=dotted];
m12_96 -> m12_98  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m12_97 -> m12_98  [key=0, style=solid];
m12_97 -> m12_0  [key=2, style=dotted];
m12_98 -> m12_99  [key=0, style=solid];
m12_98 -> m12_39  [key=2, style=dotted];
m12_99 -> m12_95  [color=blue, key=0, style=bold];
m12_82 -> m12_83  [key=0, style=solid];
m12_83 -> m12_84  [key=0, style=solid];
m12_83 -> m12_76  [key=2, style=dotted];
m12_83 -> m12_85  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m12_84 -> m12_85  [key=0, style=solid];
m12_84 -> m12_0  [key=2, style=dotted];
m12_85 -> m12_86  [key=0, style=solid];
m12_85 -> m12_39  [key=2, style=dotted];
m12_86 -> m12_82  [color=blue, key=0, style=bold];
m12_56 -> m12_57  [key=0, style=solid];
m12_56 -> m12_58  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m12_57 -> m12_58  [key=0, style=solid];
m12_57 -> m12_0  [key=2, style=dotted];
m12_58 -> m12_59  [key=0, style=solid];
m12_58 -> m12_39  [key=2, style=dotted];
m12_59 -> m12_56  [color=blue, key=0, style=bold];
m12_299 -> m12_300  [key=0, style=solid];
m12_299 -> m12_301  [color=darkseagreen4, key=1, label="CommandLine.ParserResultType", style=dashed];
m12_299 -> m12_302  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_299 -> m12_307  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_299 -> m12_303  [color=darkseagreen4, key=1, label="CommandLine.ParserResultType", style=dashed];
m12_300 -> m12_301  [key=0, style=solid];
m12_300 -> m12_0  [key=2, style=dotted];
m12_300 -> m12_302  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_300 -> m12_304  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_301 -> m12_302  [key=0, style=solid];
m12_301 -> m12_303  [key=0, style=solid];
m12_302 -> m12_305  [key=0, style=solid];
m12_302 -> m12_262  [key=2, style=dotted];
m12_302 -> m12_263  [key=2, style=dotted];
m12_302 -> m12_306  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_303 -> m12_304  [key=0, style=solid];
m12_303 -> m12_305  [key=0, style=solid];
m12_304 -> m12_305  [key=0, style=solid];
m12_304 -> m12_262  [key=2, style=dotted];
m12_304 -> m12_237  [key=2, style=dotted];
m12_305 -> m12_299  [color=blue, key=0, style=bold];
m12_344 -> m12_345  [key=0, style=solid];
m12_344 -> m12_346  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_345 -> m12_346  [key=0, style=solid];
m12_345 -> m12_0  [key=2, style=dotted];
m12_346 -> m12_347  [key=0, style=solid];
m12_346 -> m12_39  [key=2, style=dotted];
m12_347 -> m12_344  [color=blue, key=0, style=bold];
m12_329 -> m12_330  [key=0, style=solid];
m12_6 -> m12_7  [key=0, style=solid];
m12_10 -> m12_11  [key=0, style=solid];
m12_7 -> m12_8  [key=0, style=solid];
m12_7 -> m12_9  [key=2, style=dotted];
m12_8 -> m12_6  [color=blue, key=0, style=bold];
m12_11 -> m12_12  [key=0, style=solid];
m12_11 -> m12_13  [key=2, style=dotted];
m12_11 -> m12_14  [key=2, style=dotted];
m12_12 -> m12_10  [color=blue, key=0, style=bold];
m12_18 -> m12_19  [key=0, style=solid];
m12_21 -> m12_22  [key=0, style=solid];
m12_19 -> m12_20  [key=0, style=solid];
m12_19 -> m12_9  [key=2, style=dotted];
m12_20 -> m12_18  [color=blue, key=0, style=bold];
m12_22 -> m12_23  [key=0, style=solid];
m12_22 -> m12_13  [key=2, style=dotted];
m12_22 -> m12_14  [key=2, style=dotted];
m12_23 -> m12_21  [color=blue, key=0, style=bold];
m12_28 -> m12_29  [key=0, style=solid];
m12_29 -> m12_30  [key=0, style=solid];
m12_29 -> m12_13  [key=2, style=dotted];
m12_29 -> m12_14  [key=2, style=dotted];
m12_30 -> m12_28  [color=blue, key=0, style=bold];
m12_135 -> m12_136  [key=0, style=solid];
m12_138 -> m12_139  [key=0, style=solid];
m12_138 -> m12_143  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m12_138 -> m12_147  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m12_136 -> m12_137  [key=0, style=solid];
m12_136 -> m12_116  [key=2, style=dotted];
m12_137 -> m12_135  [color=blue, key=0, style=bold];
m12_139 -> m12_140  [key=0, style=solid];
m12_139 -> m12_141  [key=2, style=dotted];
m12_139 -> m12_142  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_143 -> m12_144  [key=0, style=solid];
m12_143 -> m12_145  [key=2, style=dotted];
m12_143 -> m12_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_147 -> m12_148  [key=0, style=solid];
m12_147 -> m12_149  [key=2, style=dotted];
m12_140 -> m12_138  [color=blue, key=0, style=bold];
m12_142 -> m12_143  [key=0, style=solid];
m12_144 -> m12_142  [color=blue, key=0, style=bold];
m12_146 -> m12_147  [key=0, style=solid];
m12_148 -> m12_146  [color=blue, key=0, style=bold];
m12_238 -> m12_239  [key=0, style=solid];
m12_239 -> m12_240  [key=0, style=solid];
m12_239 -> m12_0  [key=2, style=dotted];
m12_240 -> m12_238  [color=blue, key=0, style=bold];
m12_245 -> m12_246  [key=0, style=solid];
m12_246 -> m12_247  [key=0, style=solid];
m12_246 -> m12_0  [key=2, style=dotted];
m12_247 -> m12_245  [color=blue, key=0, style=bold];
m12_252 -> m12_253  [key=0, style=solid];
m12_253 -> m12_254  [key=0, style=solid];
m12_253 -> m12_0  [key=2, style=dotted];
m12_254 -> m12_252  [color=blue, key=0, style=bold];
m12_265 -> m12_266  [key=0, style=solid];
m12_264 -> m12_265  [key=0, style=solid];
m12_266 -> m12_264  [color=blue, key=0, style=bold];
m12_272 -> m12_273  [key=0, style=solid];
m12_271 -> m12_272  [key=0, style=solid];
m12_273 -> m12_271  [color=blue, key=0, style=bold];
m12_279 -> m12_280  [key=0, style=solid];
m12_278 -> m12_279  [key=0, style=solid];
m12_280 -> m12_278  [color=blue, key=0, style=bold];
m12_286 -> m12_287  [key=0, style=solid];
m12_285 -> m12_286  [key=0, style=solid];
m12_287 -> m12_285  [color=blue, key=0, style=bold];
m12_293 -> m12_294  [key=0, style=solid];
m12_292 -> m12_293  [key=0, style=solid];
m12_294 -> m12_292  [color=blue, key=0, style=bold];
m12_307 -> m12_308  [key=0, style=solid];
m12_306 -> m12_307  [key=0, style=solid];
m12_308 -> m12_306  [color=blue, key=0, style=bold];
m12_330 -> m12_331  [key=0, style=solid];
m12_331 -> m12_329  [color=blue, key=0, style=bold];
m12_288 -> m12_289  [key=0, style=solid];
m12_288 -> m12_290  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_288 -> m12_293  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_289 -> m12_290  [key=0, style=solid];
m12_289 -> m12_0  [key=2, style=dotted];
m12_290 -> m12_291  [key=0, style=solid];
m12_290 -> m12_262  [key=2, style=dotted];
m12_290 -> m12_263  [key=2, style=dotted];
m12_290 -> m12_292  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_291 -> m12_288  [color=blue, key=0, style=bold];
m12_64 -> m12_65  [key=0, style=solid];
m12_65 -> m12_66  [key=0, style=solid];
m12_65 -> m12_69  [key=2, style=dotted];
m12_65 -> m12_70  [key=2, style=dotted];
m12_65 -> m12_67  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m12_66 -> m12_67  [key=0, style=solid];
m12_66 -> m12_0  [key=2, style=dotted];
m12_67 -> m12_68  [key=0, style=solid];
m12_67 -> m12_39  [key=2, style=dotted];
m12_68 -> m12_64  [color=blue, key=0, style=bold];
m12_121 -> m12_122  [key=0, style=solid];
m12_121 -> m12_123  [color=darkseagreen4, key=1, label="long[]", style=dashed];
m12_122 -> m12_123  [key=0, style=solid];
m12_122 -> m12_0  [key=2, style=dotted];
m12_123 -> m12_124  [key=0, style=solid];
m12_123 -> m12_39  [key=2, style=dotted];
m12_124 -> m12_121  [color=blue, key=0, style=bold];
m12_248 -> m12_249  [key=0, style=solid];
m12_249 -> m12_250  [key=0, style=solid];
m12_249 -> m12_249  [color=darkorchid, key=3, label="Local variable System.Action test", style=bold];
m12_250 -> m12_251  [key=0, style=solid];
m12_250 -> m12_237  [key=2, style=dotted];
m12_251 -> m12_248  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_0 -> m12_40  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m12_0 -> m12_44  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m12_0 -> m12_48  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m12_0 -> m12_52  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m12_0 -> m12_56  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m12_0 -> m12_60  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m12_0 -> m12_87  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m12_0 -> m12_117  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m12_0 -> m12_121  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m12_0 -> m12_125  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m12_0 -> m12_194  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m12_0 -> m12_203  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m12_0 -> m12_212  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m12_0 -> m12_216  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m12_0 -> m12_220  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m12_0 -> m12_227  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m12_0 -> m12_255  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m12_0 -> m12_267  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m12_0 -> m12_274  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m12_0 -> m12_281  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m12_0 -> m12_288  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m12_0 -> m12_295  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m12_0 -> m12_299  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m12_0 -> m12_309  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m12_0 -> m12_313  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m12_0 -> m12_323  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m12_0 -> m12_344  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m12_0 -> m12_348  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_3  [key=2, style=dotted];
m12_1 -> m12_4  [key=2, style=dotted];
m12_1 -> m12_5  [key=2, style=dotted];
m12_1 -> m12_6  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_1 -> m12_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_2 -> m12_0  [color=blue, key=0, style=bold];
m12_309 -> m12_310  [key=0, style=solid];
m12_309 -> m12_311  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Options_With_Required_Set_To_True_For_Values", style=dashed];
m12_310 -> m12_311  [key=0, style=solid];
m12_310 -> m12_0  [key=2, style=dotted];
m12_311 -> m12_312  [key=0, style=solid];
m12_311 -> m12_39  [key=2, style=dotted];
m12_312 -> m12_309  [color=blue, key=0, style=bold];
m12_227 -> m12_228  [key=0, style=solid];
m12_227 -> m12_230  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_227 -> m12_231  [color=darkseagreen4, key=1, label=bool, style=dashed];
m12_228 -> m12_229  [key=0, style=solid];
m12_228 -> m12_0  [key=2, style=dotted];
m12_228 -> m12_230  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_228 -> m12_231  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_230 -> m12_231  [key=0, style=solid];
m12_230 -> m12_39  [key=2, style=dotted];
m12_231 -> m12_232  [key=0, style=solid];
m12_231 -> m12_226  [key=2, style=dotted];
m12_231 -> m12_39  [key=2, style=dotted];
m12_229 -> m12_230  [key=0, style=solid];
m12_229 -> m12_231  [key=0, style=solid];
m12_232 -> m12_227  [color=blue, key=0, style=bold];
m12_336 -> m12_337  [key=0, style=solid];
m12_337 -> m12_338  [key=0, style=solid];
m12_337 -> m12_341  [key=2, style=dotted];
m12_337 -> m12_342  [key=2, style=dotted];
m12_337 -> m12_343  [key=2, style=dotted];
m12_337 -> m12_339  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m12_338 -> m12_339  [key=0, style=solid];
m12_338 -> m12_0  [key=2, style=dotted];
m12_339 -> m12_340  [key=0, style=solid];
m12_339 -> m12_39  [key=2, style=dotted];
m12_340 -> m12_336  [color=blue, key=0, style=bold];
m12_44 -> m12_45  [key=0, style=solid];
m12_44 -> m12_46  [color=darkseagreen4, key=1, label=double, style=dashed];
m12_45 -> m12_46  [key=0, style=solid];
m12_45 -> m12_0  [key=2, style=dotted];
m12_46 -> m12_47  [key=0, style=solid];
m12_46 -> m12_39  [key=2, style=dotted];
m12_47 -> m12_44  [color=blue, key=0, style=bold];
m12_274 -> m12_275  [key=0, style=solid];
m12_274 -> m12_276  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_274 -> m12_279  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_275 -> m12_276  [key=0, style=solid];
m12_275 -> m12_0  [key=2, style=dotted];
m12_276 -> m12_277  [key=0, style=solid];
m12_276 -> m12_262  [key=2, style=dotted];
m12_276 -> m12_263  [key=2, style=dotted];
m12_276 -> m12_278  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_277 -> m12_274  [color=blue, key=0, style=bold];
m12_15 -> m12_16  [key=0, style=solid];
m12_15 -> m12_91  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m12_16 -> m12_17  [key=0, style=solid];
m12_16 -> m12_3  [key=2, style=dotted];
m12_16 -> m12_4  [key=2, style=dotted];
m12_16 -> m12_5  [key=2, style=dotted];
m12_16 -> m12_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_16 -> m12_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_17 -> m12_15  [color=blue, key=0, style=bold];
m12_52 -> m12_53  [key=0, style=solid];
m12_52 -> m12_54  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m12_53 -> m12_54  [key=0, style=solid];
m12_53 -> m12_0  [key=2, style=dotted];
m12_54 -> m12_55  [key=0, style=solid];
m12_54 -> m12_39  [key=2, style=dotted];
m12_55 -> m12_52  [color=blue, key=0, style=bold];
m12_111 -> m12_112  [key=0, style=solid];
m12_112 -> m12_113  [key=0, style=solid];
m12_112 -> m12_116  [key=2, style=dotted];
m12_112 -> m12_114  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m12_113 -> m12_114  [key=0, style=solid];
m12_113 -> m12_0  [key=2, style=dotted];
m12_114 -> m12_115  [key=0, style=solid];
m12_114 -> m12_39  [key=2, style=dotted];
m12_115 -> m12_111  [color=blue, key=0, style=bold];
m12_173 -> m12_174  [key=0, style=solid];
m12_174 -> m12_175  [key=0, style=solid];
m12_174 -> m12_76  [key=2, style=dotted];
m12_174 -> m12_70  [key=2, style=dotted];
m12_174 -> m12_176  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m12_175 -> m12_176  [key=0, style=solid];
m12_175 -> m12_0  [key=2, style=dotted];
m12_176 -> m12_177  [key=0, style=solid];
m12_176 -> m12_39  [key=2, style=dotted];
m12_177 -> m12_173  [color=blue, key=0, style=bold];
m12_203 -> m12_204  [key=0, style=solid];
m12_203 -> m12_205  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_204 -> m12_205  [key=0, style=solid];
m12_204 -> m12_0  [key=2, style=dotted];
m12_205 -> m12_206  [key=0, style=solid];
m12_205 -> m12_39  [key=2, style=dotted];
m12_206 -> m12_203  [color=blue, key=0, style=bold];
m12_255 -> m12_256  [key=0, style=solid];
m12_255 -> m12_257  [color=darkseagreen4, key=1, label="CommandLine.ParserResultType", style=dashed];
m12_255 -> m12_258  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_255 -> m12_265  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_255 -> m12_259  [color=darkseagreen4, key=1, label="CommandLine.ParserResultType", style=dashed];
m12_256 -> m12_257  [key=0, style=solid];
m12_256 -> m12_0  [key=2, style=dotted];
m12_256 -> m12_258  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_256 -> m12_260  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_257 -> m12_258  [key=0, style=solid];
m12_257 -> m12_259  [key=0, style=solid];
m12_258 -> m12_261  [key=0, style=solid];
m12_258 -> m12_262  [key=2, style=dotted];
m12_258 -> m12_263  [key=2, style=dotted];
m12_258 -> m12_264  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_259 -> m12_260  [key=0, style=solid];
m12_259 -> m12_261  [key=0, style=solid];
m12_260 -> m12_261  [key=0, style=solid];
m12_260 -> m12_262  [key=2, style=dotted];
m12_260 -> m12_237  [key=2, style=dotted];
m12_261 -> m12_255  [color=blue, key=0, style=bold];
m12_150 -> m12_151  [key=0, style=solid];
m12_151 -> m12_152  [key=0, style=solid];
m12_151 -> m12_155  [key=2, style=dotted];
m12_151 -> m12_70  [key=2, style=dotted];
m12_151 -> m12_153  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m12_152 -> m12_153  [key=0, style=solid];
m12_152 -> m12_0  [key=2, style=dotted];
m12_153 -> m12_154  [key=0, style=solid];
m12_153 -> m12_39  [key=2, style=dotted];
m12_154 -> m12_150  [color=blue, key=0, style=bold];
m12_129 -> m12_130  [key=0, style=solid];
m12_130 -> m12_131  [key=0, style=solid];
m12_130 -> m12_116  [key=2, style=dotted];
m12_130 -> m12_133  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m12_131 -> m12_132  [key=0, style=solid];
m12_133 -> m12_134  [key=0, style=solid];
m12_133 -> m12_39  [key=2, style=dotted];
m12_132 -> m12_133  [key=0, style=solid];
m12_132 -> m12_3  [key=2, style=dotted];
m12_132 -> m12_4  [key=2, style=dotted];
m12_132 -> m12_5  [key=2, style=dotted];
m12_132 -> m12_135  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_132 -> m12_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_134 -> m12_129  [color=blue, key=0, style=bold];
m12_189 -> m12_190  [key=0, style=solid];
m12_190 -> m12_191  [key=0, style=solid];
m12_190 -> m12_183  [key=2, style=dotted];
m12_190 -> m12_192  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m12_191 -> m12_192  [key=0, style=solid];
m12_191 -> m12_0  [key=2, style=dotted];
m12_192 -> m12_193  [key=0, style=solid];
m12_192 -> m12_39  [key=2, style=dotted];
m12_193 -> m12_189  [color=blue, key=0, style=bold];
m12_212 -> m12_213  [key=0, style=solid];
m12_212 -> m12_214  [color=darkseagreen4, key=1, label="int?", style=dashed];
m12_213 -> m12_214  [key=0, style=solid];
m12_213 -> m12_0  [key=2, style=dotted];
m12_214 -> m12_215  [key=0, style=solid];
m12_214 -> m12_39  [key=2, style=dotted];
m12_215 -> m12_212  [color=blue, key=0, style=bold];
m12_31 -> m12_32  [key=0, style=solid];
m12_32 -> m12_33  [key=0, style=solid];
m12_32 -> m12_36  [key=2, style=dotted];
m12_32 -> m12_37  [key=2, style=dotted];
m12_32 -> m12_38  [key=2, style=dotted];
m12_32 -> m12_34  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m12_33 -> m12_34  [key=0, style=solid];
m12_33 -> m12_0  [key=2, style=dotted];
m12_34 -> m12_35  [key=0, style=solid];
m12_34 -> m12_39  [key=2, style=dotted];
m12_35 -> m12_31  [color=blue, key=0, style=bold];
m12_323 -> m12_324  [key=0, style=solid];
m12_323 -> m12_326  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_323 -> m12_330  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_324 -> m12_325  [key=0, style=solid];
m12_324 -> m12_0  [key=2, style=dotted];
m12_326 -> m12_327  [key=0, style=solid];
m12_326 -> m12_328  [key=2, style=dotted];
m12_326 -> m12_262  [key=2, style=dotted];
m12_326 -> m12_263  [key=2, style=dotted];
m12_326 -> m12_329  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_325 -> m12_326  [key=0, style=solid];
m12_327 -> m12_323  [color=blue, key=0, style=bold];
m12_178 -> m12_179  [key=0, style=solid];
m12_179 -> m12_180  [key=0, style=solid];
m12_179 -> m12_183  [key=2, style=dotted];
m12_179 -> m12_181  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m12_180 -> m12_181  [key=0, style=solid];
m12_180 -> m12_0  [key=2, style=dotted];
m12_181 -> m12_182  [key=0, style=solid];
m12_181 -> m12_39  [key=2, style=dotted];
m12_182 -> m12_178  [color=blue, key=0, style=bold];
m12_77 -> m12_78  [key=0, style=solid];
m12_78 -> m12_79  [key=0, style=solid];
m12_78 -> m12_76  [key=2, style=dotted];
m12_78 -> m12_70  [key=2, style=dotted];
m12_78 -> m12_80  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m12_79 -> m12_80  [key=0, style=solid];
m12_79 -> m12_0  [key=2, style=dotted];
m12_80 -> m12_81  [key=0, style=solid];
m12_80 -> m12_39  [key=2, style=dotted];
m12_81 -> m12_77  [color=blue, key=0, style=bold];
m12_168 -> m12_169  [key=0, style=solid];
m12_169 -> m12_170  [key=0, style=solid];
m12_169 -> m12_167  [key=2, style=dotted];
m12_169 -> m12_70  [key=2, style=dotted];
m12_169 -> m12_171  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m12_170 -> m12_171  [key=0, style=solid];
m12_170 -> m12_0  [key=2, style=dotted];
m12_171 -> m12_172  [key=0, style=solid];
m12_171 -> m12_39  [key=2, style=dotted];
m12_172 -> m12_168  [color=blue, key=0, style=bold];
m12_48 -> m12_49  [key=0, style=solid];
m12_48 -> m12_50  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m12_49 -> m12_50  [key=0, style=solid];
m12_49 -> m12_0  [key=2, style=dotted];
m12_50 -> m12_51  [key=0, style=solid];
m12_50 -> m12_39  [key=2, style=dotted];
m12_51 -> m12_48  [color=blue, key=0, style=bold];
m12_348 -> m12_349  [key=0, style=solid];
m12_348 -> m12_350  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Options_With_Guid", style=dashed];
m12_349 -> m12_350  [key=0, style=solid];
m12_349 -> m12_0  [key=2, style=dotted];
m12_350 -> m12_351  [key=0, style=solid];
m12_350 -> m12_39  [key=2, style=dotted];
m12_351 -> m12_348  [color=blue, key=0, style=bold];
m12_352 -> m12_143  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m12_352 -> m12_147  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m12_353 -> m12_265  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_354 -> m12_272  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_355 -> m12_279  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_356 -> m12_286  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_357 -> m12_293  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_358 -> m12_307  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_359 -> m12_330  [color=darkseagreen4, key=1, label=int, style=dashed];
m17_4 -> m17_5  [key=0, style=solid];
m17_5 -> m17_4  [color=blue, key=0, style=bold];
m17_6 -> m17_7  [key=0, style=solid];
m17_7 -> m17_6  [color=blue, key=0, style=bold];
m17_2 -> m17_3  [key=0, style=solid];
m17_3 -> m17_2  [color=blue, key=0, style=bold];
m17_0 -> m17_1  [key=0, style=solid];
m17_1 -> m17_0  [color=blue, key=0, style=bold];
m18_8 -> m18_9  [key=0, style=solid];
m18_8 -> m18_10  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_9 -> m18_10  [key=0, style=solid];
m18_9 -> m18_3  [key=2, style=dotted];
m18_9 -> m18_4  [key=2, style=dotted];
m18_10 -> m18_11  [key=0, style=solid];
m18_10 -> m18_3  [key=2, style=dotted];
m18_10 -> m18_4  [key=2, style=dotted];
m18_11 -> m18_8  [color=blue, key=0, style=bold];
m18_27 -> m18_28  [key=0, style=solid];
m18_28 -> m18_29  [key=0, style=solid];
m18_28 -> m18_30  [key=2, style=dotted];
m18_28 -> m18_4  [key=2, style=dotted];
m18_29 -> m18_27  [color=blue, key=0, style=bold];
m18_16 -> m18_17  [key=0, style=solid];
m18_17 -> m18_18  [key=0, style=solid];
m18_17 -> m18_15  [key=2, style=dotted];
m18_17 -> m18_4  [key=2, style=dotted];
m18_18 -> m18_16  [color=blue, key=0, style=bold];
m18_39 -> m18_40  [key=0, style=solid];
m18_40 -> m18_41  [key=0, style=solid];
m18_40 -> m18_42  [key=2, style=dotted];
m18_40 -> m18_4  [key=2, style=dotted];
m18_41 -> m18_39  [color=blue, key=0, style=bold];
m18_47 -> m18_48  [key=0, style=solid];
m18_47 -> m18_49  [color=crimson, key=0, style=bold];
m18_47 -> m18_50  [color=crimson, key=0, style=bold];
m18_47 -> m18_51  [color=crimson, key=0, style=bold];
m18_47 -> m18_52  [color=crimson, key=0, style=bold];
m18_47 -> m18_53  [color=crimson, key=0, style=bold];
m18_47 -> m18_54  [color=crimson, key=0, style=bold];
m18_47 -> m18_55  [color=crimson, key=0, style=bold];
m18_47 -> m18_56  [color=crimson, key=0, style=bold];
m18_47 -> m18_57  [color=crimson, key=0, style=bold];
m18_47 -> m18_58  [color=crimson, key=0, style=bold];
m18_47 -> m18_59  [color=crimson, key=0, style=bold];
m18_47 -> m18_60  [color=crimson, key=0, style=bold];
m18_47 -> m18_61  [color=crimson, key=0, style=bold];
m18_47 -> m18_62  [color=crimson, key=0, style=bold];
m18_47 -> m18_63  [color=crimson, key=0, style=bold];
m18_47 -> m18_64  [color=crimson, key=0, style=bold];
m18_47 -> m18_65  [color=crimson, key=0, style=bold];
m18_47 -> m18_66  [color=crimson, key=0, style=bold];
m18_47 -> m18_67  [color=crimson, key=0, style=bold];
m18_47 -> m18_68  [color=crimson, key=0, style=bold];
m18_47 -> m18_69  [color=crimson, key=0, style=bold];
m18_47 -> m18_70  [color=crimson, key=0, style=bold];
m18_47 -> m18_71  [color=crimson, key=0, style=bold];
m18_47 -> m18_72  [color=crimson, key=0, style=bold];
m18_47 -> m18_73  [color=crimson, key=0, style=bold];
m18_47 -> m18_74  [color=crimson, key=0, style=bold];
m18_47 -> m18_75  [color=crimson, key=0, style=bold];
m18_47 -> m18_76  [color=crimson, key=0, style=bold];
m18_47 -> m18_77  [color=crimson, key=0, style=bold];
m18_47 -> m18_78  [color=crimson, key=0, style=bold];
m18_47 -> m18_79  [color=crimson, key=0, style=bold];
m18_47 -> m18_80  [color=crimson, key=0, style=bold];
m18_47 -> m18_81  [color=crimson, key=0, style=bold];
m18_47 -> m18_82  [color=crimson, key=0, style=bold];
m18_47 -> m18_83  [color=crimson, key=0, style=bold];
m18_47 -> m18_84  [color=crimson, key=0, style=bold];
m18_47 -> m18_85  [color=crimson, key=0, style=bold];
m18_47 -> m18_86  [color=crimson, key=0, style=bold];
m18_47 -> m18_87  [color=crimson, key=0, style=bold];
m18_47 -> m18_88  [color=crimson, key=0, style=bold];
m18_47 -> m18_89  [color=crimson, key=0, style=bold];
m18_47 -> m18_90  [color=crimson, key=0, style=bold];
m18_47 -> m18_91  [color=crimson, key=0, style=bold];
m18_47 -> m18_92  [color=crimson, key=0, style=bold];
m18_47 -> m18_93  [color=crimson, key=0, style=bold];
m18_47 -> m18_94  [color=crimson, key=0, style=bold];
m18_47 -> m18_95  [color=crimson, key=0, style=bold];
m18_47 -> m18_96  [color=crimson, key=0, style=bold];
m18_47 -> m18_97  [color=crimson, key=0, style=bold];
m18_47 -> m18_98  [color=crimson, key=0, style=bold];
m18_47 -> m18_99  [color=crimson, key=0, style=bold];
m18_47 -> m18_100  [color=crimson, key=0, style=bold];
m18_47 -> m18_101  [color=crimson, key=0, style=bold];
m18_47 -> m18_102  [color=crimson, key=0, style=bold];
m18_47 -> m18_103  [color=crimson, key=0, style=bold];
m18_47 -> m18_104  [color=crimson, key=0, style=bold];
m18_47 -> m18_105  [color=crimson, key=0, style=bold];
m18_47 -> m18_106  [color=crimson, key=0, style=bold];
m18_47 -> m18_107  [color=crimson, key=0, style=bold];
m18_47 -> m18_108  [color=crimson, key=0, style=bold];
m18_47 -> m18_109  [color=crimson, key=0, style=bold];
m18_47 -> m18_110  [color=crimson, key=0, style=bold];
m18_47 -> m18_111  [color=crimson, key=0, style=bold];
m18_47 -> m18_112  [color=crimson, key=0, style=bold];
m18_47 -> m18_113  [color=crimson, key=0, style=bold];
m18_47 -> m18_114  [color=crimson, key=0, style=bold];
m18_47 -> m18_115  [color=crimson, key=0, style=bold];
m18_47 -> m18_116  [color=crimson, key=0, style=bold];
m18_47 -> m18_117  [color=crimson, key=0, style=bold];
m18_47 -> m18_118  [color=crimson, key=0, style=bold];
m18_47 -> m18_119  [color=crimson, key=0, style=bold];
m18_47 -> m18_120  [color=crimson, key=0, style=bold];
m18_47 -> m18_121  [color=crimson, key=0, style=bold];
m18_47 -> m18_122  [color=crimson, key=0, style=bold];
m18_47 -> m18_123  [color=crimson, key=0, style=bold];
m18_47 -> m18_124  [color=crimson, key=0, style=bold];
m18_47 -> m18_125  [color=crimson, key=0, style=bold];
m18_47 -> m18_126  [color=crimson, key=0, style=bold];
m18_47 -> m18_127  [color=crimson, key=0, style=bold];
m18_47 -> m18_128  [color=crimson, key=0, style=bold];
m18_48 -> m18_49  [key=0, style=solid];
m18_49 -> m18_50  [key=0, style=solid];
m18_50 -> m18_51  [key=0, style=solid];
m18_51 -> m18_52  [key=0, style=solid];
m18_52 -> m18_53  [key=0, style=solid];
m18_53 -> m18_54  [key=0, style=solid];
m18_54 -> m18_55  [key=0, style=solid];
m18_55 -> m18_56  [key=0, style=solid];
m18_56 -> m18_57  [key=0, style=solid];
m18_57 -> m18_58  [key=0, style=solid];
m18_58 -> m18_59  [key=0, style=solid];
m18_59 -> m18_60  [key=0, style=solid];
m18_60 -> m18_61  [key=0, style=solid];
m18_61 -> m18_62  [key=0, style=solid];
m18_62 -> m18_63  [key=0, style=solid];
m18_63 -> m18_64  [key=0, style=solid];
m18_64 -> m18_65  [key=0, style=solid];
m18_65 -> m18_66  [key=0, style=solid];
m18_66 -> m18_67  [key=0, style=solid];
m18_67 -> m18_68  [key=0, style=solid];
m18_68 -> m18_69  [key=0, style=solid];
m18_69 -> m18_70  [key=0, style=solid];
m18_70 -> m18_71  [key=0, style=solid];
m18_71 -> m18_72  [key=0, style=solid];
m18_72 -> m18_73  [key=0, style=solid];
m18_73 -> m18_74  [key=0, style=solid];
m18_74 -> m18_75  [key=0, style=solid];
m18_75 -> m18_76  [key=0, style=solid];
m18_76 -> m18_77  [key=0, style=solid];
m18_77 -> m18_78  [key=0, style=solid];
m18_78 -> m18_79  [key=0, style=solid];
m18_79 -> m18_80  [key=0, style=solid];
m18_80 -> m18_81  [key=0, style=solid];
m18_81 -> m18_82  [key=0, style=solid];
m18_82 -> m18_83  [key=0, style=solid];
m18_83 -> m18_84  [key=0, style=solid];
m18_84 -> m18_85  [key=0, style=solid];
m18_85 -> m18_86  [key=0, style=solid];
m18_86 -> m18_87  [key=0, style=solid];
m18_87 -> m18_88  [key=0, style=solid];
m18_88 -> m18_89  [key=0, style=solid];
m18_89 -> m18_90  [key=0, style=solid];
m18_90 -> m18_91  [key=0, style=solid];
m18_91 -> m18_92  [key=0, style=solid];
m18_92 -> m18_93  [key=0, style=solid];
m18_93 -> m18_94  [key=0, style=solid];
m18_94 -> m18_95  [key=0, style=solid];
m18_95 -> m18_96  [key=0, style=solid];
m18_96 -> m18_97  [key=0, style=solid];
m18_97 -> m18_98  [key=0, style=solid];
m18_98 -> m18_99  [key=0, style=solid];
m18_99 -> m18_100  [key=0, style=solid];
m18_100 -> m18_101  [key=0, style=solid];
m18_101 -> m18_102  [key=0, style=solid];
m18_102 -> m18_103  [key=0, style=solid];
m18_103 -> m18_104  [key=0, style=solid];
m18_104 -> m18_105  [key=0, style=solid];
m18_105 -> m18_106  [key=0, style=solid];
m18_106 -> m18_107  [key=0, style=solid];
m18_107 -> m18_108  [key=0, style=solid];
m18_108 -> m18_109  [key=0, style=solid];
m18_109 -> m18_110  [key=0, style=solid];
m18_110 -> m18_111  [key=0, style=solid];
m18_111 -> m18_112  [key=0, style=solid];
m18_112 -> m18_113  [key=0, style=solid];
m18_113 -> m18_114  [key=0, style=solid];
m18_114 -> m18_115  [key=0, style=solid];
m18_115 -> m18_116  [key=0, style=solid];
m18_116 -> m18_117  [key=0, style=solid];
m18_117 -> m18_118  [key=0, style=solid];
m18_118 -> m18_119  [key=0, style=solid];
m18_119 -> m18_120  [key=0, style=solid];
m18_120 -> m18_121  [key=0, style=solid];
m18_121 -> m18_122  [key=0, style=solid];
m18_122 -> m18_123  [key=0, style=solid];
m18_123 -> m18_124  [key=0, style=solid];
m18_124 -> m18_125  [key=0, style=solid];
m18_125 -> m18_126  [key=0, style=solid];
m18_126 -> m18_127  [key=0, style=solid];
m18_127 -> m18_128  [key=0, style=solid];
m18_128 -> m18_129  [key=0, style=solid];
m18_129 -> m18_47  [color=blue, key=0, style=bold];
m18_19 -> m18_20  [key=0, style=solid];
m18_19 -> m18_21  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_20 -> m18_21  [key=0, style=solid];
m18_20 -> m18_15  [key=2, style=dotted];
m18_20 -> m18_4  [key=2, style=dotted];
m18_21 -> m18_22  [key=0, style=solid];
m18_21 -> m18_15  [key=2, style=dotted];
m18_21 -> m18_4  [key=2, style=dotted];
m18_22 -> m18_19  [color=blue, key=0, style=bold];
m18_43 -> m18_44  [key=0, style=solid];
m18_44 -> m18_45  [key=0, style=solid];
m18_44 -> m18_46  [key=2, style=dotted];
m18_44 -> m18_4  [key=2, style=dotted];
m18_45 -> m18_43  [color=blue, key=0, style=bold];
m18_23 -> m18_24  [key=0, style=solid];
m18_24 -> m18_25  [key=0, style=solid];
m18_24 -> m18_26  [key=2, style=dotted];
m18_24 -> m18_4  [key=2, style=dotted];
m18_25 -> m18_23  [color=blue, key=0, style=bold];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_2  [key=0, style=solid];
m18_1 -> m18_3  [key=2, style=dotted];
m18_1 -> m18_4  [key=2, style=dotted];
m18_2 -> m18_0  [color=blue, key=0, style=bold];
m18_12 -> m18_13  [key=0, style=solid];
m18_13 -> m18_14  [key=0, style=solid];
m18_13 -> m18_15  [key=2, style=dotted];
m18_13 -> m18_4  [key=2, style=dotted];
m18_14 -> m18_12  [color=blue, key=0, style=bold];
m18_35 -> m18_36  [key=0, style=solid];
m18_36 -> m18_37  [key=0, style=solid];
m18_36 -> m18_38  [key=2, style=dotted];
m18_36 -> m18_4  [key=2, style=dotted];
m18_37 -> m18_35  [color=blue, key=0, style=bold];
m18_31 -> m18_32  [key=0, style=solid];
m18_32 -> m18_33  [key=0, style=solid];
m18_32 -> m18_34  [key=2, style=dotted];
m18_32 -> m18_4  [key=2, style=dotted];
m18_33 -> m18_31  [color=blue, key=0, style=bold];
m18_130 -> m18_131  [key=0, style=solid];
m18_130 -> m18_47  [color=darkorchid, key=3, label="method methodReturn System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator", style=bold];
m18_131 -> m18_132  [key=0, style=solid];
m18_131 -> m18_47  [key=2, style=dotted];
m18_132 -> m18_130  [color=blue, key=0, style=bold];
m18_5 -> m18_6  [key=0, style=solid];
m18_6 -> m18_7  [key=0, style=solid];
m18_6 -> m18_3  [key=2, style=dotted];
m18_6 -> m18_4  [key=2, style=dotted];
m18_7 -> m18_5  [color=blue, key=0, style=bold];
m18_133 -> m18_131  [color=darkseagreen4, key=1, label="Humanizer.Tests.PluralTestSource", style=dashed];
m20_0 -> m20_1  [color=red, key=0, style=solid];
m20_0 -> m20_2  [color=red, key=1, label=int, style=dashed];
m20_0 -> m20_4  [color=red, key=1, label=int, style=dashed];
m20_0 -> m20_6  [color=red, key=1, label=int, style=dashed];
m20_0 -> m20_7  [color=red, key=1, label=int, style=dashed];
m20_0 -> m20_10  [color=red, key=1, label=int, style=dashed];
m20_0 -> m20_15  [color=darkorchid, key=3, label="method methodReturn string ToOrdinalWords", style=bold];
m20_1 -> m20_2  [color=red, key=0, style=solid];
m20_1 -> m20_14  [color=red, key=3, label="Local variable string towords", style=bold];
m20_2 -> m20_3  [color=red, key=0, style=solid];
m20_2 -> m20_4  [color=red, key=0, style=solid];
m20_2 -> m20_12  [color=red, key=2, style=dotted];
m20_4 -> m20_5  [color=red, key=0, style=solid];
m20_4 -> m20_10  [color=red, key=0, style=solid];
m20_6 -> m20_7  [color=red, key=0, style=solid];
m20_6 -> m20_10  [color=red, key=0, style=solid];
m20_6 -> m20_12  [color=red, key=2, style=dotted];
m20_6 -> m20_9  [color=red, key=1, label=exceptionPart, style=dashed];
m20_7 -> m20_8  [color=red, key=0, style=solid];
m20_10 -> m20_11  [color=red, key=0, style=solid];
m20_10 -> m20_15  [color=red, key=2, style=dotted];
m20_3 -> m20_11  [color=red, key=0, style=solid];
m20_5 -> m20_6  [color=red, key=0, style=solid];
m20_9 -> m20_11  [color=red, key=0, style=solid];
m20_8 -> m20_9  [color=red, key=0, style=solid];
m20_8 -> m20_13  [color=red, key=2, style=dotted];
m20_8 -> m20_14  [color=red, key=2, style=dotted];
m20_11 -> m20_0  [color=blue, key=0, style=bold];
m20_12 -> m20_31  [color=red, key=0, style=solid];
m20_12 -> m20_32  [color=red, key=1, label=int, style=dashed];
m20_12 -> m20_0  [color=darkorchid, key=3, label="Parameter variable int number", style=bold];
m20_12 -> m20_1  [color=red, key=3, label="Parameter variable string words", style=bold];
m20_12 -> m20_5  [color=red, key=3, label="Parameter variable string words", style=bold];
m20_31 -> m20_32  [color=red, key=0, style=solid];
m20_31 -> m20_34  [color=red, key=2, style=dotted];
m20_32 -> m20_33  [color=red, key=0, style=solid];
m20_32 -> m20_35  [color=red, key=2, style=dotted];
m20_33 -> m20_12  [color=blue, key=0, style=bold];
m20_14 -> m20_25  [color=red, key=0, style=solid];
m20_14 -> m20_26  [color=red, key=1, label=string, style=dashed];
m20_14 -> m20_27  [color=red, key=1, label=string, style=dashed];
m20_14 -> m20_16  [color=red, key=3, label="Parameter variable string towords", style=bold];
m20_14 -> m20_14  [color=darkorchid, key=3, label="method methodReturn string RemoveOnePrefix", style=bold];
m20_25 -> m20_26  [color=red, key=0, style=solid];
m20_25 -> m20_27  [color=red, key=0, style=solid];
m20_25 -> m20_29  [color=red, key=2, style=dotted];
m20_26 -> m20_27  [color=red, key=0, style=solid];
m20_26 -> m20_30  [color=red, key=2, style=dotted];
m20_26 -> m20_26  [color=red, key=1, label=string, style=dashed];
m20_27 -> m20_28  [color=red, key=0, style=solid];
m20_28 -> m20_14  [color=blue, key=0, style=bold];
m20_15 -> m20_16  [color=red, key=0, style=solid];
m20_15 -> m20_0  [color=darkorchid, key=3, label="Parameter variable int number", style=bold];
m20_16 -> m20_17  [color=red, key=0, style=solid];
m20_16 -> m20_13  [color=red, key=2, style=dotted];
m20_16 -> m20_22  [color=red, key=2, style=dotted];
m20_16 -> m20_14  [color=red, key=3, label="Local variable string towords", style=bold];
m20_17 -> m20_18  [color=red, key=0, style=solid];
m20_17 -> m20_14  [color=red, key=2, style=dotted];
m20_17 -> m20_17  [color=red, key=1, label=towords, style=dashed];
m20_17 -> m20_19  [color=red, key=1, label=towords, style=dashed];
m20_17 -> m20_20  [color=red, key=1, label=towords, style=dashed];
m20_18 -> m20_19  [color=red, key=0, style=solid];
m20_18 -> m20_20  [color=red, key=0, style=solid];
m20_18 -> m20_23  [color=red, key=2, style=dotted];
m20_19 -> m20_20  [color=red, key=0, style=solid];
m20_19 -> m20_24  [color=red, key=2, style=dotted];
m20_19 -> m20_19  [color=red, key=1, label=towords, style=dashed];
m20_20 -> m20_21  [color=red, key=0, style=solid];
m20_21 -> m20_15  [color=blue, key=0, style=bold];
m21_5 -> m21_6  [color=green, key=0, style=solid];
m21_6 -> m21_7  [color=green, key=0, style=solid];
m21_6 -> m21_3  [color=green, key=2, style=dotted];
m21_6 -> m21_4  [color=green, key=2, style=dotted];
m21_7 -> m21_5  [color=blue, key=0, style=bold];
m21_15 -> m21_16  [key=0, style=solid];
m21_16 -> m21_17  [key=0, style=solid];
m21_16 -> m21_20  [color=darkseagreen4, key=1, label=format, style=dashed];
m21_16 -> m21_16  [color=darkorchid, key=3, label="Local variable string format", style=bold];
m21_17 -> m21_18  [key=0, style=solid];
m21_17 -> m21_11  [key=2, style=dotted];
m21_17 -> m21_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_18 -> m21_15  [color=blue, key=0, style=bold];
m21_0 -> m21_1  [color=green, key=0, style=solid];
m21_1 -> m21_2  [color=green, key=0, style=solid];
m21_1 -> m21_3  [color=green, key=2, style=dotted];
m21_1 -> m21_4  [color=green, key=2, style=dotted];
m21_2 -> m21_0  [color=blue, key=0, style=bold];
m21_8 -> m21_9  [key=0, style=solid];
m21_9 -> m21_10  [key=0, style=solid];
m21_9 -> m21_11  [key=2, style=dotted];
m21_9 -> m21_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_10 -> m21_8  [color=blue, key=0, style=bold];
m21_19 -> m21_20  [key=0, style=solid];
m21_12 -> m21_13  [key=0, style=solid];
m21_13 -> m21_14  [key=0, style=solid];
m21_13 -> m21_3  [key=2, style=dotted];
m21_14 -> m21_12  [color=blue, key=0, style=bold];
m21_20 -> m21_21  [key=0, style=solid];
m21_20 -> m21_3  [key=2, style=dotted];
m21_21 -> m21_19  [color=blue, key=0, style=bold];
m21_22 -> m21_23  [key=0, style=solid];
m21_23 -> m21_24  [key=0, style=solid];
m21_23 -> m21_25  [key=2, style=dotted];
m21_23 -> m21_26  [key=2, style=dotted];
m21_23 -> m21_4  [key=2, style=dotted];
m21_24 -> m21_22  [color=blue, key=0, style=bold];
m21_27 -> m21_20  [color=darkseagreen4, key=1, label=format, style=dashed];
m23_0 -> m23_1  [key=0, style=solid];
m23_0 -> m23_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_0 -> m23_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_1 -> m23_2  [key=0, style=solid];
m23_3 -> m23_5  [key=0, style=solid];
m23_4 -> m23_5  [key=0, style=solid];
m23_2 -> m23_3  [key=0, style=solid];
m23_2 -> m23_4  [key=0, style=solid];
m23_5 -> m23_0  [color=blue, key=0, style=bold];
}
