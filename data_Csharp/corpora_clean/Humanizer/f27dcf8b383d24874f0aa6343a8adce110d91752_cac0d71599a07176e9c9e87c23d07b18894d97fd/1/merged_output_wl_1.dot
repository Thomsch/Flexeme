digraph  {
n6 [label="CommandLine.ValueAttribute", span=""];
n0 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", label="Entry CommandLine.ValueAttribute.ValueAttribute(int)", span="21-21"];
n1 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", label="this.index = index", span="23-23"];
n2 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", label="this.min = -1", span="24-24"];
n3 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", label="this.max = -1", span="25-25"];
n4 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", label="this.separator = string.Empty", span="26-26"];
n5 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", label="Exit CommandLine.ValueAttribute.ValueAttribute(int)", span="21-21"];
d1 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?, System.Globalization.CultureInfo)", color=green, community=0, label="1: var comparisonBase = dateToCompareAgainst ?? DateTime.UtcNow", span="21-21"];
d0 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?, System.Globalization.CultureInfo)", label="Entry Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?, System.Globalization.CultureInfo)", span="19-19"];
d2 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?, System.Globalization.CultureInfo)", color=green, community=0, label="1: !utcDate", span="23-23"];
d3 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?, System.Globalization.CultureInfo)", color=green, community=0, label="0: comparisonBase = comparisonBase.ToLocalTime()", span="24-24"];
d4 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?, System.Globalization.CultureInfo)", color=green, community=0, label="0: return Configurator.DateTimeHumanizeStrategy.Humanize(input, comparisonBase, culture);", span="26-26"];
d5 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?, System.Globalization.CultureInfo)", label="Exit Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?, System.Globalization.CultureInfo)", span="19-19"];
d7 [cluster="Humanizer.DateTimeHumanizeStrategy.IDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", label="Entry Humanizer.DateTimeHumanizeStrategy.IDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", span="13-13"];
d6 [cluster="System.DateTime.ToLocalTime()", label="Entry System.DateTime.ToLocalTime()", span="0-0"];
d9 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTimeOffset, System.DateTimeOffset?, System.Globalization.CultureInfo)", color=green, community=0, label="0: var comparisonBase = dateToCompareAgainst ?? DateTimeOffset.UtcNow", span="38-38"];
d8 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTimeOffset, System.DateTimeOffset?, System.Globalization.CultureInfo)", label="Entry Humanizer.DateHumanizeExtensions.Humanize(System.DateTimeOffset, System.DateTimeOffset?, System.Globalization.CultureInfo)", span="36-36"];
d10 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTimeOffset, System.DateTimeOffset?, System.Globalization.CultureInfo)", color=green, community=0, label="0: return Configurator.DateTimeOffsetHumanizeStrategy.Humanize(input, comparisonBase, culture);", span="40-40"];
d11 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTimeOffset, System.DateTimeOffset?, System.Globalization.CultureInfo)", label="Exit Humanizer.DateHumanizeExtensions.Humanize(System.DateTimeOffset, System.DateTimeOffset?, System.Globalization.CultureInfo)", span="36-36"];
d12 [cluster="Humanizer.DateTimeHumanizeStrategy.IDateTimeOffsetHumanizeStrategy.Humanize(System.DateTimeOffset, System.DateTimeOffset, System.Globalization.CultureInfo)", label="Entry Humanizer.DateTimeHumanizeStrategy.IDateTimeOffsetHumanizeStrategy.Humanize(System.DateTimeOffset, System.DateTimeOffset, System.Globalization.CultureInfo)", span="13-13"];
m1_6 [cluster="Unk.Equal", file="InflectorExtensions.cs", label="Entry Unk.Equal", span=""];
m1_5 [cluster="int.ToWords()", file="InflectorExtensions.cs", label="Entry int.ToWords()", span="25-25"];
m1_2 [cluster="Humanizer.Tests.NumberToWordsTests.ToWords(int, string)", file="InflectorExtensions.cs", label="Entry Humanizer.Tests.NumberToWordsTests.ToWords(int, string)", span="40-40"];
m1_3 [cluster="Humanizer.Tests.NumberToWordsTests.ToWords(int, string)", file="InflectorExtensions.cs", label="Assert.Equal(expected, number.ToWords())", span="42-42"];
m1_4 [cluster="Humanizer.Tests.NumberToWordsTests.ToWords(int, string)", file="InflectorExtensions.cs", label="Exit Humanizer.Tests.NumberToWordsTests.ToWords(int, string)", span="40-40"];
m1_0 [cluster="Humanizer.Tests.NumberToWordsTests.NumberToWordsTests()", file="InflectorExtensions.cs", label="Entry Humanizer.Tests.NumberToWordsTests.NumberToWordsTests()", span="7-7"];
m1_1 [cluster="Humanizer.Tests.NumberToWordsTests.NumberToWordsTests()", file="InflectorExtensions.cs", label="Exit Humanizer.Tests.NumberToWordsTests.NumberToWordsTests()", span="7-7"];
m2_9 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorTests.cs", label="(number / 1000000) > 0", span="34-34"];
m2_10 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", color=red, community=0, file="InflectorTests.cs", label="0: parts.Add(number / 1000000 == 1\r\n                    ? ''miljoona ''\r\n                    : string.Format(''{0}miljoonaa '', Convert(number / 1000000)))", span="36-38"];
m2_11 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", color=red, community=0, file="InflectorTests.cs", label="2: number %= 1000000", span="40-40"];
m2_12 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorTests.cs", label="(number / 1000) > 0", span="43-43"];
m2_36 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.GetOrdinalUnit(int, bool)", file="InflectorTests.cs", label="Exit Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.GetOrdinalUnit(int, bool)", span="75-75"];
m2_29 [cluster="System.Collections.Generic.List<T>.Add(T)", file="InflectorTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m2_30 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="InflectorTests.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m2_31 [cluster="string.Trim()", file="InflectorTests.cs", label="Entry string.Trim()", span="0-0"];
m2_28 [cluster="string.Titleize()", file="InflectorTests.cs", label="Entry string.Titleize()", span="262-262"];
m2_17 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorTests.cs", label="number %= 100", span="58-58"];
m2_18 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", color=green, community=0, file="InflectorTests.cs", label="0: number >= 20 && (number / 10) > 0", span="61-61"];
m2_19 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorTests.cs", label="parts.Add(string.Format(''{0}kymment√§'', Convert(number / 10)))", span="63-63"];
m2_41 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorTests.cs", label="var parts = new List<string>()", span="90-90"];
m2_42 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorTests.cs", label="(number / 1000000000) > 0", span="92-92"];
m2_43 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorTests.cs", label="parts.Add(string.Format(''{0}miljardis'', (number / 1000000000) == 1 ? '''' : ToOrdinal(number / 1000000000, true)))", span="94-94"];
m2_49 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorTests.cs", label="parts.Add(string.Format(''{0}tuhannes'', (number / 1000) == 1 ? '''' : ToOrdinal(number / 1000, true)))", span="106-106"];
m2_50 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorTests.cs", label="number %= 1000", span="107-107"];
m2_51 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorTests.cs", label="(number / 100) > 0", span="110-110"];
m2_52 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorTests.cs", label="parts.Add(string.Format(''{0}sadas'', (number / 100) == 1 ? '''' : ToOrdinal(number / 100, true)))", span="112-112"];
m2_53 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorTests.cs", label="number %= 100", span="113-113"];
m2_54 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorTests.cs", label="number >= 20 && (number / 10) > 0", span="116-116"];
m2_55 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorTests.cs", label="parts.Add(string.Format(''{0}kymmenes'', ToOrdinal(number / 10, true)))", span="118-118"];
m2_56 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorTests.cs", label="number %= 10", span="119-119"];
m2_57 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorTests.cs", label="number > 10 && number < 20", span="121-121"];
m2_58 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorTests.cs", label="parts.Add(string.Format(''{0}toista'', GetOrdinalUnit(number % 10, true)))", span="122-122"];
m2_59 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorTests.cs", label="number > 0 && number <= 10", span="124-124"];
m2_60 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorTests.cs", label="parts.Add(GetOrdinalUnit(number, useExceptions))", span="125-125"];
m2_61 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorTests.cs", label="return string.Join('''', parts);", span="127-127"];
m2_62 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorTests.cs", label="Exit Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", span="85-85"];
m2_63 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ConvertToOrdinal(int)", file="InflectorTests.cs", label="Entry Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ConvertToOrdinal(int)", span="130-130"];
m2_64 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ConvertToOrdinal(int)", file="InflectorTests.cs", label="return ToOrdinal(number, false);", span="132-132"];
m2_65 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ConvertToOrdinal(int)", file="InflectorTests.cs", label="Exit Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ConvertToOrdinal(int)", span="130-130"];
m2_66 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter", span=""];
m2_67 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''wife'', ''wives''};", span="177-177"];
m2_68 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''safe'', ''saves''};", span="178-178"];
m2_69 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''half'', ''halves''};", span="179-179"];
m2_70 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''move'', ''moves''};", span="181-181"];
m2_71 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''salesperson'', ''salespeople''};", span="183-183"];
m2_72 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''person'', ''people''};", span="184-184"];
m2_73 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''spokesman'', ''spokesmen''};", span="186-186"];
m2_74 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''man'', ''men''};", span="187-187"];
m2_75 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''woman'', ''women''};", span="188-188"];
m2_76 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''basis'', ''bases''};", span="190-190"];
m2_77 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''diagnosis'', ''diagnoses''};", span="191-191"];
m2_78 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''datum'', ''data''};", span="193-193"];
m2_79 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''medium'', ''media''};", span="194-194"];
m2_80 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''analysis'', ''analyses''};", span="195-195"];
m2_81 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''node_child'', ''node_children''};", span="197-197"];
m2_82 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''child'', ''children''};", span="198-198"];
m2_83 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''experience'', ''experiences''};", span="200-200"];
m2_84 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''day'', ''days''};", span="201-201"];
m2_85 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''comment'', ''comments''};", span="203-203"];
m2_86 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''foobar'', ''foobars''};", span="204-204"];
m2_87 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''newsletter'', ''newsletters''};", span="205-205"];
m2_88 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''old_news'', ''old_news''};", span="207-207"];
m2_89 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''news'', ''news''};", span="208-208"];
m2_90 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''series'', ''series''};", span="210-210"];
m2_91 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''species'', ''species''};", span="211-211"];
m2_92 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''quiz'', ''quizzes''};", span="213-213"];
m2_93 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''perspective'', ''perspectives''};", span="215-215"];
m2_94 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''ox'', ''oxen''};", span="217-217"];
m2_95 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''photo'', ''photos''};", span="218-218"];
m2_96 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''buffalo'', ''buffaloes''};", span="219-219"];
m2_97 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''tomato'', ''tomatoes''};", span="220-220"];
m2_98 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''dwarf'', ''dwarves''};", span="221-221"];
m2_99 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''elf'', ''elves''};", span="222-222"];
m2_100 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''information'', ''information''};", span="223-223"];
m2_101 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''equipment'', ''equipment''};", span="224-224"];
m2_102 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''bus'', ''buses''};", span="225-225"];
m2_103 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''status'', ''statuses''};", span="226-226"];
m2_104 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''status_code'', ''status_codes''};", span="227-227"];
m2_105 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''mouse'', ''mice''};", span="228-228"];
m2_106 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''louse'', ''lice''};", span="230-230"];
m2_107 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''house'', ''houses''};", span="231-231"];
m2_108 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''octopus'', ''octopi''};", span="232-232"];
m2_109 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''virus'', ''viri''};", span="233-233"];
m2_110 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''alias'', ''aliases''};", span="234-234"];
m2_111 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''portfolio'', ''portfolios''};", span="235-235"];
m2_112 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''vertex'', ''vertices''};", span="237-237"];
m2_113 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''matrix'', ''matrices''};", span="238-238"];
m2_114 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''axis'', ''axes''};", span="240-240"];
m2_115 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''testis'', ''testes''};", span="241-241"];
m2_116 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''crisis'', ''crises''};", span="242-242"];
m2_117 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''rice'', ''rice''};", span="244-244"];
m2_118 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''shoe'', ''shoes''};", span="245-245"];
m2_119 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''horse'', ''horses''};", span="247-247"];
m2_120 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''prize'', ''prizes''};", span="248-248"];
m2_121 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''edge'', ''edges''};", span="249-249"];
m2_122 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''goose'', ''geese''};", span="252-252"];
m2_123 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''deer'', ''deer''};", span="253-253"];
m2_124 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''sheep'', ''sheep''};", span="254-254"];
m2_125 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''wolf'', ''wolves''};", span="255-255"];
m2_126 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''volcano'', ''volcanoes''};", span="256-256"];
m2_127 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''aircraft'', ''aircraft''};", span="257-257"];
m2_128 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''alumna'', ''alumnae''};", span="258-258"];
m2_129 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''alumnus'', ''alumni''};", span="259-259"];
m2_130 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="yield return new object[] {''fungus'', ''fungi''};", span="260-260"];
m2_131 [cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="InflectorTests.cs", label="Exit Humanizer.Tests.PluralTestSource.GetEnumerator()", span="154-154"];
m2_4 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorTests.cs", label="return UnitsMap[0];", span="21-21"];
m2_21 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorTests.cs", label="number > 10 && number < 20", span="66-66"];
m2_22 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", color=red, community=0, file="InflectorTests.cs", label="0: parts.Add(string.Format(''{0}toista'', UnitsMap[number % 10]))", span="67-67"];
m2_23 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", color=red, community=0, file="InflectorTests.cs", label="0: number > 0 && number <= 10", span="69-69"];
m2_24 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorTests.cs", label="parts.Add(UnitsMap[number])", span="70-70"];
m2_27 [cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.Titleize(string, string)", span="86-86"];
m2_37 [cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", file="InflectorTests.cs", label="Entry Humanizer.Tests.InflectorTests.Pascalize(string, string)", span="119-119"];
m2_45 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorTests.cs", label="(number / 1000000) > 0", span="98-98"];
m2_46 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorTests.cs", label="parts.Add(string.Format(''{0}miljoonas'', (number / 1000000) == 1 ? '''' : ToOrdinal(number / 1000000, true)))", span="100-100"];
m2_47 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorTests.cs", label="number %= 1000000", span="101-101"];
m2_8 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorTests.cs", label="number %= 1000000000", span="31-31"];
m2_40 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorTests.cs", label="return OrdinalUnitsMap[0];", span="88-88"];
m2_25 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorTests.cs", label="return string.Join('''', parts).Trim();", span="72-72"];
m2_26 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorTests.cs", label="Exit Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", span="15-15"];
m2_0 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorTests.cs", label="Entry Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", span="15-15"];
m2_1 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorTests.cs", label="number < 0", span="17-17"];
m2_2 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorTests.cs", label="return string.Format(''miinus {0}'', Convert(-number));", span="18-18"];
m2_3 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorTests.cs", label="number == 0", span="20-20"];
m2_16 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorTests.cs", label="parts.Add(number / 100 == 1\r\n                    ? ''sata''\r\n                    : string.Format(''{0}sataa'', Convert(number / 100)))", span="54-56"];
m2_13 [cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", color=green, community=0, file="InflectorTests.cs", label="0: Entry Humanizer.Tests.InflectorTests.Singularize(string, string)", span="58-58"];
m2_5 [cluster="Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord(string, string)", file="InflectorTests.cs", label="Entry Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord(string, string)", span="43-43"];
m2_14 [cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", file="InflectorTests.cs", label="Assert.Equal(singular, plural.Singularize())", span="60-60"];
m2_15 [cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.Singularize(string, string)", span="58-58"];
m2_7 [cluster="Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord(string, string)", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord(string, string)", span="43-43"];
m2_6 [cluster="Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord(string, string)", color=red, community=0, file="InflectorTests.cs", label="1: Assert.Equal(plural, plural.Pluralize(Plurality.Plural))", span="45-45"];
m2_20 [cluster="string.Singularize(Humanizer.Plurality)", file="InflectorTests.cs", label="Entry string.Singularize(Humanizer.Plurality)", span="206-206"];
m2_32 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.GetOrdinalUnit(int, bool)", file="InflectorTests.cs", label="Entry Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.GetOrdinalUnit(int, bool)", span="75-75"];
m2_38 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorTests.cs", label="Entry Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", span="85-85"];
m2_39 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorTests.cs", label="number == 0", span="87-87"];
m2_33 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.GetOrdinalUnit(int, bool)", file="InflectorTests.cs", label="useExceptions && OrdinalExceptions.ContainsKey(number)", span="77-77"];
m2_34 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.GetOrdinalUnit(int, bool)", file="InflectorTests.cs", label="return OrdinalExceptions[number];", span="79-79"];
m2_35 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.GetOrdinalUnit(int, bool)", file="InflectorTests.cs", label="return OrdinalUnitsMap[number];", span="82-82"];
m2_132 [cluster="Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", file="InflectorTests.cs", label="Entry Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", span="263-263"];
m2_133 [cluster="Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", file="InflectorTests.cs", label="return GetEnumerator();", span="265-265"];
m2_134 [cluster="Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", file="InflectorTests.cs", label="Exit Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", span="263-263"];
m2_44 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorTests.cs", label="number %= 1000000000", span="95-95"];
m2_48 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorTests.cs", label="(number / 1000) > 0", span="104-104"];
m2_135 [file="InflectorTests.cs", label="Humanizer.Tests.PluralTestSource", span=""];
m3_3 [cluster="int.ToString()", file="NumberToWordsConverterRegistry.cs", label="Entry int.ToString()", span="0-0"];
m3_0 [cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.Convert(int)", file="NumberToWordsConverterRegistry.cs", label="Entry Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.Convert(int)", span="4-4"];
m3_1 [cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.Convert(int)", file="NumberToWordsConverterRegistry.cs", label="return number.ToString();", span="6-6"];
m3_2 [cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.Convert(int)", file="NumberToWordsConverterRegistry.cs", label="Exit Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.Convert(int)", span="4-4"];
m3_4 [cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.ConvertToOrdinal(int)", file="NumberToWordsConverterRegistry.cs", label="Entry Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.ConvertToOrdinal(int)", span="9-9"];
m3_5 [cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.ConvertToOrdinal(int)", file="NumberToWordsConverterRegistry.cs", label="return number.ToString();", span="11-11"];
m3_6 [cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.ConvertToOrdinal(int)", file="NumberToWordsConverterRegistry.cs", label="Exit Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.ConvertToOrdinal(int)", span="9-9"];
m5_8 [cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.Register(string, TLocaliser)", file="OrdinalizerRegistry.cs", label="Entry Humanizer.Configuration.LocaliserRegistry<TLocaliser>.Register(string, TLocaliser)", span="54-54"];
m5_9 [cluster="Humanizer.Localisation.Ordinalizers.SpanishOrdinalizer.SpanishOrdinalizer()", file="OrdinalizerRegistry.cs", label="Entry Humanizer.Localisation.Ordinalizers.SpanishOrdinalizer.SpanishOrdinalizer()", span="2-2"];
m5_11 [cluster="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.BrazilianPortugueseOrdinalizer()", file="OrdinalizerRegistry.cs", label="Entry Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.BrazilianPortugueseOrdinalizer()", span="2-2"];
m5_7 [cluster="Humanizer.Localisation.Ordinalizers.EnglishOrdinalizer.EnglishOrdinalizer()", file="OrdinalizerRegistry.cs", label="Entry Humanizer.Localisation.Ordinalizers.EnglishOrdinalizer.EnglishOrdinalizer()", span="2-2"];
m5_12 [cluster="Humanizer.Localisation.Ordinalizers.GermanOrdinalizer.GermanOrdinalizer()", file="OrdinalizerRegistry.cs", label="Entry Humanizer.Localisation.Ordinalizers.GermanOrdinalizer.GermanOrdinalizer()", span="2-2"];
m5_0 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", file="OrdinalizerRegistry.cs", label="Entry Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", span="6-6"];
m5_1 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", file="OrdinalizerRegistry.cs", label="Register(''en'', new EnglishOrdinalizer())", span="8-8"];
m5_2 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", file="OrdinalizerRegistry.cs", label="Register(''es'', new SpanishOrdinalizer())", span="9-9"];
m5_3 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", file="OrdinalizerRegistry.cs", label="Register(''ru'', new RussianOrdinalizer())", span="10-10"];
m5_4 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", file="OrdinalizerRegistry.cs", label="Register(''pt-BR'', new BrazilianPortugueseOrdinalizer())", span="11-11"];
m5_5 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", file="OrdinalizerRegistry.cs", label="Register(''de'', new GermanOrdinalizer())", span="12-12"];
m5_6 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", file="OrdinalizerRegistry.cs", label="Exit Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", span="6-6"];
m5_10 [cluster="Humanizer.Localisation.Ordinalizers.RussianOrdinalizer.RussianOrdinalizer()", file="OrdinalizerRegistry.cs", label="Entry Humanizer.Localisation.Ordinalizers.RussianOrdinalizer.RussianOrdinalizer()", span="2-2"];
m5_13 [file="OrdinalizerRegistry.cs", label="Humanizer.Configuration.OrdinalizerRegistry", span=""];
m6_0 [cluster="Humanizer.StringExentions.FormatWith(string, params object[])", file="StringExentions.cs", label="Entry Humanizer.StringExentions.FormatWith(string, params object[])", span="15-15"];
m6_1 [cluster="Humanizer.StringExentions.FormatWith(string, params object[])", file="StringExentions.cs", label="return String.Format(format, args);", span="17-17"];
m6_2 [cluster="Humanizer.StringExentions.FormatWith(string, params object[])", file="StringExentions.cs", label="Exit Humanizer.StringExentions.FormatWith(string, params object[])", span="15-15"];
m6_3 [cluster="string.Format(string, params object[])", file="StringExentions.cs", label="Entry string.Format(string, params object[])", span="0-0"];
n6 -> n1  [color=darkseagreen4, key=1, label="CommandLine.ValueAttribute", style=dashed];
n6 -> n2  [color=darkseagreen4, key=1, label="CommandLine.ValueAttribute", style=dashed];
n6 -> n3  [color=darkseagreen4, key=1, label="CommandLine.ValueAttribute", style=dashed];
n6 -> n4  [color=darkseagreen4, key=1, label="CommandLine.ValueAttribute", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n2 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n5 -> n0  [color=blue, key=0, style=bold];
d1 -> d2  [color=green, key=0, style=solid];
d1 -> d3  [color=green, key=1, label=comparisonBase, style=dashed];
d1 -> d4  [color=green, key=1, label=comparisonBase, style=dashed];
d0 -> d1  [color=green, key=0, style=solid];
d0 -> d2  [color=green, key=1, label=bool, style=dashed];
d0 -> d4  [color=green, key=1, label="System.DateTime", style=dashed];
d2 -> d3  [color=green, key=0, style=solid];
d2 -> d4  [color=green, key=0, style=solid];
d3 -> d4  [color=green, key=0, style=solid];
d3 -> d3  [color=green, key=1, label=comparisonBase, style=dashed];
d3 -> d6  [color=green, key=2, style=dotted];
d4 -> d5  [color=green, key=0, style=solid];
d4 -> d7  [color=green, key=2, style=dotted];
d5 -> d0  [color=blue, key=0, style=bold];
d9 -> d10  [color=green, key=0, style=solid];
d8 -> d9  [color=green, key=0, style=solid];
d8 -> d10  [color=green, key=1, label="System.DateTimeOffset", style=dashed];
d10 -> d11  [color=green, key=0, style=solid];
d10 -> d12  [color=green, key=2, style=dotted];
d11 -> d8  [color=blue, key=0, style=bold];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_5  [key=2, style=dotted];
m1_3 -> m1_6  [key=2, style=dotted];
m1_4 -> m1_2  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [color=blue, key=0, style=bold];
m2_9 -> m2_10  [color=red, key=0, style=solid];
m2_9 -> m2_11  [color=red, key=1, label=string, style=dashed];
m2_9 -> m2_12  [key=0, style=solid];
m2_10 -> m2_11  [color=red, key=0, style=solid];
m2_10 -> m2_8  [color=red, key=2, style=dotted];
m2_10 -> m2_4  [color=red, key=2, style=dotted];
m2_10 -> m2_0  [key=2, style=dotted];
m2_10 -> m2_27  [key=2, style=dotted];
m2_10 -> m2_29  [key=2, style=dotted];
m2_11 -> m2_12  [color=red, key=0, style=solid];
m2_11 -> m2_8  [color=red, key=2, style=dotted];
m2_11 -> m2_4  [color=red, key=2, style=dotted];
m2_11 -> m2_13  [color=green, key=1, label=int, style=dashed];
m2_11 -> m2_18  [color=green, key=1, label=int, style=dashed];
m2_11 -> m2_11  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_11 -> m2_14  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_11 -> m2_15  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_11 -> m2_16  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_11 -> m2_17  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_11 -> m2_19  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_11 -> m2_20  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_11 -> m2_21  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_11 -> m2_22  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_11 -> m2_23  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_11 -> m2_24  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_12 -> m2_9  [color=blue, key=0, style=bold];
m2_12 -> m2_13  [color=green, key=0, style=solid];
m2_12 -> m2_15  [key=0, style=solid];
m2_36 -> m2_32  [color=blue, key=0, style=bold];
m2_29 -> m2_30  [key=0, style=solid];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_32  [key=2, style=dotted];
m2_30 -> m2_4  [key=2, style=dotted];
m2_31 -> m2_29  [color=blue, key=0, style=bold];
m2_17 -> m2_18  [color=green, key=0, style=solid];
m2_17 -> m2_17  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_17 -> m2_19  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_17 -> m2_20  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_17 -> m2_21  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_17 -> m2_22  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_17 -> m2_23  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_17 -> m2_24  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_18 -> m2_19  [color=green, key=0, style=solid];
m2_18 -> m2_20  [color=red, key=2, style=dotted];
m2_18 -> m2_4  [color=red, key=2, style=dotted];
m2_18 -> m2_21  [color=green, key=0, style=solid];
m2_19 -> m2_17  [color=blue, key=0, style=bold];
m2_19 -> m2_0  [key=2, style=dotted];
m2_19 -> m2_27  [key=2, style=dotted];
m2_19 -> m2_29  [key=2, style=dotted];
m2_19 -> m2_20  [key=0, style=solid];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_43  [color=darkseagreen4, key=1, label=parts, style=dashed];
m2_41 -> m2_46  [color=darkseagreen4, key=1, label=parts, style=dashed];
m2_41 -> m2_49  [color=darkseagreen4, key=1, label=parts, style=dashed];
m2_41 -> m2_52  [color=darkseagreen4, key=1, label=parts, style=dashed];
m2_41 -> m2_55  [color=darkseagreen4, key=1, label=parts, style=dashed];
m2_41 -> m2_58  [color=darkseagreen4, key=1, label=parts, style=dashed];
m2_41 -> m2_60  [color=darkseagreen4, key=1, label=parts, style=dashed];
m2_41 -> m2_28  [key=2, style=dotted];
m2_41 -> m2_61  [color=darkseagreen4, key=1, label=parts, style=dashed];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_44  [key=2, style=dotted];
m2_42 -> m2_4  [key=2, style=dotted];
m2_42 -> m2_45  [key=0, style=solid];
m2_43 -> m2_41  [color=blue, key=0, style=bold];
m2_43 -> m2_27  [key=2, style=dotted];
m2_43 -> m2_29  [key=2, style=dotted];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_38  [key=2, style=dotted];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_51  [color=crimson, key=0, style=bold];
m2_49 -> m2_52  [color=crimson, key=0, style=bold];
m2_49 -> m2_53  [color=crimson, key=0, style=bold];
m2_49 -> m2_54  [color=crimson, key=0, style=bold];
m2_49 -> m2_55  [color=crimson, key=0, style=bold];
m2_49 -> m2_56  [color=crimson, key=0, style=bold];
m2_49 -> m2_57  [color=crimson, key=0, style=bold];
m2_49 -> m2_58  [color=crimson, key=0, style=bold];
m2_49 -> m2_59  [color=crimson, key=0, style=bold];
m2_49 -> m2_60  [color=crimson, key=0, style=bold];
m2_49 -> m2_61  [color=crimson, key=0, style=bold];
m2_49 -> m2_62  [color=crimson, key=0, style=bold];
m2_49 -> m2_63  [color=crimson, key=0, style=bold];
m2_49 -> m2_64  [color=crimson, key=0, style=bold];
m2_49 -> m2_65  [color=crimson, key=0, style=bold];
m2_49 -> m2_66  [color=crimson, key=0, style=bold];
m2_49 -> m2_67  [color=crimson, key=0, style=bold];
m2_49 -> m2_68  [color=crimson, key=0, style=bold];
m2_49 -> m2_69  [color=crimson, key=0, style=bold];
m2_49 -> m2_70  [color=crimson, key=0, style=bold];
m2_49 -> m2_71  [color=crimson, key=0, style=bold];
m2_49 -> m2_72  [color=crimson, key=0, style=bold];
m2_49 -> m2_73  [color=crimson, key=0, style=bold];
m2_49 -> m2_74  [color=crimson, key=0, style=bold];
m2_49 -> m2_75  [color=crimson, key=0, style=bold];
m2_49 -> m2_76  [color=crimson, key=0, style=bold];
m2_49 -> m2_77  [color=crimson, key=0, style=bold];
m2_49 -> m2_78  [color=crimson, key=0, style=bold];
m2_49 -> m2_79  [color=crimson, key=0, style=bold];
m2_49 -> m2_80  [color=crimson, key=0, style=bold];
m2_49 -> m2_81  [color=crimson, key=0, style=bold];
m2_49 -> m2_82  [color=crimson, key=0, style=bold];
m2_49 -> m2_83  [color=crimson, key=0, style=bold];
m2_49 -> m2_84  [color=crimson, key=0, style=bold];
m2_49 -> m2_85  [color=crimson, key=0, style=bold];
m2_49 -> m2_86  [color=crimson, key=0, style=bold];
m2_49 -> m2_87  [color=crimson, key=0, style=bold];
m2_49 -> m2_88  [color=crimson, key=0, style=bold];
m2_49 -> m2_89  [color=crimson, key=0, style=bold];
m2_49 -> m2_90  [color=crimson, key=0, style=bold];
m2_49 -> m2_91  [color=crimson, key=0, style=bold];
m2_49 -> m2_92  [color=crimson, key=0, style=bold];
m2_49 -> m2_93  [color=crimson, key=0, style=bold];
m2_49 -> m2_94  [color=crimson, key=0, style=bold];
m2_49 -> m2_95  [color=crimson, key=0, style=bold];
m2_49 -> m2_96  [color=crimson, key=0, style=bold];
m2_49 -> m2_97  [color=crimson, key=0, style=bold];
m2_49 -> m2_98  [color=crimson, key=0, style=bold];
m2_49 -> m2_99  [color=crimson, key=0, style=bold];
m2_49 -> m2_100  [color=crimson, key=0, style=bold];
m2_49 -> m2_101  [color=crimson, key=0, style=bold];
m2_49 -> m2_102  [color=crimson, key=0, style=bold];
m2_49 -> m2_103  [color=crimson, key=0, style=bold];
m2_49 -> m2_104  [color=crimson, key=0, style=bold];
m2_49 -> m2_105  [color=crimson, key=0, style=bold];
m2_49 -> m2_106  [color=crimson, key=0, style=bold];
m2_49 -> m2_107  [color=crimson, key=0, style=bold];
m2_49 -> m2_108  [color=crimson, key=0, style=bold];
m2_49 -> m2_109  [color=crimson, key=0, style=bold];
m2_49 -> m2_110  [color=crimson, key=0, style=bold];
m2_49 -> m2_111  [color=crimson, key=0, style=bold];
m2_49 -> m2_112  [color=crimson, key=0, style=bold];
m2_49 -> m2_113  [color=crimson, key=0, style=bold];
m2_49 -> m2_114  [color=crimson, key=0, style=bold];
m2_49 -> m2_115  [color=crimson, key=0, style=bold];
m2_49 -> m2_116  [color=crimson, key=0, style=bold];
m2_49 -> m2_117  [color=crimson, key=0, style=bold];
m2_49 -> m2_118  [color=crimson, key=0, style=bold];
m2_49 -> m2_119  [color=crimson, key=0, style=bold];
m2_49 -> m2_120  [color=crimson, key=0, style=bold];
m2_49 -> m2_121  [color=crimson, key=0, style=bold];
m2_49 -> m2_122  [color=crimson, key=0, style=bold];
m2_49 -> m2_123  [color=crimson, key=0, style=bold];
m2_49 -> m2_124  [color=crimson, key=0, style=bold];
m2_49 -> m2_125  [color=crimson, key=0, style=bold];
m2_49 -> m2_126  [color=crimson, key=0, style=bold];
m2_49 -> m2_127  [color=crimson, key=0, style=bold];
m2_49 -> m2_128  [color=crimson, key=0, style=bold];
m2_49 -> m2_129  [color=crimson, key=0, style=bold];
m2_49 -> m2_130  [color=crimson, key=0, style=bold];
m2_49 -> m2_27  [key=2, style=dotted];
m2_49 -> m2_29  [key=2, style=dotted];
m2_49 -> m2_38  [key=2, style=dotted];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_52  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_50 -> m2_55  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_50 -> m2_58  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_50 -> m2_60  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_50 -> m2_50  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_50 -> m2_53  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_50 -> m2_54  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_50 -> m2_56  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_50 -> m2_57  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_50 -> m2_59  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_54  [key=0, style=solid];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_27  [key=2, style=dotted];
m2_52 -> m2_29  [key=2, style=dotted];
m2_52 -> m2_38  [key=2, style=dotted];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_55  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_53 -> m2_58  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_53 -> m2_60  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_53 -> m2_53  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_53 -> m2_56  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_53 -> m2_57  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_53 -> m2_59  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_57  [key=0, style=solid];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_27  [key=2, style=dotted];
m2_55 -> m2_29  [key=2, style=dotted];
m2_55 -> m2_38  [key=2, style=dotted];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_60  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_56 -> m2_56  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_56 -> m2_59  [key=0, style=solid];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_59  [key=0, style=solid];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_27  [key=2, style=dotted];
m2_58 -> m2_29  [key=2, style=dotted];
m2_58 -> m2_32  [key=2, style=dotted];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_61  [key=0, style=solid];
m2_60 -> m2_61  [key=0, style=solid];
m2_60 -> m2_29  [key=2, style=dotted];
m2_60 -> m2_32  [key=2, style=dotted];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_30  [key=2, style=dotted];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_38  [color=blue, key=0, style=bold];
m2_63 -> m2_64  [key=0, style=solid];
m2_64 -> m2_65  [key=0, style=solid];
m2_64 -> m2_38  [key=2, style=dotted];
m2_65 -> m2_66  [key=0, style=solid];
m2_65 -> m2_63  [color=blue, key=0, style=bold];
m2_66 -> m2_67  [key=0, style=solid];
m2_66 -> m2_13  [color=green, key=1, label="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter", style=dashed];
m2_66 -> m2_2  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter", style=dashed];
m2_66 -> m2_7  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter", style=dashed];
m2_66 -> m2_10  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter", style=dashed];
m2_66 -> m2_16  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter", style=dashed];
m2_66 -> m2_19  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter", style=dashed];
m2_66 -> m2_43  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter", style=dashed];
m2_66 -> m2_46  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter", style=dashed];
m2_66 -> m2_49  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter", style=dashed];
m2_66 -> m2_52  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter", style=dashed];
m2_66 -> m2_55  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter", style=dashed];
m2_66 -> m2_58  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter", style=dashed];
m2_66 -> m2_60  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter", style=dashed];
m2_66 -> m2_64  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter", style=dashed];
m2_67 -> m2_68  [key=0, style=solid];
m2_68 -> m2_69  [key=0, style=solid];
m2_69 -> m2_70  [key=0, style=solid];
m2_70 -> m2_71  [key=0, style=solid];
m2_71 -> m2_72  [key=0, style=solid];
m2_72 -> m2_73  [key=0, style=solid];
m2_73 -> m2_74  [key=0, style=solid];
m2_74 -> m2_75  [key=0, style=solid];
m2_75 -> m2_76  [key=0, style=solid];
m2_76 -> m2_77  [key=0, style=solid];
m2_77 -> m2_78  [key=0, style=solid];
m2_78 -> m2_79  [key=0, style=solid];
m2_79 -> m2_80  [key=0, style=solid];
m2_80 -> m2_81  [key=0, style=solid];
m2_81 -> m2_82  [key=0, style=solid];
m2_82 -> m2_83  [key=0, style=solid];
m2_83 -> m2_84  [key=0, style=solid];
m2_84 -> m2_85  [key=0, style=solid];
m2_85 -> m2_86  [key=0, style=solid];
m2_86 -> m2_87  [key=0, style=solid];
m2_87 -> m2_88  [key=0, style=solid];
m2_88 -> m2_89  [key=0, style=solid];
m2_89 -> m2_90  [key=0, style=solid];
m2_90 -> m2_91  [key=0, style=solid];
m2_91 -> m2_92  [key=0, style=solid];
m2_92 -> m2_93  [key=0, style=solid];
m2_93 -> m2_94  [key=0, style=solid];
m2_94 -> m2_95  [key=0, style=solid];
m2_95 -> m2_96  [key=0, style=solid];
m2_96 -> m2_97  [key=0, style=solid];
m2_97 -> m2_98  [key=0, style=solid];
m2_98 -> m2_99  [key=0, style=solid];
m2_99 -> m2_100  [key=0, style=solid];
m2_100 -> m2_101  [key=0, style=solid];
m2_101 -> m2_102  [key=0, style=solid];
m2_102 -> m2_103  [key=0, style=solid];
m2_103 -> m2_104  [key=0, style=solid];
m2_104 -> m2_105  [key=0, style=solid];
m2_105 -> m2_106  [key=0, style=solid];
m2_106 -> m2_107  [key=0, style=solid];
m2_107 -> m2_108  [key=0, style=solid];
m2_108 -> m2_109  [key=0, style=solid];
m2_109 -> m2_110  [key=0, style=solid];
m2_110 -> m2_111  [key=0, style=solid];
m2_111 -> m2_112  [key=0, style=solid];
m2_112 -> m2_113  [key=0, style=solid];
m2_113 -> m2_114  [key=0, style=solid];
m2_114 -> m2_115  [key=0, style=solid];
m2_115 -> m2_116  [key=0, style=solid];
m2_116 -> m2_117  [key=0, style=solid];
m2_117 -> m2_118  [key=0, style=solid];
m2_118 -> m2_119  [key=0, style=solid];
m2_119 -> m2_120  [key=0, style=solid];
m2_120 -> m2_121  [key=0, style=solid];
m2_121 -> m2_122  [key=0, style=solid];
m2_122 -> m2_123  [key=0, style=solid];
m2_123 -> m2_124  [key=0, style=solid];
m2_124 -> m2_125  [key=0, style=solid];
m2_125 -> m2_126  [key=0, style=solid];
m2_126 -> m2_127  [key=0, style=solid];
m2_127 -> m2_128  [key=0, style=solid];
m2_128 -> m2_129  [key=0, style=solid];
m2_129 -> m2_130  [key=0, style=solid];
m2_130 -> m2_131  [key=0, style=solid];
m2_131 -> m2_49  [color=blue, key=0, style=bold];
m2_4 -> m2_26  [key=0, style=solid];
m2_21 -> m2_22  [color=red, key=0, style=solid];
m2_21 -> m2_23  [color=red, key=1, label=string, style=dashed];
m2_22 -> m2_23  [color=red, key=0, style=solid];
m2_22 -> m2_20  [color=red, key=2, style=dotted];
m2_22 -> m2_4  [color=red, key=2, style=dotted];
m2_22 -> m2_27  [key=2, style=dotted];
m2_22 -> m2_29  [key=2, style=dotted];
m2_23 -> m2_24  [color=red, key=0, style=solid];
m2_23 -> m2_20  [color=red, key=2, style=dotted];
m2_23 -> m2_4  [color=red, key=2, style=dotted];
m2_23 -> m2_25  [key=0, style=solid];
m2_24 -> m2_21  [color=blue, key=0, style=bold];
m2_24 -> m2_29  [key=2, style=dotted];
m2_24 -> m2_25  [key=0, style=solid];
m2_27 -> m2_25  [color=blue, key=0, style=bold];
m2_37 -> m2_38  [key=0, style=solid];
m2_45 -> m2_46  [key=0, style=solid];
m2_45 -> m2_48  [key=0, style=solid];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_48  [key=2, style=dotted];
m2_46 -> m2_4  [key=2, style=dotted];
m2_46 -> m2_27  [key=2, style=dotted];
m2_46 -> m2_29  [key=2, style=dotted];
m2_46 -> m2_38  [key=2, style=dotted];
m2_47 -> m2_45  [color=blue, key=0, style=bold];
m2_47 -> m2_49  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_47 -> m2_52  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_47 -> m2_55  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_47 -> m2_58  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_47 -> m2_60  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_47 -> m2_47  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_50  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_47 -> m2_51  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_47 -> m2_53  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_47 -> m2_54  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_47 -> m2_56  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_47 -> m2_57  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_47 -> m2_59  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_8 -> m2_13  [color=green, key=1, label=int, style=dashed];
m2_8 -> m2_18  [color=green, key=1, label=int, style=dashed];
m2_8 -> m2_8  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_10  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_8 -> m2_11  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_8 -> m2_12  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_8 -> m2_14  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_8 -> m2_15  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_8 -> m2_16  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_8 -> m2_17  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_8 -> m2_19  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_8 -> m2_20  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_8 -> m2_21  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_8 -> m2_22  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_8 -> m2_23  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_8 -> m2_24  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_40 -> m2_62  [key=0, style=solid];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_30  [key=2, style=dotted];
m2_25 -> m2_31  [key=2, style=dotted];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_28  [key=2, style=dotted];
m2_26 -> m2_4  [key=2, style=dotted];
m2_26 -> m2_0  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_13  [color=green, key=1, label=int, style=dashed];
m2_0 -> m2_18  [color=green, key=1, label=int, style=dashed];
m2_0 -> m2_2  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_0 -> m2_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_0 -> m2_6  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_0 -> m2_7  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_0 -> m2_8  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_0 -> m2_9  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_0 -> m2_10  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_0 -> m2_11  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_0 -> m2_12  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_0 -> m2_14  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_0 -> m2_15  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_0 -> m2_16  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_0 -> m2_17  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_0 -> m2_19  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_0 -> m2_20  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_0 -> m2_21  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_0 -> m2_22  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_0 -> m2_23  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_0 -> m2_24  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_1 -> m2_4  [key=2, style=dotted];
m2_2 -> m2_0  [color=blue, key=0, style=bold];
m2_2 -> m2_27  [key=2, style=dotted];
m2_2 -> m2_26  [key=0, style=solid];
m2_3 -> m2_5  [key=0, style=solid];
m2_3 -> m2_4  [key=0, style=solid];
m2_16 -> m2_0  [key=2, style=dotted];
m2_16 -> m2_27  [key=2, style=dotted];
m2_16 -> m2_29  [key=2, style=dotted];
m2_16 -> m2_17  [key=0, style=solid];
m2_13 -> m2_14  [color=green, key=0, style=solid];
m2_13 -> m2_0  [color=green, key=2, style=dotted];
m2_13 -> m2_27  [color=green, key=2, style=dotted];
m2_13 -> m2_29  [color=green, key=2, style=dotted];
m2_5 -> m2_13  [color=green, key=1, label=parts, style=dashed];
m2_5 -> m2_6  [color=red, key=0, style=solid];
m2_5 -> m2_28  [key=2, style=dotted];
m2_5 -> m2_7  [color=darkseagreen4, key=1, label=parts, style=dashed];
m2_5 -> m2_10  [color=darkseagreen4, key=1, label=parts, style=dashed];
m2_5 -> m2_16  [color=darkseagreen4, key=1, label=parts, style=dashed];
m2_5 -> m2_19  [color=darkseagreen4, key=1, label=parts, style=dashed];
m2_5 -> m2_22  [color=darkseagreen4, key=1, label=parts, style=dashed];
m2_5 -> m2_24  [color=darkseagreen4, key=1, label=parts, style=dashed];
m2_5 -> m2_25  [color=darkseagreen4, key=1, label=parts, style=dashed];
m2_14 -> m2_18  [color=green, key=1, label=int, style=dashed];
m2_14 -> m2_14  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_16  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_14 -> m2_17  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_14 -> m2_19  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_14 -> m2_20  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_14 -> m2_21  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_14 -> m2_22  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_14 -> m2_23  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_14 -> m2_24  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_14 -> m2_4  [key=2, style=dotted];
m2_15 -> m2_18  [color=green, key=0, style=solid];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_13  [color=blue, key=0, style=bold];
m2_7 -> m2_0  [key=2, style=dotted];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_27  [key=2, style=dotted];
m2_7 -> m2_29  [key=2, style=dotted];
m2_7 -> m2_5  [color=blue, key=0, style=bold];
m2_6 -> m2_7  [color=red, key=0, style=solid];
m2_6 -> m2_9  [key=0, style=solid];
m2_6 -> m2_8  [color=red, key=2, style=dotted];
m2_6 -> m2_4  [color=red, key=2, style=dotted];
m2_20 -> m2_20  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_20 -> m2_23  [key=0, style=solid];
m2_20 -> m2_24  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_34  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_32 -> m2_35  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_40  [key=2, style=dotted];
m2_38 -> m2_4  [key=2, style=dotted];
m2_38 -> m2_43  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_38 -> m2_46  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_38 -> m2_49  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_38 -> m2_52  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_38 -> m2_55  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_38 -> m2_58  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_38 -> m2_60  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_38 -> m2_42  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_38 -> m2_44  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_38 -> m2_45  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_38 -> m2_47  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_38 -> m2_48  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_38 -> m2_50  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_38 -> m2_51  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_38 -> m2_53  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_38 -> m2_54  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_38 -> m2_56  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_38 -> m2_57  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_38 -> m2_59  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_39 -> m2_37  [color=blue, key=0, style=bold];
m2_39 -> m2_41  [key=0, style=solid];
m2_39 -> m2_40  [key=0, style=solid];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_35  [key=0, style=solid];
m2_33 -> m2_37  [key=2, style=dotted];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_36  [key=2, style=dotted];
m2_34 -> m2_4  [key=2, style=dotted];
m2_35 -> m2_33  [color=blue, key=0, style=bold];
m2_35 -> m2_36  [key=0, style=solid];
m2_132 -> m2_133  [key=0, style=solid];
m2_132 -> m2_49  [color=darkorchid, key=3, label="method methodReturn System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator", style=bold];
m2_133 -> m2_134  [key=0, style=solid];
m2_133 -> m2_49  [key=2, style=dotted];
m2_134 -> m2_132  [color=blue, key=0, style=bold];
m2_44 -> m2_46  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_44 -> m2_49  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_44 -> m2_52  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_44 -> m2_55  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_44 -> m2_58  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_44 -> m2_60  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_44 -> m2_44  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_47  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_44 -> m2_48  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_44 -> m2_50  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_44 -> m2_51  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_44 -> m2_53  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_44 -> m2_54  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_44 -> m2_56  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_44 -> m2_57  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_44 -> m2_59  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_51  [key=0, style=solid];
m2_135 -> m2_133  [color=darkseagreen4, key=1, label="Humanizer.Tests.PluralTestSource", style=dashed];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=2, style=dotted];
m3_2 -> m3_0  [color=blue, key=0, style=bold];
m3_4 -> m3_5  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_3  [key=2, style=dotted];
m3_6 -> m3_4  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_7  [key=2, style=dotted];
m5_1 -> m5_8  [key=2, style=dotted];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_9  [key=2, style=dotted];
m5_2 -> m5_8  [key=2, style=dotted];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_10  [key=2, style=dotted];
m5_3 -> m5_8  [key=2, style=dotted];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_11  [key=2, style=dotted];
m5_4 -> m5_8  [key=2, style=dotted];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_12  [key=2, style=dotted];
m5_5 -> m5_8  [key=2, style=dotted];
m5_6 -> m5_0  [color=blue, key=0, style=bold];
m5_13 -> m5_1  [color=darkseagreen4, key=1, label="Humanizer.Configuration.OrdinalizerRegistry", style=dashed];
m5_13 -> m5_2  [color=darkseagreen4, key=1, label="Humanizer.Configuration.OrdinalizerRegistry", style=dashed];
m5_13 -> m5_3  [color=darkseagreen4, key=1, label="Humanizer.Configuration.OrdinalizerRegistry", style=dashed];
m5_13 -> m5_4  [color=darkseagreen4, key=1, label="Humanizer.Configuration.OrdinalizerRegistry", style=dashed];
m5_13 -> m5_5  [color=darkseagreen4, key=1, label="Humanizer.Configuration.OrdinalizerRegistry", style=dashed];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=2, style=dotted];
m6_2 -> m6_0  [color=blue, key=0, style=bold];
}
