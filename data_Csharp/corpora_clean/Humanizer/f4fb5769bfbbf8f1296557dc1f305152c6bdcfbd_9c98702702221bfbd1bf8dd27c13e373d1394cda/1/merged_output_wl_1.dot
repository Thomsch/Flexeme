digraph  {
d1 [cluster="Humanizer.Configuration.CollectionFormatterRegistry.CollectionFormatterRegistry()", color=green, community=0, label="0: Register<EnglishCollectionFormatter>(''en'')", span="9-9"];
d4 [label="Humanizer.Configuration.CollectionFormatterRegistry", span=""];
d0 [cluster="Humanizer.Configuration.CollectionFormatterRegistry.CollectionFormatterRegistry()", label="Entry Humanizer.Configuration.CollectionFormatterRegistry.CollectionFormatterRegistry()", span="6-6"];
d2 [cluster="Humanizer.Configuration.CollectionFormatterRegistry.CollectionFormatterRegistry()", label="Exit Humanizer.Configuration.CollectionFormatterRegistry.CollectionFormatterRegistry()", span="6-6"];
d3 [cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.Register<T>(string)", label="Entry Humanizer.Configuration.LocaliserRegistry<TLocaliser>.Register<T>(string)", span="45-45"];
m0_9 [cluster="Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.HoursAgo(int, string)", file="CollectionHumanizeExtensions.cs", label="Entry Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.HoursAgo(int, string)", span="30-30"];
m0_76 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", span="6-6"];
m0_85 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceWithoutRange.FakeOptionsWithSequenceWithoutRange()", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceWithoutRange.FakeOptionsWithSequenceWithoutRange()", span="7-7"];
m0_89 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator()", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator()", span="201-201"];
m0_90 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator()", file="CollectionHumanizeExtensions.cs", label="var expectedResult = new FakeOptionsWithSequenceAndSeparator\r\n                {\r\n                    LongSequence = new[] { 1L, 1234L, 59678L },\r\n                    StringSequence = new string[] { }\r\n                }", span="204-208"];
m0_91 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator()", file="CollectionHumanizeExtensions.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndSeparator(),\r\n                new[] { ''--long-seq'', ''1;1234;59678'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="211-215"];
m0_92 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator()", file="CollectionHumanizeExtensions.cs", label="expectedResult.ShouldHave().AllProperties().EqualTo(result.Value)", span="218-218"];
m0_93 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator()", file="CollectionHumanizeExtensions.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator()", span="201-201"];
m0_200 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", span="437-437"];
m0_201 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="CollectionHumanizeExtensions.cs", label="var expectedResult = new[] { new UnknownOptionError(''z'') }", span="440-440"];
m0_202 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="CollectionHumanizeExtensions.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-zx'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="443-447"];
m0_203 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="CollectionHumanizeExtensions.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="450-450"];
m0_204 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="CollectionHumanizeExtensions.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", span="437-437"];
m0_65 [cluster="Unk.ShouldHave", file="CollectionHumanizeExtensions.cs", label="Entry Unk.ShouldHave", span=""];
m0_192 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", span="418-418"];
m0_193 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="CollectionHumanizeExtensions.cs", label="var expectedResult = new[] { new UnknownOptionError(''z'') }", span="421-421"];
m0_194 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="CollectionHumanizeExtensions.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-z'', ''-x'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="424-428"];
m0_195 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="CollectionHumanizeExtensions.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="431-431"];
m0_196 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="CollectionHumanizeExtensions.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", span="418-418"];
m0_20 [cluster="Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.MinutesFromNow(int, string)", file="CollectionHumanizeExtensions.cs", label="Exit Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.MinutesFromNow(int, string)", span="55-55"];
m0_0 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", span="15-15"];
m0_1 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="CollectionHumanizeExtensions.cs", label="var fakeOptions = new FakeOptions()", span="18-18"];
m0_2 [cluster="Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.DaysAgo(int, string)", file="CollectionHumanizeExtensions.cs", label="Entry Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.DaysAgo(int, string)", span="13-13"];
m0_3 [cluster="Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.DaysAgo(int, string)", color=green, community=0, file="CollectionHumanizeExtensions.cs", label="0: DateHumanize.Verify(expected, days, TimeUnit.Day, Tense.Past)", span="15-15"];
m0_4 [cluster="Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.DaysAgo(int, string)", file="CollectionHumanizeExtensions.cs", label="Exit Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.DaysAgo(int, string)", span="13-13"];
m0_5 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", file="CollectionHumanizeExtensions.cs", label="Entry Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo, System.DateTime?, System.DateTime?)", span="34-34"];
m0_134 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m0_30 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="new FakeOptionsWithDouble()", span="63-63"];
m0_31 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Exit lambda expression", span="63-63"];
m0_32 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithDouble.FakeOptionsWithDouble()", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithDouble.FakeOptionsWithDouble()", span="7-7"];
m0_51 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", span="113-113"];
m0_52 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="CollectionHumanizeExtensions.cs", label="var expectedResult = new[] { 10, 20, 30, 40 }", span="116-116"];
m0_53 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="CollectionHumanizeExtensions.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-i'', ''10'', ''20'', ''30'', ''40'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="119-123"];
m0_54 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="CollectionHumanizeExtensions.cs", label="Assert.True(expectedResult.SequenceEqual(result.Value.IntSequence))", span="126-126"];
m0_55 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="CollectionHumanizeExtensions.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", span="113-113"];
m0_10 [cluster="Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.HoursAgo(int, string)", color=green, community=0, file="CollectionHumanizeExtensions.cs", label="0: DateHumanize.Verify(expected, hours, TimeUnit.Hour, Tense.Past)", span="32-32"];
m0_33 [cluster="Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.YearsAgo(int, string)", file="CollectionHumanizeExtensions.cs", label="Entry Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.YearsAgo(int, string)", span="95-95"];
m0_34 [cluster="Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.YearsAgo(int, string)", file="CollectionHumanizeExtensions.cs", label="DateHumanize.Verify(expected, years, TimeUnit.Year, Tense.Past)", span="97-97"];
m0_35 [cluster="Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.YearsAgo(int, string)", file="CollectionHumanizeExtensions.cs", label="Exit Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.YearsAgo(int, string)", span="95-95"];
m0_36 [cluster="Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.YearsFromNow(int, string)", file="CollectionHumanizeExtensions.cs", label="Entry Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.YearsFromNow(int, string)", span="103-103"];
m0_37 [cluster="Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.YearsFromNow(int, string)", file="CollectionHumanizeExtensions.cs", label="DateHumanize.Verify(expected, years, TimeUnit.Year, Tense.Future)", span="105-105"];
m0_112 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="33-33"];
m0_41 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence()", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence()", span="94-94"];
m0_42 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence()", file="CollectionHumanizeExtensions.cs", label="var expectedResult = new[] { 1, 20, 300, 4000 }", span="97-97"];
m0_43 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence()", file="CollectionHumanizeExtensions.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequence(),\r\n                new[] { ''--int-seq'', ''1'', ''20'', ''300'', ''4000'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="100-104"];
m0_44 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence()", file="CollectionHumanizeExtensions.cs", label="Assert.True(expectedResult.SequenceEqual(result.Value.IntSequence))", span="107-107"];
m0_45 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence()", file="CollectionHumanizeExtensions.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence()", span="94-94"];
m0_8 [cluster="Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.DaysFromNow(int, string)", file="CollectionHumanizeExtensions.cs", label="Exit Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.DaysFromNow(int, string)", span="22-22"];
m0_138 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSets.FakeOptionsWithSets()", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSets.FakeOptionsWithSets()", span="4-4"];
m0_179 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="316-316"];
m0_21 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Entry lambda expression", span="44-44"];
m0_22 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="new FakeOptions()", span="44-44"];
m0_23 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Exit lambda expression", span="44-44"];
m0_50 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequence.FakeOptionsWithSequence()", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequence.FakeOptionsWithSequence()", span="7-7"];
m0_24 [cluster="Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.MonthsFromNow(int, string)", file="CollectionHumanizeExtensions.cs", label="Entry Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.MonthsFromNow(int, string)", span="71-71"];
m0_25 [cluster="Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.MonthsFromNow(int, string)", file="CollectionHumanizeExtensions.cs", label="DateHumanize.Verify(expected, months, TimeUnit.Month, Tense.Future)", span="73-73"];
m0_26 [cluster="Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.MonthsFromNow(int, string)", file="CollectionHumanizeExtensions.cs", label="Exit Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.MonthsFromNow(int, string)", span="71-71"];
m0_27 [cluster="Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.SecondsAgo(int, string)", file="CollectionHumanizeExtensions.cs", label="Entry Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.SecondsAgo(int, string)", span="79-79"];
m0_28 [cluster="Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.SecondsAgo(int, string)", file="CollectionHumanizeExtensions.cs", label="DateHumanize.Verify(expected, seconds, TimeUnit.Second, Tense.Past)", span="81-81"];
m0_156 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", span="341-341"];
m0_157 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="CollectionHumanizeExtensions.cs", label="var expectedResult = new[]\r\n            {\r\n                new MissingRequiredOptionError(new NameInfo('''', ''ftpurl'')),\r\n                new MissingRequiredOptionError(new NameInfo('''', ''weburl''))\r\n            }", span="343-347"];
m0_158 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="CollectionHumanizeExtensions.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequiredAndSet(),\r\n                new[] {''''},\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="349-353"];
m0_159 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="CollectionHumanizeExtensions.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="356-356"];
m0_160 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="CollectionHumanizeExtensions.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", span="341-341"];
m0_29 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Entry lambda expression", span="63-63"];
m0_144 [cluster="CommandLine.Tests.Fakes.FakeOptionWithRequiredAndSet.FakeOptionWithRequiredAndSet()", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionWithRequiredAndSet.FakeOptionWithRequiredAndSet()", span="2-2"];
m0_80 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", span="179-179"];
m0_81 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", file="CollectionHumanizeExtensions.cs", label="var expectedResult = new FakeOptionsWithSequenceWithoutRange\r\n                {\r\n                    LongSequence = new[] { 1L, 2L, 3L, 4L, 5L, 6L }\r\n                }", span="182-185"];
m0_82 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", file="CollectionHumanizeExtensions.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceWithoutRange(),\r\n                new[] { ''1'', ''2'', ''3'', ''4'', ''5'', ''6'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="188-192"];
m0_83 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", file="CollectionHumanizeExtensions.cs", label="expectedResult.ShouldHave().AllProperties().EqualTo(result.Value)", span="195-195"];
m0_84 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", file="CollectionHumanizeExtensions.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", span="179-179"];
m0_67 [cluster="Unk.EqualTo", file="CollectionHumanizeExtensions.cs", label="Entry Unk.EqualTo", span=""];
m0_183 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", span="399-399"];
m0_184 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="CollectionHumanizeExtensions.cs", label="var expectedResult = new[] { new UnknownOptionError(''xyz'') }", span="402-402"];
m0_185 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="CollectionHumanizeExtensions.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''--stringvalue'', ''abc'', ''--xyz'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="405-409"];
m0_186 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="CollectionHumanizeExtensions.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="412-412"];
m0_187 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="CollectionHumanizeExtensions.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", span="399-399"];
m0_66 [cluster="Unk.AllProperties", file="CollectionHumanizeExtensions.cs", label="Entry Unk.AllProperties", span=""];
m0_98 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", span="224-224"];
m0_99 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", file="CollectionHumanizeExtensions.cs", label="var expectedResult = new FakeOptionsWithSequenceAndSeparator\r\n            {\r\n                LongSequence = new long[] {},\r\n                StringSequence = new[] { ''eml1@xyz.com'', ''test@unit.org'', ''xyz@srv.it'' }\r\n            }", span="227-231"];
m0_100 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", file="CollectionHumanizeExtensions.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndSeparator(),\r\n                new[] { ''-s'', ''eml1@xyz.com,test@unit.org,xyz@srv.it'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="234-238"];
m0_101 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", file="CollectionHumanizeExtensions.cs", label="expectedResult.ShouldHave().AllProperties().EqualTo(result.Value)", span="241-241"];
m0_102 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", file="CollectionHumanizeExtensions.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", span="224-224"];
m0_165 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="361-361"];
m0_166 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="CollectionHumanizeExtensions.cs", label="var expectedResult = new[] { new MissingRequiredOptionError(new NameInfo('''', ''str'')) }", span="364-364"];
m0_167 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="CollectionHumanizeExtensions.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequired(),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="367-371"];
m0_168 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="CollectionHumanizeExtensions.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="374-374"];
m0_169 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="CollectionHumanizeExtensions.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="361-361"];
m0_46 [cluster="Unk.SequenceEqual", file="CollectionHumanizeExtensions.cs", label="Entry Unk.SequenceEqual", span=""];
m0_161 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="283-283"];
m0_15 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", span="37-37"];
m0_16 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", color=green, community=0, file="CollectionHumanizeExtensions.cs", label="0: var expectedResult = -123", span="40-40"];
m0_17 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", file="CollectionHumanizeExtensions.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-123'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="43-47"];
m0_38 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Entry lambda expression", span="82-82"];
m0_6 [cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6"];
m0_7 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", color=green, community=0, file="CollectionHumanizeExtensions.cs", label="0: Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="338-338"];
m0_148 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", span="322-322"];
m0_149 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="CollectionHumanizeExtensions.cs", label="var expectedResult = new FakeOptionWithRequiredAndSet {\r\n                FtpUrl = ''str1'',\r\n                WebUrl = ''str2''\r\n            }", span="324-327"];
m0_150 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="CollectionHumanizeExtensions.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequiredAndSet(),\r\n                new[] { ''--ftpurl'', ''str1'', ''--weburl'', ''str2'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="329-333"];
m0_151 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="CollectionHumanizeExtensions.cs", label="expectedResult.ShouldHave().AllProperties().EqualTo(result.Value)", span="336-336"];
m0_152 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="CollectionHumanizeExtensions.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", span="322-322"];
m0_133 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="294-294"];
m0_18 [cluster="Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.MinutesFromNow(int, string)", file="CollectionHumanizeExtensions.cs", label="Entry Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.MinutesFromNow(int, string)", span="55-55"];
m0_19 [cluster="Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.MinutesFromNow(int, string)", color=green, community=0, file="CollectionHumanizeExtensions.cs", label="0: DateHumanize.Verify(expected, minutes, TimeUnit.Minute, Tense.Future)", span="57-57"];
m0_127 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="12-12"];
m0_139 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", span="302-302"];
m0_140 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="CollectionHumanizeExtensions.cs", label="var expectedResult = new FakeOptionWithRequiredAndSet {\r\n                FtpUrl = ''str1'',\r\n                WebUrl = null\r\n            }", span="304-307"];
m0_141 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="CollectionHumanizeExtensions.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequiredAndSet(),\r\n                new[] { ''--ftpurl'', ''str1''},\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="309-313"];
m0_142 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="CollectionHumanizeExtensions.cs", label="expectedResult.ShouldHave().AllProperties().EqualTo(result.Value)", span="316-316"];
m0_143 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="CollectionHumanizeExtensions.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", span="302-302"];
m0_94 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndSeparator.FakeOptionsWithSequenceAndSeparator()", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndSeparator.FakeOptionsWithSequenceAndSeparator()", span="7-7"];
m0_205 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Entry lambda expression", span="444-444"];
m0_13 [cluster="Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.HoursFromNow(int, string)", color=green, community=0, file="CollectionHumanizeExtensions.cs", label="0: DateHumanize.Verify(expected, hours, TimeUnit.Hour, Tense.Future)", span="40-40"];
m0_12 [cluster="Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.HoursFromNow(int, string)", file="CollectionHumanizeExtensions.cs", label="Entry Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.HoursFromNow(int, string)", span="38-38"];
m0_14 [cluster="Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.HoursFromNow(int, string)", file="CollectionHumanizeExtensions.cs", label="Exit Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.HoursFromNow(int, string)", span="38-38"];
m0_39 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="new FakeOptionsWithDouble()", span="82-82"];
m0_40 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Exit lambda expression", span="82-82"];
m0_47 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Entry lambda expression", span="101-101"];
m0_48 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="new FakeOptionsWithSequence()", span="101-101"];
m0_49 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Exit lambda expression", span="101-101"];
m0_56 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Entry lambda expression", span="120-120"];
m0_57 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="new FakeOptions()", span="120-120"];
m0_58 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Exit lambda expression", span="120-120"];
m0_68 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Entry lambda expression", span="142-142"];
m0_69 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="new FakeOptionsWithEnum()", span="142-142"];
m0_70 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Exit lambda expression", span="142-142"];
m0_77 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Entry lambda expression", span="167-167"];
m0_78 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="new FakeOptionsWithValues()", span="167-167"];
m0_79 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Exit lambda expression", span="167-167"];
m0_86 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Entry lambda expression", span="189-189"];
m0_87 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="new FakeOptionsWithSequenceWithoutRange()", span="189-189"];
m0_88 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Exit lambda expression", span="189-189"];
m0_95 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Entry lambda expression", span="212-212"];
m0_96 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="new FakeOptionsWithSequenceAndSeparator()", span="212-212"];
m0_97 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Exit lambda expression", span="212-212"];
m0_103 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Entry lambda expression", span="235-235"];
m0_104 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="new FakeOptionsWithSequenceAndSeparator()", span="235-235"];
m0_105 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Exit lambda expression", span="235-235"];
m0_113 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Entry lambda expression", span="264-264"];
m0_116 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Entry lambda expression", span="265-267"];
m0_114 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="new FakeOptionsWithValues()", span="264-264"];
m0_115 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Exit lambda expression", span="264-264"];
m0_117 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)))", span="266-267"];
m0_121 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))", span="267-267"];
m0_125 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)", span="267-267"];
m0_118 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Exit lambda expression", span="265-267"];
m0_120 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Entry lambda expression", span="267-267"];
m0_122 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Exit lambda expression", span="267-267"];
m0_124 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Entry lambda expression", span="267-267"];
m0_126 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Exit lambda expression", span="267-267"];
m0_135 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Entry lambda expression", span="290-290"];
m0_136 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="new FakeOptionsWithSets()", span="290-290"];
m0_137 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Exit lambda expression", span="290-290"];
m0_145 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Entry lambda expression", span="310-310"];
m0_146 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="new FakeOptionWithRequiredAndSet()", span="310-310"];
m0_147 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Exit lambda expression", span="310-310"];
m0_153 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Entry lambda expression", span="330-330"];
m0_154 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="new FakeOptionWithRequiredAndSet()", span="330-330"];
m0_155 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Exit lambda expression", span="330-330"];
m0_162 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Entry lambda expression", span="350-350"];
m0_163 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="new FakeOptionWithRequiredAndSet()", span="350-350"];
m0_164 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Exit lambda expression", span="350-350"];
m0_170 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Entry lambda expression", span="368-368"];
m0_171 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="new FakeOptionWithRequired()", span="368-368"];
m0_172 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Exit lambda expression", span="368-368"];
m0_180 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Entry lambda expression", span="387-387"];
m0_181 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="new FakeOptions()", span="387-387"];
m0_182 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Exit lambda expression", span="387-387"];
m0_189 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Entry lambda expression", span="406-406"];
m0_190 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="new FakeOptions()", span="406-406"];
m0_191 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Exit lambda expression", span="406-406"];
m0_197 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Entry lambda expression", span="425-425"];
m0_198 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="new FakeOptions()", span="425-425"];
m0_199 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Exit lambda expression", span="425-425"];
m0_206 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="new FakeOptions()", span="444-444"];
m0_207 [cluster="lambda expression", file="CollectionHumanizeExtensions.cs", label="Exit lambda expression", span="444-444"];
m0_173 [cluster="CommandLine.Tests.Fakes.FakeOptionWithRequired.FakeOptionWithRequired()", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionWithRequired.FakeOptionWithRequired()", span="4-4"];
m0_64 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithEnum.FakeOptionsWithEnum()", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithEnum.FakeOptionsWithEnum()", span="14-14"];
m0_188 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="272-272"];
m0_123 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11"];
m0_11 [cluster="Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.HoursAgo(int, string)", file="CollectionHumanizeExtensions.cs", label="Exit Humanizer.Tests.Localisation.zhHans.DateHumanizeTests.HoursAgo(int, string)", span="30-30"];
m0_59 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", span="132-132"];
m0_60 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="CollectionHumanizeExtensions.cs", label="var expectedResult = new FakeOptionsWithEnum\r\n                {\r\n                    Colors = Colors.Green\r\n                }", span="135-138"];
m0_61 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="CollectionHumanizeExtensions.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithEnum(),\r\n                new[] { ''--colors'', ''Green'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="141-145"];
m0_62 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="CollectionHumanizeExtensions.cs", label="expectedResult.ShouldHave().AllProperties().EqualTo(result.Value)", span="148-148"];
m0_63 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="CollectionHumanizeExtensions.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", span="132-132"];
m0_71 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="154-154"];
m0_72 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="CollectionHumanizeExtensions.cs", label="var expectedResult = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = string.Empty,\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''a'', ''b'', ''c'' },\r\n                    IntValue = 20\r\n                }", span="157-163"];
m0_73 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="CollectionHumanizeExtensions.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithValues(),\r\n                new[] { ''10'', ''a'', ''b'', ''c'', ''20'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="166-170"];
m0_74 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="CollectionHumanizeExtensions.cs", label="expectedResult.ShouldHave().AllProperties().EqualTo(result.Value)", span="173-173"];
m0_75 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="CollectionHumanizeExtensions.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="154-154"];
m0_174 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", span="380-380"];
m0_175 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="CollectionHumanizeExtensions.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(new NameInfo(''i'', '''')) }", span="383-383"];
m0_176 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="CollectionHumanizeExtensions.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new [] { ''-i'', ''10'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="386-390"];
m0_177 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="CollectionHumanizeExtensions.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="393-393"];
m0_178 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="CollectionHumanizeExtensions.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", span="380-380"];
m0_128 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="279-279"];
m0_129 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="CollectionHumanizeExtensions.cs", label="var expectedResult = new[]\r\n                {\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''weburl'')),\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''ftpurl''))\r\n                }", span="282-286"];
m0_130 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="CollectionHumanizeExtensions.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSets(),\r\n                new[] { ''--weburl'', ''http://mywebsite.org/'', ''--ftpurl'', ''fpt://ftpsite.org/'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="289-293"];
m0_131 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="CollectionHumanizeExtensions.cs", label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="296-296"];
m0_132 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="CollectionHumanizeExtensions.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="279-279"];
m0_106 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="250-250"];
m0_107 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="CollectionHumanizeExtensions.cs", label="var expectedResult = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = ''str1'',\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''-a'', ''--bee'', ''-c'' },\r\n                    IntValue = 20\r\n                }", span="253-259"];
m0_108 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="CollectionHumanizeExtensions.cs", label="var arguments = new[] { ''--stringvalue'', ''str1'', ''--'', ''10'', ''-a'', ''--bee'', ''-c'', ''20'' }", span="260-260"];
m0_110 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="CollectionHumanizeExtensions.cs", label="expectedResult.ShouldHave().AllProperties().EqualTo(result.Value)", span="273-273"];
m0_109 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="CollectionHumanizeExtensions.cs", label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithValues(),\r\n                (a, optionSpecs) =>\r\n                    Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="263-270"];
m0_111 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="CollectionHumanizeExtensions.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="250-250"];
m0_119 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="CollectionHumanizeExtensions.cs", label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", span="33-33"];
m0_208 [file="CollectionHumanizeExtensions.cs", label=fakeOptions, span=""];
m0_209 [file="CollectionHumanizeExtensions.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m3_92 [cluster="Humanizer.Tests.DateHumanizeTests.AFewMinutesAgo()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.DateHumanizeTests.AFewMinutesAgo()", span="153-153"];
m3_94 [cluster="Humanizer.Tests.DateHumanizeTests.AFewMinutesAgo()", file="DefaultCollectionFormatter.cs", label="Verify(minsAgo, new TimeSpan(0, 0, -10, 0))", span="156-156"];
m3_93 [cluster="Humanizer.Tests.DateHumanizeTests.AFewMinutesAgo()", file="DefaultCollectionFormatter.cs", label="var minsAgo = string.Format(Resources.GetResource(ResourceKeys.DateHumanize.GetResourceKey(TimeUnit.Minute, 10)), 10)", span="155-155"];
m3_95 [cluster="Humanizer.Tests.DateHumanizeTests.AFewMinutesAgo()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.DateHumanizeTests.AFewMinutesAgo()", span="153-153"];
m3_7 [cluster="System.DateTime.Humanize(bool, System.DateTime?)", file="DefaultCollectionFormatter.cs", label="Entry System.DateTime.Humanize(bool, System.DateTime?)", span="18-18"];
m3_52 [cluster="Humanizer.Tests.DateHumanizeTests.AFewDaysFromNow()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.DateHumanizeTests.AFewDaysFromNow()", span="83-83"];
m3_54 [cluster="Humanizer.Tests.DateHumanizeTests.AFewDaysFromNow()", file="DefaultCollectionFormatter.cs", label="Verify(daysFromNow, new TimeSpan(10, 1, 0, 0))", span="86-86"];
m3_53 [cluster="Humanizer.Tests.DateHumanizeTests.AFewDaysFromNow()", file="DefaultCollectionFormatter.cs", label="var daysFromNow = string.Format(Resources.GetResource(ResourceKeys.DateHumanize.GetResourceKey(TimeUnit.Day, 10, true)), 10)", span="85-85"];
m3_55 [cluster="Humanizer.Tests.DateHumanizeTests.AFewDaysFromNow()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.DateHumanizeTests.AFewDaysFromNow()", span="83-83"];
m3_36 [cluster="Humanizer.Tests.DateHumanizeTests.AFewMinutesFromNow()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.DateHumanizeTests.AFewMinutesFromNow()", span="55-55"];
m3_38 [cluster="Humanizer.Tests.DateHumanizeTests.AFewMinutesFromNow()", file="DefaultCollectionFormatter.cs", label="Verify(minsFromNow, new TimeSpan(0, 0, 10, 0))", span="58-58"];
m3_37 [cluster="Humanizer.Tests.DateHumanizeTests.AFewMinutesFromNow()", file="DefaultCollectionFormatter.cs", label="var minsFromNow = string.Format(Resources.GetResource(ResourceKeys.DateHumanize.GetResourceKey(TimeUnit.Minute, 10, true)), 10)", span="57-57"];
m3_39 [cluster="Humanizer.Tests.DateHumanizeTests.AFewMinutesFromNow()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.DateHumanizeTests.AFewMinutesFromNow()", span="55-55"];
m3_72 [cluster="Humanizer.Tests.DateHumanizeTests.FewYearsFromNow()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.DateHumanizeTests.FewYearsFromNow()", span="118-118"];
m3_74 [cluster="Humanizer.Tests.DateHumanizeTests.FewYearsFromNow()", file="DefaultCollectionFormatter.cs", label="Verify(fewYearsFromNow, new TimeSpan(900, 0, 0, 0))", span="121-121"];
m3_73 [cluster="Humanizer.Tests.DateHumanizeTests.FewYearsFromNow()", file="DefaultCollectionFormatter.cs", label="var fewYearsFromNow = string.Format(Resources.GetResource(ResourceKeys.DateHumanize.GetResourceKey(TimeUnit.Year, 2, true)), 2)", span="120-120"];
m3_75 [cluster="Humanizer.Tests.DateHumanizeTests.FewYearsFromNow()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.DateHumanizeTests.FewYearsFromNow()", span="118-118"];
m3_120 [cluster="Humanizer.Tests.DateHumanizeTests.OneYearAgoIsNotAccureate()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.DateHumanizeTests.OneYearAgoIsNotAccureate()", span="202-202"];
m3_122 [cluster="Humanizer.Tests.DateHumanizeTests.OneYearAgoIsNotAccureate()", file="DefaultCollectionFormatter.cs", label="Verify(aYearAgo, new TimeSpan(-360, 0, 0, 0))", span="205-205"];
m3_121 [cluster="Humanizer.Tests.DateHumanizeTests.OneYearAgoIsNotAccureate()", file="DefaultCollectionFormatter.cs", label="var aYearAgo = Resources.GetResource(ResourceKeys.DateHumanize.GetResourceKey(TimeUnit.Year))", span="204-204"];
m3_123 [cluster="Humanizer.Tests.DateHumanizeTests.OneYearAgoIsNotAccureate()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.DateHumanizeTests.OneYearAgoIsNotAccureate()", span="202-202"];
m3_4 [cluster="Humanizer.Tests.DateHumanizeTests.VerifyWithCurrentDate(string, System.TimeSpan)", color=green, community=0, file="DefaultCollectionFormatter.cs", label="0: Assert.Equal(expectedString, localNow.Add(deltaFromNow).Humanize(utcDate: false, dateToCompareAgainst: localNow))", span="15-15"];
m3_9 [cluster="Humanizer.Tests.DateHumanizeTests.VerifyWithDateInjection(string, System.TimeSpan)", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.DateHumanizeTests.VerifyWithDateInjection(string, System.TimeSpan)", span="18-18"];
m3_10 [cluster="Humanizer.Tests.DateHumanizeTests.VerifyWithDateInjection(string, System.TimeSpan)", color=green, community=0, file="DefaultCollectionFormatter.cs", label="0: var utcNow = new DateTime(2013, 6, 20, 9, 58, 22, DateTimeKind.Utc)", span="20-20"];
m3_11 [cluster="Humanizer.Tests.DateHumanizeTests.VerifyWithDateInjection(string, System.TimeSpan)", color=green, community=0, file="DefaultCollectionFormatter.cs", label="0: var now = new DateTime(2013, 6, 20, 11, 58, 22, DateTimeKind.Local)", span="21-21"];
m3_12 [cluster="Humanizer.Tests.DateHumanizeTests.VerifyWithDateInjection(string, System.TimeSpan)", color=green, community=0, file="DefaultCollectionFormatter.cs", label="0: Assert.Equal(expectedString, utcNow.Add(deltaFromNow).Humanize(dateToCompareAgainst: utcNow))", span="23-23"];
m3_13 [cluster="Humanizer.Tests.DateHumanizeTests.VerifyWithDateInjection(string, System.TimeSpan)", color=green, community=0, file="DefaultCollectionFormatter.cs", label="0: Assert.Equal(expectedString, now.Add(deltaFromNow).Humanize(false, now))", span="24-24"];
m3_14 [cluster="Humanizer.Tests.DateHumanizeTests.VerifyWithDateInjection(string, System.TimeSpan)", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.DateHumanizeTests.VerifyWithDateInjection(string, System.TimeSpan)", span="18-18"];
m3_56 [cluster="Humanizer.Tests.DateHumanizeTests.OneMonthFromNow()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.DateHumanizeTests.OneMonthFromNow()", span="90-90"];
m3_58 [cluster="Humanizer.Tests.DateHumanizeTests.OneMonthFromNow()", file="DefaultCollectionFormatter.cs", label="Verify(oneMonthFromNow, new TimeSpan(31, 1, 0, 0))", span="93-93"];
m3_57 [cluster="Humanizer.Tests.DateHumanizeTests.OneMonthFromNow()", file="DefaultCollectionFormatter.cs", label="var oneMonthFromNow = Resources.GetResource(ResourceKeys.DateHumanize.GetResourceKey(TimeUnit.Month, 1, true))", span="92-92"];
m3_59 [cluster="Humanizer.Tests.DateHumanizeTests.OneMonthFromNow()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.DateHumanizeTests.OneMonthFromNow()", span="90-90"];
m3_104 [cluster="Humanizer.Tests.DateHumanizeTests.Yesterday()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.DateHumanizeTests.Yesterday()", span="174-174"];
m3_106 [cluster="Humanizer.Tests.DateHumanizeTests.Yesterday()", file="DefaultCollectionFormatter.cs", label="Verify(yesterday, new TimeSpan(-1, -10, 0, 0))", span="177-177"];
m3_105 [cluster="Humanizer.Tests.DateHumanizeTests.Yesterday()", file="DefaultCollectionFormatter.cs", label="var yesterday = Resources.GetResource(ResourceKeys.DateHumanize.GetResourceKey(TimeUnit.Day))", span="176-176"];
m3_107 [cluster="Humanizer.Tests.DateHumanizeTests.Yesterday()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.DateHumanizeTests.Yesterday()", span="174-174"];
m3_26 [cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file="DefaultCollectionFormatter.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0"];
m3_20 [cluster="Humanizer.Tests.DateHumanizeTests.OneSecondFromNow()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.DateHumanizeTests.OneSecondFromNow()", span="34-34"];
m3_22 [cluster="Humanizer.Tests.DateHumanizeTests.OneSecondFromNow()", file="DefaultCollectionFormatter.cs", label="Verify(oneSecondFromNow, new TimeSpan(0, 0, 0, 1))", span="37-37"];
m3_21 [cluster="Humanizer.Tests.DateHumanizeTests.OneSecondFromNow()", file="DefaultCollectionFormatter.cs", label="var oneSecondFromNow = Resources.GetResource(ResourceKeys.DateHumanize.GetResourceKey(TimeUnit.Second, 1, true))", span="36-36"];
m3_23 [cluster="Humanizer.Tests.DateHumanizeTests.OneSecondFromNow()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.DateHumanizeTests.OneSecondFromNow()", span="34-34"];
m3_84 [cluster="Humanizer.Tests.DateHumanizeTests.SecondsAgo()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.DateHumanizeTests.SecondsAgo()", span="139-139"];
m3_86 [cluster="Humanizer.Tests.DateHumanizeTests.SecondsAgo()", file="DefaultCollectionFormatter.cs", label="Verify(secondsAgo, new TimeSpan(0, 0, 0, -10))", span="142-142"];
m3_85 [cluster="Humanizer.Tests.DateHumanizeTests.SecondsAgo()", file="DefaultCollectionFormatter.cs", label="var secondsAgo = string.Format(Resources.GetResource(ResourceKeys.DateHumanize.GetResourceKey(TimeUnit.Second, 10)), 10)", span="141-141"];
m3_87 [cluster="Humanizer.Tests.DateHumanizeTests.SecondsAgo()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.DateHumanizeTests.SecondsAgo()", span="139-139"];
m3_31 [cluster="string.Format(string, object)", file="DefaultCollectionFormatter.cs", label="Entry string.Format(string, object)", span="0-0"];
m3_0 [cluster="Humanizer.Tests.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", span="50-50"];
m3_1 [cluster="Humanizer.Tests.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", color=green, community=0, file="DefaultCollectionFormatter.cs", label="1: Assert.Equal(words, number.ToOrdinalWords())", span="52-52"];
m3_2 [cluster="Humanizer.Tests.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", color=green, community=0, file="DefaultCollectionFormatter.cs", label="1: Exit Humanizer.Tests.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", span="50-50"];
m3_3 [cluster="int.ToOrdinalWords()", color=green, community=0, file="DefaultCollectionFormatter.cs", label="0: Entry int.ToOrdinalWords()", span="14-14"];
m3_5 [cluster="Humanizer.Tests.DateHumanizeTests.VerifyWithCurrentDate(string, System.TimeSpan)", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.DateHumanizeTests.VerifyWithCurrentDate(string, System.TimeSpan)", span="8-8"];
m3_40 [cluster="Humanizer.Tests.DateHumanizeTests.AnHourFromNow()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.DateHumanizeTests.AnHourFromNow()", span="62-62"];
m3_42 [cluster="Humanizer.Tests.DateHumanizeTests.AnHourFromNow()", file="DefaultCollectionFormatter.cs", label="Verify(anHourFromNow, new TimeSpan(0, 1, 10, 0))", span="65-65"];
m3_41 [cluster="Humanizer.Tests.DateHumanizeTests.AnHourFromNow()", file="DefaultCollectionFormatter.cs", label="var anHourFromNow = Resources.GetResource(ResourceKeys.DateHumanize.GetResourceKey(TimeUnit.Hour, 1, true))", span="64-64"];
m3_43 [cluster="Humanizer.Tests.DateHumanizeTests.AnHourFromNow()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.DateHumanizeTests.AnHourFromNow()", span="62-62"];
m3_24 [cluster="Humanizer.Localisation.ResourceKeys.DateHumanize.GetResourceKey(Humanizer.Localisation.TimeUnit, int, bool)", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Localisation.ResourceKeys.DateHumanize.GetResourceKey(Humanizer.Localisation.TimeUnit, int, bool)", span="27-27"];
m3_124 [cluster="Humanizer.Tests.DateHumanizeTests.OneYearAgo()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.DateHumanizeTests.OneYearAgo()", span="209-209"];
m3_126 [cluster="Humanizer.Tests.DateHumanizeTests.OneYearAgo()", file="DefaultCollectionFormatter.cs", label="Verify(aYearAgo, new TimeSpan(-400, 0, 0, 0))", span="212-212"];
m3_125 [cluster="Humanizer.Tests.DateHumanizeTests.OneYearAgo()", file="DefaultCollectionFormatter.cs", label="var aYearAgo = Resources.GetResource(ResourceKeys.DateHumanize.GetResourceKey(TimeUnit.Year))", span="211-211"];
m3_127 [cluster="Humanizer.Tests.DateHumanizeTests.OneYearAgo()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.DateHumanizeTests.OneYearAgo()", span="209-209"];
m3_68 [cluster="Humanizer.Tests.DateHumanizeTests.OneYearFromNow()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.DateHumanizeTests.OneYearFromNow()", span="111-111"];
m3_70 [cluster="Humanizer.Tests.DateHumanizeTests.OneYearFromNow()", file="DefaultCollectionFormatter.cs", label="Verify(aYearFromNow, new TimeSpan(400, 0, 0, 0))", span="114-114"];
m3_69 [cluster="Humanizer.Tests.DateHumanizeTests.OneYearFromNow()", file="DefaultCollectionFormatter.cs", label="var aYearFromNow = Resources.GetResource(ResourceKeys.DateHumanize.GetResourceKey(TimeUnit.Year, 1, true))", span="113-113"];
m3_71 [cluster="Humanizer.Tests.DateHumanizeTests.OneYearFromNow()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.DateHumanizeTests.OneYearFromNow()", span="111-111"];
m3_27 [cluster="Humanizer.Tests.DateHumanizeTests.SecondsFromNow()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.DateHumanizeTests.SecondsFromNow()", span="41-41"];
m3_29 [cluster="Humanizer.Tests.DateHumanizeTests.SecondsFromNow()", file="DefaultCollectionFormatter.cs", label="Verify(secsFromNow, new TimeSpan(0, 0, 0, 10))", span="44-44"];
m3_28 [cluster="Humanizer.Tests.DateHumanizeTests.SecondsFromNow()", file="DefaultCollectionFormatter.cs", label="var secsFromNow = string.Format(Resources.GetResource(ResourceKeys.DateHumanize.GetResourceKey(TimeUnit.Second, 10, true)), 10)", span="43-43"];
m3_30 [cluster="Humanizer.Tests.DateHumanizeTests.SecondsFromNow()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.DateHumanizeTests.SecondsFromNow()", span="41-41"];
m3_15 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="DefaultCollectionFormatter.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m3_80 [cluster="Humanizer.Tests.DateHumanizeTests.OneSecondAgo()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.DateHumanizeTests.OneSecondAgo()", span="132-132"];
m3_82 [cluster="Humanizer.Tests.DateHumanizeTests.OneSecondAgo()", file="DefaultCollectionFormatter.cs", label="Verify(aSecAgo, new TimeSpan(0, 0, 0, -1))", span="135-135"];
m3_81 [cluster="Humanizer.Tests.DateHumanizeTests.OneSecondAgo()", file="DefaultCollectionFormatter.cs", label="var aSecAgo = Resources.GetResource(ResourceKeys.DateHumanize.GetResourceKey(TimeUnit.Second))", span="134-134"];
m3_83 [cluster="Humanizer.Tests.DateHumanizeTests.OneSecondAgo()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.DateHumanizeTests.OneSecondAgo()", span="132-132"];
m3_6 [cluster="System.DateTime.Add(System.TimeSpan)", file="DefaultCollectionFormatter.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m3_88 [cluster="Humanizer.Tests.DateHumanizeTests.OneMinuteAgo()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.DateHumanizeTests.OneMinuteAgo()", span="146-146"];
m3_90 [cluster="Humanizer.Tests.DateHumanizeTests.OneMinuteAgo()", file="DefaultCollectionFormatter.cs", label="Verify(aMinuteAgo, new TimeSpan(0, 0, -1, -10))", span="149-149"];
m3_89 [cluster="Humanizer.Tests.DateHumanizeTests.OneMinuteAgo()", file="DefaultCollectionFormatter.cs", label="var aMinuteAgo = Resources.GetResource(ResourceKeys.DateHumanize.GetResourceKey(TimeUnit.Minute))", span="148-148"];
m3_91 [cluster="Humanizer.Tests.DateHumanizeTests.OneMinuteAgo()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.DateHumanizeTests.OneMinuteAgo()", span="146-146"];
m3_108 [cluster="Humanizer.Tests.DateHumanizeTests.AFewDaysAgo()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.DateHumanizeTests.AFewDaysAgo()", span="181-181"];
m3_110 [cluster="Humanizer.Tests.DateHumanizeTests.AFewDaysAgo()", file="DefaultCollectionFormatter.cs", label="Verify(fewDaysAgo, new TimeSpan(-10, -1, 0, 0))", span="184-184"];
m3_109 [cluster="Humanizer.Tests.DateHumanizeTests.AFewDaysAgo()", file="DefaultCollectionFormatter.cs", label="var fewDaysAgo = string.Format(Resources.GetResource(ResourceKeys.DateHumanize.GetResourceKey(TimeUnit.Day, 10)), 10)", span="183-183"];
m3_111 [cluster="Humanizer.Tests.DateHumanizeTests.AFewDaysAgo()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.DateHumanizeTests.AFewDaysAgo()", span="181-181"];
m3_64 [cluster="Humanizer.Tests.DateHumanizeTests.OneYearFromNowIsNotAccureate()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.DateHumanizeTests.OneYearFromNowIsNotAccureate()", span="104-104"];
m3_66 [cluster="Humanizer.Tests.DateHumanizeTests.OneYearFromNowIsNotAccureate()", file="DefaultCollectionFormatter.cs", label="Verify(aYearFromNow, new TimeSpan(360, 0, 0, 0))", span="107-107"];
m3_65 [cluster="Humanizer.Tests.DateHumanizeTests.OneYearFromNowIsNotAccureate()", file="DefaultCollectionFormatter.cs", label="var aYearFromNow = Resources.GetResource(ResourceKeys.DateHumanize.GetResourceKey(TimeUnit.Year, 1, true))", span="106-106"];
m3_67 [cluster="Humanizer.Tests.DateHumanizeTests.OneYearFromNowIsNotAccureate()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.DateHumanizeTests.OneYearFromNowIsNotAccureate()", span="104-104"];
m3_76 [cluster="Humanizer.Tests.DateHumanizeTests.JustNow()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.DateHumanizeTests.JustNow()", span="125-125"];
m3_78 [cluster="Humanizer.Tests.DateHumanizeTests.JustNow()", file="DefaultCollectionFormatter.cs", label="Verify(now, new TimeSpan(0, 0, 0, 0))", span="128-128"];
m3_77 [cluster="Humanizer.Tests.DateHumanizeTests.JustNow()", file="DefaultCollectionFormatter.cs", label="var now = Resources.GetResource(ResourceKeys.DateHumanize.Now)", span="127-127"];
m3_79 [cluster="Humanizer.Tests.DateHumanizeTests.JustNow()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.DateHumanizeTests.JustNow()", span="125-125"];
m3_44 [cluster="Humanizer.Tests.DateHumanizeTests.HoursFromNow()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.DateHumanizeTests.HoursFromNow()", span="69-69"];
m3_46 [cluster="Humanizer.Tests.DateHumanizeTests.HoursFromNow()", file="DefaultCollectionFormatter.cs", label="Verify(hoursFromNow, new TimeSpan(0, 10, 0, 0))", span="72-72"];
m3_45 [cluster="Humanizer.Tests.DateHumanizeTests.HoursFromNow()", file="DefaultCollectionFormatter.cs", label="var hoursFromNow = string.Format(Resources.GetResource(ResourceKeys.DateHumanize.GetResourceKey(TimeUnit.Hour, 10, true)), 10)", span="71-71"];
m3_47 [cluster="Humanizer.Tests.DateHumanizeTests.HoursFromNow()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.DateHumanizeTests.HoursFromNow()", span="69-69"];
m3_100 [cluster="Humanizer.Tests.DateHumanizeTests.HoursAgo()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.DateHumanizeTests.HoursAgo()", span="167-167"];
m3_102 [cluster="Humanizer.Tests.DateHumanizeTests.HoursAgo()", file="DefaultCollectionFormatter.cs", label="Verify(hoursAgo, new TimeSpan(0, -10, 0, 0))", span="170-170"];
m3_101 [cluster="Humanizer.Tests.DateHumanizeTests.HoursAgo()", file="DefaultCollectionFormatter.cs", label="var hoursAgo = string.Format(Resources.GetResource(ResourceKeys.DateHumanize.GetResourceKey(TimeUnit.Hour, 10)), 10)", span="169-169"];
m3_103 [cluster="Humanizer.Tests.DateHumanizeTests.HoursAgo()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.DateHumanizeTests.HoursAgo()", span="167-167"];
m3_112 [cluster="Humanizer.Tests.DateHumanizeTests.OneMonthAgo()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.DateHumanizeTests.OneMonthAgo()", span="188-188"];
m3_114 [cluster="Humanizer.Tests.DateHumanizeTests.OneMonthAgo()", file="DefaultCollectionFormatter.cs", label="Verify(aMonthAgo, new TimeSpan(-31, -1, 0, 0))", span="191-191"];
m3_113 [cluster="Humanizer.Tests.DateHumanizeTests.OneMonthAgo()", file="DefaultCollectionFormatter.cs", label="var aMonthAgo = Resources.GetResource(ResourceKeys.DateHumanize.GetResourceKey(TimeUnit.Month))", span="190-190"];
m3_115 [cluster="Humanizer.Tests.DateHumanizeTests.OneMonthAgo()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.DateHumanizeTests.OneMonthAgo()", span="188-188"];
m3_96 [cluster="Humanizer.Tests.DateHumanizeTests.AnHourAgo()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.DateHumanizeTests.AnHourAgo()", span="160-160"];
m3_98 [cluster="Humanizer.Tests.DateHumanizeTests.AnHourAgo()", file="DefaultCollectionFormatter.cs", label="Verify(anHourAgo, new TimeSpan(0, -1, -10, 0))", span="163-163"];
m3_97 [cluster="Humanizer.Tests.DateHumanizeTests.AnHourAgo()", file="DefaultCollectionFormatter.cs", label="var anHourAgo = Resources.GetResource(ResourceKeys.DateHumanize.GetResourceKey(TimeUnit.Hour))", span="162-162"];
m3_99 [cluster="Humanizer.Tests.DateHumanizeTests.AnHourAgo()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.DateHumanizeTests.AnHourAgo()", span="160-160"];
m3_116 [cluster="Humanizer.Tests.DateHumanizeTests.AFewMonthsAgo()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.DateHumanizeTests.AFewMonthsAgo()", span="195-195"];
m3_118 [cluster="Humanizer.Tests.DateHumanizeTests.AFewMonthsAgo()", file="DefaultCollectionFormatter.cs", label="Verify(monthsAgo, new TimeSpan(-62, -1, 0, 0))", span="198-198"];
m3_117 [cluster="Humanizer.Tests.DateHumanizeTests.AFewMonthsAgo()", file="DefaultCollectionFormatter.cs", label="var monthsAgo = string.Format(Resources.GetResource(ResourceKeys.DateHumanize.GetResourceKey(TimeUnit.Month, 2)), 2)", span="197-197"];
m3_119 [cluster="Humanizer.Tests.DateHumanizeTests.AFewMonthsAgo()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.DateHumanizeTests.AFewMonthsAgo()", span="195-195"];
m3_128 [cluster="Humanizer.Tests.DateHumanizeTests.FewYearsAgo()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.DateHumanizeTests.FewYearsAgo()", span="216-216"];
m3_130 [cluster="Humanizer.Tests.DateHumanizeTests.FewYearsAgo()", file="DefaultCollectionFormatter.cs", label="Verify(yearsAgo, new TimeSpan(-900, 0, 0, 0))", span="219-219"];
m3_129 [cluster="Humanizer.Tests.DateHumanizeTests.FewYearsAgo()", file="DefaultCollectionFormatter.cs", label="var yearsAgo = string.Format(Resources.GetResource(ResourceKeys.DateHumanize.GetResourceKey(TimeUnit.Year, 2)), 2)", span="218-218"];
m3_131 [cluster="Humanizer.Tests.DateHumanizeTests.FewYearsAgo()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.DateHumanizeTests.FewYearsAgo()", span="216-216"];
m3_32 [cluster="Humanizer.Tests.DateHumanizeTests.OneMinuteFromNow()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.DateHumanizeTests.OneMinuteFromNow()", span="48-48"];
m3_34 [cluster="Humanizer.Tests.DateHumanizeTests.OneMinuteFromNow()", file="DefaultCollectionFormatter.cs", label="Verify(oneMinFromNow, new TimeSpan(0, 0, 1, 1))", span="51-51"];
m3_33 [cluster="Humanizer.Tests.DateHumanizeTests.OneMinuteFromNow()", file="DefaultCollectionFormatter.cs", label="var oneMinFromNow = Resources.GetResource(ResourceKeys.DateHumanize.GetResourceKey(TimeUnit.Minute, 1, true))", span="50-50"];
m3_35 [cluster="Humanizer.Tests.DateHumanizeTests.OneMinuteFromNow()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.DateHumanizeTests.OneMinuteFromNow()", span="48-48"];
m3_25 [cluster="Humanizer.Localisation.Resources.GetResource(string)", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Localisation.Resources.GetResource(string)", span="16-16"];
m3_48 [cluster="Humanizer.Tests.DateHumanizeTests.Tomorrow()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.DateHumanizeTests.Tomorrow()", span="76-76"];
m3_50 [cluster="Humanizer.Tests.DateHumanizeTests.Tomorrow()", file="DefaultCollectionFormatter.cs", label="Verify(tomorrow, new TimeSpan(1, 10, 0, 0))", span="79-79"];
m3_49 [cluster="Humanizer.Tests.DateHumanizeTests.Tomorrow()", file="DefaultCollectionFormatter.cs", label="var tomorrow = Resources.GetResource(ResourceKeys.DateHumanize.GetResourceKey(TimeUnit.Day, 1, true))", span="78-78"];
m3_51 [cluster="Humanizer.Tests.DateHumanizeTests.Tomorrow()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.DateHumanizeTests.Tomorrow()", span="76-76"];
m3_60 [cluster="Humanizer.Tests.DateHumanizeTests.AFewMonthsFromNow()", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.DateHumanizeTests.AFewMonthsFromNow()", span="97-97"];
m3_62 [cluster="Humanizer.Tests.DateHumanizeTests.AFewMonthsFromNow()", file="DefaultCollectionFormatter.cs", label="Verify(monthsFromNow, new TimeSpan(62, 1, 0, 0))", span="100-100"];
m3_61 [cluster="Humanizer.Tests.DateHumanizeTests.AFewMonthsFromNow()", file="DefaultCollectionFormatter.cs", label="var monthsFromNow = string.Format(Resources.GetResource(ResourceKeys.DateHumanize.GetResourceKey(TimeUnit.Month, 2, true)), 2)", span="99-99"];
m3_63 [cluster="Humanizer.Tests.DateHumanizeTests.AFewMonthsFromNow()", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.DateHumanizeTests.AFewMonthsFromNow()", span="97-97"];
m3_16 [cluster="Humanizer.Tests.DateHumanizeTests.Verify(string, System.TimeSpan)", file="DefaultCollectionFormatter.cs", label="Entry Humanizer.Tests.DateHumanizeTests.Verify(string, System.TimeSpan)", span="27-27"];
m3_17 [cluster="Humanizer.Tests.DateHumanizeTests.Verify(string, System.TimeSpan)", color=green, community=0, file="DefaultCollectionFormatter.cs", label="0: VerifyWithCurrentDate(expectedString, deltaFromNow)", span="29-29"];
m3_18 [cluster="Humanizer.Tests.DateHumanizeTests.Verify(string, System.TimeSpan)", file="DefaultCollectionFormatter.cs", label="VerifyWithDateInjection(expectedString, deltaFromNow)", span="30-30"];
m3_19 [cluster="Humanizer.Tests.DateHumanizeTests.Verify(string, System.TimeSpan)", file="DefaultCollectionFormatter.cs", label="Exit Humanizer.Tests.DateHumanizeTests.Verify(string, System.TimeSpan)", span="27-27"];
m4_24 [cluster="string.Format(string, object, object, object)", file="EnglishCollectionFormatter.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m4_20 [cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="EnglishCollectionFormatter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0"];
m4_19 [cluster="System.Func<T, TResult>.Invoke(T)", file="EnglishCollectionFormatter.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m4_15 [cluster="System.ArgumentException.ArgumentException(string)", file="EnglishCollectionFormatter.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m4_22 [cluster="Unk.Join", file="EnglishCollectionFormatter.cs", label="Entry Unk.Join", span=""];
m4_0 [cluster="Humanizer.Localisation.CollectionFormatters.EnglishCollectionFormatter.EnglishCollectionFormatter()", file="EnglishCollectionFormatter.cs", label="Entry Humanizer.Localisation.CollectionFormatters.EnglishCollectionFormatter.EnglishCollectionFormatter()", span="8-8"];
m4_1 [cluster="Humanizer.Localisation.CollectionFormatters.EnglishCollectionFormatter.EnglishCollectionFormatter()", color=green, community=0, file="EnglishCollectionFormatter.cs", label="0: DefaultSeparator = ''and''", span="10-10"];
m4_2 [cluster="Humanizer.Localisation.CollectionFormatters.EnglishCollectionFormatter.EnglishCollectionFormatter()", file="EnglishCollectionFormatter.cs", label="Exit Humanizer.Localisation.CollectionFormatters.EnglishCollectionFormatter.EnglishCollectionFormatter()", span="8-8"];
m4_17 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="EnglishCollectionFormatter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m4_18 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="EnglishCollectionFormatter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m4_16 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="EnglishCollectionFormatter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m4_3 [cluster="Humanizer.Localisation.CollectionFormatters.EnglishCollectionFormatter.Humanize<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, string>, string)", file="EnglishCollectionFormatter.cs", label="Entry Humanizer.Localisation.CollectionFormatters.EnglishCollectionFormatter.Humanize<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, string>, string)", span="13-13"];
m4_4 [cluster="Humanizer.Localisation.CollectionFormatters.EnglishCollectionFormatter.Humanize<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, string>, string)", color=green, community=0, file="EnglishCollectionFormatter.cs", label="0: collection == null", span="15-15"];
m4_5 [cluster="Humanizer.Localisation.CollectionFormatters.EnglishCollectionFormatter.Humanize<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, string>, string)", color=green, community=0, file="EnglishCollectionFormatter.cs", label="0: throw new ArgumentException(''collection'');", span="16-16"];
m4_6 [cluster="Humanizer.Localisation.CollectionFormatters.EnglishCollectionFormatter.Humanize<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, string>, string)", color=green, community=0, file="EnglishCollectionFormatter.cs", label="0: var enumerable = collection as T[] ?? collection.ToArray()", span="18-18"];
m4_7 [cluster="Humanizer.Localisation.CollectionFormatters.EnglishCollectionFormatter.Humanize<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, string>, string)", color=green, community=0, file="EnglishCollectionFormatter.cs", label="0: int count = enumerable.Count()", span="20-20"];
m4_11 [cluster="Humanizer.Localisation.CollectionFormatters.EnglishCollectionFormatter.Humanize<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, string>, string)", color=green, community=0, file="EnglishCollectionFormatter.cs", label="0: return objectFormatter(enumerable.First());", span="26-26"];
m4_13 [cluster="Humanizer.Localisation.CollectionFormatters.EnglishCollectionFormatter.Humanize<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, string>, string)", color=green, community=0, file="EnglishCollectionFormatter.cs", label="0: return String.Format(formatString,\r\n                                 String.Join('', '', enumerable.Take(count - 1).Select(objectFormatter)),\r\n                                 separator,\r\n                                 objectFormatter(enumerable.Skip(count - 1).First()));", span="30-33"];
m4_10 [cluster="Humanizer.Localisation.CollectionFormatters.EnglishCollectionFormatter.Humanize<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, string>, string)", color=green, community=0, file="EnglishCollectionFormatter.cs", label="0: count == 1", span="25-25"];
m4_12 [cluster="Humanizer.Localisation.CollectionFormatters.EnglishCollectionFormatter.Humanize<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, string>, string)", color=green, community=0, file="EnglishCollectionFormatter.cs", label="0: string formatString = count > 2 ? ''{0}, {1} {2}'' : ''{0} {1} {2}''", span="28-28"];
m4_8 [cluster="Humanizer.Localisation.CollectionFormatters.EnglishCollectionFormatter.Humanize<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, string>, string)", color=green, community=0, file="EnglishCollectionFormatter.cs", label="0: count == 0", span="22-22"];
m4_9 [cluster="Humanizer.Localisation.CollectionFormatters.EnglishCollectionFormatter.Humanize<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, string>, string)", color=green, community=0, file="EnglishCollectionFormatter.cs", label="0: return '''';", span="23-23"];
m4_14 [cluster="Humanizer.Localisation.CollectionFormatters.EnglishCollectionFormatter.Humanize<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, string>, string)", file="EnglishCollectionFormatter.cs", label="Exit Humanizer.Localisation.CollectionFormatters.EnglishCollectionFormatter.Humanize<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, string>, string)", span="13-13"];
m4_23 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="EnglishCollectionFormatter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m4_21 [cluster="Unk.Select", file="EnglishCollectionFormatter.cs", label="Entry Unk.Select", span=""];
m4_25 [file="EnglishCollectionFormatter.cs", label="Humanizer.Localisation.CollectionFormatters.EnglishCollectionFormatter", span=""];
d1 -> d2  [color=green, key=0, style=solid];
d1 -> d3  [color=green, key=2, style=dotted];
d4 -> d1  [color=green, key=1, label="Humanizer.Configuration.CollectionFormatterRegistry", style=dashed];
d0 -> d1  [color=green, key=0, style=solid];
d2 -> d0  [color=blue, key=0, style=bold];
m0_9 -> m0_10  [color=green, key=0, style=solid];
m0_89 -> m0_90  [key=0, style=solid];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_94  [key=2, style=dotted];
m0_90 -> m0_92  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_9  [key=2, style=dotted];
m0_91 -> m0_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_65  [key=2, style=dotted];
m0_92 -> m0_66  [key=2, style=dotted];
m0_92 -> m0_67  [key=2, style=dotted];
m0_93 -> m0_89  [color=blue, key=0, style=bold];
m0_200 -> m0_201  [key=0, style=solid];
m0_201 -> m0_202  [key=0, style=solid];
m0_201 -> m0_188  [key=2, style=dotted];
m0_201 -> m0_203  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_202 -> m0_203  [key=0, style=solid];
m0_202 -> m0_9  [key=2, style=dotted];
m0_202 -> m0_205  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_203 -> m0_204  [key=0, style=solid];
m0_203 -> m0_46  [key=2, style=dotted];
m0_203 -> m0_11  [key=2, style=dotted];
m0_204 -> m0_200  [color=blue, key=0, style=bold];
m0_192 -> m0_193  [key=0, style=solid];
m0_193 -> m0_194  [key=0, style=solid];
m0_193 -> m0_188  [key=2, style=dotted];
m0_193 -> m0_195  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_194 -> m0_195  [key=0, style=solid];
m0_194 -> m0_9  [key=2, style=dotted];
m0_194 -> m0_197  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_195 -> m0_196  [key=0, style=solid];
m0_195 -> m0_46  [key=2, style=dotted];
m0_195 -> m0_11  [key=2, style=dotted];
m0_196 -> m0_192  [color=blue, key=0, style=bold];
m0_20 -> m0_18  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_6  [key=2, style=dotted];
m0_1 -> m0_3  [color=darkseagreen4, key=1, label=fakeOptions, style=dashed];
m0_1 -> m0_13  [color=darkseagreen4, key=1, label=fakeOptions, style=dashed];
m0_2 -> m0_3  [color=green, key=0, style=solid];
m0_2 -> m0_7  [key=2, style=dotted];
m0_2 -> m0_8  [key=2, style=dotted];
m0_2 -> m0_4  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_3 -> m0_4  [color=green, key=0, style=solid];
m0_3 -> m0_9  [key=2, style=dotted];
m0_3 -> m0_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_3 -> m0_5  [color=green, key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_10  [key=2, style=dotted];
m0_4 -> m0_11  [key=2, style=dotted];
m0_4 -> m0_2  [color=blue, key=0, style=bold];
m0_5 -> m0_0  [color=blue, key=0, style=bold];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_32  [key=2, style=dotted];
m0_31 -> m0_5  [key=2, style=dotted];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_29  [color=blue, key=0, style=bold];
m0_32 -> m0_30  [color=blue, key=0, style=bold];
m0_51 -> m0_52  [key=0, style=solid];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_54  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_9  [key=2, style=dotted];
m0_53 -> m0_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_46  [key=2, style=dotted];
m0_54 -> m0_11  [key=2, style=dotted];
m0_55 -> m0_51  [color=blue, key=0, style=bold];
m0_10 -> m0_11  [color=green, key=0, style=solid];
m0_10 -> m0_5  [color=green, key=2, style=dotted];
m0_33 -> m0_34  [key=0, style=solid];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_36  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_34 -> m0_34  [color=darkorchid, key=3, label="Local variable double expectedResult", style=bold];
m0_34 -> m0_5  [key=2, style=dotted];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_9  [key=2, style=dotted];
m0_35 -> m0_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_35 -> m0_33  [color=blue, key=0, style=bold];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_20  [key=2, style=dotted];
m0_37 -> m0_33  [color=blue, key=0, style=bold];
m0_37 -> m0_5  [key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_41 -> m0_42  [key=0, style=solid];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_44  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_9  [key=2, style=dotted];
m0_43 -> m0_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_46  [key=2, style=dotted];
m0_44 -> m0_11  [key=2, style=dotted];
m0_45 -> m0_41  [color=blue, key=0, style=bold];
m0_8 -> m0_6  [color=blue, key=0, style=bold];
m0_21 -> m0_22  [key=0, style=solid];
m0_22 -> m0_5  [key=2, style=dotted];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_6  [key=2, style=dotted];
m0_23 -> m0_21  [color=blue, key=0, style=bold];
m0_24 -> m0_25  [key=0, style=solid];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_27  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_25 -> m0_25  [color=darkorchid, key=3, label="Local variable double expectedResult", style=bold];
m0_25 -> m0_5  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_9  [key=2, style=dotted];
m0_26 -> m0_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_26 -> m0_24  [color=blue, key=0, style=bold];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_20  [key=2, style=dotted];
m0_28 -> m0_24  [color=blue, key=0, style=bold];
m0_28 -> m0_5  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_156 -> m0_157  [key=0, style=solid];
m0_157 -> m0_158  [key=0, style=solid];
m0_157 -> m0_161  [key=2, style=dotted];
m0_157 -> m0_134  [key=2, style=dotted];
m0_157 -> m0_159  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_158 -> m0_159  [key=0, style=solid];
m0_158 -> m0_9  [key=2, style=dotted];
m0_158 -> m0_162  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_159 -> m0_160  [key=0, style=solid];
m0_159 -> m0_46  [key=2, style=dotted];
m0_159 -> m0_11  [key=2, style=dotted];
m0_160 -> m0_156  [color=blue, key=0, style=bold];
m0_29 -> m0_27  [color=blue, key=0, style=bold];
m0_29 -> m0_30  [key=0, style=solid];
m0_80 -> m0_81  [key=0, style=solid];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_85  [key=2, style=dotted];
m0_81 -> m0_83  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_9  [key=2, style=dotted];
m0_82 -> m0_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_65  [key=2, style=dotted];
m0_83 -> m0_66  [key=2, style=dotted];
m0_83 -> m0_67  [key=2, style=dotted];
m0_84 -> m0_80  [color=blue, key=0, style=bold];
m0_183 -> m0_184  [key=0, style=solid];
m0_184 -> m0_185  [key=0, style=solid];
m0_184 -> m0_188  [key=2, style=dotted];
m0_184 -> m0_186  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_185 -> m0_186  [key=0, style=solid];
m0_185 -> m0_9  [key=2, style=dotted];
m0_185 -> m0_189  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_186 -> m0_187  [key=0, style=solid];
m0_186 -> m0_46  [key=2, style=dotted];
m0_186 -> m0_11  [key=2, style=dotted];
m0_187 -> m0_183  [color=blue, key=0, style=bold];
m0_98 -> m0_99  [key=0, style=solid];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_94  [key=2, style=dotted];
m0_99 -> m0_101  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_9  [key=2, style=dotted];
m0_100 -> m0_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_65  [key=2, style=dotted];
m0_101 -> m0_66  [key=2, style=dotted];
m0_101 -> m0_67  [key=2, style=dotted];
m0_102 -> m0_98  [color=blue, key=0, style=bold];
m0_165 -> m0_166  [key=0, style=solid];
m0_166 -> m0_167  [key=0, style=solid];
m0_166 -> m0_161  [key=2, style=dotted];
m0_166 -> m0_134  [key=2, style=dotted];
m0_166 -> m0_168  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_167 -> m0_168  [key=0, style=solid];
m0_167 -> m0_9  [key=2, style=dotted];
m0_167 -> m0_170  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_168 -> m0_169  [key=0, style=solid];
m0_168 -> m0_46  [key=2, style=dotted];
m0_168 -> m0_11  [key=2, style=dotted];
m0_169 -> m0_165  [color=blue, key=0, style=bold];
m0_15 -> m0_16  [color=green, key=0, style=solid];
m0_16 -> m0_17  [color=green, key=0, style=solid];
m0_16 -> m0_5  [color=green, key=2, style=dotted];
m0_16 -> m0_18  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_16 -> m0_16  [color=darkorchid, key=3, label="Local variable int expectedResult", style=bold];
m0_17 -> m0_15  [color=blue, key=0, style=bold];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_9  [key=2, style=dotted];
m0_17 -> m0_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_38 -> m0_36  [color=blue, key=0, style=bold];
m0_38 -> m0_39  [key=0, style=solid];
m0_6 -> m0_7  [color=green, key=0, style=solid];
m0_7 -> m0_8  [color=green, key=0, style=solid];
m0_7 -> m0_5  [color=green, key=2, style=dotted];
m0_148 -> m0_149  [key=0, style=solid];
m0_149 -> m0_150  [key=0, style=solid];
m0_149 -> m0_144  [key=2, style=dotted];
m0_149 -> m0_151  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_150 -> m0_151  [key=0, style=solid];
m0_150 -> m0_9  [key=2, style=dotted];
m0_150 -> m0_153  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_151 -> m0_152  [key=0, style=solid];
m0_151 -> m0_65  [key=2, style=dotted];
m0_151 -> m0_66  [key=2, style=dotted];
m0_151 -> m0_67  [key=2, style=dotted];
m0_152 -> m0_148  [color=blue, key=0, style=bold];
m0_18 -> m0_19  [color=green, key=0, style=solid];
m0_18 -> m0_20  [key=2, style=dotted];
m0_19 -> m0_15  [color=blue, key=0, style=bold];
m0_19 -> m0_20  [color=green, key=0, style=solid];
m0_19 -> m0_5  [color=green, key=2, style=dotted];
m0_139 -> m0_140  [key=0, style=solid];
m0_140 -> m0_141  [key=0, style=solid];
m0_140 -> m0_144  [key=2, style=dotted];
m0_140 -> m0_142  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_141 -> m0_142  [key=0, style=solid];
m0_141 -> m0_9  [key=2, style=dotted];
m0_141 -> m0_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_142 -> m0_143  [key=0, style=solid];
m0_142 -> m0_65  [key=2, style=dotted];
m0_142 -> m0_66  [key=2, style=dotted];
m0_142 -> m0_67  [key=2, style=dotted];
m0_143 -> m0_139  [color=blue, key=0, style=bold];
m0_205 -> m0_206  [key=0, style=solid];
m0_13 -> m0_14  [color=green, key=0, style=solid];
m0_13 -> m0_5  [color=green, key=2, style=dotted];
m0_12 -> m0_13  [color=green, key=0, style=solid];
m0_14 -> m0_12  [color=blue, key=0, style=bold];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_32  [key=2, style=dotted];
m0_40 -> m0_38  [color=blue, key=0, style=bold];
m0_47 -> m0_48  [key=0, style=solid];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_50  [key=2, style=dotted];
m0_49 -> m0_47  [color=blue, key=0, style=bold];
m0_56 -> m0_57  [key=0, style=solid];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_6  [key=2, style=dotted];
m0_58 -> m0_56  [color=blue, key=0, style=bold];
m0_68 -> m0_69  [key=0, style=solid];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_64  [key=2, style=dotted];
m0_70 -> m0_68  [color=blue, key=0, style=bold];
m0_77 -> m0_78  [key=0, style=solid];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_76  [key=2, style=dotted];
m0_79 -> m0_77  [color=blue, key=0, style=bold];
m0_86 -> m0_87  [key=0, style=solid];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_85  [key=2, style=dotted];
m0_88 -> m0_86  [color=blue, key=0, style=bold];
m0_95 -> m0_96  [key=0, style=solid];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_94  [key=2, style=dotted];
m0_97 -> m0_95  [color=blue, key=0, style=bold];
m0_103 -> m0_104  [key=0, style=solid];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_94  [key=2, style=dotted];
m0_105 -> m0_103  [color=blue, key=0, style=bold];
m0_113 -> m0_114  [key=0, style=solid];
m0_116 -> m0_117  [key=0, style=solid];
m0_116 -> m0_121  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m0_116 -> m0_125  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_76  [key=2, style=dotted];
m0_115 -> m0_113  [color=blue, key=0, style=bold];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_119  [key=2, style=dotted];
m0_117 -> m0_120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_121 -> m0_122  [key=0, style=solid];
m0_121 -> m0_123  [key=2, style=dotted];
m0_121 -> m0_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_127  [key=2, style=dotted];
m0_118 -> m0_116  [color=blue, key=0, style=bold];
m0_120 -> m0_121  [key=0, style=solid];
m0_122 -> m0_120  [color=blue, key=0, style=bold];
m0_124 -> m0_125  [key=0, style=solid];
m0_126 -> m0_124  [color=blue, key=0, style=bold];
m0_135 -> m0_136  [key=0, style=solid];
m0_136 -> m0_137  [key=0, style=solid];
m0_136 -> m0_138  [key=2, style=dotted];
m0_137 -> m0_135  [color=blue, key=0, style=bold];
m0_145 -> m0_146  [key=0, style=solid];
m0_146 -> m0_147  [key=0, style=solid];
m0_146 -> m0_144  [key=2, style=dotted];
m0_147 -> m0_145  [color=blue, key=0, style=bold];
m0_153 -> m0_154  [key=0, style=solid];
m0_154 -> m0_155  [key=0, style=solid];
m0_154 -> m0_144  [key=2, style=dotted];
m0_155 -> m0_153  [color=blue, key=0, style=bold];
m0_162 -> m0_163  [key=0, style=solid];
m0_163 -> m0_164  [key=0, style=solid];
m0_163 -> m0_144  [key=2, style=dotted];
m0_164 -> m0_162  [color=blue, key=0, style=bold];
m0_170 -> m0_171  [key=0, style=solid];
m0_171 -> m0_172  [key=0, style=solid];
m0_171 -> m0_173  [key=2, style=dotted];
m0_172 -> m0_170  [color=blue, key=0, style=bold];
m0_180 -> m0_181  [key=0, style=solid];
m0_181 -> m0_182  [key=0, style=solid];
m0_181 -> m0_6  [key=2, style=dotted];
m0_182 -> m0_180  [color=blue, key=0, style=bold];
m0_189 -> m0_190  [key=0, style=solid];
m0_190 -> m0_191  [key=0, style=solid];
m0_190 -> m0_6  [key=2, style=dotted];
m0_191 -> m0_189  [color=blue, key=0, style=bold];
m0_197 -> m0_198  [key=0, style=solid];
m0_198 -> m0_199  [key=0, style=solid];
m0_198 -> m0_6  [key=2, style=dotted];
m0_199 -> m0_197  [color=blue, key=0, style=bold];
m0_206 -> m0_207  [key=0, style=solid];
m0_206 -> m0_6  [key=2, style=dotted];
m0_207 -> m0_205  [color=blue, key=0, style=bold];
m0_11 -> m0_9  [color=blue, key=0, style=bold];
m0_59 -> m0_60  [key=0, style=solid];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_64  [key=2, style=dotted];
m0_60 -> m0_62  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_9  [key=2, style=dotted];
m0_61 -> m0_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_65  [key=2, style=dotted];
m0_62 -> m0_66  [key=2, style=dotted];
m0_62 -> m0_67  [key=2, style=dotted];
m0_63 -> m0_59  [color=blue, key=0, style=bold];
m0_71 -> m0_72  [key=0, style=solid];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_76  [key=2, style=dotted];
m0_72 -> m0_74  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_9  [key=2, style=dotted];
m0_73 -> m0_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_65  [key=2, style=dotted];
m0_74 -> m0_66  [key=2, style=dotted];
m0_74 -> m0_67  [key=2, style=dotted];
m0_75 -> m0_71  [color=blue, key=0, style=bold];
m0_174 -> m0_175  [key=0, style=solid];
m0_175 -> m0_176  [key=0, style=solid];
m0_175 -> m0_179  [key=2, style=dotted];
m0_175 -> m0_134  [key=2, style=dotted];
m0_175 -> m0_177  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_176 -> m0_177  [key=0, style=solid];
m0_176 -> m0_9  [key=2, style=dotted];
m0_176 -> m0_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_177 -> m0_178  [key=0, style=solid];
m0_177 -> m0_46  [key=2, style=dotted];
m0_177 -> m0_11  [key=2, style=dotted];
m0_178 -> m0_174  [color=blue, key=0, style=bold];
m0_128 -> m0_129  [key=0, style=solid];
m0_129 -> m0_130  [key=0, style=solid];
m0_129 -> m0_133  [key=2, style=dotted];
m0_129 -> m0_134  [key=2, style=dotted];
m0_129 -> m0_131  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_130 -> m0_131  [key=0, style=solid];
m0_130 -> m0_9  [key=2, style=dotted];
m0_130 -> m0_135  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_131 -> m0_132  [key=0, style=solid];
m0_131 -> m0_46  [key=2, style=dotted];
m0_131 -> m0_11  [key=2, style=dotted];
m0_132 -> m0_128  [color=blue, key=0, style=bold];
m0_106 -> m0_107  [key=0, style=solid];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_76  [key=2, style=dotted];
m0_107 -> m0_110  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_108 -> m0_109  [key=0, style=solid];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_65  [key=2, style=dotted];
m0_110 -> m0_66  [key=2, style=dotted];
m0_110 -> m0_67  [key=2, style=dotted];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_112  [key=2, style=dotted];
m0_109 -> m0_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_109 -> m0_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_111 -> m0_106  [color=blue, key=0, style=bold];
m0_208 -> m0_13  [color=darkseagreen4, key=1, label=fakeOptions, style=dashed];
m0_209 -> m0_121  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m0_209 -> m0_125  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m3_92 -> m3_93  [key=0, style=solid];
m3_94 -> m3_16  [key=2, style=dotted];
m3_94 -> m3_95  [key=0, style=solid];
m3_94 -> m3_26  [key=2, style=dotted];
m3_93 -> m3_94  [key=0, style=solid];
m3_93 -> m3_24  [key=2, style=dotted];
m3_93 -> m3_25  [key=2, style=dotted];
m3_93 -> m3_31  [key=2, style=dotted];
m3_95 -> m3_92  [color=blue, key=0, style=bold];
m3_52 -> m3_53  [key=0, style=solid];
m3_54 -> m3_16  [key=2, style=dotted];
m3_54 -> m3_55  [key=0, style=solid];
m3_54 -> m3_26  [key=2, style=dotted];
m3_53 -> m3_54  [key=0, style=solid];
m3_53 -> m3_24  [key=2, style=dotted];
m3_53 -> m3_25  [key=2, style=dotted];
m3_53 -> m3_31  [key=2, style=dotted];
m3_55 -> m3_52  [color=blue, key=0, style=bold];
m3_36 -> m3_37  [key=0, style=solid];
m3_38 -> m3_16  [key=2, style=dotted];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_26  [key=2, style=dotted];
m3_37 -> m3_38  [key=0, style=solid];
m3_37 -> m3_24  [key=2, style=dotted];
m3_37 -> m3_25  [key=2, style=dotted];
m3_37 -> m3_31  [key=2, style=dotted];
m3_39 -> m3_36  [color=blue, key=0, style=bold];
m3_72 -> m3_73  [key=0, style=solid];
m3_74 -> m3_16  [key=2, style=dotted];
m3_74 -> m3_75  [key=0, style=solid];
m3_74 -> m3_26  [key=2, style=dotted];
m3_73 -> m3_74  [key=0, style=solid];
m3_73 -> m3_24  [key=2, style=dotted];
m3_73 -> m3_25  [key=2, style=dotted];
m3_73 -> m3_31  [key=2, style=dotted];
m3_75 -> m3_72  [color=blue, key=0, style=bold];
m3_120 -> m3_121  [key=0, style=solid];
m3_122 -> m3_16  [key=2, style=dotted];
m3_122 -> m3_123  [key=0, style=solid];
m3_122 -> m3_26  [key=2, style=dotted];
m3_121 -> m3_122  [key=0, style=solid];
m3_121 -> m3_24  [key=2, style=dotted];
m3_121 -> m3_25  [key=2, style=dotted];
m3_123 -> m3_120  [color=blue, key=0, style=bold];
m3_4 -> m3_5  [color=green, key=0, style=solid];
m3_4 -> m3_6  [color=green, key=2, style=dotted];
m3_4 -> m3_7  [color=green, key=2, style=dotted];
m3_4 -> m3_4  [color=green, key=2, style=dotted];
m3_9 -> m3_10  [color=green, key=0, style=solid];
m3_9 -> m3_12  [color=green, key=1, label=string, style=dashed];
m3_9 -> m3_13  [color=green, key=1, label=string, style=dashed];
m3_10 -> m3_11  [color=green, key=0, style=solid];
m3_10 -> m3_15  [color=green, key=2, style=dotted];
m3_10 -> m3_12  [color=green, key=1, label=utcNow, style=dashed];
m3_11 -> m3_12  [color=green, key=0, style=solid];
m3_11 -> m3_13  [color=green, key=1, label=now, style=dashed];
m3_11 -> m3_15  [color=green, key=2, style=dotted];
m3_12 -> m3_13  [color=green, key=0, style=solid];
m3_12 -> m3_6  [color=green, key=2, style=dotted];
m3_12 -> m3_7  [color=green, key=2, style=dotted];
m3_12 -> m3_4  [color=green, key=2, style=dotted];
m3_13 -> m3_14  [color=green, key=0, style=solid];
m3_13 -> m3_6  [color=green, key=2, style=dotted];
m3_13 -> m3_7  [color=green, key=2, style=dotted];
m3_13 -> m3_4  [color=green, key=2, style=dotted];
m3_14 -> m3_9  [color=blue, key=0, style=bold];
m3_56 -> m3_57  [key=0, style=solid];
m3_58 -> m3_16  [key=2, style=dotted];
m3_58 -> m3_59  [key=0, style=solid];
m3_58 -> m3_26  [key=2, style=dotted];
m3_57 -> m3_58  [key=0, style=solid];
m3_57 -> m3_24  [key=2, style=dotted];
m3_57 -> m3_25  [key=2, style=dotted];
m3_59 -> m3_56  [color=blue, key=0, style=bold];
m3_104 -> m3_105  [key=0, style=solid];
m3_106 -> m3_16  [key=2, style=dotted];
m3_106 -> m3_107  [key=0, style=solid];
m3_106 -> m3_26  [key=2, style=dotted];
m3_105 -> m3_106  [key=0, style=solid];
m3_105 -> m3_24  [key=2, style=dotted];
m3_105 -> m3_25  [key=2, style=dotted];
m3_107 -> m3_104  [color=blue, key=0, style=bold];
m3_20 -> m3_21  [key=0, style=solid];
m3_22 -> m3_16  [key=2, style=dotted];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_26  [key=2, style=dotted];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_24  [key=2, style=dotted];
m3_21 -> m3_25  [key=2, style=dotted];
m3_23 -> m3_20  [color=blue, key=0, style=bold];
m3_84 -> m3_85  [key=0, style=solid];
m3_86 -> m3_16  [key=2, style=dotted];
m3_86 -> m3_87  [key=0, style=solid];
m3_86 -> m3_26  [key=2, style=dotted];
m3_85 -> m3_86  [key=0, style=solid];
m3_85 -> m3_24  [key=2, style=dotted];
m3_85 -> m3_25  [key=2, style=dotted];
m3_85 -> m3_31  [key=2, style=dotted];
m3_87 -> m3_84  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [color=green, key=0, style=solid];
m3_0 -> m3_3  [color=green, key=1, label=string, style=dashed];
m3_0 -> m3_4  [color=green, key=1, label=string, style=dashed];
m3_1 -> m3_2  [color=green, key=0, style=solid];
m3_1 -> m3_3  [color=green, key=1, label=utcNow, style=dashed];
m3_1 -> m3_4  [key=2, style=dotted];
m3_2 -> m3_3  [color=green, key=0, style=solid];
m3_2 -> m3_4  [color=green, key=1, label=localNow, style=dashed];
m3_2 -> m3_0  [color=blue, key=0, style=bold];
m3_3 -> m3_4  [color=green, key=0, style=solid];
m3_3 -> m3_6  [color=green, key=2, style=dotted];
m3_3 -> m3_7  [color=green, key=2, style=dotted];
m3_5 -> m3_0  [color=blue, key=0, style=bold];
m3_40 -> m3_41  [key=0, style=solid];
m3_42 -> m3_16  [key=2, style=dotted];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_26  [key=2, style=dotted];
m3_41 -> m3_42  [key=0, style=solid];
m3_41 -> m3_24  [key=2, style=dotted];
m3_41 -> m3_25  [key=2, style=dotted];
m3_43 -> m3_40  [color=blue, key=0, style=bold];
m3_124 -> m3_125  [key=0, style=solid];
m3_126 -> m3_16  [key=2, style=dotted];
m3_126 -> m3_127  [key=0, style=solid];
m3_126 -> m3_26  [key=2, style=dotted];
m3_125 -> m3_126  [key=0, style=solid];
m3_125 -> m3_24  [key=2, style=dotted];
m3_125 -> m3_25  [key=2, style=dotted];
m3_127 -> m3_124  [color=blue, key=0, style=bold];
m3_68 -> m3_69  [key=0, style=solid];
m3_70 -> m3_16  [key=2, style=dotted];
m3_70 -> m3_71  [key=0, style=solid];
m3_70 -> m3_26  [key=2, style=dotted];
m3_69 -> m3_70  [key=0, style=solid];
m3_69 -> m3_24  [key=2, style=dotted];
m3_69 -> m3_25  [key=2, style=dotted];
m3_71 -> m3_68  [color=blue, key=0, style=bold];
m3_27 -> m3_28  [key=0, style=solid];
m3_29 -> m3_16  [key=2, style=dotted];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_26  [key=2, style=dotted];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_24  [key=2, style=dotted];
m3_28 -> m3_25  [key=2, style=dotted];
m3_28 -> m3_31  [key=2, style=dotted];
m3_30 -> m3_27  [color=blue, key=0, style=bold];
m3_80 -> m3_81  [key=0, style=solid];
m3_82 -> m3_16  [key=2, style=dotted];
m3_82 -> m3_83  [key=0, style=solid];
m3_82 -> m3_26  [key=2, style=dotted];
m3_81 -> m3_82  [key=0, style=solid];
m3_81 -> m3_24  [key=2, style=dotted];
m3_81 -> m3_25  [key=2, style=dotted];
m3_83 -> m3_80  [color=blue, key=0, style=bold];
m3_88 -> m3_89  [key=0, style=solid];
m3_90 -> m3_16  [key=2, style=dotted];
m3_90 -> m3_91  [key=0, style=solid];
m3_90 -> m3_26  [key=2, style=dotted];
m3_89 -> m3_90  [key=0, style=solid];
m3_89 -> m3_24  [key=2, style=dotted];
m3_89 -> m3_25  [key=2, style=dotted];
m3_91 -> m3_88  [color=blue, key=0, style=bold];
m3_108 -> m3_109  [key=0, style=solid];
m3_110 -> m3_16  [key=2, style=dotted];
m3_110 -> m3_111  [key=0, style=solid];
m3_110 -> m3_26  [key=2, style=dotted];
m3_109 -> m3_110  [key=0, style=solid];
m3_109 -> m3_24  [key=2, style=dotted];
m3_109 -> m3_25  [key=2, style=dotted];
m3_109 -> m3_31  [key=2, style=dotted];
m3_111 -> m3_108  [color=blue, key=0, style=bold];
m3_64 -> m3_65  [key=0, style=solid];
m3_66 -> m3_16  [key=2, style=dotted];
m3_66 -> m3_67  [key=0, style=solid];
m3_66 -> m3_26  [key=2, style=dotted];
m3_65 -> m3_66  [key=0, style=solid];
m3_65 -> m3_24  [key=2, style=dotted];
m3_65 -> m3_25  [key=2, style=dotted];
m3_67 -> m3_64  [color=blue, key=0, style=bold];
m3_76 -> m3_77  [key=0, style=solid];
m3_78 -> m3_16  [key=2, style=dotted];
m3_78 -> m3_79  [key=0, style=solid];
m3_78 -> m3_26  [key=2, style=dotted];
m3_77 -> m3_78  [key=0, style=solid];
m3_77 -> m3_25  [key=2, style=dotted];
m3_79 -> m3_76  [color=blue, key=0, style=bold];
m3_44 -> m3_45  [key=0, style=solid];
m3_46 -> m3_16  [key=2, style=dotted];
m3_46 -> m3_47  [key=0, style=solid];
m3_46 -> m3_26  [key=2, style=dotted];
m3_45 -> m3_46  [key=0, style=solid];
m3_45 -> m3_24  [key=2, style=dotted];
m3_45 -> m3_25  [key=2, style=dotted];
m3_45 -> m3_31  [key=2, style=dotted];
m3_47 -> m3_44  [color=blue, key=0, style=bold];
m3_100 -> m3_101  [key=0, style=solid];
m3_102 -> m3_16  [key=2, style=dotted];
m3_102 -> m3_103  [key=0, style=solid];
m3_102 -> m3_26  [key=2, style=dotted];
m3_101 -> m3_102  [key=0, style=solid];
m3_101 -> m3_24  [key=2, style=dotted];
m3_101 -> m3_25  [key=2, style=dotted];
m3_101 -> m3_31  [key=2, style=dotted];
m3_103 -> m3_100  [color=blue, key=0, style=bold];
m3_112 -> m3_113  [key=0, style=solid];
m3_114 -> m3_16  [key=2, style=dotted];
m3_114 -> m3_115  [key=0, style=solid];
m3_114 -> m3_26  [key=2, style=dotted];
m3_113 -> m3_114  [key=0, style=solid];
m3_113 -> m3_24  [key=2, style=dotted];
m3_113 -> m3_25  [key=2, style=dotted];
m3_115 -> m3_112  [color=blue, key=0, style=bold];
m3_96 -> m3_97  [key=0, style=solid];
m3_98 -> m3_16  [key=2, style=dotted];
m3_98 -> m3_99  [key=0, style=solid];
m3_98 -> m3_26  [key=2, style=dotted];
m3_97 -> m3_98  [key=0, style=solid];
m3_97 -> m3_24  [key=2, style=dotted];
m3_97 -> m3_25  [key=2, style=dotted];
m3_99 -> m3_96  [color=blue, key=0, style=bold];
m3_116 -> m3_117  [key=0, style=solid];
m3_118 -> m3_16  [key=2, style=dotted];
m3_118 -> m3_119  [key=0, style=solid];
m3_118 -> m3_26  [key=2, style=dotted];
m3_117 -> m3_118  [key=0, style=solid];
m3_117 -> m3_24  [key=2, style=dotted];
m3_117 -> m3_25  [key=2, style=dotted];
m3_117 -> m3_31  [key=2, style=dotted];
m3_119 -> m3_116  [color=blue, key=0, style=bold];
m3_128 -> m3_129  [key=0, style=solid];
m3_130 -> m3_16  [key=2, style=dotted];
m3_130 -> m3_131  [key=0, style=solid];
m3_130 -> m3_26  [key=2, style=dotted];
m3_129 -> m3_130  [key=0, style=solid];
m3_129 -> m3_24  [key=2, style=dotted];
m3_129 -> m3_25  [key=2, style=dotted];
m3_129 -> m3_31  [key=2, style=dotted];
m3_131 -> m3_128  [color=blue, key=0, style=bold];
m3_32 -> m3_33  [key=0, style=solid];
m3_34 -> m3_16  [key=2, style=dotted];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_26  [key=2, style=dotted];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_24  [key=2, style=dotted];
m3_33 -> m3_25  [key=2, style=dotted];
m3_35 -> m3_32  [color=blue, key=0, style=bold];
m3_48 -> m3_49  [key=0, style=solid];
m3_50 -> m3_16  [key=2, style=dotted];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_26  [key=2, style=dotted];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_24  [key=2, style=dotted];
m3_49 -> m3_25  [key=2, style=dotted];
m3_51 -> m3_48  [color=blue, key=0, style=bold];
m3_60 -> m3_61  [key=0, style=solid];
m3_62 -> m3_16  [key=2, style=dotted];
m3_62 -> m3_63  [key=0, style=solid];
m3_62 -> m3_26  [key=2, style=dotted];
m3_61 -> m3_62  [key=0, style=solid];
m3_61 -> m3_24  [key=2, style=dotted];
m3_61 -> m3_25  [key=2, style=dotted];
m3_61 -> m3_31  [key=2, style=dotted];
m3_63 -> m3_60  [color=blue, key=0, style=bold];
m3_16 -> m3_17  [color=green, key=0, style=solid];
m3_16 -> m3_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_17 -> m3_18  [color=green, key=0, style=solid];
m3_17 -> m3_0  [color=green, key=2, style=dotted];
m3_18 -> m3_9  [key=2, style=dotted];
m3_18 -> m3_19  [key=0, style=solid];
m3_19 -> m3_16  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [color=green, key=0, style=solid];
m4_1 -> m4_2  [color=green, key=0, style=solid];
m4_2 -> m4_0  [color=blue, key=0, style=bold];
m4_3 -> m4_4  [color=green, key=0, style=solid];
m4_3 -> m4_6  [color=green, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m4_3 -> m4_11  [color=green, key=1, label="System.Func<T, string>", style=dashed];
m4_3 -> m4_13  [color=green, key=1, label="System.Func<T, string>", style=dashed];
m4_3 -> m4_9  [color=green, key=3, label="method methodReturn string Humanize", style=bold];
m4_4 -> m4_5  [color=green, key=0, style=solid];
m4_4 -> m4_6  [color=green, key=0, style=solid];
m4_5 -> m4_14  [color=green, key=0, style=solid];
m4_5 -> m4_15  [color=green, key=2, style=dotted];
m4_6 -> m4_7  [color=green, key=0, style=solid];
m4_6 -> m4_16  [color=green, key=2, style=dotted];
m4_6 -> m4_11  [color=green, key=1, label=enumerable, style=dashed];
m4_6 -> m4_13  [color=green, key=1, label=enumerable, style=dashed];
m4_7 -> m4_13  [color=green, key=1, label=count, style=dashed];
m4_7 -> m4_8  [color=green, key=0, style=solid];
m4_7 -> m4_17  [color=green, key=2, style=dotted];
m4_7 -> m4_10  [color=green, key=1, label=count, style=dashed];
m4_7 -> m4_12  [color=green, key=1, label=count, style=dashed];
m4_11 -> m4_14  [color=green, key=0, style=solid];
m4_11 -> m4_18  [color=green, key=2, style=dotted];
m4_11 -> m4_19  [color=green, key=2, style=dotted];
m4_13 -> m4_14  [color=green, key=0, style=solid];
m4_13 -> m4_20  [color=green, key=2, style=dotted];
m4_13 -> m4_21  [color=green, key=2, style=dotted];
m4_13 -> m4_22  [color=green, key=2, style=dotted];
m4_13 -> m4_23  [color=green, key=2, style=dotted];
m4_13 -> m4_18  [color=green, key=2, style=dotted];
m4_13 -> m4_19  [color=green, key=2, style=dotted];
m4_13 -> m4_24  [color=green, key=2, style=dotted];
m4_10 -> m4_11  [color=green, key=0, style=solid];
m4_10 -> m4_12  [color=green, key=0, style=solid];
m4_12 -> m4_13  [color=green, key=0, style=solid];
m4_8 -> m4_9  [color=green, key=0, style=solid];
m4_8 -> m4_10  [color=green, key=0, style=solid];
m4_9 -> m4_14  [color=green, key=0, style=solid];
m4_14 -> m4_3  [color=blue, key=0, style=bold];
m4_25 -> m4_1  [color=green, key=1, label="Humanizer.Localisation.CollectionFormatters.EnglishCollectionFormatter", style=dashed];
}
