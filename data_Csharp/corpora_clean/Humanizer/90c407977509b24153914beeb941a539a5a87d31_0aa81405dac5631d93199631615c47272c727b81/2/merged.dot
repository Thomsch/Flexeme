digraph  {
n10 [label="Humanizer.Tests.AmbientCulture", span=""];
n0 [label="Entry Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", span="10-10", cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)"];
n1 [label="_culture = Thread.CurrentThread.CurrentUICulture", span="12-12", cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)"];
n2 [label="Thread.CurrentThread.CurrentCulture = culture", span="13-13", cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)"];
n3 [label="Thread.CurrentThread.CurrentUICulture = culture", span="14-14", cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)"];
n4 [label="Exit Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", span="10-10", cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)"];
n5 [label="Entry Humanizer.Tests.AmbientCulture.AmbientCulture(string)", span="17-17", cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(string)"];
n6 [label="Exit Humanizer.Tests.AmbientCulture.AmbientCulture(string)", span="17-17", cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(string)"];
n7 [label="Entry Humanizer.Tests.AmbientCulture.Dispose()", span="22-22", cluster="Humanizer.Tests.AmbientCulture.Dispose()"];
n8 [label="Thread.CurrentThread.CurrentUICulture = _culture", span="24-24", cluster="Humanizer.Tests.AmbientCulture.Dispose()"];
n9 [label="Exit Humanizer.Tests.AmbientCulture.Dispose()", span="22-22", cluster="Humanizer.Tests.AmbientCulture.Dispose()"];
m0_7 [label="Entry Humanizer.Localisation.Formatters.RussianFormatter.RussianFormatter()", span="2-2", cluster="Humanizer.Localisation.Formatters.RussianFormatter.RussianFormatter()", file="Configurator.cs"];
m0_3 [label="Entry Humanizer.Localisation.Formatters.RomanianFormatter.RomanianFormatter()", span="2-2", cluster="Humanizer.Localisation.Formatters.RomanianFormatter.RomanianFormatter()", file="Configurator.cs"];
m0_15 [label="Entry Humanizer.Localisation.Formatters.CzechSlovakPolishFormatter.CzechSlovakPolishFormatter()", span="2-2", cluster="Humanizer.Localisation.Formatters.CzechSlovakPolishFormatter.CzechSlovakPolishFormatter()", file="Configurator.cs"];
m0_11 [label="Entry Humanizer.Localisation.Formatters.ArabicFormatter.ArabicFormatter()", span="2-2", cluster="Humanizer.Localisation.Formatters.ArabicFormatter.ArabicFormatter()", file="Configurator.cs"];
m0_19 [label="Entry lambda expression", span="21-21", cluster="lambda expression", file="Configurator.cs"];
m0_0 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="Configurator.cs"];
m0_1 [label="new RomanianFormatter()", span="16-16", cluster="lambda expression", file="Configurator.cs"];
m0_2 [label="Exit lambda expression", span="16-16", cluster="lambda expression", file="Configurator.cs"];
m0_4 [label="Entry lambda expression", span="17-17", cluster="lambda expression", file="Configurator.cs"];
m0_5 [label="new RussianFormatter()", span="17-17", cluster="lambda expression", file="Configurator.cs"];
m0_6 [label="Exit lambda expression", span="17-17", cluster="lambda expression", file="Configurator.cs"];
m0_8 [label="Entry lambda expression", span="18-18", cluster="lambda expression", file="Configurator.cs"];
m0_9 [label="new ArabicFormatter()", span="18-18", cluster="lambda expression", file="Configurator.cs"];
m0_10 [label="Exit lambda expression", span="18-18", cluster="lambda expression", file="Configurator.cs"];
m0_12 [label="Entry lambda expression", span="19-19", cluster="lambda expression", file="Configurator.cs"];
m0_13 [label="new CzechSlovakPolishFormatter()", span="19-19", cluster="lambda expression", file="Configurator.cs"];
m0_14 [label="Exit lambda expression", span="19-19", cluster="lambda expression", file="Configurator.cs"];
m0_16 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="Configurator.cs"];
m0_17 [label="new CzechSlovakPolishFormatter()", span="20-20", cluster="lambda expression", file="Configurator.cs"];
m0_18 [label="Exit lambda expression", span="20-20", cluster="lambda expression", file="Configurator.cs"];
m0_20 [label="new CzechSlovakPolishFormatter()", span="21-21", cluster="lambda expression", file="Configurator.cs"];
m0_21 [label="Exit lambda expression", span="21-21", cluster="lambda expression", file="Configurator.cs"];
m2_37 [label="Entry System.DateTime.ToLocalTime()", span="0-0", cluster="System.DateTime.ToLocalTime()", file="DateHumanizeExtensions.cs"];
m2_41 [label="Entry System.TimeSpan.TimeSpan(long)", span="0-0", cluster="System.TimeSpan.TimeSpan(long)", file="DateHumanizeExtensions.cs"];
m2_42 [label="Entry System.Math.Abs(long)", span="0-0", cluster="System.Math.Abs(long)", file="DateHumanizeExtensions.cs"];
m2_39 [label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0", cluster="System.TimeSpan.FromMilliseconds(double)", file="DateHumanizeExtensions.cs"];
m2_46 [label="Entry System.Convert.ToInt32(double)", span="0-0", cluster="System.Convert.ToInt32(double)", file="DateHumanizeExtensions.cs"];
m2_38 [label="Entry System.DateTime.Subtract(System.DateTime)", span="0-0", cluster="System.DateTime.Subtract(System.DateTime)", file="DateHumanizeExtensions.cs"];
m2_43 [label="Entry Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="10-10", cluster="Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", file="DateHumanizeExtensions.cs"];
m2_40 [label="Entry Humanizer.Localisation.Formatters.IFormatter.DateHumanize_Now()", span="9-9", cluster="Humanizer.Localisation.Formatters.IFormatter.DateHumanize_Now()", file="DateHumanizeExtensions.cs"];
m2_45 [label="Entry System.Math.Floor(double)", span="0-0", cluster="System.Math.Floor(double)", file="DateHumanizeExtensions.cs"];
m2_0 [label="Entry Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", span="19-19", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="DateHumanizeExtensions.cs"];
m2_1 [label="dateToCompareAgainst == null", span="21-21", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs"];
m2_4 [label="var comparisonBase = dateToCompareAgainst.Value", span="25-25", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs"];
m2_5 [label="!utcDate", span="27-27", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="DateHumanizeExtensions.cs"];
m2_7 [label="input <= comparisonBase && comparisonBase.Subtract(input) < TimeSpan.FromMilliseconds(500)", span="30-30", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs"];
m2_9 [label="var timeUnitTense = input > comparisonBase ? Tense.Future : Tense.Past", span="33-33", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs"];
m2_10 [label="var ts = new TimeSpan(Math.Abs(comparisonBase.Ticks - input.Ticks))", span="34-34", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs"];
m2_26 [label="comparisonBase.Date.AddMonths(timeUnitTense == Tense.Future ? 1 : -1) == input.Date", span="59-59", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs"];
m2_2 [label="dateToCompareAgainst = DateTime.UtcNow", span="22-22", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs"];
m2_3 [label="var formatter = Configurator.Formatter", span="24-24", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="DateHumanizeExtensions.cs"];
m2_8 [label="return formatter.DateHumanize_Now();", span="31-31", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs"];
m2_12 [label="return formatter.DateHumanize(TimeUnit.Second, timeUnitTense, ts.Seconds);", span="37-37", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs"];
m2_14 [label="return formatter.DateHumanize(TimeUnit.Minute, timeUnitTense, 1);", span="40-40", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs"];
m2_16 [label="return formatter.DateHumanize(TimeUnit.Minute, timeUnitTense, ts.Minutes);", span="43-43", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs"];
m2_18 [label="return formatter.DateHumanize(TimeUnit.Hour, timeUnitTense, 1);", span="46-46", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs"];
m2_20 [label="return formatter.DateHumanize(TimeUnit.Hour, timeUnitTense, ts.Hours);", span="49-49", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs"];
m2_22 [label="return formatter.DateHumanize(TimeUnit.Day, timeUnitTense, 1);", span="52-52", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs"];
m2_24 [label="return formatter.DateHumanize(TimeUnit.Day, timeUnitTense, ts.Days);", span="55-55", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs"];
m2_27 [label="return formatter.DateHumanize(TimeUnit.Month, timeUnitTense, 1);", span="60-60", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs"];
m2_28 [label="return formatter.DateHumanize(TimeUnit.Day, timeUnitTense, ts.Days);", span="62-62", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs"];
m2_31 [label="return formatter.DateHumanize(TimeUnit.Month, timeUnitTense, months);", span="68-68", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs"];
m2_35 [label="return formatter.DateHumanize(TimeUnit.Year, timeUnitTense, years);", span="73-73", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs"];
m2_6 [label="comparisonBase = comparisonBase.ToLocalTime()", span="28-28", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="DateHumanizeExtensions.cs"];
m2_11 [label="ts.TotalSeconds < 60", span="36-36", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs"];
m2_13 [label="ts.TotalSeconds < 120", span="39-39", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs"];
m2_15 [label="ts.TotalMinutes < 45", span="42-42", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs"];
m2_17 [label="ts.TotalMinutes < 90", span="45-45", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs"];
m2_19 [label="ts.TotalHours < 24", span="48-48", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs"];
m2_21 [label="ts.TotalHours < 48", span="51-51", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs"];
m2_23 [label="ts.TotalDays < 28", span="54-54", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs"];
m2_25 [label="ts.TotalDays >= 28 && ts.TotalDays < 30", span="57-57", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs"];
m2_29 [label="ts.TotalDays < 345", span="65-65", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs"];
m2_30 [label="int months = Convert.ToInt32(Math.Floor(ts.TotalDays / 29.5))", span="67-67", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs"];
m2_32 [label="int years = Convert.ToInt32(Math.Floor(ts.TotalDays / 365))", span="71-71", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs"];
m2_33 [label="years == 0", span="72-72", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs"];
m2_34 [label="years = 1", span="72-72", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=red, community=0, file="DateHumanizeExtensions.cs"];
m2_36 [label="Exit Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", span="19-19", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="DateHumanizeExtensions.cs"];
m2_44 [label="Entry System.DateTime.AddMonths(int)", span="0-0", cluster="System.DateTime.AddMonths(int)", file="DateHumanizeExtensions.cs"];
m8_7 [label="Entry Humanizer.Localisation.NumberToWords.ArabicNumberToWordsConverter.ArabicNumberToWordsConverter()", span="4-4", cluster="Humanizer.Localisation.NumberToWords.ArabicNumberToWordsConverter.ArabicNumberToWordsConverter()", file="NumberToWordsExtension.cs"];
m8_15 [label="Entry Humanizer.SpanishNumberToWordsConverter.SpanishNumberToWordsConverter()", span="7-7", cluster="Humanizer.SpanishNumberToWordsConverter.SpanishNumberToWordsConverter()", file="NumberToWordsExtension.cs"];
m8_12 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m8_13 [label="new SpanishNumberToWordsConverter()", span="16-16", cluster="lambda expression", file="NumberToWordsExtension.cs", color=green, community=0];
m8_14 [label="Exit lambda expression", span="16-16", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m8_3 [label="Entry Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.EnglishNumberToWordsConverter()", span="5-5", cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.EnglishNumberToWordsConverter()", file="NumberToWordsExtension.cs"];
m8_11 [label="Entry Humanizer.Localisation.NumberToWords.FarsiNumberToWordsConverter.FarsiNumberToWordsConverter()", span="5-5", cluster="Humanizer.Localisation.NumberToWords.FarsiNumberToWordsConverter.FarsiNumberToWordsConverter()", file="NumberToWordsExtension.cs"];
m8_0 [label="Entry lambda expression", span="15-15", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m8_1 [label="new EnglishNumberToWordsConverter()", span="15-15", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m8_2 [label="Exit lambda expression", span="15-15", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m8_4 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m8_5 [label="new ArabicNumberToWordsConverter()", span="16-16", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m8_6 [label="Exit lambda expression", span="16-16", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m8_8 [label="Entry lambda expression", span="17-17", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m8_9 [label="new FarsiNumberToWordsConverter()", span="15-15", cluster="lambda expression", color=green, community=0, file="NumberToWordsExtension.cs"];
m8_10 [label="Exit lambda expression", span="17-17", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m9_6 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="NumberToWordsTests.cs"];
m9_5 [label="Entry int.ToWords()", span="24-24", cluster="int.ToWords()", file="NumberToWordsTests.cs"];
m9_2 [label="Entry Humanizer.Tests.Localisation.es.NumberToWordsTests.ToWordsSpanish(int, string)", span="45-45", cluster="Humanizer.Tests.Localisation.es.NumberToWordsTests.ToWordsSpanish(int, string)", file="NumberToWordsTests.cs"];
m9_3 [label="Assert.Equal(expected, number.ToWords())", span="47-47", cluster="Humanizer.Tests.Localisation.es.NumberToWordsTests.ToWordsSpanish(int, string)", color=green, community=0, file="NumberToWordsTests.cs"];
m9_4 [label="Exit Humanizer.Tests.Localisation.es.NumberToWordsTests.ToWordsSpanish(int, string)", span="45-45", cluster="Humanizer.Tests.Localisation.es.NumberToWordsTests.ToWordsSpanish(int, string)", file="NumberToWordsTests.cs"];
m13_4 [label="Entry CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", span="25-25", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ToQuantityTests.cs"];
m13_17 [label="specProps.Empty()", span="30-30", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="ToQuantityTests.cs"];
m13_18 [label="yield break;", span="32-32", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="ToQuantityTests.cs"];
m13_19 [label="var pt = specProps.First()", span="34-34", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="ToQuantityTests.cs"];
m13_22 [label="yield return\r\n                    Tuple.Create(pt, MakeErrorInCaseOfMinConstraint(pt.Specification));", span="38-39", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="ToQuantityTests.cs"];
m13_21 [label="taken.Empty()", span="36-36", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="ToQuantityTests.cs"];
m13_23 [label="yield break;", span="40-40", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="ToQuantityTests.cs"];
m13_24 [label="yield return\r\n                converter(taken, pt.Property.PropertyType, pt.Specification.ConversionType.IsScalar())\r\n                    .Return(\r\n                        converted => Tuple.Create(pt.WithValue(Maybe.Just(converted)), Maybe.Nothing<Error>()),\r\n                        Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                            pt, Maybe.Just<Error>(new BadFormatConversionError(NameInfo.EmptyName))));", span="43-48", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="ToQuantityTests.cs"];
m13_20 [label="var taken = values.Take(pt.Specification.GetMaxValueCount().Return(n => n, values.Count()))", span="35-35", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="ToQuantityTests.cs"];
m13_25 [label="MapValuesImpl(specProps.Skip(1), values.Skip(taken.Count()), converter)", span="50-50", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="ToQuantityTests.cs"];
m13_26 [label="yield return value;", span="52-52", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="ToQuantityTests.cs"];
m13_27 [label="Exit CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", span="25-25", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ToQuantityTests.cs"];
m13_37 [label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0", cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="ToQuantityTests.cs"];
m13_39 [label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71", cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="ToQuantityTests.cs"];
m13_36 [label="Entry System.Type.IsScalar()", span="33-33", cluster="System.Type.IsScalar()", file="ToQuantityTests.cs"];
m13_0 [label="Entry CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", span="11-11", cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ToQuantityTests.cs"];
m13_1 [label="var propAndErrors = MapValuesImpl(specProps, values, converter)", span="16-16", cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="ToQuantityTests.cs"];
m13_2 [label="return StatePair.Create(\r\n                propAndErrors.Select(pe => pe.Item1),\r\n                propAndErrors.Select(pe => pe.Item2)\r\n                    .OfType<Just<Error>>().Select(e => e.Value)\r\n                );", span="18-22", cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="ToQuantityTests.cs"];
m13_3 [label="Exit CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", span="11-11", cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ToQuantityTests.cs"];
m13_28 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="81-81", cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="ToQuantityTests.cs"];
m13_52 [label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="316-316", cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="ToQuantityTests.cs"];
m13_34 [label="Entry CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", span="56-56", cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="ToQuantityTests.cs"];
m13_49 [label="return !specification.IsMinNotSpecified()\r\n                ? Maybe.Just<Error>(new SequenceOutOfRangeError(NameInfo.EmptyName))\r\n                : Maybe.Nothing<Error>();", span="58-60", cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", color=green, community=0, file="ToQuantityTests.cs"];
m13_50 [label="Exit CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", span="56-56", cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="ToQuantityTests.cs"];
m13_6 [label="Entry Unk.>", span="", cluster="Unk.>", file="ToQuantityTests.cs"];
m13_30 [label="Entry CommandLine.Core.Specification.GetMaxValueCount()", span="51-51", cluster="CommandLine.Core.Specification.GetMaxValueCount()", file="ToQuantityTests.cs"];
m13_48 [label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66", cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="ToQuantityTests.cs"];
m13_35 [label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0", cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="ToQuantityTests.cs"];
m13_33 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="ToQuantityTests.cs"];
m13_47 [label="Entry CommandLine.Core.SpecificationProperty.WithValue(CommandLine.Infrastructure.Maybe<object>)", span="18-18", cluster="CommandLine.Core.SpecificationProperty.WithValue(CommandLine.Infrastructure.Maybe<object>)", file="ToQuantityTests.cs"];
m13_38 [label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="305-305", cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", file="ToQuantityTests.cs"];
m13_29 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="ToQuantityTests.cs"];
m13_41 [label="Entry lambda expression", span="35-35", cluster="lambda expression", file="ToQuantityTests.cs"];
m13_8 [label="Entry lambda expression", span="19-19", cluster="lambda expression", file="ToQuantityTests.cs"];
m13_11 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="ToQuantityTests.cs"];
m13_14 [label="Entry lambda expression", span="21-21", cluster="lambda expression", file="ToQuantityTests.cs"];
m13_9 [label="pe.Item1", span="19-19", cluster="lambda expression", color=green, community=0, file="ToQuantityTests.cs"];
m13_10 [label="Exit lambda expression", span="19-19", cluster="lambda expression", file="ToQuantityTests.cs"];
m13_12 [label="pe.Item2", span="20-20", cluster="lambda expression", color=green, community=0, file="ToQuantityTests.cs"];
m13_13 [label="Exit lambda expression", span="20-20", cluster="lambda expression", file="ToQuantityTests.cs"];
m13_15 [label="e.Value", span="21-21", cluster="lambda expression", color=green, community=0, file="ToQuantityTests.cs"];
m13_16 [label="Exit lambda expression", span="21-21", cluster="lambda expression", file="ToQuantityTests.cs"];
m13_44 [label="Entry lambda expression", span="46-46", cluster="lambda expression", file="ToQuantityTests.cs"];
m13_45 [label="Tuple.Create(pt.WithValue(Maybe.Just(converted)), Maybe.Nothing<Error>())", span="46-46", cluster="lambda expression", color=green, community=0, file="ToQuantityTests.cs"];
m13_46 [label="Exit lambda expression", span="46-46", cluster="lambda expression", file="ToQuantityTests.cs"];
m13_42 [label=n, span="35-35", cluster="lambda expression", color=green, community=1, file="ToQuantityTests.cs"];
m13_43 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="ToQuantityTests.cs"];
m13_31 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="ToQuantityTests.cs"];
m13_5 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ToQuantityTests.cs"];
m13_51 [label="Entry CommandLine.Core.Specification.IsMinNotSpecified()", span="70-70", cluster="CommandLine.Core.Specification.IsMinNotSpecified()", file="ToQuantityTests.cs"];
m13_7 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="ToQuantityTests.cs"];
m13_32 [label="Entry CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="103-103", cluster="CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="ToQuantityTests.cs"];
m13_40 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="ToQuantityTests.cs"];
m13_53 [label=pt, span="", file="ToQuantityTests.cs"];
n10 -> n1  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.AmbientCulture"];
n10 -> n8  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.AmbientCulture"];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
n0 -> n3  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
n1 -> n2  [key=0, style=solid];
n2 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n4 -> n0  [key=0, style=bold, color=blue];
n5 -> n6  [key=0, style=solid];
n6 -> n5  [key=0, style=bold, color=blue];
n7 -> n8  [key=0, style=solid];
n8 -> n9  [key=0, style=solid];
n9 -> n7  [key=0, style=bold, color=blue];
m0_19 -> m0_20  [key=0, style=solid];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=2, style=dotted];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_7  [key=2, style=dotted];
m0_6 -> m0_4  [key=0, style=bold, color=blue];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_11  [key=2, style=dotted];
m0_10 -> m0_8  [key=0, style=bold, color=blue];
m0_12 -> m0_13  [key=0, style=solid];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_15  [key=2, style=dotted];
m0_14 -> m0_12  [key=0, style=bold, color=blue];
m0_16 -> m0_17  [key=0, style=solid];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_15  [key=2, style=dotted];
m0_18 -> m0_16  [key=0, style=bold, color=blue];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_15  [key=2, style=dotted];
m0_21 -> m0_19  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid, color=red];
m2_0 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime?"];
m2_0 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label=bool];
m2_0 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m2_0 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m2_0 -> m2_10  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m2_0 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m2_1 -> m2_2  [key=0, style=solid, color=red];
m2_1 -> m2_3  [key=0, style=solid, color=green];
m2_4 -> m2_5  [key=0, style=solid, color=red];
m2_4 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label=comparisonBase];
m2_4 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label=comparisonBase];
m2_4 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label=comparisonBase];
m2_4 -> m2_10  [key=1, style=dashed, color=darkseagreen4, label=comparisonBase];
m2_4 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label=comparisonBase];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_7  [key=0, style=solid, color=red];
m2_7 -> m2_8  [key=0, style=solid, color=red];
m2_7 -> m2_9  [key=0, style=solid, color=red];
m2_7 -> m2_38  [key=2, style=dotted, color=red];
m2_7 -> m2_39  [key=2, style=dotted, color=red];
m2_9 -> m2_10  [key=0, style=solid, color=red];
m2_9 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label=timeUnitTense];
m2_9 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label=timeUnitTense];
m2_9 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label=timeUnitTense];
m2_9 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label=timeUnitTense];
m2_9 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label=timeUnitTense];
m2_9 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label=timeUnitTense];
m2_9 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label=timeUnitTense];
m2_9 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label=timeUnitTense];
m2_9 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label=timeUnitTense];
m2_9 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label=timeUnitTense];
m2_9 -> m2_31  [key=1, style=dashed, color=darkseagreen4, label=timeUnitTense];
m2_9 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label=timeUnitTense];
m2_10 -> m2_11  [key=0, style=solid, color=red];
m2_10 -> m2_41  [key=2, style=dotted, color=red];
m2_10 -> m2_42  [key=2, style=dotted, color=red];
m2_26 -> m2_27  [key=0, style=solid, color=red];
m2_26 -> m2_28  [key=0, style=solid, color=red];
m2_26 -> m2_44  [key=2, style=dotted, color=red];
m2_2 -> m2_3  [key=0, style=solid, color=green];
m2_2 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime?"];
m2_3 -> m2_4  [key=0, style=solid, color=green];
m2_3 -> m2_8  [key=1, style=dashed, color=green, label=formatter];
m2_3 -> m2_12  [key=1, style=dashed, color=green, label=formatter];
m2_3 -> m2_14  [key=1, style=dashed, color=green, label=formatter];
m2_3 -> m2_16  [key=1, style=dashed, color=green, label=formatter];
m2_3 -> m2_18  [key=1, style=dashed, color=green, label=formatter];
m2_3 -> m2_20  [key=1, style=dashed, color=green, label=formatter];
m2_3 -> m2_22  [key=1, style=dashed, color=green, label=formatter];
m2_3 -> m2_24  [key=1, style=dashed, color=green, label=formatter];
m2_3 -> m2_27  [key=1, style=dashed, color=green, label=formatter];
m2_3 -> m2_28  [key=1, style=dashed, color=green, label=formatter];
m2_3 -> m2_31  [key=1, style=dashed, color=green, label=formatter];
m2_3 -> m2_35  [key=1, style=dashed, color=green, label=formatter];
m2_8 -> m2_36  [key=0, style=solid, color=red];
m2_8 -> m2_40  [key=2, style=dotted, color=red];
m2_12 -> m2_36  [key=0, style=solid, color=red];
m2_12 -> m2_43  [key=2, style=dotted, color=red];
m2_12 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_12 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_14 -> m2_36  [key=0, style=solid, color=red];
m2_14 -> m2_43  [key=2, style=dotted, color=red];
m2_16 -> m2_36  [key=0, style=solid, color=red];
m2_16 -> m2_43  [key=2, style=dotted, color=red];
m2_16 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_16 -> m2_17  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_18 -> m2_36  [key=0, style=solid, color=red];
m2_18 -> m2_43  [key=2, style=dotted, color=red];
m2_20 -> m2_36  [key=0, style=solid, color=red];
m2_20 -> m2_43  [key=2, style=dotted, color=red];
m2_20 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_20 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_22 -> m2_36  [key=0, style=solid, color=red];
m2_22 -> m2_43  [key=2, style=dotted, color=red];
m2_24 -> m2_36  [key=0, style=solid, color=red];
m2_24 -> m2_43  [key=2, style=dotted, color=red];
m2_24 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_24 -> m2_25  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_27 -> m2_36  [key=0, style=solid, color=red];
m2_27 -> m2_43  [key=2, style=dotted, color=red];
m2_28 -> m2_36  [key=0, style=solid, color=red];
m2_28 -> m2_43  [key=2, style=dotted, color=red];
m2_28 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_28 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_31 -> m2_36  [key=0, style=solid, color=red];
m2_31 -> m2_43  [key=2, style=dotted, color=red];
m2_35 -> m2_36  [key=0, style=solid, color=red];
m2_35 -> m2_43  [key=2, style=dotted, color=red];
m2_6 -> m2_7  [key=0, style=solid, color=red];
m2_6 -> m2_37  [key=2, style=dotted];
m2_6 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label=comparisonBase];
m2_6 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label=comparisonBase];
m2_6 -> m2_10  [key=1, style=dashed, color=darkseagreen4, label=comparisonBase];
m2_6 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label=comparisonBase];
m2_11 -> m2_12  [key=0, style=solid, color=red];
m2_11 -> m2_13  [key=0, style=solid, color=red];
m2_11 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_13 -> m2_14  [key=0, style=solid, color=red];
m2_13 -> m2_15  [key=0, style=solid, color=red];
m2_13 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_15 -> m2_16  [key=0, style=solid, color=red];
m2_15 -> m2_17  [key=0, style=solid, color=red];
m2_15 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_17 -> m2_18  [key=0, style=solid, color=red];
m2_17 -> m2_19  [key=0, style=solid, color=red];
m2_17 -> m2_17  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_19 -> m2_20  [key=0, style=solid, color=red];
m2_19 -> m2_21  [key=0, style=solid, color=red];
m2_19 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_21 -> m2_22  [key=0, style=solid, color=red];
m2_21 -> m2_23  [key=0, style=solid, color=red];
m2_21 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_23 -> m2_24  [key=0, style=solid, color=red];
m2_23 -> m2_25  [key=0, style=solid, color=red];
m2_23 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_25 -> m2_26  [key=0, style=solid, color=red];
m2_25 -> m2_29  [key=0, style=solid, color=red];
m2_25 -> m2_25  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_25 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_29 -> m2_30  [key=0, style=solid, color=red];
m2_29 -> m2_32  [key=0, style=solid, color=red];
m2_29 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_30 -> m2_31  [key=0, style=solid, color=red];
m2_30 -> m2_45  [key=2, style=dotted, color=red];
m2_30 -> m2_46  [key=2, style=dotted, color=red];
m2_30 -> m2_30  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_30 -> m2_32  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_32 -> m2_33  [key=0, style=solid, color=red];
m2_32 -> m2_45  [key=2, style=dotted, color=red];
m2_32 -> m2_46  [key=2, style=dotted, color=red];
m2_32 -> m2_32  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_32 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label=years];
m2_33 -> m2_34  [key=0, style=solid, color=red];
m2_33 -> m2_35  [key=0, style=solid, color=red];
m2_34 -> m2_35  [key=0, style=solid, color=red];
m2_36 -> m2_0  [key=0, style=bold, color=blue];
m8_12 -> m8_13  [key=0, style=solid, color=green];
m8_13 -> m8_14  [key=0, style=solid, color=green];
m8_13 -> m8_15  [key=2, style=dotted, color=green];
m8_14 -> m8_12  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_3  [key=2, style=dotted];
m8_2 -> m8_0  [key=0, style=bold, color=blue];
m8_4 -> m8_5  [key=0, style=solid];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_7  [key=2, style=dotted];
m8_6 -> m8_4  [key=0, style=bold, color=blue];
m8_8 -> m8_9  [key=0, style=solid, color=green];
m8_9 -> m8_10  [key=0, style=solid, color=green];
m8_9 -> m8_11  [key=2, style=dotted, color=green];
m8_10 -> m8_8  [key=0, style=bold, color=blue];
m9_2 -> m9_3  [key=0, style=solid, color=green];
m9_3 -> m9_4  [key=0, style=solid, color=green];
m9_3 -> m9_5  [key=2, style=dotted, color=green];
m9_3 -> m9_6  [key=2, style=dotted, color=green];
m9_4 -> m9_2  [key=0, style=bold, color=blue];
m13_4 -> m13_17  [key=0, style=solid, color=green];
m13_4 -> m13_18  [key=0, style=bold, color=green];
m13_4 -> m13_22  [key=0, style=bold, color=green];
m13_4 -> m13_23  [key=0, style=bold, color=green];
m13_4 -> m13_24  [key=0, style=bold, color=green];
m13_4 -> m13_26  [key=0, style=bold, color=green];
m13_4 -> m13_19  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m13_4 -> m13_20  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<string>"];
m13_4 -> m13_25  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m13_17 -> m13_18  [key=0, style=solid, color=green];
m13_17 -> m13_19  [key=0, style=solid, color=green];
m13_17 -> m13_28  [key=2, style=dotted, color=green];
m13_18 -> m13_19  [key=0, style=solid, color=green];
m13_19 -> m13_22  [key=1, style=dashed, color=green, label=pt];
m13_19 -> m13_24  [key=1, style=dashed, color=green, label=pt];
m13_19 -> m13_20  [key=0, style=solid, color=green];
m13_19 -> m13_29  [key=2, style=dotted, color=green];
m13_19 -> m13_45  [key=1, style=dashed, color=green, label=pt];
m13_22 -> m13_23  [key=0, style=solid, color=green];
m13_22 -> m13_34  [key=2, style=dotted, color=green];
m13_22 -> m13_35  [key=2, style=dotted, color=green];
m13_21 -> m13_22  [key=0, style=solid, color=green];
m13_21 -> m13_24  [key=0, style=solid, color=green];
m13_21 -> m13_28  [key=2, style=dotted, color=green];
m13_23 -> m13_24  [key=0, style=solid, color=green];
m13_24 -> m13_25  [key=0, style=solid, color=green];
m13_24 -> m13_36  [key=2, style=dotted, color=green];
m13_24 -> m13_37  [key=2, style=dotted, color=green];
m13_24 -> m13_38  [key=2, style=dotted, color=green];
m13_24 -> m13_39  [key=2, style=dotted, color=green];
m13_24 -> m13_35  [key=2, style=dotted, color=green];
m13_24 -> m13_32  [key=2, style=dotted, color=green];
m13_24 -> m13_44  [key=1, style=dashed, color=green, label="lambda expression"];
m13_20 -> m13_24  [key=1, style=dashed, color=green, label=taken];
m13_20 -> m13_21  [key=0, style=solid, color=green];
m13_20 -> m13_30  [key=2, style=dotted, color=green];
m13_20 -> m13_31  [key=2, style=dotted, color=green];
m13_20 -> m13_32  [key=2, style=dotted, color=green];
m13_20 -> m13_33  [key=2, style=dotted, color=green];
m13_20 -> m13_41  [key=1, style=dashed, color=green, label="lambda expression"];
m13_20 -> m13_25  [key=1, style=dashed, color=green, label=taken];
m13_25 -> m13_26  [key=0, style=solid, color=green];
m13_25 -> m13_27  [key=0, style=solid, color=green];
m13_25 -> m13_40  [key=2, style=dotted, color=green];
m13_25 -> m13_31  [key=2, style=dotted, color=green];
m13_25 -> m13_4  [key=2, style=dotted, color=green];
m13_26 -> m13_25  [key=0, style=solid, color=green];
m13_27 -> m13_4  [key=0, style=bold, color=blue];
m13_0 -> m13_1  [key=0, style=solid, color=green];
m13_1 -> m13_2  [key=0, style=solid, color=green];
m13_1 -> m13_4  [key=2, style=dotted, color=green];
m13_2 -> m13_3  [key=0, style=solid, color=green];
m13_2 -> m13_5  [key=2, style=dotted, color=green];
m13_2 -> m13_6  [key=2, style=dotted, color=green];
m13_2 -> m13_7  [key=2, style=dotted, color=green];
m13_2 -> m13_8  [key=1, style=dashed, color=green, label="lambda expression"];
m13_2 -> m13_11  [key=1, style=dashed, color=green, label="lambda expression"];
m13_2 -> m13_14  [key=1, style=dashed, color=green, label="lambda expression"];
m13_3 -> m13_0  [key=0, style=bold, color=blue];
m13_34 -> m13_49  [key=0, style=solid, color=green];
m13_49 -> m13_50  [key=0, style=solid, color=green];
m13_49 -> m13_51  [key=2, style=dotted, color=green];
m13_49 -> m13_52  [key=2, style=dotted, color=green];
m13_49 -> m13_39  [key=2, style=dotted, color=green];
m13_49 -> m13_48  [key=2, style=dotted, color=green];
m13_50 -> m13_34  [key=0, style=bold, color=blue];
m13_41 -> m13_42  [key=0, style=solid, color=green];
m13_8 -> m13_9  [key=0, style=solid, color=green];
m13_11 -> m13_12  [key=0, style=solid, color=green];
m13_14 -> m13_15  [key=0, style=solid, color=green];
m13_9 -> m13_10  [key=0, style=solid, color=green];
m13_10 -> m13_8  [key=0, style=bold, color=blue];
m13_12 -> m13_13  [key=0, style=solid, color=green];
m13_13 -> m13_11  [key=0, style=bold, color=blue];
m13_15 -> m13_16  [key=0, style=solid, color=green];
m13_16 -> m13_14  [key=0, style=bold, color=blue];
m13_44 -> m13_45  [key=0, style=solid, color=green];
m13_45 -> m13_46  [key=0, style=solid, color=green];
m13_45 -> m13_39  [key=2, style=dotted, color=green];
m13_45 -> m13_47  [key=2, style=dotted, color=green];
m13_45 -> m13_48  [key=2, style=dotted, color=green];
m13_45 -> m13_35  [key=2, style=dotted, color=green];
m13_46 -> m13_44  [key=0, style=bold, color=blue];
m13_42 -> m13_43  [key=0, style=solid, color=green];
m13_43 -> m13_41  [key=0, style=bold, color=blue];
m13_53 -> m13_45  [key=1, style=dashed, color=green, label=pt];
}
