digraph  {
n10 [label="Humanizer.Tests.AmbientCulture", span=""];
n0 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", label="Entry Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", span="10-10"];
n1 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", label="_culture = Thread.CurrentThread.CurrentUICulture", span="12-12"];
n2 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", label="Thread.CurrentThread.CurrentCulture = culture", span="13-13"];
n3 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", label="Thread.CurrentThread.CurrentUICulture = culture", span="14-14"];
n4 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", label="Exit Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", span="10-10"];
n5 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(string)", label="Entry Humanizer.Tests.AmbientCulture.AmbientCulture(string)", span="17-17"];
n6 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(string)", label="Exit Humanizer.Tests.AmbientCulture.AmbientCulture(string)", span="17-17"];
n7 [cluster="Humanizer.Tests.AmbientCulture.Dispose()", label="Entry Humanizer.Tests.AmbientCulture.Dispose()", span="22-22"];
n8 [cluster="Humanizer.Tests.AmbientCulture.Dispose()", label="Thread.CurrentThread.CurrentUICulture = _culture", span="24-24"];
n9 [cluster="Humanizer.Tests.AmbientCulture.Dispose()", label="Exit Humanizer.Tests.AmbientCulture.Dispose()", span="22-22"];
m1_107 [cluster="Humanizer.Bytes.ByteSize.operator ++(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.operator ++(Humanizer.Bytes.ByteSize)", span="257-257"];
m1_108 [cluster="Humanizer.Bytes.ByteSize.operator ++(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="return new ByteSize(b.Bits++);", span="259-259"];
m1_109 [cluster="Humanizer.Bytes.ByteSize.operator ++(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.operator ++(Humanizer.Bytes.ByteSize)", span="257-257"];
m1_60 [cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.Equals(object)", span="183-183"];
m1_61 [cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="ByteSize.cs", label="value == null", span="185-185"];
m1_64 [cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="ByteSize.cs", label="value is ByteSize", span="189-189"];
m1_65 [cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="ByteSize.cs", label="other = (ByteSize)value", span="190-190"];
m1_62 [cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="ByteSize.cs", label="return false;", span="186-186"];
m1_63 [cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="ByteSize.cs", label="ByteSize other", span="188-188"];
m1_67 [cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="ByteSize.cs", label="return Equals(other);", span="194-194"];
m1_66 [cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="ByteSize.cs", label="return false;", span="192-192"];
m1_68 [cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.Equals(object)", span="183-183"];
m1_83 [cluster="Humanizer.Bytes.ByteSize.AddBits(long)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.AddBits(long)", span="217-217"];
m1_84 [cluster="Humanizer.Bytes.ByteSize.AddBits(long)", file="ByteSize.cs", label="return new ByteSize(Bits + value);", span="219-219"];
m1_85 [cluster="Humanizer.Bytes.ByteSize.AddBits(long)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.AddBits(long)", span="217-217"];
m1_177 [cluster="string.Trim()", file="ByteSize.cs", label="Entry string.Trim()", span="0-0"];
m1_119 [cluster="Humanizer.Bytes.ByteSize.operator !=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.operator !=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="277-277"];
m1_120 [cluster="Humanizer.Bytes.ByteSize.operator !=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="return b1.Bits != b2.Bits;", span="279-279"];
m1_121 [cluster="Humanizer.Bytes.ByteSize.operator !=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.operator !=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="277-277"];
m1_50 [cluster="string.Contains(string)", file="ByteSize.cs", label="Entry string.Contains(string)", span="0-0"];
m1_9 [cluster="Humanizer.Bytes.ByteSize.FromBits(long)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.FromBits(long)", span="115-115"];
m1_10 [cluster="Humanizer.Bytes.ByteSize.FromBits(long)", file="ByteSize.cs", label="return new ByteSize(value / (double)BitsInByte);", span="117-117"];
m1_11 [cluster="Humanizer.Bytes.ByteSize.FromBits(long)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.FromBits(long)", span="115-115"];
m1_125 [cluster="Humanizer.Bytes.ByteSize.operator <=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.operator <=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="287-287"];
m1_126 [cluster="Humanizer.Bytes.ByteSize.operator <=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="return b1.Bits <= b2.Bits;", span="289-289"];
m1_127 [cluster="Humanizer.Bytes.ByteSize.operator <=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.operator <=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="287-287"];
m1_30 [cluster="string.Format(string, object, object)", file="ByteSize.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m1_122 [cluster="Humanizer.Bytes.ByteSize.operator <(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.operator <(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="282-282"];
m1_123 [cluster="Humanizer.Bytes.ByteSize.operator <(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="return b1.Bits < b2.Bits;", span="284-284"];
m1_124 [cluster="Humanizer.Bytes.ByteSize.operator <(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.operator <(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="282-282"];
m1_171 [cluster="string.IsNullOrWhiteSpace(string)", file="ByteSize.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m1_27 [cluster="Humanizer.Bytes.ByteSize.ToString()", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.ToString()", span="151-151"];
m1_28 [cluster="Humanizer.Bytes.ByteSize.ToString()", file="ByteSize.cs", label="return string.Format(''{0} {1}'', LargestWholeNumberValue, LargestWholeNumberSymbol);", span="153-153"];
m1_29 [cluster="Humanizer.Bytes.ByteSize.ToString()", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.ToString()", span="151-151"];
m1_172 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="ByteSize.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
m1_86 [cluster="Humanizer.Bytes.ByteSize.AddBytes(double)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.AddBytes(double)", span="222-222"];
m1_87 [cluster="Humanizer.Bytes.ByteSize.AddBytes(double)", file="ByteSize.cs", label="return this + FromBytes(value);", span="224-224"];
m1_88 [cluster="Humanizer.Bytes.ByteSize.AddBytes(double)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.AddBytes(double)", span="222-222"];
m1_175 [cluster="char.IsDigit(char)", file="ByteSize.cs", label="Entry char.IsDigit(char)", span="0-0"];
m1_92 [cluster="Humanizer.Bytes.ByteSize.AddMegabytes(double)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.AddMegabytes(double)", span="232-232"];
m1_93 [cluster="Humanizer.Bytes.ByteSize.AddMegabytes(double)", file="ByteSize.cs", label="return this + FromMegabytes(value);", span="234-234"];
m1_94 [cluster="Humanizer.Bytes.ByteSize.AddMegabytes(double)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.AddMegabytes(double)", span="232-232"];
m1_80 [cluster="Humanizer.Bytes.ByteSize.Add(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.Add(Humanizer.Bytes.ByteSize)", span="212-212"];
m1_81 [cluster="Humanizer.Bytes.ByteSize.Add(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="return new ByteSize(Bits + bs.Bits);", span="214-214"];
m1_82 [cluster="Humanizer.Bytes.ByteSize.Add(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.Add(Humanizer.Bytes.ByteSize)", span="212-212"];
m1_0 [cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.ByteSize(double)", span="102-102"];
m1_1 [cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="ByteSize.cs", label="Bits = (long)Math.Ceiling(byteSize * BitsInByte)", span="106-106"];
m1_2 [cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="ByteSize.cs", label="Bytes = byteSize", span="108-108"];
m1_3 [cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="ByteSize.cs", label="Kilobytes = byteSize / BytesInKilobyte", span="109-109"];
m1_4 [cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="ByteSize.cs", label="Megabytes = byteSize / BytesInMegabyte", span="110-110"];
m1_5 [cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="ByteSize.cs", label="Gigabytes = byteSize / BytesInGigabyte", span="111-111"];
m1_6 [cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="ByteSize.cs", label="Terabytes = byteSize / BytesInTerabyte", span="112-112"];
m1_7 [cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.ByteSize(double)", span="102-102"];
m1_18 [cluster="Humanizer.Bytes.ByteSize.FromMegabytes(double)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.FromMegabytes(double)", span="130-130"];
m1_19 [cluster="Humanizer.Bytes.ByteSize.FromMegabytes(double)", file="ByteSize.cs", label="return new ByteSize(value * BytesInMegabyte);", span="132-132"];
m1_20 [cluster="Humanizer.Bytes.ByteSize.FromMegabytes(double)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.FromMegabytes(double)", span="130-130"];
m1_134 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", span="302-302"];
m1_135 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="string.IsNullOrWhiteSpace(s)", span="305-305"];
m1_138 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="s = s.TrimStart()", span="312-312"];
m1_136 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="throw new ArgumentNullException(''s'', ''String is null or whitespace'');", span="306-306"];
m1_137 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="result = new ByteSize()", span="309-309"];
m1_139 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="int num", span="314-314"];
m1_142 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="num < s.Length", span="318-318"];
m1_143 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="!(char.IsDigit(s[num]) || s[num] == '.')", span="319-319"];
m1_149 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="string numberPart = s.Substring(0, lastNumber).Trim()", span="331-331"];
m1_150 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="string sizePart = s.Substring(lastNumber, s.Length - lastNumber).Trim()", span="332-332"];
m1_140 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="var found = false", span="315-315"];
m1_141 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="num = 0", span="318-318"];
m1_146 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="found == false", span="325-325"];
m1_145 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="num++", span="318-318"];
m1_148 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="int lastNumber = num", span="328-328"];
m1_144 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="found = true", span="321-321"];
m1_147 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="return false;", span="326-326"];
m1_152 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="!double.TryParse(numberPart, out number)", span="336-336"];
m1_151 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="double number", span="335-335"];
m1_154 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="sizePart.ToUpper()", span="340-340"];
m1_156 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="sizePart == BitSymbol", span="343-343"];
m1_153 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="return false;", span="337-337"];
m1_157 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="number % 1 != 0", span="345-345"];
m1_159 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="result = FromBits((long)number)", span="348-348"];
m1_160 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="result = FromBytes(number)", span="352-352"];
m1_162 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="result = FromKilobytes(number)", span="357-357"];
m1_164 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="result = FromMegabytes(number)", span="361-361"];
m1_166 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="result = FromGigabytes(number)", span="365-365"];
m1_168 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="result = FromTerabytes(number)", span="369-369"];
m1_155 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label=ByteSymbol, span="342-342"];
m1_161 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label=KilobyteSymbol, span="356-356"];
m1_163 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label=MegabyteSymbol, span="360-360"];
m1_165 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label=GigabyteSymbol, span="364-364"];
m1_167 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label=TerabyteSymbol, span="368-368"];
m1_158 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="return false;", span="346-346"];
m1_169 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="return true;", span="373-373"];
m1_170 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", span="302-302"];
m1_12 [cluster="Humanizer.Bytes.ByteSize.FromBytes(double)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.FromBytes(double)", span="120-120"];
m1_13 [cluster="Humanizer.Bytes.ByteSize.FromBytes(double)", file="ByteSize.cs", label="return new ByteSize(value);", span="122-122"];
m1_14 [cluster="Humanizer.Bytes.ByteSize.FromBytes(double)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.FromBytes(double)", span="120-120"];
m1_51 [cluster="System.Func<T, TResult>.Invoke(T)", file="ByteSize.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m1_31 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.ToString(string)", span="156-156"];
m1_32 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="!format.Contains(''#'') && !format.Contains(''0'')", span="158-158"];
m1_33 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="format = ''#.## '' + format", span="159-159"];
m1_34 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="Func<string, bool> has = s => format.IndexOf(s, StringComparison.CurrentCultureIgnoreCase) != -1", span="161-161"];
m1_35 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="Func<double, string> output = n => n.ToString(format)", span="162-162"];
m1_44 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="format.IndexOf(ByteSymbol, StringComparison.Ordinal) != -1", span="174-174"];
m1_46 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="format.IndexOf(BitSymbol, StringComparison.Ordinal) != -1", span="177-177"];
m1_48 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="return string.Format(''{0} {1}'', LargestWholeNumberValue.ToString(format), LargestWholeNumberSymbol);", span="180-180"];
m1_36 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="has(TerabyteSymbol)", span="164-164"];
m1_38 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="has(GigabyteSymbol)", span="166-166"];
m1_40 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="has(MegabyteSymbol)", span="168-168"];
m1_42 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="has(KilobyteSymbol)", span="170-170"];
m1_37 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="return output(Terabytes);", span="165-165"];
m1_39 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="return output(Gigabytes);", span="167-167"];
m1_41 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="return output(Megabytes);", span="169-169"];
m1_43 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="return output(Kilobytes);", span="171-171"];
m1_45 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="return output(Bytes);", span="175-175"];
m1_47 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="return output(Bits);", span="178-178"];
m1_49 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.ToString(string)", span="156-156"];
m1_69 [cluster="Humanizer.Bytes.ByteSize.Equals(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.Equals(Humanizer.Bytes.ByteSize)", span="197-197"];
m1_70 [cluster="Humanizer.Bytes.ByteSize.Equals(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="return Bits == value.Bits;", span="199-199"];
m1_71 [cluster="Humanizer.Bytes.ByteSize.Equals(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.Equals(Humanizer.Bytes.ByteSize)", span="197-197"];
m1_101 [cluster="Humanizer.Bytes.ByteSize.Subtract(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.Subtract(Humanizer.Bytes.ByteSize)", span="247-247"];
m1_102 [cluster="Humanizer.Bytes.ByteSize.Subtract(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="return new ByteSize(Bits - bs.Bits);", span="249-249"];
m1_103 [cluster="Humanizer.Bytes.ByteSize.Subtract(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.Subtract(Humanizer.Bytes.ByteSize)", span="247-247"];
m1_110 [cluster="Humanizer.Bytes.ByteSize.operator -(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.operator -(Humanizer.Bytes.ByteSize)", span="262-262"];
m1_111 [cluster="Humanizer.Bytes.ByteSize.operator -(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="return new ByteSize(-b.Bits);", span="264-264"];
m1_112 [cluster="Humanizer.Bytes.ByteSize.operator -(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.operator -(Humanizer.Bytes.ByteSize)", span="262-262"];
m1_174 [cluster="string.TrimStart(params char[])", file="ByteSize.cs", label="Entry string.TrimStart(params char[])", span="0-0"];
m1_95 [cluster="Humanizer.Bytes.ByteSize.AddGigabytes(double)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.AddGigabytes(double)", span="237-237"];
m1_96 [cluster="Humanizer.Bytes.ByteSize.AddGigabytes(double)", file="ByteSize.cs", label="return this + FromGigabytes(value);", span="239-239"];
m1_97 [cluster="Humanizer.Bytes.ByteSize.AddGigabytes(double)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.AddGigabytes(double)", span="237-237"];
m1_180 [cluster="Humanizer.Bytes.ByteSize.Parse(string)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.Parse(string)", span="376-376"];
m1_181 [cluster="Humanizer.Bytes.ByteSize.Parse(string)", file="ByteSize.cs", label="ByteSize result", span="378-378"];
m1_182 [cluster="Humanizer.Bytes.ByteSize.Parse(string)", file="ByteSize.cs", label="TryParse(s, out result)", span="380-380"];
m1_183 [cluster="Humanizer.Bytes.ByteSize.Parse(string)", file="ByteSize.cs", label="return result;", span="381-381"];
m1_184 [cluster="Humanizer.Bytes.ByteSize.Parse(string)", file="ByteSize.cs", label="throw new FormatException(''Value is not in the correct format'');", span="383-383"];
m1_185 [cluster="Humanizer.Bytes.ByteSize.Parse(string)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.Parse(string)", span="376-376"];
m1_179 [cluster="string.ToUpper()", file="ByteSize.cs", label="Entry string.ToUpper()", span="0-0"];
m1_176 [cluster="string.Substring(int, int)", file="ByteSize.cs", label="Entry string.Substring(int, int)", span="0-0"];
m1_76 [cluster="Humanizer.Bytes.ByteSize.CompareTo(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.CompareTo(Humanizer.Bytes.ByteSize)", span="207-207"];
m1_77 [cluster="Humanizer.Bytes.ByteSize.CompareTo(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="return Bits.CompareTo(other.Bits);", span="209-209"];
m1_78 [cluster="Humanizer.Bytes.ByteSize.CompareTo(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.CompareTo(Humanizer.Bytes.ByteSize)", span="207-207"];
m1_75 [cluster="long.GetHashCode()", file="ByteSize.cs", label="Entry long.GetHashCode()", span="0-0"];
m1_128 [cluster="Humanizer.Bytes.ByteSize.operator >(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.operator >(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="292-292"];
m1_129 [cluster="Humanizer.Bytes.ByteSize.operator >(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="return b1.Bits > b2.Bits;", span="294-294"];
m1_130 [cluster="Humanizer.Bytes.ByteSize.operator >(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.operator >(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="292-292"];
m1_24 [cluster="Humanizer.Bytes.ByteSize.FromTerabytes(double)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.FromTerabytes(double)", span="140-140"];
m1_25 [cluster="Humanizer.Bytes.ByteSize.FromTerabytes(double)", file="ByteSize.cs", label="return new ByteSize(value * BytesInTerabyte);", span="142-142"];
m1_26 [cluster="Humanizer.Bytes.ByteSize.FromTerabytes(double)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.FromTerabytes(double)", span="140-140"];
m1_186 [cluster="System.FormatException.FormatException(string)", file="ByteSize.cs", label="Entry System.FormatException.FormatException(string)", span="0-0"];
m1_178 [cluster="double.TryParse(string, out double)", file="ByteSize.cs", label="Entry double.TryParse(string, out double)", span="0-0"];
m1_21 [cluster="Humanizer.Bytes.ByteSize.FromGigabytes(double)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.FromGigabytes(double)", span="135-135"];
m1_22 [cluster="Humanizer.Bytes.ByteSize.FromGigabytes(double)", file="ByteSize.cs", label="return new ByteSize(value * BytesInGigabyte);", span="137-137"];
m1_23 [cluster="Humanizer.Bytes.ByteSize.FromGigabytes(double)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.FromGigabytes(double)", span="135-135"];
m1_15 [cluster="Humanizer.Bytes.ByteSize.FromKilobytes(double)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.FromKilobytes(double)", span="125-125"];
m1_16 [cluster="Humanizer.Bytes.ByteSize.FromKilobytes(double)", file="ByteSize.cs", label="return new ByteSize(value * BytesInKilobyte);", span="127-127"];
m1_17 [cluster="Humanizer.Bytes.ByteSize.FromKilobytes(double)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.FromKilobytes(double)", span="125-125"];
m1_57 [cluster="lambda expression", file="ByteSize.cs", label="Entry lambda expression", span="162-162"];
m1_55 [cluster="lambda expression", file="ByteSize.cs", label="format.IndexOf(s, StringComparison.CurrentCultureIgnoreCase) != -1", span="161-161"];
m1_58 [cluster="lambda expression", file="ByteSize.cs", label="n.ToString(format)", span="162-162"];
m1_54 [cluster="lambda expression", file="ByteSize.cs", label="Entry lambda expression", span="161-161"];
m1_56 [cluster="lambda expression", file="ByteSize.cs", label="Exit lambda expression", span="161-161"];
m1_59 [cluster="lambda expression", file="ByteSize.cs", label="Exit lambda expression", span="162-162"];
m1_98 [cluster="Humanizer.Bytes.ByteSize.AddTerabytes(double)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.AddTerabytes(double)", span="242-242"];
m1_99 [cluster="Humanizer.Bytes.ByteSize.AddTerabytes(double)", file="ByteSize.cs", label="return this + FromTerabytes(value);", span="244-244"];
m1_100 [cluster="Humanizer.Bytes.ByteSize.AddTerabytes(double)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.AddTerabytes(double)", span="242-242"];
m1_52 [cluster="string.IndexOf(string, System.StringComparison)", file="ByteSize.cs", label="Entry string.IndexOf(string, System.StringComparison)", span="0-0"];
m1_72 [cluster="Humanizer.Bytes.ByteSize.GetHashCode()", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.GetHashCode()", span="202-202"];
m1_73 [cluster="Humanizer.Bytes.ByteSize.GetHashCode()", file="ByteSize.cs", label="return Bits.GetHashCode();", span="204-204"];
m1_74 [cluster="Humanizer.Bytes.ByteSize.GetHashCode()", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.GetHashCode()", span="202-202"];
m1_113 [cluster="Humanizer.Bytes.ByteSize.operator --(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.operator --(Humanizer.Bytes.ByteSize)", span="267-267"];
m1_114 [cluster="Humanizer.Bytes.ByteSize.operator --(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="return new ByteSize(b.Bits--);", span="269-269"];
m1_115 [cluster="Humanizer.Bytes.ByteSize.operator --(Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.operator --(Humanizer.Bytes.ByteSize)", span="267-267"];
m1_131 [cluster="Humanizer.Bytes.ByteSize.operator >=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.operator >=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="297-297"];
m1_132 [cluster="Humanizer.Bytes.ByteSize.operator >=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="return b1.Bits >= b2.Bits;", span="299-299"];
m1_133 [cluster="Humanizer.Bytes.ByteSize.operator >=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.operator >=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="297-297"];
m1_116 [cluster="Humanizer.Bytes.ByteSize.operator ==(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.operator ==(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="272-272"];
m1_117 [cluster="Humanizer.Bytes.ByteSize.operator ==(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="return b1.Bits == b2.Bits;", span="274-274"];
m1_118 [cluster="Humanizer.Bytes.ByteSize.operator ==(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.operator ==(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="272-272"];
m1_104 [cluster="Humanizer.Bytes.ByteSize.operator +(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.operator +(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="252-252"];
m1_105 [cluster="Humanizer.Bytes.ByteSize.operator +(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="return new ByteSize(b1.Bits + b2.Bits);", span="254-254"];
m1_106 [cluster="Humanizer.Bytes.ByteSize.operator +(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.operator +(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="252-252"];
m1_173 [cluster="Humanizer.Bytes.ByteSize.ByteSize()", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.ByteSize()", span="30-30"];
m1_79 [cluster="long.CompareTo(long)", file="ByteSize.cs", label="Entry long.CompareTo(long)", span="0-0"];
m1_89 [cluster="Humanizer.Bytes.ByteSize.AddKilobytes(double)", file="ByteSize.cs", label="Entry Humanizer.Bytes.ByteSize.AddKilobytes(double)", span="227-227"];
m1_90 [cluster="Humanizer.Bytes.ByteSize.AddKilobytes(double)", file="ByteSize.cs", label="return this + FromKilobytes(value);", span="229-229"];
m1_91 [cluster="Humanizer.Bytes.ByteSize.AddKilobytes(double)", file="ByteSize.cs", label="Exit Humanizer.Bytes.ByteSize.AddKilobytes(double)", span="227-227"];
m1_53 [cluster="double.ToString(string)", file="ByteSize.cs", label="Entry double.ToString(string)", span="0-0"];
m1_8 [cluster="System.Math.Ceiling(double)", file="ByteSize.cs", label="Entry System.Math.Ceiling(double)", span="0-0"];
m1_187 [file="ByteSize.cs", label="Humanizer.Bytes.ByteSize", span=""];
m1_188 [file="ByteSize.cs", label="ref Humanizer.Bytes.ByteSize", span=""];
m1_189 [file="ByteSize.cs", label="ref Humanizer.Bytes.ByteSize", span=""];
m1_190 [file="ByteSize.cs", label=string, span=""];
m1_191 [file="ByteSize.cs", label="ref Humanizer.Bytes.ByteSize", span=""];
m1_192 [file="ByteSize.cs", label="ref Humanizer.Bytes.ByteSize", span=""];
m1_193 [file="ByteSize.cs", label="ref Humanizer.Bytes.ByteSize", span=""];
m1_194 [file="ByteSize.cs", label="ref Humanizer.Bytes.ByteSize", span=""];
m1_195 [file="ByteSize.cs", label="ref Humanizer.Bytes.ByteSize", span=""];
m1_196 [file="ByteSize.cs", label="ref Humanizer.Bytes.ByteSize", span=""];
m1_197 [file="ByteSize.cs", label="ref Humanizer.Bytes.ByteSize", span=""];
m2_19 [cluster="lambda expression", file="Configurator.cs", label="Entry lambda expression", span="21-21"];
m2_13 [cluster="lambda expression", color=green, community=0, file="Configurator.cs", label="0: new CzechSlovakPolishFormatter()", span="19-19"];
m2_12 [cluster="lambda expression", file="Configurator.cs", label="Entry lambda expression", span="19-19"];
m2_14 [cluster="lambda expression", file="Configurator.cs", label="Exit lambda expression", span="19-19"];
m2_17 [cluster="lambda expression", file="Configurator.cs", label="new CzechSlovakPolishFormatter()", span="20-20"];
m2_20 [cluster="lambda expression", file="Configurator.cs", label="new CzechSlovakPolishFormatter()", span="21-21"];
m2_16 [cluster="lambda expression", file="Configurator.cs", label="Entry lambda expression", span="20-20"];
m2_18 [cluster="lambda expression", file="Configurator.cs", label="Exit lambda expression", span="20-20"];
m2_21 [cluster="lambda expression", file="Configurator.cs", label="Exit lambda expression", span="21-21"];
m2_15 [cluster="Humanizer.Localisation.Formatters.CzechSlovakPolishFormatter.CzechSlovakPolishFormatter()", file="Configurator.cs", label="Entry Humanizer.Localisation.Formatters.CzechSlovakPolishFormatter.CzechSlovakPolishFormatter()", span="2-2"];
m3_5 [cluster="Humanizer.Localisation.DefaultFormatter.DateHumanize_MultipleHoursAgo(int)", file="DateHumanizeTests.cs", label="return Format(ResourceKeys.DateHumanize.MultipleHoursAgo, numberOfHours);", span="11-11"];
m3_47 [cluster="Humanizer.Localisation.DefaultFormatter.Format(string)", file="DateHumanizeTests.cs", label="Entry Humanizer.Localisation.DefaultFormatter.Format(string)", span="134-134"];
m3_81 [cluster="Humanizer.Localisation.DefaultFormatter.Format(string)", file="DateHumanizeTests.cs", label="return Resources.GetResource(GetResourceKey(resourceKey));", span="136-136"];
m3_82 [cluster="Humanizer.Localisation.DefaultFormatter.Format(string)", file="DateHumanizeTests.cs", label="Exit Humanizer.Localisation.DefaultFormatter.Format(string)", span="134-134"];
m3_10 [cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.MinutesAgo(int, string)", file="DateHumanizeTests.cs", label="DateHumanize.Verify(expected, minutes, TimeUnit.Minute, Tense.Past)", span="39-39"];
m3_11 [cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.MinutesAgo(int, string)", file="DateHumanizeTests.cs", label="Exit Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.MinutesAgo(int, string)", span="37-37"];
m3_12 [cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.MonthsAgo(int, string)", file="DateHumanizeTests.cs", label="Entry Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.MonthsAgo(int, string)", span="47-47"];
m3_9 [cluster="Humanizer.Localisation.DefaultFormatter.DateHumanize_MultipleMinutesAgo(int)", file="DateHumanizeTests.cs", label="Exit Humanizer.Localisation.DefaultFormatter.DateHumanize_MultipleMinutesAgo(int)", span="14-14"];
m3_32 [cluster="Humanizer.Localisation.DefaultFormatter.DateHumanize_SingleSecondAgo()", file="DateHumanizeTests.cs", label="Entry Humanizer.Localisation.DefaultFormatter.DateHumanize_SingleSecondAgo()", span="54-54"];
m3_33 [cluster="Humanizer.Localisation.DefaultFormatter.DateHumanize_SingleSecondAgo()", color=green, community=0, file="DateHumanizeTests.cs", label="0: return Resources.GetResource(ResourceKeys.DateHumanize.SingleSecondAgo);", span="56-56"];
m3_34 [cluster="Humanizer.Localisation.DefaultFormatter.DateHumanize_SingleSecondAgo()", file="DateHumanizeTests.cs", label="Exit Humanizer.Localisation.DefaultFormatter.DateHumanize_SingleSecondAgo()", span="54-54"];
m3_86 [cluster="Humanizer.Localisation.DefaultFormatter.GetResourceKey(string, int)", file="DateHumanizeTests.cs", label="Entry Humanizer.Localisation.DefaultFormatter.GetResourceKey(string, int)", span="144-144"];
m3_88 [cluster="Humanizer.Localisation.DefaultFormatter.GetResourceKey(string, int)", file="DateHumanizeTests.cs", label="return resourceKey;", span="146-146"];
m3_89 [cluster="Humanizer.Localisation.DefaultFormatter.GetResourceKey(string, int)", file="DateHumanizeTests.cs", label="Exit Humanizer.Localisation.DefaultFormatter.GetResourceKey(string, int)", span="144-144"];
m3_23 [cluster="Humanizer.Localisation.DefaultFormatter.DateHumanize_SingleHourAgo()", file="DateHumanizeTests.cs", label="Entry Humanizer.Localisation.DefaultFormatter.DateHumanize_SingleHourAgo()", span="39-39"];
m3_24 [cluster="Humanizer.Localisation.DefaultFormatter.DateHumanize_SingleHourAgo()", file="DateHumanizeTests.cs", label="return Resources.GetResource(ResourceKeys.DateHumanize.SingleHourAgo);", span="41-41"];
m3_25 [cluster="Humanizer.Localisation.DefaultFormatter.DateHumanize_SingleHourAgo()", file="DateHumanizeTests.cs", label="Exit Humanizer.Localisation.DefaultFormatter.DateHumanize_SingleHourAgo()", span="39-39"];
m3_87 [cluster="string.Format(string, object)", file="DateHumanizeTests.cs", label="Entry string.Format(string, object)", span="0-0"];
m3_54 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_MultipleHours(int)", file="DateHumanizeTests.cs", label="Entry Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_MultipleHours(int)", span="89-89"];
m3_55 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_MultipleHours(int)", file="DateHumanizeTests.cs", label="return Format(ResourceKeys.TimeSpanHumanize.MultipleHours, hours);", span="91-91"];
m3_56 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_MultipleHours(int)", file="DateHumanizeTests.cs", label="Exit Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_MultipleHours(int)", span="89-89"];
m3_0 [cluster="Humanizer.Localisation.DefaultFormatter.DateHumanize_MultipleDaysAgo(int)", file="DateHumanizeTests.cs", label="Entry Humanizer.Localisation.DefaultFormatter.DateHumanize_MultipleDaysAgo(int)", span="4-4"];
m3_1 [cluster="Humanizer.Localisation.DefaultFormatter.DateHumanize_MultipleDaysAgo(int)", file="DateHumanizeTests.cs", label="return Format(ResourceKeys.DateHumanize.MultipleDaysAgo, numberOfDays);", span="6-6"];
m3_44 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_SingleWeek()", file="DateHumanizeTests.cs", label="Entry Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_SingleWeek()", span="74-74"];
m3_45 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_SingleWeek()", file="DateHumanizeTests.cs", label="return Format(ResourceKeys.TimeSpanHumanize.SingleWeek);", span="76-76"];
m3_46 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_SingleWeek()", file="DateHumanizeTests.cs", label="Exit Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_SingleWeek()", span="74-74"];
m3_13 [cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.MonthsAgo(int, string)", file="DateHumanizeTests.cs", label="DateHumanize.Verify(expected, months, TimeUnit.Month, Tense.Past)", span="49-49"];
m3_14 [cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.MonthsAgo(int, string)", color=green, community=0, file="DateHumanizeTests.cs", label="0: Exit Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.MonthsAgo(int, string)", span="47-47"];
m3_15 [cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.SecondsAgo(int, string)", file="DateHumanizeTests.cs", label="Entry Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.SecondsAgo(int, string)", span="57-57"];
m3_60 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_MultipleMinutes(int)", file="DateHumanizeTests.cs", label="Entry Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_MultipleMinutes(int)", span="99-99"];
m3_61 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_MultipleMinutes(int)", file="DateHumanizeTests.cs", label="return Format(ResourceKeys.TimeSpanHumanize.MultipleMinutes, minutes);", span="101-101"];
m3_62 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_MultipleMinutes(int)", file="DateHumanizeTests.cs", label="Exit Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_MultipleMinutes(int)", span="99-99"];
m3_7 [cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.HoursAgo(int, string)", file="DateHumanizeTests.cs", label="DateHumanize.Verify(expected, hours, TimeUnit.Hour, Tense.Past)", span="29-29"];
m3_8 [cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.HoursAgo(int, string)", color=green, community=0, file="DateHumanizeTests.cs", label="0: Exit Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.HoursAgo(int, string)", span="27-27"];
m3_63 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_SingleMinute()", file="DateHumanizeTests.cs", label="Entry Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_SingleMinute()", span="104-104"];
m3_64 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_SingleMinute()", file="DateHumanizeTests.cs", label="return Format(ResourceKeys.TimeSpanHumanize.SingleMinute);", span="106-106"];
m3_65 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_SingleMinute()", file="DateHumanizeTests.cs", label="Exit Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_SingleMinute()", span="104-104"];
m3_26 [cluster="Humanizer.Localisation.DefaultFormatter.DateHumanize_NotYet()", file="DateHumanizeTests.cs", label="Entry Humanizer.Localisation.DefaultFormatter.DateHumanize_NotYet()", span="44-44"];
m3_27 [cluster="Humanizer.Localisation.DefaultFormatter.DateHumanize_NotYet()", color=green, community=0, file="DateHumanizeTests.cs", label="0: return Resources.GetResource(ResourceKeys.DateHumanize.NotYet);", span="46-46"];
m3_28 [cluster="Humanizer.Localisation.DefaultFormatter.DateHumanize_NotYet()", file="DateHumanizeTests.cs", label="Exit Humanizer.Localisation.DefaultFormatter.DateHumanize_NotYet()", span="44-44"];
m3_72 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_MultipleMilliseconds(int)", file="DateHumanizeTests.cs", label="Entry Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_MultipleMilliseconds(int)", span="119-119"];
m3_73 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_MultipleMilliseconds(int)", file="DateHumanizeTests.cs", label="return Format(ResourceKeys.TimeSpanHumanize.MultipleMilliseconds, milliSeconds);", span="121-121"];
m3_74 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_MultipleMilliseconds(int)", file="DateHumanizeTests.cs", label="Exit Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_MultipleMilliseconds(int)", span="119-119"];
m3_66 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_MultipleSeconds(int)", file="DateHumanizeTests.cs", label="Entry Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_MultipleSeconds(int)", span="109-109"];
m3_67 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_MultipleSeconds(int)", file="DateHumanizeTests.cs", label="return Format(ResourceKeys.TimeSpanHumanize.MultipleSeconds, seconds);", span="111-111"];
m3_68 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_MultipleSeconds(int)", file="DateHumanizeTests.cs", label="Exit Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_MultipleSeconds(int)", span="109-109"];
m3_69 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_SingleSecond()", file="DateHumanizeTests.cs", label="Entry Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_SingleSecond()", span="114-114"];
m3_70 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_SingleSecond()", file="DateHumanizeTests.cs", label="return Format(ResourceKeys.TimeSpanHumanize.SingleSecond);", span="116-116"];
m3_71 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_SingleSecond()", file="DateHumanizeTests.cs", label="Exit Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_SingleSecond()", span="114-114"];
m3_2 [cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.DaysAgo(int, string)", file="DateHumanizeTests.cs", label="Entry Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.DaysAgo(int, string)", span="17-17"];
m3_41 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_MultipleWeeks(int)", file="DateHumanizeTests.cs", label="Entry Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_MultipleWeeks(int)", span="69-69"];
m3_42 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_MultipleWeeks(int)", file="DateHumanizeTests.cs", label="return Format(ResourceKeys.TimeSpanHumanize.MultipleWeeks, weeks);", span="71-71"];
m3_43 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_MultipleWeeks(int)", file="DateHumanizeTests.cs", label="Exit Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_MultipleWeeks(int)", span="69-69"];
m3_38 [cluster="Humanizer.Localisation.DefaultFormatter.DateHumanize_SingleDayAgo()", file="DateHumanizeTests.cs", label="Entry Humanizer.Localisation.DefaultFormatter.DateHumanize_SingleDayAgo()", span="64-64"];
m3_39 [cluster="Humanizer.Localisation.DefaultFormatter.DateHumanize_SingleDayAgo()", color=green, community=0, file="DateHumanizeTests.cs", label="0: return Resources.GetResource(ResourceKeys.DateHumanize.SingleDayAgo);", span="66-66"];
m3_40 [cluster="Humanizer.Localisation.DefaultFormatter.DateHumanize_SingleDayAgo()", file="DateHumanizeTests.cs", label="Exit Humanizer.Localisation.DefaultFormatter.DateHumanize_SingleDayAgo()", span="64-64"];
m3_18 [cluster="Humanizer.Localisation.DefaultFormatter.DateHumanize_MultipleYearsAgo(int)", file="DateHumanizeTests.cs", label="Exit Humanizer.Localisation.DefaultFormatter.DateHumanize_MultipleYearsAgo(int)", span="29-29"];
m3_19 [cluster="Humanizer.Localisation.DefaultFormatter.DateHumanize_SingleMinuteAgo()", file="DateHumanizeTests.cs", label="Entry Humanizer.Localisation.DefaultFormatter.DateHumanize_SingleMinuteAgo()", span="34-34"];
m3_20 [cluster="Humanizer.Localisation.DefaultFormatter.DateHumanize_SingleMinuteAgo()", color=green, community=0, file="DateHumanizeTests.cs", label="0: return Resources.GetResource(ResourceKeys.DateHumanize.SingleMinuteAgo);", span="36-36"];
m3_29 [cluster="Humanizer.Localisation.DefaultFormatter.DateHumanize_SingleMonthAgo()", file="DateHumanizeTests.cs", label="Entry Humanizer.Localisation.DefaultFormatter.DateHumanize_SingleMonthAgo()", span="49-49"];
m3_30 [cluster="Humanizer.Localisation.DefaultFormatter.DateHumanize_SingleMonthAgo()", file="DateHumanizeTests.cs", label="return Resources.GetResource(ResourceKeys.DateHumanize.SingleMonthAgo);", span="51-51"];
m3_31 [cluster="Humanizer.Localisation.DefaultFormatter.DateHumanize_SingleMonthAgo()", file="DateHumanizeTests.cs", label="Exit Humanizer.Localisation.DefaultFormatter.DateHumanize_SingleMonthAgo()", span="49-49"];
m3_75 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_SingleMillisecond()", file="DateHumanizeTests.cs", label="Entry Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_SingleMillisecond()", span="124-124"];
m3_76 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_SingleMillisecond()", file="DateHumanizeTests.cs", label="return Format(ResourceKeys.TimeSpanHumanize.SingleMillisecond);", span="126-126"];
m3_77 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_SingleMillisecond()", file="DateHumanizeTests.cs", label="Exit Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_SingleMillisecond()", span="124-124"];
m3_78 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_Zero()", file="DateHumanizeTests.cs", label="Entry Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_Zero()", span="129-129"];
m3_79 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_Zero()", file="DateHumanizeTests.cs", label="return Format(ResourceKeys.TimeSpanHumanize.Zero);", span="131-131"];
m3_80 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_Zero()", file="DateHumanizeTests.cs", label="Exit Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_Zero()", span="129-129"];
m3_35 [cluster="Humanizer.Localisation.DefaultFormatter.DateHumanize_SingleYearAgo()", file="DateHumanizeTests.cs", label="Entry Humanizer.Localisation.DefaultFormatter.DateHumanize_SingleYearAgo()", span="59-59"];
m3_36 [cluster="Humanizer.Localisation.DefaultFormatter.DateHumanize_SingleYearAgo()", file="DateHumanizeTests.cs", label="return Resources.GetResource(ResourceKeys.DateHumanize.SingleYearAgo);", span="61-61"];
m3_37 [cluster="Humanizer.Localisation.DefaultFormatter.DateHumanize_SingleYearAgo()", file="DateHumanizeTests.cs", label="Exit Humanizer.Localisation.DefaultFormatter.DateHumanize_SingleYearAgo()", span="59-59"];
m3_83 [cluster="Humanizer.Localisation.DefaultFormatter.GetResourceKey(string)", file="DateHumanizeTests.cs", label="Entry Humanizer.Localisation.DefaultFormatter.GetResourceKey(string)", span="149-149"];
m3_90 [cluster="Humanizer.Localisation.DefaultFormatter.GetResourceKey(string)", file="DateHumanizeTests.cs", label="return resourceKey;", span="151-151"];
m3_91 [cluster="Humanizer.Localisation.DefaultFormatter.GetResourceKey(string)", file="DateHumanizeTests.cs", label="Exit Humanizer.Localisation.DefaultFormatter.GetResourceKey(string)", span="149-149"];
m3_4 [cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.DaysAgo(int, string)", file="DateHumanizeTests.cs", label="Exit Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.DaysAgo(int, string)", span="17-17"];
m3_6 [cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.HoursAgo(int, string)", file="DateHumanizeTests.cs", label="Entry Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.HoursAgo(int, string)", span="27-27"];
m3_3 [cluster="Humanizer.Localisation.DefaultFormatter.Format(string, int)", file="DateHumanizeTests.cs", label="Entry Humanizer.Localisation.DefaultFormatter.Format(string, int)", span="139-139"];
m3_21 [cluster="Humanizer.Localisation.DefaultFormatter.DateHumanize_SingleMinuteAgo()", file="DateHumanizeTests.cs", label="Exit Humanizer.Localisation.DefaultFormatter.DateHumanize_SingleMinuteAgo()", span="34-34"];
m3_84 [cluster="Humanizer.Localisation.DefaultFormatter.Format(string, int)", file="DateHumanizeTests.cs", label="return string.Format(Resources.GetResource(GetResourceKey(resourceKey, number)), number);", span="141-141"];
m3_85 [cluster="Humanizer.Localisation.DefaultFormatter.Format(string, int)", file="DateHumanizeTests.cs", label="Exit Humanizer.Localisation.DefaultFormatter.Format(string, int)", span="139-139"];
m3_48 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_MultipleDays(int)", file="DateHumanizeTests.cs", label="Entry Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_MultipleDays(int)", span="79-79"];
m3_49 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_MultipleDays(int)", file="DateHumanizeTests.cs", label="return Format(ResourceKeys.TimeSpanHumanize.MultipleDays, days);", span="81-81"];
m3_50 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_MultipleDays(int)", file="DateHumanizeTests.cs", label="Exit Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_MultipleDays(int)", span="79-79"];
m3_22 [cluster="Humanizer.Localisation.Resources.GetResource(string)", file="DateHumanizeTests.cs", label="Entry Humanizer.Localisation.Resources.GetResource(string)", span="27-27"];
m3_16 [cluster="Humanizer.Localisation.DefaultFormatter.DateHumanize_MultipleYearsAgo(int)", file="DateHumanizeTests.cs", label="Entry Humanizer.Localisation.DefaultFormatter.DateHumanize_MultipleYearsAgo(int)", span="29-29"];
m3_17 [cluster="Humanizer.Localisation.DefaultFormatter.DateHumanize_MultipleYearsAgo(int)", file="DateHumanizeTests.cs", label="return Format(ResourceKeys.DateHumanize.MultipleYearsAgo, numberOfYears);", span="31-31"];
m3_57 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_SingleHour()", file="DateHumanizeTests.cs", label="Entry Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_SingleHour()", span="94-94"];
m3_58 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_SingleHour()", file="DateHumanizeTests.cs", label="return Format(ResourceKeys.TimeSpanHumanize.SingleHour);", span="96-96"];
m3_59 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_SingleHour()", file="DateHumanizeTests.cs", label="Exit Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_SingleHour()", span="94-94"];
m3_51 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_SingleDay()", file="DateHumanizeTests.cs", label="Entry Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_SingleDay()", span="84-84"];
m3_52 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_SingleDay()", file="DateHumanizeTests.cs", label="return Format(ResourceKeys.TimeSpanHumanize.SingleDay);", span="86-86"];
m3_53 [cluster="Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_SingleDay()", file="DateHumanizeTests.cs", label="Exit Humanizer.Localisation.DefaultFormatter.TimeSpanHumanize_SingleDay()", span="84-84"];
m3_92 [file="DateHumanizeTests.cs", label="Humanizer.Localisation.DefaultFormatter", span=""];
m4_0 [cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="Entry Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", span="15-15"];
m4_3 [cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", color=green, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs", label="0: return towords;", span="20-20"];
m4_2 [cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="ExceptionNumbersToWords(number, out towords)", span="19-19"];
m4_1 [cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="string towords", span="17-17"];
m4_4 [cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="number > 20", span="23-23"];
m4_10 [cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="return NormalNumberToWords(number);", span="34-34"];
m4_9 [cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="return towords + '' '' + exceptionPart;", span="30-30"];
m4_6 [cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="ExceptionNumbersToWords(number%10, out exceptionPart)", span="26-26"];
m4_7 [cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="var normalPart = number - number%10", span="28-28"];
m4_5 [cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="string exceptionPart", span="25-25"];
m4_8 [cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="towords = RemoveOnePrefix(normalPart.ToWords())", span="29-29"];
m4_11 [cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="Exit Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", span="15-15"];
m4_34 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DateTimeHumanizePrecisionStrategyTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m4_35 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m4_22 [cluster="string.Replace(char, char)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="Entry string.Replace(char, char)", span="0-0"];
m4_23 [cluster="string.EndsWith(string)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="Entry string.EndsWith(string)", span="0-0"];
m4_12 [cluster="Humanizer.NumberToOrdinalWordsExtension.ExceptionNumbersToWords(int, out string)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="Entry Humanizer.NumberToOrdinalWordsExtension.ExceptionNumbersToWords(int, out string)", span="58-58"];
m4_31 [cluster="Humanizer.NumberToOrdinalWordsExtension.ExceptionNumbersToWords(int, out string)", color=green, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs", label="0: var exceptions = new Dictionary<int, string>\r\n            {\r\n                {1, ''first''},\r\n                {2, ''second''},\r\n                {3, ''third''},\r\n                {4, ''forth''},\r\n                {5, ''fifth''},\r\n                {8, ''eighth''},\r\n                {9, ''ninth''},\r\n                {12, ''twelfth''},\r\n            }", span="60-70"];
m4_32 [cluster="Humanizer.NumberToOrdinalWordsExtension.ExceptionNumbersToWords(int, out string)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="return exceptions.TryGetValue(number, out words);", span="72-72"];
m4_33 [cluster="Humanizer.NumberToOrdinalWordsExtension.ExceptionNumbersToWords(int, out string)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="Exit Humanizer.NumberToOrdinalWordsExtension.ExceptionNumbersToWords(int, out string)", span="58-58"];
m4_13 [cluster="int.ToWords()", file="DateTimeHumanizePrecisionStrategyTests.cs", label="Entry int.ToWords()", span="27-27"];
m4_30 [cluster="string.Remove(int, int)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="Entry string.Remove(int, int)", span="0-0"];
m4_24 [cluster="string.TrimEnd(params char[])", file="DateTimeHumanizePrecisionStrategyTests.cs", label="Entry string.TrimEnd(params char[])", span="0-0"];
m4_14 [cluster="Humanizer.NumberToOrdinalWordsExtension.RemoveOnePrefix(string)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="Entry Humanizer.NumberToOrdinalWordsExtension.RemoveOnePrefix(string)", span="49-49"];
m4_25 [cluster="Humanizer.NumberToOrdinalWordsExtension.RemoveOnePrefix(string)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="towords.IndexOf(''one'', StringComparison.Ordinal) == 0", span="52-52"];
m4_26 [cluster="Humanizer.NumberToOrdinalWordsExtension.RemoveOnePrefix(string)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="towords = towords.Remove(0, 4)", span="53-53"];
m4_27 [cluster="Humanizer.NumberToOrdinalWordsExtension.RemoveOnePrefix(string)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="return towords;", span="55-55"];
m4_28 [cluster="Humanizer.NumberToOrdinalWordsExtension.RemoveOnePrefix(string)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="Exit Humanizer.NumberToOrdinalWordsExtension.RemoveOnePrefix(string)", span="49-49"];
m4_15 [cluster="Humanizer.NumberToOrdinalWordsExtension.NormalNumberToWords(int)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="Entry Humanizer.NumberToOrdinalWordsExtension.NormalNumberToWords(int)", span="37-37"];
m4_20 [cluster="Humanizer.NumberToOrdinalWordsExtension.NormalNumberToWords(int)", color=green, community=0, file="DateTimeHumanizePrecisionStrategyTests.cs", label="0: return towords + ''th'';", span="46-46"];
m4_17 [cluster="Humanizer.NumberToOrdinalWordsExtension.NormalNumberToWords(int)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="towords = RemoveOnePrefix(towords)", span="41-41"];
m4_18 [cluster="Humanizer.NumberToOrdinalWordsExtension.NormalNumberToWords(int)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="towords.EndsWith(''y'')", span="43-43"];
m4_19 [cluster="Humanizer.NumberToOrdinalWordsExtension.NormalNumberToWords(int)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="towords = towords.TrimEnd('y') + ''ie''", span="44-44"];
m4_16 [cluster="Humanizer.NumberToOrdinalWordsExtension.NormalNumberToWords(int)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="string towords = number.ToWords().Replace('-', ' ')", span="39-39"];
m4_21 [cluster="Humanizer.NumberToOrdinalWordsExtension.NormalNumberToWords(int)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="Exit Humanizer.NumberToOrdinalWordsExtension.NormalNumberToWords(int)", span="37-37"];
m4_29 [cluster="string.IndexOf(string, System.StringComparison)", file="DateTimeHumanizePrecisionStrategyTests.cs", label="Entry string.IndexOf(string, System.StringComparison)", span="0-0"];
m5_3 [cluster="int.ToString()", file="DefaultNumberToWordsConverter.cs", label="Entry int.ToString()", span="0-0"];
m5_0 [cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.Convert(int)", file="DefaultNumberToWordsConverter.cs", label="Entry Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.Convert(int)", span="4-4"];
m5_1 [cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.Convert(int)", color=green, community=0, file="DefaultNumberToWordsConverter.cs", label="0: return number.ToString();", span="6-6"];
m5_2 [cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.Convert(int)", file="DefaultNumberToWordsConverter.cs", label="Exit Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.Convert(int)", span="4-4"];
m5_4 [cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.ConvertToOrdinal(int)", file="DefaultNumberToWordsConverter.cs", label="Entry Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.ConvertToOrdinal(int)", span="9-9"];
m5_5 [cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.ConvertToOrdinal(int)", color=green, community=0, file="DefaultNumberToWordsConverter.cs", label="0: return number.ToString();", span="11-11"];
m5_6 [cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.ConvertToOrdinal(int)", file="DefaultNumberToWordsConverter.cs", label="Exit Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.ConvertToOrdinal(int)", span="9-9"];
m7_2 [cluster="CommandLine.Internal.IArgumentEnumerator.MoveNext()", file="FrenchNumberToWordsConverter.cs", label="Entry CommandLine.Internal.IArgumentEnumerator.MoveNext()", span="48-48"];
m7_3 [cluster="CommandLine.Internal.IArgumentEnumerator.MoveNext()", file="FrenchNumberToWordsConverter.cs", label="Exit CommandLine.Internal.IArgumentEnumerator.MoveNext()", span="48-48"];
m7_0 [cluster="CommandLine.Internal.IArgumentEnumerator.GetRemainingFromNext()", file="FrenchNumberToWordsConverter.cs", label="Entry CommandLine.Internal.IArgumentEnumerator.GetRemainingFromNext()", span="43-43"];
m7_1 [cluster="CommandLine.Internal.IArgumentEnumerator.GetRemainingFromNext()", file="FrenchNumberToWordsConverter.cs", label="Exit CommandLine.Internal.IArgumentEnumerator.GetRemainingFromNext()", span="43-43"];
m7_4 [cluster="CommandLine.Internal.IArgumentEnumerator.MovePrevious()", file="FrenchNumberToWordsConverter.cs", label="Entry CommandLine.Internal.IArgumentEnumerator.MovePrevious()", span="50-50"];
m7_5 [cluster="CommandLine.Internal.IArgumentEnumerator.MovePrevious()", file="FrenchNumberToWordsConverter.cs", label="Exit CommandLine.Internal.IArgumentEnumerator.MovePrevious()", span="50-50"];
m12_2 [cluster="Humanizer.Localisation.NumberToWords.INumberToWordsConverter.ConvertToOrdinal(int)", file="INumberToWordsConverter.cs", label="Entry Humanizer.Localisation.NumberToWords.INumberToWordsConverter.ConvertToOrdinal(int)", span="19-19"];
m12_3 [cluster="Humanizer.Localisation.NumberToWords.INumberToWordsConverter.ConvertToOrdinal(int)", file="INumberToWordsConverter.cs", label="Exit Humanizer.Localisation.NumberToWords.INumberToWordsConverter.ConvertToOrdinal(int)", span="19-19"];
m12_0 [cluster="Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(int)", file="INumberToWordsConverter.cs", label="Entry Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(int)", span="12-12"];
m12_1 [cluster="Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(int)", file="INumberToWordsConverter.cs", label="Exit Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(int)", span="12-12"];
m14_4 [cluster="Unk.Equal", file="NumberToOrdinalWordsTests.cs", label="Entry Unk.Equal", span=""];
m14_0 [cluster="Humanizer.Tests.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", file="NumberToOrdinalWordsTests.cs", label="Entry Humanizer.Tests.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", span="50-50"];
m14_1 [cluster="Humanizer.Tests.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", color=red, community=0, file="NumberToOrdinalWordsTests.cs", label="0: Assert.Equal(words, number.ToOrdinalWords())", span="52-52"];
m14_2 [cluster="Humanizer.Tests.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", file="NumberToOrdinalWordsTests.cs", label="Exit Humanizer.Tests.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", span="50-50"];
m14_3 [cluster="int.ToOrdinalWords()", file="NumberToOrdinalWordsTests.cs", label="Entry int.ToOrdinalWords()", span="14-14"];
m15_7 [cluster="Humanizer.Localisation.NumberToWords.ArabicNumberToWordsConverter.ArabicNumberToWordsConverter()", file="NumberToWordsExtension.cs", label="Entry Humanizer.Localisation.NumberToWords.ArabicNumberToWordsConverter.ArabicNumberToWordsConverter()", span="4-4"];
m15_15 [cluster="Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(int)", file="NumberToWordsExtension.cs", label="Entry Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(int)", span="12-12"];
m15_12 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs", label="Entry Humanizer.NumberToWordsExtension.ToWords(int)", span="25-25"];
m15_13 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs", label="return Converter.Convert(number);", span="27-27"];
m15_14 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs", label="Exit Humanizer.NumberToWordsExtension.ToWords(int)", span="25-25"];
m15_3 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.EnglishNumberToWordsConverter()", file="NumberToWordsExtension.cs", label="Entry Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.EnglishNumberToWordsConverter()", span="5-5"];
m15_11 [cluster="Humanizer.Localisation.NumberToWords.FarsiNumberToWordsConverter.FarsiNumberToWordsConverter()", file="NumberToWordsExtension.cs", label="Entry Humanizer.Localisation.NumberToWords.FarsiNumberToWordsConverter.FarsiNumberToWordsConverter()", span="5-5"];
m15_8 [cluster="lambda expression", file="NumberToWordsExtension.cs", label="Entry lambda expression", span="17-17"];
m15_0 [cluster="lambda expression", file="NumberToWordsExtension.cs", label="Entry lambda expression", span="15-15"];
m15_1 [cluster="lambda expression", color=red, community=0, file="NumberToWordsExtension.cs", label="0: new EnglishNumberToWordsConverter()", span="15-15"];
m15_2 [cluster="lambda expression", file="NumberToWordsExtension.cs", label="Exit lambda expression", span="15-15"];
m15_4 [cluster="lambda expression", file="NumberToWordsExtension.cs", label="Entry lambda expression", span="16-16"];
m15_5 [cluster="lambda expression", color=red, community=0, file="NumberToWordsExtension.cs", label="0: new ArabicNumberToWordsConverter()", span="16-16"];
m15_6 [cluster="lambda expression", file="NumberToWordsExtension.cs", label="Exit lambda expression", span="16-16"];
m15_9 [cluster="lambda expression", color=red, community=0, file="NumberToWordsExtension.cs", label="0: new FarsiNumberToWordsConverter()", span="17-17"];
m15_10 [cluster="lambda expression", file="NumberToWordsExtension.cs", label="Exit lambda expression", span="17-17"];
m16_77 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="208-208"];
m16_78 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="NumberToWordsTests.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(NameInfo.EmptyName) }", span="211-211"];
m16_79 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="NumberToWordsTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<Options_With_Sequence_And_Only_Min_Constraint_For_Value>>(() => new Options_With_Sequence_And_Only_Min_Constraint_For_Value()),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="214-219"];
m16_80 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="NumberToWordsTests.cs", label="((NotParsed<Options_With_Sequence_And_Only_Min_Constraint_For_Value>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="222-222"];
m16_81 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="NumberToWordsTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="208-208"];
m16_200 [cluster="CommandLine.Tests.Fakes.Options_With_Two_Sets.Options_With_Two_Sets()", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Fakes.Options_With_Two_Sets.Options_With_Two_Sets()", span="4-4"];
m16_18 [cluster="CommandLine.TypeInfo.Create(System.Type)", file="NumberToWordsTests.cs", label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29"];
m16_35 [cluster="CommandLine.Tests.Fakes.Simple_Options_With_Double_Value.Simple_Options_With_Double_Value()", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Fakes.Simple_Options_With_Double_Value.Simple_Options_With_Double_Value()", span="4-4"];
m16_196 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo, string)", file="NumberToWordsTests.cs", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo, string)", span="329-329"];
m16_103 [cluster="CommandLine.Tests.Fakes.Options_With_Sequence_And_Only_Max_Constraint_For_Value.Options_With_Sequence_And_Only_Max_Constraint_For_Value()", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Fakes.Options_With_Sequence_And_Only_Max_Constraint_For_Value.Options_With_Sequence_And_Only_Max_Constraint_For_Value()", span="6-6"];
m16_10 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", span="29-29"];
m16_11 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="NumberToWordsTests.cs", label="var fakeOptions = new Simple_Options()", span="32-32"];
m16_12 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="NumberToWordsTests.cs", label="var expectedResult = new NotParsed<Simple_Options>(\r\n                TypeInfo.Create(typeof(Simple_Options)), new Error[] { new HelpRequestedError() })", span="33-34"];
m16_13 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="NumberToWordsTests.cs", label="var result = InvokeBuild<Simple_Options>(\r\n                new[] { ''--help'' })", span="37-38"];
m16_14 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="NumberToWordsTests.cs", label="result.ShouldBeEquivalentTo(expectedResult)", span="41-41"];
m16_15 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="NumberToWordsTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", span="29-29"];
m16_73 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="NumberToWordsTests.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m16_121 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", span="313-313"];
m16_122 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="NumberToWordsTests.cs", label="var expectedResult = new[] { new BadFormatConversionError(new NameInfo('''', ''colors'')) }", span="316-316"];
m16_123 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="NumberToWordsTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<Simple_Options_With_Enum>>(() => new Simple_Options_With_Enum()),\r\n                new[] { ''--colors'', ''Yellow'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="319-324"];
m16_124 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="NumberToWordsTests.cs", label="((NotParsed<Simple_Options_With_Enum>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="327-327"];
m16_125 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="NumberToWordsTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", span="313-313"];
m16_9 [cluster="T.cstr", file="NumberToWordsTests.cs", label="Entry T.cstr", span=""];
m16_154 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", span="407-407"];
m16_155 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="NumberToWordsTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<Options_With_Sequence_Having_Separator_Set>>(() => new Options_With_Sequence_Having_Separator_Set()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="412-417"];
m16_156 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="NumberToWordsTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<Options_With_Sequence_Having_Separator_Set>)result).Value.LongSequence)", span="420-420"];
m16_157 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="NumberToWordsTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", span="407-407"];
m16_82 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="NumberToWordsTests.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="360-360"];
m16_0 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.InvokeBuild<T>(string[])", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.InvokeBuild<T>(string[])", span="17-17"];
m16_1 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.InvokeBuild<T>(string[])", file="NumberToWordsTests.cs", label="return InstanceBuilder.Build(\r\n                Maybe.Just<Func<T>>(() => new T()),\r\n                args,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>());", span="20-25"];
m16_2 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.InvokeBuild<T>(string[])", file="NumberToWordsTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.InvokeBuild<T>(string[])", span="17-17"];
m16_111 [cluster="CommandLine.Tests.Fakes.Simple_Options_With_Enum.Simple_Options_With_Enum()", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Fakes.Simple_Options_With_Enum.Simple_Options_With_Enum()", span="11-11"];
m16_227 [cluster="CommandLine.Tests.Fakes.Options_With_Required_Set_To_True.Options_With_Required_Set_To_True()", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Fakes.Options_With_Required_Set_To_True.Options_With_Required_Set_To_True()", span="4-4"];
m16_161 [cluster="CommandLine.Tests.Fakes.Options_With_Sequence_Having_Separator_Set.Options_With_Sequence_Having_Separator_Set()", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Fakes.Options_With_Sequence_Having_Separator_Set.Options_With_Sequence_Having_Separator_Set()", span="6-6"];
m16_66 [cluster="CommandLine.Tests.Fakes.Options_With_Sequence_And_Only_Max_Constraint.Options_With_Sequence_And_Only_Max_Constraint()", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Fakes.Options_With_Sequence_And_Only_Max_Constraint.Options_With_Sequence_And_Only_Max_Constraint()", span="6-6"];
m16_129 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", span="333-333"];
m16_130 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="NumberToWordsTests.cs", label="var expectedResult = new[] { new BadFormatConversionError(new NameInfo('''', ''colors'')) }", span="336-336"];
m16_131 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="NumberToWordsTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<Simple_Options_With_Enum>>(() => new Simple_Options_With_Enum()),\r\n                new[] { ''--colors'', ''RED'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="339-344"];
m16_132 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="NumberToWordsTests.cs", label="((NotParsed<Simple_Options_With_Enum>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="347-347"];
m16_133 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="NumberToWordsTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", span="333-333"];
m16_182 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="NumberToWordsTests.cs", label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", span="44-44"];
m16_153 [cluster="CommandLine.Tests.Fakes.Options_With_Sequence_Without_Range_For_Value.Options_With_Sequence_Without_Range_For_Value()", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Fakes.Options_With_Sequence_Without_Range_For_Value.Options_With_Sequence_Without_Range_For_Value()", span="6-6"];
m16_5 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="NumberToWordsTests.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="14-14"];
m16_210 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", span="526-526"];
m16_211 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="NumberToWordsTests.cs", label="var expectedResult = new[]\r\n            {\r\n                new MissingRequiredOptionError(new NameInfo('''', ''ftpurl'')),\r\n                new MissingRequiredOptionError(new NameInfo('''', ''weburl''))\r\n            }", span="528-532"];
m16_212 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="NumberToWordsTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<Options_With_Required_Set_To_True_Within_Same_Set>>(() => new Options_With_Required_Set_To_True_Within_Same_Set()),\r\n                new[] {''''},\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="534-539"];
m16_213 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="NumberToWordsTests.cs", label="((NotParsed<Options_With_Required_Set_To_True_Within_Same_Set>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="542-542"];
m16_214 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="NumberToWordsTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", span="526-526"];
m16_87 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", span="228-228"];
m16_88 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="NumberToWordsTests.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(new NameInfo(''s'', ''string-seq'')) }", span="231-231"];
m16_89 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="NumberToWordsTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<Options_With_Sequence_And_Only_Max_Constraint>>(() => new Options_With_Sequence_And_Only_Max_Constraint()),\r\n                new[] { ''--string-seq=one'', ''two'', ''three'', ''this-is-too-much'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="234-239"];
m16_90 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="NumberToWordsTests.cs", label="((NotParsed<Options_With_Sequence_And_Only_Max_Constraint>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="242-242"];
m16_91 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="NumberToWordsTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", span="228-228"];
m16_3 [cluster="CSharpx.Maybe.Just<T>(T)", file="NumberToWordsTests.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124"];
m16_86 [cluster="CommandLine.Tests.Fakes.Options_With_Sequence_And_Only_Min_Constraint_For_Value.Options_With_Sequence_And_Only_Min_Constraint_For_Value()", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Fakes.Options_With_Sequence_And_Only_Min_Constraint_For_Value.Options_With_Sequence_And_Only_Min_Constraint_For_Value()", span="6-6"];
m16_146 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", span="384-384"];
m16_147 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="NumberToWordsTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<Options_With_Sequence_Without_Range_For_Value>>(() => new Options_With_Sequence_Without_Range_For_Value()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="389-394"];
m16_148 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="NumberToWordsTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<Options_With_Sequence_Without_Range_For_Value>)result).Value.LongSequence)", span="397-397"];
m16_149 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="NumberToWordsTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", span="384-384"];
m16_162 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", span="430-430"];
m16_163 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="NumberToWordsTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<Options_With_Sequence_Having_Separator_Set>>(() => new Options_With_Sequence_Having_Separator_Set()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="435-440"];
m16_164 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="NumberToWordsTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<Options_With_Sequence_Having_Separator_Set>)result).Value.StringSequence)", span="443-443"];
m16_165 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="NumberToWordsTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", span="430-430"];
m16_169 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="452-452"];
m16_170 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="NumberToWordsTests.cs", label="var expectedResult = new Simple_Options_With_Values\r\n                {\r\n                    StringValue = ''str1'',\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''-a'', ''--bee'', ''-c'' },\r\n                    IntValue = 20\r\n                }", span="455-461"];
m16_171 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="NumberToWordsTests.cs", label="var arguments = new[] { ''--stringvalue'', ''str1'', ''--'', ''10'', ''-a'', ''--bee'', ''-c'', ''20'' }", span="462-462"];
m16_172 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="NumberToWordsTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<Simple_Options_With_Values>>(() => new Simple_Options_With_Values()),\r\n                (a, optionSpecs) =>\r\n                    Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="465-473"];
m16_173 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="NumberToWordsTests.cs", label="expectedResult.ShouldBeEquivalentTo(((Parsed<Simple_Options_With_Values>)result).Value)", span="476-476"];
m16_174 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="NumberToWordsTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="452-452"];
m16_219 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="548-548"];
m16_220 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="NumberToWordsTests.cs", label="var expectedResult = new[] { new MissingRequiredOptionError(new NameInfo('''', ''str'')) }", span="551-551"];
m16_221 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="NumberToWordsTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<Options_With_Required_Set_To_True>>(() => new Options_With_Required_Set_To_True()),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="554-559"];
m16_222 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="NumberToWordsTests.cs", label="((NotParsed<Options_With_Required_Set_To_True>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="562-562"];
m16_223 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="NumberToWordsTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="548-548"];
m16_28 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", span="74-74"];
m16_29 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="NumberToWordsTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<Simple_Options_With_Double_Value>>(() => new Simple_Options_With_Double_Value()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="79-84"];
m16_30 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="NumberToWordsTests.cs", label="((Parsed<Simple_Options_With_Double_Value>)result).Value.DoubleValue.ShouldBeEquivalentTo(expected)", span="87-87"];
m16_31 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="NumberToWordsTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", span="74-74"];
m16_72 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="NumberToWordsTests.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="294-294"];
m16_112 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", span="293-293"];
m16_113 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="NumberToWordsTests.cs", label="var expectedResult = new[] { new BadFormatConversionError(new NameInfo('''', ''colors'')) }", span="296-296"];
m16_114 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="NumberToWordsTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<Simple_Options_With_Enum>>(() => new Simple_Options_With_Enum()),\r\n                new[] { ''--colors'', ''3'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="299-304"];
m16_115 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="NumberToWordsTests.cs", label="((NotParsed<Simple_Options_With_Enum>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="307-307"];
m16_116 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="NumberToWordsTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", span="293-293"];
m16_215 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="NumberToWordsTests.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="316-316"];
m16_201 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", span="506-506"];
m16_202 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="NumberToWordsTests.cs", label="var expectedResult = new Options_With_Required_Set_To_True_Within_Same_Set {\r\n                FtpUrl = ''str1'',\r\n                WebUrl = ''str2''\r\n            }", span="508-511"];
m16_203 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="NumberToWordsTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<Options_With_Required_Set_To_True_Within_Same_Set>>(() => new Options_With_Required_Set_To_True_Within_Same_Set()),\r\n                new[] { ''--ftpurl'', ''str1'', ''--weburl'', ''str2'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="513-518"];
m16_204 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="NumberToWordsTests.cs", label="expectedResult.ShouldBeEquivalentTo(((Parsed<Options_With_Required_Set_To_True_Within_Same_Set>)result).Value)", span="521-521"];
m16_205 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="NumberToWordsTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", span="506-506"];
m16_190 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="NumberToWordsTests.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="18-18"];
m16_59 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", span="169-169"];
m16_60 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="NumberToWordsTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<Options_With_Sequence_And_Only_Max_Constraint>>(() => new Options_With_Sequence_And_Only_Max_Constraint()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="174-179"];
m16_61 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="NumberToWordsTests.cs", label="((Parsed<Options_With_Sequence_And_Only_Max_Constraint>)result).Value.StringSequence.ShouldBeEquivalentTo(expected)", span="182-182"];
m16_62 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="NumberToWordsTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", span="169-169"];
m16_17 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="NumberToWordsTests.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m16_16 [cluster="CommandLine.Tests.Fakes.Simple_Options.Simple_Options()", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Fakes.Simple_Options.Simple_Options()", span="6-6"];
m16_36 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", span="99-99"];
m16_37 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="NumberToWordsTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<Options_With_Sequence>>(() => new Options_With_Sequence()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="104-109"];
m16_38 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="NumberToWordsTests.cs", label="((Parsed<Options_With_Sequence>)result).Value.IntSequence.ShouldBeEquivalentTo(expected)", span="112-112"];
m16_39 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="NumberToWordsTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", span="99-99"];
m16_51 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", span="146-146"];
m16_52 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="NumberToWordsTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<Options_With_Sequence_And_Only_Min_Constraint>>(() => new Options_With_Sequence_And_Only_Min_Constraint()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="151-156"];
m16_53 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="NumberToWordsTests.cs", label="((Parsed<Options_With_Sequence_And_Only_Min_Constraint>)result).Value.StringSequence.ShouldBeEquivalentTo(expected)", span="159-159"];
m16_54 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="NumberToWordsTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", span="146-146"];
m16_95 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="248-248"];
m16_96 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="NumberToWordsTests.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(NameInfo.EmptyName) }", span="251-251"];
m16_97 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="NumberToWordsTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<Options_With_Sequence_And_Only_Max_Constraint_For_Value>>(() => new Options_With_Sequence_And_Only_Max_Constraint_For_Value()),\r\n                new[] { ''one'', ''two'', ''three'', ''this-is-too-much'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="254-259"];
m16_98 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="NumberToWordsTests.cs", label="((NotParsed<Options_With_Sequence_And_Only_Max_Constraint_For_Value>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="262-262"];
m16_99 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="NumberToWordsTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="248-248"];
m16_117 [cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", file="NumberToWordsTests.cs", label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="349-349"];
m16_43 [cluster="CommandLine.Tests.Fakes.Options_With_Sequence.Options_With_Sequence()", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Fakes.Options_With_Sequence.Options_With_Sequence()", span="6-6"];
m16_224 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Entry lambda expression", span="555-555"];
m16_6 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Entry lambda expression", span="21-21"];
m16_7 [cluster="lambda expression", file="NumberToWordsTests.cs", label="new T()", span="21-21"];
m16_8 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Exit lambda expression", span="21-21"];
m16_25 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Entry lambda expression", span="56-56"];
m16_26 [cluster="lambda expression", file="NumberToWordsTests.cs", label="new Simple_Options()", span="56-56"];
m16_27 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Exit lambda expression", span="56-56"];
m16_32 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Entry lambda expression", span="80-80"];
m16_33 [cluster="lambda expression", file="NumberToWordsTests.cs", label="new Simple_Options_With_Double_Value()", span="80-80"];
m16_34 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Exit lambda expression", span="80-80"];
m16_40 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Entry lambda expression", span="105-105"];
m16_41 [cluster="lambda expression", file="NumberToWordsTests.cs", label="new Options_With_Sequence()", span="105-105"];
m16_42 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Exit lambda expression", span="105-105"];
m16_48 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Entry lambda expression", span="128-128"];
m16_49 [cluster="lambda expression", file="NumberToWordsTests.cs", label="new Simple_Options()", span="128-128"];
m16_50 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Exit lambda expression", span="128-128"];
m16_55 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Entry lambda expression", span="152-152"];
m16_56 [cluster="lambda expression", file="NumberToWordsTests.cs", label="new Options_With_Sequence_And_Only_Min_Constraint()", span="152-152"];
m16_57 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Exit lambda expression", span="152-152"];
m16_63 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Entry lambda expression", span="175-175"];
m16_64 [cluster="lambda expression", file="NumberToWordsTests.cs", label="new Options_With_Sequence_And_Only_Max_Constraint()", span="175-175"];
m16_65 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Exit lambda expression", span="175-175"];
m16_74 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Entry lambda expression", span="195-195"];
m16_75 [cluster="lambda expression", file="NumberToWordsTests.cs", label="new Options_With_Sequence_And_Only_Min_Constraint()", span="195-195"];
m16_76 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Exit lambda expression", span="195-195"];
m16_83 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Entry lambda expression", span="215-215"];
m16_84 [cluster="lambda expression", file="NumberToWordsTests.cs", label="new Options_With_Sequence_And_Only_Min_Constraint_For_Value()", span="215-215"];
m16_85 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Exit lambda expression", span="215-215"];
m16_92 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Entry lambda expression", span="235-235"];
m16_93 [cluster="lambda expression", file="NumberToWordsTests.cs", label="new Options_With_Sequence_And_Only_Max_Constraint()", span="235-235"];
m16_94 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Exit lambda expression", span="235-235"];
m16_100 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Entry lambda expression", span="255-255"];
m16_101 [cluster="lambda expression", file="NumberToWordsTests.cs", label="new Options_With_Sequence_And_Only_Max_Constraint_For_Value()", span="255-255"];
m16_102 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Exit lambda expression", span="255-255"];
m16_108 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Entry lambda expression", span="280-280"];
m16_109 [cluster="lambda expression", file="NumberToWordsTests.cs", label="new Simple_Options_With_Enum()", span="280-280"];
m16_110 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Exit lambda expression", span="280-280"];
m16_118 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Entry lambda expression", span="300-300"];
m16_119 [cluster="lambda expression", file="NumberToWordsTests.cs", label="new Simple_Options_With_Enum()", span="300-300"];
m16_120 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Exit lambda expression", span="300-300"];
m16_126 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Entry lambda expression", span="320-320"];
m16_127 [cluster="lambda expression", file="NumberToWordsTests.cs", label="new Simple_Options_With_Enum()", span="320-320"];
m16_128 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Exit lambda expression", span="320-320"];
m16_134 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Entry lambda expression", span="340-340"];
m16_135 [cluster="lambda expression", file="NumberToWordsTests.cs", label="new Simple_Options_With_Enum()", span="340-340"];
m16_136 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Exit lambda expression", span="340-340"];
m16_143 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Entry lambda expression", span="366-366"];
m16_144 [cluster="lambda expression", file="NumberToWordsTests.cs", label="new Simple_Options_With_Values()", span="366-366"];
m16_145 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Exit lambda expression", span="366-366"];
m16_150 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Entry lambda expression", span="390-390"];
m16_151 [cluster="lambda expression", file="NumberToWordsTests.cs", label="new Options_With_Sequence_Without_Range_For_Value()", span="390-390"];
m16_152 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Exit lambda expression", span="390-390"];
m16_158 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Entry lambda expression", span="413-413"];
m16_159 [cluster="lambda expression", file="NumberToWordsTests.cs", label="new Options_With_Sequence_Having_Separator_Set()", span="413-413"];
m16_160 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Exit lambda expression", span="413-413"];
m16_166 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Entry lambda expression", span="436-436"];
m16_167 [cluster="lambda expression", file="NumberToWordsTests.cs", label="new Options_With_Sequence_Having_Separator_Set()", span="436-436"];
m16_168 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Exit lambda expression", span="436-436"];
m16_176 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Entry lambda expression", span="466-466"];
m16_177 [cluster="lambda expression", file="NumberToWordsTests.cs", label="new Simple_Options_With_Values()", span="466-466"];
m16_178 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Exit lambda expression", span="466-466"];
m16_179 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Entry lambda expression", span="467-469"];
m16_180 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)))", span="468-469"];
m16_181 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Exit lambda expression", span="467-469"];
m16_183 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Entry lambda expression", span="469-469"];
m16_184 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))", span="469-469"];
m16_185 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Exit lambda expression", span="469-469"];
m16_187 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Entry lambda expression", span="469-469"];
m16_188 [cluster="lambda expression", file="NumberToWordsTests.cs", label="NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)", span="469-469"];
m16_189 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Exit lambda expression", span="469-469"];
m16_197 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Entry lambda expression", span="493-493"];
m16_198 [cluster="lambda expression", file="NumberToWordsTests.cs", label="new Options_With_Two_Sets()", span="493-493"];
m16_199 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Exit lambda expression", span="493-493"];
m16_207 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Entry lambda expression", span="514-514"];
m16_208 [cluster="lambda expression", file="NumberToWordsTests.cs", label="new Options_With_Required_Set_To_True_Within_Same_Set()", span="514-514"];
m16_209 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Exit lambda expression", span="514-514"];
m16_216 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Entry lambda expression", span="535-535"];
m16_217 [cluster="lambda expression", file="NumberToWordsTests.cs", label="new Options_With_Required_Set_To_True_Within_Same_Set()", span="535-535"];
m16_218 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Exit lambda expression", span="535-535"];
m16_225 [cluster="lambda expression", file="NumberToWordsTests.cs", label="new Options_With_Required_Set_To_True()", span="555-555"];
m16_226 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Exit lambda expression", span="555-555"];
m16_186 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>)", file="NumberToWordsTests.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>)", span="13-13"];
m16_206 [cluster="CommandLine.Tests.Fakes.Options_With_Required_Set_To_True_Within_Same_Set.Options_With_Required_Set_To_True_Within_Same_Set()", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Fakes.Options_With_Required_Set_To_True_Within_Same_Set.Options_With_Required_Set_To_True_Within_Same_Set()", span="4-4"];
m16_67 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", span="188-188"];
m16_68 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="NumberToWordsTests.cs", label="var expectedResult = new[] { new MissingValueOptionError(new NameInfo(''s'', ''string-seq'')) }", span="191-191"];
m16_69 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="NumberToWordsTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<Options_With_Sequence_And_Only_Min_Constraint>>(() => new Options_With_Sequence_And_Only_Min_Constraint()),\r\n                new[] { ''-s'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="194-199"];
m16_70 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="NumberToWordsTests.cs", label="((NotParsed<Options_With_Sequence_And_Only_Min_Constraint>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="202-202"];
m16_71 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="NumberToWordsTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", span="188-188"];
m16_104 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", span="274-274"];
m16_105 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="NumberToWordsTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<Simple_Options_With_Enum>>(() => new Simple_Options_With_Enum()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="279-284"];
m16_106 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="NumberToWordsTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<Simple_Options_With_Enum>)result).Value.Colors)", span="287-287"];
m16_107 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="NumberToWordsTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", span="274-274"];
m16_44 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", span="122-122"];
m16_45 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="NumberToWordsTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<Simple_Options>>(() => new Simple_Options()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="127-132"];
m16_46 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="NumberToWordsTests.cs", label="((Parsed<Simple_Options>)result).Value.IntSequence.ShouldBeEquivalentTo(expected)", span="135-135"];
m16_47 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="NumberToWordsTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", span="122-122"];
m16_19 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="NumberToWordsTests.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="393-393"];
m16_20 [cluster="Unk.ShouldBeEquivalentTo", file="NumberToWordsTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m16_175 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="NumberToWordsTests.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="37-37"];
m16_58 [cluster="CommandLine.Tests.Fakes.Options_With_Sequence_And_Only_Min_Constraint.Options_With_Sequence_And_Only_Min_Constraint()", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Fakes.Options_With_Sequence_And_Only_Min_Constraint.Options_With_Sequence_And_Only_Min_Constraint()", span="6-6"];
m16_21 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", span="50-50"];
m16_22 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="NumberToWordsTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<Simple_Options>>(() => new Simple_Options()),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="55-60"];
m16_23 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="NumberToWordsTests.cs", label="((Parsed<Simple_Options>)result).Value.LongValue.ShouldBeEquivalentTo(expected)", span="63-63"];
m16_24 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="NumberToWordsTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", span="50-50"];
m16_137 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="353-353"];
m16_138 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="NumberToWordsTests.cs", label="var expectedResult = new Simple_Options_With_Values\r\n                {\r\n                    StringValue = string.Empty,\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''a'', ''b'', ''c'' },\r\n                    IntValue = 20\r\n                }", span="356-362"];
m16_139 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="NumberToWordsTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<Simple_Options_With_Values>>(() => new Simple_Options_With_Values()),\r\n                new[] { ''10'', ''a'', ''b'', ''c'', ''20'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="365-370"];
m16_140 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="NumberToWordsTests.cs", label="expectedResult.ShouldBeEquivalentTo(((Parsed<Simple_Options_With_Values>)result).Value)", span="373-373"];
m16_141 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="NumberToWordsTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="353-353"];
m16_191 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="482-482"];
m16_192 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="NumberToWordsTests.cs", label="var expectedResult = new[]\r\n                {\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''weburl''), string.Empty),\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''ftpurl''), string.Empty)\r\n                }", span="485-489"];
m16_193 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="NumberToWordsTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<Options_With_Two_Sets>>(() => new Options_With_Two_Sets()),\r\n                new[] { ''--weburl'', ''http://mywebsite.org/'', ''--ftpurl'', ''fpt://ftpsite.org/'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="492-497"];
m16_194 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="NumberToWordsTests.cs", label="((NotParsed<Options_With_Two_Sets>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="500-500"];
m16_195 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="NumberToWordsTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="482-482"];
m16_142 [cluster="CommandLine.Tests.Fakes.Simple_Options_With_Values.Simple_Options_With_Values()", file="NumberToWordsTests.cs", label="Entry CommandLine.Tests.Fakes.Simple_Options_With_Values.Simple_Options_With_Values()", span="6-6"];
m16_4 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="NumberToWordsTests.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m17_4 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string)", file="PolishNumberToWordsConverter.cs", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(char, string)", span="55-55"];
m17_5 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string)", file="PolishNumberToWordsConverter.cs", label="Separator = ':'", span="58-58"];
m17_6 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string)", file="PolishNumberToWordsConverter.cs", label="Exit CommandLine.OptionListAttribute.OptionListAttribute(char, string)", span="55-55"];
m17_7 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string, char)", file="PolishNumberToWordsConverter.cs", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(char, string, char)", span="67-67"];
m17_8 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string, char)", file="PolishNumberToWordsConverter.cs", label="Separator = separator", span="70-70"];
m17_9 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string, char)", file="PolishNumberToWordsConverter.cs", label="Exit CommandLine.OptionListAttribute.OptionListAttribute(char, string, char)", span="67-67"];
m17_0 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(char)", file="PolishNumberToWordsConverter.cs", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(char)", span="42-42"];
m17_1 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(char)", file="PolishNumberToWordsConverter.cs", label="Exit CommandLine.OptionListAttribute.OptionListAttribute(char)", span="42-42"];
m17_2 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string)", file="PolishNumberToWordsConverter.cs", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string)", span="48-48"];
m17_3 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string)", file="PolishNumberToWordsConverter.cs", label="Exit CommandLine.OptionListAttribute.OptionListAttribute(string)", span="48-48"];
m17_10 [file="PolishNumberToWordsConverter.cs", label="CommandLine.OptionListAttribute", span=""];
m21_0 [cluster="Humanizer.DateTimeHumanizeStrategy.IDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", file="RussianGrammaticalNumberDetector.cs", label="Entry Humanizer.DateTimeHumanizeStrategy.IDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", span="13-13"];
m21_1 [cluster="Humanizer.DateTimeHumanizeStrategy.IDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", file="RussianGrammaticalNumberDetector.cs", label="Exit Humanizer.DateTimeHumanizeStrategy.IDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", span="13-13"];
m25_0 [cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", file="ToQuantityExtensions.cs", label="Entry Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", span="25-25"];
m25_1 [cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", color=green, community=0, file="ToQuantityExtensions.cs", label="0: var transformedInput = quantity == 1\r\n                ? input.Singularize(Plurality.CouldBeEither)\r\n                : input.Pluralize(Plurality.CouldBeEither)", span="27-29"];
m25_2 [cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", file="ToQuantityExtensions.cs", label="showQuantityAs == ShowQuantityAs.None", span="31-31"];
m25_13 [cluster="Humanizer.Configuration.DefaultFormatter.DateHumanize__seconds_ago(int)", file="ToQuantityExtensions.cs", label="Entry Humanizer.Configuration.DefaultFormatter.DateHumanize__seconds_ago(int)", span="28-28"];
m25_14 [cluster="Humanizer.Configuration.DefaultFormatter.DateHumanize__seconds_ago(int)", file="ToQuantityExtensions.cs", label="return string.Format(Resources.DateHumanize__seconds_ago, numberOfSeconds);", span="30-30"];
m25_15 [cluster="Humanizer.Configuration.DefaultFormatter.DateHumanize__seconds_ago(int)", file="ToQuantityExtensions.cs", label="Exit Humanizer.Configuration.DefaultFormatter.DateHumanize__seconds_ago(int)", span="28-28"];
m25_7 [cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", file="ToQuantityExtensions.cs", label="Exit Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", span="25-25"];
m25_8 [cluster="string.Singularize(Humanizer.Plurality)", color=green, community=0, file="ToQuantityExtensions.cs", label="0: Entry string.Singularize(Humanizer.Plurality)", span="194-194"];
m25_9 [cluster="string.Pluralize(Humanizer.Plurality)", file="ToQuantityExtensions.cs", label="Entry string.Pluralize(Humanizer.Plurality)", span="170-170"];
m25_4 [cluster="Humanizer.Configuration.DefaultFormatter.DateHumanize__hours_ago(int)", file="ToQuantityExtensions.cs", label="Entry Humanizer.Configuration.DefaultFormatter.DateHumanize__hours_ago(int)", span="13-13"];
m25_5 [cluster="Humanizer.Configuration.DefaultFormatter.DateHumanize__hours_ago(int)", color=green, community=0, file="ToQuantityExtensions.cs", label="0: return string.Format(Resources.DateHumanize__hours_ago, numberOfHours);", span="15-15"];
m25_6 [cluster="Humanizer.Configuration.DefaultFormatter.DateHumanize__hours_ago(int)", file="ToQuantityExtensions.cs", label="Exit Humanizer.Configuration.DefaultFormatter.DateHumanize__hours_ago(int)", span="13-13"];
m25_3 [cluster="string.Format(string, object)", file="ToQuantityExtensions.cs", label="Entry string.Format(string, object)", span="0-0"];
m25_10 [cluster="Humanizer.Configuration.DefaultFormatter.DateHumanize__months_ago(int)", file="ToQuantityExtensions.cs", label="Entry Humanizer.Configuration.DefaultFormatter.DateHumanize__months_ago(int)", span="23-23"];
m25_48 [cluster="Humanizer.Configuration.RomanianFormatter.DateHumanize__minutes_ago(int)", file="ToQuantityExtensions.cs", label="Entry Humanizer.Configuration.RomanianFormatter.DateHumanize__minutes_ago(int)", span="89-89"];
m25_52 [cluster="Humanizer.Configuration.RomanianFormatter.DateHumanize__minutes_ago(int)", file="ToQuantityExtensions.cs", label="return string.Format(''acum {0} de minute'', number);", span="98-98"];
m25_51 [cluster="Humanizer.Configuration.RomanianFormatter.DateHumanize__minutes_ago(int)", file="ToQuantityExtensions.cs", label="return base.DateHumanize__minutes_ago(number);", span="95-95"];
m25_50 [cluster="Humanizer.Configuration.RomanianFormatter.DateHumanize__minutes_ago(int)", file="ToQuantityExtensions.cs", label="0 < number % 100 && number % 100 < 20", span="93-93"];
m25_49 [cluster="Humanizer.Configuration.RomanianFormatter.DateHumanize__minutes_ago(int)", file="ToQuantityExtensions.cs", label="Debug.Assert(number > 1)", span="91-91"];
m25_53 [cluster="Humanizer.Configuration.RomanianFormatter.DateHumanize__minutes_ago(int)", file="ToQuantityExtensions.cs", label="Exit Humanizer.Configuration.RomanianFormatter.DateHumanize__minutes_ago(int)", span="89-89"];
m25_47 [cluster="System.Diagnostics.Debug.Assert(bool)", file="ToQuantityExtensions.cs", label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0"];
m25_11 [cluster="int.ToWords()", file="ToQuantityExtensions.cs", label="Entry int.ToWords()", span="25-25"];
m25_12 [cluster="Humanizer.Configuration.DefaultFormatter.DateHumanize__months_ago(int)", file="ToQuantityExtensions.cs", label="Exit Humanizer.Configuration.DefaultFormatter.DateHumanize__months_ago(int)", span="23-23"];
m25_40 [cluster="Humanizer.Configuration.RomanianFormatter.DateHumanize__hours_ago(int)", file="ToQuantityExtensions.cs", label="Entry Humanizer.Configuration.RomanianFormatter.DateHumanize__hours_ago(int)", span="76-76"];
m25_45 [cluster="Humanizer.Configuration.RomanianFormatter.DateHumanize__hours_ago(int)", file="ToQuantityExtensions.cs", label="return string.Format(''acum {0} de ore'', numberOfHours);", span="86-86"];
m25_44 [cluster="Humanizer.Configuration.RomanianFormatter.DateHumanize__hours_ago(int)", file="ToQuantityExtensions.cs", label="return base.DateHumanize__hours_ago(numberOfHours);", span="83-83"];
m25_41 [cluster="Humanizer.Configuration.RomanianFormatter.DateHumanize__hours_ago(int)", file="ToQuantityExtensions.cs", label="var numberOfHours = number", span="78-78"];
m25_43 [cluster="Humanizer.Configuration.RomanianFormatter.DateHumanize__hours_ago(int)", file="ToQuantityExtensions.cs", label="0 < numberOfHours%100 && numberOfHours%100 < 20", span="81-81"];
m25_42 [cluster="Humanizer.Configuration.RomanianFormatter.DateHumanize__hours_ago(int)", file="ToQuantityExtensions.cs", label="Debug.Assert(numberOfHours > 1)", span="79-79"];
m25_46 [cluster="Humanizer.Configuration.RomanianFormatter.DateHumanize__hours_ago(int)", file="ToQuantityExtensions.cs", label="Exit Humanizer.Configuration.RomanianFormatter.DateHumanize__hours_ago(int)", span="76-76"];
m25_16 [cluster="Humanizer.Configuration.DefaultFormatter.DateHumanize__years_ago(int)", file="ToQuantityExtensions.cs", label="Entry Humanizer.Configuration.DefaultFormatter.DateHumanize__years_ago(int)", span="33-33"];
m25_17 [cluster="Humanizer.Configuration.DefaultFormatter.DateHumanize__years_ago(int)", file="ToQuantityExtensions.cs", label="return string.Format(Resources.DateHumanize__years_ago, numberOfYears);", span="35-35"];
m25_18 [cluster="Humanizer.Configuration.DefaultFormatter.DateHumanize__years_ago(int)", file="ToQuantityExtensions.cs", label="Exit Humanizer.Configuration.DefaultFormatter.DateHumanize__years_ago(int)", span="33-33"];
m25_54 [file="ToQuantityExtensions.cs", label="Humanizer.Configuration.RomanianFormatter", span=""];
m26_11 [cluster="Humanizer.Localisation.ArabicFormatter.ArabicFormatter()", file="ToQuantityTests.cs", label="Entry Humanizer.Localisation.ArabicFormatter.ArabicFormatter()", span="2-2"];
m26_3 [cluster="Humanizer.Localisation.RomanianFormatter.RomanianFormatter()", file="ToQuantityTests.cs", label="Entry Humanizer.Localisation.RomanianFormatter.RomanianFormatter()", span="2-2"];
m26_7 [cluster="Humanizer.Localisation.RussianFormatter.RussianFormatter()", file="ToQuantityTests.cs", label="Entry Humanizer.Localisation.RussianFormatter.RussianFormatter()", span="2-2"];
m26_19 [cluster="lambda expression", file="ToQuantityTests.cs", label="Entry lambda expression", span="20-20"];
m26_0 [cluster="lambda expression", file="ToQuantityTests.cs", label="Entry lambda expression", span="15-15"];
m26_1 [cluster="lambda expression", file="ToQuantityTests.cs", label="new RomanianFormatter()", span="15-15"];
m26_2 [cluster="lambda expression", file="ToQuantityTests.cs", label="Exit lambda expression", span="15-15"];
m26_4 [cluster="lambda expression", file="ToQuantityTests.cs", label="Entry lambda expression", span="16-16"];
m26_5 [cluster="lambda expression", file="ToQuantityTests.cs", label="new RussianFormatter()", span="16-16"];
m26_6 [cluster="lambda expression", file="ToQuantityTests.cs", label="Exit lambda expression", span="16-16"];
m26_8 [cluster="lambda expression", file="ToQuantityTests.cs", label="Entry lambda expression", span="17-17"];
m26_9 [cluster="lambda expression", file="ToQuantityTests.cs", label="new ArabicFormatter()", span="17-17"];
m26_10 [cluster="lambda expression", file="ToQuantityTests.cs", label="Exit lambda expression", span="17-17"];
m26_12 [cluster="lambda expression", file="ToQuantityTests.cs", label="Entry lambda expression", span="18-18"];
m26_13 [cluster="lambda expression", file="ToQuantityTests.cs", label="new CzechSlovakPolishFormatter()", span="18-18"];
m26_14 [cluster="lambda expression", file="ToQuantityTests.cs", label="Exit lambda expression", span="18-18"];
m26_16 [cluster="lambda expression", file="ToQuantityTests.cs", label="Entry lambda expression", span="19-19"];
m26_17 [cluster="lambda expression", file="ToQuantityTests.cs", label="new CzechSlovakPolishFormatter()", span="19-19"];
m26_18 [cluster="lambda expression", file="ToQuantityTests.cs", label="Exit lambda expression", span="19-19"];
m26_20 [cluster="lambda expression", file="ToQuantityTests.cs", label="new CzechSlovakPolishFormatter()", span="20-20"];
m26_21 [cluster="lambda expression", file="ToQuantityTests.cs", label="Exit lambda expression", span="20-20"];
m26_15 [cluster="Humanizer.Localisation.CzechSlovakPolishFormatter.CzechSlovakPolishFormatter()", file="ToQuantityTests.cs", label="Entry Humanizer.Localisation.CzechSlovakPolishFormatter.CzechSlovakPolishFormatter()", span="2-2"];
n10 -> n1  [color=darkseagreen4, key=1, label="Humanizer.Tests.AmbientCulture", style=dashed];
n10 -> n8  [color=darkseagreen4, key=1, label="Humanizer.Tests.AmbientCulture", style=dashed];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
n0 -> n3  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
n1 -> n2  [key=0, style=solid];
n2 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n4 -> n0  [color=blue, key=0, style=bold];
n5 -> n6  [key=0, style=solid];
n6 -> n5  [color=blue, key=0, style=bold];
n7 -> n8  [key=0, style=solid];
n8 -> n9  [key=0, style=solid];
n9 -> n7  [color=blue, key=0, style=bold];
m1_107 -> m1_108  [key=0, style=solid];
m1_108 -> m1_109  [key=0, style=solid];
m1_108 -> m1_0  [key=2, style=dotted];
m1_108 -> m1_108  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_109 -> m1_107  [color=blue, key=0, style=bold];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_64  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_60 -> m1_65  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_60 -> m1_62  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m1_60 -> m1_69  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_63  [key=0, style=solid];
m1_64 -> m1_65  [key=0, style=solid];
m1_64 -> m1_66  [key=0, style=solid];
m1_65 -> m1_67  [key=0, style=solid];
m1_62 -> m1_68  [key=0, style=solid];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_67  [color=darkseagreen4, key=1, label=other, style=dashed];
m1_67 -> m1_68  [key=0, style=solid];
m1_67 -> m1_69  [key=2, style=dotted];
m1_67 -> m1_191  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_66 -> m1_68  [key=0, style=solid];
m1_68 -> m1_60  [color=blue, key=0, style=bold];
m1_83 -> m1_84  [key=0, style=solid];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_0  [key=2, style=dotted];
m1_84 -> m1_196  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_85 -> m1_83  [color=blue, key=0, style=bold];
m1_119 -> m1_120  [key=0, style=solid];
m1_120 -> m1_121  [key=0, style=solid];
m1_120 -> m1_120  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_121 -> m1_119  [color=blue, key=0, style=bold];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_151  [color=darkorchid, key=3, label="Parameter variable long value", style=bold];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_0  [key=2, style=dotted];
m1_11 -> m1_9  [color=blue, key=0, style=bold];
m1_125 -> m1_126  [key=0, style=solid];
m1_126 -> m1_127  [key=0, style=solid];
m1_126 -> m1_126  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_127 -> m1_125  [color=blue, key=0, style=bold];
m1_122 -> m1_123  [key=0, style=solid];
m1_123 -> m1_124  [key=0, style=solid];
m1_123 -> m1_123  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_124 -> m1_122  [color=blue, key=0, style=bold];
m1_27 -> m1_28  [key=0, style=solid];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_30  [key=2, style=dotted];
m1_28 -> m1_188  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_29 -> m1_27  [color=blue, key=0, style=bold];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_104  [color=darkorchid, key=3, label="method methodReturn Humanizer.Bytes.ByteSize AddBytes", style=bold];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_12  [key=2, style=dotted];
m1_88 -> m1_86  [color=blue, key=0, style=bold];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_104  [color=darkorchid, key=3, label="method methodReturn Humanizer.Bytes.ByteSize AddMegabytes", style=bold];
m1_93 -> m1_94  [key=0, style=solid];
m1_93 -> m1_18  [key=2, style=dotted];
m1_94 -> m1_92  [color=blue, key=0, style=bold];
m1_80 -> m1_81  [key=0, style=solid];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_0  [key=2, style=dotted];
m1_81 -> m1_195  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_81 -> m1_81  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_82 -> m1_80  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_2  [color=darkseagreen4, key=1, label=double, style=dashed];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label=double, style=dashed];
m1_0 -> m1_4  [color=darkseagreen4, key=1, label=double, style=dashed];
m1_0 -> m1_5  [color=darkseagreen4, key=1, label=double, style=dashed];
m1_0 -> m1_6  [color=darkseagreen4, key=1, label=double, style=dashed];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_8  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_6 -> m1_7  [key=0, style=solid];
m1_7 -> m1_0  [color=blue, key=0, style=bold];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_92  [color=darkorchid, key=3, label="Parameter variable double value", style=bold];
m1_18 -> m1_151  [color=darkorchid, key=3, label="Parameter variable double value", style=bold];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_0  [key=2, style=dotted];
m1_20 -> m1_18  [color=blue, key=0, style=bold];
m1_134 -> m1_135  [key=0, style=solid];
m1_134 -> m1_138  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_134 -> m1_62  [color=darkorchid, key=3, label="method methodReturn bool TryParse", style=bold];
m1_134 -> m1_169  [color=darkorchid, key=3, label="method methodReturn bool TryParse", style=bold];
m1_134 -> m1_9  [color=darkorchid, key=3, label="Parameter variable Humanizer.Bytes.ByteSize result", style=bold];
m1_134 -> m1_12  [color=darkorchid, key=3, label="Parameter variable Humanizer.Bytes.ByteSize result", style=bold];
m1_134 -> m1_15  [color=darkorchid, key=3, label="Parameter variable Humanizer.Bytes.ByteSize result", style=bold];
m1_134 -> m1_18  [color=darkorchid, key=3, label="Parameter variable Humanizer.Bytes.ByteSize result", style=bold];
m1_134 -> m1_21  [color=darkorchid, key=3, label="Parameter variable Humanizer.Bytes.ByteSize result", style=bold];
m1_134 -> m1_24  [color=darkorchid, key=3, label="Parameter variable Humanizer.Bytes.ByteSize result", style=bold];
m1_134 -> m1_181  [color=darkorchid, key=3, label="Parameter variable Humanizer.Bytes.ByteSize result", style=bold];
m1_134 -> m1_180  [color=darkorchid, key=3, label="Parameter variable string s", style=bold];
m1_135 -> m1_136  [key=0, style=solid];
m1_135 -> m1_137  [key=0, style=solid];
m1_135 -> m1_171  [key=2, style=dotted];
m1_138 -> m1_139  [key=0, style=solid];
m1_138 -> m1_174  [key=2, style=dotted];
m1_138 -> m1_138  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_138 -> m1_142  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_138 -> m1_143  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_138 -> m1_149  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_138 -> m1_150  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_136 -> m1_170  [key=0, style=solid];
m1_136 -> m1_172  [key=2, style=dotted];
m1_137 -> m1_138  [key=0, style=solid];
m1_137 -> m1_173  [key=2, style=dotted];
m1_139 -> m1_140  [key=0, style=solid];
m1_142 -> m1_143  [key=0, style=solid];
m1_142 -> m1_146  [key=0, style=solid];
m1_143 -> m1_144  [key=0, style=solid];
m1_143 -> m1_145  [key=0, style=solid];
m1_143 -> m1_175  [key=2, style=dotted];
m1_149 -> m1_150  [key=0, style=solid];
m1_149 -> m1_176  [key=2, style=dotted];
m1_149 -> m1_177  [key=2, style=dotted];
m1_149 -> m1_152  [color=darkseagreen4, key=1, label=numberPart, style=dashed];
m1_150 -> m1_151  [key=0, style=solid];
m1_150 -> m1_176  [key=2, style=dotted];
m1_150 -> m1_177  [key=2, style=dotted];
m1_150 -> m1_154  [color=darkseagreen4, key=1, label=sizePart, style=dashed];
m1_150 -> m1_156  [color=darkseagreen4, key=1, label=sizePart, style=dashed];
m1_140 -> m1_141  [key=0, style=solid];
m1_140 -> m1_146  [color=darkseagreen4, key=1, label=found, style=dashed];
m1_140 -> m1_62  [color=darkorchid, key=3, label="Local variable bool found", style=bold];
m1_141 -> m1_142  [key=0, style=solid];
m1_141 -> m1_143  [color=darkseagreen4, key=1, label=num, style=dashed];
m1_141 -> m1_145  [color=darkseagreen4, key=1, label=num, style=dashed];
m1_141 -> m1_148  [color=darkseagreen4, key=1, label=num, style=dashed];
m1_146 -> m1_147  [key=0, style=solid];
m1_146 -> m1_148  [key=0, style=solid];
m1_145 -> m1_142  [key=0, style=solid];
m1_145 -> m1_145  [color=darkseagreen4, key=1, label=num, style=dashed];
m1_145 -> m1_148  [color=darkseagreen4, key=1, label=num, style=dashed];
m1_148 -> m1_149  [key=0, style=solid];
m1_148 -> m1_150  [color=darkseagreen4, key=1, label=lastNumber, style=dashed];
m1_148 -> m1_139  [color=darkorchid, key=3, label="Local variable int lastNumber", style=bold];
m1_144 -> m1_146  [key=0, style=solid];
m1_147 -> m1_170  [key=0, style=solid];
m1_152 -> m1_153  [key=0, style=solid];
m1_152 -> m1_154  [key=0, style=solid];
m1_152 -> m1_178  [key=2, style=dotted];
m1_152 -> m1_157  [color=darkseagreen4, key=1, label=number, style=dashed];
m1_152 -> m1_159  [color=darkseagreen4, key=1, label=number, style=dashed];
m1_152 -> m1_160  [color=darkseagreen4, key=1, label=number, style=dashed];
m1_152 -> m1_162  [color=darkseagreen4, key=1, label=number, style=dashed];
m1_152 -> m1_164  [color=darkseagreen4, key=1, label=number, style=dashed];
m1_152 -> m1_166  [color=darkseagreen4, key=1, label=number, style=dashed];
m1_152 -> m1_168  [color=darkseagreen4, key=1, label=number, style=dashed];
m1_151 -> m1_152  [key=0, style=solid];
m1_154 -> m1_155  [key=0, style=solid];
m1_154 -> m1_161  [key=0, style=solid];
m1_154 -> m1_163  [key=0, style=solid];
m1_154 -> m1_165  [key=0, style=solid];
m1_154 -> m1_167  [key=0, style=solid];
m1_154 -> m1_179  [key=2, style=dotted];
m1_156 -> m1_157  [key=0, style=solid];
m1_156 -> m1_160  [key=0, style=solid];
m1_153 -> m1_170  [key=0, style=solid];
m1_157 -> m1_158  [key=0, style=solid];
m1_157 -> m1_159  [key=0, style=solid];
m1_159 -> m1_169  [key=0, style=solid];
m1_159 -> m1_9  [key=2, style=dotted];
m1_160 -> m1_169  [key=0, style=solid];
m1_160 -> m1_12  [key=2, style=dotted];
m1_162 -> m1_169  [key=0, style=solid];
m1_162 -> m1_15  [key=2, style=dotted];
m1_164 -> m1_169  [key=0, style=solid];
m1_164 -> m1_18  [key=2, style=dotted];
m1_166 -> m1_169  [key=0, style=solid];
m1_166 -> m1_21  [key=2, style=dotted];
m1_168 -> m1_169  [key=0, style=solid];
m1_168 -> m1_24  [key=2, style=dotted];
m1_168 -> m1_170  [color=darkseagreen4, key=1, label="out Humanizer.Bytes.ByteSize", style=dashed];
m1_155 -> m1_156  [key=0, style=solid];
m1_161 -> m1_162  [key=0, style=solid];
m1_163 -> m1_164  [key=0, style=solid];
m1_165 -> m1_166  [key=0, style=solid];
m1_167 -> m1_168  [key=0, style=solid];
m1_158 -> m1_170  [key=0, style=solid];
m1_169 -> m1_170  [key=0, style=solid];
m1_170 -> m1_134  [color=blue, key=0, style=bold];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_86  [color=darkorchid, key=3, label="Parameter variable double value", style=bold];
m1_12 -> m1_151  [color=darkorchid, key=3, label="Parameter variable double value", style=bold];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_0  [key=2, style=dotted];
m1_14 -> m1_12  [color=blue, key=0, style=bold];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_33  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_31 -> m1_34  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_31 -> m1_55  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_31 -> m1_35  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_31 -> m1_58  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_31 -> m1_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_31 -> m1_46  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_31 -> m1_48  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_34  [key=0, style=solid];
m1_32 -> m1_50  [key=2, style=dotted];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_33  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_33 -> m1_55  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_33 -> m1_35  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_33 -> m1_58  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_33 -> m1_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_33 -> m1_46  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_33 -> m1_48  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_55  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_34 -> m1_36  [color=darkseagreen4, key=1, label=has, style=dashed];
m1_34 -> m1_38  [color=darkseagreen4, key=1, label=has, style=dashed];
m1_34 -> m1_40  [color=darkseagreen4, key=1, label=has, style=dashed];
m1_34 -> m1_42  [color=darkseagreen4, key=1, label=has, style=dashed];
m1_34 -> m1_34  [color=darkorchid, key=3, label="Local variable System.Func<string, bool> has", style=bold];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_58  [color=darkseagreen4, key=1, label=double, style=dashed];
m1_35 -> m1_37  [color=darkseagreen4, key=1, label=output, style=dashed];
m1_35 -> m1_39  [color=darkseagreen4, key=1, label=output, style=dashed];
m1_35 -> m1_41  [color=darkseagreen4, key=1, label=output, style=dashed];
m1_35 -> m1_43  [color=darkseagreen4, key=1, label=output, style=dashed];
m1_35 -> m1_45  [color=darkseagreen4, key=1, label=output, style=dashed];
m1_35 -> m1_47  [color=darkseagreen4, key=1, label=output, style=dashed];
m1_35 -> m1_35  [color=darkorchid, key=3, label="Local variable System.Func<double, string> output", style=bold];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_46  [key=0, style=solid];
m1_44 -> m1_52  [key=2, style=dotted];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_48  [key=0, style=solid];
m1_46 -> m1_52  [key=2, style=dotted];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_53  [key=2, style=dotted];
m1_48 -> m1_30  [key=2, style=dotted];
m1_48 -> m1_189  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_38  [key=0, style=solid];
m1_36 -> m1_51  [key=2, style=dotted];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_40  [key=0, style=solid];
m1_38 -> m1_51  [key=2, style=dotted];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_42  [key=0, style=solid];
m1_40 -> m1_51  [key=2, style=dotted];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_44  [key=0, style=solid];
m1_42 -> m1_51  [key=2, style=dotted];
m1_37 -> m1_49  [key=0, style=solid];
m1_37 -> m1_51  [key=2, style=dotted];
m1_37 -> m1_189  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_39 -> m1_49  [key=0, style=solid];
m1_39 -> m1_51  [key=2, style=dotted];
m1_39 -> m1_189  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_41 -> m1_49  [key=0, style=solid];
m1_41 -> m1_51  [key=2, style=dotted];
m1_41 -> m1_189  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_43 -> m1_49  [key=0, style=solid];
m1_43 -> m1_51  [key=2, style=dotted];
m1_43 -> m1_189  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_45 -> m1_49  [key=0, style=solid];
m1_45 -> m1_51  [key=2, style=dotted];
m1_45 -> m1_189  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_47 -> m1_49  [key=0, style=solid];
m1_47 -> m1_51  [key=2, style=dotted];
m1_47 -> m1_189  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_49 -> m1_31  [color=blue, key=0, style=bold];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_63  [color=darkorchid, key=3, label="Parameter variable Humanizer.Bytes.ByteSize value", style=bold];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_192  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_70 -> m1_70  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_71 -> m1_69  [color=blue, key=0, style=bold];
m1_101 -> m1_102  [key=0, style=solid];
m1_102 -> m1_103  [key=0, style=solid];
m1_102 -> m1_0  [key=2, style=dotted];
m1_102 -> m1_197  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_102 -> m1_102  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_103 -> m1_101  [color=blue, key=0, style=bold];
m1_110 -> m1_111  [key=0, style=solid];
m1_111 -> m1_112  [key=0, style=solid];
m1_111 -> m1_0  [key=2, style=dotted];
m1_111 -> m1_111  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_112 -> m1_110  [color=blue, key=0, style=bold];
m1_95 -> m1_96  [key=0, style=solid];
m1_95 -> m1_104  [color=darkorchid, key=3, label="method methodReturn Humanizer.Bytes.ByteSize AddGigabytes", style=bold];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_21  [key=2, style=dotted];
m1_97 -> m1_95  [color=blue, key=0, style=bold];
m1_180 -> m1_181  [key=0, style=solid];
m1_180 -> m1_182  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_181 -> m1_182  [key=0, style=solid];
m1_182 -> m1_183  [key=0, style=solid];
m1_182 -> m1_184  [key=0, style=solid];
m1_182 -> m1_134  [key=2, style=dotted];
m1_183 -> m1_185  [key=0, style=solid];
m1_184 -> m1_185  [key=0, style=solid];
m1_184 -> m1_186  [key=2, style=dotted];
m1_185 -> m1_180  [color=blue, key=0, style=bold];
m1_76 -> m1_77  [key=0, style=solid];
m1_77 -> m1_78  [key=0, style=solid];
m1_77 -> m1_79  [key=2, style=dotted];
m1_77 -> m1_194  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_77 -> m1_77  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_78 -> m1_76  [color=blue, key=0, style=bold];
m1_128 -> m1_129  [key=0, style=solid];
m1_129 -> m1_130  [key=0, style=solid];
m1_129 -> m1_129  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_130 -> m1_128  [color=blue, key=0, style=bold];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_98  [color=darkorchid, key=3, label="Parameter variable double value", style=bold];
m1_24 -> m1_151  [color=darkorchid, key=3, label="Parameter variable double value", style=bold];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_0  [key=2, style=dotted];
m1_26 -> m1_24  [color=blue, key=0, style=bold];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_95  [color=darkorchid, key=3, label="Parameter variable double value", style=bold];
m1_21 -> m1_151  [color=darkorchid, key=3, label="Parameter variable double value", style=bold];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_0  [key=2, style=dotted];
m1_23 -> m1_21  [color=blue, key=0, style=bold];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_89  [color=darkorchid, key=3, label="Parameter variable double value", style=bold];
m1_15 -> m1_151  [color=darkorchid, key=3, label="Parameter variable double value", style=bold];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_0  [key=2, style=dotted];
m1_17 -> m1_15  [color=blue, key=0, style=bold];
m1_57 -> m1_58  [key=0, style=solid];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_52  [key=2, style=dotted];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_53  [key=2, style=dotted];
m1_54 -> m1_55  [key=0, style=solid];
m1_56 -> m1_54  [color=blue, key=0, style=bold];
m1_59 -> m1_57  [color=blue, key=0, style=bold];
m1_98 -> m1_99  [key=0, style=solid];
m1_98 -> m1_104  [color=darkorchid, key=3, label="method methodReturn Humanizer.Bytes.ByteSize AddTerabytes", style=bold];
m1_99 -> m1_100  [key=0, style=solid];
m1_99 -> m1_24  [key=2, style=dotted];
m1_100 -> m1_98  [color=blue, key=0, style=bold];
m1_72 -> m1_73  [key=0, style=solid];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_75  [key=2, style=dotted];
m1_73 -> m1_193  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_74 -> m1_72  [color=blue, key=0, style=bold];
m1_113 -> m1_114  [key=0, style=solid];
m1_114 -> m1_115  [key=0, style=solid];
m1_114 -> m1_0  [key=2, style=dotted];
m1_114 -> m1_114  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_115 -> m1_113  [color=blue, key=0, style=bold];
m1_131 -> m1_132  [key=0, style=solid];
m1_132 -> m1_133  [key=0, style=solid];
m1_132 -> m1_132  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_133 -> m1_131  [color=blue, key=0, style=bold];
m1_116 -> m1_117  [key=0, style=solid];
m1_117 -> m1_118  [key=0, style=solid];
m1_117 -> m1_117  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_118 -> m1_116  [color=blue, key=0, style=bold];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_12  [color=darkorchid, key=3, label="Parameter variable Humanizer.Bytes.ByteSize b2", style=bold];
m1_104 -> m1_15  [color=darkorchid, key=3, label="Parameter variable Humanizer.Bytes.ByteSize b2", style=bold];
m1_104 -> m1_18  [color=darkorchid, key=3, label="Parameter variable Humanizer.Bytes.ByteSize b2", style=bold];
m1_104 -> m1_21  [color=darkorchid, key=3, label="Parameter variable Humanizer.Bytes.ByteSize b2", style=bold];
m1_104 -> m1_24  [color=darkorchid, key=3, label="Parameter variable Humanizer.Bytes.ByteSize b2", style=bold];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_0  [key=2, style=dotted];
m1_105 -> m1_105  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_106 -> m1_104  [color=blue, key=0, style=bold];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_104  [color=darkorchid, key=3, label="method methodReturn Humanizer.Bytes.ByteSize AddKilobytes", style=bold];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_15  [key=2, style=dotted];
m1_91 -> m1_89  [color=blue, key=0, style=bold];
m1_187 -> m1_28  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_187 -> m1_37  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_187 -> m1_39  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_187 -> m1_41  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_187 -> m1_43  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_187 -> m1_45  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_187 -> m1_47  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_187 -> m1_48  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_187 -> m1_67  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_187 -> m1_70  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_187 -> m1_73  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_187 -> m1_77  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_187 -> m1_81  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_187 -> m1_84  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_187 -> m1_87  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_187 -> m1_90  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_187 -> m1_93  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_187 -> m1_96  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_187 -> m1_99  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_187 -> m1_102  [color=darkseagreen4, key=1, label="Humanizer.Bytes.ByteSize", style=dashed];
m1_188 -> m1_29  [color=darkseagreen4, key=1, label="ref Humanizer.Bytes.ByteSize", style=dashed];
m1_189 -> m1_49  [color=darkseagreen4, key=1, label="ref Humanizer.Bytes.ByteSize", style=dashed];
m1_190 -> m1_55  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_190 -> m1_58  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_191 -> m1_68  [color=darkseagreen4, key=1, label="ref Humanizer.Bytes.ByteSize", style=dashed];
m1_192 -> m1_71  [color=darkseagreen4, key=1, label="ref Humanizer.Bytes.ByteSize", style=dashed];
m1_193 -> m1_74  [color=darkseagreen4, key=1, label="ref Humanizer.Bytes.ByteSize", style=dashed];
m1_194 -> m1_78  [color=darkseagreen4, key=1, label="ref Humanizer.Bytes.ByteSize", style=dashed];
m1_195 -> m1_82  [color=darkseagreen4, key=1, label="ref Humanizer.Bytes.ByteSize", style=dashed];
m1_196 -> m1_85  [color=darkseagreen4, key=1, label="ref Humanizer.Bytes.ByteSize", style=dashed];
m1_197 -> m1_103  [color=darkseagreen4, key=1, label="ref Humanizer.Bytes.ByteSize", style=dashed];
m2_19 -> m2_20  [key=0, style=solid];
m2_13 -> m2_14  [color=green, key=0, style=solid];
m2_13 -> m2_15  [color=green, key=2, style=dotted];
m2_12 -> m2_13  [color=green, key=0, style=solid];
m2_14 -> m2_12  [color=blue, key=0, style=bold];
m2_17 -> m2_15  [key=2, style=dotted];
m2_17 -> m2_18  [key=0, style=solid];
m2_20 -> m2_15  [key=2, style=dotted];
m2_20 -> m2_21  [key=0, style=solid];
m2_16 -> m2_17  [key=0, style=solid];
m2_18 -> m2_16  [color=blue, key=0, style=bold];
m2_21 -> m2_19  [color=blue, key=0, style=bold];
m3_5 -> m3_3  [key=2, style=dotted];
m3_5 -> m3_6  [key=0, style=solid];
m3_47 -> m3_81  [key=0, style=solid];
m3_81 -> m3_22  [key=2, style=dotted];
m3_81 -> m3_82  [key=0, style=solid];
m3_81 -> m3_83  [key=2, style=dotted];
m3_82 -> m3_47  [color=blue, key=0, style=bold];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_5  [key=2, style=dotted];
m3_11 -> m3_3  [key=2, style=dotted];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_9  [color=blue, key=0, style=bold];
m3_12 -> m3_10  [color=blue, key=0, style=bold];
m3_12 -> m3_13  [key=0, style=solid];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_7  [color=blue, key=0, style=bold];
m3_32 -> m3_33  [color=green, key=0, style=solid];
m3_33 -> m3_34  [color=green, key=0, style=solid];
m3_33 -> m3_22  [color=green, key=2, style=dotted];
m3_34 -> m3_32  [color=blue, key=0, style=bold];
m3_86 -> m3_88  [key=0, style=solid];
m3_88 -> m3_89  [key=0, style=solid];
m3_89 -> m3_86  [color=blue, key=0, style=bold];
m3_23 -> m3_24  [key=0, style=solid];
m3_24 -> m3_22  [key=2, style=dotted];
m3_24 -> m3_25  [key=0, style=solid];
m3_25 -> m3_23  [color=blue, key=0, style=bold];
m3_54 -> m3_55  [key=0, style=solid];
m3_55 -> m3_3  [key=2, style=dotted];
m3_55 -> m3_56  [key=0, style=solid];
m3_56 -> m3_54  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_0  [color=blue, key=0, style=bold];
m3_1 -> m3_3  [key=2, style=dotted];
m3_1 -> m3_2  [key=0, style=solid];
m3_44 -> m3_45  [key=0, style=solid];
m3_45 -> m3_46  [key=0, style=solid];
m3_45 -> m3_47  [key=2, style=dotted];
m3_46 -> m3_44  [color=blue, key=0, style=bold];
m3_13 -> m3_14  [color=green, key=0, style=solid];
m3_13 -> m3_5  [key=2, style=dotted];
m3_14 -> m3_15  [color=green, key=0, style=solid];
m3_14 -> m3_3  [color=green, key=2, style=dotted];
m3_14 -> m3_12  [color=blue, key=0, style=bold];
m3_15 -> m3_13  [color=blue, key=0, style=bold];
m3_15 -> m3_16  [key=0, style=solid];
m3_60 -> m3_61  [key=0, style=solid];
m3_61 -> m3_3  [key=2, style=dotted];
m3_61 -> m3_62  [key=0, style=solid];
m3_62 -> m3_60  [color=blue, key=0, style=bold];
m3_7 -> m3_8  [color=green, key=0, style=solid];
m3_7 -> m3_5  [key=2, style=dotted];
m3_8 -> m3_9  [color=green, key=0, style=solid];
m3_8 -> m3_3  [color=green, key=2, style=dotted];
m3_8 -> m3_6  [color=blue, key=0, style=bold];
m3_63 -> m3_64  [key=0, style=solid];
m3_64 -> m3_65  [key=0, style=solid];
m3_64 -> m3_47  [key=2, style=dotted];
m3_65 -> m3_63  [color=blue, key=0, style=bold];
m3_26 -> m3_27  [color=green, key=0, style=solid];
m3_27 -> m3_28  [color=green, key=0, style=solid];
m3_27 -> m3_22  [color=green, key=2, style=dotted];
m3_28 -> m3_26  [color=blue, key=0, style=bold];
m3_72 -> m3_73  [key=0, style=solid];
m3_73 -> m3_3  [key=2, style=dotted];
m3_73 -> m3_74  [key=0, style=solid];
m3_74 -> m3_72  [color=blue, key=0, style=bold];
m3_66 -> m3_67  [key=0, style=solid];
m3_67 -> m3_3  [key=2, style=dotted];
m3_67 -> m3_68  [key=0, style=solid];
m3_68 -> m3_66  [color=blue, key=0, style=bold];
m3_69 -> m3_70  [key=0, style=solid];
m3_70 -> m3_71  [key=0, style=solid];
m3_70 -> m3_47  [key=2, style=dotted];
m3_71 -> m3_69  [color=blue, key=0, style=bold];
m3_2 -> m3_0  [color=blue, key=0, style=bold];
m3_2 -> m3_3  [key=0, style=solid];
m3_41 -> m3_42  [key=0, style=solid];
m3_42 -> m3_3  [key=2, style=dotted];
m3_42 -> m3_43  [key=0, style=solid];
m3_43 -> m3_41  [color=blue, key=0, style=bold];
m3_38 -> m3_39  [color=green, key=0, style=solid];
m3_39 -> m3_40  [color=green, key=0, style=solid];
m3_39 -> m3_22  [color=green, key=2, style=dotted];
m3_40 -> m3_38  [color=blue, key=0, style=bold];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_16  [color=blue, key=0, style=bold];
m3_19 -> m3_20  [color=green, key=0, style=solid];
m3_19 -> m3_5  [key=2, style=dotted];
m3_20 -> m3_18  [color=blue, key=0, style=bold];
m3_20 -> m3_21  [color=green, key=0, style=solid];
m3_20 -> m3_22  [color=green, key=2, style=dotted];
m3_29 -> m3_30  [key=0, style=solid];
m3_30 -> m3_22  [key=2, style=dotted];
m3_30 -> m3_31  [key=0, style=solid];
m3_31 -> m3_29  [color=blue, key=0, style=bold];
m3_75 -> m3_76  [key=0, style=solid];
m3_76 -> m3_77  [key=0, style=solid];
m3_76 -> m3_47  [key=2, style=dotted];
m3_77 -> m3_75  [color=blue, key=0, style=bold];
m3_78 -> m3_79  [key=0, style=solid];
m3_79 -> m3_80  [key=0, style=solid];
m3_79 -> m3_47  [key=2, style=dotted];
m3_80 -> m3_78  [color=blue, key=0, style=bold];
m3_35 -> m3_36  [key=0, style=solid];
m3_36 -> m3_22  [key=2, style=dotted];
m3_36 -> m3_37  [key=0, style=solid];
m3_37 -> m3_35  [color=blue, key=0, style=bold];
m3_83 -> m3_90  [key=0, style=solid];
m3_90 -> m3_91  [key=0, style=solid];
m3_91 -> m3_83  [color=blue, key=0, style=bold];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_2  [color=blue, key=0, style=bold];
m3_6 -> m3_4  [color=blue, key=0, style=bold];
m3_6 -> m3_7  [key=0, style=solid];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_5  [key=2, style=dotted];
m3_3 -> m3_84  [key=0, style=solid];
m3_21 -> m3_19  [color=blue, key=0, style=bold];
m3_84 -> m3_22  [key=2, style=dotted];
m3_84 -> m3_85  [key=0, style=solid];
m3_84 -> m3_86  [key=2, style=dotted];
m3_84 -> m3_87  [key=2, style=dotted];
m3_85 -> m3_3  [color=blue, key=0, style=bold];
m3_48 -> m3_49  [key=0, style=solid];
m3_49 -> m3_3  [key=2, style=dotted];
m3_49 -> m3_50  [key=0, style=solid];
m3_50 -> m3_48  [color=blue, key=0, style=bold];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_5  [key=2, style=dotted];
m3_17 -> m3_15  [color=blue, key=0, style=bold];
m3_17 -> m3_3  [key=2, style=dotted];
m3_17 -> m3_18  [key=0, style=solid];
m3_57 -> m3_58  [key=0, style=solid];
m3_58 -> m3_59  [key=0, style=solid];
m3_58 -> m3_47  [key=2, style=dotted];
m3_59 -> m3_57  [color=blue, key=0, style=bold];
m3_51 -> m3_52  [key=0, style=solid];
m3_52 -> m3_53  [key=0, style=solid];
m3_52 -> m3_47  [key=2, style=dotted];
m3_53 -> m3_51  [color=blue, key=0, style=bold];
m3_92 -> m3_8  [color=green, key=1, label="Humanizer.Localisation.DefaultFormatter", style=dashed];
m3_92 -> m3_14  [color=green, key=1, label="Humanizer.Localisation.DefaultFormatter", style=dashed];
m3_92 -> m3_1  [color=darkseagreen4, key=1, label="Humanizer.Localisation.DefaultFormatter", style=dashed];
m3_92 -> m3_5  [color=darkseagreen4, key=1, label="Humanizer.Localisation.DefaultFormatter", style=dashed];
m3_92 -> m3_11  [color=darkseagreen4, key=1, label="Humanizer.Localisation.DefaultFormatter", style=dashed];
m3_92 -> m3_17  [color=darkseagreen4, key=1, label="Humanizer.Localisation.DefaultFormatter", style=dashed];
m3_92 -> m3_42  [color=darkseagreen4, key=1, label="Humanizer.Localisation.DefaultFormatter", style=dashed];
m3_92 -> m3_45  [color=darkseagreen4, key=1, label="Humanizer.Localisation.DefaultFormatter", style=dashed];
m3_92 -> m3_49  [color=darkseagreen4, key=1, label="Humanizer.Localisation.DefaultFormatter", style=dashed];
m3_92 -> m3_52  [color=darkseagreen4, key=1, label="Humanizer.Localisation.DefaultFormatter", style=dashed];
m3_92 -> m3_55  [color=darkseagreen4, key=1, label="Humanizer.Localisation.DefaultFormatter", style=dashed];
m3_92 -> m3_58  [color=darkseagreen4, key=1, label="Humanizer.Localisation.DefaultFormatter", style=dashed];
m3_92 -> m3_61  [color=darkseagreen4, key=1, label="Humanizer.Localisation.DefaultFormatter", style=dashed];
m3_92 -> m3_64  [color=darkseagreen4, key=1, label="Humanizer.Localisation.DefaultFormatter", style=dashed];
m3_92 -> m3_67  [color=darkseagreen4, key=1, label="Humanizer.Localisation.DefaultFormatter", style=dashed];
m3_92 -> m3_70  [color=darkseagreen4, key=1, label="Humanizer.Localisation.DefaultFormatter", style=dashed];
m3_92 -> m3_73  [color=darkseagreen4, key=1, label="Humanizer.Localisation.DefaultFormatter", style=dashed];
m3_92 -> m3_76  [color=darkseagreen4, key=1, label="Humanizer.Localisation.DefaultFormatter", style=dashed];
m3_92 -> m3_79  [color=darkseagreen4, key=1, label="Humanizer.Localisation.DefaultFormatter", style=dashed];
m3_92 -> m3_81  [color=darkseagreen4, key=1, label="Humanizer.Localisation.DefaultFormatter", style=dashed];
m3_92 -> m3_84  [color=darkseagreen4, key=1, label="Humanizer.Localisation.DefaultFormatter", style=dashed];
m4_0 -> m4_2  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_4  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_6  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_7  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_10  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_3 -> m4_11  [color=green, key=0, style=solid];
m4_2 -> m4_3  [color=green, key=0, style=solid];
m4_2 -> m4_4  [key=0, style=solid];
m4_2 -> m4_12  [key=2, style=dotted];
m4_1 -> m4_2  [key=0, style=solid];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_10  [key=0, style=solid];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_15  [key=2, style=dotted];
m4_9 -> m4_11  [key=0, style=solid];
m4_6 -> m4_12  [key=2, style=dotted];
m4_6 -> m4_10  [key=0, style=solid];
m4_6 -> m4_9  [color=darkseagreen4, key=1, label=exceptionPart, style=dashed];
m4_6 -> m4_7  [key=0, style=solid];
m4_7 -> m4_8  [key=0, style=solid];
m4_5 -> m4_6  [key=0, style=solid];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_14  [key=2, style=dotted];
m4_8 -> m4_13  [key=2, style=dotted];
m4_11 -> m4_0  [color=blue, key=0, style=bold];
m4_12 -> m4_31  [color=green, key=0, style=solid];
m4_12 -> m4_32  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_31 -> m4_32  [color=green, key=0, style=solid];
m4_31 -> m4_34  [color=green, key=2, style=dotted];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_35  [key=2, style=dotted];
m4_33 -> m4_12  [color=blue, key=0, style=bold];
m4_14 -> m4_25  [key=0, style=solid];
m4_14 -> m4_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_14 -> m4_27  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_27  [key=0, style=solid];
m4_25 -> m4_29  [key=2, style=dotted];
m4_26 -> m4_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_30  [key=2, style=dotted];
m4_27 -> m4_28  [key=0, style=solid];
m4_28 -> m4_14  [color=blue, key=0, style=bold];
m4_15 -> m4_16  [key=0, style=solid];
m4_20 -> m4_21  [color=green, key=0, style=solid];
m4_17 -> m4_20  [color=green, key=1, label=towords, style=dashed];
m4_17 -> m4_17  [color=darkseagreen4, key=1, label=towords, style=dashed];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_14  [key=2, style=dotted];
m4_17 -> m4_19  [color=darkseagreen4, key=1, label=towords, style=dashed];
m4_18 -> m4_20  [color=green, key=0, style=solid];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_23  [key=2, style=dotted];
m4_19 -> m4_20  [color=green, key=0, style=solid];
m4_19 -> m4_19  [color=darkseagreen4, key=1, label=towords, style=dashed];
m4_19 -> m4_24  [key=2, style=dotted];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_13  [key=2, style=dotted];
m4_16 -> m4_22  [key=2, style=dotted];
m4_21 -> m4_15  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [color=green, key=0, style=solid];
m5_1 -> m5_2  [color=green, key=0, style=solid];
m5_1 -> m5_3  [color=green, key=2, style=dotted];
m5_2 -> m5_0  [color=blue, key=0, style=bold];
m5_4 -> m5_5  [color=green, key=0, style=solid];
m5_5 -> m5_6  [color=green, key=0, style=solid];
m5_5 -> m5_3  [color=green, key=2, style=dotted];
m5_6 -> m5_4  [color=blue, key=0, style=bold];
m7_2 -> m7_3  [key=0, style=solid];
m7_3 -> m7_2  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_0  [color=blue, key=0, style=bold];
m7_4 -> m7_5  [key=0, style=solid];
m7_5 -> m7_4  [color=blue, key=0, style=bold];
m12_2 -> m12_3  [key=0, style=solid];
m12_3 -> m12_2  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_0  [color=blue, key=0, style=bold];
m14_0 -> m14_1  [color=red, key=0, style=solid];
m14_1 -> m14_2  [color=red, key=0, style=solid];
m14_1 -> m14_3  [color=red, key=2, style=dotted];
m14_1 -> m14_4  [color=red, key=2, style=dotted];
m14_2 -> m14_0  [color=blue, key=0, style=bold];
m15_12 -> m15_13  [key=0, style=solid];
m15_13 -> m15_14  [key=0, style=solid];
m15_13 -> m15_15  [key=2, style=dotted];
m15_14 -> m15_12  [color=blue, key=0, style=bold];
m15_8 -> m15_9  [color=red, key=0, style=solid];
m15_0 -> m15_1  [color=red, key=0, style=solid];
m15_1 -> m15_2  [color=red, key=0, style=solid];
m15_1 -> m15_3  [color=red, key=2, style=dotted];
m15_2 -> m15_0  [color=blue, key=0, style=bold];
m15_4 -> m15_5  [color=red, key=0, style=solid];
m15_5 -> m15_6  [color=red, key=0, style=solid];
m15_5 -> m15_7  [color=red, key=2, style=dotted];
m15_6 -> m15_4  [color=blue, key=0, style=bold];
m15_9 -> m15_10  [color=red, key=0, style=solid];
m15_9 -> m15_11  [color=red, key=2, style=dotted];
m15_10 -> m15_8  [color=blue, key=0, style=bold];
m16_11 -> m16_1  [color=darkorchid, key=3, label="Parameter variable System.Func<TSource, TSource, TResult> selector", style=bold];
m16_1 -> m16_11  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<TResult> Pairwise", style=bold];
m16_111 -> m16_5  [color=darkorchid, key=3, label="Property variable T Next", style=bold];
m16_29 -> m16_29  [color=darkorchid, key=3, label="method methodReturn object ToArray", style=bold];
m17_4 -> m17_5  [key=0, style=solid];
m17_4 -> m17_4  [color=darkorchid, key=3, label="method methodReturn T SetValue", style=bold];
m17_5 -> m17_6  [key=0, style=solid];
m17_6 -> m17_4  [color=blue, key=0, style=bold];
m17_7 -> m17_8  [key=0, style=solid];
m17_8 -> m17_9  [key=0, style=solid];
m17_9 -> m17_7  [color=blue, key=0, style=bold];
m17_0 -> m17_1  [key=0, style=solid];
m17_1 -> m17_0  [color=blue, key=0, style=bold];
m17_2 -> m17_3  [key=0, style=solid];
m17_3 -> m17_2  [color=blue, key=0, style=bold];
m17_10 -> m17_5  [color=darkseagreen4, key=1, label="CommandLine.OptionListAttribute", style=dashed];
m17_10 -> m17_8  [color=darkseagreen4, key=1, label="CommandLine.OptionListAttribute", style=dashed];
m21_0 -> m21_1  [key=0, style=solid];
m21_1 -> m21_0  [color=blue, key=0, style=bold];
m25_0 -> m25_1  [color=green, key=0, style=solid];
m25_0 -> m25_2  [color=darkseagreen4, key=1, label="Humanizer.ShowQuantityAs", style=dashed];
m25_0 -> m25_4  [color=darkseagreen4, key=1, label="Humanizer.ShowQuantityAs", style=dashed];
m25_0 -> m25_5  [color=darkseagreen4, key=1, label=int, style=dashed];
m25_0 -> m25_6  [color=darkseagreen4, key=1, label=int, style=dashed];
m25_1 -> m25_2  [color=green, key=0, style=solid];
m25_1 -> m25_3  [color=green, key=2, style=dotted];
m25_1 -> m25_8  [key=2, style=dotted];
m25_1 -> m25_9  [key=2, style=dotted];
m25_1 -> m25_5  [color=darkseagreen4, key=1, label=transformedInput, style=dashed];
m25_1 -> m25_6  [color=darkseagreen4, key=1, label=transformedInput, style=dashed];
m25_2 -> m25_0  [color=blue, key=0, style=bold];
m25_2 -> m25_3  [key=0, style=solid];
m25_2 -> m25_4  [key=0, style=solid];
m25_13 -> m25_14  [key=0, style=solid];
m25_14 -> m25_3  [key=2, style=dotted];
m25_14 -> m25_15  [key=0, style=solid];
m25_15 -> m25_13  [color=blue, key=0, style=bold];
m25_7 -> m25_8  [color=green, key=0, style=solid];
m25_7 -> m25_48  [color=darkorchid, key=3, label="method methodReturn string DateHumanize__minutes_ago", style=bold];
m25_7 -> m25_0  [color=blue, key=0, style=bold];
m25_8 -> m25_9  [color=green, key=0, style=solid];
m25_8 -> m25_3  [color=green, key=2, style=dotted];
m25_9 -> m25_7  [color=blue, key=0, style=bold];
m25_4 -> m25_5  [color=green, key=0, style=solid];
m25_4 -> m25_6  [key=0, style=solid];
m25_4 -> m25_41  [color=darkorchid, key=3, label="Parameter variable int numberOfHours", style=bold];
m25_4 -> m25_40  [color=darkorchid, key=3, label="method methodReturn string DateHumanize__hours_ago", style=bold];
m25_5 -> m25_7  [key=0, style=solid];
m25_5 -> m25_10  [key=2, style=dotted];
m25_5 -> m25_6  [color=green, key=0, style=solid];
m25_5 -> m25_3  [color=green, key=2, style=dotted];
m25_6 -> m25_7  [key=0, style=solid];
m25_6 -> m25_11  [key=2, style=dotted];
m25_6 -> m25_10  [key=2, style=dotted];
m25_6 -> m25_4  [color=blue, key=0, style=bold];
m25_3 -> m25_7  [key=0, style=solid];
m25_10 -> m25_11  [key=0, style=solid];
m25_48 -> m25_7  [color=darkorchid, key=3, label="method methodReturn string DateHumanize__minutes_ago", style=bold];
m25_48 -> m25_52  [color=darkseagreen4, key=1, label=int, style=dashed];
m25_48 -> m25_49  [key=0, style=solid];
m25_48 -> m25_50  [color=darkseagreen4, key=1, label=int, style=dashed];
m25_48 -> m25_51  [color=darkseagreen4, key=1, label=int, style=dashed];
m25_52 -> m25_3  [key=2, style=dotted];
m25_52 -> m25_53  [key=0, style=solid];
m25_51 -> m25_7  [key=2, style=dotted];
m25_51 -> m25_53  [key=0, style=solid];
m25_50 -> m25_52  [key=0, style=solid];
m25_50 -> m25_51  [key=0, style=solid];
m25_49 -> m25_50  [key=0, style=solid];
m25_49 -> m25_47  [key=2, style=dotted];
m25_53 -> m25_48  [color=blue, key=0, style=bold];
m25_11 -> m25_3  [key=2, style=dotted];
m25_11 -> m25_12  [key=0, style=solid];
m25_12 -> m25_10  [color=blue, key=0, style=bold];
m25_40 -> m25_4  [color=darkorchid, key=3, label="method methodReturn string DateHumanize__hours_ago", style=bold];
m25_40 -> m25_41  [key=0, style=solid];
m25_45 -> m25_3  [key=2, style=dotted];
m25_45 -> m25_46  [key=0, style=solid];
m25_44 -> m25_4  [key=2, style=dotted];
m25_44 -> m25_46  [key=0, style=solid];
m25_41 -> m25_45  [color=darkseagreen4, key=1, label=numberOfHours, style=dashed];
m25_41 -> m25_40  [color=darkorchid, key=3, label="Local variable int numberOfHours", style=bold];
m25_41 -> m25_44  [color=darkseagreen4, key=1, label=numberOfHours, style=dashed];
m25_41 -> m25_42  [key=0, style=solid];
m25_41 -> m25_43  [color=darkseagreen4, key=1, label=numberOfHours, style=dashed];
m25_43 -> m25_45  [key=0, style=solid];
m25_43 -> m25_44  [key=0, style=solid];
m25_42 -> m25_43  [key=0, style=solid];
m25_42 -> m25_47  [key=2, style=dotted];
m25_46 -> m25_40  [color=blue, key=0, style=bold];
m25_16 -> m25_17  [key=0, style=solid];
m25_17 -> m25_3  [key=2, style=dotted];
m25_17 -> m25_18  [key=0, style=solid];
m25_18 -> m25_16  [color=blue, key=0, style=bold];
m25_54 -> m25_44  [color=darkseagreen4, key=1, label="Humanizer.Configuration.RomanianFormatter", style=dashed];
m25_54 -> m25_51  [color=darkseagreen4, key=1, label="Humanizer.Configuration.RomanianFormatter", style=dashed];
m26_19 -> m26_20  [key=0, style=solid];
m26_0 -> m26_1  [key=0, style=solid];
m26_1 -> m26_2  [key=0, style=solid];
m26_1 -> m26_3  [key=2, style=dotted];
m26_2 -> m26_0  [color=blue, key=0, style=bold];
m26_4 -> m26_5  [key=0, style=solid];
m26_5 -> m26_6  [key=0, style=solid];
m26_5 -> m26_7  [key=2, style=dotted];
m26_6 -> m26_4  [color=blue, key=0, style=bold];
m26_8 -> m26_9  [key=0, style=solid];
m26_9 -> m26_10  [key=0, style=solid];
m26_9 -> m26_11  [key=2, style=dotted];
m26_10 -> m26_8  [color=blue, key=0, style=bold];
m26_12 -> m26_13  [key=0, style=solid];
m26_13 -> m26_14  [key=0, style=solid];
m26_13 -> m26_15  [key=2, style=dotted];
m26_14 -> m26_12  [color=blue, key=0, style=bold];
m26_16 -> m26_17  [key=0, style=solid];
m26_17 -> m26_18  [key=0, style=solid];
m26_17 -> m26_15  [key=2, style=dotted];
m26_18 -> m26_16  [color=blue, key=0, style=bold];
m26_20 -> m26_21  [key=0, style=solid];
m26_20 -> m26_15  [key=2, style=dotted];
m26_21 -> m26_19  [color=blue, key=0, style=bold];
}
