digraph  {
n129 [label="Humanizer.InflectorExtensions.Rule", span=""];
n0 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="Entry Humanizer.InflectorExtensions.InflectorExtensions()", span="10-10"];
n1 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddPlural(''$'', ''s'')", span="12-12"];
n2 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddPlural(''s$'', ''s'')", span="13-13"];
n60 [cluster="Humanizer.InflectorExtensions.AddPlural(string, string)", label="Entry Humanizer.InflectorExtensions.AddPlural(string, string)", span="108-108"];
n3 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddPlural(''(ax|test)is$'', ''$1es'')", span="14-14"];
n4 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddPlural(''(octop|vir|alumn|fung)us$'', ''$1i'')", span="15-15"];
n5 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddPlural(''(alias|status)$'', ''$1es'')", span="16-16"];
n6 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddPlural(''(bu)s$'', ''$1ses'')", span="17-17"];
n7 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddPlural(''(buffal|tomat|volcan)o$'', ''$1oes'')", span="18-18"];
n8 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddPlural(''([ti])um$'', ''$1a'')", span="19-19"];
n9 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddPlural(''sis$'', ''ses'')", span="20-20"];
n10 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddPlural(''(?:([^f])fe|([lr])f)$'', ''$1$2ves'')", span="21-21"];
n11 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddPlural(''(hive)$'', ''$1s'')", span="22-22"];
n12 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddPlural(''([^aeiouy]|qu)y$'', ''$1ies'')", span="23-23"];
n13 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddPlural(''(x|ch|ss|sh)$'', ''$1es'')", span="24-24"];
n14 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddPlural(''(matr|vert|ind)ix|ex$'', ''$1ices'')", span="25-25"];
n15 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddPlural(''([m|l])ouse$'', ''$1ice'')", span="26-26"];
n16 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddPlural(''^(ox)$'', ''$1en'')", span="27-27"];
n17 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddPlural(''(quiz)$'', ''$1zes'')", span="28-28"];
n18 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddSingular(''s$'', '''')", span="30-30"];
n19 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddSingular(''(n)ews$'', ''$1ews'')", span="31-31"];
n61 [cluster="Humanizer.InflectorExtensions.AddSingular(string, string)", label="Entry Humanizer.InflectorExtensions.AddSingular(string, string)", span="113-113"];
n20 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddSingular(''([ti])a$'', ''$1um'')", span="32-32"];
n21 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddSingular(''((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$'', ''$1$2sis'')", span="33-33"];
n22 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddSingular(''(^analy)ses$'', ''$1sis'')", span="34-34"];
n23 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddSingular(''([^f])ves$'', ''$1fe'')", span="35-35"];
n24 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddSingular(''(hive)s$'', ''$1'')", span="36-36"];
n25 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddSingular(''(tive)s$'', ''$1'')", span="37-37"];
n26 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddSingular(''([lr])ves$'', ''$1f'')", span="38-38"];
n27 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddSingular(''([^aeiouy]|qu)ies$'', ''$1y'')", span="39-39"];
n28 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddSingular(''(s)eries$'', ''$1eries'')", span="40-40"];
n29 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddSingular(''(m)ovies$'', ''$1ovie'')", span="41-41"];
n30 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddSingular(''(x|ch|ss|sh)es$'', ''$1'')", span="42-42"];
n31 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddSingular(''([m|l])ice$'', ''$1ouse'')", span="43-43"];
n32 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddSingular(''(bus)es$'', ''$1'')", span="44-44"];
n33 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddSingular(''(o)es$'', ''$1'')", span="45-45"];
n34 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddSingular(''(shoe)s$'', ''$1'')", span="46-46"];
n35 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddSingular(''(cris|ax|test)es$'', ''$1is'')", span="47-47"];
n36 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddSingular(''(octop|vir|alumn|fung)i$'', ''$1us'')", span="48-48"];
n37 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddSingular(''(alias|status)es$'', ''$1'')", span="49-49"];
n38 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddSingular(''^(ox)en'', ''$1'')", span="50-50"];
n39 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddSingular(''(vert|ind)ices$'', ''$1ex'')", span="51-51"];
n40 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddSingular(''(matr)ices$'', ''$1ix'')", span="52-52"];
n41 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddSingular(''(quiz)zes$'', ''$1'')", span="53-53"];
n42 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddIrregular(''person'', ''people'')", span="55-55"];
n43 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddIrregular(''man'', ''men'')", span="56-56"];
n62 [cluster="Humanizer.InflectorExtensions.AddIrregular(string, string)", label="Entry Humanizer.InflectorExtensions.AddIrregular(string, string)", span="97-97"];
n44 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddIrregular(''child'', ''children'')", span="57-57"];
n45 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddIrregular(''sex'', ''sexes'')", span="58-58"];
n46 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddIrregular(''move'', ''moves'')", span="59-59"];
n47 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddIrregular(''goose'', ''geese'')", span="60-60"];
n48 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddIrregular(''alumna'', ''alumnae'')", span="61-61"];
n49 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddUncountable(''equipment'')", span="63-63"];
n50 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddUncountable(''information'')", span="64-64"];
n63 [cluster="Humanizer.InflectorExtensions.AddUncountable(string)", label="Entry Humanizer.InflectorExtensions.AddUncountable(string)", span="103-103"];
n51 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddUncountable(''rice'')", span="65-65"];
n52 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddUncountable(''money'')", span="66-66"];
n53 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddUncountable(''species'')", span="67-67"];
n54 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddUncountable(''series'')", span="68-68"];
n55 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddUncountable(''fish'')", span="69-69"];
n56 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddUncountable(''sheep'')", span="70-70"];
n57 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddUncountable(''deer'')", span="71-71"];
n58 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="AddUncountable(''aircraft'')", span="72-72"];
n59 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", label="Exit Humanizer.InflectorExtensions.InflectorExtensions()", span="10-10"];
n64 [cluster="Humanizer.InflectorExtensions.Rule.Rule(string, string)", label="Entry Humanizer.InflectorExtensions.Rule.Rule(string, string)", span="80-80"];
n65 [cluster="Humanizer.InflectorExtensions.Rule.Rule(string, string)", label="_regex = new Regex(pattern, RegexOptions.IgnoreCase)", span="82-82"];
n66 [cluster="Humanizer.InflectorExtensions.Rule.Rule(string, string)", label="_replacement = replacement", span="83-83"];
n68 [cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", span="0-0"];
n67 [cluster="Humanizer.InflectorExtensions.Rule.Rule(string, string)", label="Exit Humanizer.InflectorExtensions.Rule.Rule(string, string)", span="80-80"];
n69 [cluster="Humanizer.InflectorExtensions.Rule.Apply(string)", label="Entry Humanizer.InflectorExtensions.Rule.Apply(string)", span="86-86"];
n70 [cluster="Humanizer.InflectorExtensions.Rule.Apply(string)", label="!_regex.IsMatch(word)", span="88-88"];
n72 [cluster="Humanizer.InflectorExtensions.Rule.Apply(string)", label="return _regex.Replace(word, _replacement);", span="93-93"];
n71 [cluster="Humanizer.InflectorExtensions.Rule.Apply(string)", label="return null;", span="90-90"];
n74 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string)", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string)", span="0-0"];
n73 [cluster="Humanizer.InflectorExtensions.Rule.Apply(string)", label="Exit Humanizer.InflectorExtensions.Rule.Apply(string)", span="86-86"];
n75 [cluster="System.Text.RegularExpressions.Regex.Replace(string, string)", label="Entry System.Text.RegularExpressions.Regex.Replace(string, string)", span="0-0"];
n76 [cluster="Humanizer.InflectorExtensions.AddIrregular(string, string)", label="AddPlural(''('' + singular[0] + '')'' + singular.Substring(1) + ''$'', ''$1'' + plural.Substring(1))", span="99-99"];
n77 [cluster="Humanizer.InflectorExtensions.AddIrregular(string, string)", label="AddSingular(''('' + plural[0] + '')'' + plural.Substring(1) + ''$'', ''$1'' + singular.Substring(1))", span="100-100"];
n79 [cluster="string.Substring(int)", label="Entry string.Substring(int)", span="0-0"];
n78 [cluster="Humanizer.InflectorExtensions.AddIrregular(string, string)", label="Exit Humanizer.InflectorExtensions.AddIrregular(string, string)", span="97-97"];
n80 [cluster="Humanizer.InflectorExtensions.AddUncountable(string)", label="Uncountables.Add(word.ToLower())", span="105-105"];
n81 [cluster="Humanizer.InflectorExtensions.AddUncountable(string)", label="Exit Humanizer.InflectorExtensions.AddUncountable(string)", span="103-103"];
n82 [cluster="string.ToLower()", label="Entry string.ToLower()", span="0-0"];
n83 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n84 [cluster="Humanizer.InflectorExtensions.AddPlural(string, string)", label="Plurals.Add(new Rule(rule, replacement))", span="110-110"];
n85 [cluster="Humanizer.InflectorExtensions.AddPlural(string, string)", label="Exit Humanizer.InflectorExtensions.AddPlural(string, string)", span="108-108"];
n86 [cluster="Humanizer.InflectorExtensions.AddSingular(string, string)", label="Singulars.Add(new Rule(rule, replacement))", span="115-115"];
n87 [cluster="Humanizer.InflectorExtensions.AddSingular(string, string)", label="Exit Humanizer.InflectorExtensions.AddSingular(string, string)", span="113-113"];
n88 [cluster="Humanizer.InflectorExtensions.Pluralize(string)", label="Entry Humanizer.InflectorExtensions.Pluralize(string)", span="127-127"];
n90 [cluster="Humanizer.InflectorExtensions.Pluralize(string)", label="Exit Humanizer.InflectorExtensions.Pluralize(string)", span="127-127"];
n91 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", label="Entry Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", span="142-142"];
n92 [cluster="Humanizer.InflectorExtensions.Singularize(string)", label="Entry Humanizer.InflectorExtensions.Singularize(string)", span="137-137"];
n94 [cluster="Humanizer.InflectorExtensions.Singularize(string)", label="Exit Humanizer.InflectorExtensions.Singularize(string)", span="137-137"];
n96 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", label="!Uncountables.Contains(word.ToLower())", span="146-146"];
n97 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", label="int i = rules.Count - 1", span="148-148"];
n99 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", label="(result = rules[i].Apply(word)) != null", span="150-150"];
n101 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", label="return result;", span="157-157"];
n103 [cluster="System.Collections.Generic.List<T>.Contains(T)", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
n98 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", label="i >= 0", span="148-148"];
n100 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", label="i--", span="148-148"];
n102 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", label="Exit Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", span="142-142"];
n104 [cluster="Humanizer.InflectorExtensions.Titleize(string)", label="Entry Humanizer.InflectorExtensions.Titleize(string)", span="165-165"];
n105 [cluster="Humanizer.InflectorExtensions.Titleize(string)", label="return input.Humanize(LetterCasing.Title);", span="167-167"];
n106 [cluster="Humanizer.InflectorExtensions.Titleize(string)", label="Exit Humanizer.InflectorExtensions.Titleize(string)", span="165-165"];
n107 [cluster="string.Humanize(Humanizer.LetterCasing)", label="Entry string.Humanize(Humanizer.LetterCasing)", span="60-60"];
n108 [cluster="Humanizer.InflectorExtensions.Pascalize(string)", label="Entry Humanizer.InflectorExtensions.Pascalize(string)", span="175-175"];
n109 [cluster="Humanizer.InflectorExtensions.Pascalize(string)", label="return Regex.Replace(input, ''(?:^|_)(.)'', match => match.Groups[1].Value.ToUpper());", span="177-177"];
n110 [cluster="Humanizer.InflectorExtensions.Pascalize(string)", label="Exit Humanizer.InflectorExtensions.Pascalize(string)", span="175-175"];
n111 [cluster="System.Text.RegularExpressions.Regex.Replace(string, string, System.Text.RegularExpressions.MatchEvaluator)", label="Entry System.Text.RegularExpressions.Regex.Replace(string, string, System.Text.RegularExpressions.MatchEvaluator)", span="0-0"];
n112 [cluster="lambda expression", label="Entry lambda expression", span="177-177"];
n113 [cluster="lambda expression", label="match.Groups[1].Value.ToUpper()", span="177-177"];
n114 [cluster="lambda expression", label="Exit lambda expression", span="177-177"];
n115 [cluster="string.ToUpper()", label="Entry string.ToUpper()", span="0-0"];
n116 [cluster="Humanizer.InflectorExtensions.Camelize(string)", label="Entry Humanizer.InflectorExtensions.Camelize(string)", span="185-185"];
n117 [cluster="Humanizer.InflectorExtensions.Camelize(string)", label="string word = Pascalize(input)", span="187-187"];
n118 [cluster="Humanizer.InflectorExtensions.Camelize(string)", label="return word.Substring(0, 1).ToLower() + word.Substring(1);", span="188-188"];
n119 [cluster="Humanizer.InflectorExtensions.Camelize(string)", label="Exit Humanizer.InflectorExtensions.Camelize(string)", span="185-185"];
n120 [cluster="string.Substring(int, int)", label="Entry string.Substring(int, int)", span="0-0"];
n121 [cluster="Humanizer.InflectorExtensions.Underscore(string)", label="Entry Humanizer.InflectorExtensions.Underscore(string)", span="196-196"];
n122 [cluster="Humanizer.InflectorExtensions.Underscore(string)", label="return Regex.Replace(\r\n                Regex.Replace(\r\n                    Regex.Replace(input, @''([A-Z]+)([A-Z][a-z])'', ''$1_$2''), @''([a-z\d])([A-Z])'', ''$1_$2''), @''[-\s]'', ''_'').ToLower();", span="198-200"];
n123 [cluster="Humanizer.InflectorExtensions.Underscore(string)", label="Exit Humanizer.InflectorExtensions.Underscore(string)", span="196-196"];
n124 [cluster="System.Text.RegularExpressions.Regex.Replace(string, string, string)", label="Entry System.Text.RegularExpressions.Regex.Replace(string, string, string)", span="0-0"];
n125 [cluster="Humanizer.InflectorExtensions.Dasherize(string)", label="Entry Humanizer.InflectorExtensions.Dasherize(string)", span="208-208"];
n126 [cluster="Humanizer.InflectorExtensions.Dasherize(string)", label="return underscoredWord.Replace('_', '-');", span="210-210"];
n127 [cluster="Humanizer.InflectorExtensions.Dasherize(string)", label="Exit Humanizer.InflectorExtensions.Dasherize(string)", span="208-208"];
n128 [cluster="string.Replace(char, char)", label="Entry string.Replace(char, char)", span="0-0"];
m0_117 [cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", file="InflectorTests.cs", label="Entry Humanizer.Tests.InflectorTests.Dasherize(string, string)", span="193-193"];
m0_118 [cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", file="InflectorTests.cs", label="Assert.Equal(input.Dasherize(), expectedOutput)", span="195-195"];
m0_119 [cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.Dasherize(string, string)", span="193-193"];
m0_112 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="InflectorTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m0_125 [cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)", file="InflectorTests.cs", label="Entry Humanizer.Tests.InflectorTests.Camelize(string, string)", span="220-220"];
m0_126 [cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)", file="InflectorTests.cs", label="Assert.Equal(expectedOutput, input.Camelize())", span="222-222"];
m0_127 [cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.Camelize(string, string)", span="220-220"];
m0_0 [cluster="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string)", file="InflectorTests.cs", label="Entry Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string)", span="4-4"];
m0_2 [cluster="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string)", color=green, community=0, file="InflectorTests.cs", label="Exit Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string)", prediction=0, span="4-4"];
m0_1 [cluster="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string)", file="InflectorTests.cs", label="return Convert(number, numberString, GrammaticalGender.Masculine);", span="6-6"];
m0_3 [cluster="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string, Humanizer.GrammaticalGender)", file="InflectorTests.cs", label="Entry Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string, Humanizer.GrammaticalGender)", span="9-9"];
m0_5 [cluster="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string, Humanizer.GrammaticalGender)", file="InflectorTests.cs", label="return ''0'';", span="13-13"];
m0_24 [cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity()", file="InflectorTests.cs", label="Entry Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity()", span="57-57"];
m0_25 [cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity()", color=green, community=0, file="InflectorTests.cs", label=TestData, prediction=1, span="59-59"];
m0_27 [cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity()", color=green, community=0, file="InflectorTests.cs", label="Assert.Equal(pair.Key, pair.Value.Singularize(Plurality.CouldBeEither))", prediction=2, span="62-62"];
m0_26 [cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity()", color=green, community=0, file="InflectorTests.cs", label="Assert.Equal(pair.Key, pair.Key.Singularize(Plurality.CouldBeEither))", prediction=3, span="61-61"];
m0_28 [cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity()", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity()", span="57-57"];
m0_129 [cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)", file="InflectorTests.cs", label="Entry Humanizer.Tests.InflectorTests.Underscore(string, string)", span="233-233"];
m0_130 [cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)", file="InflectorTests.cs", label="Assert.Equal(expectedOuput, input.Underscore())", span="235-235"];
m0_131 [cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.Underscore(string, string)", span="233-233"];
m0_4 [cluster="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string, Humanizer.GrammaticalGender)", file="InflectorTests.cs", label="number == 0", span="12-12"];
m0_124 [cluster="string.Pascalize()", file="InflectorTests.cs", label="Entry string.Pascalize()", span="223-223"];
m0_113 [cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", file="InflectorTests.cs", label="Entry Humanizer.Tests.InflectorTests.Titleize(string, string)", span="183-183"];
m0_114 [cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", file="InflectorTests.cs", label="Assert.Equal(expectedOuput, input.Titleize())", span="185-185"];
m0_115 [cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.Titleize(string, string)", span="183-183"];
m0_116 [cluster="string.Titleize()", file="InflectorTests.cs", label="Entry string.Titleize()", span="213-213"];
m0_20 [cluster="Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord()", file="InflectorTests.cs", label="Entry Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord()", span="48-48"];
m0_21 [cluster="Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord()", color=green, community=0, file="InflectorTests.cs", label=TestData, prediction=1, span="50-50"];
m0_22 [cluster="Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord()", color=green, community=0, file="InflectorTests.cs", label="Assert.Equal(pair.Key, pair.Key.Singularize(Plurality.Singular))", prediction=5, span="52-52"];
m0_23 [cluster="Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord()", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord()", span="48-48"];
m0_120 [cluster="string.Dasherize()", file="InflectorTests.cs", label="Entry string.Dasherize()", span="256-256"];
m0_15 [cluster="Humanizer.Tests.InflectorTests.Singularize()", file="InflectorTests.cs", label="Entry Humanizer.Tests.InflectorTests.Singularize()", span="39-39"];
m0_17 [cluster="Humanizer.Tests.InflectorTests.Singularize()", color=green, community=0, file="InflectorTests.cs", label="Assert.Equal(pair.Key, pair.Value.Singularize())", prediction=6, span="43-43"];
m0_16 [cluster="Humanizer.Tests.InflectorTests.Singularize()", file="InflectorTests.cs", label=TestData, span="41-41"];
m0_18 [cluster="Humanizer.Tests.InflectorTests.Singularize()", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.Singularize()", span="39-39"];
m0_121 [cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", file="InflectorTests.cs", label="Entry Humanizer.Tests.InflectorTests.Pascalize(string, string)", span="206-206"];
m0_122 [cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", file="InflectorTests.cs", label="Assert.Equal(expectedOutput, input.Pascalize())", span="208-208"];
m0_123 [cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.Pascalize(string, string)", span="206-206"];
m0_29 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="Entry Humanizer.Tests.InflectorTests.InflectorTests()", span="66-66"];
m0_30 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''search'', ''searches'')", span="68-68"];
m0_31 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''switch'', ''switches'')", span="69-69"];
m0_32 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''fix'', ''fixes'')", span="70-70"];
m0_33 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''box'', ''boxes'')", span="71-71"];
m0_34 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''process'', ''processes'')", span="72-72"];
m0_35 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''address'', ''addresses'')", span="73-73"];
m0_36 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''case'', ''cases'')", span="74-74"];
m0_37 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''stack'', ''stacks'')", span="75-75"];
m0_38 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''wish'', ''wishes'')", span="76-76"];
m0_39 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''fish'', ''fish'')", span="77-77"];
m0_40 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''category'', ''categories'')", span="79-79"];
m0_41 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''query'', ''queries'')", span="80-80"];
m0_42 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''ability'', ''abilities'')", span="81-81"];
m0_43 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''agency'', ''agencies'')", span="82-82"];
m0_44 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''movie'', ''movies'')", span="83-83"];
m0_45 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''archive'', ''archives'')", span="85-85"];
m0_46 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''index'', ''indices'')", span="87-87"];
m0_47 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''wife'', ''wives'')", span="89-89"];
m0_48 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''safe'', ''saves'')", span="90-90"];
m0_49 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''half'', ''halves'')", span="91-91"];
m0_50 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''move'', ''moves'')", span="93-93"];
m0_51 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''salesperson'', ''salespeople'')", span="95-95"];
m0_52 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''person'', ''people'')", span="96-96"];
m0_53 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''spokesman'', ''spokesmen'')", span="98-98"];
m0_54 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''man'', ''men'')", span="99-99"];
m0_55 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''woman'', ''women'')", span="100-100"];
m0_56 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''basis'', ''bases'')", span="102-102"];
m0_57 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''diagnosis'', ''diagnoses'')", span="103-103"];
m0_58 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''datum'', ''data'')", span="105-105"];
m0_59 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''medium'', ''media'')", span="106-106"];
m0_60 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''analysis'', ''analyses'')", span="107-107"];
m0_61 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''node_child'', ''node_children'')", span="109-109"];
m0_62 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''child'', ''children'')", span="110-110"];
m0_63 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''experience'', ''experiences'')", span="112-112"];
m0_64 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''day'', ''days'')", span="113-113"];
m0_65 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''comment'', ''comments'')", span="115-115"];
m0_66 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''foobar'', ''foobars'')", span="116-116"];
m0_67 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''newsletter'', ''newsletters'')", span="117-117"];
m0_68 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''old_news'', ''old_news'')", span="119-119"];
m0_69 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''news'', ''news'')", span="120-120"];
m0_70 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''series'', ''series'')", span="122-122"];
m0_71 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''species'', ''species'')", span="123-123"];
m0_72 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''quiz'', ''quizzes'')", span="125-125"];
m0_73 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''perspective'', ''perspectives'')", span="127-127"];
m0_74 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''ox'', ''oxen'')", span="129-129"];
m0_75 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''photo'', ''photos'')", span="130-130"];
m0_76 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''buffalo'', ''buffaloes'')", span="131-131"];
m0_77 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''tomato'', ''tomatoes'')", span="132-132"];
m0_78 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''dwarf'', ''dwarves'')", span="133-133"];
m0_79 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''elf'', ''elves'')", span="134-134"];
m0_80 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''information'', ''information'')", span="135-135"];
m0_81 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''equipment'', ''equipment'')", span="136-136"];
m0_82 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''bus'', ''buses'')", span="137-137"];
m0_83 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''status'', ''statuses'')", span="138-138"];
m0_84 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''status_code'', ''status_codes'')", span="139-139"];
m0_85 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''mouse'', ''mice'')", span="140-140"];
m0_86 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''louse'', ''lice'')", span="142-142"];
m0_87 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''house'', ''houses'')", span="143-143"];
m0_88 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''octopus'', ''octopi'')", span="144-144"];
m0_89 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''virus'', ''viri'')", span="145-145"];
m0_90 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''alias'', ''aliases'')", span="146-146"];
m0_91 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''portfolio'', ''portfolios'')", span="147-147"];
m0_92 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''vertex'', ''vertices'')", span="149-149"];
m0_93 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''matrix'', ''matrices'')", span="150-150"];
m0_94 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''axis'', ''axes'')", span="152-152"];
m0_95 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''testis'', ''testes'')", span="153-153"];
m0_96 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''crisis'', ''crises'')", span="154-154"];
m0_97 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''rice'', ''rice'')", span="156-156"];
m0_98 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''shoe'', ''shoes'')", span="157-157"];
m0_99 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''horse'', ''horses'')", span="159-159"];
m0_100 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''prize'', ''prizes'')", span="160-160"];
m0_101 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''edge'', ''edges'')", span="161-161"];
m0_102 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''goose'', ''geese'')", span="164-164"];
m0_103 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''deer'', ''deer'')", span="165-165"];
m0_104 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''sheep'', ''sheep'')", span="166-166"];
m0_105 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''wolf'', ''wolves'')", span="167-167"];
m0_106 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''volcano'', ''volcanoes'')", span="168-168"];
m0_107 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''aircraft'', ''aircraft'')", span="169-169"];
m0_108 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''alumna'', ''alumnae'')", span="170-170"];
m0_109 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''alumnus'', ''alumni'')", span="171-171"];
m0_110 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="TestData.Add(''fungus'', ''fungi'')", span="172-172"];
m0_111 [cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.InflectorTests()", span="66-66"];
m0_10 [cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality()", file="InflectorTests.cs", label="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer", span=""];
m0_11 [cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality()", color=green, community=0, file="InflectorTests.cs", label=TestData, prediction=1, span="31-31"];
m0_13 [cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality()", color=green, community=0, file="InflectorTests.cs", label="Assert.Equal(pair.Value, pair.Key.Pluralize(Plurality.CouldBeEither))", prediction=8, span="34-34"];
m0_12 [cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality()", color=green, community=0, file="InflectorTests.cs", label="Assert.Equal(pair.Value, pair.Value.Pluralize(Plurality.CouldBeEither))", prediction=9, span="33-33"];
m0_14 [cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality()", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality()", span="29-29"];
m0_128 [cluster="string.Camelize()", file="InflectorTests.cs", label="Entry string.Camelize()", span="233-233"];
m0_132 [cluster="string.Underscore()", file="InflectorTests.cs", label="Entry string.Underscore()", span="244-244"];
m0_7 [cluster="Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord()", color=green, community=0, file="InflectorTests.cs", label=TestData, prediction=1, span="22-22"];
m0_8 [cluster="Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord()", color=green, community=0, file="InflectorTests.cs", label="Assert.Equal(pair.Value, pair.Value.Pluralize(Plurality.Plural))", prediction=1, span="24-24"];
m0_9 [cluster="Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord()", file="InflectorTests.cs", label="Exit Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord()", span="20-20"];
m0_19 [cluster="string.Singularize(Humanizer.Plurality)", file="InflectorTests.cs", label="Entry string.Singularize(Humanizer.Plurality)", span="171-171"];
m0_133 [file="InflectorTests.cs", label="Humanizer.Tests.InflectorTests", span=""];
m2_4 [cluster="Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", file="ToQuantityTests.cs", label="Entry Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", span="15-15"];
m2_5 [cluster="Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", color=green, community=0, file="ToQuantityTests.cs", label="return date.At(0);", prediction=12, span="17-17"];
m2_6 [cluster="Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", file="ToQuantityTests.cs", label="Exit Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", span="15-15"];
m2_8 [cluster="Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", file="ToQuantityTests.cs", label="Entry Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", span="25-25"];
m2_9 [cluster="Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", file="ToQuantityTests.cs", label="return date.At(12);", span="27-27"];
m2_10 [cluster="Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", file="ToQuantityTests.cs", label="Exit Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", span="25-25"];
m2_7 [cluster="System.DateTime.At(int, int, int, int)", file="ToQuantityTests.cs", label="Entry System.DateTime.At(int, int, int, int)", span="5-5"];
m2_0 [cluster="Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", file="ToQuantityTests.cs", label="Entry Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", span="5-5"];
m2_1 [cluster="Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", color=green, community=0, file="ToQuantityTests.cs", label="return new DateTime(date.Year, date.Month, date.Day, hour, min, second, millisecond);", prediction=13, span="7-7"];
m2_2 [cluster="Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", file="ToQuantityTests.cs", label="Exit Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", span="5-5"];
m2_11 [cluster="Humanizer.PrepositionsExtensions.In(System.DateTime, int)", file="ToQuantityTests.cs", label="Entry Humanizer.PrepositionsExtensions.In(System.DateTime, int)", span="36-36"];
m2_12 [cluster="Humanizer.PrepositionsExtensions.In(System.DateTime, int)", file="ToQuantityTests.cs", label="return new DateTime(year, date.Month, date.Day, date.Hour, date.Minute, date.Second, date.Millisecond);", span="38-38"];
m2_13 [cluster="Humanizer.PrepositionsExtensions.In(System.DateTime, int)", file="ToQuantityTests.cs", label="Exit Humanizer.PrepositionsExtensions.In(System.DateTime, int)", span="36-36"];
m2_3 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, int)", file="ToQuantityTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int)", span="0-0"];
n129 -> n70  [color=darkseagreen4, key=1, label="Humanizer.InflectorExtensions.Rule", style=dashed];
n129 -> n72  [color=darkseagreen4, key=1, label="Humanizer.InflectorExtensions.Rule", style=dashed];
n62 -> n77  [color=darkseagreen4, key=1, label=string, style=dashed];
n69 -> n72  [color=darkseagreen4, key=1, label=string, style=dashed];
n91 -> n96  [color=darkseagreen4, key=1, label=string, style=dashed];
n97 -> n100  [color=darkseagreen4, key=1, label=i, style=dashed];
n100 -> n100  [color=darkseagreen4, key=1, label=i, style=dashed];
n109 -> n112  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_2 -> m0_2  [color=green, key=1, label=pair, style=dashed];
m0_3 -> m0_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_3 -> m0_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_27 -> m0_27  [color=green, key=1, label=pair, style=dashed];
m0_26 -> m0_26  [color=green, key=1, label=pair, style=dashed];
m0_22 -> m0_22  [color=green, key=1, label=pair, style=dashed];
m0_17 -> m0_17  [color=green, key=1, label=pair, style=dashed];
m0_10 -> m0_1  [color=darkseagreen4, key=1, label="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer", style=dashed];
m0_13 -> m0_13  [color=green, key=1, label=pair, style=dashed];
m0_12 -> m0_12  [color=green, key=1, label=pair, style=dashed];
m0_8 -> m0_8  [color=green, key=1, label=pair, style=dashed];
m0_133 -> m0_7  [color=green, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_11  [color=green, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_21  [color=green, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_25  [color=green, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_1  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_16  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_30  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_31  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_32  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_33  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_34  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_35  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_36  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_37  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_38  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_39  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_40  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_41  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_42  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_43  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_44  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_45  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_46  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_47  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_48  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_49  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_50  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_51  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_52  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_53  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_54  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_55  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_56  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_57  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_58  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_59  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_60  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_61  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_62  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_63  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_64  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_65  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_66  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_67  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_68  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_69  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_70  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_71  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_72  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_73  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_74  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_75  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_76  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_77  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_78  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_79  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_80  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_81  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_82  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_83  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_84  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_85  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_86  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_87  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_88  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_89  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_90  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_91  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_92  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_93  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_94  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_95  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_96  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_97  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_98  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_99  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_100  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_101  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_102  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_103  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_104  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_105  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_106  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_107  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_108  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_109  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
m0_133 -> m0_110  [color=darkseagreen4, key=1, label="Humanizer.Tests.InflectorTests", style=dashed];
}
