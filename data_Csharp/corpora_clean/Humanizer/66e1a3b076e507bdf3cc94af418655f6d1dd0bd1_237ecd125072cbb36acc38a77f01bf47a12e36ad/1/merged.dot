digraph  {
n129 [label="Humanizer.InflectorExtensions.Rule", span=""];
n0 [label="Entry Humanizer.InflectorExtensions.InflectorExtensions()", span="10-10", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n1 [label="AddPlural(''$'', ''s'')", span="12-12", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n2 [label="AddPlural(''s$'', ''s'')", span="13-13", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n60 [label="Entry Humanizer.InflectorExtensions.AddPlural(string, string)", span="108-108", cluster="Humanizer.InflectorExtensions.AddPlural(string, string)"];
n3 [label="AddPlural(''(ax|test)is$'', ''$1es'')", span="14-14", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n4 [label="AddPlural(''(octop|vir|alumn|fung)us$'', ''$1i'')", span="15-15", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n5 [label="AddPlural(''(alias|status)$'', ''$1es'')", span="16-16", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n6 [label="AddPlural(''(bu)s$'', ''$1ses'')", span="17-17", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n7 [label="AddPlural(''(buffal|tomat|volcan)o$'', ''$1oes'')", span="18-18", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n8 [label="AddPlural(''([ti])um$'', ''$1a'')", span="19-19", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n9 [label="AddPlural(''sis$'', ''ses'')", span="20-20", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n10 [label="AddPlural(''(?:([^f])fe|([lr])f)$'', ''$1$2ves'')", span="21-21", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n11 [label="AddPlural(''(hive)$'', ''$1s'')", span="22-22", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n12 [label="AddPlural(''([^aeiouy]|qu)y$'', ''$1ies'')", span="23-23", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n13 [label="AddPlural(''(x|ch|ss|sh)$'', ''$1es'')", span="24-24", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n14 [label="AddPlural(''(matr|vert|ind)ix|ex$'', ''$1ices'')", span="25-25", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n15 [label="AddPlural(''([m|l])ouse$'', ''$1ice'')", span="26-26", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n16 [label="AddPlural(''^(ox)$'', ''$1en'')", span="27-27", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n17 [label="AddPlural(''(quiz)$'', ''$1zes'')", span="28-28", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n18 [label="AddSingular(''s$'', '''')", span="30-30", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n19 [label="AddSingular(''(n)ews$'', ''$1ews'')", span="31-31", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n61 [label="Entry Humanizer.InflectorExtensions.AddSingular(string, string)", span="113-113", cluster="Humanizer.InflectorExtensions.AddSingular(string, string)"];
n20 [label="AddSingular(''([ti])a$'', ''$1um'')", span="32-32", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n21 [label="AddSingular(''((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$'', ''$1$2sis'')", span="33-33", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n22 [label="AddSingular(''(^analy)ses$'', ''$1sis'')", span="34-34", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n23 [label="AddSingular(''([^f])ves$'', ''$1fe'')", span="35-35", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n24 [label="AddSingular(''(hive)s$'', ''$1'')", span="36-36", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n25 [label="AddSingular(''(tive)s$'', ''$1'')", span="37-37", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n26 [label="AddSingular(''([lr])ves$'', ''$1f'')", span="38-38", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n27 [label="AddSingular(''([^aeiouy]|qu)ies$'', ''$1y'')", span="39-39", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n28 [label="AddSingular(''(s)eries$'', ''$1eries'')", span="40-40", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n29 [label="AddSingular(''(m)ovies$'', ''$1ovie'')", span="41-41", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n30 [label="AddSingular(''(x|ch|ss|sh)es$'', ''$1'')", span="42-42", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n31 [label="AddSingular(''([m|l])ice$'', ''$1ouse'')", span="43-43", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n32 [label="AddSingular(''(bus)es$'', ''$1'')", span="44-44", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n33 [label="AddSingular(''(o)es$'', ''$1'')", span="45-45", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n34 [label="AddSingular(''(shoe)s$'', ''$1'')", span="46-46", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n35 [label="AddSingular(''(cris|ax|test)es$'', ''$1is'')", span="47-47", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n36 [label="AddSingular(''(octop|vir|alumn|fung)i$'', ''$1us'')", span="48-48", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n37 [label="AddSingular(''(alias|status)es$'', ''$1'')", span="49-49", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n38 [label="AddSingular(''^(ox)en'', ''$1'')", span="50-50", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n39 [label="AddSingular(''(vert|ind)ices$'', ''$1ex'')", span="51-51", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n40 [label="AddSingular(''(matr)ices$'', ''$1ix'')", span="52-52", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n41 [label="AddSingular(''(quiz)zes$'', ''$1'')", span="53-53", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n42 [label="AddIrregular(''person'', ''people'')", span="55-55", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n43 [label="AddIrregular(''man'', ''men'')", span="56-56", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n62 [label="Entry Humanizer.InflectorExtensions.AddIrregular(string, string)", span="97-97", cluster="Humanizer.InflectorExtensions.AddIrregular(string, string)"];
n44 [label="AddIrregular(''child'', ''children'')", span="57-57", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n45 [label="AddIrregular(''sex'', ''sexes'')", span="58-58", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n46 [label="AddIrregular(''move'', ''moves'')", span="59-59", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n47 [label="AddIrregular(''goose'', ''geese'')", span="60-60", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n48 [label="AddIrregular(''alumna'', ''alumnae'')", span="61-61", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n49 [label="AddUncountable(''equipment'')", span="63-63", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n50 [label="AddUncountable(''information'')", span="64-64", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n63 [label="Entry Humanizer.InflectorExtensions.AddUncountable(string)", span="103-103", cluster="Humanizer.InflectorExtensions.AddUncountable(string)"];
n51 [label="AddUncountable(''rice'')", span="65-65", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n52 [label="AddUncountable(''money'')", span="66-66", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n53 [label="AddUncountable(''species'')", span="67-67", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n54 [label="AddUncountable(''series'')", span="68-68", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n55 [label="AddUncountable(''fish'')", span="69-69", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n56 [label="AddUncountable(''sheep'')", span="70-70", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n57 [label="AddUncountable(''deer'')", span="71-71", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n58 [label="AddUncountable(''aircraft'')", span="72-72", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n59 [label="Exit Humanizer.InflectorExtensions.InflectorExtensions()", span="10-10", cluster="Humanizer.InflectorExtensions.InflectorExtensions()"];
n64 [label="Entry Humanizer.InflectorExtensions.Rule.Rule(string, string)", span="80-80", cluster="Humanizer.InflectorExtensions.Rule.Rule(string, string)"];
n65 [label="_regex = new Regex(pattern, RegexOptions.IgnoreCase)", span="82-82", cluster="Humanizer.InflectorExtensions.Rule.Rule(string, string)"];
n66 [label="_replacement = replacement", span="83-83", cluster="Humanizer.InflectorExtensions.Rule.Rule(string, string)"];
n68 [label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", span="0-0", cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)"];
n67 [label="Exit Humanizer.InflectorExtensions.Rule.Rule(string, string)", span="80-80", cluster="Humanizer.InflectorExtensions.Rule.Rule(string, string)"];
n69 [label="Entry Humanizer.InflectorExtensions.Rule.Apply(string)", span="86-86", cluster="Humanizer.InflectorExtensions.Rule.Apply(string)"];
n70 [label="!_regex.IsMatch(word)", span="88-88", cluster="Humanizer.InflectorExtensions.Rule.Apply(string)"];
n72 [label="return _regex.Replace(word, _replacement);", span="93-93", cluster="Humanizer.InflectorExtensions.Rule.Apply(string)"];
n71 [label="return null;", span="90-90", cluster="Humanizer.InflectorExtensions.Rule.Apply(string)"];
n74 [label="Entry System.Text.RegularExpressions.Regex.IsMatch(string)", span="0-0", cluster="System.Text.RegularExpressions.Regex.IsMatch(string)"];
n73 [label="Exit Humanizer.InflectorExtensions.Rule.Apply(string)", span="86-86", cluster="Humanizer.InflectorExtensions.Rule.Apply(string)"];
n75 [label="Entry System.Text.RegularExpressions.Regex.Replace(string, string)", span="0-0", cluster="System.Text.RegularExpressions.Regex.Replace(string, string)"];
n76 [label="AddPlural(''('' + singular[0] + '')'' + singular.Substring(1) + ''$'', ''$1'' + plural.Substring(1))", span="99-99", cluster="Humanizer.InflectorExtensions.AddIrregular(string, string)"];
n77 [label="AddSingular(''('' + plural[0] + '')'' + plural.Substring(1) + ''$'', ''$1'' + singular.Substring(1))", span="100-100", cluster="Humanizer.InflectorExtensions.AddIrregular(string, string)"];
n79 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)"];
n78 [label="Exit Humanizer.InflectorExtensions.AddIrregular(string, string)", span="97-97", cluster="Humanizer.InflectorExtensions.AddIrregular(string, string)"];
n80 [label="Uncountables.Add(word.ToLower())", span="105-105", cluster="Humanizer.InflectorExtensions.AddUncountable(string)"];
n81 [label="Exit Humanizer.InflectorExtensions.AddUncountable(string)", span="103-103", cluster="Humanizer.InflectorExtensions.AddUncountable(string)"];
n82 [label="Entry string.ToLower()", span="0-0", cluster="string.ToLower()"];
n83 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)"];
n84 [label="Plurals.Add(new Rule(rule, replacement))", span="110-110", cluster="Humanizer.InflectorExtensions.AddPlural(string, string)"];
n85 [label="Exit Humanizer.InflectorExtensions.AddPlural(string, string)", span="108-108", cluster="Humanizer.InflectorExtensions.AddPlural(string, string)"];
n86 [label="Singulars.Add(new Rule(rule, replacement))", span="115-115", cluster="Humanizer.InflectorExtensions.AddSingular(string, string)"];
n87 [label="Exit Humanizer.InflectorExtensions.AddSingular(string, string)", span="113-113", cluster="Humanizer.InflectorExtensions.AddSingular(string, string)"];
n88 [label="Entry Humanizer.InflectorExtensions.Pluralize(string)", span="127-127", cluster="Humanizer.InflectorExtensions.Pluralize(string)"];
n89 [label="return ApplyRules(Plurals, word);", span="129-129", cluster="Humanizer.InflectorExtensions.Pluralize(string)", color=red, community=0];
n90 [label="Exit Humanizer.InflectorExtensions.Pluralize(string)", span="127-127", cluster="Humanizer.InflectorExtensions.Pluralize(string)"];
n91 [label="Entry Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", span="142-142", cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)"];
n92 [label="Entry Humanizer.InflectorExtensions.Singularize(string)", span="137-137", cluster="Humanizer.InflectorExtensions.Singularize(string)"];
n93 [label="return ApplyRules(Singulars, word);", span="139-139", cluster="Humanizer.InflectorExtensions.Singularize(string)", color=red, community=0];
n94 [label="Exit Humanizer.InflectorExtensions.Singularize(string)", span="137-137", cluster="Humanizer.InflectorExtensions.Singularize(string)"];
n95 [label="string result = word", span="144-144", cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", color=red, community=0];
n96 [label="!Uncountables.Contains(word.ToLower())", span="146-146", cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)"];
n97 [label="int i = rules.Count - 1", span="148-148", cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)"];
n99 [label="(result = rules[i].Apply(word)) != null", span="150-150", cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)"];
n101 [label="return result;", span="157-157", cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)"];
n103 [label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Contains(T)"];
n98 [label="i >= 0", span="148-148", cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)"];
n100 [label="i--", span="148-148", cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)"];
n102 [label="Exit Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", span="142-142", cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)"];
n104 [label="Entry Humanizer.InflectorExtensions.Titleize(string)", span="165-165", cluster="Humanizer.InflectorExtensions.Titleize(string)"];
n105 [label="return input.Humanize(LetterCasing.Title);", span="167-167", cluster="Humanizer.InflectorExtensions.Titleize(string)"];
n106 [label="Exit Humanizer.InflectorExtensions.Titleize(string)", span="165-165", cluster="Humanizer.InflectorExtensions.Titleize(string)"];
n107 [label="Entry string.Humanize(Humanizer.LetterCasing)", span="60-60", cluster="string.Humanize(Humanizer.LetterCasing)"];
n108 [label="Entry Humanizer.InflectorExtensions.Pascalize(string)", span="175-175", cluster="Humanizer.InflectorExtensions.Pascalize(string)"];
n109 [label="return Regex.Replace(input, ''(?:^|_)(.)'', match => match.Groups[1].Value.ToUpper());", span="177-177", cluster="Humanizer.InflectorExtensions.Pascalize(string)"];
n110 [label="Exit Humanizer.InflectorExtensions.Pascalize(string)", span="175-175", cluster="Humanizer.InflectorExtensions.Pascalize(string)"];
n111 [label="Entry System.Text.RegularExpressions.Regex.Replace(string, string, System.Text.RegularExpressions.MatchEvaluator)", span="0-0", cluster="System.Text.RegularExpressions.Regex.Replace(string, string, System.Text.RegularExpressions.MatchEvaluator)"];
n112 [label="Entry lambda expression", span="177-177", cluster="lambda expression"];
n113 [label="match.Groups[1].Value.ToUpper()", span="177-177", cluster="lambda expression"];
n114 [label="Exit lambda expression", span="177-177", cluster="lambda expression"];
n115 [label="Entry string.ToUpper()", span="0-0", cluster="string.ToUpper()"];
n116 [label="Entry Humanizer.InflectorExtensions.Camelize(string)", span="185-185", cluster="Humanizer.InflectorExtensions.Camelize(string)"];
n117 [label="string word = Pascalize(input)", span="187-187", cluster="Humanizer.InflectorExtensions.Camelize(string)"];
n118 [label="return word.Substring(0, 1).ToLower() + word.Substring(1);", span="188-188", cluster="Humanizer.InflectorExtensions.Camelize(string)"];
n119 [label="Exit Humanizer.InflectorExtensions.Camelize(string)", span="185-185", cluster="Humanizer.InflectorExtensions.Camelize(string)"];
n120 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)"];
n121 [label="Entry Humanizer.InflectorExtensions.Underscore(string)", span="196-196", cluster="Humanizer.InflectorExtensions.Underscore(string)"];
n122 [label="return Regex.Replace(\r\n                Regex.Replace(\r\n                    Regex.Replace(input, @''([A-Z]+)([A-Z][a-z])'', ''$1_$2''), @''([a-z\d])([A-Z])'', ''$1_$2''), @''[-\s]'', ''_'').ToLower();", span="198-200", cluster="Humanizer.InflectorExtensions.Underscore(string)"];
n123 [label="Exit Humanizer.InflectorExtensions.Underscore(string)", span="196-196", cluster="Humanizer.InflectorExtensions.Underscore(string)"];
n124 [label="Entry System.Text.RegularExpressions.Regex.Replace(string, string, string)", span="0-0", cluster="System.Text.RegularExpressions.Regex.Replace(string, string, string)"];
n125 [label="Entry Humanizer.InflectorExtensions.Dasherize(string)", span="208-208", cluster="Humanizer.InflectorExtensions.Dasherize(string)"];
n126 [label="return underscoredWord.Replace('_', '-');", span="210-210", cluster="Humanizer.InflectorExtensions.Dasherize(string)"];
n127 [label="Exit Humanizer.InflectorExtensions.Dasherize(string)", span="208-208", cluster="Humanizer.InflectorExtensions.Dasherize(string)"];
n128 [label="Entry string.Replace(char, char)", span="0-0", cluster="string.Replace(char, char)"];
m0_117 [label="Entry Humanizer.Tests.InflectorTests.Dasherize(string, string)", span="193-193", cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", file="InflectorTests.cs"];
m0_118 [label="Assert.Equal(input.Dasherize(), expectedOutput)", span="195-195", cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", file="InflectorTests.cs"];
m0_119 [label="Exit Humanizer.Tests.InflectorTests.Dasherize(string, string)", span="193-193", cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", file="InflectorTests.cs"];
m0_112 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="InflectorTests.cs"];
m0_125 [label="Entry Humanizer.Tests.InflectorTests.Camelize(string, string)", span="220-220", cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)", file="InflectorTests.cs"];
m0_126 [label="Assert.Equal(expectedOutput, input.Camelize())", span="222-222", cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)", file="InflectorTests.cs"];
m0_127 [label="Exit Humanizer.Tests.InflectorTests.Camelize(string, string)", span="220-220", cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)", file="InflectorTests.cs"];
m0_0 [label="Entry Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string)", span="4-4", cluster="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string)", file="InflectorTests.cs"];
m0_2 [label="Exit Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string)", span="4-4", cluster="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string)", color=green, community=0, file="InflectorTests.cs"];
m0_1 [label="return Convert(number, numberString, GrammaticalGender.Masculine);", span="6-6", cluster="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string)", file="InflectorTests.cs"];
m0_3 [label="Entry Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string, Humanizer.GrammaticalGender)", span="9-9", cluster="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string, Humanizer.GrammaticalGender)", file="InflectorTests.cs"];
m0_5 [label="return ''0'';", span="13-13", cluster="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string, Humanizer.GrammaticalGender)", file="InflectorTests.cs"];
m0_24 [label="Entry Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity()", span="57-57", cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity()", file="InflectorTests.cs"];
m0_25 [label=TestData, span="59-59", cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity()", color=green, community=0, file="InflectorTests.cs"];
m0_27 [label="Assert.Equal(pair.Key, pair.Value.Singularize(Plurality.CouldBeEither))", span="62-62", cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity()", color=green, community=0, file="InflectorTests.cs"];
m0_26 [label="Assert.Equal(pair.Key, pair.Key.Singularize(Plurality.CouldBeEither))", span="61-61", cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity()", color=green, community=0, file="InflectorTests.cs"];
m0_28 [label="Exit Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity()", span="57-57", cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity()", file="InflectorTests.cs"];
m0_129 [label="Entry Humanizer.Tests.InflectorTests.Underscore(string, string)", span="233-233", cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)", file="InflectorTests.cs"];
m0_130 [label="Assert.Equal(expectedOuput, input.Underscore())", span="235-235", cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)", file="InflectorTests.cs"];
m0_131 [label="Exit Humanizer.Tests.InflectorTests.Underscore(string, string)", span="233-233", cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)", file="InflectorTests.cs"];
m0_4 [label="number == 0", span="12-12", cluster="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string, Humanizer.GrammaticalGender)", file="InflectorTests.cs"];
m0_124 [label="Entry string.Pascalize()", span="223-223", cluster="string.Pascalize()", file="InflectorTests.cs"];
m0_113 [label="Entry Humanizer.Tests.InflectorTests.Titleize(string, string)", span="183-183", cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", file="InflectorTests.cs"];
m0_114 [label="Assert.Equal(expectedOuput, input.Titleize())", span="185-185", cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", file="InflectorTests.cs"];
m0_115 [label="Exit Humanizer.Tests.InflectorTests.Titleize(string, string)", span="183-183", cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", file="InflectorTests.cs"];
m0_116 [label="Entry string.Titleize()", span="213-213", cluster="string.Titleize()", file="InflectorTests.cs"];
m0_20 [label="Entry Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord()", span="48-48", cluster="Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord()", file="InflectorTests.cs"];
m0_21 [label=TestData, span="50-50", cluster="Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord()", color=green, community=0, file="InflectorTests.cs"];
m0_22 [label="Assert.Equal(pair.Key, pair.Key.Singularize(Plurality.Singular))", span="52-52", cluster="Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord()", color=green, community=0, file="InflectorTests.cs"];
m0_23 [label="Exit Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord()", span="48-48", cluster="Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord()", file="InflectorTests.cs"];
m0_120 [label="Entry string.Dasherize()", span="256-256", cluster="string.Dasherize()", file="InflectorTests.cs"];
m0_15 [label="Entry Humanizer.Tests.InflectorTests.Singularize()", span="39-39", cluster="Humanizer.Tests.InflectorTests.Singularize()", file="InflectorTests.cs"];
m0_17 [label="Assert.Equal(pair.Key, pair.Value.Singularize())", span="43-43", cluster="Humanizer.Tests.InflectorTests.Singularize()", color=green, community=0, file="InflectorTests.cs"];
m0_16 [label=TestData, span="41-41", cluster="Humanizer.Tests.InflectorTests.Singularize()", file="InflectorTests.cs"];
m0_18 [label="Exit Humanizer.Tests.InflectorTests.Singularize()", span="39-39", cluster="Humanizer.Tests.InflectorTests.Singularize()", file="InflectorTests.cs"];
m0_121 [label="Entry Humanizer.Tests.InflectorTests.Pascalize(string, string)", span="206-206", cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", file="InflectorTests.cs"];
m0_122 [label="Assert.Equal(expectedOutput, input.Pascalize())", span="208-208", cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", file="InflectorTests.cs"];
m0_123 [label="Exit Humanizer.Tests.InflectorTests.Pascalize(string, string)", span="206-206", cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", file="InflectorTests.cs"];
m0_29 [label="Entry Humanizer.Tests.InflectorTests.InflectorTests()", span="66-66", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_30 [label="TestData.Add(''search'', ''searches'')", span="68-68", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_31 [label="TestData.Add(''switch'', ''switches'')", span="69-69", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_32 [label="TestData.Add(''fix'', ''fixes'')", span="70-70", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_33 [label="TestData.Add(''box'', ''boxes'')", span="71-71", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_34 [label="TestData.Add(''process'', ''processes'')", span="72-72", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_35 [label="TestData.Add(''address'', ''addresses'')", span="73-73", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_36 [label="TestData.Add(''case'', ''cases'')", span="74-74", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_37 [label="TestData.Add(''stack'', ''stacks'')", span="75-75", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_38 [label="TestData.Add(''wish'', ''wishes'')", span="76-76", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_39 [label="TestData.Add(''fish'', ''fish'')", span="77-77", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_40 [label="TestData.Add(''category'', ''categories'')", span="79-79", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_41 [label="TestData.Add(''query'', ''queries'')", span="80-80", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_42 [label="TestData.Add(''ability'', ''abilities'')", span="81-81", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_43 [label="TestData.Add(''agency'', ''agencies'')", span="82-82", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_44 [label="TestData.Add(''movie'', ''movies'')", span="83-83", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_45 [label="TestData.Add(''archive'', ''archives'')", span="85-85", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_46 [label="TestData.Add(''index'', ''indices'')", span="87-87", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_47 [label="TestData.Add(''wife'', ''wives'')", span="89-89", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_48 [label="TestData.Add(''safe'', ''saves'')", span="90-90", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_49 [label="TestData.Add(''half'', ''halves'')", span="91-91", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_50 [label="TestData.Add(''move'', ''moves'')", span="93-93", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_51 [label="TestData.Add(''salesperson'', ''salespeople'')", span="95-95", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_52 [label="TestData.Add(''person'', ''people'')", span="96-96", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_53 [label="TestData.Add(''spokesman'', ''spokesmen'')", span="98-98", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_54 [label="TestData.Add(''man'', ''men'')", span="99-99", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_55 [label="TestData.Add(''woman'', ''women'')", span="100-100", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_56 [label="TestData.Add(''basis'', ''bases'')", span="102-102", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_57 [label="TestData.Add(''diagnosis'', ''diagnoses'')", span="103-103", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_58 [label="TestData.Add(''datum'', ''data'')", span="105-105", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_59 [label="TestData.Add(''medium'', ''media'')", span="106-106", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_60 [label="TestData.Add(''analysis'', ''analyses'')", span="107-107", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_61 [label="TestData.Add(''node_child'', ''node_children'')", span="109-109", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_62 [label="TestData.Add(''child'', ''children'')", span="110-110", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_63 [label="TestData.Add(''experience'', ''experiences'')", span="112-112", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_64 [label="TestData.Add(''day'', ''days'')", span="113-113", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_65 [label="TestData.Add(''comment'', ''comments'')", span="115-115", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_66 [label="TestData.Add(''foobar'', ''foobars'')", span="116-116", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_67 [label="TestData.Add(''newsletter'', ''newsletters'')", span="117-117", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_68 [label="TestData.Add(''old_news'', ''old_news'')", span="119-119", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_69 [label="TestData.Add(''news'', ''news'')", span="120-120", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_70 [label="TestData.Add(''series'', ''series'')", span="122-122", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_71 [label="TestData.Add(''species'', ''species'')", span="123-123", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_72 [label="TestData.Add(''quiz'', ''quizzes'')", span="125-125", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_73 [label="TestData.Add(''perspective'', ''perspectives'')", span="127-127", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_74 [label="TestData.Add(''ox'', ''oxen'')", span="129-129", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_75 [label="TestData.Add(''photo'', ''photos'')", span="130-130", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_76 [label="TestData.Add(''buffalo'', ''buffaloes'')", span="131-131", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_77 [label="TestData.Add(''tomato'', ''tomatoes'')", span="132-132", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_78 [label="TestData.Add(''dwarf'', ''dwarves'')", span="133-133", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_79 [label="TestData.Add(''elf'', ''elves'')", span="134-134", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_80 [label="TestData.Add(''information'', ''information'')", span="135-135", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_81 [label="TestData.Add(''equipment'', ''equipment'')", span="136-136", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_82 [label="TestData.Add(''bus'', ''buses'')", span="137-137", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_83 [label="TestData.Add(''status'', ''statuses'')", span="138-138", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_84 [label="TestData.Add(''status_code'', ''status_codes'')", span="139-139", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_85 [label="TestData.Add(''mouse'', ''mice'')", span="140-140", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_86 [label="TestData.Add(''louse'', ''lice'')", span="142-142", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_87 [label="TestData.Add(''house'', ''houses'')", span="143-143", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_88 [label="TestData.Add(''octopus'', ''octopi'')", span="144-144", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_89 [label="TestData.Add(''virus'', ''viri'')", span="145-145", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_90 [label="TestData.Add(''alias'', ''aliases'')", span="146-146", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_91 [label="TestData.Add(''portfolio'', ''portfolios'')", span="147-147", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_92 [label="TestData.Add(''vertex'', ''vertices'')", span="149-149", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_93 [label="TestData.Add(''matrix'', ''matrices'')", span="150-150", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_94 [label="TestData.Add(''axis'', ''axes'')", span="152-152", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_95 [label="TestData.Add(''testis'', ''testes'')", span="153-153", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_96 [label="TestData.Add(''crisis'', ''crises'')", span="154-154", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_97 [label="TestData.Add(''rice'', ''rice'')", span="156-156", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_98 [label="TestData.Add(''shoe'', ''shoes'')", span="157-157", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_99 [label="TestData.Add(''horse'', ''horses'')", span="159-159", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_100 [label="TestData.Add(''prize'', ''prizes'')", span="160-160", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_101 [label="TestData.Add(''edge'', ''edges'')", span="161-161", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_102 [label="TestData.Add(''goose'', ''geese'')", span="164-164", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_103 [label="TestData.Add(''deer'', ''deer'')", span="165-165", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_104 [label="TestData.Add(''sheep'', ''sheep'')", span="166-166", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_105 [label="TestData.Add(''wolf'', ''wolves'')", span="167-167", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_106 [label="TestData.Add(''volcano'', ''volcanoes'')", span="168-168", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_107 [label="TestData.Add(''aircraft'', ''aircraft'')", span="169-169", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_108 [label="TestData.Add(''alumna'', ''alumnae'')", span="170-170", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_109 [label="TestData.Add(''alumnus'', ''alumni'')", span="171-171", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_110 [label="TestData.Add(''fungus'', ''fungi'')", span="172-172", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_111 [label="Exit Humanizer.Tests.InflectorTests.InflectorTests()", span="66-66", cluster="Humanizer.Tests.InflectorTests.InflectorTests()", file="InflectorTests.cs"];
m0_10 [label="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer", span="", cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality()", file="InflectorTests.cs"];
m0_11 [label=TestData, span="31-31", cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality()", color=green, community=0, file="InflectorTests.cs"];
m0_13 [label="Assert.Equal(pair.Value, pair.Key.Pluralize(Plurality.CouldBeEither))", span="34-34", cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality()", color=green, community=0, file="InflectorTests.cs"];
m0_12 [label="Assert.Equal(pair.Value, pair.Value.Pluralize(Plurality.CouldBeEither))", span="33-33", cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality()", color=green, community=0, file="InflectorTests.cs"];
m0_14 [label="Exit Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality()", span="29-29", cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality()", file="InflectorTests.cs"];
m0_128 [label="Entry string.Camelize()", span="233-233", cluster="string.Camelize()", file="InflectorTests.cs"];
m0_132 [label="Entry string.Underscore()", span="244-244", cluster="string.Underscore()", file="InflectorTests.cs"];
m0_6 [label="Entry Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord()", span="20-20", cluster="Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord()", color=red, community=0, file="InflectorTests.cs"];
m0_7 [label=TestData, span="22-22", cluster="Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord()", file="InflectorTests.cs", color=green, community=0];
m0_8 [label="Assert.Equal(pair.Value, pair.Value.Pluralize(Plurality.Plural))", span="24-24", cluster="Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord()", file="InflectorTests.cs", color=green, community=0];
m0_9 [label="Exit Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord()", span="20-20", cluster="Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord()", file="InflectorTests.cs"];
m0_19 [label="Entry string.Singularize(Humanizer.Plurality)", span="171-171", cluster="string.Singularize(Humanizer.Plurality)", file="InflectorTests.cs"];
m0_133 [label="Humanizer.Tests.InflectorTests", span="", file="InflectorTests.cs"];
m2_4 [label="Entry Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", span="15-15", cluster="Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", file="ToQuantityTests.cs"];
m2_5 [label="return date.At(0);", span="17-17", cluster="Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", color=green, community=0, file="ToQuantityTests.cs"];
m2_6 [label="Exit Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", span="15-15", cluster="Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", file="ToQuantityTests.cs"];
m2_8 [label="Entry Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", span="25-25", cluster="Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", file="ToQuantityTests.cs"];
m2_9 [label="return date.At(12);", span="27-27", cluster="Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", file="ToQuantityTests.cs"];
m2_10 [label="Exit Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", span="25-25", cluster="Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", file="ToQuantityTests.cs"];
m2_7 [label="Entry System.DateTime.At(int, int, int, int)", span="5-5", cluster="System.DateTime.At(int, int, int, int)", file="ToQuantityTests.cs"];
m2_0 [label="Entry Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", span="5-5", cluster="Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", file="ToQuantityTests.cs"];
m2_1 [label="return new DateTime(date.Year, date.Month, date.Day, hour, min, second, millisecond);", span="7-7", cluster="Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", color=green, community=0, file="ToQuantityTests.cs"];
m2_2 [label="Exit Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", span="5-5", cluster="Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", file="ToQuantityTests.cs"];
m2_11 [label="Entry Humanizer.PrepositionsExtensions.In(System.DateTime, int)", span="36-36", cluster="Humanizer.PrepositionsExtensions.In(System.DateTime, int)", file="ToQuantityTests.cs"];
m2_12 [label="return new DateTime(year, date.Month, date.Day, date.Hour, date.Minute, date.Second, date.Millisecond);", span="38-38", cluster="Humanizer.PrepositionsExtensions.In(System.DateTime, int)", file="ToQuantityTests.cs"];
m2_13 [label="Exit Humanizer.PrepositionsExtensions.In(System.DateTime, int)", span="36-36", cluster="Humanizer.PrepositionsExtensions.In(System.DateTime, int)", file="ToQuantityTests.cs"];
m2_3 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, int)", file="ToQuantityTests.cs"];
n129 -> n65  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.InflectorExtensions.Rule"];
n129 -> n66  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.InflectorExtensions.Rule"];
n129 -> n70  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.InflectorExtensions.Rule"];
n129 -> n72  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.InflectorExtensions.Rule"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n60  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n60  [key=2, style=dotted];
n60 -> n84  [key=0, style=solid];
n60 -> n1  [key=3, color=darkorchid, style=bold, label="Parameter variable string replacement"];
n60 -> n2  [key=3, color=darkorchid, style=bold, label="Parameter variable string rule"];
n60 -> n3  [key=3, color=darkorchid, style=bold, label="Parameter variable string replacement"];
n60 -> n4  [key=3, color=darkorchid, style=bold, label="Parameter variable string replacement"];
n60 -> n5  [key=3, color=darkorchid, style=bold, label="Parameter variable string rule"];
n60 -> n6  [key=3, color=darkorchid, style=bold, label="Parameter variable string replacement"];
n60 -> n7  [key=3, color=darkorchid, style=bold, label="Parameter variable string replacement"];
n60 -> n8  [key=3, color=darkorchid, style=bold, label="Parameter variable string replacement"];
n60 -> n9  [key=3, color=darkorchid, style=bold, label="Parameter variable string replacement"];
n60 -> n10  [key=3, color=darkorchid, style=bold, label="Parameter variable string replacement"];
n60 -> n11  [key=3, color=darkorchid, style=bold, label="Parameter variable string replacement"];
n60 -> n12  [key=3, color=darkorchid, style=bold, label="Parameter variable string replacement"];
n60 -> n13  [key=3, color=darkorchid, style=bold, label="Parameter variable string rule"];
n60 -> n14  [key=3, color=darkorchid, style=bold, label="Parameter variable string replacement"];
n60 -> n15  [key=3, color=darkorchid, style=bold, label="Parameter variable string replacement"];
n60 -> n16  [key=3, color=darkorchid, style=bold, label="Parameter variable string replacement"];
n60 -> n17  [key=3, color=darkorchid, style=bold, label="Parameter variable string replacement"];
n3 -> n4  [key=0, style=solid];
n3 -> n60  [key=2, style=dotted];
n4 -> n5  [key=0, style=solid];
n4 -> n60  [key=2, style=dotted];
n5 -> n6  [key=0, style=solid];
n5 -> n60  [key=2, style=dotted];
n6 -> n7  [key=0, style=solid];
n6 -> n60  [key=2, style=dotted];
n7 -> n8  [key=0, style=solid];
n7 -> n60  [key=2, style=dotted];
n8 -> n9  [key=0, style=solid];
n8 -> n60  [key=2, style=dotted];
n9 -> n10  [key=0, style=solid];
n9 -> n60  [key=2, style=dotted];
n10 -> n11  [key=0, style=solid];
n10 -> n60  [key=2, style=dotted];
n11 -> n12  [key=0, style=solid];
n11 -> n60  [key=2, style=dotted];
n12 -> n13  [key=0, style=solid];
n12 -> n60  [key=2, style=dotted];
n13 -> n14  [key=0, style=solid];
n13 -> n60  [key=2, style=dotted];
n14 -> n15  [key=0, style=solid];
n14 -> n60  [key=2, style=dotted];
n15 -> n16  [key=0, style=solid];
n15 -> n60  [key=2, style=dotted];
n16 -> n17  [key=0, style=solid];
n16 -> n60  [key=2, style=dotted];
n17 -> n18  [key=0, style=solid];
n17 -> n60  [key=2, style=dotted];
n18 -> n19  [key=0, style=solid];
n18 -> n61  [key=2, style=dotted];
n19 -> n20  [key=0, style=solid];
n19 -> n61  [key=2, style=dotted];
n61 -> n86  [key=0, style=solid];
n61 -> n2  [key=3, color=darkorchid, style=bold, label="Parameter variable string rule"];
n61 -> n19  [key=3, color=darkorchid, style=bold, label="Parameter variable string replacement"];
n61 -> n20  [key=3, color=darkorchid, style=bold, label="Parameter variable string replacement"];
n61 -> n21  [key=3, color=darkorchid, style=bold, label="Parameter variable string replacement"];
n61 -> n22  [key=3, color=darkorchid, style=bold, label="Parameter variable string replacement"];
n61 -> n23  [key=3, color=darkorchid, style=bold, label="Parameter variable string replacement"];
n61 -> n24  [key=3, color=darkorchid, style=bold, label="Parameter variable string replacement"];
n61 -> n25  [key=3, color=darkorchid, style=bold, label="Parameter variable string rule"];
n61 -> n26  [key=3, color=darkorchid, style=bold, label="Parameter variable string replacement"];
n61 -> n27  [key=3, color=darkorchid, style=bold, label="Parameter variable string replacement"];
n61 -> n28  [key=3, color=darkorchid, style=bold, label="Parameter variable string replacement"];
n61 -> n29  [key=3, color=darkorchid, style=bold, label="Parameter variable string replacement"];
n61 -> n30  [key=3, color=darkorchid, style=bold, label="Parameter variable string rule"];
n61 -> n31  [key=3, color=darkorchid, style=bold, label="Parameter variable string replacement"];
n61 -> n32  [key=3, color=darkorchid, style=bold, label="Parameter variable string rule"];
n61 -> n33  [key=3, color=darkorchid, style=bold, label="Parameter variable string rule"];
n61 -> n34  [key=3, color=darkorchid, style=bold, label="Parameter variable string rule"];
n61 -> n35  [key=3, color=darkorchid, style=bold, label="Parameter variable string replacement"];
n61 -> n36  [key=3, color=darkorchid, style=bold, label="Parameter variable string replacement"];
n61 -> n37  [key=3, color=darkorchid, style=bold, label="Parameter variable string rule"];
n61 -> n38  [key=3, color=darkorchid, style=bold, label="Parameter variable string rule"];
n61 -> n39  [key=3, color=darkorchid, style=bold, label="Parameter variable string replacement"];
n61 -> n40  [key=3, color=darkorchid, style=bold, label="Parameter variable string replacement"];
n61 -> n41  [key=3, color=darkorchid, style=bold, label="Parameter variable string rule"];
n61 -> n18  [key=3, color=darkorchid, style=bold, label="Parameter variable string replacement"];
n20 -> n21  [key=0, style=solid];
n20 -> n61  [key=2, style=dotted];
n21 -> n22  [key=0, style=solid];
n21 -> n61  [key=2, style=dotted];
n22 -> n23  [key=0, style=solid];
n22 -> n61  [key=2, style=dotted];
n23 -> n24  [key=0, style=solid];
n23 -> n61  [key=2, style=dotted];
n24 -> n25  [key=0, style=solid];
n24 -> n61  [key=2, style=dotted];
n25 -> n26  [key=0, style=solid];
n25 -> n61  [key=2, style=dotted];
n26 -> n27  [key=0, style=solid];
n26 -> n61  [key=2, style=dotted];
n27 -> n28  [key=0, style=solid];
n27 -> n61  [key=2, style=dotted];
n28 -> n29  [key=0, style=solid];
n28 -> n61  [key=2, style=dotted];
n29 -> n30  [key=0, style=solid];
n29 -> n61  [key=2, style=dotted];
n30 -> n31  [key=0, style=solid];
n30 -> n61  [key=2, style=dotted];
n31 -> n32  [key=0, style=solid];
n31 -> n61  [key=2, style=dotted];
n32 -> n33  [key=0, style=solid];
n32 -> n61  [key=2, style=dotted];
n33 -> n34  [key=0, style=solid];
n33 -> n61  [key=2, style=dotted];
n34 -> n35  [key=0, style=solid];
n34 -> n61  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid];
n35 -> n61  [key=2, style=dotted];
n36 -> n37  [key=0, style=solid];
n36 -> n61  [key=2, style=dotted];
n37 -> n38  [key=0, style=solid];
n37 -> n61  [key=2, style=dotted];
n38 -> n39  [key=0, style=solid];
n38 -> n61  [key=2, style=dotted];
n39 -> n40  [key=0, style=solid];
n39 -> n61  [key=2, style=dotted];
n40 -> n41  [key=0, style=solid];
n40 -> n61  [key=2, style=dotted];
n41 -> n42  [key=0, style=solid];
n41 -> n61  [key=2, style=dotted];
n42 -> n43  [key=0, style=solid];
n42 -> n62  [key=2, style=dotted];
n43 -> n44  [key=0, style=solid];
n43 -> n62  [key=2, style=dotted];
n62 -> n76  [key=0, style=solid];
n62 -> n77  [key=1, style=dashed, color=darkseagreen4, label=string];
n62 -> n42  [key=3, color=darkorchid, style=bold, label="Parameter variable string plural"];
n62 -> n43  [key=3, color=darkorchid, style=bold, label="Parameter variable string plural"];
n62 -> n44  [key=3, color=darkorchid, style=bold, label="Parameter variable string plural"];
n62 -> n45  [key=3, color=darkorchid, style=bold, label="Parameter variable string plural"];
n62 -> n46  [key=3, color=darkorchid, style=bold, label="Parameter variable string plural"];
n62 -> n47  [key=3, color=darkorchid, style=bold, label="Parameter variable string plural"];
n62 -> n48  [key=3, color=darkorchid, style=bold, label="Parameter variable string plural"];
n44 -> n45  [key=0, style=solid];
n44 -> n62  [key=2, style=dotted];
n45 -> n46  [key=0, style=solid];
n45 -> n62  [key=2, style=dotted];
n46 -> n47  [key=0, style=solid];
n46 -> n62  [key=2, style=dotted];
n47 -> n48  [key=0, style=solid];
n47 -> n62  [key=2, style=dotted];
n48 -> n49  [key=0, style=solid];
n48 -> n62  [key=2, style=dotted];
n49 -> n50  [key=0, style=solid];
n49 -> n63  [key=2, style=dotted];
n50 -> n51  [key=0, style=solid];
n50 -> n63  [key=2, style=dotted];
n63 -> n80  [key=0, style=solid];
n63 -> n49  [key=3, color=darkorchid, style=bold, label="Parameter variable string word"];
n63 -> n50  [key=3, color=darkorchid, style=bold, label="Parameter variable string word"];
n63 -> n51  [key=3, color=darkorchid, style=bold, label="Parameter variable string word"];
n63 -> n52  [key=3, color=darkorchid, style=bold, label="Parameter variable string word"];
n63 -> n53  [key=3, color=darkorchid, style=bold, label="Parameter variable string word"];
n63 -> n54  [key=3, color=darkorchid, style=bold, label="Parameter variable string word"];
n63 -> n55  [key=3, color=darkorchid, style=bold, label="Parameter variable string word"];
n63 -> n56  [key=3, color=darkorchid, style=bold, label="Parameter variable string word"];
n63 -> n57  [key=3, color=darkorchid, style=bold, label="Parameter variable string word"];
n63 -> n58  [key=3, color=darkorchid, style=bold, label="Parameter variable string word"];
n51 -> n52  [key=0, style=solid];
n51 -> n63  [key=2, style=dotted];
n52 -> n53  [key=0, style=solid];
n52 -> n63  [key=2, style=dotted];
n53 -> n54  [key=0, style=solid];
n53 -> n63  [key=2, style=dotted];
n54 -> n55  [key=0, style=solid];
n54 -> n63  [key=2, style=dotted];
n55 -> n56  [key=0, style=solid];
n55 -> n63  [key=2, style=dotted];
n56 -> n57  [key=0, style=solid];
n56 -> n63  [key=2, style=dotted];
n57 -> n58  [key=0, style=solid];
n57 -> n63  [key=2, style=dotted];
n58 -> n59  [key=0, style=solid];
n58 -> n63  [key=2, style=dotted];
n59 -> n0  [key=0, style=bold, color=blue];
n64 -> n65  [key=0, style=solid];
n64 -> n66  [key=1, style=dashed, color=darkseagreen4, label=string];
n65 -> n66  [key=0, style=solid];
n65 -> n68  [key=2, style=dotted];
n66 -> n67  [key=0, style=solid];
n67 -> n64  [key=0, style=bold, color=blue];
n69 -> n70  [key=0, style=solid];
n69 -> n72  [key=1, style=dashed, color=darkseagreen4, label=string];
n69 -> n71  [key=3, color=darkorchid, style=bold, label="method methodReturn string Apply"];
n69 -> n91  [key=3, color=darkorchid, style=bold, label="Parameter variable string word"];
n70 -> n71  [key=0, style=solid];
n70 -> n72  [key=0, style=solid];
n70 -> n74  [key=2, style=dotted];
n72 -> n73  [key=0, style=solid];
n72 -> n75  [key=2, style=dotted];
n71 -> n73  [key=0, style=solid];
n73 -> n69  [key=0, style=bold, color=blue];
n76 -> n77  [key=0, style=solid];
n76 -> n79  [key=2, style=dotted];
n76 -> n60  [key=2, style=dotted];
n77 -> n78  [key=0, style=solid];
n77 -> n79  [key=2, style=dotted];
n77 -> n61  [key=2, style=dotted];
n78 -> n62  [key=0, style=bold, color=blue];
n80 -> n81  [key=0, style=solid];
n80 -> n82  [key=2, style=dotted];
n80 -> n83  [key=2, style=dotted];
n81 -> n63  [key=0, style=bold, color=blue];
n84 -> n85  [key=0, style=solid];
n84 -> n64  [key=2, style=dotted];
n84 -> n83  [key=2, style=dotted];
n85 -> n60  [key=0, style=bold, color=blue];
n86 -> n87  [key=0, style=solid];
n86 -> n64  [key=2, style=dotted];
n86 -> n83  [key=2, style=dotted];
n87 -> n61  [key=0, style=bold, color=blue];
n88 -> n89  [key=0, style=solid, color=red];
n88 -> n91  [key=3, color=darkorchid, style=bold, label="method methodReturn string Pluralize"];
n89 -> n90  [key=0, style=solid, color=red];
n89 -> n91  [key=2, style=dotted, color=red];
n90 -> n88  [key=0, style=bold, color=blue];
n91 -> n95  [key=0, style=solid, color=red];
n91 -> n96  [key=1, style=dashed, color=darkseagreen4, label=string];
n91 -> n97  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>"];
n91 -> n99  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>"];
n91 -> n88  [key=3, color=darkorchid, style=bold, label="Parameter variable string word"];
n91 -> n92  [key=3, color=darkorchid, style=bold, label="Parameter variable string word"];
n92 -> n93  [key=0, style=solid, color=red];
n92 -> n91  [key=3, color=darkorchid, style=bold, label="method methodReturn string Singularize"];
n93 -> n94  [key=0, style=solid, color=red];
n93 -> n91  [key=2, style=dotted, color=red];
n94 -> n92  [key=0, style=bold, color=blue];
n95 -> n96  [key=0, style=solid, color=red];
n95 -> n101  [key=1, style=dashed, color=red, label=result];
n95 -> n91  [key=3, color=red, style=bold, label="Local variable string result"];
n95 -> n69  [key=3, color=red, style=bold, label="Local variable string result"];
n96 -> n97  [key=0, style=solid];
n96 -> n101  [key=0, style=solid];
n96 -> n82  [key=2, style=dotted];
n96 -> n103  [key=2, style=dotted];
n97 -> n98  [key=0, style=solid];
n97 -> n99  [key=1, style=dashed, color=darkseagreen4, label=i];
n97 -> n100  [key=1, style=dashed, color=darkseagreen4, label=i];
n99 -> n100  [key=0, style=solid];
n99 -> n101  [key=0, style=solid];
n99 -> n69  [key=2, style=dotted];
n101 -> n102  [key=0, style=solid];
n98 -> n99  [key=0, style=solid];
n98 -> n101  [key=0, style=solid];
n100 -> n98  [key=0, style=solid];
n100 -> n100  [key=1, style=dashed, color=darkseagreen4, label=i];
n102 -> n91  [key=0, style=bold, color=blue];
n104 -> n105  [key=0, style=solid];
n105 -> n106  [key=0, style=solid];
n105 -> n107  [key=2, style=dotted];
n106 -> n104  [key=0, style=bold, color=blue];
n108 -> n109  [key=0, style=solid];
n108 -> n116  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
n109 -> n110  [key=0, style=solid];
n109 -> n111  [key=2, style=dotted];
n109 -> n112  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n110 -> n108  [key=0, style=bold, color=blue];
n112 -> n113  [key=0, style=solid];
n113 -> n114  [key=0, style=solid];
n113 -> n115  [key=2, style=dotted];
n114 -> n112  [key=0, style=bold, color=blue];
n116 -> n117  [key=0, style=solid];
n117 -> n118  [key=0, style=solid];
n117 -> n108  [key=2, style=dotted];
n118 -> n119  [key=0, style=solid];
n118 -> n120  [key=2, style=dotted];
n118 -> n82  [key=2, style=dotted];
n118 -> n79  [key=2, style=dotted];
n119 -> n116  [key=0, style=bold, color=blue];
n121 -> n122  [key=0, style=solid];
n122 -> n123  [key=0, style=solid];
n122 -> n124  [key=2, style=dotted];
n122 -> n82  [key=2, style=dotted];
n123 -> n121  [key=0, style=bold, color=blue];
n125 -> n126  [key=0, style=solid];
n126 -> n127  [key=0, style=solid];
n126 -> n128  [key=2, style=dotted];
n127 -> n125  [key=0, style=bold, color=blue];
m0_117 -> m0_118  [key=0, style=solid];
m0_118 -> m0_5  [key=2, style=dotted];
m0_118 -> m0_119  [key=0, style=solid];
m0_118 -> m0_120  [key=2, style=dotted];
m0_119 -> m0_117  [key=0, style=bold, color=blue];
m0_125 -> m0_126  [key=0, style=solid];
m0_126 -> m0_5  [key=2, style=dotted];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_128  [key=2, style=dotted];
m0_127 -> m0_125  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_2 -> m0_2  [key=1, style=dashed, color=green, label=pair];
m0_2 -> m0_1  [key=0, style=solid, color=green];
m0_2 -> m0_4  [key=2, style=dotted, color=green];
m0_2 -> m0_5  [key=2, style=dotted, color=green];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_1 -> m0_2  [key=0, style=solid, color=green];
m0_1 -> m0_3  [key=0, style=solid];
m0_3 -> m0_0  [key=0, style=bold, color=blue];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_6  [key=1, style=dashed, color=red, label="Humanizer.GrammaticalGender"];
m0_3 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_3 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_5 -> m0_9  [key=0, style=solid];
m0_24 -> m0_25  [key=0, style=solid, color=green];
m0_25 -> m0_26  [key=0, style=solid, color=green];
m0_25 -> m0_28  [key=0, style=solid, color=green];
m0_27 -> m0_25  [key=0, style=solid, color=green];
m0_27 -> m0_27  [key=1, style=dashed, color=green, label=pair];
m0_27 -> m0_19  [key=2, style=dotted, color=green];
m0_27 -> m0_5  [key=2, style=dotted, color=green];
m0_26 -> m0_26  [key=1, style=dashed, color=green, label=pair];
m0_26 -> m0_27  [key=0, style=solid, color=green];
m0_26 -> m0_19  [key=2, style=dotted, color=green];
m0_26 -> m0_5  [key=2, style=dotted, color=green];
m0_28 -> m0_24  [key=0, style=bold, color=blue];
m0_129 -> m0_130  [key=0, style=solid];
m0_130 -> m0_5  [key=2, style=dotted];
m0_130 -> m0_131  [key=0, style=solid];
m0_130 -> m0_132  [key=2, style=dotted];
m0_131 -> m0_129  [key=0, style=bold, color=blue];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_6  [key=0, style=solid, color=red];
m0_113 -> m0_114  [key=0, style=solid];
m0_114 -> m0_5  [key=2, style=dotted];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_116  [key=2, style=dotted];
m0_115 -> m0_113  [key=0, style=bold, color=blue];
m0_20 -> m0_21  [key=0, style=solid, color=green];
m0_21 -> m0_22  [key=0, style=solid, color=green];
m0_21 -> m0_23  [key=0, style=solid, color=green];
m0_22 -> m0_21  [key=0, style=solid, color=green];
m0_22 -> m0_22  [key=1, style=dashed, color=green, label=pair];
m0_22 -> m0_19  [key=2, style=dotted, color=green];
m0_22 -> m0_5  [key=2, style=dotted, color=green];
m0_23 -> m0_20  [key=0, style=bold, color=blue];
m0_15 -> m0_16  [key=0, style=solid];
m0_17 -> m0_17  [key=1, style=dashed, color=green, label=pair];
m0_17 -> m0_16  [key=0, style=solid, color=green];
m0_17 -> m0_19  [key=2, style=dotted, color=green];
m0_17 -> m0_5  [key=2, style=dotted, color=green];
m0_16 -> m0_17  [key=0, style=solid, color=green];
m0_16 -> m0_18  [key=0, style=solid];
m0_18 -> m0_15  [key=0, style=bold, color=blue];
m0_121 -> m0_122  [key=0, style=solid];
m0_122 -> m0_5  [key=2, style=dotted];
m0_122 -> m0_123  [key=0, style=solid];
m0_122 -> m0_124  [key=2, style=dotted];
m0_123 -> m0_121  [key=0, style=bold, color=blue];
m0_29 -> m0_30  [key=0, style=solid];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_112  [key=2, style=dotted];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_112  [key=2, style=dotted];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_112  [key=2, style=dotted];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_112  [key=2, style=dotted];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_112  [key=2, style=dotted];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_112  [key=2, style=dotted];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_112  [key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_112  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_112  [key=2, style=dotted];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_112  [key=2, style=dotted];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_112  [key=2, style=dotted];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_112  [key=2, style=dotted];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_112  [key=2, style=dotted];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_112  [key=2, style=dotted];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_112  [key=2, style=dotted];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_112  [key=2, style=dotted];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_112  [key=2, style=dotted];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_112  [key=2, style=dotted];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_112  [key=2, style=dotted];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_112  [key=2, style=dotted];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_112  [key=2, style=dotted];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_112  [key=2, style=dotted];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_112  [key=2, style=dotted];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_112  [key=2, style=dotted];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_112  [key=2, style=dotted];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_112  [key=2, style=dotted];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_112  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_112  [key=2, style=dotted];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_112  [key=2, style=dotted];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_112  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_112  [key=2, style=dotted];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_112  [key=2, style=dotted];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_112  [key=2, style=dotted];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_112  [key=2, style=dotted];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_112  [key=2, style=dotted];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_112  [key=2, style=dotted];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_112  [key=2, style=dotted];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_112  [key=2, style=dotted];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_112  [key=2, style=dotted];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_112  [key=2, style=dotted];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_112  [key=2, style=dotted];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_112  [key=2, style=dotted];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_112  [key=2, style=dotted];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_112  [key=2, style=dotted];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_112  [key=2, style=dotted];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_112  [key=2, style=dotted];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_112  [key=2, style=dotted];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_112  [key=2, style=dotted];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_112  [key=2, style=dotted];
m0_79 -> m0_80  [key=0, style=solid];
m0_79 -> m0_112  [key=2, style=dotted];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_112  [key=2, style=dotted];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_112  [key=2, style=dotted];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_112  [key=2, style=dotted];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_112  [key=2, style=dotted];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_112  [key=2, style=dotted];
m0_85 -> m0_86  [key=0, style=solid];
m0_85 -> m0_112  [key=2, style=dotted];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_112  [key=2, style=dotted];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_112  [key=2, style=dotted];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_112  [key=2, style=dotted];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_112  [key=2, style=dotted];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_112  [key=2, style=dotted];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_112  [key=2, style=dotted];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_112  [key=2, style=dotted];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_112  [key=2, style=dotted];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_112  [key=2, style=dotted];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_112  [key=2, style=dotted];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_112  [key=2, style=dotted];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_112  [key=2, style=dotted];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_112  [key=2, style=dotted];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_112  [key=2, style=dotted];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_112  [key=2, style=dotted];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_112  [key=2, style=dotted];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_112  [key=2, style=dotted];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_112  [key=2, style=dotted];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_112  [key=2, style=dotted];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_112  [key=2, style=dotted];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_112  [key=2, style=dotted];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_112  [key=2, style=dotted];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_112  [key=2, style=dotted];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_112  [key=2, style=dotted];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_112  [key=2, style=dotted];
m0_111 -> m0_29  [key=0, style=bold, color=blue];
m0_10 -> m0_11  [key=0, style=solid, color=green];
m0_10 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer"];
m0_11 -> m0_12  [key=0, style=solid, color=green];
m0_11 -> m0_14  [key=0, style=solid, color=green];
m0_13 -> m0_11  [key=0, style=solid, color=green];
m0_13 -> m0_13  [key=1, style=dashed, color=green, label=pair];
m0_13 -> m0_4  [key=2, style=dotted, color=green];
m0_13 -> m0_5  [key=2, style=dotted, color=green];
m0_12 -> m0_12  [key=1, style=dashed, color=green, label=pair];
m0_12 -> m0_13  [key=0, style=solid, color=green];
m0_12 -> m0_4  [key=2, style=dotted, color=green];
m0_12 -> m0_5  [key=2, style=dotted, color=green];
m0_14 -> m0_10  [key=0, style=bold, color=blue];
m0_6 -> m0_7  [key=0, style=solid, color=green];
m0_6 -> m0_8  [key=0, style=solid, color=red];
m0_7 -> m0_9  [key=0, style=solid, color=green];
m0_7 -> m0_8  [key=0, style=solid, color=green];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_7  [key=0, style=solid, color=green];
m0_8 -> m0_8  [key=1, style=dashed, color=green, label=pair];
m0_8 -> m0_4  [key=2, style=dotted, color=green];
m0_8 -> m0_5  [key=2, style=dotted, color=green];
m0_9 -> m0_3  [key=0, style=bold, color=blue];
m0_9 -> m0_6  [key=0, style=bold, color=blue];
m0_133 -> m0_7  [key=1, style=dashed, color=green, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_11  [key=1, style=dashed, color=green, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_21  [key=1, style=dashed, color=green, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_25  [key=1, style=dashed, color=green, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_31  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_36  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_42  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_43  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_45  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_47  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_49  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_50  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_51  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_57  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_62  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_64  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_66  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_67  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_68  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_69  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_70  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_71  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_72  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_74  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_75  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_76  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_77  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_78  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_79  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_80  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_81  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_82  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_83  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_84  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_85  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_86  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_87  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_88  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_89  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_90  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_91  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_92  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_93  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_94  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_95  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_96  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_97  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_98  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_99  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_100  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_101  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_102  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_103  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_104  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_105  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_106  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_108  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_109  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m0_133 -> m0_110  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.InflectorTests"];
m2_4 -> m2_5  [key=0, style=solid, color=green];
m2_5 -> m2_6  [key=0, style=solid, color=green];
m2_5 -> m2_7  [key=2, style=dotted, color=green];
m2_6 -> m2_4  [key=0, style=bold, color=blue];
m2_8 -> m2_9  [key=0, style=solid];
m2_9 -> m2_7  [key=2, style=dotted];
m2_9 -> m2_10  [key=0, style=solid];
m2_10 -> m2_8  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid, color=green];
m2_1 -> m2_2  [key=0, style=solid, color=green];
m2_1 -> m2_3  [key=2, style=dotted, color=green];
m2_2 -> m2_0  [key=0, style=bold, color=blue];
m2_11 -> m2_12  [key=0, style=solid];
m2_12 -> m2_3  [key=2, style=dotted];
m2_12 -> m2_13  [key=0, style=solid];
m2_13 -> m2_11  [key=0, style=bold, color=blue];
}
