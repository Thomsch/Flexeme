digraph  {
n0 [label="Entry Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", span="14-14", cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)"];
n1 [label="return new EnglishNumberToWordsConverter().ConvertToOrdinal(number);", span="16-16", cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", color=red, community=0];
n2 [label="Exit Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)", span="14-14", cluster="Humanizer.NumberToOrdinalWordsExtension.ToOrdinalWords(int)"];
n3 [label="Entry Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.EnglishNumberToWordsConverter()", span="5-5", cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.EnglishNumberToWordsConverter()"];
n4 [label="Entry Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.ConvertToOrdinal(int)", span="76-76", cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.ConvertToOrdinal(int)"];
m0_24 [label="Entry Humanizer.NumberToWordsExtension.ToOrdinalWords(int)", span="35-35", cluster="Humanizer.NumberToWordsExtension.ToOrdinalWords(int)", file="NumberToWordsExtension.cs"];
m0_25 [label="return Converter.ConvertToOrdinal(number);", span="37-37", cluster="Humanizer.NumberToWordsExtension.ToOrdinalWords(int)", color=green, community=0, file="NumberToWordsExtension.cs"];
m0_26 [label="Exit Humanizer.NumberToWordsExtension.ToOrdinalWords(int)", span="35-35", cluster="Humanizer.NumberToWordsExtension.ToOrdinalWords(int)", file="NumberToWordsExtension.cs"];
m0_27 [label="Entry Humanizer.Localisation.NumberToWords.INumberToWordsConverter.ConvertToOrdinal(int)", span="19-19", cluster="Humanizer.Localisation.NumberToWords.INumberToWordsConverter.ConvertToOrdinal(int)", file="NumberToWordsExtension.cs"];
m0_6 [label="Entry Unk.SequenceEqual", span="", cluster="Unk.SequenceEqual", file="NumberToWordsExtension.cs"];
m0_13 [label="Entry CommandLine.Core.Token.Name(string)", span="19-19", cluster="CommandLine.Core.Token.Name(string)", file="NumberToWordsExtension.cs"];
m0_7 [label="Entry CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Token_sequence_creates_a_KeyValuePair_sequence()", span="26-26", cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Token_sequence_creates_a_KeyValuePair_sequence()", file="NumberToWordsExtension.cs"];
m0_8 [label="var expected = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''seq'', new[] {''seq0'', ''seq1'', ''seq2''}),   \r\n                }", span="28-31", cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Token_sequence_creates_a_KeyValuePair_sequence()", file="NumberToWordsExtension.cs"];
m0_9 [label="var result = KeyValuePairHelper.ForSequence(new []\r\n                {\r\n                    Token.Name(''seq''), Token.Value(''seq0''), Token.Value(''seq1''), Token.Value(''seq2'') \r\n                })", span="33-36", cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Token_sequence_creates_a_KeyValuePair_sequence()", file="NumberToWordsExtension.cs"];
m0_10 [label="result.SequenceEqual(expected)", span="38-38", cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Token_sequence_creates_a_KeyValuePair_sequence()", file="NumberToWordsExtension.cs"];
m0_11 [label="Exit CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Token_sequence_creates_a_KeyValuePair_sequence()", span="26-26", cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Token_sequence_creates_a_KeyValuePair_sequence()", file="NumberToWordsExtension.cs"];
m0_5 [label="Entry CommandLine.Core.KeyValuePairHelper.ForSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="22-22", cluster="CommandLine.Core.KeyValuePairHelper.ForSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="NumberToWordsExtension.cs"];
m0_0 [label="Entry CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Empty_token_sequence_creates_an_empty_KeyValuePair_sequence()", span="16-16", cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Empty_token_sequence_creates_an_empty_KeyValuePair_sequence()", file="NumberToWordsExtension.cs"];
m0_1 [label="var expected = new KeyValuePair<string, IEnumerable<string>>[] { }", span="18-18", cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Empty_token_sequence_creates_an_empty_KeyValuePair_sequence()", file="NumberToWordsExtension.cs"];
m0_2 [label="var result = KeyValuePairHelper.ForSequence(new Token[] { })", span="20-20", cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Empty_token_sequence_creates_an_empty_KeyValuePair_sequence()", file="NumberToWordsExtension.cs"];
m0_3 [label="result.SequenceEqual(expected)", span="22-22", cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Empty_token_sequence_creates_an_empty_KeyValuePair_sequence()", file="NumberToWordsExtension.cs"];
m0_4 [label="Exit CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Empty_token_sequence_creates_an_empty_KeyValuePair_sequence()", span="16-16", cluster="CommandLine.Tests.Unit.Core.KeyValuePairHelperTests.Empty_token_sequence_creates_an_empty_KeyValuePair_sequence()", file="NumberToWordsExtension.cs"];
m0_14 [label="Entry CommandLine.Core.Token.Value(string)", span="24-24", cluster="CommandLine.Core.Token.Value(string)", file="NumberToWordsExtension.cs"];
m0_12 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="NumberToWordsExtension.cs"];
n0 -> n1  [key=0, style=solid, color=red];
n1 -> n2  [key=0, style=solid, color=red];
n1 -> n3  [key=2, style=dotted, color=red];
n1 -> n4  [key=2, style=dotted, color=red];
n2 -> n0  [key=0, style=bold, color=blue];
m0_24 -> m0_25  [key=0, style=solid, color=green];
m0_25 -> m0_26  [key=0, style=solid, color=green];
m0_25 -> m0_27  [key=2, style=dotted, color=green];
m0_26 -> m0_24  [key=0, style=bold, color=blue];
m0_7 -> m0_8  [key=0, style=solid];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_12  [key=2, style=dotted];
m0_8 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_13  [key=2, style=dotted];
m0_9 -> m0_14  [key=2, style=dotted];
m0_9 -> m0_5  [key=2, style=dotted];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_6  [key=2, style=dotted];
m0_11 -> m0_7  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label=expected];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_5  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_6  [key=2, style=dotted];
m0_4 -> m0_0  [key=0, style=bold, color=blue];
}
