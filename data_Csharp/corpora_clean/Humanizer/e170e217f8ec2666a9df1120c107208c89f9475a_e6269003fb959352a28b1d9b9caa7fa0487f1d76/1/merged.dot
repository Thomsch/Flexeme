digraph  {
d1 [label="number == 0", span="9-9", cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0];
d0 [label="Entry Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", span="7-7", cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)"];
d2 [label="return ''zero'';", span="10-10", cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0];
d3 [label="number < 0", span="12-12", cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0];
d4 [label="return string.Format(''minus {0}'', Math.Abs(number).ToWords());", span="13-13", cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0];
d5 [label="var parts = new List<string>()", span="15-15", cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0];
d30 [label="Exit Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", span="7-7", cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)"];
d31 [label="Entry System.Math.Abs(int)", span="0-0", cluster="System.Math.Abs(int)"];
d32 [label="Entry int.ToWords()", span="25-25", cluster="int.ToWords()"];
d33 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)"];
d6 [label="(number / 1000000000) > 0", span="17-17", cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0];
d7 [label="parts.Add(string.Format(''{0} billion'', (number / 1000000000).ToWords()))", span="19-19", cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0];
d9 [label="(number / 1000000) > 0", span="23-23", cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0];
d8 [label="number %= 1000000000", span="20-20", cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0];
d35 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)"];
d10 [label="parts.Add(string.Format(''{0} million'', (number / 1000000).ToWords()))", span="25-25", cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0];
d11 [label="number %= 1000000", span="26-26", cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0];
d12 [label="(number / 1000) > 0", span="29-29", cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0];
d13 [label="parts.Add(string.Format(''{0} thousand'', NumberToWordsExtension.ToWords(number / 1000)))", span="31-31", cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0];
d14 [label="number %= 1000", span="32-32", cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0];
d15 [label="(number / 100) > 0", span="35-35", cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0];
d16 [label="parts.Add(string.Format(''{0} hundred'', NumberToWordsExtension.ToWords(number / 100)))", span="37-37", cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0];
d17 [label="number %= 100", span="38-38", cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0];
d18 [label="number > 0", span="41-41", cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0];
d23 [label="number < 20", span="49-49", cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0];
d24 [label="parts.Add(unitsMap[number])", span="50-50", cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0];
d25 [label="var lastPart = tensMap[number / 10]", span="53-53", cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0];
d26 [label="(number % 10) > 0", span="54-54", cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0];
d27 [label="lastPart += string.Format(''-{0}'', unitsMap[number % 10])", span="55-55", cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0];
d36 [label="Entry Humanizer.NumberToWordsExtension.ToWords(int)", span="25-25", cluster="Humanizer.NumberToWordsExtension.ToWords(int)"];
d19 [label="parts.Count != 0", span="43-43", cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0];
d29 [label="return string.Join('' '', parts.ToArray());", span="61-61", cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0];
d22 [label="var tensMap = new[] { ''zero'', ''ten'', ''twenty'', ''thirty'', ''forty'', ''fifty'', ''sixty'', ''seventy'', ''eighty'', ''ninety'' }", span="47-47", cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0];
d21 [label="var unitsMap = new[] { ''zero'', ''one'', ''two'', ''three'', ''four'', ''five'', ''six'', ''seven'', ''eight'', ''nine'', ''ten'', ''eleven'', ''twelve'', ''thirteen'', ''fourteen'', ''fifteen'', ''sixteen'', ''seventeen'', ''eighteen'', ''nineteen'' }", span="46-46", cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0];
d28 [label="parts.Add(lastPart)", span="57-57", cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0];
d34 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()"];
d20 [label="parts.Add(''and'')", span="44-44", cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.Convert(int)", color=green, community=0];
d37 [label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0", cluster="System.Collections.Generic.List<T>.ToArray()"];
d38 [label="Entry string.Join(string, params string[])", span="0-0", cluster="string.Join(string, params string[])"];
d1 -> d2  [key=0, style=solid, color=green];
d1 -> d3  [key=0, style=solid, color=green];
d0 -> d1  [key=0, style=solid, color=green];
d0 -> d3  [key=1, style=dashed, color=green, label=int];
d0 -> d4  [key=1, style=dashed, color=green, label=int];
d0 -> d6  [key=1, style=dashed, color=green, label=int];
d0 -> d7  [key=1, style=dashed, color=green, label=int];
d0 -> d8  [key=1, style=dashed, color=green, label=int];
d0 -> d9  [key=1, style=dashed, color=green, label=int];
d0 -> d10  [key=1, style=dashed, color=green, label=int];
d0 -> d11  [key=1, style=dashed, color=green, label=int];
d0 -> d12  [key=1, style=dashed, color=green, label=int];
d0 -> d13  [key=1, style=dashed, color=green, label=int];
d0 -> d14  [key=1, style=dashed, color=green, label=int];
d0 -> d15  [key=1, style=dashed, color=green, label=int];
d0 -> d16  [key=1, style=dashed, color=green, label=int];
d0 -> d17  [key=1, style=dashed, color=green, label=int];
d0 -> d18  [key=1, style=dashed, color=green, label=int];
d0 -> d23  [key=1, style=dashed, color=green, label=int];
d0 -> d24  [key=1, style=dashed, color=green, label=int];
d0 -> d25  [key=1, style=dashed, color=green, label=int];
d0 -> d26  [key=1, style=dashed, color=green, label=int];
d0 -> d27  [key=1, style=dashed, color=green, label=int];
d0 -> d2  [key=3, color=green, style=bold, label="method methodReturn string Convert"];
d2 -> d30  [key=0, style=solid, color=green];
d3 -> d4  [key=0, style=solid, color=green];
d3 -> d5  [key=0, style=solid, color=green];
d4 -> d30  [key=0, style=solid, color=green];
d4 -> d31  [key=2, style=dotted, color=green];
d4 -> d32  [key=2, style=dotted, color=green];
d4 -> d33  [key=2, style=dotted, color=green];
d5 -> d6  [key=0, style=solid, color=green];
d5 -> d7  [key=1, style=dashed, color=green, label=parts];
d5 -> d10  [key=1, style=dashed, color=green, label=parts];
d5 -> d13  [key=1, style=dashed, color=green, label=parts];
d5 -> d16  [key=1, style=dashed, color=green, label=parts];
d5 -> d24  [key=1, style=dashed, color=green, label=parts];
d5 -> d34  [key=2, style=dotted, color=green];
d5 -> d19  [key=1, style=dashed, color=green, label=parts];
d5 -> d20  [key=1, style=dashed, color=green, label=parts];
d5 -> d28  [key=1, style=dashed, color=green, label=parts];
d5 -> d29  [key=1, style=dashed, color=green, label=parts];
d30 -> d0  [key=0, style=bold, color=blue];
d6 -> d7  [key=0, style=solid, color=green];
d6 -> d9  [key=0, style=solid, color=green];
d7 -> d8  [key=0, style=solid, color=green];
d7 -> d32  [key=2, style=dotted, color=green];
d7 -> d33  [key=2, style=dotted, color=green];
d7 -> d35  [key=2, style=dotted, color=green];
d9 -> d10  [key=0, style=solid, color=green];
d9 -> d12  [key=0, style=solid, color=green];
d8 -> d8  [key=1, style=dashed, color=green, label=int];
d8 -> d9  [key=0, style=solid, color=green];
d8 -> d10  [key=1, style=dashed, color=green, label=int];
d8 -> d11  [key=1, style=dashed, color=green, label=int];
d8 -> d12  [key=1, style=dashed, color=green, label=int];
d8 -> d13  [key=1, style=dashed, color=green, label=int];
d8 -> d14  [key=1, style=dashed, color=green, label=int];
d8 -> d15  [key=1, style=dashed, color=green, label=int];
d8 -> d16  [key=1, style=dashed, color=green, label=int];
d8 -> d17  [key=1, style=dashed, color=green, label=int];
d8 -> d18  [key=1, style=dashed, color=green, label=int];
d8 -> d23  [key=1, style=dashed, color=green, label=int];
d8 -> d24  [key=1, style=dashed, color=green, label=int];
d8 -> d25  [key=1, style=dashed, color=green, label=int];
d8 -> d26  [key=1, style=dashed, color=green, label=int];
d8 -> d27  [key=1, style=dashed, color=green, label=int];
d10 -> d11  [key=0, style=solid, color=green];
d10 -> d32  [key=2, style=dotted, color=green];
d10 -> d33  [key=2, style=dotted, color=green];
d10 -> d35  [key=2, style=dotted, color=green];
d11 -> d11  [key=1, style=dashed, color=green, label=int];
d11 -> d12  [key=0, style=solid, color=green];
d11 -> d13  [key=1, style=dashed, color=green, label=int];
d11 -> d14  [key=1, style=dashed, color=green, label=int];
d11 -> d15  [key=1, style=dashed, color=green, label=int];
d11 -> d16  [key=1, style=dashed, color=green, label=int];
d11 -> d17  [key=1, style=dashed, color=green, label=int];
d11 -> d18  [key=1, style=dashed, color=green, label=int];
d11 -> d23  [key=1, style=dashed, color=green, label=int];
d11 -> d24  [key=1, style=dashed, color=green, label=int];
d11 -> d25  [key=1, style=dashed, color=green, label=int];
d11 -> d26  [key=1, style=dashed, color=green, label=int];
d11 -> d27  [key=1, style=dashed, color=green, label=int];
d12 -> d13  [key=0, style=solid, color=green];
d12 -> d15  [key=0, style=solid, color=green];
d13 -> d14  [key=0, style=solid, color=green];
d13 -> d36  [key=2, style=dotted, color=green];
d13 -> d33  [key=2, style=dotted, color=green];
d13 -> d35  [key=2, style=dotted, color=green];
d14 -> d14  [key=1, style=dashed, color=green, label=int];
d14 -> d15  [key=0, style=solid, color=green];
d14 -> d16  [key=1, style=dashed, color=green, label=int];
d14 -> d17  [key=1, style=dashed, color=green, label=int];
d14 -> d18  [key=1, style=dashed, color=green, label=int];
d14 -> d23  [key=1, style=dashed, color=green, label=int];
d14 -> d24  [key=1, style=dashed, color=green, label=int];
d14 -> d25  [key=1, style=dashed, color=green, label=int];
d14 -> d26  [key=1, style=dashed, color=green, label=int];
d14 -> d27  [key=1, style=dashed, color=green, label=int];
d15 -> d16  [key=0, style=solid, color=green];
d15 -> d18  [key=0, style=solid, color=green];
d16 -> d17  [key=0, style=solid, color=green];
d16 -> d36  [key=2, style=dotted, color=green];
d16 -> d33  [key=2, style=dotted, color=green];
d16 -> d35  [key=2, style=dotted, color=green];
d17 -> d17  [key=1, style=dashed, color=green, label=int];
d17 -> d18  [key=0, style=solid, color=green];
d17 -> d23  [key=1, style=dashed, color=green, label=int];
d17 -> d24  [key=1, style=dashed, color=green, label=int];
d17 -> d25  [key=1, style=dashed, color=green, label=int];
d17 -> d26  [key=1, style=dashed, color=green, label=int];
d17 -> d27  [key=1, style=dashed, color=green, label=int];
d18 -> d19  [key=0, style=solid, color=green];
d18 -> d29  [key=0, style=solid, color=green];
d23 -> d24  [key=0, style=solid, color=green];
d23 -> d25  [key=0, style=solid, color=green];
d24 -> d29  [key=0, style=solid, color=green];
d24 -> d35  [key=2, style=dotted, color=green];
d25 -> d26  [key=0, style=solid, color=green];
d25 -> d27  [key=1, style=dashed, color=green, label=lastPart];
d25 -> d28  [key=1, style=dashed, color=green, label=lastPart];
d26 -> d27  [key=0, style=solid, color=green];
d26 -> d28  [key=0, style=solid, color=green];
d27 -> d27  [key=1, style=dashed, color=green, label=lastPart];
d27 -> d28  [key=0, style=solid, color=green];
d27 -> d33  [key=2, style=dotted, color=green];
d19 -> d20  [key=0, style=solid, color=green];
d19 -> d21  [key=0, style=solid, color=green];
d29 -> d30  [key=0, style=solid, color=green];
d29 -> d37  [key=2, style=dotted, color=green];
d29 -> d38  [key=2, style=dotted, color=green];
d22 -> d23  [key=0, style=solid, color=green];
d22 -> d25  [key=1, style=dashed, color=green, label=tensMap];
d21 -> d24  [key=1, style=dashed, color=green, label=unitsMap];
d21 -> d27  [key=1, style=dashed, color=green, label=unitsMap];
d21 -> d22  [key=0, style=solid, color=green];
d28 -> d29  [key=0, style=solid, color=green];
d28 -> d35  [key=2, style=dotted, color=green];
d20 -> d21  [key=0, style=solid, color=green];
d20 -> d35  [key=2, style=dotted, color=green];
}
