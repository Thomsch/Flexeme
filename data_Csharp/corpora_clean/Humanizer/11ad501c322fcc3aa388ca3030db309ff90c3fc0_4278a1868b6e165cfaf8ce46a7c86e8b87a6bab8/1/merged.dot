digraph  {
m1_9 [label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="17-17", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="DateHumanizeTests.cs"];
m1_35 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="DateHumanizeTests.cs"];
m1_48 [label="Entry CommandLine.Core.Specification.IsOption()", span="11-11", cluster="CommandLine.Core.Specification.IsOption()", file="DateHumanizeTests.cs"];
m1_0 [label="Entry CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="11-11", cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="DateHumanizeTests.cs"];
m1_1 [label="return specification.Tag == SpecificationType.Option;", span="13-13", cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", color=red, community=0, file="DateHumanizeTests.cs"];
m1_2 [label="Exit CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="11-11", cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="DateHumanizeTests.cs"];
m1_16 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="DateHumanizeTests.cs"];
m1_21 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="DateHumanizeTests.cs"];
m1_22 [label="Entry CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", span="51-51", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="DateHumanizeTests.cs"];
m1_23 [label="specification == null", span="53-53", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", color=red, community=0, file="DateHumanizeTests.cs"];
m1_25 [label="specification.ConversionType.ToDescriptorKind()", span="55-55", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", color=red, community=0, file="DateHumanizeTests.cs"];
m1_29 [label="var min = specification.Min", span="60-60", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="DateHumanizeTests.cs"];
m1_30 [label="var max = specification.Max", span="61-61", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="DateHumanizeTests.cs"];
m1_24 [label="throw new ArgumentNullException(''specification'');", span="53-53", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", color=red, community=0, file="DateHumanizeTests.cs"];
m1_26 [label="TypeDescriptorKind.Scalar", span="57-57", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="DateHumanizeTests.cs"];
m1_28 [label="TypeDescriptorKind.Sequence", span="59-59", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="DateHumanizeTests.cs"];
m1_27 [label="return  Maybe.Just(1);", span="58-58", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="DateHumanizeTests.cs"];
m1_31 [label="min >= 0 && max >= 0", span="62-62", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="DateHumanizeTests.cs"];
m1_32 [label="return Maybe.Just(max);", span="64-64", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", color=red, community=0, file="DateHumanizeTests.cs"];
m1_33 [label="return Maybe.Nothing<int>();", span="69-69", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="DateHumanizeTests.cs"];
m1_34 [label="Exit CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", span="51-51", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="DateHumanizeTests.cs"];
m1_3 [label="Entry CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="16-16", cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="DateHumanizeTests.cs"];
m1_4 [label="return specification.Tag == SpecificationType.Value;", span="18-18", cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="DateHumanizeTests.cs"];
m1_5 [label="Exit CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="16-16", cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="DateHumanizeTests.cs"];
m1_37 [label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71", cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="DateHumanizeTests.cs"];
m1_38 [label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66", cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="DateHumanizeTests.cs"];
m1_39 [label="Entry CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", span="72-72", cluster="CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", file="DateHumanizeTests.cs"];
m1_40 [label="return specification.Min == -1;", span="74-74", cluster="CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", file="DateHumanizeTests.cs"];
m1_41 [label="Exit CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", span="72-72", cluster="CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", file="DateHumanizeTests.cs"];
m1_45 [label="Entry CommandLine.Core.SpecificationExtensions.GetSetName(CommandLine.Core.Specification)", span="82-82", cluster="CommandLine.Core.SpecificationExtensions.GetSetName(CommandLine.Core.Specification)", file="DateHumanizeTests.cs"];
m1_46 [label="return specification.IsOption()\r\n                ? ((OptionSpecification)specification).SetName\r\n                : string.Empty;", span="84-86", cluster="CommandLine.Core.SpecificationExtensions.GetSetName(CommandLine.Core.Specification)", file="DateHumanizeTests.cs"];
m1_47 [label="Exit CommandLine.Core.SpecificationExtensions.GetSetName(CommandLine.Core.Specification)", span="82-82", cluster="CommandLine.Core.SpecificationExtensions.GetSetName(CommandLine.Core.Specification)", file="DateHumanizeTests.cs"];
m1_42 [label="Entry CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", span="77-77", cluster="CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", file="DateHumanizeTests.cs"];
m1_43 [label="return specification.Max == -1;", span="79-79", cluster="CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", file="DateHumanizeTests.cs"];
m1_44 [label="Exit CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", span="77-77", cluster="CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", file="DateHumanizeTests.cs"];
m1_36 [label="Entry System.Type.ToDescriptorKind()", span="22-22", cluster="System.Type.ToDescriptorKind()", file="DateHumanizeTests.cs"];
m1_17 [label="Entry System.ApplicationException.ApplicationException(string)", span="0-0", cluster="System.ApplicationException.ApplicationException(string)", file="DateHumanizeTests.cs"];
m1_18 [label="Entry lambda expression", span="42-42", cluster="lambda expression", file="DateHumanizeTests.cs"];
m1_19 [label="guard.Item1(spec)", span="42-42", cluster="lambda expression", file="DateHumanizeTests.cs"];
m1_20 [label="Exit lambda expression", span="42-42", cluster="lambda expression", file="DateHumanizeTests.cs"];
m1_10 [label="Entry CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="38-38", cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="DateHumanizeTests.cs"];
m1_11 [label=guardsLookup, span="40-40", cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="DateHumanizeTests.cs"];
m1_12 [label="specifications.Any(spec => guard.Item1(spec))", span="42-42", cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="DateHumanizeTests.cs"];
m1_14 [label="return specifications;", span="48-48", cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="DateHumanizeTests.cs"];
m1_13 [label="throw new ApplicationException(guard.Item2);", span="44-44", cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", color=red, community=0, file="DateHumanizeTests.cs"];
m1_15 [label="Exit CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="38-38", cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="DateHumanizeTests.cs"];
m1_6 [label="Entry CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", span="21-21", cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", file="DateHumanizeTests.cs"];
m1_7 [label="return new OptionSpecification(\r\n                specification.ShortName,\r\n                newLongName,\r\n                specification.Required,\r\n                specification.SetName,\r\n                specification.Min,\r\n                specification.Max,\r\n                specification.Separator,\r\n                specification.DefaultValue,\r\n                specification.ConversionType,\r\n                specification.HelpText,\r\n                specification.MetaValue,\r\n                enumValues);", span="23-35", cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", color=red, community=0, file="DateHumanizeTests.cs"];
m1_8 [label="Exit CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", span="21-21", cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", file="DateHumanizeTests.cs"];
m1_49 [label=guard, span="", file="DateHumanizeTests.cs"];
m2_37 [label="Entry string.Humanize()", span="42-42", cluster="string.Humanize()", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_31 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_19 [label="Entry Unk.All", span="", cluster="Unk.All", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_32 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_4 [label="Entry string.Join(string, params string[])", span="0-0", cluster="string.Join(string, params string[])", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_53 [label="Entry string.ToUpper()", span="0-0", cluster="string.ToUpper()", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_54 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_12 [label="Entry Unk.Aggregate", span="", cluster="Unk.Aggregate", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_52 [label="Entry System.Globalization.TextInfo.ToTitleCase(string)", span="0-0", cluster="System.Globalization.TextInfo.ToTitleCase(string)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_14 [label="Entry Unk.Substring", span="", cluster="Unk.Substring", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_56 [label="Entry string.Concat(string, string)", span="0-0", cluster="string.Concat(string, string)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_24 [label="Entry Humanizer.StringHumanizeExtensions.Humanize(string)", span="42-42", cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_25 [label="input.All(Char.IsUpper)", span="45-45", cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_26 [label="return input;", span="46-46", cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_27 [label="input.Contains('_') || input.Contains('-')", span="48-48", cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_28 [label="return FromUnderscoreDashSeparatedWords(input);", span="49-49", cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_29 [label="return FromPascalCase(input);", span="51-51", cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_30 [label="Exit Humanizer.StringHumanizeExtensions.Humanize(string)", span="42-42", cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_21 [label="Entry lambda expression", span="30-30", cluster="lambda expression", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_0 [label="Entry lambda expression", span="9-9", cluster="lambda expression", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_1 [label="string.Join('' '', methodName.Split(new[] { '_', '-' }))", span="9-9", cluster="lambda expression", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_2 [label="Exit lambda expression", span="9-9", cluster="lambda expression", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_16 [label="Entry lambda expression", span="26-29", cluster="lambda expression", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_17 [label="word.All(Char.IsUpper) && word.Length > 1\r\n                        ? word\r\n                        : word.ToLower()", span="27-29", cluster="lambda expression", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_18 [label="Exit lambda expression", span="26-29", cluster="lambda expression", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_22 [label="res + '' '' + word", span="30-30", cluster="lambda expression", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_23 [label="Exit lambda expression", span="30-30", cluster="lambda expression", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_57 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_11 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_3 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_33 [label="Entry Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", span="60-60", cluster="Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_34 [label="var humanizedString = input.Humanize()", span="62-62", cluster="Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_35 [label="return ApplyCase(humanizedString, casing);", span="64-64", cluster="Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_36 [label="Exit Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", span="60-60", cluster="Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_15 [label="Entry Unk.Replace", span="", cluster="Unk.Replace", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_38 [label="Entry Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", span="73-73", cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_39 [label=casing, span="75-75", cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_41 [label="return CultureInfo.CurrentCulture.TextInfo.ToTitleCase(input);", span="78-78", cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_43 [label="return input.ToLower();", span="81-81", cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_45 [label="return input.ToUpper();", span="84-84", cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_47 [label="input.Length >= 1", span="87-87", cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_48 [label="return string.Concat(input.Substring(0, 1).ToUpper(), input.Substring(1));", span="88-88", cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_49 [label="return input.ToUpper();", span="90-90", cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_40 [label="LetterCasing.Title", span="77-77", cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_42 [label="LetterCasing.LowerCase", span="80-80", cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_44 [label="LetterCasing.AllCaps", span="83-83", cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_46 [label="LetterCasing.Sentence", span="86-86", cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_50 [label="throw new ArgumentOutOfRangeException(''casing'');", span="93-93", cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_51 [label="Exit Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", span="73-73", cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_5 [label="Entry Humanizer.StringHumanizeExtensions.FromPascalCase(string)", span="22-22", cluster="Humanizer.StringHumanizeExtensions.FromPascalCase(string)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_6 [label="var result = PascalCaseWordBoundaryRegex\r\n                .Split(name)\r\n                .Select(word =>\r\n                    word.All(Char.IsUpper) && word.Length > 1\r\n                        ? word\r\n                        : word.ToLower())\r\n                .Aggregate((res, word) => res + '' '' + word)", span="24-30", cluster="Humanizer.StringHumanizeExtensions.FromPascalCase(string)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_7 [label="result = Char.ToUpper(result[0]) +\r\n                result.Substring(1, result.Length - 1)", span="32-33", cluster="Humanizer.StringHumanizeExtensions.FromPascalCase(string)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_8 [label="return result.Replace('' i '', '' I '');", span="34-34", cluster="Humanizer.StringHumanizeExtensions.FromPascalCase(string)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_9 [label="Exit Humanizer.StringHumanizeExtensions.FromPascalCase(string)", span="22-22", cluster="Humanizer.StringHumanizeExtensions.FromPascalCase(string)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_13 [label="Entry Unk.ToUpper", span="", cluster="Unk.ToUpper", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_10 [label="Entry System.Text.RegularExpressions.Regex.Split(string)", span="0-0", cluster="System.Text.RegularExpressions.Regex.Split(string)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_20 [label="Entry string.ToLower()", span="0-0", cluster="string.ToLower()", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_55 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="DefaultDateTimeHumanizeStrategy.cs"];
m4_0 [label="Entry Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", span="33-33", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs"];
m4_23 [label="word += units + (trema ? ''�n'' : ''en'') + tens", span="72-72", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", color=green, community=0, file="DutchNumberToWordsConverter.cs"];
m4_18 [label="var tens = TensMap[number / 10]", span="66-66", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs"];
m4_5 [label="var word = ''''", span="41-41", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs"];
m4_10 [label="word += m.Name", span="51-51", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs"];
m4_11 [label="word += Convert(divided) + m.Prefix + m.Name", span="53-53", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs"];
m4_14 [label="word += m.Postfix", span="57-57", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs"];
m4_21 [label="var units = UnitsMap[unit]", span="70-70", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs"];
m4_22 [label="var trema = units.EndsWith(''e'')", span="71-71", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs"];
m4_25 [label="return word;", span="79-79", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs"];
m4_12 [label="number %= m.Value", span="55-55", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs"];
m4_16 [label="number < 20", span="62-62", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs"];
m4_19 [label="var unit = number % 10", span="67-67", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs"];
m4_24 [label="word += tens", span="75-75", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs"];
m4_3 [label="number < 0", span="38-38", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs"];
m4_6 [label=Hunderds, span="43-43", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs"];
m4_17 [label="word += UnitsMap[number]", span="63-63", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs"];
m4_9 [label="divided == 1 && !m.DisplayOneUnit", span="50-50", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs"];
m4_7 [label="var divided = number / m.Value", span="45-45", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs"];
m4_13 [label="number > 0", span="56-56", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs"];
m4_20 [label="unit > 0", span="68-68", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs"];
m4_15 [label="number > 0", span="60-60", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs"];
m4_4 [label="return string.Format(''min {0}'', Convert(-number));", span="39-39", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs"];
m4_1 [label="number == 0", span="35-35", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs"];
m4_8 [label="divided <= 0", span="47-47", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs"];
m4_2 [label="return UnitsMap[0];", span="36-36", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs"];
m4_26 [label="Exit Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", span="33-33", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs"];
m4_28 [label="Entry string.EndsWith(string)", span="0-0", cluster="string.EndsWith(string)", file="DutchNumberToWordsConverter.cs"];
m4_27 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="DutchNumberToWordsConverter.cs"];
m4_38 [label="Entry Unk.Substring", span="", cluster="Unk.Substring", file="DutchNumberToWordsConverter.cs"];
m4_29 [label="Entry Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", span="91-91", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="DutchNumberToWordsConverter.cs"];
m4_30 [label="var word = Convert(number)", span="93-93", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="DutchNumberToWordsConverter.cs"];
m4_31 [label="OrdinalExceptions.Where(kv => word.EndsWith(kv.Key))", span="95-95", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="DutchNumberToWordsConverter.cs"];
m4_32 [label="return word.Substring(0, word.Length - kv.Key.Length) + kv.Value;", span="98-98", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="DutchNumberToWordsConverter.cs"];
m4_33 [label="word.LastIndexOfAny(EndingCharForSte) == (word.Length - 1)", span="104-104", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="DutchNumberToWordsConverter.cs"];
m4_34 [label="return word + ''ste'';", span="105-105", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="DutchNumberToWordsConverter.cs"];
m4_35 [label="return word + ''de'';", span="107-107", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="DutchNumberToWordsConverter.cs"];
m4_36 [label="Exit Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", span="91-91", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="DutchNumberToWordsConverter.cs"];
m4_39 [label="Entry string.LastIndexOfAny(char[])", span="0-0", cluster="string.LastIndexOfAny(char[])", file="DutchNumberToWordsConverter.cs"];
m4_40 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m4_41 [label="word.EndsWith(kv.Key)", span="95-95", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m4_42 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="DutchNumberToWordsConverter.cs"];
m4_37 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="DutchNumberToWordsConverter.cs"];
m4_43 [label="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter", span="", file="DutchNumberToWordsConverter.cs"];
m4_44 [label=word, span="", file="DutchNumberToWordsConverter.cs"];
m6_4 [label="return value;", span="13-13", cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="FixedLengthTruncator.cs"];
m6_5 [label="truncationString == null || truncationString.Length > length", span="15-15", cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", color=green, community=0, file="FixedLengthTruncator.cs"];
m6_6 [label="return value.Substring(0, length);", span="16-16", cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="FixedLengthTruncator.cs", color=red, community=0];
m6_8 [label="Exit Humanizer.FixedLengthTruncator.Truncate(string, int, string)", span="7-7", cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="FixedLengthTruncator.cs"];
m6_9 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", color=green, community=0, file="FixedLengthTruncator.cs"];
m6_10 [label="Exit Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", span="25-25", cluster="Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", file="FixedLengthTruncator.cs"];
m6_7 [label="return value.Length > length ? value.Substring(0, length - truncationString.Length) + truncationString : value;", span="18-18", cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="FixedLengthTruncator.cs", color=red, community=0];
m6_0 [label="Entry Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", span="5-5", cluster="Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", file="FixedLengthTruncator.cs"];
m6_1 [label="return new DateTime(date.Year, date.Month, date.Day, hour, min, second, millisecond);", span="7-7", cluster="Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", file="FixedLengthTruncator.cs", color=green, community=0];
m6_3 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, int)", file="FixedLengthTruncator.cs"];
m6_2 [label="Exit Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", span="5-5", cluster="Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", file="FixedLengthTruncator.cs"];
m6_11 [label="Entry Humanizer.PrepositionsExtensions.In(System.DateTime, int)", span="36-36", cluster="Humanizer.PrepositionsExtensions.In(System.DateTime, int)", file="FixedLengthTruncator.cs"];
m6_12 [label="return new DateTime(year, date.Month, date.Day, date.Hour, date.Minute, date.Second, date.Millisecond);", span="38-38", cluster="Humanizer.PrepositionsExtensions.In(System.DateTime, int)", file="FixedLengthTruncator.cs"];
m6_13 [label="Exit Humanizer.PrepositionsExtensions.In(System.DateTime, int)", span="36-36", cluster="Humanizer.PrepositionsExtensions.In(System.DateTime, int)", file="FixedLengthTruncator.cs"];
m8_0 [label="Entry Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", span="10-10", cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs"];
m8_1 [label="value == null", span="12-12", cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", color=green, community=0, file="FixedNumberOfWordsTruncator.cs"];
m8_2 [label="return null;", span="13-13", cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs"];
m8_5 [label="var numberOfWordsProcessed = 0", span="18-18", cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs", color=red, community=0];
m8_6 [label="var numberOfWords = value.Split((char[])null, StringSplitOptions.RemoveEmptyEntries).Count()", span="19-19", cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs"];
m8_7 [label="numberOfWords <= length", span="21-21", cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs"];
m8_24 [label="Entry char.IsWhiteSpace(char)", span="0-0", cluster="char.IsWhiteSpace(char)", file="FixedNumberOfWordsTruncator.cs"];
m8_4 [label="return value;", span="16-16", cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs"];
m8_3 [label="value.Length == 0", span="15-15", cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs"];
m8_22 [label="Entry string.Split(char[], System.StringSplitOptions)", span="0-0", cluster="string.Split(char[], System.StringSplitOptions)", file="FixedNumberOfWordsTruncator.cs"];
m8_8 [label="Entry Humanizer.Tests.Extensions.StringDehumanizeTests.MixedCaseSentence()", span="23-23", cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.MixedCaseSentence()", file="FixedNumberOfWordsTruncator.cs"];
m8_11 [label="Entry Humanizer.Tests.Extensions.StringDehumanizeTests.LowerCaseSentence()", span="31-31", cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.LowerCaseSentence()", file="FixedNumberOfWordsTruncator.cs"];
m8_12 [label="Assert.Equal(\r\n                ''LowerCaseSentenceIsCamelized'',\r\n                ''lower case sentence is camelized''.Dehumanize())", span="33-35", cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.LowerCaseSentence()", file="FixedNumberOfWordsTruncator.cs"];
m8_16 [label="Exit Humanizer.Tests.Extensions.StringDehumanizeTests.EmptySentence()", span="39-39", cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.EmptySentence()", file="FixedNumberOfWordsTruncator.cs"];
m8_17 [label="return value.Substring(0, i) + truncationString;", span="36-36", cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs"];
m8_20 [label="return value + truncationString;", span="44-44", cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs"];
m8_14 [label="Entry Humanizer.Tests.Extensions.StringDehumanizeTests.EmptySentence()", span="39-39", cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.EmptySentence()", file="FixedNumberOfWordsTruncator.cs"];
m8_9 [label="Assert.Equal(\r\n                ''MixedCaseSentenceIsCamelized'',\r\n                ''Mixed case sentence Is Camelized''.Dehumanize())", span="25-27", cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.MixedCaseSentence()", color=green, community=0, file="FixedNumberOfWordsTruncator.cs"];
m8_10 [label="Exit Humanizer.Tests.Extensions.StringDehumanizeTests.MixedCaseSentence()", span="23-23", cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.MixedCaseSentence()", file="FixedNumberOfWordsTruncator.cs"];
m8_13 [label="Exit Humanizer.Tests.Extensions.StringDehumanizeTests.LowerCaseSentence()", span="31-31", cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.LowerCaseSentence()", file="FixedNumberOfWordsTruncator.cs"];
m8_19 [label="i++", span="26-26", cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs"];
m8_18 [label="lastCharactersWasWhiteSpace = false", span="40-40", cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs"];
m8_15 [label="Assert.Equal(\r\n                '''',\r\n                ''''.Dehumanize())", span="41-43", cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.EmptySentence()", file="FixedNumberOfWordsTruncator.cs"];
m8_21 [label="Exit Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", span="10-10", cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs"];
m8_25 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="FixedNumberOfWordsTruncator.cs"];
m8_23 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="FixedNumberOfWordsTruncator.cs"];
m9_5 [label="Entry Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", span="70-70", cluster="Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", file="FrenchNumberToWordsConverter.cs"];
m9_26 [label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.SecondsAgo()", span="43-43", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.SecondsAgo()", file="FrenchNumberToWordsConverter.cs"];
m9_27 [label="Verify(string.Format(Resources.GetResource(ResourceKeys.DateHumanize.MultipleSecondsAgo), 10), new TimeSpan(0, 0, 0, -10))", span="45-45", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.SecondsAgo()", file="FrenchNumberToWordsConverter.cs"];
m9_28 [label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.SecondsAgo()", span="43-43", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.SecondsAgo()", file="FrenchNumberToWordsConverter.cs"];
m9_42 [label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.Yesterday()", span="73-73", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.Yesterday()", file="FrenchNumberToWordsConverter.cs"];
m9_43 [label="Verify(Resources.GetResource(ResourceKeys.DateHumanize.SingleDayAgo), new TimeSpan(-1, -10, 0, 0))", span="75-75", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.Yesterday()", file="FrenchNumberToWordsConverter.cs"];
m9_44 [label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.Yesterday()", span="73-73", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.Yesterday()", file="FrenchNumberToWordsConverter.cs"];
m9_6 [label="Assert.Equal(number.Ordinalize(), ordinalized)", span="72-72", cluster="Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", file="FrenchNumberToWordsConverter.cs"];
m9_4 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="FrenchNumberToWordsConverter.cs"];
m9_39 [label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.HoursAgo()", span="67-67", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.HoursAgo()", file="FrenchNumberToWordsConverter.cs"];
m9_40 [label="Verify(string.Format(Resources.GetResource(ResourceKeys.DateHumanize.MultipleHoursAgo), 10), new TimeSpan(0, -10, 0, 0))", span="69-69", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.HoursAgo()", file="FrenchNumberToWordsConverter.cs"];
m9_41 [label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.HoursAgo()", span="67-67", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.HoursAgo()", file="FrenchNumberToWordsConverter.cs"];
m9_22 [label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file="FrenchNumberToWordsConverter.cs"];
m9_3 [label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.VerifyWithCurrentDate(string, System.TimeSpan)", span="9-9", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.VerifyWithCurrentDate(string, System.TimeSpan)", file="FrenchNumberToWordsConverter.cs"];
m9_29 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="FrenchNumberToWordsConverter.cs"];
m9_23 [label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.JustNow()", span="37-37", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.JustNow()", file="FrenchNumberToWordsConverter.cs"];
m9_24 [label="Verify(Resources.GetResource(ResourceKeys.DateHumanize.SingleSecondAgo), new TimeSpan(0, 0, 0, -1))", span="39-39", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.JustNow()", file="FrenchNumberToWordsConverter.cs"];
m9_25 [label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.JustNow()", span="37-37", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.JustNow()", file="FrenchNumberToWordsConverter.cs"];
m9_0 [label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.VerifyWithCurrentDate(string, System.TimeSpan)", span="9-9", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.VerifyWithCurrentDate(string, System.TimeSpan)", file="FrenchNumberToWordsConverter.cs"];
m9_1 [label="Assert.Equal(expectedString, DateTime.UtcNow.Add(deltaFromNow).Humanize())", span="11-11", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.VerifyWithCurrentDate(string, System.TimeSpan)", file="FrenchNumberToWordsConverter.cs"];
m9_2 [label="Assert.Equal(expectedString, DateTime.Now.Add(deltaFromNow).Humanize(false))", span="12-12", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.VerifyWithCurrentDate(string, System.TimeSpan)", file="FrenchNumberToWordsConverter.cs"];
m9_48 [label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.OneMonthAgo()", span="85-85", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.OneMonthAgo()", file="FrenchNumberToWordsConverter.cs"];
m9_49 [label="Verify(Resources.GetResource(ResourceKeys.DateHumanize.SingleMonthAgo), new TimeSpan(-30, 0, 0, 0))", span="87-87", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.OneMonthAgo()", file="FrenchNumberToWordsConverter.cs"];
m9_50 [label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.OneMonthAgo()", span="85-85", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.OneMonthAgo()", file="FrenchNumberToWordsConverter.cs"];
m9_7 [label="Exit Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", span="70-70", cluster="Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", file="FrenchNumberToWordsConverter.cs"];
m9_8 [label="Entry int.Ordinalize()", span="25-25", cluster="int.Ordinalize()", file="FrenchNumberToWordsConverter.cs"];
m9_9 [label="var now = new DateTime(2013, 6, 20, 11, 58, 22, DateTimeKind.Local)", span="18-18", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.VerifyWithDateInjection(string, System.TimeSpan)", file="FrenchNumberToWordsConverter.cs"];
m9_10 [label="Assert.Equal(expectedString, utcNow.Add(deltaFromNow).Humanize(dateToCompareAgainst: utcNow))", span="20-20", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.VerifyWithDateInjection(string, System.TimeSpan)", file="FrenchNumberToWordsConverter.cs"];
m9_11 [label="Assert.Equal(expectedString, now.Add(deltaFromNow).Humanize(false, now))", span="21-21", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.VerifyWithDateInjection(string, System.TimeSpan)", file="FrenchNumberToWordsConverter.cs"];
m9_12 [label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.VerifyWithDateInjection(string, System.TimeSpan)", span="15-15", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.VerifyWithDateInjection(string, System.TimeSpan)", file="FrenchNumberToWordsConverter.cs"];
m9_13 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="FrenchNumberToWordsConverter.cs"];
m9_33 [label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.AFewMinutesAgo()", span="55-55", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.AFewMinutesAgo()", file="FrenchNumberToWordsConverter.cs"];
m9_34 [label="Verify(string.Format(Resources.GetResource(ResourceKeys.DateHumanize.MultipleMinutesAgo), 10), new TimeSpan(0, 0, -10, 0))", span="57-57", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.AFewMinutesAgo()", file="FrenchNumberToWordsConverter.cs"];
m9_35 [label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.AFewMinutesAgo()", span="55-55", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.AFewMinutesAgo()", file="FrenchNumberToWordsConverter.cs"];
m9_45 [label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.AFewDaysAgo()", span="79-79", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.AFewDaysAgo()", file="FrenchNumberToWordsConverter.cs"];
m9_46 [label="Verify(string.Format(Resources.GetResource(ResourceKeys.DateHumanize.MultipleDaysAgo), 10), new TimeSpan(-10, 0, 0, 0))", span="81-81", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.AFewDaysAgo()", file="FrenchNumberToWordsConverter.cs"];
m9_47 [label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.AFewDaysAgo()", span="79-79", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.AFewDaysAgo()", file="FrenchNumberToWordsConverter.cs"];
m9_51 [label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.AFewMonthsAgo()", span="91-91", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.AFewMonthsAgo()", file="FrenchNumberToWordsConverter.cs"];
m9_52 [label="Verify(string.Format(Resources.GetResource(ResourceKeys.DateHumanize.MultipleMonthsAgo), 2), new TimeSpan(-60, 0, 0, 0))", span="93-93", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.AFewMonthsAgo()", color=green, community=0, file="FrenchNumberToWordsConverter.cs"];
m9_53 [label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.AFewMonthsAgo()", span="91-91", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.AFewMonthsAgo()", file="FrenchNumberToWordsConverter.cs"];
m9_36 [label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.AnHourAgo()", span="61-61", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.AnHourAgo()", file="FrenchNumberToWordsConverter.cs"];
m9_37 [label="Verify(Resources.GetResource(ResourceKeys.DateHumanize.SingleHourAgo), new TimeSpan(0, -1, -10, 0))", span="63-63", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.AnHourAgo()", file="FrenchNumberToWordsConverter.cs"];
m9_38 [label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.AnHourAgo()", span="61-61", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.AnHourAgo()", file="FrenchNumberToWordsConverter.cs"];
m9_60 [label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.FewYearsAgo()", span="109-109", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.FewYearsAgo()", file="FrenchNumberToWordsConverter.cs"];
m9_61 [label="Verify(string.Format(Resources.GetResource(ResourceKeys.DateHumanize.MultipleYearsAgo), 2), new TimeSpan(-900, 0, 0, 0))", span="111-111", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.FewYearsAgo()", file="FrenchNumberToWordsConverter.cs"];
m9_62 [label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.FewYearsAgo()", span="109-109", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.FewYearsAgo()", file="FrenchNumberToWordsConverter.cs"];
m9_54 [label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.OneYearAgoIsNotAccureate()", span="97-97", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.OneYearAgoIsNotAccureate()", file="FrenchNumberToWordsConverter.cs"];
m9_55 [label="Verify(Resources.GetResource(ResourceKeys.DateHumanize.SingleYearAgo), new TimeSpan(-360, 0, 0, 0))", span="99-99", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.OneYearAgoIsNotAccureate()", color=green, community=0, file="FrenchNumberToWordsConverter.cs"];
m9_56 [label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.OneYearAgoIsNotAccureate()", span="97-97", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.OneYearAgoIsNotAccureate()", file="FrenchNumberToWordsConverter.cs"];
m9_57 [label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.OneYearAgo()", span="103-103", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.OneYearAgo()", file="FrenchNumberToWordsConverter.cs"];
m9_58 [label="Verify(Resources.GetResource(ResourceKeys.DateHumanize.SingleYearAgo), new TimeSpan(-400, 0, 0, 0))", span="105-105", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.OneYearAgo()", file="FrenchNumberToWordsConverter.cs"];
m9_59 [label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.OneYearAgo()", span="103-103", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.OneYearAgo()", file="FrenchNumberToWordsConverter.cs"];
m9_14 [label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.Verify(string, System.TimeSpan)", span="24-24", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.Verify(string, System.TimeSpan)", file="FrenchNumberToWordsConverter.cs"];
m9_15 [label="VerifyWithCurrentDate(expectedString, deltaFromNow)", span="26-26", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.Verify(string, System.TimeSpan)", file="FrenchNumberToWordsConverter.cs"];
m9_16 [label="VerifyWithDateInjection(expectedString, deltaFromNow)", span="27-27", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.Verify(string, System.TimeSpan)", file="FrenchNumberToWordsConverter.cs"];
m9_17 [label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.Verify(string, System.TimeSpan)", span="24-24", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.Verify(string, System.TimeSpan)", file="FrenchNumberToWordsConverter.cs"];
m9_21 [label="Entry Humanizer.Localisation.Resources.GetResource(string)", span="26-26", cluster="Humanizer.Localisation.Resources.GetResource(string)", file="FrenchNumberToWordsConverter.cs"];
m9_18 [label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.FutureDates()", span="31-31", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.FutureDates()", file="FrenchNumberToWordsConverter.cs"];
m9_19 [label="Verify(Resources.GetResource(ResourceKeys.DateHumanize.NotYet), new TimeSpan(0, 0, 1, 0))", span="33-33", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.FutureDates()", file="FrenchNumberToWordsConverter.cs"];
m9_20 [label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.FutureDates()", span="31-31", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.FutureDates()", file="FrenchNumberToWordsConverter.cs"];
m9_30 [label="Entry Humanizer.Tests.Extensions.DateHumanizeTests.OneMinuteAgo()", span="49-49", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.OneMinuteAgo()", file="FrenchNumberToWordsConverter.cs"];
m9_31 [label="Verify(Resources.GetResource(ResourceKeys.DateHumanize.SingleMinuteAgo), new TimeSpan(0, 0, -1, 0))", span="51-51", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.OneMinuteAgo()", file="FrenchNumberToWordsConverter.cs"];
m9_32 [label="Exit Humanizer.Tests.Extensions.DateHumanizeTests.OneMinuteAgo()", span="49-49", cluster="Humanizer.Tests.Extensions.DateHumanizeTests.OneMinuteAgo()", file="FrenchNumberToWordsConverter.cs"];
m9_63 [label="Humanizer.Tests.Extensions.DateHumanizeTests", span="", file="FrenchNumberToWordsConverter.cs"];
m10_0 [label="Entry Humanizer.DateTimeHumanizeStrategy.IDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", span="6-6", cluster="Humanizer.DateTimeHumanizeStrategy.IDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="IDateTimeHumanizeStrategy.cs"];
m10_1 [label="Exit Humanizer.DateTimeHumanizeStrategy.IDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", span="6-6", cluster="Humanizer.DateTimeHumanizeStrategy.IDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="IDateTimeHumanizeStrategy.cs"];
m11_0 [label="Entry Humanizer.ITruncator.Truncate(string, int, string)", span="14-14", cluster="Humanizer.ITruncator.Truncate(string, int, string)", file="ITruncator.cs"];
m11_1 [label="Exit Humanizer.ITruncator.Truncate(string, int, string)", span="14-14", cluster="Humanizer.ITruncator.Truncate(string, int, string)", file="ITruncator.cs"];
m12_12 [label="Entry T.ToMaybe<T>()", span="82-82", cluster="T.ToMaybe<T>()", file="NumberToWordsTests.cs"];
m12_0 [label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="17-17", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="NumberToWordsTests.cs"];
m12_1 [label="this.shortName = shortName", span="20-20", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="NumberToWordsTests.cs"];
m12_2 [label="this.longName = longName", span="21-21", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="NumberToWordsTests.cs"];
m12_3 [label="this.separator = separator", span="22-22", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="NumberToWordsTests.cs"];
m12_4 [label="this.setName = setName", span="23-23", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="NumberToWordsTests.cs"];
m12_5 [label="this.helpText = helpText", span="24-24", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="NumberToWordsTests.cs"];
m12_6 [label="this.metaValue = metaValue", span="25-25", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="NumberToWordsTests.cs"];
m12_7 [label="this.enumValues = enumValues", span="26-26", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="NumberToWordsTests.cs"];
m12_8 [label="Exit CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="17-17", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="NumberToWordsTests.cs"];
m12_9 [label="Entry CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", span="29-29", cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="NumberToWordsTests.cs"];
m12_10 [label="return new OptionSpecification(\r\n                attribute.ShortName,\r\n                attribute.LongName,\r\n                attribute.Required,\r\n                attribute.SetName,\r\n                attribute.Min,\r\n                attribute.Max,\r\n                attribute.Separator,\r\n                attribute.DefaultValue.ToMaybe(),\r\n                conversionType,\r\n                attribute.HelpText,\r\n                attribute.MetaValue,\r\n                enumValues);", span="31-43", cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", color=red, community=0, file="NumberToWordsTests.cs"];
m12_11 [label="Exit CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", span="29-29", cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="NumberToWordsTests.cs"];
m12_13 [label="CommandLine.Core.OptionSpecification", span="", file="NumberToWordsTests.cs"];
m13_5 [label="AddPlural(''(alias|status)$'', ''$1es'')", span="14-14", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs"];
m13_6 [label="AddPlural(''(bu)s$'', ''$1ses'')", span="15-15", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs"];
m13_7 [label="AddPlural(''(buffal|tomat|volcan)o$'', ''$1oes'')", span="16-16", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs"];
m13_8 [label="AddPlural(''([ti])um$'', ''$1a'')", span="17-17", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", color=red, community=0];
m13_135 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)", file="OrdinalizeExtensions.cs"];
m13_28 [label="AddSingular(''(s)eries$'', ''$1eries'')", span="38-38", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs"];
m13_21 [label="AddSingular(''((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$'', ''$1$2sis'')", span="31-31", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs"];
m13_22 [label="AddSingular(''(^analy)ses$'', ''$1sis'')", span="32-32", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", color=red, community=0];
m13_23 [label="AddSingular(''([^f])ves$'', ''$1fe'')", span="33-33", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs"];
m13_131 [label="Entry Humanizer.InflectorExtensions.Ordanize(int, string)", span="226-226", cluster="Humanizer.InflectorExtensions.Ordanize(int, string)", file="OrdinalizeExtensions.cs"];
m13_136 [label="int nMod100 = number % 100", span="228-228", cluster="Humanizer.InflectorExtensions.Ordanize(int, string)", file="OrdinalizeExtensions.cs"];
m13_138 [label="return numberString + ''th'';", span="232-232", cluster="Humanizer.InflectorExtensions.Ordanize(int, string)", file="OrdinalizeExtensions.cs"];
m13_139 [label="number % 10", span="235-235", cluster="Humanizer.InflectorExtensions.Ordanize(int, string)", file="OrdinalizeExtensions.cs"];
m13_141 [label="return numberString + ''st'';", span="238-238", cluster="Humanizer.InflectorExtensions.Ordanize(int, string)", file="OrdinalizeExtensions.cs"];
m13_143 [label="return numberString + ''nd'';", span="240-240", cluster="Humanizer.InflectorExtensions.Ordanize(int, string)", file="OrdinalizeExtensions.cs"];
m13_145 [label="return numberString + ''rd'';", span="242-242", cluster="Humanizer.InflectorExtensions.Ordanize(int, string)", file="OrdinalizeExtensions.cs"];
m13_146 [label="return numberString + ''th'';", span="244-244", cluster="Humanizer.InflectorExtensions.Ordanize(int, string)", file="OrdinalizeExtensions.cs"];
m13_137 [label="nMod100 >= 11 && nMod100 <= 13", span="230-230", cluster="Humanizer.InflectorExtensions.Ordanize(int, string)", file="OrdinalizeExtensions.cs"];
m13_140 [label=1, span="237-237", cluster="Humanizer.InflectorExtensions.Ordanize(int, string)", file="OrdinalizeExtensions.cs"];
m13_142 [label=2, span="239-239", cluster="Humanizer.InflectorExtensions.Ordanize(int, string)", file="OrdinalizeExtensions.cs"];
m13_144 [label=3, span="241-241", cluster="Humanizer.InflectorExtensions.Ordanize(int, string)", file="OrdinalizeExtensions.cs"];
m13_147 [label="Exit Humanizer.InflectorExtensions.Ordanize(int, string)", span="226-226", cluster="Humanizer.InflectorExtensions.Ordanize(int, string)", file="OrdinalizeExtensions.cs"];
m13_33 [label="AddSingular(''(o)es$'', ''$1'')", span="43-43", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", color=red, community=0];
m13_34 [label="AddSingular(''(shoe)s$'', ''$1'')", span="44-44", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", color=red, community=0];
m13_35 [label="AddSingular(''(cris|ax|test)es$'', ''$1is'')", span="45-45", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", color=red, community=0];
m13_116 [label="Entry Humanizer.InflectorExtensions.Camelize(string)", span="183-183", cluster="Humanizer.InflectorExtensions.Camelize(string)", file="OrdinalizeExtensions.cs"];
m13_117 [label="return Uncapitalize(Pascalize(input));", span="185-185", cluster="Humanizer.InflectorExtensions.Camelize(string)", file="OrdinalizeExtensions.cs"];
m13_118 [label="Exit Humanizer.InflectorExtensions.Camelize(string)", span="183-183", cluster="Humanizer.InflectorExtensions.Camelize(string)", file="OrdinalizeExtensions.cs"];
m13_4 [label="AddPlural(''(octop|vir|alumn|fung)us$'', ''$1i'')", span="13-13", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs"];
m13_75 [label="Entry System.Text.RegularExpressions.Regex.Replace(string, string)", span="0-0", cluster="System.Text.RegularExpressions.Regex.Replace(string, string)", file="OrdinalizeExtensions.cs"];
m13_91 [label="Entry Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", span="140-140", cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="OrdinalizeExtensions.cs"];
m13_95 [label="string result = word", span="142-142", cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="OrdinalizeExtensions.cs"];
m13_96 [label="!Uncountables.Contains(word.ToLower())", span="144-144", cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="OrdinalizeExtensions.cs"];
m13_97 [label="int i = rules.Count - 1", span="146-146", cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="OrdinalizeExtensions.cs"];
m13_99 [label="(result = rules[i].Apply(word)) != null", span="148-148", cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="OrdinalizeExtensions.cs"];
m13_101 [label="return result;", span="155-155", cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="OrdinalizeExtensions.cs"];
m13_98 [label="i >= 0", span="146-146", cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="OrdinalizeExtensions.cs"];
m13_100 [label="i--", span="146-146", cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="OrdinalizeExtensions.cs"];
m13_102 [label="Exit Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", span="140-140", cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="OrdinalizeExtensions.cs"];
m13_13 [label="AddPlural(''(x|ch|ss|sh)$'', ''$1es'')", span="22-22", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs"];
m13_14 [label="AddPlural(''(matr|vert|ind)ix|ex$'', ''$1ices'')", span="23-23", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", color=green, community=0, file="OrdinalizeExtensions.cs"];
m13_15 [label="AddPlural(''([m|l])ouse$'', ''$1ice'')", span="24-24", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", color=green, community=0, file="OrdinalizeExtensions.cs"];
m13_16 [label="AddPlural(''^(ox)$'', ''$1en'')", span="25-25", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs"];
m13_120 [label="Entry Humanizer.InflectorExtensions.Underscore(string)", span="193-193", cluster="Humanizer.InflectorExtensions.Underscore(string)", file="OrdinalizeExtensions.cs"];
m13_121 [label="return Regex.Replace(\r\n                Regex.Replace(\r\n                    Regex.Replace(input, @''([A-Z]+)([A-Z][a-z])'', ''$1_$2''), @''([a-z\d])([A-Z])'',\r\n                    ''$1_$2''), @''[-\s]'', ''_'').ToLower();", span="195-198", cluster="Humanizer.InflectorExtensions.Underscore(string)", file="OrdinalizeExtensions.cs"];
m13_122 [label="Exit Humanizer.InflectorExtensions.Underscore(string)", span="193-193", cluster="Humanizer.InflectorExtensions.Underscore(string)", file="OrdinalizeExtensions.cs"];
m13_92 [label="Entry Humanizer.InflectorExtensions.Singularize(string)", span="135-135", cluster="Humanizer.InflectorExtensions.Singularize(string)", file="OrdinalizeExtensions.cs"];
m13_93 [label="return ApplyRules(Singulars, word);", span="137-137", cluster="Humanizer.InflectorExtensions.Singularize(string)", file="OrdinalizeExtensions.cs"];
m13_94 [label="Exit Humanizer.InflectorExtensions.Singularize(string)", span="135-135", cluster="Humanizer.InflectorExtensions.Singularize(string)", file="OrdinalizeExtensions.cs"];
m13_151 [label="Entry string.Replace(char, char)", span="0-0", cluster="string.Replace(char, char)", file="OrdinalizeExtensions.cs"];
m13_123 [label="Entry System.Text.RegularExpressions.Regex.Replace(string, string, string)", span="0-0", cluster="System.Text.RegularExpressions.Regex.Replace(string, string, string)", file="OrdinalizeExtensions.cs"];
m13_130 [label="Entry int.Parse(string)", span="0-0", cluster="int.Parse(string)", file="OrdinalizeExtensions.cs"];
m13_37 [label="AddSingular(''(alias|status)es$'', ''$1'')", span="47-47", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", color=red, community=0];
m13_38 [label="AddSingular(''^(ox)en'', ''$1'')", span="48-48", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", color=red, community=0];
m13_39 [label="AddSingular(''(vert|ind)ices$'', ''$1ex'')", span="49-49", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs"];
m13_61 [label="Entry Humanizer.InflectorExtensions.AddSingular(string, string)", span="111-111", cluster="Humanizer.InflectorExtensions.AddSingular(string, string)", file="OrdinalizeExtensions.cs"];
m13_86 [label="Singulars.Add(new Rule(rule, replacement))", span="113-113", cluster="Humanizer.InflectorExtensions.AddSingular(string, string)", file="OrdinalizeExtensions.cs"];
m13_87 [label="Exit Humanizer.InflectorExtensions.AddSingular(string, string)", span="111-111", cluster="Humanizer.InflectorExtensions.AddSingular(string, string)", file="OrdinalizeExtensions.cs"];
m13_103 [label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Contains(T)", file="OrdinalizeExtensions.cs"];
m13_108 [label="Entry Humanizer.InflectorExtensions.Pascalize(string)", span="173-173", cluster="Humanizer.InflectorExtensions.Pascalize(string)", file="OrdinalizeExtensions.cs"];
m13_109 [label="return Regex.Replace(input, ''(?:^|_)(.)'', match => match.Groups[1].Value.ToUpper());", span="175-175", cluster="Humanizer.InflectorExtensions.Pascalize(string)", file="OrdinalizeExtensions.cs"];
m13_110 [label="Exit Humanizer.InflectorExtensions.Pascalize(string)", span="173-173", cluster="Humanizer.InflectorExtensions.Pascalize(string)", file="OrdinalizeExtensions.cs"];
m13_115 [label="Entry string.ToUpper()", span="0-0", cluster="string.ToUpper()", file="OrdinalizeExtensions.cs"];
m13_32 [label="AddSingular(''(bus)es$'', ''$1'')", span="42-42", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", color=red, community=0];
m13_17 [label="AddPlural(''(quiz)$'', ''$1zes'')", span="26-26", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs"];
m13_18 [label="AddSingular(''s$'', '''')", span="28-28", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs"];
m13_19 [label="AddSingular(''(n)ews$'', ''$1ews'')", span="29-29", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs"];
m13_126 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="OrdinalizeExtensions.cs"];
m13_20 [label="AddSingular(''([ti])a$'', ''$1um'')", span="30-30", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs", color=red, community=0];
m13_0 [label="Entry Humanizer.InflectorExtensions.InflectorExtensions()", span="8-8", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs"];
m13_1 [label="AddPlural(''$'', ''s'')", span="10-10", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", color=green, community=0, file="OrdinalizeExtensions.cs"];
m13_2 [label="AddPlural(''s$'', ''s'')", span="11-11", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs"];
m13_3 [label="AddPlural(''(ax|test)is$'', ''$1es'')", span="12-12", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs"];
m13_9 [label="Entry Humanizer.Tests.InflectorTests.Singularize(string, string)", span="51-51", cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", file="OrdinalizeExtensions.cs"];
m13_10 [label="Assert.Equal(singular, plural.Singularize())", span="53-53", cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", file="OrdinalizeExtensions.cs"];
m13_11 [label="Exit Humanizer.Tests.InflectorTests.Singularize(string, string)", span="51-51", cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", file="OrdinalizeExtensions.cs"];
m13_12 [label="Entry string.Singularize(bool)", span="75-75", cluster="string.Singularize(bool)", file="OrdinalizeExtensions.cs"];
m13_24 [label="Entry string.Dasherize()", span="128-128", cluster="string.Dasherize()", color=red, community=0, file="OrdinalizeExtensions.cs"];
m13_25 [label="Entry Humanizer.Tests.InflectorTests.Hyphenate(string, string)", span="92-92", cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)", file="OrdinalizeExtensions.cs"];
m13_26 [label="Assert.Equal(input.Hyphenate(), expectedOutput)", span="94-94", cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)", color=red, community=0, file="OrdinalizeExtensions.cs"];
m13_27 [label="Exit Humanizer.Tests.InflectorTests.Hyphenate(string, string)", span="92-92", cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)", color=red, community=0, file="OrdinalizeExtensions.cs"];
m13_29 [label="Entry Humanizer.Tests.InflectorTests.Pascalize(string, string)", span="105-105", cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", color=red, community=0, file="OrdinalizeExtensions.cs"];
m13_30 [label="Assert.Equal(expectedOutput, input.Pascalize())", span="107-107", cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", color=red, community=0, file="OrdinalizeExtensions.cs"];
m13_31 [label="Exit Humanizer.Tests.InflectorTests.Pascalize(string, string)", span="105-105", cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", color=red, community=0, file="OrdinalizeExtensions.cs"];
m13_36 [label="Entry string.Camelize()", span="105-105", cluster="string.Camelize()", color=red, community=0, file="OrdinalizeExtensions.cs"];
m13_40 [label="Entry string.Underscore()", span="116-116", cluster="string.Underscore()", file="OrdinalizeExtensions.cs"];
m13_41 [label="AddSingular(''(quiz)zes$'', ''$1'')", span="51-51", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs"];
m13_42 [label="AddIrregular(''person'', ''people'')", span="53-53", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs"];
m13_43 [label="AddIrregular(''man'', ''men'')", span="54-54", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs"];
m13_44 [label="AddIrregular(''child'', ''children'')", span="55-55", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs"];
m13_45 [label="AddIrregular(''sex'', ''sexes'')", span="56-56", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs"];
m13_46 [label="AddIrregular(''move'', ''moves'')", span="57-57", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs"];
m13_47 [label="AddIrregular(''goose'', ''geese'')", span="58-58", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs"];
m13_48 [label="AddIrregular(''alumna'', ''alumnae'')", span="59-59", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs"];
m13_49 [label="AddUncountable(''equipment'')", span="61-61", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs"];
m13_50 [label="AddUncountable(''information'')", span="62-62", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs"];
m13_51 [label="AddUncountable(''rice'')", span="63-63", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs"];
m13_52 [label="AddUncountable(''money'')", span="64-64", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs"];
m13_53 [label="AddUncountable(''species'')", span="65-65", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs"];
m13_54 [label="AddUncountable(''series'')", span="66-66", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs"];
m13_55 [label="AddUncountable(''fish'')", span="67-67", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs"];
m13_56 [label="AddUncountable(''sheep'')", span="68-68", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs"];
m13_57 [label="AddUncountable(''deer'')", span="69-69", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs"];
m13_58 [label="AddUncountable(''aircraft'')", span="70-70", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs"];
m13_59 [label="Exit Humanizer.InflectorExtensions.InflectorExtensions()", span="8-8", cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="OrdinalizeExtensions.cs"];
m13_62 [label="Entry Humanizer.InflectorExtensions.AddIrregular(string, string)", span="95-95", cluster="Humanizer.InflectorExtensions.AddIrregular(string, string)", file="OrdinalizeExtensions.cs"];
m13_76 [label="AddPlural(''('' + singular[0] + '')'' + singular.Substring(1) + ''$'', ''$1'' + plural.Substring(1))", span="97-97", cluster="Humanizer.InflectorExtensions.AddIrregular(string, string)", file="OrdinalizeExtensions.cs"];
m13_77 [label="AddSingular(''('' + plural[0] + '')'' + plural.Substring(1) + ''$'', ''$1'' + singular.Substring(1))", span="98-98", cluster="Humanizer.InflectorExtensions.AddIrregular(string, string)", file="OrdinalizeExtensions.cs"];
m13_78 [label="Exit Humanizer.InflectorExtensions.AddIrregular(string, string)", span="95-95", cluster="Humanizer.InflectorExtensions.AddIrregular(string, string)", file="OrdinalizeExtensions.cs"];
m13_132 [label="Entry Humanizer.InflectorExtensions.Ordinalize(int)", span="221-221", cluster="Humanizer.InflectorExtensions.Ordinalize(int)", file="OrdinalizeExtensions.cs"];
m13_133 [label="return Ordanize(number, number.ToString(CultureInfo.InvariantCulture));", span="223-223", cluster="Humanizer.InflectorExtensions.Ordinalize(int)", file="OrdinalizeExtensions.cs"];
m13_134 [label="Exit Humanizer.InflectorExtensions.Ordinalize(int)", span="221-221", cluster="Humanizer.InflectorExtensions.Ordinalize(int)", file="OrdinalizeExtensions.cs"];
m13_127 [label="Entry Humanizer.InflectorExtensions.Ordinalize(string)", span="211-211", cluster="Humanizer.InflectorExtensions.Ordinalize(string)", file="OrdinalizeExtensions.cs"];
m13_128 [label="return Ordanize(int.Parse(numberString), numberString);", span="213-213", cluster="Humanizer.InflectorExtensions.Ordinalize(string)", file="OrdinalizeExtensions.cs"];
m13_129 [label="Exit Humanizer.InflectorExtensions.Ordinalize(string)", span="211-211", cluster="Humanizer.InflectorExtensions.Ordinalize(string)", file="OrdinalizeExtensions.cs"];
m13_63 [label="Entry Humanizer.InflectorExtensions.AddUncountable(string)", span="101-101", cluster="Humanizer.InflectorExtensions.AddUncountable(string)", file="OrdinalizeExtensions.cs"];
m13_80 [label="Uncountables.Add(word.ToLower())", span="103-103", cluster="Humanizer.InflectorExtensions.AddUncountable(string)", file="OrdinalizeExtensions.cs"];
m13_81 [label="Exit Humanizer.InflectorExtensions.AddUncountable(string)", span="101-101", cluster="Humanizer.InflectorExtensions.AddUncountable(string)", file="OrdinalizeExtensions.cs"];
m13_107 [label="Entry string.Humanize(Humanizer.LetterCasing)", span="60-60", cluster="string.Humanize(Humanizer.LetterCasing)", file="OrdinalizeExtensions.cs"];
m13_148 [label="Entry Humanizer.InflectorExtensions.Dasherize(string)", span="253-253", cluster="Humanizer.InflectorExtensions.Dasherize(string)", file="OrdinalizeExtensions.cs"];
m13_149 [label="return underscoredWord.Replace('_', '-');", span="255-255", cluster="Humanizer.InflectorExtensions.Dasherize(string)", file="OrdinalizeExtensions.cs"];
m13_150 [label="Exit Humanizer.InflectorExtensions.Dasherize(string)", span="253-253", cluster="Humanizer.InflectorExtensions.Dasherize(string)", file="OrdinalizeExtensions.cs"];
m13_111 [label="Entry System.Text.RegularExpressions.Regex.Replace(string, string, System.Text.RegularExpressions.MatchEvaluator)", span="0-0", cluster="System.Text.RegularExpressions.Regex.Replace(string, string, System.Text.RegularExpressions.MatchEvaluator)", file="OrdinalizeExtensions.cs"];
m13_64 [label="Entry Humanizer.InflectorExtensions.Rule.Rule(string, string)", span="78-78", cluster="Humanizer.InflectorExtensions.Rule.Rule(string, string)", file="OrdinalizeExtensions.cs"];
m13_65 [label="_regex = new Regex(pattern, RegexOptions.IgnoreCase)", span="80-80", cluster="Humanizer.InflectorExtensions.Rule.Rule(string, string)", file="OrdinalizeExtensions.cs"];
m13_66 [label="_replacement = replacement", span="81-81", cluster="Humanizer.InflectorExtensions.Rule.Rule(string, string)", file="OrdinalizeExtensions.cs"];
m13_67 [label="Exit Humanizer.InflectorExtensions.Rule.Rule(string, string)", span="78-78", cluster="Humanizer.InflectorExtensions.Rule.Rule(string, string)", file="OrdinalizeExtensions.cs"];
m13_112 [label="Entry lambda expression", span="175-175", cluster="lambda expression", file="OrdinalizeExtensions.cs"];
m13_113 [label="match.Groups[1].Value.ToUpper()", span="175-175", cluster="lambda expression", file="OrdinalizeExtensions.cs"];
m13_114 [label="Exit lambda expression", span="175-175", cluster="lambda expression", file="OrdinalizeExtensions.cs"];
m13_69 [label="Entry Humanizer.InflectorExtensions.Rule.Apply(string)", span="84-84", cluster="Humanizer.InflectorExtensions.Rule.Apply(string)", file="OrdinalizeExtensions.cs"];
m13_70 [label="!_regex.IsMatch(word)", span="86-86", cluster="Humanizer.InflectorExtensions.Rule.Apply(string)", file="OrdinalizeExtensions.cs"];
m13_72 [label="return _regex.Replace(word, _replacement);", span="91-91", cluster="Humanizer.InflectorExtensions.Rule.Apply(string)", file="OrdinalizeExtensions.cs"];
m13_71 [label="return null;", span="88-88", cluster="Humanizer.InflectorExtensions.Rule.Apply(string)", file="OrdinalizeExtensions.cs"];
m13_73 [label="Exit Humanizer.InflectorExtensions.Rule.Apply(string)", span="84-84", cluster="Humanizer.InflectorExtensions.Rule.Apply(string)", file="OrdinalizeExtensions.cs"];
m13_88 [label="Entry Humanizer.InflectorExtensions.Pluralize(string)", span="125-125", cluster="Humanizer.InflectorExtensions.Pluralize(string)", file="OrdinalizeExtensions.cs"];
m13_89 [label="return ApplyRules(Plurals, word);", span="127-127", cluster="Humanizer.InflectorExtensions.Pluralize(string)", file="OrdinalizeExtensions.cs"];
m13_90 [label="Exit Humanizer.InflectorExtensions.Pluralize(string)", span="125-125", cluster="Humanizer.InflectorExtensions.Pluralize(string)", file="OrdinalizeExtensions.cs"];
m13_68 [label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", span="0-0", cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", file="OrdinalizeExtensions.cs"];
m13_74 [label="Entry System.Text.RegularExpressions.Regex.IsMatch(string)", span="0-0", cluster="System.Text.RegularExpressions.Regex.IsMatch(string)", file="OrdinalizeExtensions.cs"];
m13_104 [label="Entry Humanizer.InflectorExtensions.Titleize(string)", span="163-163", cluster="Humanizer.InflectorExtensions.Titleize(string)", file="OrdinalizeExtensions.cs"];
m13_105 [label="return input.Humanize(LetterCasing.Title);", span="165-165", cluster="Humanizer.InflectorExtensions.Titleize(string)", file="OrdinalizeExtensions.cs"];
m13_106 [label="Exit Humanizer.InflectorExtensions.Titleize(string)", span="163-163", cluster="Humanizer.InflectorExtensions.Titleize(string)", file="OrdinalizeExtensions.cs"];
m13_83 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="OrdinalizeExtensions.cs"];
m13_119 [label="Entry Humanizer.InflectorExtensions.Uncapitalize(string)", span="201-201", cluster="Humanizer.InflectorExtensions.Uncapitalize(string)", file="OrdinalizeExtensions.cs"];
m13_124 [label="return word.Substring(0, 1).ToLower() + word.Substring(1);", span="203-203", cluster="Humanizer.InflectorExtensions.Uncapitalize(string)", file="OrdinalizeExtensions.cs"];
m13_125 [label="Exit Humanizer.InflectorExtensions.Uncapitalize(string)", span="201-201", cluster="Humanizer.InflectorExtensions.Uncapitalize(string)", file="OrdinalizeExtensions.cs"];
m13_60 [label="Entry Humanizer.InflectorExtensions.AddPlural(string, string)", span="106-106", cluster="Humanizer.InflectorExtensions.AddPlural(string, string)", file="OrdinalizeExtensions.cs"];
m13_84 [label="Plurals.Add(new Rule(rule, replacement))", span="108-108", cluster="Humanizer.InflectorExtensions.AddPlural(string, string)", file="OrdinalizeExtensions.cs"];
m13_85 [label="Exit Humanizer.InflectorExtensions.AddPlural(string, string)", span="106-106", cluster="Humanizer.InflectorExtensions.AddPlural(string, string)", file="OrdinalizeExtensions.cs"];
m13_82 [label="Entry string.ToLower()", span="0-0", cluster="string.ToLower()", file="OrdinalizeExtensions.cs"];
m13_79 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="OrdinalizeExtensions.cs"];
m13_152 [label="Humanizer.InflectorExtensions.Rule", span="", file="OrdinalizeExtensions.cs"];
m14_0 [label="Entry Humanizer.Tests.OrdinalizeTests.OrdinalizeString(string, string)", span="36-36", cluster="Humanizer.Tests.OrdinalizeTests.OrdinalizeString(string, string)", file="OrdinalizeTests.cs"];
m14_1 [label="Assert.Equal(number.Ordinalize(), ordinalized)", span="38-38", cluster="Humanizer.Tests.OrdinalizeTests.OrdinalizeString(string, string)", file="OrdinalizeTests.cs"];
m14_2 [label="Exit Humanizer.Tests.OrdinalizeTests.OrdinalizeString(string, string)", span="36-36", cluster="Humanizer.Tests.OrdinalizeTests.OrdinalizeString(string, string)", file="OrdinalizeTests.cs"];
m14_5 [label="Entry Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", span="70-70", cluster="Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", file="OrdinalizeTests.cs"];
m14_6 [label="Assert.Equal(number.Ordinalize(), ordinalized)", span="72-72", cluster="Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", file="OrdinalizeTests.cs"];
m14_7 [label="Exit Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", span="70-70", cluster="Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", file="OrdinalizeTests.cs"];
m14_4 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="OrdinalizeTests.cs"];
m14_8 [label="Entry int.Ordinalize()", span="25-25", cluster="int.Ordinalize()", file="OrdinalizeTests.cs"];
m14_3 [label="Entry string.Ordinalize()", span="15-15", cluster="string.Ordinalize()", file="OrdinalizeTests.cs"];
m15_31 [label="Entry Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor10DaysAgo()", span="65-65", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor10DaysAgo()", file="PolishNumberToWordsConverter.cs"];
m15_32 [label="var tenDaysAgo = DateTime.UtcNow.AddDays(-10).Humanize()", span="67-67", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor10DaysAgo()", color=green, community=0, file="PolishNumberToWordsConverter.cs"];
m15_33 [label="Assert.Equal(''acum 10 zile'', tenDaysAgo)", span="69-69", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor10DaysAgo()", color=green, community=0, file="PolishNumberToWordsConverter.cs"];
m15_34 [label="Exit Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor10DaysAgo()", span="65-65", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor10DaysAgo()", file="PolishNumberToWordsConverter.cs"];
m15_7 [label="Entry System.DateTime.Humanize(bool, System.DateTime?)", span="20-20", cluster="System.DateTime.Humanize(bool, System.DateTime?)", file="PolishNumberToWordsConverter.cs"];
m15_2 [label="Entry Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectForThreeHoursAgo()", span="17-17", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectForThreeHoursAgo()", file="PolishNumberToWordsConverter.cs"];
m15_3 [label="var threeHoursAgo = DateTime.UtcNow.AddHours(-3).Humanize()", span="19-19", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectForThreeHoursAgo()", color=green, community=0, file="PolishNumberToWordsConverter.cs"];
m15_4 [label="Assert.Equal(''acum 3 ore'', threeHoursAgo)", span="21-21", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectForThreeHoursAgo()", file="PolishNumberToWordsConverter.cs"];
m15_5 [label="Exit Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectForThreeHoursAgo()", span="17-17", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectForThreeHoursAgo()", file="PolishNumberToWordsConverter.cs"];
m15_27 [label="Entry Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor59SecondsAgo()", span="57-57", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor59SecondsAgo()", file="PolishNumberToWordsConverter.cs"];
m15_28 [label="var fiftyNineSecondsAgo = DateTime.UtcNow.AddSeconds(-59).Humanize()", span="59-59", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor59SecondsAgo()", color=green, community=0, file="PolishNumberToWordsConverter.cs"];
m15_29 [label="Assert.Equal(''acum 59 de secunde'', fiftyNineSecondsAgo)", span="61-61", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor59SecondsAgo()", color=green, community=0, file="PolishNumberToWordsConverter.cs"];
m15_30 [label="Exit Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor59SecondsAgo()", span="57-57", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor59SecondsAgo()", file="PolishNumberToWordsConverter.cs"];
m15_17 [label="Entry System.DateTime.AddMinutes(double)", span="0-0", cluster="System.DateTime.AddMinutes(double)", file="PolishNumberToWordsConverter.cs"];
m15_26 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)", file="PolishNumberToWordsConverter.cs"];
m15_44 [label="Entry System.DateTime.AddYears(int)", span="0-0", cluster="System.DateTime.AddYears(int)", file="PolishNumberToWordsConverter.cs"];
m15_8 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="PolishNumberToWordsConverter.cs"];
m15_40 [label="Entry Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor119YearsAgo()", span="81-81", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor119YearsAgo()", file="PolishNumberToWordsConverter.cs"];
m15_42 [label="Assert.Equal(''acum 119 ani'', oneHundredNineteenYearsAgo)", span="85-85", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor119YearsAgo()", color=green, community=0, file="PolishNumberToWordsConverter.cs"];
m15_41 [label="var oneHundredNineteenYearsAgo = DateTime.UtcNow.AddYears(-119).Humanize()", span="83-83", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor119YearsAgo()", file="PolishNumberToWordsConverter.cs"];
m15_43 [label="Exit Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor119YearsAgo()", span="81-81", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor119YearsAgo()", file="PolishNumberToWordsConverter.cs"];
m15_45 [label="Entry Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor100YearsAgo()", span="89-89", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor100YearsAgo()", file="PolishNumberToWordsConverter.cs"];
m15_46 [label="var hunderedYearsAgo = DateTime.UtcNow.AddYears(-100).Humanize()", span="91-91", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor100YearsAgo()", color=green, community=0, file="PolishNumberToWordsConverter.cs"];
m15_47 [label="Assert.Equal(''acum 100 de ani'', hunderedYearsAgo)", span="93-93", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor100YearsAgo()", color=green, community=0, file="PolishNumberToWordsConverter.cs"];
m15_48 [label="Exit Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor100YearsAgo()", span="89-89", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor100YearsAgo()", file="PolishNumberToWordsConverter.cs"];
m15_22 [label="Entry Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor2SecondsAgo()", span="49-49", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor2SecondsAgo()", file="PolishNumberToWordsConverter.cs"];
m15_23 [label="var twoSecondsAgo = DateTime.UtcNow.AddSeconds(-2).Humanize()", span="51-51", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor2SecondsAgo()", file="PolishNumberToWordsConverter.cs"];
m15_24 [label="Assert.Equal(''acum 2 secunde'', twoSecondsAgo)", span="53-53", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor2SecondsAgo()", file="PolishNumberToWordsConverter.cs"];
m15_25 [label="Exit Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor2SecondsAgo()", span="49-49", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor2SecondsAgo()", file="PolishNumberToWordsConverter.cs"];
m15_36 [label="Entry Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor23DaysAgo()", span="73-73", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor23DaysAgo()", file="PolishNumberToWordsConverter.cs"];
m15_38 [label="Assert.Equal(''acum 23 de zile'', twentyThreeDaysAgo)", span="77-77", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor23DaysAgo()", color=green, community=0, file="PolishNumberToWordsConverter.cs"];
m15_37 [label="var twentyThreeDaysAgo = DateTime.UtcNow.AddDays(-23).Humanize()", span="75-75", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor23DaysAgo()", file="PolishNumberToWordsConverter.cs"];
m15_39 [label="Exit Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor23DaysAgo()", span="73-73", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor23DaysAgo()", file="PolishNumberToWordsConverter.cs"];
m15_9 [label="Entry Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor20HoursAgo()", span="25-25", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor20HoursAgo()", file="PolishNumberToWordsConverter.cs"];
m15_10 [label="var threeHoursAgo = DateTime.UtcNow.AddHours(-20).Humanize()", span="27-27", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor20HoursAgo()", color=green, community=0, file="PolishNumberToWordsConverter.cs"];
m15_11 [label="Assert.Equal(''acum 20 de ore'', threeHoursAgo)", span="29-29", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor20HoursAgo()", file="PolishNumberToWordsConverter.cs"];
m15_12 [label="Exit Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor20HoursAgo()", span="25-25", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor20HoursAgo()", file="PolishNumberToWordsConverter.cs"];
m15_18 [label="Entry Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor44MinutesAgo()", span="41-41", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor44MinutesAgo()", file="PolishNumberToWordsConverter.cs"];
m15_19 [label="var fourtyFourMinutesAgo = DateTime.UtcNow.AddMinutes(-44).Humanize()", span="43-43", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor44MinutesAgo()", color=green, community=0, file="PolishNumberToWordsConverter.cs"];
m15_20 [label="Assert.Equal(''acum 44 de minute'', fourtyFourMinutesAgo)", span="45-45", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor44MinutesAgo()", file="PolishNumberToWordsConverter.cs"];
m15_21 [label="Exit Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor44MinutesAgo()", span="41-41", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor44MinutesAgo()", file="PolishNumberToWordsConverter.cs"];
m15_13 [label="Entry Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor19MinutesAgo()", span="33-33", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor19MinutesAgo()", file="PolishNumberToWordsConverter.cs"];
m15_14 [label="var nineteenMinutesAgo = DateTime.UtcNow.AddMinutes(-19).Humanize()", span="35-35", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor19MinutesAgo()", file="PolishNumberToWordsConverter.cs"];
m15_15 [label="Assert.Equal(''acum 19 minute'', nineteenMinutesAgo)", span="37-37", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor19MinutesAgo()", file="PolishNumberToWordsConverter.cs"];
m15_16 [label="Exit Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor19MinutesAgo()", span="33-33", cluster="Humanizer.Tests.Extensions.Localisation.RomanianDateHumanizeTests.RomanianTranslationIsCorrectFor19MinutesAgo()", file="PolishNumberToWordsConverter.cs"];
m15_35 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="PolishNumberToWordsConverter.cs"];
m15_6 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="PolishNumberToWordsConverter.cs"];
m17_4 [label="Entry Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", span="15-15", cluster="Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", file="PrepositionsExtensions.cs"];
m17_5 [label="return date.At(0);", span="17-17", cluster="Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", file="PrepositionsExtensions.cs"];
m17_6 [label="Exit Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", span="15-15", cluster="Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", file="PrepositionsExtensions.cs"];
m17_8 [label="Entry Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", span="25-25", cluster="Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", file="PrepositionsExtensions.cs"];
m17_9 [label="return date.At(12);", span="27-27", cluster="Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", file="PrepositionsExtensions.cs"];
m17_10 [label="Exit Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", span="25-25", cluster="Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", file="PrepositionsExtensions.cs"];
m17_7 [label="Entry System.DateTime.At(int, int, int, int)", span="5-5", cluster="System.DateTime.At(int, int, int, int)", file="PrepositionsExtensions.cs"];
m17_0 [label="Entry Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", span="5-5", cluster="Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", file="PrepositionsExtensions.cs"];
m17_1 [label="return new DateTime(date.Year, date.Month, date.Day, hour, min, second, millisecond);", span="7-7", cluster="Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", file="PrepositionsExtensions.cs"];
m17_2 [label="Exit Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", span="5-5", cluster="Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", file="PrepositionsExtensions.cs"];
m17_11 [label="Entry Humanizer.PrepositionsExtensions.In(System.DateTime, int)", span="36-36", cluster="Humanizer.PrepositionsExtensions.In(System.DateTime, int)", file="PrepositionsExtensions.cs"];
m17_12 [label="return new DateTime(year, date.Month, date.Day, date.Hour, date.Minute, date.Second, date.Millisecond);", span="38-38", cluster="Humanizer.PrepositionsExtensions.In(System.DateTime, int)", file="PrepositionsExtensions.cs"];
m17_13 [label="Exit Humanizer.PrepositionsExtensions.In(System.DateTime, int)", span="36-36", cluster="Humanizer.PrepositionsExtensions.In(System.DateTime, int)", file="PrepositionsExtensions.cs"];
m17_3 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, int)", file="PrepositionsExtensions.cs"];
m19_35 [label="Entry System.Math.Abs(int)", span="0-0", cluster="System.Math.Abs(int)", file="RussianOrdinalizer.cs"];
m19_41 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="RussianOrdinalizer.cs"];
m19_37 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="RussianOrdinalizer.cs"];
m19_60 [label="Entry string.EndsWith(string)", span="0-0", cluster="string.EndsWith(string)", file="RussianOrdinalizer.cs"];
m19_42 [label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0", cluster="System.Collections.Generic.List<T>.ToArray()", file="RussianOrdinalizer.cs"];
m19_0 [label="Entry Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", span="17-17", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs"];
m19_1 [label="number == 0", span="19-19", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs"];
m19_3 [label="number < 0", span="22-22", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs"];
m19_4 [label="return string.Format(''moins {0}'', Convert(Math.Abs(number)));", span="23-23", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs"];
m19_6 [label="(number / 1000000000) > 0", span="27-27", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs"];
m19_7 [label="parts.Add(string.Format(''{0} milliard{1}'',\r\n                    Convert(number/1000000000),\r\n                    number/1000000000 == 1 ? '''' : ''s''))", span="29-31", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs"];
m19_8 [label="number %= 1000000000", span="33-33", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs"];
m19_9 [label="(number / 1000000) > 0", span="36-36", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs"];
m19_10 [label="parts.Add(string.Format(''{0} million{1}'',\r\n                    Convert(number/1000000),\r\n                    number/1000000 == 1 ? '''' : ''s''))", span="38-40", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs"];
m19_11 [label="number %= 1000000", span="42-42", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs"];
m19_12 [label="(number / 1000) > 0", span="45-45", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs"];
m19_13 [label="parts.Add(number/1000 == 1\r\n                    ? string.Format(''mille'')\r\n                    : string.Format(''{0} mille'', Convert(number/1000)))", span="47-49", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs"];
m19_14 [label="number %= 1000", span="51-51", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs"];
m19_15 [label="(number / 100) > 0", span="54-54", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs"];
m19_16 [label="parts.Add(number < 200 ? ''cent'' : string.Format(''{0} cent'', Convert(number/100)))", span="56-56", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs"];
m19_17 [label="number %= 100", span="57-57", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs"];
m19_18 [label="number > 0", span="60-60", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs"];
m19_19 [label="NumberExceptions.ContainsKey(number)", span="62-62", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs"];
m19_20 [label="parts.Add(NumberExceptions[number])", span="63-63", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs"];
m19_21 [label="number < 20", span="64-64", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs"];
m19_22 [label="parts.Add(UnitsMap[number])", span="65-65", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs"];
m19_24 [label="number >= 70 && (number < 80 || number >= 90)", span="69-69", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs"];
m19_25 [label="int baseNumber = number < 80 ? 60 : 80", span="71-71", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs"];
m19_26 [label="lastPart = string.Format(''{0}-{1}'', TensMap[baseNumber/10], Convert(number - baseNumber))", span="72-72", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs"];
m19_27 [label="lastPart = TensMap[number/10]", span="76-76", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs"];
m19_28 [label="(number%10) > 0", span="77-77", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs"];
m19_29 [label="(number - 1) % 10 == 0", span="79-79", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs"];
m19_31 [label="lastPart += string.Format(''-{0}'', UnitsMap[number%10])", span="82-82", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs"];
m19_2 [label="return UnitsMap[0];", span="20-20", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs"];
m19_5 [label="var parts = new List<string>()", span="25-25", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs"];
m19_32 [label="parts.Add(lastPart)", span="85-85", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs"];
m19_33 [label="return string.Join('' '', parts.ToArray());", span="89-89", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs"];
m19_23 [label="string lastPart", span="68-68", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs"];
m19_30 [label="lastPart += '' et un''", span="80-80", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs"];
m19_34 [label="Exit Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", span="17-17", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="RussianOrdinalizer.cs"];
m19_39 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="RussianOrdinalizer.cs"];
m19_38 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="RussianOrdinalizer.cs"];
m19_44 [label="Entry Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", span="92-92", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="RussianOrdinalizer.cs"];
m19_45 [label="number == 1", span="94-94", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="RussianOrdinalizer.cs"];
m19_47 [label="var convertedNumber = Convert(number)", span="97-97", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="RussianOrdinalizer.cs"];
m19_46 [label="return ''premier'';", span="95-95", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="RussianOrdinalizer.cs"];
m19_48 [label="convertedNumber.EndsWith(''s'') && !convertedNumber.EndsWith(''trois'')", span="99-99", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="RussianOrdinalizer.cs"];
m19_49 [label="convertedNumber = convertedNumber.TrimEnd('s')", span="100-100", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="RussianOrdinalizer.cs"];
m19_50 [label="convertedNumber.EndsWith(''cinq'')", span="101-101", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="RussianOrdinalizer.cs"];
m19_51 [label="convertedNumber += ''u''", span="102-102", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="RussianOrdinalizer.cs"];
m19_52 [label="convertedNumber.EndsWith(''neuf'')", span="103-103", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="RussianOrdinalizer.cs"];
m19_53 [label="convertedNumber = convertedNumber.TrimEnd('f') + ''v''", span="104-104", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="RussianOrdinalizer.cs"];
m19_54 [label="convertedNumber.StartsWith(''un '')", span="106-106", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="RussianOrdinalizer.cs"];
m19_55 [label="convertedNumber = convertedNumber.Remove(0, 3)", span="107-107", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="RussianOrdinalizer.cs"];
m19_56 [label="convertedNumber = convertedNumber.TrimEnd('e')", span="109-109", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="RussianOrdinalizer.cs"];
m19_57 [label="convertedNumber += ''ième''", span="110-110", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="RussianOrdinalizer.cs"];
m19_58 [label="return convertedNumber;", span="111-111", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="RussianOrdinalizer.cs"];
m19_59 [label="Exit Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", span="92-92", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="RussianOrdinalizer.cs"];
m19_40 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="RussianOrdinalizer.cs"];
m19_43 [label="Entry string.Join(string, params string[])", span="0-0", cluster="string.Join(string, params string[])", file="RussianOrdinalizer.cs"];
m19_62 [label="Entry string.StartsWith(string)", span="0-0", cluster="string.StartsWith(string)", file="RussianOrdinalizer.cs"];
m19_63 [label="Entry string.Remove(int, int)", span="0-0", cluster="string.Remove(int, int)", file="RussianOrdinalizer.cs"];
m19_61 [label="Entry string.TrimEnd(params char[])", span="0-0", cluster="string.TrimEnd(params char[])", file="RussianOrdinalizer.cs"];
m19_36 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="RussianOrdinalizer.cs"];
m19_64 [label="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter", span="", file="RussianOrdinalizer.cs"];
m22_10 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="ToQuantityExtensions.cs"];
m22_5 [label="return string.Format(''{0} {1}'', quantity, transformedInput);", span="35-35", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", file="ToQuantityExtensions.cs", color=red, community=0];
m22_7 [label="Exit Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", span="25-25", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", file="ToQuantityExtensions.cs"];
m22_8 [label="Entry string.Singularize(Humanizer.Plurality)", span="194-194", cluster="string.Singularize(Humanizer.Plurality)", color=green, community=0, file="ToQuantityExtensions.cs"];
m22_9 [label="Entry string.Pluralize(Humanizer.Plurality)", span="170-170", cluster="string.Pluralize(Humanizer.Plurality)", file="ToQuantityExtensions.cs"];
m22_0 [label="Entry Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", span="25-25", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", file="ToQuantityExtensions.cs"];
m22_1 [label="var transformedInput = quantity == 1\r\n                ? input.Singularize(Plurality.CouldBeEither)\r\n                : input.Pluralize(Plurality.CouldBeEither)", span="27-29", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", file="ToQuantityExtensions.cs"];
m22_2 [label="Entry Humanizer.Tests.Localisation.fiFI.NumberToWordsTests.ToWords(int, string)", span="35-35", cluster="Humanizer.Tests.Localisation.fiFI.NumberToWordsTests.ToWords(int, string)", file="ToQuantityExtensions.cs"];
m22_4 [label="Exit Humanizer.Tests.Localisation.fiFI.NumberToWordsTests.ToWords(int, string)", span="35-35", cluster="Humanizer.Tests.Localisation.fiFI.NumberToWordsTests.ToWords(int, string)", file="ToQuantityExtensions.cs"];
m22_6 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ToQuantityExtensions.cs"];
m22_3 [label="Assert.Equal(expected, number.ToWords())", span="37-37", cluster="Humanizer.Tests.Localisation.fiFI.NumberToWordsTests.ToWords(int, string)", file="ToQuantityExtensions.cs"];
m22_11 [label="Entry int.ToWords()", span="32-32", cluster="int.ToWords()", file="ToQuantityExtensions.cs"];
m23_4 [label="Entry CommandLine.Core.Token.Equals(CommandLine.Core.Token)", span="55-55", cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="ToQuantityTests.cs"];
m23_0 [label="Entry CommandLine.Tests.Unit.Core.TokenTests.Equality()", span="16-16", cluster="CommandLine.Tests.Unit.Core.TokenTests.Equality()", file="ToQuantityTests.cs"];
m23_1 [label="Assert.True(Token.Name(''nametok'').Equals(Token.Name(''nametok'')))", span="18-18", cluster="CommandLine.Tests.Unit.Core.TokenTests.Equality()", file="ToQuantityTests.cs"];
m23_2 [label="Exit CommandLine.Tests.Unit.Core.TokenTests.Equality()", span="16-16", cluster="CommandLine.Tests.Unit.Core.TokenTests.Equality()", file="ToQuantityTests.cs"];
m23_3 [label="Entry CommandLine.Core.Token.Name(string)", span="19-19", cluster="CommandLine.Core.Token.Name(string)", file="ToQuantityTests.cs"];
m23_5 [label="Entry Unk.True", span="", cluster="Unk.True", file="ToQuantityTests.cs"];
m24_10 [label="Entry Humanizer.Truncator.Truncate(string, int, string, Humanizer.ITruncator)", span="52-52", cluster="Humanizer.Truncator.Truncate(string, int, string, Humanizer.ITruncator)", file="Truncator.cs"];
m24_11 [label="truncator == null", span="54-54", cluster="Humanizer.Truncator.Truncate(string, int, string, Humanizer.ITruncator)", file="Truncator.cs"];
m24_13 [label="input == null", span="57-57", cluster="Humanizer.Truncator.Truncate(string, int, string, Humanizer.ITruncator)", color=red, community=0, file="Truncator.cs"];
m24_15 [label="return truncator.Truncate(input, length, truncationString);", span="60-60", cluster="Humanizer.Truncator.Truncate(string, int, string, Humanizer.ITruncator)", color=green, community=0, file="Truncator.cs"];
m24_12 [label="throw new ArgumentNullException(''truncator'');", span="55-55", cluster="Humanizer.Truncator.Truncate(string, int, string, Humanizer.ITruncator)", file="Truncator.cs", color=green, community=0];
m24_14 [label="return null;", span="58-58", cluster="Humanizer.Truncator.Truncate(string, int, string, Humanizer.ITruncator)", file="Truncator.cs"];
m24_16 [label="Exit Humanizer.Truncator.Truncate(string, int, string, Humanizer.ITruncator)", span="52-52", cluster="Humanizer.Truncator.Truncate(string, int, string, Humanizer.ITruncator)", file="Truncator.cs"];
m24_4 [label="Entry Humanizer.Truncator.Truncate(string, int, Humanizer.ITruncator)", span="27-27", cluster="Humanizer.Truncator.Truncate(string, int, Humanizer.ITruncator)", file="Truncator.cs"];
m24_5 [label="return input.Truncate(length, ''…'', truncator);", span="29-29", cluster="Humanizer.Truncator.Truncate(string, int, Humanizer.ITruncator)", color=red, community=0, file="Truncator.cs"];
m24_6 [label="Exit Humanizer.Truncator.Truncate(string, int, Humanizer.ITruncator)", span="27-27", cluster="Humanizer.Truncator.Truncate(string, int, Humanizer.ITruncator)", file="Truncator.cs"];
m24_17 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Truncator.cs"];
m24_0 [label="Entry Humanizer.Truncator.Truncate(string, int)", span="15-15", cluster="Humanizer.Truncator.Truncate(string, int)", file="Truncator.cs"];
m24_1 [label="return input.Truncate(length, ''…'', FixedLength);", span="17-17", cluster="Humanizer.Truncator.Truncate(string, int)", file="Truncator.cs"];
m24_2 [label="Exit Humanizer.Truncator.Truncate(string, int)", span="15-15", cluster="Humanizer.Truncator.Truncate(string, int)", file="Truncator.cs"];
m24_7 [label="Entry Humanizer.Truncator.Truncate(string, int, string)", span="39-39", cluster="Humanizer.Truncator.Truncate(string, int, string)", file="Truncator.cs"];
m24_8 [label="return input.Truncate(length, truncationString, FixedLength);", span="41-41", cluster="Humanizer.Truncator.Truncate(string, int, string)", color=green, community=0, file="Truncator.cs"];
m24_9 [label="Exit Humanizer.Truncator.Truncate(string, int, string)", span="39-39", cluster="Humanizer.Truncator.Truncate(string, int, string)", file="Truncator.cs"];
m24_18 [label="Entry Humanizer.ITruncator.Truncate(string, int, string)", span="14-14", cluster="Humanizer.ITruncator.Truncate(string, int, string)", file="Truncator.cs"];
m24_3 [label="Entry string.Truncate(int, string, Humanizer.ITruncator)", span="52-52", cluster="string.Truncate(int, string, Humanizer.ITruncator)", file="Truncator.cs"];
m1_0 -> m1_1  [key=0, style=solid, color=red];
m1_1 -> m1_2  [key=0, style=solid, color=red];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m1_22 -> m1_23  [key=0, style=solid, color=red];
m1_22 -> m1_25  [key=1, style=dashed, color=red, label="CommandLine.Core.Specification"];
m1_22 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m1_22 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m1_23 -> m1_24  [key=0, style=solid, color=red];
m1_23 -> m1_25  [key=0, style=solid, color=red];
m1_25 -> m1_26  [key=0, style=solid, color=red];
m1_25 -> m1_28  [key=0, style=solid, color=red];
m1_25 -> m1_36  [key=2, style=dotted, color=red];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label=min];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_32  [key=1, style=dashed, color=red, label=max];
m1_24 -> m1_34  [key=0, style=solid, color=red];
m1_24 -> m1_35  [key=2, style=dotted, color=red];
m1_26 -> m1_27  [key=0, style=solid];
m1_28 -> m1_29  [key=0, style=solid];
m1_27 -> m1_34  [key=0, style=solid];
m1_27 -> m1_37  [key=2, style=dotted];
m1_31 -> m1_32  [key=0, style=solid, color=red];
m1_31 -> m1_33  [key=0, style=solid];
m1_32 -> m1_34  [key=0, style=solid, color=red];
m1_32 -> m1_37  [key=2, style=dotted, color=red];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_38  [key=2, style=dotted];
m1_34 -> m1_22  [key=0, style=bold, color=blue];
m1_3 -> m1_4  [key=0, style=solid];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_3  [key=0, style=bold, color=blue];
m1_39 -> m1_40  [key=0, style=solid];
m1_40 -> m1_41  [key=0, style=solid];
m1_41 -> m1_39  [key=0, style=bold, color=blue];
m1_45 -> m1_46  [key=0, style=solid];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_48  [key=2, style=dotted];
m1_47 -> m1_45  [key=0, style=bold, color=blue];
m1_42 -> m1_43  [key=0, style=solid];
m1_43 -> m1_44  [key=0, style=solid];
m1_44 -> m1_42  [key=0, style=bold, color=blue];
m1_18 -> m1_19  [key=0, style=solid];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_21  [key=2, style=dotted];
m1_20 -> m1_18  [key=0, style=bold, color=blue];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>"];
m1_10 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>"];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_14  [key=0, style=solid];
m1_11 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label=guard];
m1_11 -> m1_13  [key=1, style=dashed, color=red, label=guard];
m1_12 -> m1_13  [key=0, style=solid, color=red];
m1_12 -> m1_11  [key=0, style=solid];
m1_12 -> m1_16  [key=2, style=dotted];
m1_12 -> m1_18  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_14 -> m1_15  [key=0, style=solid];
m1_13 -> m1_15  [key=0, style=solid, color=red];
m1_13 -> m1_17  [key=2, style=dotted, color=red];
m1_15 -> m1_10  [key=0, style=bold, color=blue];
m1_6 -> m1_7  [key=0, style=solid, color=red];
m1_7 -> m1_8  [key=0, style=solid, color=red];
m1_7 -> m1_9  [key=2, style=dotted, color=red];
m1_8 -> m1_6  [key=0, style=bold, color=blue];
m1_49 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label=guard];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_24 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_24 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_24 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_24 -> m2_5  [key=3, color=green, style=bold, label="method methodReturn string Humanize"];
m2_24 -> m2_24  [key=3, color=green, style=bold, label="method methodReturn string Humanize"];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_27  [key=0, style=solid];
m2_25 -> m2_19  [key=2, style=dotted];
m2_26 -> m2_30  [key=0, style=solid];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_29  [key=0, style=solid];
m2_27 -> m2_31  [key=2, style=dotted];
m2_28 -> m2_30  [key=0, style=solid];
m2_28 -> m2_32  [key=2, style=dotted];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_5  [key=2, style=dotted];
m2_30 -> m2_24  [key=0, style=bold, color=blue];
m2_21 -> m2_22  [key=0, style=solid];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_0  [key=3, color=green, style=bold, label="Field variable System.Func<string, string> FromUnderscoreDashSeparatedWords"];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_1 -> m2_4  [key=2, style=dotted];
m2_2 -> m2_0  [key=0, style=bold, color=blue];
m2_16 -> m2_17  [key=0, style=solid];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_19  [key=2, style=dotted];
m2_17 -> m2_20  [key=2, style=dotted];
m2_18 -> m2_16  [key=0, style=bold, color=blue];
m2_22 -> m2_23  [key=0, style=solid];
m2_23 -> m2_21  [key=0, style=bold, color=blue];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.LetterCasing"];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_37  [key=2, style=dotted];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_38  [key=2, style=dotted];
m2_36 -> m2_33  [key=0, style=bold, color=blue];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_41  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_38 -> m2_43  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_38 -> m2_45  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_38 -> m2_47  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_38 -> m2_48  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_38 -> m2_49  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_42  [key=0, style=solid];
m2_39 -> m2_44  [key=0, style=solid];
m2_39 -> m2_46  [key=0, style=solid];
m2_39 -> m2_50  [key=0, style=solid];
m2_41 -> m2_51  [key=0, style=solid];
m2_41 -> m2_52  [key=2, style=dotted];
m2_43 -> m2_51  [key=0, style=solid];
m2_43 -> m2_20  [key=2, style=dotted];
m2_45 -> m2_51  [key=0, style=solid];
m2_45 -> m2_53  [key=2, style=dotted];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_49  [key=0, style=solid];
m2_48 -> m2_51  [key=0, style=solid];
m2_48 -> m2_54  [key=2, style=dotted];
m2_48 -> m2_53  [key=2, style=dotted];
m2_48 -> m2_55  [key=2, style=dotted];
m2_48 -> m2_56  [key=2, style=dotted];
m2_49 -> m2_51  [key=0, style=solid];
m2_49 -> m2_53  [key=2, style=dotted];
m2_40 -> m2_41  [key=0, style=solid];
m2_42 -> m2_43  [key=0, style=solid];
m2_44 -> m2_45  [key=0, style=solid];
m2_46 -> m2_47  [key=0, style=solid];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_57  [key=2, style=dotted];
m2_51 -> m2_38  [key=0, style=bold, color=blue];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_24  [key=3, color=green, style=bold, label="Parameter variable string name"];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_10  [key=2, style=dotted];
m2_6 -> m2_11  [key=2, style=dotted];
m2_6 -> m2_12  [key=2, style=dotted];
m2_6 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_6 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_13  [key=2, style=dotted];
m2_7 -> m2_14  [key=2, style=dotted];
m2_7 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_15  [key=2, style=dotted];
m2_9 -> m2_5  [key=0, style=bold, color=blue];
m4_0 -> m4_18  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_0 -> m4_5  [key=3, color=darkorchid, style=bold, label="method methodReturn string Convert"];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_0 -> m4_4  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_0 -> m4_7  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_0 -> m4_12  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_0 -> m4_15  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_0 -> m4_16  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_0 -> m4_17  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_0 -> m4_19  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_0 -> m4_29  [key=3, color=darkorchid, style=bold, label="Parameter variable int number"];
m4_23 -> m4_23  [key=1, style=dashed, color=green, label=word];
m4_23 -> m4_25  [key=0, style=solid, color=green];
m4_18 -> m4_23  [key=1, style=dashed, color=green, label=tens];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_24  [key=1, style=dashed, color=darkseagreen4, label=tens];
m4_5 -> m4_23  [key=1, style=dashed, color=green, label=word];
m4_5 -> m4_18  [key=3, color=darkorchid, style=bold, label="Local variable string word"];
m4_5 -> m4_5  [key=3, color=darkorchid, style=bold, label="Local variable string word"];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_10  [key=1, style=dashed, color=darkseagreen4, label=word];
m4_5 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label=word];
m4_5 -> m4_17  [key=1, style=dashed, color=darkseagreen4, label=word];
m4_5 -> m4_24  [key=1, style=dashed, color=darkseagreen4, label=word];
m4_5 -> m4_25  [key=1, style=dashed, color=darkseagreen4, label=word];
m4_10 -> m4_23  [key=1, style=dashed, color=green, label=word];
m4_10 -> m4_10  [key=1, style=dashed, color=darkseagreen4, label=word];
m4_10 -> m4_12  [key=0, style=solid];
m4_10 -> m4_14  [key=1, style=dashed, color=darkseagreen4, label=word];
m4_10 -> m4_17  [key=1, style=dashed, color=darkseagreen4, label=word];
m4_10 -> m4_24  [key=1, style=dashed, color=darkseagreen4, label=word];
m4_10 -> m4_25  [key=1, style=dashed, color=darkseagreen4, label=word];
m4_11 -> m4_23  [key=1, style=dashed, color=green, label=word];
m4_11 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label=word];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_0  [key=2, style=dotted];
m4_11 -> m4_14  [key=1, style=dashed, color=darkseagreen4, label=word];
m4_11 -> m4_17  [key=1, style=dashed, color=darkseagreen4, label=word];
m4_11 -> m4_24  [key=1, style=dashed, color=darkseagreen4, label=word];
m4_11 -> m4_25  [key=1, style=dashed, color=darkseagreen4, label=word];
m4_14 -> m4_23  [key=1, style=dashed, color=green, label=word];
m4_14 -> m4_14  [key=1, style=dashed, color=darkseagreen4, label=word];
m4_14 -> m4_6  [key=0, style=solid];
m4_14 -> m4_17  [key=1, style=dashed, color=darkseagreen4, label=word];
m4_14 -> m4_24  [key=1, style=dashed, color=darkseagreen4, label=word];
m4_14 -> m4_25  [key=1, style=dashed, color=darkseagreen4, label=word];
m4_21 -> m4_23  [key=1, style=dashed, color=green, label=units];
m4_21 -> m4_22  [key=0, style=solid];
m4_22 -> m4_23  [key=0, style=solid, color=green];
m4_22 -> m4_28  [key=2, style=dotted];
m4_25 -> m4_26  [key=0, style=solid];
m4_12 -> m4_18  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_12 -> m4_12  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_15  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_12 -> m4_16  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_12 -> m4_17  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_12 -> m4_19  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_16 -> m4_18  [key=0, style=solid];
m4_16 -> m4_17  [key=0, style=solid];
m4_19 -> m4_21  [key=1, style=dashed, color=darkseagreen4, label=unit];
m4_19 -> m4_20  [key=0, style=solid];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_24  [key=1, style=dashed, color=darkseagreen4, label=word];
m4_3 -> m4_5  [key=0, style=solid];
m4_3 -> m4_4  [key=0, style=solid];
m4_6 -> m4_10  [key=1, style=dashed, color=darkseagreen4, label=m];
m4_6 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label=m];
m4_6 -> m4_14  [key=1, style=dashed, color=darkseagreen4, label=m];
m4_6 -> m4_12  [key=1, style=dashed, color=darkseagreen4, label=m];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_15  [key=0, style=solid];
m4_6 -> m4_9  [key=1, style=dashed, color=darkseagreen4, label=m];
m4_17 -> m4_25  [key=0, style=solid];
m4_17 -> m4_17  [key=1, style=dashed, color=darkseagreen4, label=word];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_11  [key=0, style=solid];
m4_7 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label=divided];
m4_7 -> m4_9  [key=1, style=dashed, color=darkseagreen4, label=divided];
m4_7 -> m4_8  [key=0, style=solid];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_6  [key=0, style=solid];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_24  [key=0, style=solid];
m4_15 -> m4_25  [key=0, style=solid];
m4_15 -> m4_16  [key=0, style=solid];
m4_4 -> m4_0  [key=2, style=dotted];
m4_4 -> m4_26  [key=0, style=solid];
m4_4 -> m4_27  [key=2, style=dotted];
m4_1 -> m4_3  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_8 -> m4_6  [key=0, style=solid];
m4_8 -> m4_9  [key=0, style=solid];
m4_2 -> m4_26  [key=0, style=solid];
m4_26 -> m4_0  [key=0, style=bold, color=blue];
m4_29 -> m4_30  [key=0, style=solid];
m4_30 -> m4_0  [key=2, style=dotted];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_41  [key=1, style=dashed, color=darkseagreen4, label=word];
m4_30 -> m4_32  [key=1, style=dashed, color=darkseagreen4, label=word];
m4_30 -> m4_33  [key=1, style=dashed, color=darkseagreen4, label=word];
m4_30 -> m4_34  [key=1, style=dashed, color=darkseagreen4, label=word];
m4_30 -> m4_35  [key=1, style=dashed, color=darkseagreen4, label=word];
m4_31 -> m4_32  [key=0, style=solid];
m4_31 -> m4_33  [key=0, style=solid];
m4_31 -> m4_37  [key=2, style=dotted];
m4_31 -> m4_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_32 -> m4_36  [key=0, style=solid];
m4_32 -> m4_38  [key=2, style=dotted];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_35  [key=0, style=solid];
m4_33 -> m4_39  [key=2, style=dotted];
m4_34 -> m4_36  [key=0, style=solid];
m4_35 -> m4_36  [key=0, style=solid];
m4_36 -> m4_29  [key=0, style=bold, color=blue];
m4_40 -> m4_41  [key=0, style=solid];
m4_41 -> m4_28  [key=2, style=dotted];
m4_41 -> m4_41  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, string>"];
m4_41 -> m4_42  [key=0, style=solid];
m4_42 -> m4_40  [key=0, style=bold, color=blue];
m4_43 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter"];
m4_43 -> m4_4  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter"];
m4_43 -> m4_30  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter"];
m4_44 -> m4_41  [key=1, style=dashed, color=darkseagreen4, label=word];
m6_4 -> m6_5  [key=0, style=solid, color=green];
m6_4 -> m6_8  [key=0, style=solid];
m6_5 -> m6_6  [key=0, style=solid, color=red];
m6_5 -> m6_7  [key=2, style=dotted, color=green];
m6_6 -> m6_4  [key=0, style=bold, color=blue];
m6_6 -> m6_8  [key=0, style=solid, color=red];
m6_6 -> m6_9  [key=2, style=dotted, color=red];
m6_8 -> m6_9  [key=0, style=solid, color=green];
m6_8 -> m6_0  [key=0, style=bold, color=blue];
m6_9 -> m6_10  [key=0, style=solid, color=green];
m6_9 -> m6_7  [key=2, style=dotted, color=green];
m6_10 -> m6_8  [key=0, style=bold, color=blue];
m6_7 -> m6_8  [key=0, style=solid, color=red];
m6_7 -> m6_9  [key=2, style=dotted, color=red];
m6_0 -> m6_1  [key=0, style=solid, color=green];
m6_0 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_0 -> m6_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_0 -> m6_5  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_0 -> m6_6  [key=1, style=dashed, color=red, label=string];
m6_0 -> m6_7  [key=1, style=dashed, color=red, label=string];
m6_0 -> m6_2  [key=3, color=darkorchid, style=bold, label="method methodReturn string Truncate"];
m6_0 -> m6_0  [key=3, color=darkorchid, style=bold, label="method methodReturn string Truncate"];
m6_1 -> m6_2  [key=0, style=solid, color=green];
m6_1 -> m6_3  [key=0, style=solid];
m6_1 -> m6_1  [key=3, color=green, style=bold, label="method methodReturn string Truncate"];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_5  [key=0, style=solid];
m6_2 -> m6_8  [key=0, style=solid];
m6_2 -> m6_0  [key=0, style=bold, color=blue];
m6_11 -> m6_12  [key=0, style=solid];
m6_12 -> m6_3  [key=2, style=dotted];
m6_12 -> m6_13  [key=0, style=solid];
m6_13 -> m6_11  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid, color=green];
m8_0 -> m8_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_0 -> m8_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_0 -> m8_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_0 -> m8_7  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_0 -> m8_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_0 -> m8_11  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_0 -> m8_12  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_0 -> m8_16  [key=1, style=dashed, color=darkseagreen4, label=int];
m8_0 -> m8_17  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_0 -> m8_20  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_0 -> m8_2  [key=3, color=darkorchid, style=bold, label="method methodReturn string Truncate"];
m8_0 -> m8_0  [key=3, color=darkorchid, style=bold, label="method methodReturn string Truncate"];
m8_1 -> m8_1  [key=3, color=green, style=bold, label="method methodReturn string Truncate"];
m8_1 -> m8_2  [key=0, style=solid, color=green];
m8_1 -> m8_3  [key=2, style=dotted, color=green];
m8_1 -> m8_4  [key=2, style=dotted, color=green];
m8_2 -> m8_0  [key=0, style=bold, color=blue];
m8_2 -> m8_21  [key=0, style=solid];
m8_5 -> m8_6  [key=0, style=solid, color=red];
m8_5 -> m8_14  [key=1, style=dashed, color=red, label=numberOfWordsProcessed];
m8_5 -> m8_16  [key=1, style=dashed, color=red, label=numberOfWordsProcessed];
m8_5 -> m8_5  [key=3, color=red, style=bold, label="Local variable int numberOfWordsProcessed"];
m8_6 -> m8_3  [key=2, style=dotted];
m8_6 -> m8_4  [key=2, style=dotted];
m8_6 -> m8_6  [key=3, color=darkorchid, style=bold, label="Local variable int numberOfWordsProcessed"];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_22  [key=2, style=dotted];
m8_6 -> m8_23  [key=2, style=dotted];
m8_7 -> m8_5  [key=0, style=bold, color=blue];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_9  [key=0, style=solid, color=red];
m8_4 -> m8_21  [key=0, style=solid];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_5  [key=0, style=solid, color=red];
m8_8 -> m8_21  [key=0, style=solid];
m8_8 -> m8_9  [key=0, style=solid, color=green];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_20  [key=0, style=solid];
m8_11 -> m8_5  [key=3, color=red, style=bold, label="Local variable int i"];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_18  [key=0, style=solid];
m8_12 -> m8_24  [key=2, style=dotted];
m8_12 -> m8_3  [key=2, style=dotted];
m8_12 -> m8_4  [key=2, style=dotted];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_19  [key=0, style=solid];
m8_16 -> m8_14  [key=0, style=bold, color=blue];
m8_17 -> m8_21  [key=0, style=solid];
m8_17 -> m8_25  [key=2, style=dotted];
m8_20 -> m8_21  [key=0, style=solid];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_14  [key=1, style=dashed, color=darkseagreen4, label=numberOfWordsProcessed];
m8_14 -> m8_16  [key=1, style=dashed, color=darkseagreen4, label=numberOfWordsProcessed];
m8_9 -> m8_10  [key=0, style=solid, color=green];
m8_9 -> m8_13  [key=1, style=dashed, color=red, label=lastCharactersWasWhiteSpace];
m8_9 -> m8_9  [key=3, color=red, style=bold, label="Local variable bool lastCharactersWasWhiteSpace"];
m8_9 -> m8_3  [key=2, style=dotted, color=green];
m8_9 -> m8_4  [key=2, style=dotted, color=green];
m8_9 -> m8_6  [key=3, color=green, style=bold, label="Local variable int i"];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_12  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_10 -> m8_17  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_10 -> m8_19  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_10 -> m8_8  [key=0, style=bold, color=blue];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_15  [key=0, style=solid];
m8_13 -> m8_11  [key=0, style=bold, color=blue];
m8_19 -> m8_11  [key=0, style=solid];
m8_19 -> m8_19  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_18 -> m8_19  [key=0, style=solid];
m8_15 -> m8_16  [key=0, style=solid];
m8_15 -> m8_3  [key=2, style=dotted];
m8_15 -> m8_4  [key=2, style=dotted];
m8_21 -> m8_0  [key=0, style=bold, color=blue];
m9_5 -> m9_6  [key=0, style=solid];
m9_26 -> m9_27  [key=0, style=solid];
m9_27 -> m9_21  [key=2, style=dotted];
m9_27 -> m9_29  [key=2, style=dotted];
m9_27 -> m9_22  [key=2, style=dotted];
m9_27 -> m9_14  [key=2, style=dotted];
m9_27 -> m9_28  [key=0, style=solid];
m9_28 -> m9_26  [key=0, style=bold, color=blue];
m9_42 -> m9_43  [key=0, style=solid];
m9_43 -> m9_21  [key=2, style=dotted];
m9_43 -> m9_22  [key=2, style=dotted];
m9_43 -> m9_14  [key=2, style=dotted];
m9_43 -> m9_44  [key=0, style=solid];
m9_44 -> m9_42  [key=0, style=bold, color=blue];
m9_6 -> m9_7  [key=0, style=solid];
m9_6 -> m9_8  [key=2, style=dotted];
m9_6 -> m9_4  [key=2, style=dotted];
m9_39 -> m9_40  [key=0, style=solid];
m9_40 -> m9_21  [key=2, style=dotted];
m9_40 -> m9_29  [key=2, style=dotted];
m9_40 -> m9_22  [key=2, style=dotted];
m9_40 -> m9_14  [key=2, style=dotted];
m9_40 -> m9_41  [key=0, style=solid];
m9_41 -> m9_39  [key=0, style=bold, color=blue];
m9_3 -> m9_0  [key=0, style=bold, color=blue];
m9_23 -> m9_24  [key=0, style=solid];
m9_24 -> m9_21  [key=2, style=dotted];
m9_24 -> m9_22  [key=2, style=dotted];
m9_24 -> m9_14  [key=2, style=dotted];
m9_24 -> m9_25  [key=0, style=solid];
m9_25 -> m9_23  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_0 -> m9_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_3  [key=2, style=dotted];
m9_1 -> m9_4  [key=2, style=dotted];
m9_1 -> m9_5  [key=2, style=dotted];
m9_1 -> m9_6  [key=2, style=dotted];
m9_2 -> m9_0  [key=0, style=bold, color=blue];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_4  [key=2, style=dotted];
m9_2 -> m9_5  [key=2, style=dotted];
m9_2 -> m9_6  [key=2, style=dotted];
m9_48 -> m9_49  [key=0, style=solid];
m9_49 -> m9_21  [key=2, style=dotted];
m9_49 -> m9_22  [key=2, style=dotted];
m9_49 -> m9_14  [key=2, style=dotted];
m9_49 -> m9_50  [key=0, style=solid];
m9_50 -> m9_48  [key=0, style=bold, color=blue];
m9_7 -> m9_8  [key=0, style=solid];
m9_7 -> m9_10  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_7 -> m9_11  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_7 -> m9_5  [key=0, style=bold, color=blue];
m9_8 -> m9_9  [key=0, style=solid];
m9_8 -> m9_13  [key=2, style=dotted];
m9_8 -> m9_10  [key=1, style=dashed, color=darkseagreen4, label=utcNow];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_13  [key=2, style=dotted];
m9_9 -> m9_11  [key=1, style=dashed, color=darkseagreen4, label=now];
m9_10 -> m9_11  [key=0, style=solid];
m9_10 -> m9_4  [key=2, style=dotted];
m9_10 -> m9_5  [key=2, style=dotted];
m9_10 -> m9_6  [key=2, style=dotted];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_4  [key=2, style=dotted];
m9_11 -> m9_5  [key=2, style=dotted];
m9_11 -> m9_6  [key=2, style=dotted];
m9_12 -> m9_7  [key=0, style=bold, color=blue];
m9_33 -> m9_34  [key=0, style=solid];
m9_34 -> m9_21  [key=2, style=dotted];
m9_34 -> m9_29  [key=2, style=dotted];
m9_34 -> m9_22  [key=2, style=dotted];
m9_34 -> m9_14  [key=2, style=dotted];
m9_34 -> m9_35  [key=0, style=solid];
m9_35 -> m9_33  [key=0, style=bold, color=blue];
m9_45 -> m9_46  [key=0, style=solid];
m9_46 -> m9_21  [key=2, style=dotted];
m9_46 -> m9_29  [key=2, style=dotted];
m9_46 -> m9_22  [key=2, style=dotted];
m9_46 -> m9_14  [key=2, style=dotted];
m9_46 -> m9_47  [key=0, style=solid];
m9_47 -> m9_45  [key=0, style=bold, color=blue];
m9_51 -> m9_52  [key=0, style=solid, color=green];
m9_52 -> m9_53  [key=0, style=solid, color=green];
m9_52 -> m9_21  [key=2, style=dotted, color=green];
m9_52 -> m9_29  [key=2, style=dotted, color=green];
m9_52 -> m9_22  [key=2, style=dotted, color=green];
m9_52 -> m9_14  [key=2, style=dotted, color=green];
m9_53 -> m9_51  [key=0, style=bold, color=blue];
m9_36 -> m9_37  [key=0, style=solid];
m9_37 -> m9_21  [key=2, style=dotted];
m9_37 -> m9_22  [key=2, style=dotted];
m9_37 -> m9_14  [key=2, style=dotted];
m9_37 -> m9_38  [key=0, style=solid];
m9_38 -> m9_36  [key=0, style=bold, color=blue];
m9_60 -> m9_61  [key=0, style=solid];
m9_61 -> m9_21  [key=2, style=dotted];
m9_61 -> m9_29  [key=2, style=dotted];
m9_61 -> m9_22  [key=2, style=dotted];
m9_61 -> m9_14  [key=2, style=dotted];
m9_61 -> m9_62  [key=0, style=solid];
m9_62 -> m9_60  [key=0, style=bold, color=blue];
m9_54 -> m9_55  [key=0, style=solid, color=green];
m9_54 -> m9_8  [key=3, color=darkorchid, style=bold, label="Local variable string convertedNumber"];
m9_55 -> m9_56  [key=0, style=solid, color=green];
m9_55 -> m9_21  [key=2, style=dotted, color=green];
m9_55 -> m9_22  [key=2, style=dotted, color=green];
m9_55 -> m9_14  [key=2, style=dotted, color=green];
m9_56 -> m9_54  [key=0, style=bold, color=blue];
m9_57 -> m9_58  [key=0, style=solid];
m9_58 -> m9_21  [key=2, style=dotted];
m9_58 -> m9_22  [key=2, style=dotted];
m9_58 -> m9_14  [key=2, style=dotted];
m9_58 -> m9_59  [key=0, style=solid];
m9_59 -> m9_57  [key=0, style=bold, color=blue];
m9_14 -> m9_15  [key=0, style=solid];
m9_14 -> m9_16  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_0  [key=2, style=dotted];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_7  [key=2, style=dotted];
m9_17 -> m9_14  [key=0, style=bold, color=blue];
m9_18 -> m9_19  [key=0, style=solid];
m9_19 -> m9_21  [key=2, style=dotted];
m9_19 -> m9_22  [key=2, style=dotted];
m9_19 -> m9_14  [key=2, style=dotted];
m9_19 -> m9_20  [key=0, style=solid];
m9_20 -> m9_18  [key=0, style=bold, color=blue];
m9_30 -> m9_31  [key=0, style=solid];
m9_31 -> m9_21  [key=2, style=dotted];
m9_31 -> m9_22  [key=2, style=dotted];
m9_31 -> m9_14  [key=2, style=dotted];
m9_31 -> m9_32  [key=0, style=solid];
m9_32 -> m9_30  [key=0, style=bold, color=blue];
m9_63 -> m9_52  [key=1, style=dashed, color=green, label="Humanizer.Tests.Extensions.DateHumanizeTests"];
m9_63 -> m9_55  [key=1, style=dashed, color=green, label="Humanizer.Tests.Extensions.DateHumanizeTests"];
m9_63 -> m9_15  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.Extensions.DateHumanizeTests"];
m9_63 -> m9_16  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.Extensions.DateHumanizeTests"];
m9_63 -> m9_19  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.Extensions.DateHumanizeTests"];
m9_63 -> m9_24  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.Extensions.DateHumanizeTests"];
m9_63 -> m9_27  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.Extensions.DateHumanizeTests"];
m9_63 -> m9_31  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.Extensions.DateHumanizeTests"];
m9_63 -> m9_34  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.Extensions.DateHumanizeTests"];
m9_63 -> m9_37  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.Extensions.DateHumanizeTests"];
m9_63 -> m9_40  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.Extensions.DateHumanizeTests"];
m9_63 -> m9_43  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.Extensions.DateHumanizeTests"];
m9_63 -> m9_46  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.Extensions.DateHumanizeTests"];
m9_63 -> m9_49  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.Extensions.DateHumanizeTests"];
m9_63 -> m9_58  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.Extensions.DateHumanizeTests"];
m9_63 -> m9_61  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.Extensions.DateHumanizeTests"];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_0  [key=0, style=bold, color=blue];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_0  [key=0, style=bold, color=blue];
m12_0 -> m12_1  [key=0, style=solid];
m12_0 -> m12_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m12_0 -> m12_3  [key=1, style=dashed, color=darkseagreen4, label=char];
m12_0 -> m12_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m12_0 -> m12_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m12_0 -> m12_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m12_0 -> m12_7  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m12_1 -> m12_2  [key=0, style=solid];
m12_2 -> m12_3  [key=0, style=solid];
m12_3 -> m12_4  [key=0, style=solid];
m12_4 -> m12_5  [key=0, style=solid];
m12_5 -> m12_6  [key=0, style=solid];
m12_6 -> m12_7  [key=0, style=solid];
m12_7 -> m12_8  [key=0, style=solid];
m12_8 -> m12_0  [key=0, style=bold, color=blue];
m12_9 -> m12_10  [key=0, style=solid, color=red];
m12_10 -> m12_11  [key=0, style=solid, color=red];
m12_10 -> m12_0  [key=2, style=dotted, color=red];
m12_10 -> m12_12  [key=2, style=dotted, color=red];
m12_11 -> m12_9  [key=0, style=bold, color=blue];
m12_13 -> m12_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m12_13 -> m12_2  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m12_13 -> m12_3  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m12_13 -> m12_4  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m12_13 -> m12_5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m12_13 -> m12_6  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m12_13 -> m12_7  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m13_5 -> m13_6  [key=0, style=solid];
m13_5 -> m13_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_5 -> m13_60  [key=2, style=dotted];
m13_6 -> m13_3  [key=2, style=dotted];
m13_6 -> m13_4  [key=2, style=dotted];
m13_6 -> m13_7  [key=0, style=solid];
m13_6 -> m13_60  [key=2, style=dotted];
m13_7 -> m13_3  [key=2, style=dotted];
m13_7 -> m13_4  [key=2, style=dotted];
m13_7 -> m13_8  [key=0, style=solid, color=red];
m13_7 -> m13_60  [key=2, style=dotted];
m13_8 -> m13_5  [key=0, style=bold, color=blue];
m13_8 -> m13_9  [key=0, style=solid, color=red];
m13_8 -> m13_60  [key=2, style=dotted, color=red];
m13_28 -> m13_29  [key=0, style=solid, color=red];
m13_28 -> m13_61  [key=2, style=dotted];
m13_21 -> m13_22  [key=0, style=solid, color=red];
m13_21 -> m13_61  [key=2, style=dotted];
m13_22 -> m13_4  [key=2, style=dotted];
m13_22 -> m13_23  [key=0, style=solid, color=red];
m13_22 -> m13_24  [key=2, style=dotted];
m13_22 -> m13_61  [key=2, style=dotted, color=red];
m13_23 -> m13_21  [key=0, style=bold, color=blue];
m13_23 -> m13_24  [key=0, style=solid, color=red];
m13_23 -> m13_61  [key=2, style=dotted];
m13_131 -> m13_136  [key=0, style=solid];
m13_131 -> m13_138  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_131 -> m13_139  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_131 -> m13_141  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_131 -> m13_143  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_131 -> m13_145  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_131 -> m13_146  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_136 -> m13_137  [key=0, style=solid];
m13_138 -> m13_147  [key=0, style=solid];
m13_139 -> m13_140  [key=0, style=solid];
m13_139 -> m13_142  [key=0, style=solid];
m13_139 -> m13_144  [key=0, style=solid];
m13_139 -> m13_146  [key=0, style=solid];
m13_141 -> m13_147  [key=0, style=solid];
m13_143 -> m13_147  [key=0, style=solid];
m13_145 -> m13_147  [key=0, style=solid];
m13_146 -> m13_147  [key=0, style=solid];
m13_137 -> m13_138  [key=0, style=solid];
m13_137 -> m13_139  [key=0, style=solid];
m13_140 -> m13_141  [key=0, style=solid];
m13_142 -> m13_143  [key=0, style=solid];
m13_144 -> m13_145  [key=0, style=solid];
m13_147 -> m13_131  [key=0, style=bold, color=blue];
m13_33 -> m13_34  [key=0, style=solid, color=red];
m13_33 -> m13_61  [key=2, style=dotted, color=red];
m13_34 -> m13_4  [key=2, style=dotted];
m13_34 -> m13_35  [key=0, style=solid, color=red];
m13_34 -> m13_36  [key=2, style=dotted];
m13_34 -> m13_61  [key=2, style=dotted, color=red];
m13_35 -> m13_33  [key=0, style=bold, color=blue];
m13_35 -> m13_36  [key=0, style=solid, color=red];
m13_35 -> m13_61  [key=2, style=dotted, color=red];
m13_116 -> m13_117  [key=0, style=solid];
m13_117 -> m13_118  [key=0, style=solid];
m13_117 -> m13_108  [key=2, style=dotted];
m13_117 -> m13_119  [key=2, style=dotted];
m13_118 -> m13_116  [key=0, style=bold, color=blue];
m13_4 -> m13_5  [key=0, style=solid];
m13_4 -> m13_60  [key=2, style=dotted];
m13_91 -> m13_95  [key=0, style=solid];
m13_91 -> m13_96  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_91 -> m13_97  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>"];
m13_91 -> m13_99  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>"];
m13_95 -> m13_96  [key=0, style=solid];
m13_95 -> m13_101  [key=1, style=dashed, color=darkseagreen4, label=result];
m13_96 -> m13_97  [key=0, style=solid];
m13_96 -> m13_101  [key=0, style=solid];
m13_96 -> m13_82  [key=2, style=dotted];
m13_96 -> m13_103  [key=2, style=dotted];
m13_97 -> m13_98  [key=0, style=solid];
m13_97 -> m13_99  [key=1, style=dashed, color=darkseagreen4, label=i];
m13_97 -> m13_100  [key=1, style=dashed, color=darkseagreen4, label=i];
m13_99 -> m13_100  [key=0, style=solid];
m13_99 -> m13_101  [key=0, style=solid];
m13_99 -> m13_69  [key=2, style=dotted];
m13_101 -> m13_102  [key=0, style=solid];
m13_98 -> m13_99  [key=0, style=solid];
m13_98 -> m13_101  [key=0, style=solid];
m13_100 -> m13_98  [key=0, style=solid];
m13_100 -> m13_100  [key=1, style=dashed, color=darkseagreen4, label=i];
m13_102 -> m13_91  [key=0, style=bold, color=blue];
m13_13 -> m13_14  [key=0, style=solid, color=green];
m13_13 -> m13_15  [key=1, style=dashed, color=green, label=string];
m13_13 -> m13_60  [key=2, style=dotted];
m13_14 -> m13_15  [key=0, style=solid, color=green];
m13_14 -> m13_12  [key=2, style=dotted, color=green];
m13_14 -> m13_4  [key=2, style=dotted, color=green];
m13_14 -> m13_60  [key=2, style=dotted];
m13_15 -> m13_16  [key=0, style=solid, color=green];
m13_15 -> m13_12  [key=2, style=dotted, color=green];
m13_15 -> m13_4  [key=2, style=dotted, color=green];
m13_15 -> m13_60  [key=2, style=dotted];
m13_16 -> m13_13  [key=0, style=bold, color=blue];
m13_16 -> m13_17  [key=0, style=solid];
m13_16 -> m13_60  [key=2, style=dotted];
m13_120 -> m13_121  [key=0, style=solid];
m13_121 -> m13_122  [key=0, style=solid];
m13_121 -> m13_123  [key=2, style=dotted];
m13_121 -> m13_82  [key=2, style=dotted];
m13_122 -> m13_120  [key=0, style=bold, color=blue];
m13_92 -> m13_93  [key=0, style=solid];
m13_93 -> m13_94  [key=0, style=solid];
m13_93 -> m13_91  [key=2, style=dotted];
m13_94 -> m13_92  [key=0, style=bold, color=blue];
m13_37 -> m13_38  [key=0, style=solid, color=red];
m13_37 -> m13_61  [key=2, style=dotted, color=red];
m13_38 -> m13_4  [key=2, style=dotted];
m13_38 -> m13_39  [key=0, style=solid, color=red];
m13_38 -> m13_40  [key=2, style=dotted];
m13_38 -> m13_61  [key=2, style=dotted, color=red];
m13_39 -> m13_37  [key=0, style=bold, color=blue];
m13_39 -> m13_40  [key=0, style=solid];
m13_39 -> m13_61  [key=2, style=dotted];
m13_61 -> m13_86  [key=0, style=solid];
m13_86 -> m13_87  [key=0, style=solid];
m13_86 -> m13_64  [key=2, style=dotted];
m13_86 -> m13_83  [key=2, style=dotted];
m13_87 -> m13_61  [key=0, style=bold, color=blue];
m13_108 -> m13_109  [key=0, style=solid];
m13_109 -> m13_110  [key=0, style=solid];
m13_109 -> m13_111  [key=2, style=dotted];
m13_109 -> m13_112  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_110 -> m13_108  [key=0, style=bold, color=blue];
m13_32 -> m13_33  [key=0, style=solid, color=red];
m13_32 -> m13_61  [key=2, style=dotted, color=red];
m13_17 -> m13_18  [key=0, style=solid];
m13_17 -> m13_60  [key=2, style=dotted];
m13_18 -> m13_4  [key=2, style=dotted];
m13_18 -> m13_19  [key=0, style=solid];
m13_18 -> m13_20  [key=2, style=dotted];
m13_18 -> m13_61  [key=2, style=dotted];
m13_19 -> m13_17  [key=0, style=bold, color=blue];
m13_19 -> m13_20  [key=0, style=solid, color=red];
m13_19 -> m13_61  [key=2, style=dotted];
m13_20 -> m13_21  [key=0, style=solid, color=red];
m13_20 -> m13_61  [key=2, style=dotted, color=red];
m13_0 -> m13_1  [key=0, style=solid, color=green];
m13_1 -> m13_2  [key=0, style=solid, color=green];
m13_1 -> m13_3  [key=2, style=dotted, color=green];
m13_1 -> m13_4  [key=2, style=dotted, color=green];
m13_1 -> m13_60  [key=2, style=dotted];
m13_2 -> m13_0  [key=0, style=bold, color=blue];
m13_2 -> m13_3  [key=0, style=solid];
m13_2 -> m13_60  [key=2, style=dotted];
m13_3 -> m13_4  [key=0, style=solid];
m13_3 -> m13_60  [key=2, style=dotted];
m13_9 -> m13_10  [key=0, style=solid];
m13_9 -> m13_60  [key=2, style=dotted];
m13_10 -> m13_11  [key=0, style=solid];
m13_10 -> m13_60  [key=2, style=dotted];
m13_10 -> m13_4  [key=2, style=dotted];
m13_10 -> m13_12  [key=2, style=dotted];
m13_11 -> m13_12  [key=0, style=solid];
m13_11 -> m13_60  [key=2, style=dotted];
m13_11 -> m13_9  [key=0, style=bold, color=blue];
m13_12 -> m13_13  [key=0, style=solid];
m13_12 -> m13_60  [key=2, style=dotted];
m13_24 -> m13_25  [key=0, style=solid, color=red];
m13_24 -> m13_61  [key=2, style=dotted, color=red];
m13_25 -> m13_26  [key=0, style=solid, color=red];
m13_25 -> m13_61  [key=2, style=dotted];
m13_26 -> m13_27  [key=0, style=solid, color=red];
m13_26 -> m13_61  [key=2, style=dotted, color=red];
m13_26 -> m13_4  [key=2, style=dotted];
m13_26 -> m13_28  [key=2, style=dotted];
m13_27 -> m13_28  [key=0, style=solid, color=red];
m13_27 -> m13_61  [key=2, style=dotted, color=red];
m13_27 -> m13_25  [key=0, style=bold, color=blue];
m13_29 -> m13_30  [key=0, style=solid, color=red];
m13_29 -> m13_61  [key=2, style=dotted, color=red];
m13_30 -> m13_31  [key=0, style=solid, color=red];
m13_30 -> m13_61  [key=2, style=dotted, color=red];
m13_30 -> m13_4  [key=2, style=dotted];
m13_30 -> m13_32  [key=2, style=dotted];
m13_31 -> m13_32  [key=0, style=solid, color=red];
m13_31 -> m13_61  [key=2, style=dotted, color=red];
m13_31 -> m13_29  [key=0, style=bold, color=blue];
m13_36 -> m13_37  [key=0, style=solid, color=red];
m13_36 -> m13_61  [key=2, style=dotted, color=red];
m13_40 -> m13_41  [key=0, style=solid];
m13_40 -> m13_61  [key=2, style=dotted];
m13_41 -> m13_42  [key=0, style=solid];
m13_41 -> m13_61  [key=2, style=dotted];
m13_42 -> m13_43  [key=0, style=solid];
m13_42 -> m13_62  [key=2, style=dotted];
m13_43 -> m13_44  [key=0, style=solid];
m13_43 -> m13_62  [key=2, style=dotted];
m13_44 -> m13_45  [key=0, style=solid];
m13_44 -> m13_62  [key=2, style=dotted];
m13_45 -> m13_46  [key=0, style=solid];
m13_45 -> m13_62  [key=2, style=dotted];
m13_46 -> m13_47  [key=0, style=solid];
m13_46 -> m13_62  [key=2, style=dotted];
m13_47 -> m13_48  [key=0, style=solid];
m13_47 -> m13_62  [key=2, style=dotted];
m13_48 -> m13_49  [key=0, style=solid];
m13_48 -> m13_62  [key=2, style=dotted];
m13_49 -> m13_50  [key=0, style=solid];
m13_49 -> m13_63  [key=2, style=dotted];
m13_50 -> m13_51  [key=0, style=solid];
m13_50 -> m13_63  [key=2, style=dotted];
m13_51 -> m13_52  [key=0, style=solid];
m13_51 -> m13_63  [key=2, style=dotted];
m13_52 -> m13_53  [key=0, style=solid];
m13_52 -> m13_63  [key=2, style=dotted];
m13_53 -> m13_54  [key=0, style=solid];
m13_53 -> m13_63  [key=2, style=dotted];
m13_54 -> m13_55  [key=0, style=solid];
m13_54 -> m13_63  [key=2, style=dotted];
m13_55 -> m13_56  [key=0, style=solid];
m13_55 -> m13_63  [key=2, style=dotted];
m13_56 -> m13_57  [key=0, style=solid];
m13_56 -> m13_63  [key=2, style=dotted];
m13_57 -> m13_58  [key=0, style=solid];
m13_57 -> m13_63  [key=2, style=dotted];
m13_58 -> m13_59  [key=0, style=solid];
m13_58 -> m13_63  [key=2, style=dotted];
m13_59 -> m13_0  [key=0, style=bold, color=blue];
m13_62 -> m13_76  [key=0, style=solid];
m13_62 -> m13_77  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_76 -> m13_77  [key=0, style=solid];
m13_76 -> m13_79  [key=2, style=dotted];
m13_76 -> m13_60  [key=2, style=dotted];
m13_77 -> m13_78  [key=0, style=solid];
m13_77 -> m13_79  [key=2, style=dotted];
m13_77 -> m13_61  [key=2, style=dotted];
m13_78 -> m13_62  [key=0, style=bold, color=blue];
m13_132 -> m13_133  [key=0, style=solid];
m13_133 -> m13_134  [key=0, style=solid];
m13_133 -> m13_135  [key=2, style=dotted];
m13_133 -> m13_131  [key=2, style=dotted];
m13_134 -> m13_132  [key=0, style=bold, color=blue];
m13_127 -> m13_128  [key=0, style=solid];
m13_128 -> m13_129  [key=0, style=solid];
m13_128 -> m13_130  [key=2, style=dotted];
m13_128 -> m13_131  [key=2, style=dotted];
m13_129 -> m13_127  [key=0, style=bold, color=blue];
m13_63 -> m13_80  [key=0, style=solid];
m13_80 -> m13_81  [key=0, style=solid];
m13_80 -> m13_82  [key=2, style=dotted];
m13_80 -> m13_83  [key=2, style=dotted];
m13_81 -> m13_63  [key=0, style=bold, color=blue];
m13_148 -> m13_149  [key=0, style=solid];
m13_149 -> m13_150  [key=0, style=solid];
m13_149 -> m13_151  [key=2, style=dotted];
m13_150 -> m13_148  [key=0, style=bold, color=blue];
m13_64 -> m13_65  [key=0, style=solid];
m13_64 -> m13_66  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_65 -> m13_66  [key=0, style=solid];
m13_65 -> m13_68  [key=2, style=dotted];
m13_66 -> m13_67  [key=0, style=solid];
m13_67 -> m13_64  [key=0, style=bold, color=blue];
m13_112 -> m13_113  [key=0, style=solid];
m13_113 -> m13_114  [key=0, style=solid];
m13_113 -> m13_115  [key=2, style=dotted];
m13_114 -> m13_112  [key=0, style=bold, color=blue];
m13_69 -> m13_70  [key=0, style=solid];
m13_69 -> m13_72  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_70 -> m13_71  [key=0, style=solid];
m13_70 -> m13_72  [key=0, style=solid];
m13_70 -> m13_74  [key=2, style=dotted];
m13_72 -> m13_73  [key=0, style=solid];
m13_72 -> m13_75  [key=2, style=dotted];
m13_71 -> m13_73  [key=0, style=solid];
m13_73 -> m13_69  [key=0, style=bold, color=blue];
m13_88 -> m13_89  [key=0, style=solid];
m13_89 -> m13_90  [key=0, style=solid];
m13_89 -> m13_91  [key=2, style=dotted];
m13_90 -> m13_88  [key=0, style=bold, color=blue];
m13_104 -> m13_105  [key=0, style=solid];
m13_105 -> m13_106  [key=0, style=solid];
m13_105 -> m13_107  [key=2, style=dotted];
m13_106 -> m13_104  [key=0, style=bold, color=blue];
m13_119 -> m13_124  [key=0, style=solid];
m13_124 -> m13_125  [key=0, style=solid];
m13_124 -> m13_126  [key=2, style=dotted];
m13_124 -> m13_82  [key=2, style=dotted];
m13_124 -> m13_79  [key=2, style=dotted];
m13_125 -> m13_119  [key=0, style=bold, color=blue];
m13_60 -> m13_84  [key=0, style=solid];
m13_84 -> m13_85  [key=0, style=solid];
m13_84 -> m13_64  [key=2, style=dotted];
m13_84 -> m13_83  [key=2, style=dotted];
m13_85 -> m13_60  [key=0, style=bold, color=blue];
m13_152 -> m13_65  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.InflectorExtensions.Rule"];
m13_152 -> m13_66  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.InflectorExtensions.Rule"];
m13_152 -> m13_70  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.InflectorExtensions.Rule"];
m13_152 -> m13_72  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.InflectorExtensions.Rule"];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_3  [key=2, style=dotted];
m14_1 -> m14_4  [key=2, style=dotted];
m14_2 -> m14_0  [key=0, style=bold, color=blue];
m14_5 -> m14_6  [key=0, style=solid];
m14_6 -> m14_7  [key=0, style=solid];
m14_6 -> m14_8  [key=2, style=dotted];
m14_6 -> m14_4  [key=2, style=dotted];
m14_7 -> m14_5  [key=0, style=bold, color=blue];
m15_31 -> m15_32  [key=0, style=solid, color=green];
m15_32 -> m15_33  [key=0, style=solid, color=green];
m15_32 -> m15_35  [key=2, style=dotted, color=green];
m15_32 -> m15_7  [key=2, style=dotted, color=green];
m15_33 -> m15_34  [key=0, style=solid, color=green];
m15_33 -> m15_8  [key=2, style=dotted, color=green];
m15_34 -> m15_31  [key=0, style=bold, color=blue];
m15_2 -> m15_3  [key=0, style=solid, color=green];
m15_3 -> m15_4  [key=0, style=solid, color=green];
m15_3 -> m15_6  [key=2, style=dotted, color=green];
m15_3 -> m15_7  [key=2, style=dotted, color=green];
m15_4 -> m15_5  [key=0, style=solid];
m15_4 -> m15_8  [key=2, style=dotted];
m15_5 -> m15_2  [key=0, style=bold, color=blue];
m15_27 -> m15_28  [key=0, style=solid, color=green];
m15_28 -> m15_29  [key=0, style=solid, color=green];
m15_28 -> m15_26  [key=2, style=dotted, color=green];
m15_28 -> m15_7  [key=2, style=dotted, color=green];
m15_29 -> m15_30  [key=0, style=solid, color=green];
m15_29 -> m15_8  [key=2, style=dotted, color=green];
m15_30 -> m15_27  [key=0, style=bold, color=blue];
m15_40 -> m15_41  [key=0, style=solid];
m15_42 -> m15_43  [key=0, style=solid, color=green];
m15_42 -> m15_8  [key=2, style=dotted, color=green];
m15_41 -> m15_42  [key=0, style=solid, color=green];
m15_41 -> m15_7  [key=2, style=dotted];
m15_41 -> m15_44  [key=2, style=dotted];
m15_43 -> m15_40  [key=0, style=bold, color=blue];
m15_45 -> m15_46  [key=0, style=solid, color=green];
m15_46 -> m15_47  [key=0, style=solid, color=green];
m15_46 -> m15_44  [key=2, style=dotted, color=green];
m15_46 -> m15_7  [key=2, style=dotted, color=green];
m15_47 -> m15_48  [key=0, style=solid, color=green];
m15_47 -> m15_8  [key=2, style=dotted, color=green];
m15_48 -> m15_45  [key=0, style=bold, color=blue];
m15_22 -> m15_23  [key=0, style=solid];
m15_23 -> m15_7  [key=2, style=dotted];
m15_23 -> m15_26  [key=2, style=dotted];
m15_23 -> m15_24  [key=0, style=solid];
m15_24 -> m15_8  [key=2, style=dotted];
m15_24 -> m15_25  [key=0, style=solid];
m15_25 -> m15_22  [key=0, style=bold, color=blue];
m15_36 -> m15_37  [key=0, style=solid];
m15_38 -> m15_39  [key=0, style=solid, color=green];
m15_38 -> m15_8  [key=2, style=dotted, color=green];
m15_37 -> m15_38  [key=0, style=solid, color=green];
m15_37 -> m15_7  [key=2, style=dotted];
m15_37 -> m15_35  [key=2, style=dotted];
m15_39 -> m15_36  [key=0, style=bold, color=blue];
m15_9 -> m15_10  [key=0, style=solid, color=green];
m15_10 -> m15_11  [key=0, style=solid, color=green];
m15_10 -> m15_6  [key=2, style=dotted, color=green];
m15_10 -> m15_7  [key=2, style=dotted, color=green];
m15_11 -> m15_12  [key=0, style=solid];
m15_11 -> m15_8  [key=2, style=dotted];
m15_12 -> m15_9  [key=0, style=bold, color=blue];
m15_18 -> m15_19  [key=0, style=solid, color=green];
m15_19 -> m15_20  [key=0, style=solid, color=green];
m15_19 -> m15_17  [key=2, style=dotted, color=green];
m15_19 -> m15_7  [key=2, style=dotted, color=green];
m15_20 -> m15_21  [key=0, style=solid];
m15_20 -> m15_8  [key=2, style=dotted];
m15_21 -> m15_18  [key=0, style=bold, color=blue];
m15_13 -> m15_14  [key=0, style=solid];
m15_14 -> m15_7  [key=2, style=dotted];
m15_14 -> m15_17  [key=2, style=dotted];
m15_14 -> m15_15  [key=0, style=solid];
m15_15 -> m15_8  [key=2, style=dotted];
m15_15 -> m15_16  [key=0, style=solid];
m15_16 -> m15_13  [key=0, style=bold, color=blue];
m17_4 -> m17_5  [key=0, style=solid];
m17_4 -> m17_0  [key=3, color=darkorchid, style=bold, label="method methodReturn System.DateTime AtMidnight"];
m17_5 -> m17_6  [key=0, style=solid];
m17_5 -> m17_7  [key=2, style=dotted];
m17_6 -> m17_4  [key=0, style=bold, color=blue];
m17_8 -> m17_9  [key=0, style=solid];
m17_8 -> m17_0  [key=3, color=darkorchid, style=bold, label="method methodReturn System.DateTime AtNoon"];
m17_9 -> m17_10  [key=0, style=solid];
m17_9 -> m17_7  [key=2, style=dotted];
m17_10 -> m17_8  [key=0, style=bold, color=blue];
m17_0 -> m17_1  [key=0, style=solid];
m17_0 -> m17_5  [key=3, color=darkorchid, style=bold, label="Parameter variable int hour"];
m17_0 -> m17_9  [key=3, color=darkorchid, style=bold, label="Parameter variable int hour"];
m17_1 -> m17_2  [key=0, style=solid];
m17_1 -> m17_3  [key=2, style=dotted];
m17_2 -> m17_0  [key=0, style=bold, color=blue];
m17_11 -> m17_12  [key=0, style=solid];
m17_12 -> m17_13  [key=0, style=solid];
m17_12 -> m17_3  [key=2, style=dotted];
m17_13 -> m17_11  [key=0, style=bold, color=blue];
m19_0 -> m19_1  [key=0, style=solid];
m19_0 -> m19_3  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_0 -> m19_4  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_0 -> m19_6  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_0 -> m19_7  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_0 -> m19_8  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_0 -> m19_9  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_0 -> m19_10  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_0 -> m19_11  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_0 -> m19_12  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_0 -> m19_13  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_0 -> m19_14  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_0 -> m19_15  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_0 -> m19_16  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_0 -> m19_17  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_0 -> m19_18  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_0 -> m19_19  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_0 -> m19_20  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_0 -> m19_21  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_0 -> m19_22  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_0 -> m19_24  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_0 -> m19_25  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_0 -> m19_26  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_0 -> m19_27  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_0 -> m19_28  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_0 -> m19_29  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_0 -> m19_31  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_1 -> m19_2  [key=0, style=solid];
m19_1 -> m19_3  [key=0, style=solid];
m19_3 -> m19_4  [key=0, style=solid];
m19_3 -> m19_5  [key=0, style=solid];
m19_4 -> m19_34  [key=0, style=solid];
m19_4 -> m19_35  [key=2, style=dotted];
m19_4 -> m19_0  [key=2, style=dotted];
m19_4 -> m19_36  [key=2, style=dotted];
m19_6 -> m19_7  [key=0, style=solid];
m19_6 -> m19_9  [key=0, style=solid];
m19_7 -> m19_8  [key=0, style=solid];
m19_7 -> m19_0  [key=2, style=dotted];
m19_7 -> m19_38  [key=2, style=dotted];
m19_7 -> m19_39  [key=2, style=dotted];
m19_8 -> m19_9  [key=0, style=solid];
m19_8 -> m19_8  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_8 -> m19_10  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_8 -> m19_11  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_8 -> m19_12  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_8 -> m19_13  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_8 -> m19_14  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_8 -> m19_15  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_8 -> m19_16  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_8 -> m19_17  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_8 -> m19_18  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_8 -> m19_19  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_8 -> m19_20  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_8 -> m19_21  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_8 -> m19_22  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_8 -> m19_24  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_8 -> m19_25  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_8 -> m19_26  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_8 -> m19_27  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_8 -> m19_28  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_8 -> m19_29  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_8 -> m19_31  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_9 -> m19_10  [key=0, style=solid];
m19_9 -> m19_12  [key=0, style=solid];
m19_10 -> m19_11  [key=0, style=solid];
m19_10 -> m19_0  [key=2, style=dotted];
m19_10 -> m19_38  [key=2, style=dotted];
m19_10 -> m19_39  [key=2, style=dotted];
m19_11 -> m19_12  [key=0, style=solid];
m19_11 -> m19_11  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_11 -> m19_13  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_11 -> m19_14  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_11 -> m19_15  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_11 -> m19_16  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_11 -> m19_17  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_11 -> m19_18  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_11 -> m19_19  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_11 -> m19_20  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_11 -> m19_21  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_11 -> m19_22  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_11 -> m19_24  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_11 -> m19_25  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_11 -> m19_26  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_11 -> m19_27  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_11 -> m19_28  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_11 -> m19_29  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_11 -> m19_31  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_12 -> m19_13  [key=0, style=solid];
m19_12 -> m19_15  [key=0, style=solid];
m19_13 -> m19_14  [key=0, style=solid];
m19_13 -> m19_40  [key=2, style=dotted];
m19_13 -> m19_0  [key=2, style=dotted];
m19_13 -> m19_36  [key=2, style=dotted];
m19_13 -> m19_39  [key=2, style=dotted];
m19_14 -> m19_15  [key=0, style=solid];
m19_14 -> m19_14  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_14 -> m19_16  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_14 -> m19_17  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_14 -> m19_18  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_14 -> m19_19  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_14 -> m19_20  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_14 -> m19_21  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_14 -> m19_22  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_14 -> m19_24  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_14 -> m19_25  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_14 -> m19_26  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_14 -> m19_27  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_14 -> m19_28  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_14 -> m19_29  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_14 -> m19_31  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_15 -> m19_16  [key=0, style=solid];
m19_15 -> m19_18  [key=0, style=solid];
m19_16 -> m19_17  [key=0, style=solid];
m19_16 -> m19_0  [key=2, style=dotted];
m19_16 -> m19_36  [key=2, style=dotted];
m19_16 -> m19_39  [key=2, style=dotted];
m19_17 -> m19_18  [key=0, style=solid];
m19_17 -> m19_17  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_17 -> m19_19  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_17 -> m19_20  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_17 -> m19_21  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_17 -> m19_22  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_17 -> m19_24  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_17 -> m19_25  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_17 -> m19_26  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_17 -> m19_27  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_17 -> m19_28  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_17 -> m19_29  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_17 -> m19_31  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_18 -> m19_19  [key=0, style=solid];
m19_18 -> m19_33  [key=0, style=solid];
m19_19 -> m19_20  [key=0, style=solid];
m19_19 -> m19_21  [key=0, style=solid];
m19_19 -> m19_41  [key=2, style=dotted];
m19_20 -> m19_33  [key=0, style=solid];
m19_20 -> m19_39  [key=2, style=dotted];
m19_21 -> m19_22  [key=0, style=solid];
m19_21 -> m19_23  [key=0, style=solid];
m19_22 -> m19_33  [key=0, style=solid];
m19_22 -> m19_39  [key=2, style=dotted];
m19_24 -> m19_25  [key=0, style=solid];
m19_24 -> m19_27  [key=0, style=solid];
m19_25 -> m19_26  [key=0, style=solid];
m19_26 -> m19_32  [key=0, style=solid];
m19_26 -> m19_0  [key=2, style=dotted];
m19_26 -> m19_38  [key=2, style=dotted];
m19_27 -> m19_28  [key=0, style=solid];
m19_27 -> m19_30  [key=1, style=dashed, color=darkseagreen4, label=lastPart];
m19_27 -> m19_31  [key=1, style=dashed, color=darkseagreen4, label=lastPart];
m19_27 -> m19_32  [key=1, style=dashed, color=darkseagreen4, label=lastPart];
m19_28 -> m19_29  [key=0, style=solid];
m19_28 -> m19_32  [key=0, style=solid];
m19_29 -> m19_30  [key=0, style=solid];
m19_29 -> m19_31  [key=0, style=solid];
m19_31 -> m19_32  [key=0, style=solid];
m19_31 -> m19_36  [key=2, style=dotted];
m19_31 -> m19_31  [key=1, style=dashed, color=darkseagreen4, label=lastPart];
m19_2 -> m19_34  [key=0, style=solid];
m19_5 -> m19_6  [key=0, style=solid];
m19_5 -> m19_37  [key=2, style=dotted];
m19_5 -> m19_7  [key=1, style=dashed, color=darkseagreen4, label=parts];
m19_5 -> m19_10  [key=1, style=dashed, color=darkseagreen4, label=parts];
m19_5 -> m19_13  [key=1, style=dashed, color=darkseagreen4, label=parts];
m19_5 -> m19_16  [key=1, style=dashed, color=darkseagreen4, label=parts];
m19_5 -> m19_20  [key=1, style=dashed, color=darkseagreen4, label=parts];
m19_5 -> m19_22  [key=1, style=dashed, color=darkseagreen4, label=parts];
m19_5 -> m19_32  [key=1, style=dashed, color=darkseagreen4, label=parts];
m19_5 -> m19_33  [key=1, style=dashed, color=darkseagreen4, label=parts];
m19_32 -> m19_33  [key=0, style=solid];
m19_32 -> m19_39  [key=2, style=dotted];
m19_33 -> m19_34  [key=0, style=solid];
m19_33 -> m19_42  [key=2, style=dotted];
m19_33 -> m19_43  [key=2, style=dotted];
m19_23 -> m19_24  [key=0, style=solid];
m19_30 -> m19_32  [key=0, style=solid];
m19_30 -> m19_30  [key=1, style=dashed, color=darkseagreen4, label=lastPart];
m19_34 -> m19_0  [key=0, style=bold, color=blue];
m19_44 -> m19_45  [key=0, style=solid];
m19_44 -> m19_47  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_45 -> m19_46  [key=0, style=solid];
m19_45 -> m19_47  [key=0, style=solid];
m19_47 -> m19_48  [key=0, style=solid];
m19_47 -> m19_0  [key=2, style=dotted];
m19_47 -> m19_49  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m19_47 -> m19_50  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m19_47 -> m19_51  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m19_47 -> m19_52  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m19_47 -> m19_53  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m19_47 -> m19_54  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m19_47 -> m19_55  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m19_47 -> m19_56  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m19_46 -> m19_59  [key=0, style=solid];
m19_48 -> m19_49  [key=0, style=solid];
m19_48 -> m19_50  [key=0, style=solid];
m19_48 -> m19_60  [key=2, style=dotted];
m19_49 -> m19_54  [key=0, style=solid];
m19_49 -> m19_61  [key=2, style=dotted];
m19_49 -> m19_49  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m19_49 -> m19_55  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m19_49 -> m19_56  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m19_50 -> m19_51  [key=0, style=solid];
m19_50 -> m19_52  [key=0, style=solid];
m19_50 -> m19_60  [key=2, style=dotted];
m19_51 -> m19_54  [key=0, style=solid];
m19_51 -> m19_51  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m19_51 -> m19_55  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m19_51 -> m19_56  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m19_52 -> m19_53  [key=0, style=solid];
m19_52 -> m19_54  [key=0, style=solid];
m19_52 -> m19_60  [key=2, style=dotted];
m19_53 -> m19_54  [key=0, style=solid];
m19_53 -> m19_61  [key=2, style=dotted];
m19_53 -> m19_53  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m19_53 -> m19_55  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m19_53 -> m19_56  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m19_54 -> m19_55  [key=0, style=solid];
m19_54 -> m19_56  [key=0, style=solid];
m19_54 -> m19_62  [key=2, style=dotted];
m19_55 -> m19_56  [key=0, style=solid];
m19_55 -> m19_63  [key=2, style=dotted];
m19_55 -> m19_55  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m19_56 -> m19_57  [key=0, style=solid];
m19_56 -> m19_61  [key=2, style=dotted];
m19_56 -> m19_56  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m19_57 -> m19_58  [key=0, style=solid];
m19_57 -> m19_57  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m19_58 -> m19_59  [key=0, style=solid];
m19_59 -> m19_44  [key=0, style=bold, color=blue];
m19_64 -> m19_4  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter"];
m19_64 -> m19_7  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter"];
m19_64 -> m19_10  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter"];
m19_64 -> m19_13  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter"];
m19_64 -> m19_16  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter"];
m19_64 -> m19_26  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter"];
m19_64 -> m19_47  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter"];
m22_5 -> m22_7  [key=0, style=solid, color=red];
m22_5 -> m22_10  [key=2, style=dotted, color=red];
m22_7 -> m22_8  [key=0, style=solid, color=green];
m22_7 -> m22_0  [key=0, style=bold, color=blue];
m22_8 -> m22_9  [key=0, style=solid, color=green];
m22_8 -> m22_10  [key=2, style=dotted, color=green];
m22_8 -> m22_6  [key=2, style=dotted, color=green];
m22_9 -> m22_7  [key=0, style=bold, color=blue];
m22_0 -> m22_1  [key=0, style=solid];
m22_0 -> m22_2  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.ShowQuantityAs"];
m22_0 -> m22_4  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.ShowQuantityAs"];
m22_0 -> m22_5  [key=1, style=dashed, color=red, label=int];
m22_0 -> m22_6  [key=1, style=dashed, color=darkseagreen4, label=int];
m22_1 -> m22_2  [key=0, style=solid];
m22_1 -> m22_8  [key=2, style=dotted];
m22_1 -> m22_9  [key=2, style=dotted];
m22_1 -> m22_3  [key=1, style=dashed, color=darkseagreen4, label=transformedInput];
m22_1 -> m22_5  [key=1, style=dashed, color=red, label=transformedInput];
m22_1 -> m22_6  [key=1, style=dashed, color=darkseagreen4, label=transformedInput];
m22_2 -> m22_3  [key=0, style=solid];
m22_2 -> m22_4  [key=0, style=solid];
m22_4 -> m22_5  [key=0, style=solid, color=red];
m22_4 -> m22_6  [key=0, style=solid];
m22_4 -> m22_2  [key=0, style=bold, color=blue];
m22_6 -> m22_7  [key=0, style=solid];
m22_6 -> m22_11  [key=2, style=dotted];
m22_6 -> m22_10  [key=2, style=dotted];
m22_3 -> m22_7  [key=0, style=solid];
m22_3 -> m22_6  [key=2, style=dotted];
m22_3 -> m22_4  [key=0, style=solid];
m22_3 -> m22_5  [key=2, style=dotted];
m23_0 -> m23_1  [key=0, style=solid];
m23_1 -> m23_2  [key=0, style=solid];
m23_1 -> m23_3  [key=2, style=dotted];
m23_1 -> m23_4  [key=2, style=dotted];
m23_1 -> m23_5  [key=2, style=dotted];
m23_2 -> m23_0  [key=0, style=bold, color=blue];
m24_10 -> m24_11  [key=0, style=solid];
m24_10 -> m24_13  [key=1, style=dashed, color=darkseagreen4, label=string];
m24_10 -> m24_15  [key=1, style=dashed, color=green, label=string];
m24_11 -> m24_12  [key=0, style=solid, color=green];
m24_11 -> m24_13  [key=0, style=solid, color=red];
m24_13 -> m24_14  [key=0, style=solid, color=red];
m24_13 -> m24_15  [key=0, style=solid, color=green];
m24_15 -> m24_16  [key=0, style=solid, color=green];
m24_15 -> m24_18  [key=2, style=dotted, color=green];
m24_12 -> m24_16  [key=0, style=solid, color=green];
m24_12 -> m24_17  [key=2, style=dotted, color=green];
m24_14 -> m24_16  [key=0, style=solid];
m24_16 -> m24_10  [key=0, style=bold, color=blue];
m24_4 -> m24_5  [key=0, style=solid, color=red];
m24_4 -> m24_3  [key=3, color=darkorchid, style=bold, label="method methodReturn string Truncate"];
m24_5 -> m24_6  [key=0, style=solid, color=red];
m24_5 -> m24_3  [key=2, style=dotted, color=red];
m24_6 -> m24_4  [key=0, style=bold, color=blue];
m24_0 -> m24_1  [key=0, style=solid];
m24_0 -> m24_3  [key=3, color=darkorchid, style=bold, label="method methodReturn string Truncate"];
m24_1 -> m24_2  [key=0, style=solid];
m24_1 -> m24_3  [key=2, style=dotted];
m24_2 -> m24_0  [key=0, style=bold, color=blue];
m24_7 -> m24_8  [key=0, style=solid, color=green];
m24_7 -> m24_3  [key=3, color=darkorchid, style=bold, label="method methodReturn string Truncate"];
m24_8 -> m24_9  [key=0, style=solid, color=green];
m24_8 -> m24_3  [key=2, style=dotted, color=green];
m24_9 -> m24_7  [key=0, style=bold, color=blue];
m24_3 -> m24_0  [key=3, color=darkorchid, style=bold, label="Parameter variable int length"];
m24_3 -> m24_4  [key=3, color=darkorchid, style=bold, label="Parameter variable Humanizer.ITruncator truncator"];
m24_3 -> m24_7  [key=3, color=darkorchid, style=bold, label="Parameter variable string truncationString"];
m24_3 -> m24_1  [key=3, color=darkorchid, style=bold, label="Parameter variable string truncationString"];
m24_3 -> m24_14  [key=3, color=darkorchid, style=bold, label="method methodReturn string Truncate"];
}
