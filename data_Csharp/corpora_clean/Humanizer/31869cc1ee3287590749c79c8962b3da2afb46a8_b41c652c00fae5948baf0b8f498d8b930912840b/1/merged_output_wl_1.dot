digraph  {
n9 [label="Humanizer.Tests.Extensions.Localisation.AmbientCulture", span=""];
n0 [cluster="Humanizer.Tests.Extensions.Localisation.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", label="Entry Humanizer.Tests.Extensions.Localisation.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", span="10-10"];
n1 [cluster="Humanizer.Tests.Extensions.Localisation.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", label="_culture = Thread.CurrentThread.CurrentUICulture", span="12-12"];
n2 [cluster="Humanizer.Tests.Extensions.Localisation.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", label="Thread.CurrentThread.CurrentUICulture = culture", span="13-13"];
n3 [cluster="Humanizer.Tests.Extensions.Localisation.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", label="Exit Humanizer.Tests.Extensions.Localisation.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", span="10-10"];
n4 [cluster="Humanizer.Tests.Extensions.Localisation.AmbientCulture.AmbientCulture(string)", label="Entry Humanizer.Tests.Extensions.Localisation.AmbientCulture.AmbientCulture(string)", span="16-16"];
n5 [cluster="Humanizer.Tests.Extensions.Localisation.AmbientCulture.AmbientCulture(string)", label="Exit Humanizer.Tests.Extensions.Localisation.AmbientCulture.AmbientCulture(string)", span="16-16"];
n6 [cluster="Humanizer.Tests.Extensions.Localisation.AmbientCulture.Dispose()", label="Entry Humanizer.Tests.Extensions.Localisation.AmbientCulture.Dispose()", span="21-21"];
n7 [cluster="Humanizer.Tests.Extensions.Localisation.AmbientCulture.Dispose()", label="Thread.CurrentThread.CurrentUICulture = _culture", span="23-23"];
n8 [cluster="Humanizer.Tests.Extensions.Localisation.AmbientCulture.Dispose()", label="Exit Humanizer.Tests.Extensions.Localisation.AmbientCulture.Dispose()", span="21-21"];
m1_3 [cluster="string.ToQuantity(int, Humanizer.ShowQuantityAs)", file="DateHumanizeTests.cs", label="Entry string.ToQuantity(int, Humanizer.ShowQuantityAs)", span="25-25"];
m1_0 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", file="DateHumanizeTests.cs", label="Entry Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", span="19-19"];
m1_1 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", file="DateHumanizeTests.cs", label="Assert.Equal(expected, word.ToQuantity(quatity))", span="21-21"];
m1_2 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", file="DateHumanizeTests.cs", label="Exit Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", span="19-19"];
m1_4 [cluster="Unk.Equal", file="DateHumanizeTests.cs", label="Entry Unk.Equal", span=""];
m1_11 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWords(string, int, string)", file="DateHumanizeTests.cs", label="Entry Humanizer.Tests.ToQuantityTests.ToQuantityWords(string, int, string)", span="72-72"];
m1_12 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWords(string, int, string)", file="DateHumanizeTests.cs", label="Assert.Equal(expected, word.ToQuantity(quatity, ShowQuantityAs.Words))", span="74-74"];
m1_13 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWords(string, int, string)", file="DateHumanizeTests.cs", label="Exit Humanizer.Tests.ToQuantityTests.ToQuantityWords(string, int, string)", span="72-72"];
m1_5 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", file="DateHumanizeTests.cs", label="Entry Humanizer.Tests.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", span="36-36"];
m1_6 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", file="DateHumanizeTests.cs", label="Assert.Equal(expected, word.ToQuantity(quatity, ShowQuantityAs.None))", span="38-38"];
m1_7 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", file="DateHumanizeTests.cs", label="Exit Humanizer.Tests.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", span="36-36"];
m1_8 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityNumeric(string, int, string)", file="DateHumanizeTests.cs", label="Entry Humanizer.Tests.ToQuantityTests.ToQuantityNumeric(string, int, string)", span="53-53"];
m1_9 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityNumeric(string, int, string)", file="DateHumanizeTests.cs", label="Assert.Equal(expected, word.ToQuantity(quatity, ShowQuantityAs.Numeric))", span="56-56"];
m1_10 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityNumeric(string, int, string)", file="DateHumanizeTests.cs", label="Exit Humanizer.Tests.ToQuantityTests.ToQuantityNumeric(string, int, string)", span="53-53"];
m2_15 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.SecondsAgo(int, string)", file="DateHumanizeTests.fi-FI.cs", label="Entry Humanizer.Tests.Localisation.ar.DateHumanizeTests.SecondsAgo(int, string)", span="55-55"];
m2_16 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.SecondsAgo(int, string)", file="DateHumanizeTests.fi-FI.cs", label="DateHumanize.Verify(expected, seconds, TimeUnit.Second, TimeUnitTense.Past)", span="57-57"];
m2_17 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.SecondsAgo(int, string)", file="DateHumanizeTests.fi-FI.cs", label="Exit Humanizer.Tests.Localisation.ar.DateHumanizeTests.SecondsAgo(int, string)", span="55-55"];
m2_6 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.HoursAgo(int, string)", file="DateHumanizeTests.fi-FI.cs", label="Entry Humanizer.Tests.Localisation.ar.DateHumanizeTests.HoursAgo(int, string)", span="25-25"];
m2_7 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.HoursAgo(int, string)", file="DateHumanizeTests.fi-FI.cs", label="DateHumanize.Verify(expected, hours, TimeUnit.Hour, TimeUnitTense.Past)", span="27-27"];
m2_8 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.HoursAgo(int, string)", file="DateHumanizeTests.fi-FI.cs", label="Exit Humanizer.Tests.Localisation.ar.DateHumanizeTests.HoursAgo(int, string)", span="25-25"];
m2_12 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.MonthsAgo(int, string)", file="DateHumanizeTests.fi-FI.cs", label="Entry Humanizer.Tests.Localisation.ar.DateHumanizeTests.MonthsAgo(int, string)", span="45-45"];
m2_13 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.MonthsAgo(int, string)", file="DateHumanizeTests.fi-FI.cs", label="DateHumanize.Verify(expected, months, TimeUnit.Month, TimeUnitTense.Past)", span="47-47"];
m2_14 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.MonthsAgo(int, string)", file="DateHumanizeTests.fi-FI.cs", label="Exit Humanizer.Tests.Localisation.ar.DateHumanizeTests.MonthsAgo(int, string)", span="45-45"];
m2_2 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.DaysAgo(int, string)", file="DateHumanizeTests.fi-FI.cs", label="Entry Humanizer.Tests.Localisation.ar.DateHumanizeTests.DaysAgo(int, string)", span="15-15"];
m2_3 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.DaysAgo(int, string)", file="DateHumanizeTests.fi-FI.cs", label="DateHumanize.Verify(expected, days, TimeUnit.Day, TimeUnitTense.Past)", span="17-17"];
m2_4 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.DaysAgo(int, string)", file="DateHumanizeTests.fi-FI.cs", label="Exit Humanizer.Tests.Localisation.ar.DateHumanizeTests.DaysAgo(int, string)", span="15-15"];
m2_18 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.YearsAgo(int, string)", file="DateHumanizeTests.fi-FI.cs", label="Entry Humanizer.Tests.Localisation.ar.DateHumanizeTests.YearsAgo(int, string)", span="65-65"];
m2_19 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.YearsAgo(int, string)", file="DateHumanizeTests.fi-FI.cs", label="DateHumanize.Verify(expected, years, TimeUnit.Year, TimeUnitTense.Past)", span="67-67"];
m2_20 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.YearsAgo(int, string)", file="DateHumanizeTests.fi-FI.cs", label="Exit Humanizer.Tests.Localisation.ar.DateHumanizeTests.YearsAgo(int, string)", span="65-65"];
m2_9 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.MinutesAgo(int, string)", file="DateHumanizeTests.fi-FI.cs", label="Entry Humanizer.Tests.Localisation.ar.DateHumanizeTests.MinutesAgo(int, string)", span="35-35"];
m2_10 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.MinutesAgo(int, string)", file="DateHumanizeTests.fi-FI.cs", label="DateHumanize.Verify(expected, minutes, TimeUnit.Minute, TimeUnitTense.Past)", span="37-37"];
m2_11 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.MinutesAgo(int, string)", file="DateHumanizeTests.fi-FI.cs", label="Exit Humanizer.Tests.Localisation.ar.DateHumanizeTests.MinutesAgo(int, string)", span="35-35"];
m2_0 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.DateHumanizeTests()", file="DateHumanizeTests.fi-FI.cs", label="Entry Humanizer.Tests.Localisation.ar.DateHumanizeTests.DateHumanizeTests()", span="7-7"];
m2_1 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.DateHumanizeTests()", file="DateHumanizeTests.fi-FI.cs", label="Exit Humanizer.Tests.Localisation.ar.DateHumanizeTests.DateHumanizeTests()", span="7-7"];
m2_5 [cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense)", file="DateHumanizeTests.fi-FI.cs", label="Entry Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnitTense)", span="27-27"];
m4_34 [cluster="Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NotYet()", file="DateHumanizeTests.ru-RU.cs", label="Entry Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NotYet()", span="137-137"];
m4_35 [cluster="Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NotYet()", file="DateHumanizeTests.ru-RU.cs", label="var humanize = DateTime.UtcNow.AddDays(1).Humanize()", span="139-139"];
m4_36 [cluster="Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NotYet()", file="DateHumanizeTests.ru-RU.cs", label="Assert.Equal(''в будущем'', humanize)", span="140-140"];
m4_37 [cluster="Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NotYet()", file="DateHumanizeTests.ru-RU.cs", label="Exit Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NotYet()", span="137-137"];
m4_29 [cluster="Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NYearsAgo(int, string)", file="DateHumanizeTests.ru-RU.cs", label="Entry Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NYearsAgo(int, string)", span="130-130"];
m4_30 [cluster="Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NYearsAgo(int, string)", file="DateHumanizeTests.ru-RU.cs", label="var humanize = DateTime.UtcNow.Date.AddYears(-1 * number).Humanize()", span="132-132"];
m4_31 [cluster="Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NYearsAgo(int, string)", file="DateHumanizeTests.ru-RU.cs", label="Assert.Equal(expected, humanize)", span="133-133"];
m4_32 [cluster="Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NYearsAgo(int, string)", file="DateHumanizeTests.ru-RU.cs", label="Exit Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NYearsAgo(int, string)", span="130-130"];
m4_7 [cluster="System.DateTime.Humanize(bool, System.DateTime?)", file="DateHumanizeTests.ru-RU.cs", label="Entry System.DateTime.Humanize(bool, System.DateTime?)", span="20-20"];
m4_28 [cluster="System.DateTime.AddMonths(int)", file="DateHumanizeTests.ru-RU.cs", label="Entry System.DateTime.AddMonths(int)", span="0-0"];
m4_0 [cluster="Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.RussianDateHumanizeTests()", file="DateHumanizeTests.ru-RU.cs", label="Entry Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.RussianDateHumanizeTests()", span="8-8"];
m4_1 [cluster="Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.RussianDateHumanizeTests()", file="DateHumanizeTests.ru-RU.cs", label="Exit Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.RussianDateHumanizeTests()", span="8-8"];
m4_13 [cluster="System.DateTime.AddMinutes(double)", file="DateHumanizeTests.ru-RU.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m4_19 [cluster="Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NDaysAgo(int, string)", file="DateHumanizeTests.ru-RU.cs", label="Entry Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NDaysAgo(int, string)", span="94-94"];
m4_20 [cluster="Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NDaysAgo(int, string)", file="DateHumanizeTests.ru-RU.cs", label="var humanize = DateTime.UtcNow.Date.AddDays(-1 * number).Humanize()", span="96-96"];
m4_21 [cluster="Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NDaysAgo(int, string)", file="DateHumanizeTests.ru-RU.cs", label="Assert.Equal(expected, humanize)", span="97-97"];
m4_22 [cluster="Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NDaysAgo(int, string)", file="DateHumanizeTests.ru-RU.cs", label="Exit Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NDaysAgo(int, string)", span="94-94"];
m4_24 [cluster="Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NMonthsAgo(int, string)", file="DateHumanizeTests.ru-RU.cs", label="Entry Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NMonthsAgo(int, string)", span="109-109"];
m4_25 [cluster="Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NMonthsAgo(int, string)", file="DateHumanizeTests.ru-RU.cs", label="var humanize = DateTime.UtcNow.Date.AddMonths(-1 * number).Humanize()", span="111-111"];
m4_26 [cluster="Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NMonthsAgo(int, string)", file="DateHumanizeTests.ru-RU.cs", label="Assert.Equal(expected, humanize)", span="112-112"];
m4_27 [cluster="Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NMonthsAgo(int, string)", file="DateHumanizeTests.ru-RU.cs", label="Exit Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NMonthsAgo(int, string)", span="109-109"];
m4_6 [cluster="System.DateTime.AddSeconds(double)", file="DateHumanizeTests.ru-RU.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m4_33 [cluster="System.DateTime.AddYears(int)", file="DateHumanizeTests.ru-RU.cs", label="Entry System.DateTime.AddYears(int)", span="0-0"];
m4_8 [cluster="Unk.Equal", file="DateHumanizeTests.ru-RU.cs", label="Entry Unk.Equal", span=""];
m4_9 [cluster="Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NMinutesAgo(int, string)", file="DateHumanizeTests.ru-RU.cs", label="Entry Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NMinutesAgo(int, string)", span="52-52"];
m4_10 [cluster="Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NMinutesAgo(int, string)", file="DateHumanizeTests.ru-RU.cs", label="var humanize = DateTime.UtcNow.AddMinutes(-1 * number).Humanize()", span="54-54"];
m4_11 [cluster="Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NMinutesAgo(int, string)", file="DateHumanizeTests.ru-RU.cs", label="Assert.Equal(expected, humanize)", span="55-55"];
m4_12 [cluster="Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NMinutesAgo(int, string)", file="DateHumanizeTests.ru-RU.cs", label="Exit Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NMinutesAgo(int, string)", span="52-52"];
m4_2 [cluster="Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NSecondsAgo(int, string)", file="DateHumanizeTests.ru-RU.cs", label="Entry Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NSecondsAgo(int, string)", span="29-29"];
m4_3 [cluster="Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NSecondsAgo(int, string)", file="DateHumanizeTests.ru-RU.cs", label="var humanize = DateTime.UtcNow.AddSeconds(-1 * number).Humanize()", span="31-31"];
m4_4 [cluster="Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NSecondsAgo(int, string)", file="DateHumanizeTests.ru-RU.cs", label="Assert.Equal(expected, humanize)", span="32-32"];
m4_5 [cluster="Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NSecondsAgo(int, string)", file="DateHumanizeTests.ru-RU.cs", label="Exit Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NSecondsAgo(int, string)", span="29-29"];
m4_14 [cluster="Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NHoursAgo(int, string)", file="DateHumanizeTests.ru-RU.cs", label="Entry Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NHoursAgo(int, string)", span="72-72"];
m4_15 [cluster="Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NHoursAgo(int, string)", file="DateHumanizeTests.ru-RU.cs", label="var humanize = DateTime.UtcNow.AddHours(-1 * number).Humanize()", span="74-74"];
m4_16 [cluster="Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NHoursAgo(int, string)", file="DateHumanizeTests.ru-RU.cs", label="Assert.Equal(expected, humanize)", span="75-75"];
m4_17 [cluster="Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NHoursAgo(int, string)", file="DateHumanizeTests.ru-RU.cs", label="Exit Humanizer.Tests.Extensions.Localisation.RussianDateHumanizeTests.NHoursAgo(int, string)", span="72-72"];
m4_23 [cluster="System.DateTime.AddDays(double)", file="DateHumanizeTests.ru-RU.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m4_18 [cluster="System.DateTime.AddHours(double)", file="DateHumanizeTests.ru-RU.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m5_7 [cluster="System.DateTime.Humanize(bool, System.DateTime?)", file="DehumanizeToEnumTests.cs", label="Entry System.DateTime.Humanize(bool, System.DateTime?)", span="19-19"];
m5_13 [cluster="System.DateTime.AddHours(double)", file="DehumanizeToEnumTests.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m5_23 [cluster="System.DateTime.AddMonths(int)", file="DehumanizeToEnumTests.cs", label="Entry System.DateTime.AddMonths(int)", span="0-0"];
m5_18 [cluster="System.DateTime.AddMinutes(double)", file="DehumanizeToEnumTests.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m5_28 [cluster="System.DateTime.AddSeconds(double)", file="DehumanizeToEnumTests.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m5_33 [cluster="System.DateTime.AddYears(int)", file="DehumanizeToEnumTests.cs", label="Entry System.DateTime.AddYears(int)", span="0-0"];
m5_8 [cluster="Unk.Equal", file="DehumanizeToEnumTests.cs", label="Entry Unk.Equal", span=""];
m5_29 [cluster="Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.YearsAgo(int, string)", file="DehumanizeToEnumTests.cs", label="Entry Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.YearsAgo(int, string)", span="73-73"];
m5_30 [cluster="Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.YearsAgo(int, string)", file="DehumanizeToEnumTests.cs", label="var date = DateTime.UtcNow.AddYears(years)", span="75-75"];
m5_31 [cluster="Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.YearsAgo(int, string)", file="DehumanizeToEnumTests.cs", label="Assert.Equal(expected, date.Humanize())", span="76-76"];
m5_32 [cluster="Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.YearsAgo(int, string)", file="DehumanizeToEnumTests.cs", label="Exit Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.YearsAgo(int, string)", span="73-73"];
m5_14 [cluster="Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.MinutesAgo(int, string)", file="DehumanizeToEnumTests.cs", label="Entry Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.MinutesAgo(int, string)", span="40-40"];
m5_15 [cluster="Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.MinutesAgo(int, string)", file="DehumanizeToEnumTests.cs", label="var date = DateTime.UtcNow.AddMinutes(minutes)", span="42-42"];
m5_16 [cluster="Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.MinutesAgo(int, string)", file="DehumanizeToEnumTests.cs", label="Assert.Equal(expected, date.Humanize())", span="43-43"];
m5_17 [cluster="Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.MinutesAgo(int, string)", file="DehumanizeToEnumTests.cs", label="Exit Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.MinutesAgo(int, string)", span="40-40"];
m5_9 [cluster="Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.HoursAgo(int, string)", file="DehumanizeToEnumTests.cs", label="Entry Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.HoursAgo(int, string)", span="29-29"];
m5_10 [cluster="Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.HoursAgo(int, string)", file="DehumanizeToEnumTests.cs", label="var date = DateTime.UtcNow.AddHours(hours)", span="31-31"];
m5_11 [cluster="Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.HoursAgo(int, string)", file="DehumanizeToEnumTests.cs", label="Assert.Equal(expected, date.Humanize())", span="32-32"];
m5_12 [cluster="Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.HoursAgo(int, string)", file="DehumanizeToEnumTests.cs", label="Exit Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.HoursAgo(int, string)", span="29-29"];
m5_0 [cluster="Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.DateHumanizeTests_fiFI()", file="DehumanizeToEnumTests.cs", label="Entry Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.DateHumanizeTests_fiFI()", span="8-8"];
m5_1 [cluster="Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.DateHumanizeTests_fiFI()", file="DehumanizeToEnumTests.cs", label="Exit Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.DateHumanizeTests_fiFI()", span="8-8"];
m5_19 [cluster="Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.MonthsAgo(int, string)", file="DehumanizeToEnumTests.cs", label="Entry Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.MonthsAgo(int, string)", span="51-51"];
m5_20 [cluster="Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.MonthsAgo(int, string)", file="DehumanizeToEnumTests.cs", label="var date = DateTime.UtcNow.AddMonths(months)", span="53-53"];
m5_21 [cluster="Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.MonthsAgo(int, string)", file="DehumanizeToEnumTests.cs", label="Assert.Equal(expected, date.Humanize())", span="54-54"];
m5_22 [cluster="Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.MonthsAgo(int, string)", file="DehumanizeToEnumTests.cs", label="Exit Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.MonthsAgo(int, string)", span="51-51"];
m5_6 [cluster="System.DateTime.AddDays(double)", file="DehumanizeToEnumTests.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m5_24 [cluster="Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.SecondsAgo(int, string)", file="DehumanizeToEnumTests.cs", label="Entry Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.SecondsAgo(int, string)", span="62-62"];
m5_25 [cluster="Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.SecondsAgo(int, string)", file="DehumanizeToEnumTests.cs", label="var date = DateTime.UtcNow.AddSeconds(seconds)", span="64-64"];
m5_26 [cluster="Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.SecondsAgo(int, string)", file="DehumanizeToEnumTests.cs", label="Assert.Equal(expected, date.Humanize())", span="65-65"];
m5_27 [cluster="Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.SecondsAgo(int, string)", file="DehumanizeToEnumTests.cs", label="Exit Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.SecondsAgo(int, string)", span="62-62"];
m5_2 [cluster="Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.DaysAgo(int, string)", file="DehumanizeToEnumTests.cs", label="Entry Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.DaysAgo(int, string)", span="18-18"];
m5_3 [cluster="Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.DaysAgo(int, string)", file="DehumanizeToEnumTests.cs", label="var date = DateTime.UtcNow.AddDays(days)", span="20-20"];
m5_4 [cluster="Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.DaysAgo(int, string)", file="DehumanizeToEnumTests.cs", label="Assert.Equal(expected, date.Humanize())", span="21-21"];
m5_5 [cluster="Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.DaysAgo(int, string)", file="DehumanizeToEnumTests.cs", label="Exit Humanizer.Tests.Localisation.DateHumanizeTests_fiFI.DaysAgo(int, string)", span="18-18"];
m6_20 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.SecondsAgo(int, string)", file="EnumHumanizeTests.cs", label="Entry Humanizer.Tests.Localisation.ar.DateHumanizeTests.SecondsAgo(int, string)", span="56-56"];
m6_21 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.SecondsAgo(int, string)", file="EnumHumanizeTests.cs", label="Assert.Equal(expected, DateTime.UtcNow.AddSeconds(seconds).Humanize())", span="58-58"];
m6_22 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.SecondsAgo(int, string)", file="EnumHumanizeTests.cs", label="Exit Humanizer.Tests.Localisation.ar.DateHumanizeTests.SecondsAgo(int, string)", span="56-56"];
m6_6 [cluster="System.DateTime.Humanize(bool, System.DateTime?)", file="EnumHumanizeTests.cs", label="Entry System.DateTime.Humanize(bool, System.DateTime?)", span="19-19"];
m6_8 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.HoursAgo(int, string)", file="EnumHumanizeTests.cs", label="Entry Humanizer.Tests.Localisation.ar.DateHumanizeTests.HoursAgo(int, string)", span="26-26"];
m6_9 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.HoursAgo(int, string)", file="EnumHumanizeTests.cs", label="Assert.Equal(expected, DateTime.UtcNow.AddHours(hours).Humanize())", span="28-28"];
m6_10 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.HoursAgo(int, string)", file="EnumHumanizeTests.cs", label="Exit Humanizer.Tests.Localisation.ar.DateHumanizeTests.HoursAgo(int, string)", span="26-26"];
m6_19 [cluster="System.DateTime.AddMonths(int)", file="EnumHumanizeTests.cs", label="Entry System.DateTime.AddMonths(int)", span="0-0"];
m6_15 [cluster="System.DateTime.AddMinutes(double)", file="EnumHumanizeTests.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m6_23 [cluster="System.DateTime.AddSeconds(double)", file="EnumHumanizeTests.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m6_27 [cluster="System.DateTime.AddYears(int)", file="EnumHumanizeTests.cs", label="Entry System.DateTime.AddYears(int)", span="0-0"];
m6_16 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.MonthsAgo(int, string)", file="EnumHumanizeTests.cs", label="Entry Humanizer.Tests.Localisation.ar.DateHumanizeTests.MonthsAgo(int, string)", span="46-46"];
m6_17 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.MonthsAgo(int, string)", file="EnumHumanizeTests.cs", label="Assert.Equal(expected, DateTime.UtcNow.AddMonths(months).Humanize())", span="48-48"];
m6_18 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.MonthsAgo(int, string)", file="EnumHumanizeTests.cs", label="Exit Humanizer.Tests.Localisation.ar.DateHumanizeTests.MonthsAgo(int, string)", span="46-46"];
m6_7 [cluster="Unk.Equal", file="EnumHumanizeTests.cs", label="Entry Unk.Equal", span=""];
m6_2 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.DaysAgo(int, string)", file="EnumHumanizeTests.cs", label="Entry Humanizer.Tests.Localisation.ar.DateHumanizeTests.DaysAgo(int, string)", span="16-16"];
m6_3 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.DaysAgo(int, string)", file="EnumHumanizeTests.cs", label="Assert.Equal(expected, DateTime.UtcNow.AddDays(days).Humanize())", span="18-18"];
m6_4 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.DaysAgo(int, string)", file="EnumHumanizeTests.cs", label="Exit Humanizer.Tests.Localisation.ar.DateHumanizeTests.DaysAgo(int, string)", span="16-16"];
m6_24 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.YearsAgo(int, string)", file="EnumHumanizeTests.cs", label="Entry Humanizer.Tests.Localisation.ar.DateHumanizeTests.YearsAgo(int, string)", span="66-66"];
m6_25 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.YearsAgo(int, string)", file="EnumHumanizeTests.cs", label="Assert.Equal(expected, DateTime.UtcNow.AddYears(years).Humanize())", span="68-68"];
m6_26 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.YearsAgo(int, string)", file="EnumHumanizeTests.cs", label="Exit Humanizer.Tests.Localisation.ar.DateHumanizeTests.YearsAgo(int, string)", span="66-66"];
m6_12 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.MinutesAgo(int, string)", file="EnumHumanizeTests.cs", label="Entry Humanizer.Tests.Localisation.ar.DateHumanizeTests.MinutesAgo(int, string)", span="36-36"];
m6_13 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.MinutesAgo(int, string)", file="EnumHumanizeTests.cs", label="Assert.Equal(expected, DateTime.UtcNow.AddMinutes(minutes).Humanize())", span="38-38"];
m6_14 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.MinutesAgo(int, string)", file="EnumHumanizeTests.cs", label="Exit Humanizer.Tests.Localisation.ar.DateHumanizeTests.MinutesAgo(int, string)", span="36-36"];
m6_0 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.DateHumanizeTests()", file="EnumHumanizeTests.cs", label="Entry Humanizer.Tests.Localisation.ar.DateHumanizeTests.DateHumanizeTests()", span="8-8"];
m6_1 [cluster="Humanizer.Tests.Localisation.ar.DateHumanizeTests.DateHumanizeTests()", file="EnumHumanizeTests.cs", label="Exit Humanizer.Tests.Localisation.ar.DateHumanizeTests.DateHumanizeTests()", span="8-8"];
m6_5 [cluster="System.DateTime.AddDays(double)", file="EnumHumanizeTests.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m6_11 [cluster="System.DateTime.AddHours(double)", file="EnumHumanizeTests.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m13_4 [cluster="Unk.Equal", file="NumberToOrdinalWordsTests.cs", label="Entry Unk.Equal", span=""];
m13_0 [cluster="Humanizer.Tests.Extensions.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", file="NumberToOrdinalWordsTests.cs", label="Entry Humanizer.Tests.Extensions.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", span="50-50"];
m13_1 [cluster="Humanizer.Tests.Extensions.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", file="NumberToOrdinalWordsTests.cs", label="Assert.Equal(words, number.ToOrdinalWords())", span="52-52"];
m13_2 [cluster="Humanizer.Tests.Extensions.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", file="NumberToOrdinalWordsTests.cs", label="Exit Humanizer.Tests.Extensions.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", span="50-50"];
m13_3 [cluster="int.ToOrdinalWords()", file="NumberToOrdinalWordsTests.cs", label="Entry int.ToOrdinalWords()", span="15-15"];
m14_7 [cluster="Humanizer.NumberToTimeSpanExtensions.Hours(int)", file="NumberToTimeSpanExtensions.cs", label="Entry Humanizer.NumberToTimeSpanExtensions.Hours(int)", span="30-30"];
m14_8 [cluster="Humanizer.NumberToTimeSpanExtensions.Hours(int)", color=red, community=0, file="NumberToTimeSpanExtensions.cs", label="0: return new TimeSpan(0, input, 0, 0);", span="32-32"];
m14_9 [cluster="Humanizer.NumberToTimeSpanExtensions.Hours(int)", file="NumberToTimeSpanExtensions.cs", label="Exit Humanizer.NumberToTimeSpanExtensions.Hours(int)", span="30-30"];
m14_13 [cluster="Humanizer.NumberToTimeSpanExtensions.Seconds(int)", file="NumberToTimeSpanExtensions.cs", label="Entry Humanizer.NumberToTimeSpanExtensions.Seconds(int)", span="50-50"];
m14_14 [cluster="Humanizer.NumberToTimeSpanExtensions.Seconds(int)", color=red, community=0, file="NumberToTimeSpanExtensions.cs", label="0: return new TimeSpan(0, 0, 0, input);", span="52-52"];
m14_15 [cluster="Humanizer.NumberToTimeSpanExtensions.Seconds(int)", file="NumberToTimeSpanExtensions.cs", label="Exit Humanizer.NumberToTimeSpanExtensions.Seconds(int)", span="50-50"];
m14_4 [cluster="Humanizer.NumberToTimeSpanExtensions.Days(int)", file="NumberToTimeSpanExtensions.cs", label="Entry Humanizer.NumberToTimeSpanExtensions.Days(int)", span="20-20"];
m14_5 [cluster="Humanizer.NumberToTimeSpanExtensions.Days(int)", color=red, community=0, file="NumberToTimeSpanExtensions.cs", label="0: return new TimeSpan(input, 0, 0, 0);", span="22-22"];
m14_6 [cluster="Humanizer.NumberToTimeSpanExtensions.Days(int)", file="NumberToTimeSpanExtensions.cs", label="Exit Humanizer.NumberToTimeSpanExtensions.Days(int)", span="20-20"];
m14_10 [cluster="Humanizer.NumberToTimeSpanExtensions.Minutes(int)", file="NumberToTimeSpanExtensions.cs", label="Entry Humanizer.NumberToTimeSpanExtensions.Minutes(int)", span="40-40"];
m14_11 [cluster="Humanizer.NumberToTimeSpanExtensions.Minutes(int)", color=red, community=0, file="NumberToTimeSpanExtensions.cs", label="0: return new TimeSpan(0, 0, input, 0);", span="42-42"];
m14_12 [cluster="Humanizer.NumberToTimeSpanExtensions.Minutes(int)", file="NumberToTimeSpanExtensions.cs", label="Exit Humanizer.NumberToTimeSpanExtensions.Minutes(int)", span="40-40"];
m14_16 [cluster="Humanizer.NumberToTimeSpanExtensions.Milliseconds(int)", file="NumberToTimeSpanExtensions.cs", label="Entry Humanizer.NumberToTimeSpanExtensions.Milliseconds(int)", span="60-60"];
m14_17 [cluster="Humanizer.NumberToTimeSpanExtensions.Milliseconds(int)", color=red, community=0, file="NumberToTimeSpanExtensions.cs", label="0: return new TimeSpan(0, 0, 0, 0, input);", span="62-62"];
m14_18 [cluster="Humanizer.NumberToTimeSpanExtensions.Milliseconds(int)", file="NumberToTimeSpanExtensions.cs", label="Exit Humanizer.NumberToTimeSpanExtensions.Milliseconds(int)", span="60-60"];
m14_19 [cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="NumberToTimeSpanExtensions.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0"];
m14_3 [cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file="NumberToTimeSpanExtensions.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0"];
m14_0 [cluster="Humanizer.NumberToTimeSpanExtensions.Weeks(int)", file="NumberToTimeSpanExtensions.cs", label="Entry Humanizer.NumberToTimeSpanExtensions.Weeks(int)", span="10-10"];
m14_1 [cluster="Humanizer.NumberToTimeSpanExtensions.Weeks(int)", color=red, community=0, file="NumberToTimeSpanExtensions.cs", label="0: return new TimeSpan(input*7, 0, 0, 0);", span="12-12"];
m14_2 [cluster="Humanizer.NumberToTimeSpanExtensions.Weeks(int)", file="NumberToTimeSpanExtensions.cs", label="Exit Humanizer.NumberToTimeSpanExtensions.Weeks(int)", span="10-10"];
m15_0 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Weeks()", file="NumberToTimeSpanTests.cs", label="Entry Humanizer.Tests.Extensions.NumberToTimeSpanTests.Weeks()", span="8-8"];
m15_1 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Weeks()", file="NumberToTimeSpanTests.cs", label="var now = DateTime.Now", span="10-10"];
m15_2 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Weeks()", file="NumberToTimeSpanTests.cs", label="Assert.Equal(now.AddDays(14), now.Add(2.Weeks()))", span="11-11"];
m15_3 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Weeks()", file="NumberToTimeSpanTests.cs", label="Exit Humanizer.Tests.Extensions.NumberToTimeSpanTests.Weeks()", span="8-8"];
m15_6 [cluster="System.DateTime.Add(System.TimeSpan)", file="NumberToTimeSpanTests.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m15_13 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Hours()", file="NumberToTimeSpanTests.cs", label="Entry Humanizer.Tests.Extensions.NumberToTimeSpanTests.Hours()", span="21-21"];
m15_14 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Hours()", file="NumberToTimeSpanTests.cs", label="Assert.Equal(new TimeSpan(0, 3, 0, 0), 3.Hours())", span="23-23"];
m15_15 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Hours()", file="NumberToTimeSpanTests.cs", label="Exit Humanizer.Tests.Extensions.NumberToTimeSpanTests.Hours()", span="21-21"];
m15_16 [cluster="int.Hours()", file="NumberToTimeSpanTests.cs", label="Entry int.Hours()", span="30-30"];
m15_29 [cluster="int.Milliseconds()", file="NumberToTimeSpanTests.cs", label="Entry int.Milliseconds()", span="60-60"];
m15_12 [cluster="int.Days()", file="NumberToTimeSpanTests.cs", label="Entry int.Days()", span="20-20"];
m15_25 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Milliseconds()", file="NumberToTimeSpanTests.cs", label="Entry Humanizer.Tests.Extensions.NumberToTimeSpanTests.Milliseconds()", span="39-39"];
m15_26 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Milliseconds()", file="NumberToTimeSpanTests.cs", label="Assert.Equal(new TimeSpan(0, 0, 0, 0, 6), 6.Milliseconds())", span="41-41"];
m15_27 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Milliseconds()", file="NumberToTimeSpanTests.cs", label="Exit Humanizer.Tests.Extensions.NumberToTimeSpanTests.Milliseconds()", span="39-39"];
m15_8 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Days()", file="NumberToTimeSpanTests.cs", label="Entry Humanizer.Tests.Extensions.NumberToTimeSpanTests.Days()", span="15-15"];
m15_9 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Days()", file="NumberToTimeSpanTests.cs", label="Assert.Equal(new TimeSpan(2, 0, 0, 0), 2.Days())", span="17-17"];
m15_10 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Days()", file="NumberToTimeSpanTests.cs", label="Exit Humanizer.Tests.Extensions.NumberToTimeSpanTests.Days()", span="15-15"];
m15_7 [cluster="Unk.Equal", file="NumberToTimeSpanTests.cs", label="Entry Unk.Equal", span=""];
m15_21 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Seconds()", file="NumberToTimeSpanTests.cs", label="Entry Humanizer.Tests.Extensions.NumberToTimeSpanTests.Seconds()", span="33-33"];
m15_22 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Seconds()", file="NumberToTimeSpanTests.cs", label="Assert.Equal(new TimeSpan(0, 0, 0, 5), 5.Seconds())", span="35-35"];
m15_23 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Seconds()", file="NumberToTimeSpanTests.cs", label="Exit Humanizer.Tests.Extensions.NumberToTimeSpanTests.Seconds()", span="33-33"];
m15_24 [cluster="int.Seconds()", file="NumberToTimeSpanTests.cs", label="Entry int.Seconds()", span="50-50"];
m15_20 [cluster="int.Minutes()", file="NumberToTimeSpanTests.cs", label="Entry int.Minutes()", span="40-40"];
m15_28 [cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="NumberToTimeSpanTests.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0"];
m15_11 [cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file="NumberToTimeSpanTests.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0"];
m15_5 [cluster="int.Weeks()", file="NumberToTimeSpanTests.cs", label="Entry int.Weeks()", span="10-10"];
m15_17 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Minutes()", file="NumberToTimeSpanTests.cs", label="Entry Humanizer.Tests.Extensions.NumberToTimeSpanTests.Minutes()", span="27-27"];
m15_18 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Minutes()", file="NumberToTimeSpanTests.cs", label="Assert.Equal(new TimeSpan(0, 0, 4, 0), 4.Minutes())", span="29-29"];
m15_19 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Minutes()", file="NumberToTimeSpanTests.cs", label="Exit Humanizer.Tests.Extensions.NumberToTimeSpanTests.Minutes()", span="27-27"];
m15_4 [cluster="System.DateTime.AddDays(double)", file="NumberToTimeSpanTests.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m16_8 [cluster="Unk.Equal", file="NumberToWordsTests.cs", label="Entry Unk.Equal", span=""];
m16_7 [cluster="int.ToWords()", file="NumberToWordsTests.cs", label="Entry int.ToWords()", span="13-13"];
m16_0 [cluster="Humanizer.Tests.Extensions.NumberToWordsTests.ToWords()", file="NumberToWordsTests.cs", label="Entry Humanizer.Tests.Extensions.NumberToWordsTests.ToWords()", span="6-6"];
m16_1 [cluster="Humanizer.Tests.Extensions.NumberToWordsTests.ToWords()", file="NumberToWordsTests.cs", label="Assert.Equal(''one'', 1.ToWords())", span="8-8"];
m16_2 [cluster="Humanizer.Tests.Extensions.NumberToWordsTests.ToWords()", file="NumberToWordsTests.cs", label="Assert.Equal(''ten'', 10.ToWords())", span="9-9"];
m16_3 [cluster="Humanizer.Tests.Extensions.NumberToWordsTests.ToWords()", file="NumberToWordsTests.cs", label="Assert.Equal(''eleven'', 11.ToWords())", span="10-10"];
m16_4 [cluster="Humanizer.Tests.Extensions.NumberToWordsTests.ToWords()", file="NumberToWordsTests.cs", label="Assert.Equal(''one hundred and twenty-two'', 122.ToWords())", span="11-11"];
m16_5 [cluster="Humanizer.Tests.Extensions.NumberToWordsTests.ToWords()", file="NumberToWordsTests.cs", label="Assert.Equal(''three thousand five hundred and one'', 3501.ToWords())", span="12-12"];
m16_6 [cluster="Humanizer.Tests.Extensions.NumberToWordsTests.ToWords()", file="NumberToWordsTests.cs", label="Exit Humanizer.Tests.Extensions.NumberToWordsTests.ToWords()", span="6-6"];
m16_9 [cluster="Humanizer.Tests.Extensions.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", file="NumberToWordsTests.cs", label="Entry Humanizer.Tests.Extensions.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", span="16-16"];
m16_10 [cluster="Humanizer.Tests.Extensions.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", file="NumberToWordsTests.cs", label="Assert.Equal(''one hundred'', 100.ToWords())", span="18-18"];
m16_11 [cluster="Humanizer.Tests.Extensions.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", file="NumberToWordsTests.cs", label="Assert.Equal(''one thousand'', 1000.ToWords())", span="19-19"];
m16_12 [cluster="Humanizer.Tests.Extensions.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", file="NumberToWordsTests.cs", label="Assert.Equal(''one hundred thousand'', 100000.ToWords())", span="20-20"];
m16_13 [cluster="Humanizer.Tests.Extensions.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", file="NumberToWordsTests.cs", label="Assert.Equal(''one million'', 1000000.ToWords())", span="21-21"];
m16_14 [cluster="Humanizer.Tests.Extensions.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", file="NumberToWordsTests.cs", label="Exit Humanizer.Tests.Extensions.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", span="16-16"];
m17_31 [cluster="Humanizer.On.February.The(int)", file="OnTests.cs", label="Entry Humanizer.On.February.The(int)", span="173-173"];
m17_11 [cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnDecemberThe4th()", file="OnTests.cs", label="Entry Humanizer.Tests.Extensions.FluentDate.OnTests.OnDecemberThe4th()", span="21-21"];
m17_12 [cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnDecemberThe4th()", file="OnTests.cs", label="var dec4th = On.December.The4th", span="23-23"];
m17_13 [cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnDecemberThe4th()", file="OnTests.cs", label="Assert.Equal(DateTime.Now.Year, dec4th.Year)", span="24-24"];
m17_14 [cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnDecemberThe4th()", file="OnTests.cs", label="Assert.Equal(12, dec4th.Month)", span="25-25"];
m17_15 [cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnDecemberThe4th()", file="OnTests.cs", label="Assert.Equal(4, dec4th.Day)", span="26-26"];
m17_16 [cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnDecemberThe4th()", file="OnTests.cs", label="Assert.Equal(0, dec4th.Hour)", span="27-27"];
m17_17 [cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnDecemberThe4th()", file="OnTests.cs", label="Assert.Equal(0, dec4th.Minute)", span="28-28"];
m17_18 [cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnDecemberThe4th()", file="OnTests.cs", label="Assert.Equal(0, dec4th.Second)", span="29-29"];
m17_19 [cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnDecemberThe4th()", file="OnTests.cs", label="Assert.Equal(0, dec4th.Millisecond)", span="30-30"];
m17_20 [cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnDecemberThe4th()", file="OnTests.cs", label="Exit Humanizer.Tests.Extensions.FluentDate.OnTests.OnDecemberThe4th()", span="21-21"];
m17_10 [cluster="Unk.Equal", file="OnTests.cs", label="Entry Unk.Equal", span=""];
m17_21 [cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnFebruaryThe()", file="OnTests.cs", label="Entry Humanizer.Tests.Extensions.FluentDate.OnTests.OnFebruaryThe()", span="34-34"];
m17_22 [cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnFebruaryThe()", file="OnTests.cs", label="var feb11th = On.February.The(11)", span="36-36"];
m17_23 [cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnFebruaryThe()", file="OnTests.cs", label="Assert.Equal(DateTime.Now.Year, feb11th.Year)", span="37-37"];
m17_24 [cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnFebruaryThe()", file="OnTests.cs", label="Assert.Equal(2, feb11th.Month)", span="38-38"];
m17_25 [cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnFebruaryThe()", file="OnTests.cs", label="Assert.Equal(11, feb11th.Day)", span="39-39"];
m17_26 [cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnFebruaryThe()", file="OnTests.cs", label="Assert.Equal(0, feb11th.Hour)", span="40-40"];
m17_27 [cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnFebruaryThe()", file="OnTests.cs", label="Assert.Equal(0, feb11th.Minute)", span="41-41"];
m17_28 [cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnFebruaryThe()", file="OnTests.cs", label="Assert.Equal(0, feb11th.Second)", span="42-42"];
m17_29 [cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnFebruaryThe()", file="OnTests.cs", label="Assert.Equal(0, feb11th.Millisecond)", span="43-43"];
m17_30 [cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnFebruaryThe()", file="OnTests.cs", label="Exit Humanizer.Tests.Extensions.FluentDate.OnTests.OnFebruaryThe()", span="34-34"];
m17_0 [cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnJanuaryThe23rd()", file="OnTests.cs", label="Entry Humanizer.Tests.Extensions.FluentDate.OnTests.OnJanuaryThe23rd()", span="8-8"];
m17_1 [cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnJanuaryThe23rd()", file="OnTests.cs", label="var jan23rd = On.January.The23rd", span="10-10"];
m17_2 [cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnJanuaryThe23rd()", file="OnTests.cs", label="Assert.Equal(DateTime.Now.Year, jan23rd.Year)", span="11-11"];
m17_3 [cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnJanuaryThe23rd()", file="OnTests.cs", label="Assert.Equal(1, jan23rd.Month)", span="12-12"];
m17_4 [cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnJanuaryThe23rd()", file="OnTests.cs", label="Assert.Equal(23, jan23rd.Day)", span="13-13"];
m17_5 [cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnJanuaryThe23rd()", file="OnTests.cs", label="Assert.Equal(0, jan23rd.Hour)", span="14-14"];
m17_6 [cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnJanuaryThe23rd()", file="OnTests.cs", label="Assert.Equal(0, jan23rd.Minute)", span="15-15"];
m17_7 [cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnJanuaryThe23rd()", file="OnTests.cs", label="Assert.Equal(0, jan23rd.Second)", span="16-16"];
m17_8 [cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnJanuaryThe23rd()", file="OnTests.cs", label="Assert.Equal(0, jan23rd.Millisecond)", span="17-17"];
m17_9 [cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnJanuaryThe23rd()", file="OnTests.cs", label="Exit Humanizer.Tests.Extensions.FluentDate.OnTests.OnJanuaryThe23rd()", span="8-8"];
m18_6 [cluster="System.TimeSpan.Humanize(int)", file="OrdinalizeExtensions.cs", label="Entry System.TimeSpan.Humanize(int)", span="18-18"];
m18_19 [cluster="Humanizer.Tests.Localisation.nbNO.TimeSpanHumanizeTests.Seconds(int, string)", file="OrdinalizeExtensions.cs", label="Entry Humanizer.Tests.Localisation.nbNO.TimeSpanHumanizeTests.Seconds(int, string)", span="45-45"];
m18_20 [cluster="Humanizer.Tests.Localisation.nbNO.TimeSpanHumanizeTests.Seconds(int, string)", color=green, community=0, file="OrdinalizeExtensions.cs", label="0: Assert.Equal(expected, TimeSpan.FromSeconds(seconds).Humanize())", span="47-47"];
m18_21 [cluster="Humanizer.Tests.Localisation.nbNO.TimeSpanHumanizeTests.Seconds(int, string)", file="OrdinalizeExtensions.cs", label="Exit Humanizer.Tests.Localisation.nbNO.TimeSpanHumanizeTests.Seconds(int, string)", span="45-45"];
m18_23 [cluster="Humanizer.Tests.Localisation.nbNO.TimeSpanHumanizeTests.Milliseconds(int, string)", file="OrdinalizeExtensions.cs", label="Entry Humanizer.Tests.Localisation.nbNO.TimeSpanHumanizeTests.Milliseconds(int, string)", span="53-53"];
m18_24 [cluster="Humanizer.Tests.Localisation.nbNO.TimeSpanHumanizeTests.Milliseconds(int, string)", file="OrdinalizeExtensions.cs", label="Assert.Equal(expected, TimeSpan.FromMilliseconds(milliseconds).Humanize())", span="55-55"];
m18_25 [cluster="Humanizer.Tests.Localisation.nbNO.TimeSpanHumanizeTests.Milliseconds(int, string)", file="OrdinalizeExtensions.cs", label="Exit Humanizer.Tests.Localisation.nbNO.TimeSpanHumanizeTests.Milliseconds(int, string)", span="53-53"];
m18_18 [cluster="System.TimeSpan.FromMinutes(double)", file="OrdinalizeExtensions.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m18_27 [cluster="Humanizer.Tests.Localisation.nbNO.TimeSpanHumanizeTests.NoTime()", file="OrdinalizeExtensions.cs", label="Entry Humanizer.Tests.Localisation.nbNO.TimeSpanHumanizeTests.NoTime()", span="59-59"];
m18_28 [cluster="Humanizer.Tests.Localisation.nbNO.TimeSpanHumanizeTests.NoTime()", file="OrdinalizeExtensions.cs", label="Assert.Equal(''ingen tid'', TimeSpan.Zero.Humanize())", span="61-61"];
m18_29 [cluster="Humanizer.Tests.Localisation.nbNO.TimeSpanHumanizeTests.NoTime()", file="OrdinalizeExtensions.cs", label="Exit Humanizer.Tests.Localisation.nbNO.TimeSpanHumanizeTests.NoTime()", span="59-59"];
m18_8 [cluster="Humanizer.Tests.Localisation.nbNO.TimeSpanHumanizeTests.Days(int, string)", file="OrdinalizeExtensions.cs", label="Entry Humanizer.Tests.Localisation.nbNO.TimeSpanHumanizeTests.Days(int, string)", span="21-21"];
m18_9 [cluster="Humanizer.Tests.Localisation.nbNO.TimeSpanHumanizeTests.Days(int, string)", color=green, community=0, file="OrdinalizeExtensions.cs", label="0: Assert.Equal(expected, TimeSpan.FromDays(days).Humanize())", span="23-23"];
m18_10 [cluster="Humanizer.Tests.Localisation.nbNO.TimeSpanHumanizeTests.Days(int, string)", file="OrdinalizeExtensions.cs", label="Exit Humanizer.Tests.Localisation.nbNO.TimeSpanHumanizeTests.Days(int, string)", span="21-21"];
m18_11 [cluster="Humanizer.Tests.Localisation.nbNO.TimeSpanHumanizeTests.Hours(int, string)", file="OrdinalizeExtensions.cs", label="Entry Humanizer.Tests.Localisation.nbNO.TimeSpanHumanizeTests.Hours(int, string)", span="29-29"];
m18_12 [cluster="Humanizer.Tests.Localisation.nbNO.TimeSpanHumanizeTests.Hours(int, string)", color=green, community=0, file="OrdinalizeExtensions.cs", label="0: Assert.Equal(expected, TimeSpan.FromHours(hours).Humanize())", span="31-31"];
m18_13 [cluster="Humanizer.Tests.Localisation.nbNO.TimeSpanHumanizeTests.Hours(int, string)", file="OrdinalizeExtensions.cs", label="Exit Humanizer.Tests.Localisation.nbNO.TimeSpanHumanizeTests.Hours(int, string)", span="29-29"];
m18_7 [cluster="Unk.Equal", file="OrdinalizeExtensions.cs", label="Entry Unk.Equal", span=""];
m18_22 [cluster="System.TimeSpan.FromSeconds(double)", file="OrdinalizeExtensions.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m18_14 [cluster="System.TimeSpan.FromHours(double)", file="OrdinalizeExtensions.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m18_26 [cluster="System.TimeSpan.FromMilliseconds(double)", file="OrdinalizeExtensions.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m18_5 [cluster="System.TimeSpan.FromDays(double)", file="OrdinalizeExtensions.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m18_15 [cluster="Humanizer.Tests.Localisation.nbNO.TimeSpanHumanizeTests.Minutes(int, string)", file="OrdinalizeExtensions.cs", label="Entry Humanizer.Tests.Localisation.nbNO.TimeSpanHumanizeTests.Minutes(int, string)", span="37-37"];
m18_16 [cluster="Humanizer.Tests.Localisation.nbNO.TimeSpanHumanizeTests.Minutes(int, string)", color=green, community=0, file="OrdinalizeExtensions.cs", label="0: Assert.Equal(expected, TimeSpan.FromMinutes(minutes).Humanize())", span="39-39"];
m18_17 [cluster="Humanizer.Tests.Localisation.nbNO.TimeSpanHumanizeTests.Minutes(int, string)", file="OrdinalizeExtensions.cs", label="Exit Humanizer.Tests.Localisation.nbNO.TimeSpanHumanizeTests.Minutes(int, string)", span="37-37"];
m18_2 [cluster="Humanizer.Tests.Localisation.nbNO.TimeSpanHumanizeTests.Weeks(int, string)", file="OrdinalizeExtensions.cs", label="Entry Humanizer.Tests.Localisation.nbNO.TimeSpanHumanizeTests.Weeks(int, string)", span="13-13"];
m18_3 [cluster="Humanizer.Tests.Localisation.nbNO.TimeSpanHumanizeTests.Weeks(int, string)", color=green, community=0, file="OrdinalizeExtensions.cs", label="0: Assert.Equal(expected, TimeSpan.FromDays(days).Humanize())", span="15-15"];
m18_4 [cluster="Humanizer.Tests.Localisation.nbNO.TimeSpanHumanizeTests.Weeks(int, string)", file="OrdinalizeExtensions.cs", label="Exit Humanizer.Tests.Localisation.nbNO.TimeSpanHumanizeTests.Weeks(int, string)", span="13-13"];
m19_0 [cluster="Humanizer.Tests.OrdinalizeTests.OrdinalizeString(string, string)", file="OrdinalizeTests.cs", label="Entry Humanizer.Tests.OrdinalizeTests.OrdinalizeString(string, string)", span="36-36"];
m19_1 [cluster="Humanizer.Tests.OrdinalizeTests.OrdinalizeString(string, string)", color=green, community=0, file="OrdinalizeTests.cs", label="0: Assert.Equal(number.Ordinalize(), ordinalized)", span="38-38"];
m19_2 [cluster="Humanizer.Tests.OrdinalizeTests.OrdinalizeString(string, string)", file="OrdinalizeTests.cs", label="Exit Humanizer.Tests.OrdinalizeTests.OrdinalizeString(string, string)", span="36-36"];
m19_5 [cluster="Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", file="OrdinalizeTests.cs", label="Entry Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", span="70-70"];
m19_6 [cluster="Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", color=green, community=0, file="OrdinalizeTests.cs", label="0: Assert.Equal(number.Ordinalize(), ordinalized)", span="72-72"];
m19_7 [cluster="Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", file="OrdinalizeTests.cs", label="Exit Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", span="70-70"];
m19_4 [cluster="Unk.Equal", file="OrdinalizeTests.cs", label="Entry Unk.Equal", span=""];
m19_8 [cluster="int.Ordinalize()", file="OrdinalizeTests.cs", label="Entry int.Ordinalize()", span="25-25"];
m19_3 [cluster="string.Ordinalize()", file="OrdinalizeTests.cs", label="Entry string.Ordinalize()", span="15-15"];
m23_7 [cluster="Unk.Equal", file="ResourcesTests.cs", label="Entry Unk.Equal", span=""];
m23_0 [cluster="Humanizer.Tests.Extensions.Localisation.ResourcesTests.CanGetCultureSpecificTranslations()", file="ResourcesTests.cs", label="Entry Humanizer.Tests.Extensions.Localisation.ResourcesTests.CanGetCultureSpecificTranslations()", span="7-7"];
m23_1 [cluster="Humanizer.Tests.Extensions.Localisation.ResourcesTests.CanGetCultureSpecificTranslations()", file="ResourcesTests.cs", label="new AmbientCulture(''ro'')", span="9-9"];
m23_2 [cluster="Humanizer.Tests.Extensions.Localisation.ResourcesTests.CanGetCultureSpecificTranslations()", file="ResourcesTests.cs", label="var format = Resources.GetResource(''DateHumanize_MultipleYearsAgo_Above20'')", span="11-11"];
m23_3 [cluster="Humanizer.Tests.Extensions.Localisation.ResourcesTests.CanGetCultureSpecificTranslations()", file="ResourcesTests.cs", label="Assert.Equal(''acum {0} de ani'', format)", span="12-12"];
m23_4 [cluster="Humanizer.Tests.Extensions.Localisation.ResourcesTests.CanGetCultureSpecificTranslations()", file="ResourcesTests.cs", label="Exit Humanizer.Tests.Extensions.Localisation.ResourcesTests.CanGetCultureSpecificTranslations()", span="7-7"];
m23_6 [cluster="Humanizer.Localisation.Resources.GetResource(string)", file="ResourcesTests.cs", label="Entry Humanizer.Localisation.Resources.GetResource(string)", span="26-26"];
m24_0 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.PascalCaseSentence()", file="StringDehumanizeTests.cs", label="Entry Humanizer.Tests.Extensions.StringDehumanizeTests.PascalCaseSentence()", span="7-7"];
m24_1 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.PascalCaseSentence()", file="StringDehumanizeTests.cs", label="Assert.Equal(\r\n                ''PascalCaseSentenceIsCamelized'',\r\n                ''Pascal case sentence is camelized''.Dehumanize())", span="9-11"];
m24_2 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.PascalCaseSentence()", file="StringDehumanizeTests.cs", label="Exit Humanizer.Tests.Extensions.StringDehumanizeTests.PascalCaseSentence()", span="7-7"];
m24_4 [cluster="Unk.Equal", file="StringDehumanizeTests.cs", label="Entry Unk.Equal", span=""];
m24_3 [cluster="string.Dehumanize()", file="StringDehumanizeTests.cs", label="Entry string.Dehumanize()", span="11-11"];
m24_8 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.MixedCaseSentence()", file="StringDehumanizeTests.cs", label="Entry Humanizer.Tests.Extensions.StringDehumanizeTests.MixedCaseSentence()", span="23-23"];
m24_9 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.MixedCaseSentence()", file="StringDehumanizeTests.cs", label="Assert.Equal(\r\n                ''MixedCaseSentenceIsCamelized'',\r\n                ''Mixed case sentence Is Camelized''.Dehumanize())", span="25-27"];
m24_10 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.MixedCaseSentence()", file="StringDehumanizeTests.cs", label="Exit Humanizer.Tests.Extensions.StringDehumanizeTests.MixedCaseSentence()", span="23-23"];
m24_14 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.EmptySentence()", file="StringDehumanizeTests.cs", label="Entry Humanizer.Tests.Extensions.StringDehumanizeTests.EmptySentence()", span="39-39"];
m24_15 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.EmptySentence()", file="StringDehumanizeTests.cs", label="Assert.Equal(\r\n                '''',\r\n                ''''.Dehumanize())", span="41-43"];
m24_16 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.EmptySentence()", file="StringDehumanizeTests.cs", label="Exit Humanizer.Tests.Extensions.StringDehumanizeTests.EmptySentence()", span="39-39"];
m24_5 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.TitleCaseSentence()", file="StringDehumanizeTests.cs", label="Entry Humanizer.Tests.Extensions.StringDehumanizeTests.TitleCaseSentence()", span="15-15"];
m24_6 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.TitleCaseSentence()", file="StringDehumanizeTests.cs", label="Assert.Equal(\r\n                ''TitleCaseSentenceIsCamelized'',\r\n                ''Title Case Sentence Is Camelized''.Dehumanize())", span="17-19"];
m24_7 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.TitleCaseSentence()", file="StringDehumanizeTests.cs", label="Exit Humanizer.Tests.Extensions.StringDehumanizeTests.TitleCaseSentence()", span="15-15"];
m24_11 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.LowerCaseSentence()", file="StringDehumanizeTests.cs", label="Entry Humanizer.Tests.Extensions.StringDehumanizeTests.LowerCaseSentence()", span="31-31"];
m24_12 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.LowerCaseSentence()", file="StringDehumanizeTests.cs", label="Assert.Equal(\r\n                ''LowerCaseSentenceIsCamelized'',\r\n                ''lower case sentence is camelized''.Dehumanize())", span="33-35"];
m24_13 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.LowerCaseSentence()", file="StringDehumanizeTests.cs", label="Exit Humanizer.Tests.Extensions.StringDehumanizeTests.LowerCaseSentence()", span="31-31"];
m26_23 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreLeftIntact()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreLeftIntact()", span="59-59"];
m26_24 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreLeftIntact()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''HTML'',\r\n                ''HTML''.Humanize())", span="61-63"];
m26_25 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreLeftIntact()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreLeftIntact()", span="59-59"];
m26_3 [cluster="string.Humanize()", file="StringHumanizeTests.cs", label="Entry string.Humanize()", span="42-42"];
m26_0 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.PascalCaseInputStringIsTurnedIntoSentence()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.PascalCaseInputStringIsTurnedIntoSentence()", span="7-7"];
m26_1 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.PascalCaseInputStringIsTurnedIntoSentence()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''Pascal case input string is turned into sentence'',\r\n                ''PascalCaseInputStringIsTurnedIntoSentence''.Humanize())", span="9-11"];
m26_2 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.PascalCaseInputStringIsTurnedIntoSentence()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.PascalCaseInputStringIsTurnedIntoSentence()", span="7-7"];
m26_29 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreSeparatedFromOtherWordsInTheStart()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreSeparatedFromOtherWordsInTheStart()", span="75-75"];
m26_30 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreSeparatedFromOtherWordsInTheStart()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''HTML is the language'',\r\n                ''HTMLIsTheLanguage''.Humanize())", span="77-79"];
m26_31 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreSeparatedFromOtherWordsInTheStart()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreSeparatedFromOtherWordsInTheStart()", span="75-75"];
m26_35 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreSeparatedFromNumbersInTheEnd()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreSeparatedFromNumbersInTheEnd()", span="91-91"];
m26_36 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreSeparatedFromNumbersInTheEnd()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''HTML 5'',\r\n                ''HTML5''.Humanize())", span="93-95"];
m26_37 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreSeparatedFromNumbersInTheEnd()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreSeparatedFromNumbersInTheEnd()", span="91-91"];
m26_8 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringStartsWithANumber_ThenNumberIsDealtWithLikeAWord()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringStartsWithANumber_ThenNumberIsDealtWithLikeAWord()", span="23-23"];
m26_9 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringStartsWithANumber_ThenNumberIsDealtWithLikeAWord()", file="StringHumanizeTests.cs", label="Assert.Equal(''10 is in the begining'', ''10IsInTheBegining''.Humanize())", span="25-25"];
m26_10 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringStartsWithANumber_ThenNumberIsDealtWithLikeAWord()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringStartsWithANumber_ThenNumberIsDealtWithLikeAWord()", span="23-23"];
m26_45 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", span="115-115"];
m26_46 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''Can Return Title Case'',\r\n                ''Can_return_title_Case''.Humanize(LetterCasing.Title))", span="117-119"];
m26_47 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", span="115-115"];
m26_4 [cluster="Unk.Equal", file="StringHumanizeTests.cs", label="Entry Unk.Equal", span=""];
m26_51 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCase()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCase()", span="131-131"];
m26_52 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCase()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''can return lower case'',\r\n                ''CanReturnLowerCase''.Humanize(LetterCasing.LowerCase))", span="133-135"];
m26_53 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCase()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCase()", span="131-131"];
m26_60 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", span="155-155"];
m26_61 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''lowercase'',\r\n                ''LOWERCASE''.Humanize(LetterCasing.LowerCase))", span="157-159"];
m26_62 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", span="155-155"];
m26_41 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", span="107-107"];
m26_42 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''Can Return Title Case'',\r\n                ''CanReturnTitleCase''.Humanize(LetterCasing.Title))", span="109-111"];
m26_43 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", span="107-107"];
m26_54 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoSentenceCase()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoSentenceCase()", span="139-139"];
m26_55 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoSentenceCase()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''Can return sentence case'',\r\n                ''CanReturnSentenceCase''.Humanize(LetterCasing.Sentence))", span="141-143"];
m26_56 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoSentenceCase()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoSentenceCase()", span="139-139"];
m26_14 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringIsTurnedIntoSentence()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringIsTurnedIntoSentence()", span="35-35"];
m26_15 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringIsTurnedIntoSentence()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''Underscored input string is turned into sentence'',\r\n                ''Underscored_input_string_is_turned_into_sentence''.Humanize())", span="37-39"];
m26_16 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringIsTurnedIntoSentence()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringIsTurnedIntoSentence()", span="35-35"];
m26_38 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreSeparatedFromNumbersInTheStart()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreSeparatedFromNumbersInTheStart()", span="99-99"];
m26_39 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreSeparatedFromNumbersInTheStart()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''1 HTML'',\r\n                ''1HTML''.Humanize())", span="101-103"];
m26_40 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreSeparatedFromNumbersInTheStart()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreSeparatedFromNumbersInTheStart()", span="99-99"];
m26_63 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoUpperCase()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoUpperCase()", span="163-163"];
m26_64 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoUpperCase()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''CAN HUMANIZE INTO UPPER CASE'',\r\n                ''CanHumanizeIntoUpperCase''.Humanize(LetterCasing.AllCaps))", span="165-167"];
m26_65 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoUpperCase()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoUpperCase()", span="163-163"];
m26_48 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.TitleHumanizationHonorsAllCaps()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.TitleHumanizationHonorsAllCaps()", span="123-123"];
m26_49 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.TitleHumanizationHonorsAllCaps()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''Title Humanization Honors ALLCAPS'',\r\n                ''Title_humanization_Honors_ALLCAPS''.Humanize(LetterCasing.Title))", span="125-127"];
m26_50 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.TitleHumanizationHonorsAllCaps()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.TitleHumanizationHonorsAllCaps()", span="123-123"];
m26_5 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", span="15-15"];
m26_6 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''When I use an input a here'',\r\n                ''WhenIUseAnInputAHere''.Humanize())", span="17-19"];
m26_7 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", span="15-15"];
m26_57 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.SentenceCasingWorksOnEmptyStrings()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.SentenceCasingWorksOnEmptyStrings()", span="147-147"];
m26_58 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.SentenceCasingWorksOnEmptyStrings()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                '''',\r\n                ''''.Humanize(LetterCasing.Sentence))", span="149-151"];
m26_59 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.SentenceCasingWorksOnEmptyStrings()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.SentenceCasingWorksOnEmptyStrings()", span="147-147"];
m26_44 [cluster="string.Humanize(Humanizer.LetterCasing)", file="StringHumanizeTests.cs", label="Entry string.Humanize(Humanizer.LetterCasing)", span="60-60"];
m26_20 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", span="51-51"];
m26_21 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''X is first word in the sentence'',\r\n                ''XIsFirstWordInTheSentence''.Humanize())", span="53-55"];
m26_22 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", span="51-51"];
m26_11 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", span="29-29"];
m26_12 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", file="StringHumanizeTests.cs", label="Assert.Equal(''Number is at the end 100'', ''NumberIsAtTheEnd100''.Humanize())", span="31-31"];
m26_13 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", span="29-29"];
m26_17 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringPreservesCasing()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringPreservesCasing()", span="43-43"];
m26_18 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringPreservesCasing()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''Underscored input String is turned INTO sentence'',\r\n                ''Underscored_input_String_is_turned_INTO_sentence''.Humanize())", span="45-47"];
m26_19 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringPreservesCasing()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringPreservesCasing()", span="43-43"];
m26_32 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreSeparatedFromOtherWordsInTheEnd()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreSeparatedFromOtherWordsInTheEnd()", span="83-83"];
m26_33 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreSeparatedFromOtherWordsInTheEnd()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''The language is HTML'',\r\n                ''TheLanguageIsHTML''.Humanize())", span="85-87"];
m26_34 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreSeparatedFromOtherWordsInTheEnd()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreSeparatedFromOtherWordsInTheEnd()", span="83-83"];
m26_26 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreSeparatedFromOtherWordsInTheMiddle()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreSeparatedFromOtherWordsInTheMiddle()", span="67-67"];
m26_27 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreSeparatedFromOtherWordsInTheMiddle()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''The HTML language'',\r\n                ''TheHTMLLanguage''.Humanize())", span="69-71"];
m26_28 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreSeparatedFromOtherWordsInTheMiddle()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreSeparatedFromOtherWordsInTheMiddle()", span="67-67"];
m26_66 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanTurnIntoUpperCasewhenUsingUnderscores()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.CanTurnIntoUpperCasewhenUsingUnderscores()", span="171-171"];
m26_67 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanTurnIntoUpperCasewhenUsingUnderscores()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''CAN HUMANIZE INTO UPPER CASE'',\r\n                ''Can_Humanize_into_Upper_case''.Humanize(LetterCasing.AllCaps))", span="173-175"];
m26_68 [cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanTurnIntoUpperCasewhenUsingUnderscores()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.CanTurnIntoUpperCasewhenUsingUnderscores()", span="171-171"];
n9 -> n1  [color=darkseagreen4, key=1, label="Humanizer.Tests.Extensions.Localisation.AmbientCulture", style=dashed];
n9 -> n7  [color=darkseagreen4, key=1, label="Humanizer.Tests.Extensions.Localisation.AmbientCulture", style=dashed];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
n1 -> n2  [key=0, style=solid];
n2 -> n3  [key=0, style=solid];
n3 -> n0  [color=blue, key=0, style=bold];
n4 -> n5  [key=0, style=solid];
n5 -> n4  [color=blue, key=0, style=bold];
n6 -> n7  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n8 -> n6  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_1 -> m1_4  [key=2, style=dotted];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m1_11 -> m1_12  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_3  [key=2, style=dotted];
m1_12 -> m1_4  [key=2, style=dotted];
m1_13 -> m1_11  [color=blue, key=0, style=bold];
m1_5 -> m1_6  [key=0, style=solid];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_3  [key=2, style=dotted];
m1_6 -> m1_4  [key=2, style=dotted];
m1_7 -> m1_5  [color=blue, key=0, style=bold];
m1_8 -> m1_9  [key=0, style=solid];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_3  [key=2, style=dotted];
m1_9 -> m1_4  [key=2, style=dotted];
m1_10 -> m1_8  [color=blue, key=0, style=bold];
m2_15 -> m2_16  [key=0, style=solid];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_5  [key=2, style=dotted];
m2_17 -> m2_15  [color=blue, key=0, style=bold];
m2_6 -> m2_7  [key=0, style=solid];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_5  [key=2, style=dotted];
m2_8 -> m2_6  [color=blue, key=0, style=bold];
m2_12 -> m2_13  [key=0, style=solid];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_5  [key=2, style=dotted];
m2_14 -> m2_12  [color=blue, key=0, style=bold];
m2_2 -> m2_3  [key=0, style=solid];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_5  [key=2, style=dotted];
m2_4 -> m2_2  [color=blue, key=0, style=bold];
m2_18 -> m2_19  [key=0, style=solid];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_5  [key=2, style=dotted];
m2_20 -> m2_18  [color=blue, key=0, style=bold];
m2_9 -> m2_10  [key=0, style=solid];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_5  [key=2, style=dotted];
m2_11 -> m2_9  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_0  [color=blue, key=0, style=bold];
m4_34 -> m4_35  [key=0, style=solid];
m4_35 -> m4_36  [key=0, style=solid];
m4_35 -> m4_23  [key=2, style=dotted];
m4_35 -> m4_7  [key=2, style=dotted];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_8  [key=2, style=dotted];
m4_37 -> m4_34  [color=blue, key=0, style=bold];
m4_29 -> m4_30  [key=0, style=solid];
m4_29 -> m4_31  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_33  [key=2, style=dotted];
m4_30 -> m4_7  [key=2, style=dotted];
m4_31 -> m4_32  [key=0, style=solid];
m4_31 -> m4_8  [key=2, style=dotted];
m4_32 -> m4_29  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_0  [color=blue, key=0, style=bold];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_21  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_23  [key=2, style=dotted];
m4_20 -> m4_7  [key=2, style=dotted];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_8  [key=2, style=dotted];
m4_22 -> m4_19  [color=blue, key=0, style=bold];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_28  [key=2, style=dotted];
m4_25 -> m4_7  [key=2, style=dotted];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_8  [key=2, style=dotted];
m4_27 -> m4_24  [color=blue, key=0, style=bold];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_13  [key=2, style=dotted];
m4_10 -> m4_7  [key=2, style=dotted];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_8  [key=2, style=dotted];
m4_12 -> m4_9  [color=blue, key=0, style=bold];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_6  [key=2, style=dotted];
m4_3 -> m4_7  [key=2, style=dotted];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_8  [key=2, style=dotted];
m4_5 -> m4_2  [color=blue, key=0, style=bold];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> m4_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_18  [key=2, style=dotted];
m4_15 -> m4_7  [key=2, style=dotted];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_8  [key=2, style=dotted];
m4_17 -> m4_14  [color=blue, key=0, style=bold];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_31  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_30 -> m5_31  [key=0, style=solid];
m5_30 -> m5_33  [key=2, style=dotted];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_7  [key=2, style=dotted];
m5_31 -> m5_8  [key=2, style=dotted];
m5_32 -> m5_29  [color=blue, key=0, style=bold];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_18  [key=2, style=dotted];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_7  [key=2, style=dotted];
m5_16 -> m5_8  [key=2, style=dotted];
m5_17 -> m5_14  [color=blue, key=0, style=bold];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_13  [key=2, style=dotted];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_7  [key=2, style=dotted];
m5_11 -> m5_8  [key=2, style=dotted];
m5_12 -> m5_9  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_0  [color=blue, key=0, style=bold];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_21  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_23  [key=2, style=dotted];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_7  [key=2, style=dotted];
m5_21 -> m5_8  [key=2, style=dotted];
m5_22 -> m5_19  [color=blue, key=0, style=bold];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_25 -> m5_26  [key=0, style=solid];
m5_25 -> m5_28  [key=2, style=dotted];
m5_26 -> m5_27  [key=0, style=solid];
m5_26 -> m5_7  [key=2, style=dotted];
m5_26 -> m5_8  [key=2, style=dotted];
m5_27 -> m5_24  [color=blue, key=0, style=bold];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_6  [key=2, style=dotted];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_7  [key=2, style=dotted];
m5_4 -> m5_8  [key=2, style=dotted];
m5_5 -> m5_2  [color=blue, key=0, style=bold];
m6_20 -> m6_21  [key=0, style=solid];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_23  [key=2, style=dotted];
m6_21 -> m6_6  [key=2, style=dotted];
m6_21 -> m6_7  [key=2, style=dotted];
m6_22 -> m6_20  [color=blue, key=0, style=bold];
m6_8 -> m6_9  [key=0, style=solid];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_11  [key=2, style=dotted];
m6_9 -> m6_6  [key=2, style=dotted];
m6_9 -> m6_7  [key=2, style=dotted];
m6_10 -> m6_8  [color=blue, key=0, style=bold];
m6_16 -> m6_17  [key=0, style=solid];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_19  [key=2, style=dotted];
m6_17 -> m6_6  [key=2, style=dotted];
m6_17 -> m6_7  [key=2, style=dotted];
m6_18 -> m6_16  [color=blue, key=0, style=bold];
m6_2 -> m6_3  [key=0, style=solid];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_5  [key=2, style=dotted];
m6_3 -> m6_6  [key=2, style=dotted];
m6_3 -> m6_7  [key=2, style=dotted];
m6_4 -> m6_2  [color=blue, key=0, style=bold];
m6_24 -> m6_25  [key=0, style=solid];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_27  [key=2, style=dotted];
m6_25 -> m6_6  [key=2, style=dotted];
m6_25 -> m6_7  [key=2, style=dotted];
m6_26 -> m6_24  [color=blue, key=0, style=bold];
m6_12 -> m6_13  [key=0, style=solid];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_15  [key=2, style=dotted];
m6_13 -> m6_6  [key=2, style=dotted];
m6_13 -> m6_7  [key=2, style=dotted];
m6_14 -> m6_12  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_0  [color=blue, key=0, style=bold];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_2  [key=0, style=solid];
m13_1 -> m13_3  [key=2, style=dotted];
m13_1 -> m13_4  [key=2, style=dotted];
m13_2 -> m13_0  [color=blue, key=0, style=bold];
m14_7 -> m14_8  [color=red, key=0, style=solid];
m14_8 -> m14_9  [color=red, key=0, style=solid];
m14_8 -> m14_3  [color=red, key=2, style=dotted];
m14_9 -> m14_7  [color=blue, key=0, style=bold];
m14_13 -> m14_14  [color=red, key=0, style=solid];
m14_14 -> m14_15  [color=red, key=0, style=solid];
m14_14 -> m14_3  [color=red, key=2, style=dotted];
m14_15 -> m14_13  [color=blue, key=0, style=bold];
m14_4 -> m14_5  [color=red, key=0, style=solid];
m14_5 -> m14_6  [color=red, key=0, style=solid];
m14_5 -> m14_3  [color=red, key=2, style=dotted];
m14_6 -> m14_4  [color=blue, key=0, style=bold];
m14_10 -> m14_11  [color=red, key=0, style=solid];
m14_11 -> m14_12  [color=red, key=0, style=solid];
m14_11 -> m14_3  [color=red, key=2, style=dotted];
m14_12 -> m14_10  [color=blue, key=0, style=bold];
m14_16 -> m14_17  [color=red, key=0, style=solid];
m14_17 -> m14_18  [color=red, key=0, style=solid];
m14_17 -> m14_19  [color=red, key=2, style=dotted];
m14_18 -> m14_16  [color=blue, key=0, style=bold];
m14_0 -> m14_1  [color=red, key=0, style=solid];
m14_1 -> m14_2  [color=red, key=0, style=solid];
m14_1 -> m14_3  [color=red, key=2, style=dotted];
m14_2 -> m14_0  [color=blue, key=0, style=bold];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_2  [key=0, style=solid];
m15_2 -> m15_3  [key=0, style=solid];
m15_2 -> m15_4  [key=2, style=dotted];
m15_2 -> m15_5  [key=2, style=dotted];
m15_2 -> m15_6  [key=2, style=dotted];
m15_2 -> m15_7  [key=2, style=dotted];
m15_3 -> m15_0  [color=blue, key=0, style=bold];
m15_13 -> m15_14  [key=0, style=solid];
m15_14 -> m15_15  [key=0, style=solid];
m15_14 -> m15_11  [key=2, style=dotted];
m15_14 -> m15_16  [key=2, style=dotted];
m15_14 -> m15_7  [key=2, style=dotted];
m15_15 -> m15_13  [color=blue, key=0, style=bold];
m15_25 -> m15_26  [key=0, style=solid];
m15_26 -> m15_27  [key=0, style=solid];
m15_26 -> m15_28  [key=2, style=dotted];
m15_26 -> m15_29  [key=2, style=dotted];
m15_26 -> m15_7  [key=2, style=dotted];
m15_27 -> m15_25  [color=blue, key=0, style=bold];
m15_8 -> m15_9  [key=0, style=solid];
m15_9 -> m15_10  [key=0, style=solid];
m15_9 -> m15_11  [key=2, style=dotted];
m15_9 -> m15_12  [key=2, style=dotted];
m15_9 -> m15_7  [key=2, style=dotted];
m15_10 -> m15_8  [color=blue, key=0, style=bold];
m15_21 -> m15_22  [key=0, style=solid];
m15_22 -> m15_23  [key=0, style=solid];
m15_22 -> m15_11  [key=2, style=dotted];
m15_22 -> m15_24  [key=2, style=dotted];
m15_22 -> m15_7  [key=2, style=dotted];
m15_23 -> m15_21  [color=blue, key=0, style=bold];
m15_17 -> m15_18  [key=0, style=solid];
m15_18 -> m15_19  [key=0, style=solid];
m15_18 -> m15_11  [key=2, style=dotted];
m15_18 -> m15_20  [key=2, style=dotted];
m15_18 -> m15_7  [key=2, style=dotted];
m15_19 -> m15_17  [color=blue, key=0, style=bold];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_2  [key=0, style=solid];
m16_1 -> m16_7  [key=2, style=dotted];
m16_1 -> m16_8  [key=2, style=dotted];
m16_2 -> m16_3  [key=0, style=solid];
m16_2 -> m16_7  [key=2, style=dotted];
m16_2 -> m16_8  [key=2, style=dotted];
m16_3 -> m16_4  [key=0, style=solid];
m16_3 -> m16_7  [key=2, style=dotted];
m16_3 -> m16_8  [key=2, style=dotted];
m16_4 -> m16_5  [key=0, style=solid];
m16_4 -> m16_7  [key=2, style=dotted];
m16_4 -> m16_8  [key=2, style=dotted];
m16_5 -> m16_6  [key=0, style=solid];
m16_5 -> m16_7  [key=2, style=dotted];
m16_5 -> m16_8  [key=2, style=dotted];
m16_6 -> m16_0  [color=blue, key=0, style=bold];
m16_9 -> m16_10  [key=0, style=solid];
m16_10 -> m16_11  [key=0, style=solid];
m16_10 -> m16_7  [key=2, style=dotted];
m16_10 -> m16_8  [key=2, style=dotted];
m16_11 -> m16_12  [key=0, style=solid];
m16_11 -> m16_7  [key=2, style=dotted];
m16_11 -> m16_8  [key=2, style=dotted];
m16_12 -> m16_13  [key=0, style=solid];
m16_12 -> m16_7  [key=2, style=dotted];
m16_12 -> m16_8  [key=2, style=dotted];
m16_13 -> m16_14  [key=0, style=solid];
m16_13 -> m16_7  [key=2, style=dotted];
m16_13 -> m16_8  [key=2, style=dotted];
m16_14 -> m16_9  [color=blue, key=0, style=bold];
m17_11 -> m17_12  [key=0, style=solid];
m17_12 -> m17_13  [key=0, style=solid];
m17_12 -> m17_14  [color=darkseagreen4, key=1, label=dec4th, style=dashed];
m17_12 -> m17_15  [color=darkseagreen4, key=1, label=dec4th, style=dashed];
m17_12 -> m17_16  [color=darkseagreen4, key=1, label=dec4th, style=dashed];
m17_12 -> m17_17  [color=darkseagreen4, key=1, label=dec4th, style=dashed];
m17_12 -> m17_18  [color=darkseagreen4, key=1, label=dec4th, style=dashed];
m17_12 -> m17_19  [color=darkseagreen4, key=1, label=dec4th, style=dashed];
m17_13 -> m17_14  [key=0, style=solid];
m17_13 -> m17_10  [key=2, style=dotted];
m17_14 -> m17_15  [key=0, style=solid];
m17_14 -> m17_10  [key=2, style=dotted];
m17_15 -> m17_16  [key=0, style=solid];
m17_15 -> m17_10  [key=2, style=dotted];
m17_16 -> m17_17  [key=0, style=solid];
m17_16 -> m17_10  [key=2, style=dotted];
m17_17 -> m17_18  [key=0, style=solid];
m17_17 -> m17_10  [key=2, style=dotted];
m17_18 -> m17_19  [key=0, style=solid];
m17_18 -> m17_10  [key=2, style=dotted];
m17_19 -> m17_20  [key=0, style=solid];
m17_19 -> m17_10  [key=2, style=dotted];
m17_20 -> m17_11  [color=blue, key=0, style=bold];
m17_21 -> m17_22  [key=0, style=solid];
m17_22 -> m17_23  [key=0, style=solid];
m17_22 -> m17_31  [key=2, style=dotted];
m17_22 -> m17_24  [color=darkseagreen4, key=1, label=feb11th, style=dashed];
m17_22 -> m17_25  [color=darkseagreen4, key=1, label=feb11th, style=dashed];
m17_22 -> m17_26  [color=darkseagreen4, key=1, label=feb11th, style=dashed];
m17_22 -> m17_27  [color=darkseagreen4, key=1, label=feb11th, style=dashed];
m17_22 -> m17_28  [color=darkseagreen4, key=1, label=feb11th, style=dashed];
m17_22 -> m17_29  [color=darkseagreen4, key=1, label=feb11th, style=dashed];
m17_23 -> m17_24  [key=0, style=solid];
m17_23 -> m17_10  [key=2, style=dotted];
m17_24 -> m17_25  [key=0, style=solid];
m17_24 -> m17_10  [key=2, style=dotted];
m17_25 -> m17_26  [key=0, style=solid];
m17_25 -> m17_10  [key=2, style=dotted];
m17_26 -> m17_27  [key=0, style=solid];
m17_26 -> m17_10  [key=2, style=dotted];
m17_27 -> m17_28  [key=0, style=solid];
m17_27 -> m17_10  [key=2, style=dotted];
m17_28 -> m17_29  [key=0, style=solid];
m17_28 -> m17_10  [key=2, style=dotted];
m17_29 -> m17_30  [key=0, style=solid];
m17_29 -> m17_10  [key=2, style=dotted];
m17_30 -> m17_21  [color=blue, key=0, style=bold];
m17_0 -> m17_1  [key=0, style=solid];
m17_1 -> m17_2  [key=0, style=solid];
m17_1 -> m17_3  [color=darkseagreen4, key=1, label=jan23rd, style=dashed];
m17_1 -> m17_4  [color=darkseagreen4, key=1, label=jan23rd, style=dashed];
m17_1 -> m17_5  [color=darkseagreen4, key=1, label=jan23rd, style=dashed];
m17_1 -> m17_6  [color=darkseagreen4, key=1, label=jan23rd, style=dashed];
m17_1 -> m17_7  [color=darkseagreen4, key=1, label=jan23rd, style=dashed];
m17_1 -> m17_8  [color=darkseagreen4, key=1, label=jan23rd, style=dashed];
m17_2 -> m17_3  [key=0, style=solid];
m17_2 -> m17_10  [key=2, style=dotted];
m17_3 -> m17_4  [key=0, style=solid];
m17_3 -> m17_10  [key=2, style=dotted];
m17_4 -> m17_5  [key=0, style=solid];
m17_4 -> m17_10  [key=2, style=dotted];
m17_5 -> m17_6  [key=0, style=solid];
m17_5 -> m17_10  [key=2, style=dotted];
m17_6 -> m17_7  [key=0, style=solid];
m17_6 -> m17_10  [key=2, style=dotted];
m17_7 -> m17_8  [key=0, style=solid];
m17_7 -> m17_10  [key=2, style=dotted];
m17_8 -> m17_9  [key=0, style=solid];
m17_8 -> m17_10  [key=2, style=dotted];
m17_9 -> m17_0  [color=blue, key=0, style=bold];
m18_19 -> m18_20  [color=green, key=0, style=solid];
m18_20 -> m18_21  [color=green, key=0, style=solid];
m18_20 -> m18_22  [color=green, key=2, style=dotted];
m18_20 -> m18_6  [color=green, key=2, style=dotted];
m18_20 -> m18_7  [color=green, key=2, style=dotted];
m18_21 -> m18_19  [color=blue, key=0, style=bold];
m18_23 -> m18_24  [key=0, style=solid];
m18_24 -> m18_6  [key=2, style=dotted];
m18_24 -> m18_7  [key=2, style=dotted];
m18_24 -> m18_25  [key=0, style=solid];
m18_24 -> m18_26  [key=2, style=dotted];
m18_25 -> m18_23  [color=blue, key=0, style=bold];
m18_27 -> m18_28  [key=0, style=solid];
m18_28 -> m18_6  [key=2, style=dotted];
m18_28 -> m18_7  [key=2, style=dotted];
m18_28 -> m18_29  [key=0, style=solid];
m18_29 -> m18_27  [color=blue, key=0, style=bold];
m18_8 -> m18_9  [color=green, key=0, style=solid];
m18_9 -> m18_10  [color=green, key=0, style=solid];
m18_9 -> m18_5  [color=green, key=2, style=dotted];
m18_9 -> m18_6  [color=green, key=2, style=dotted];
m18_9 -> m18_7  [color=green, key=2, style=dotted];
m18_10 -> m18_8  [color=blue, key=0, style=bold];
m18_11 -> m18_12  [color=green, key=0, style=solid];
m18_12 -> m18_13  [color=green, key=0, style=solid];
m18_12 -> m18_14  [color=green, key=2, style=dotted];
m18_12 -> m18_6  [color=green, key=2, style=dotted];
m18_12 -> m18_7  [color=green, key=2, style=dotted];
m18_13 -> m18_11  [color=blue, key=0, style=bold];
m18_15 -> m18_16  [color=green, key=0, style=solid];
m18_16 -> m18_17  [color=green, key=0, style=solid];
m18_16 -> m18_18  [color=green, key=2, style=dotted];
m18_16 -> m18_6  [color=green, key=2, style=dotted];
m18_16 -> m18_7  [color=green, key=2, style=dotted];
m18_17 -> m18_15  [color=blue, key=0, style=bold];
m18_2 -> m18_3  [color=green, key=0, style=solid];
m18_3 -> m18_4  [color=green, key=0, style=solid];
m18_3 -> m18_5  [color=green, key=2, style=dotted];
m18_3 -> m18_6  [color=green, key=2, style=dotted];
m18_3 -> m18_7  [color=green, key=2, style=dotted];
m18_4 -> m18_2  [color=blue, key=0, style=bold];
m19_0 -> m19_1  [color=green, key=0, style=solid];
m19_1 -> m19_2  [color=green, key=0, style=solid];
m19_1 -> m19_3  [color=green, key=2, style=dotted];
m19_1 -> m19_4  [color=green, key=2, style=dotted];
m19_2 -> m19_0  [color=blue, key=0, style=bold];
m19_5 -> m19_6  [color=green, key=0, style=solid];
m19_6 -> m19_7  [color=green, key=0, style=solid];
m19_6 -> m19_8  [color=green, key=2, style=dotted];
m19_6 -> m19_4  [color=green, key=2, style=dotted];
m19_7 -> m19_5  [color=blue, key=0, style=bold];
m23_0 -> m23_1  [key=0, style=solid];
m23_1 -> m23_2  [key=0, style=solid];
m23_1 -> n4  [key=2, style=dotted];
m23_2 -> m23_3  [key=0, style=solid];
m23_2 -> m23_6  [key=2, style=dotted];
m23_3 -> m23_4  [key=0, style=solid];
m23_3 -> m23_7  [key=2, style=dotted];
m23_4 -> m23_0  [color=blue, key=0, style=bold];
m24_0 -> m24_1  [key=0, style=solid];
m24_1 -> m24_2  [key=0, style=solid];
m24_1 -> m24_3  [key=2, style=dotted];
m24_1 -> m24_4  [key=2, style=dotted];
m24_2 -> m24_0  [color=blue, key=0, style=bold];
m24_8 -> m24_9  [key=0, style=solid];
m24_9 -> m24_10  [key=0, style=solid];
m24_9 -> m24_3  [key=2, style=dotted];
m24_9 -> m24_4  [key=2, style=dotted];
m24_10 -> m24_8  [color=blue, key=0, style=bold];
m24_14 -> m24_15  [key=0, style=solid];
m24_15 -> m24_16  [key=0, style=solid];
m24_15 -> m24_3  [key=2, style=dotted];
m24_15 -> m24_4  [key=2, style=dotted];
m24_16 -> m24_14  [color=blue, key=0, style=bold];
m24_5 -> m24_6  [key=0, style=solid];
m24_6 -> m24_7  [key=0, style=solid];
m24_6 -> m24_3  [key=2, style=dotted];
m24_6 -> m24_4  [key=2, style=dotted];
m24_7 -> m24_5  [color=blue, key=0, style=bold];
m24_11 -> m24_12  [key=0, style=solid];
m24_12 -> m24_13  [key=0, style=solid];
m24_12 -> m24_3  [key=2, style=dotted];
m24_12 -> m24_4  [key=2, style=dotted];
m24_13 -> m24_11  [color=blue, key=0, style=bold];
m26_23 -> m26_24  [key=0, style=solid];
m26_24 -> m26_25  [key=0, style=solid];
m26_24 -> m26_3  [key=2, style=dotted];
m26_24 -> m26_4  [key=2, style=dotted];
m26_25 -> m26_23  [color=blue, key=0, style=bold];
m26_0 -> m26_1  [key=0, style=solid];
m26_1 -> m26_2  [key=0, style=solid];
m26_1 -> m26_3  [key=2, style=dotted];
m26_1 -> m26_4  [key=2, style=dotted];
m26_2 -> m26_0  [color=blue, key=0, style=bold];
m26_29 -> m26_30  [key=0, style=solid];
m26_30 -> m26_31  [key=0, style=solid];
m26_30 -> m26_3  [key=2, style=dotted];
m26_30 -> m26_4  [key=2, style=dotted];
m26_31 -> m26_29  [color=blue, key=0, style=bold];
m26_35 -> m26_36  [key=0, style=solid];
m26_36 -> m26_37  [key=0, style=solid];
m26_36 -> m26_3  [key=2, style=dotted];
m26_36 -> m26_4  [key=2, style=dotted];
m26_37 -> m26_35  [color=blue, key=0, style=bold];
m26_8 -> m26_9  [key=0, style=solid];
m26_9 -> m26_10  [key=0, style=solid];
m26_9 -> m26_3  [key=2, style=dotted];
m26_9 -> m26_4  [key=2, style=dotted];
m26_10 -> m26_8  [color=blue, key=0, style=bold];
m26_45 -> m26_46  [key=0, style=solid];
m26_46 -> m26_47  [key=0, style=solid];
m26_46 -> m26_44  [key=2, style=dotted];
m26_46 -> m26_4  [key=2, style=dotted];
m26_47 -> m26_45  [color=blue, key=0, style=bold];
m26_51 -> m26_52  [key=0, style=solid];
m26_52 -> m26_53  [key=0, style=solid];
m26_52 -> m26_44  [key=2, style=dotted];
m26_52 -> m26_4  [key=2, style=dotted];
m26_53 -> m26_51  [color=blue, key=0, style=bold];
m26_60 -> m26_61  [key=0, style=solid];
m26_61 -> m26_62  [key=0, style=solid];
m26_61 -> m26_44  [key=2, style=dotted];
m26_61 -> m26_4  [key=2, style=dotted];
m26_62 -> m26_60  [color=blue, key=0, style=bold];
m26_41 -> m26_42  [key=0, style=solid];
m26_42 -> m26_43  [key=0, style=solid];
m26_42 -> m26_44  [key=2, style=dotted];
m26_42 -> m26_4  [key=2, style=dotted];
m26_43 -> m26_41  [color=blue, key=0, style=bold];
m26_54 -> m26_55  [key=0, style=solid];
m26_55 -> m26_56  [key=0, style=solid];
m26_55 -> m26_44  [key=2, style=dotted];
m26_55 -> m26_4  [key=2, style=dotted];
m26_56 -> m26_54  [color=blue, key=0, style=bold];
m26_14 -> m26_15  [key=0, style=solid];
m26_15 -> m26_16  [key=0, style=solid];
m26_15 -> m26_3  [key=2, style=dotted];
m26_15 -> m26_4  [key=2, style=dotted];
m26_16 -> m26_14  [color=blue, key=0, style=bold];
m26_38 -> m26_39  [key=0, style=solid];
m26_39 -> m26_40  [key=0, style=solid];
m26_39 -> m26_3  [key=2, style=dotted];
m26_39 -> m26_4  [key=2, style=dotted];
m26_40 -> m26_38  [color=blue, key=0, style=bold];
m26_63 -> m26_64  [key=0, style=solid];
m26_64 -> m26_65  [key=0, style=solid];
m26_64 -> m26_44  [key=2, style=dotted];
m26_64 -> m26_4  [key=2, style=dotted];
m26_65 -> m26_63  [color=blue, key=0, style=bold];
m26_48 -> m26_49  [key=0, style=solid];
m26_49 -> m26_50  [key=0, style=solid];
m26_49 -> m26_44  [key=2, style=dotted];
m26_49 -> m26_4  [key=2, style=dotted];
m26_50 -> m26_48  [color=blue, key=0, style=bold];
m26_5 -> m26_6  [key=0, style=solid];
m26_6 -> m26_7  [key=0, style=solid];
m26_6 -> m26_3  [key=2, style=dotted];
m26_6 -> m26_4  [key=2, style=dotted];
m26_7 -> m26_5  [color=blue, key=0, style=bold];
m26_57 -> m26_58  [key=0, style=solid];
m26_58 -> m26_59  [key=0, style=solid];
m26_58 -> m26_44  [key=2, style=dotted];
m26_58 -> m26_4  [key=2, style=dotted];
m26_59 -> m26_57  [color=blue, key=0, style=bold];
m26_20 -> m26_21  [key=0, style=solid];
m26_21 -> m26_22  [key=0, style=solid];
m26_21 -> m26_3  [key=2, style=dotted];
m26_21 -> m26_4  [key=2, style=dotted];
m26_22 -> m26_20  [color=blue, key=0, style=bold];
m26_11 -> m26_12  [key=0, style=solid];
m26_12 -> m26_13  [key=0, style=solid];
m26_12 -> m26_3  [key=2, style=dotted];
m26_12 -> m26_4  [key=2, style=dotted];
m26_13 -> m26_11  [color=blue, key=0, style=bold];
m26_17 -> m26_18  [key=0, style=solid];
m26_18 -> m26_19  [key=0, style=solid];
m26_18 -> m26_3  [key=2, style=dotted];
m26_18 -> m26_4  [key=2, style=dotted];
m26_19 -> m26_17  [color=blue, key=0, style=bold];
m26_32 -> m26_33  [key=0, style=solid];
m26_33 -> m26_34  [key=0, style=solid];
m26_33 -> m26_3  [key=2, style=dotted];
m26_33 -> m26_4  [key=2, style=dotted];
m26_34 -> m26_32  [color=blue, key=0, style=bold];
m26_26 -> m26_27  [key=0, style=solid];
m26_27 -> m26_28  [key=0, style=solid];
m26_27 -> m26_3  [key=2, style=dotted];
m26_27 -> m26_4  [key=2, style=dotted];
m26_28 -> m26_26  [color=blue, key=0, style=bold];
m26_66 -> m26_67  [key=0, style=solid];
m26_67 -> m26_68  [key=0, style=solid];
m26_67 -> m26_44  [key=2, style=dotted];
m26_67 -> m26_4  [key=2, style=dotted];
m26_68 -> m26_66  [color=blue, key=0, style=bold];
}
