digraph  {
m1_3 [label="Entry double.ToHeading(bool, System.Globalization.CultureInfo)", span="24-24", cluster="double.ToHeading(bool, System.Globalization.CultureInfo)", file="DateHumanizeExtensions.cs"];
m1_11 [label="Entry string.FromShortHeading()", span="51-51", cluster="string.FromShortHeading()", file="DateHumanizeExtensions.cs"];
m1_0 [label="Entry Humanizer.Tests.HeadingTests.ToHeadingShort(double, string)", span="56-56", cluster="Humanizer.Tests.HeadingTests.ToHeadingShort(double, string)", file="DateHumanizeExtensions.cs"];
m1_1 [label="Assert.Equal(heading.ToHeading(true), expected)", span="57-57", cluster="Humanizer.Tests.HeadingTests.ToHeadingShort(double, string)", color=red, community=0, file="DateHumanizeExtensions.cs"];
m1_2 [label="Exit Humanizer.Tests.HeadingTests.ToHeadingShort(double, string)", span="56-56", cluster="Humanizer.Tests.HeadingTests.ToHeadingShort(double, string)", file="DateHumanizeExtensions.cs"];
m1_4 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="DateHumanizeExtensions.cs"];
m1_8 [label="Entry Humanizer.Tests.HeadingTests.FromShortHeading(string, double)", span="97-97", cluster="Humanizer.Tests.HeadingTests.FromShortHeading(string, double)", file="DateHumanizeExtensions.cs"];
m1_9 [label="Assert.Equal(heading.FromShortHeading(), expected)", span="98-98", cluster="Humanizer.Tests.HeadingTests.FromShortHeading(string, double)", file="DateHumanizeExtensions.cs"];
m1_10 [label="Exit Humanizer.Tests.HeadingTests.FromShortHeading(string, double)", span="97-97", cluster="Humanizer.Tests.HeadingTests.FromShortHeading(string, double)", file="DateHumanizeExtensions.cs"];
m1_12 [label="Entry Humanizer.Tests.HeadingTests.ToHeadignArrow(double, char)", span="149-149", cluster="Humanizer.Tests.HeadingTests.ToHeadignArrow(double, char)", file="DateHumanizeExtensions.cs"];
m1_13 [label="Assert.Equal(heading.ToHeadingArrow(), expected)", span="150-150", cluster="Humanizer.Tests.HeadingTests.ToHeadignArrow(double, char)", file="DateHumanizeExtensions.cs"];
m1_14 [label="Exit Humanizer.Tests.HeadingTests.ToHeadignArrow(double, char)", span="149-149", cluster="Humanizer.Tests.HeadingTests.ToHeadignArrow(double, char)", file="DateHumanizeExtensions.cs"];
m1_5 [label="Entry Humanizer.Tests.HeadingTests.ToHeading(double, string)", span="77-77", cluster="Humanizer.Tests.HeadingTests.ToHeading(double, string)", file="DateHumanizeExtensions.cs"];
m1_6 [label="Assert.Equal(heading.ToHeading(), expected)", span="78-78", cluster="Humanizer.Tests.HeadingTests.ToHeading(double, string)", file="DateHumanizeExtensions.cs"];
m1_7 [label="Exit Humanizer.Tests.HeadingTests.ToHeading(double, string)", span="77-77", cluster="Humanizer.Tests.HeadingTests.ToHeading(double, string)", file="DateHumanizeExtensions.cs"];
m1_15 [label="Entry double.ToHeadingArrow()", span="41-41", cluster="double.ToHeadingArrow()", file="DateHumanizeExtensions.cs"];
m6_32 [label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0", cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="NumberToWordsExtension.cs"];
m6_28 [label="Entry System.Math.Abs(int)", span="0-0", cluster="System.Math.Abs(int)", file="NumberToWordsExtension.cs"];
m6_30 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="NumberToWordsExtension.cs"];
m6_31 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="NumberToWordsExtension.cs"];
m6_0 [label="Entry Humanizer.NumberToWordsExtension.ToWords(int)", span="13-13", cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs"];
m6_26 [label="return string.Join('' '', parts);", span="60-60", cluster="Humanizer.NumberToWordsExtension.ToWords(int)", color=green, community=0, file="NumberToWordsExtension.cs"];
m6_15 [label="number > 0", span="41-41", cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs"];
m6_21 [label="parts.Add(unitsMap[number])", span="50-50", cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs"];
m6_5 [label="var parts = new List<string>()", span="21-21", cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs"];
m6_25 [label="parts.Add(lastPart)", span="56-56", cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs"];
m6_8 [label="number %= 1000000", span="26-26", cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs"];
m6_11 [label="number %= 1000", span="32-32", cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs"];
m6_12 [label="(number / 100) > 0", span="35-35", cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs"];
m6_14 [label="number %= 100", span="38-38", cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs"];
m6_16 [label="parts.Count != 0", span="43-43", cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs"];
m6_20 [label="number < 20", span="49-49", cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs"];
m6_18 [label="var unitsMap = new[] { ''zero'', ''one'', ''two'', ''three'', ''four'', ''five'', ''six'', ''seven'', ''eight'', ''nine'', ''ten'', ''eleven'', ''twelve'', ''thirteen'', ''fourteen'', ''fifteen'', ''sixteen'', ''seventeen'', ''eighteen'', ''nineteen'' }", span="46-46", cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs"];
m6_3 [label="number < 0", span="18-18", cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs"];
m6_6 [label="(number / 1000000) > 0", span="23-23", cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs"];
m6_7 [label="parts.Add(string.Format(''{0} million'', ToWords(number / 1000000)))", span="25-25", cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs"];
m6_10 [label="parts.Add(string.Format(''{0} thousand'', ToWords(number / 1000)))", span="31-31", cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs"];
m6_13 [label="parts.Add(string.Format(''{0} hundred'', ToWords(number / 100)))", span="37-37", cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs"];
m6_17 [label="parts.Add(''and'')", span="44-44", cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs"];
m6_22 [label="var lastPart = tensMap[number / 10]", span="53-53", cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs"];
m6_23 [label="(number % 10) > 0", span="54-54", cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs"];
m6_24 [label="lastPart += string.Format(''-{0}'', unitsMap[number % 10])", span="55-55", cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs"];
m6_4 [label="return string.Format(''minus {0}'', ToWords(Math.Abs(number)));", span="19-19", cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs"];
m6_2 [label="return ''zero'';", span="16-16", cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs"];
m6_1 [label="number == 0", span="15-15", cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs"];
m6_9 [label="(number / 1000) > 0", span="29-29", cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs"];
m6_19 [label="var tensMap = new[] { ''zero'', ''ten'', ''twenty'', ''thirty'', ''forty'', ''fifty'', ''sixty'', ''seventy'', ''eighty'', ''ninety'' }", span="47-47", cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs"];
m6_27 [label="Exit Humanizer.NumberToWordsExtension.ToWords(int)", span="13-13", cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs"];
m6_29 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="NumberToWordsExtension.cs"];
m7_8 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="NumberToWordsTests.cs"];
m7_7 [label="Entry int.ToWords()", span="14-14", cluster="int.ToWords()", file="NumberToWordsTests.cs"];
m7_0 [label="Entry Humanizer.Tests.Extensions.NumberToWordsTests.ToWords()", span="6-6", cluster="Humanizer.Tests.Extensions.NumberToWordsTests.ToWords()", file="NumberToWordsTests.cs"];
m7_1 [label="Assert.Equal(''one'', 1.ToWords())", span="8-8", cluster="Humanizer.Tests.Extensions.NumberToWordsTests.ToWords()", file="NumberToWordsTests.cs"];
m7_2 [label="Assert.Equal(''ten'', 10.ToWords())", span="9-9", cluster="Humanizer.Tests.Extensions.NumberToWordsTests.ToWords()", file="NumberToWordsTests.cs"];
m7_3 [label="Assert.Equal(''eleven'', 11.ToWords())", span="10-10", cluster="Humanizer.Tests.Extensions.NumberToWordsTests.ToWords()", file="NumberToWordsTests.cs"];
m7_4 [label="Assert.Equal(''one hundred and twenty-two'', 122.ToWords())", span="11-11", cluster="Humanizer.Tests.Extensions.NumberToWordsTests.ToWords()", file="NumberToWordsTests.cs"];
m7_5 [label="Assert.Equal(''three thousand five hundred and one'', 3501.ToWords())", span="12-12", cluster="Humanizer.Tests.Extensions.NumberToWordsTests.ToWords()", file="NumberToWordsTests.cs"];
m7_6 [label="Exit Humanizer.Tests.Extensions.NumberToWordsTests.ToWords()", span="6-6", cluster="Humanizer.Tests.Extensions.NumberToWordsTests.ToWords()", file="NumberToWordsTests.cs"];
m7_9 [label="Entry Humanizer.Tests.Extensions.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", span="16-16", cluster="Humanizer.Tests.Extensions.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", file="NumberToWordsTests.cs"];
m7_10 [label="Assert.Equal(''one hundred'', 100.ToWords())", span="18-18", cluster="Humanizer.Tests.Extensions.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", color=red, community=0, file="NumberToWordsTests.cs"];
m7_11 [label="Assert.Equal(''one thousand'', 1000.ToWords())", span="19-19", cluster="Humanizer.Tests.Extensions.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", color=red, community=0, file="NumberToWordsTests.cs"];
m7_12 [label="Assert.Equal(''one million'', 1000000.ToWords())", span="20-20", cluster="Humanizer.Tests.Extensions.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", color=red, community=0, file="NumberToWordsTests.cs"];
m7_13 [label="Exit Humanizer.Tests.Extensions.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", span="16-16", cluster="Humanizer.Tests.Extensions.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", file="NumberToWordsTests.cs"];
m10_0 [label="Entry Humanizer.Properties.Resources.Resources()", span="31-31", cluster="Humanizer.Properties.Resources.Resources()", file="Resources.Designer.cs"];
m10_1 [label="Exit Humanizer.Properties.Resources.Resources()", span="31-31", cluster="Humanizer.Properties.Resources.Resources()", file="Resources.Designer.cs"];
m1_0 -> m1_1  [key=0, style=solid, color=red];
m1_1 -> m1_2  [key=0, style=solid, color=red];
m1_1 -> m1_3  [key=2, style=dotted, color=red];
m1_1 -> m1_4  [key=2, style=dotted, color=red];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m1_8 -> m1_9  [key=0, style=solid];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_11  [key=2, style=dotted];
m1_9 -> m1_4  [key=2, style=dotted];
m1_10 -> m1_8  [key=0, style=bold, color=blue];
m1_12 -> m1_13  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_15  [key=2, style=dotted];
m1_13 -> m1_4  [key=2, style=dotted];
m1_14 -> m1_12  [key=0, style=bold, color=blue];
m1_5 -> m1_6  [key=0, style=solid];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_3  [key=2, style=dotted];
m1_6 -> m1_4  [key=2, style=dotted];
m1_7 -> m1_5  [key=0, style=bold, color=blue];
m6_0 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_0 -> m6_21  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_0 -> m6_4  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_0 -> m6_6  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_0 -> m6_7  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_0 -> m6_8  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_0 -> m6_9  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_0 -> m6_10  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_0 -> m6_11  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_0 -> m6_12  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_0 -> m6_13  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_0 -> m6_14  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_0 -> m6_20  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_0 -> m6_22  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_0 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_0 -> m6_24  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_0 -> m6_2  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToWords"];
m6_26 -> m6_27  [key=0, style=solid, color=green];
m6_26 -> m6_32  [key=2, style=dotted, color=green];
m6_15 -> m6_26  [key=0, style=solid, color=green];
m6_15 -> m6_16  [key=0, style=solid];
m6_21 -> m6_26  [key=0, style=solid, color=green];
m6_21 -> m6_31  [key=2, style=dotted];
m6_5 -> m6_26  [key=1, style=dashed, color=green, label=parts];
m6_5 -> m6_21  [key=1, style=dashed, color=darkseagreen4, label=parts];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_30  [key=2, style=dotted];
m6_5 -> m6_7  [key=1, style=dashed, color=darkseagreen4, label=parts];
m6_5 -> m6_10  [key=1, style=dashed, color=darkseagreen4, label=parts];
m6_5 -> m6_13  [key=1, style=dashed, color=darkseagreen4, label=parts];
m6_5 -> m6_16  [key=1, style=dashed, color=darkseagreen4, label=parts];
m6_5 -> m6_17  [key=1, style=dashed, color=darkseagreen4, label=parts];
m6_5 -> m6_25  [key=1, style=dashed, color=darkseagreen4, label=parts];
m6_25 -> m6_26  [key=0, style=solid, color=green];
m6_25 -> m6_31  [key=2, style=dotted];
m6_8 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_8 -> m6_21  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_8 -> m6_8  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_10  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_8 -> m6_11  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_8 -> m6_12  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_8 -> m6_13  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_8 -> m6_14  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_8 -> m6_20  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_8 -> m6_22  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_8 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_8 -> m6_24  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_11 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_11 -> m6_21  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_11 -> m6_11  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_13  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_11 -> m6_14  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_11 -> m6_20  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_11 -> m6_22  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_11 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_11 -> m6_24  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_12 -> m6_15  [key=0, style=solid];
m6_12 -> m6_13  [key=0, style=solid];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_21  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_14 -> m6_14  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_14 -> m6_20  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_14 -> m6_22  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_14 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_14 -> m6_24  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_18  [key=0, style=solid];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_22  [key=0, style=solid];
m6_18 -> m6_21  [key=1, style=dashed, color=darkseagreen4, label=unitsMap];
m6_18 -> m6_19  [key=0, style=solid];
m6_18 -> m6_24  [key=1, style=dashed, color=darkseagreen4, label=unitsMap];
m6_3 -> m6_5  [key=0, style=solid];
m6_3 -> m6_4  [key=0, style=solid];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_9  [key=0, style=solid];
m6_7 -> m6_0  [key=2, style=dotted];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_31  [key=2, style=dotted];
m6_7 -> m6_29  [key=2, style=dotted];
m6_10 -> m6_0  [key=2, style=dotted];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_31  [key=2, style=dotted];
m6_10 -> m6_29  [key=2, style=dotted];
m6_13 -> m6_0  [key=2, style=dotted];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_31  [key=2, style=dotted];
m6_13 -> m6_29  [key=2, style=dotted];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_31  [key=2, style=dotted];
m6_22 -> m6_25  [key=1, style=dashed, color=darkseagreen4, label=lastPart];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_24  [key=1, style=dashed, color=darkseagreen4, label=lastPart];
m6_23 -> m6_25  [key=0, style=solid];
m6_23 -> m6_24  [key=0, style=solid];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_24  [key=1, style=dashed, color=darkseagreen4, label=lastPart];
m6_24 -> m6_29  [key=2, style=dotted];
m6_4 -> m6_27  [key=0, style=solid];
m6_4 -> m6_0  [key=2, style=dotted];
m6_4 -> m6_28  [key=2, style=dotted];
m6_4 -> m6_29  [key=2, style=dotted];
m6_2 -> m6_27  [key=0, style=solid];
m6_1 -> m6_3  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_9 -> m6_12  [key=0, style=solid];
m6_9 -> m6_10  [key=0, style=solid];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_22  [key=1, style=dashed, color=darkseagreen4, label=tensMap];
m6_27 -> m6_0  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_7  [key=2, style=dotted];
m7_1 -> m7_8  [key=2, style=dotted];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_7  [key=2, style=dotted];
m7_2 -> m7_8  [key=2, style=dotted];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_7  [key=2, style=dotted];
m7_3 -> m7_8  [key=2, style=dotted];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_7  [key=2, style=dotted];
m7_4 -> m7_8  [key=2, style=dotted];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_7  [key=2, style=dotted];
m7_5 -> m7_8  [key=2, style=dotted];
m7_6 -> m7_0  [key=0, style=bold, color=blue];
m7_9 -> m7_10  [key=0, style=solid, color=red];
m7_10 -> m7_11  [key=0, style=solid, color=red];
m7_10 -> m7_7  [key=2, style=dotted, color=red];
m7_10 -> m7_8  [key=2, style=dotted, color=red];
m7_11 -> m7_12  [key=0, style=solid, color=red];
m7_11 -> m7_7  [key=2, style=dotted, color=red];
m7_11 -> m7_8  [key=2, style=dotted, color=red];
m7_12 -> m7_13  [key=0, style=solid, color=red];
m7_12 -> m7_7  [key=2, style=dotted, color=red];
m7_12 -> m7_8  [key=2, style=dotted, color=red];
m7_13 -> m7_9  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_0  [key=0, style=bold, color=blue];
}
