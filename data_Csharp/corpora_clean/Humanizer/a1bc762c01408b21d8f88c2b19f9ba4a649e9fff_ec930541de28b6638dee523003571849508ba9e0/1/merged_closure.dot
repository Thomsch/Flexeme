digraph  {
m0_8 [cluster="Unk.Equal", file="NumberToWordsTests.cs", label="Entry Unk.Equal", span=""];
m0_7 [cluster="int.ToWords()", file="NumberToWordsTests.cs", label="Entry int.ToWords()", span="16-16"];
m0_9 [cluster="Humanizer.Tests.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", file="NumberToWordsTests.cs", label="Entry Humanizer.Tests.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", span="17-17"];
m0_10 [cluster="Humanizer.Tests.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", color=green, community=0, file="NumberToWordsTests.cs", label="Assert.Equal(''one hundred'', 100.ToWords())", prediction=0, span="19-19"];
m0_11 [cluster="Humanizer.Tests.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", color=green, community=0, file="NumberToWordsTests.cs", label="Assert.Equal(''one thousand'', 1000.ToWords())", prediction=1, span="20-20"];
m0_12 [cluster="Humanizer.Tests.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", color=green, community=0, file="NumberToWordsTests.cs", label="Assert.Equal(''one hundred thousand'', 100000.ToWords())", prediction=2, span="21-21"];
m0_13 [cluster="Humanizer.Tests.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", color=green, community=0, file="NumberToWordsTests.cs", label="Assert.Equal(''one million'', 1000000.ToWords())", prediction=3, span="22-22"];
m0_14 [cluster="Humanizer.Tests.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", file="NumberToWordsTests.cs", label="Exit Humanizer.Tests.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", span="17-17"];
m0_0 [cluster="Humanizer.Tests.NumberToWordsTests.ToWords()", file="NumberToWordsTests.cs", label="Entry Humanizer.Tests.NumberToWordsTests.ToWords()", span="7-7"];
m0_1 [cluster="Humanizer.Tests.NumberToWordsTests.ToWords()", color=green, community=0, file="NumberToWordsTests.cs", label="Assert.Equal(''one'', 1.ToWords())", prediction=4, span="9-9"];
m0_2 [cluster="Humanizer.Tests.NumberToWordsTests.ToWords()", color=green, community=0, file="NumberToWordsTests.cs", label="Assert.Equal(''ten'', 10.ToWords())", prediction=5, span="10-10"];
m0_3 [cluster="Humanizer.Tests.NumberToWordsTests.ToWords()", color=green, community=0, file="NumberToWordsTests.cs", label="Assert.Equal(''eleven'', 11.ToWords())", prediction=6, span="11-11"];
m0_4 [cluster="Humanizer.Tests.NumberToWordsTests.ToWords()", color=green, community=0, file="NumberToWordsTests.cs", label="Assert.Equal(''one hundred and twenty-two'', 122.ToWords())", prediction=7, span="12-12"];
m0_5 [cluster="Humanizer.Tests.NumberToWordsTests.ToWords()", color=green, community=0, file="NumberToWordsTests.cs", label="Assert.Equal(''three thousand five hundred and one'', 3501.ToWords())", prediction=8, span="13-13"];
m0_6 [cluster="Humanizer.Tests.NumberToWordsTests.ToWords()", file="NumberToWordsTests.cs", label="Exit Humanizer.Tests.NumberToWordsTests.ToWords()", span="7-7"];
m1_0 [cluster="Humanizer.Localisation.Resources.GetResource(string)", file="Resources.cs", label="Entry Humanizer.Localisation.Resources.GetResource(string)", span="27-27"];
m1_2 [cluster="Humanizer.Localisation.Resources.GetResource(string)", file="Resources.cs", label="Exit Humanizer.Localisation.Resources.GetResource(string)", span="27-27"];
m1_3 [cluster="System.Resources.ResourceManager.GetString(string, System.Globalization.CultureInfo)", file="Resources.cs", label="Entry System.Resources.ResourceManager.GetString(string, System.Globalization.CultureInfo)", span="0-0"];
m2_4 [cluster="string.Split(params char[])", file="StringDehumanizeExtensions.cs", label="Entry string.Split(params char[])", span="0-0"];
m2_5 [cluster="string.Humanize(Humanizer.LetterCasing)", file="StringDehumanizeExtensions.cs", label="Entry string.Humanize(Humanizer.LetterCasing)", span="62-62"];
m2_7 [cluster="Unk.Join", file="StringDehumanizeExtensions.cs", label="Entry Unk.Join", span=""];
m2_6 [cluster="Unk.ToArray", file="StringDehumanizeExtensions.cs", label="Entry Unk.ToArray", span=""];
m2_0 [cluster="Humanizer.StringDehumanizeExtensions.Dehumanize(string)", file="StringDehumanizeExtensions.cs", label="Entry Humanizer.StringDehumanizeExtensions.Dehumanize(string)", span="11-11"];
m2_1 [cluster="Humanizer.StringDehumanizeExtensions.Dehumanize(string)", color=green, community=0, file="StringDehumanizeExtensions.cs", label="var titlizedWords = \r\n                (from word in input.Split(' ')\r\n                select word.Humanize(LetterCasing.Title)).ToArray()", prediction=9, span="13-15"];
m2_2 [cluster="Humanizer.StringDehumanizeExtensions.Dehumanize(string)", file="StringDehumanizeExtensions.cs", label="return string.Join('''', titlizedWords);", span="17-17"];
m2_3 [cluster="Humanizer.StringDehumanizeExtensions.Dehumanize(string)", file="StringDehumanizeExtensions.cs", label="Exit Humanizer.StringDehumanizeExtensions.Dehumanize(string)", span="11-11"];
}
