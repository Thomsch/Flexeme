digraph  {
m0_8 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="NumberToWordsTests.cs"];
m0_7 [label="Entry int.ToWords()", span="16-16", cluster="int.ToWords()", file="NumberToWordsTests.cs"];
m0_9 [label="Entry Humanizer.Tests.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", span="17-17", cluster="Humanizer.Tests.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", file="NumberToWordsTests.cs"];
m0_10 [label="Assert.Equal(''one hundred'', 100.ToWords())", span="19-19", cluster="Humanizer.Tests.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", color=green, community=0, file="NumberToWordsTests.cs"];
m0_11 [label="Assert.Equal(''one thousand'', 1000.ToWords())", span="20-20", cluster="Humanizer.Tests.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", color=green, community=0, file="NumberToWordsTests.cs"];
m0_12 [label="Assert.Equal(''one hundred thousand'', 100000.ToWords())", span="21-21", cluster="Humanizer.Tests.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", color=green, community=0, file="NumberToWordsTests.cs"];
m0_13 [label="Assert.Equal(''one million'', 1000000.ToWords())", span="22-22", cluster="Humanizer.Tests.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", color=green, community=0, file="NumberToWordsTests.cs"];
m0_14 [label="Exit Humanizer.Tests.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", span="17-17", cluster="Humanizer.Tests.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", file="NumberToWordsTests.cs"];
m0_0 [label="Entry Humanizer.Tests.NumberToWordsTests.ToWords()", span="7-7", cluster="Humanizer.Tests.NumberToWordsTests.ToWords()", file="NumberToWordsTests.cs"];
m0_1 [label="Assert.Equal(''one'', 1.ToWords())", span="9-9", cluster="Humanizer.Tests.NumberToWordsTests.ToWords()", color=green, community=0, file="NumberToWordsTests.cs"];
m0_2 [label="Assert.Equal(''ten'', 10.ToWords())", span="10-10", cluster="Humanizer.Tests.NumberToWordsTests.ToWords()", color=green, community=0, file="NumberToWordsTests.cs"];
m0_3 [label="Assert.Equal(''eleven'', 11.ToWords())", span="11-11", cluster="Humanizer.Tests.NumberToWordsTests.ToWords()", color=green, community=0, file="NumberToWordsTests.cs"];
m0_4 [label="Assert.Equal(''one hundred and twenty-two'', 122.ToWords())", span="12-12", cluster="Humanizer.Tests.NumberToWordsTests.ToWords()", color=green, community=0, file="NumberToWordsTests.cs"];
m0_5 [label="Assert.Equal(''three thousand five hundred and one'', 3501.ToWords())", span="13-13", cluster="Humanizer.Tests.NumberToWordsTests.ToWords()", color=green, community=0, file="NumberToWordsTests.cs"];
m0_6 [label="Exit Humanizer.Tests.NumberToWordsTests.ToWords()", span="7-7", cluster="Humanizer.Tests.NumberToWordsTests.ToWords()", file="NumberToWordsTests.cs"];
m1_0 [label="Entry Humanizer.Localisation.Resources.GetResource(string)", span="27-27", cluster="Humanizer.Localisation.Resources.GetResource(string)", file="Resources.cs"];
m1_1 [label="return ResourceManager.GetString(resourceKey, CultureInfo.CurrentUICulture);", span="29-29", cluster="Humanizer.Localisation.Resources.GetResource(string)", color=red, community=0, file="Resources.cs"];
m1_2 [label="Exit Humanizer.Localisation.Resources.GetResource(string)", span="27-27", cluster="Humanizer.Localisation.Resources.GetResource(string)", file="Resources.cs"];
m1_3 [label="Entry System.Resources.ResourceManager.GetString(string, System.Globalization.CultureInfo)", span="0-0", cluster="System.Resources.ResourceManager.GetString(string, System.Globalization.CultureInfo)", file="Resources.cs"];
m2_4 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="StringDehumanizeExtensions.cs"];
m2_5 [label="Entry string.Humanize(Humanizer.LetterCasing)", span="62-62", cluster="string.Humanize(Humanizer.LetterCasing)", file="StringDehumanizeExtensions.cs"];
m2_7 [label="Entry Unk.Join", span="", cluster="Unk.Join", file="StringDehumanizeExtensions.cs"];
m2_6 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="StringDehumanizeExtensions.cs"];
m2_0 [label="Entry Humanizer.StringDehumanizeExtensions.Dehumanize(string)", span="11-11", cluster="Humanizer.StringDehumanizeExtensions.Dehumanize(string)", file="StringDehumanizeExtensions.cs"];
m2_1 [label="var titlizedWords = \r\n                (from word in input.Split(' ')\r\n                select word.Humanize(LetterCasing.Title)).ToArray()", span="13-15", cluster="Humanizer.StringDehumanizeExtensions.Dehumanize(string)", color=green, community=0, file="StringDehumanizeExtensions.cs"];
m2_2 [label="return string.Join('''', titlizedWords);", span="17-17", cluster="Humanizer.StringDehumanizeExtensions.Dehumanize(string)", file="StringDehumanizeExtensions.cs"];
m2_3 [label="Exit Humanizer.StringDehumanizeExtensions.Dehumanize(string)", span="11-11", cluster="Humanizer.StringDehumanizeExtensions.Dehumanize(string)", file="StringDehumanizeExtensions.cs"];
m0_9 -> m0_10  [key=0, style=solid, color=green];
m0_10 -> m0_11  [key=0, style=solid, color=green];
m0_10 -> m0_7  [key=2, style=dotted, color=green];
m0_10 -> m0_8  [key=2, style=dotted, color=green];
m0_11 -> m0_12  [key=0, style=solid, color=green];
m0_11 -> m0_7  [key=2, style=dotted, color=green];
m0_11 -> m0_8  [key=2, style=dotted, color=green];
m0_12 -> m0_13  [key=0, style=solid, color=green];
m0_12 -> m0_7  [key=2, style=dotted, color=green];
m0_12 -> m0_8  [key=2, style=dotted, color=green];
m0_13 -> m0_14  [key=0, style=solid, color=green];
m0_13 -> m0_7  [key=2, style=dotted, color=green];
m0_13 -> m0_8  [key=2, style=dotted, color=green];
m0_14 -> m0_9  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid, color=green];
m0_1 -> m0_2  [key=0, style=solid, color=green];
m0_1 -> m0_7  [key=2, style=dotted, color=green];
m0_1 -> m0_8  [key=2, style=dotted, color=green];
m0_2 -> m0_3  [key=0, style=solid, color=green];
m0_2 -> m0_7  [key=2, style=dotted, color=green];
m0_2 -> m0_8  [key=2, style=dotted, color=green];
m0_3 -> m0_4  [key=0, style=solid, color=green];
m0_3 -> m0_7  [key=2, style=dotted, color=green];
m0_3 -> m0_8  [key=2, style=dotted, color=green];
m0_4 -> m0_5  [key=0, style=solid, color=green];
m0_4 -> m0_7  [key=2, style=dotted, color=green];
m0_4 -> m0_8  [key=2, style=dotted, color=green];
m0_5 -> m0_6  [key=0, style=solid, color=green];
m0_5 -> m0_7  [key=2, style=dotted, color=green];
m0_5 -> m0_8  [key=2, style=dotted, color=green];
m0_6 -> m0_0  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid, color=red];
m1_1 -> m1_2  [key=0, style=solid, color=red];
m1_1 -> m1_3  [key=2, style=dotted, color=red];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid, color=green];
m2_1 -> m2_2  [key=0, style=solid, color=green];
m2_1 -> m2_4  [key=2, style=dotted, color=green];
m2_1 -> m2_5  [key=2, style=dotted, color=green];
m2_1 -> m2_6  [key=2, style=dotted, color=green];
m2_1 -> m2_1  [key=1, style=dashed, color=green, label=word];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_7  [key=2, style=dotted];
m2_3 -> m2_0  [key=0, style=bold, color=blue];
}
