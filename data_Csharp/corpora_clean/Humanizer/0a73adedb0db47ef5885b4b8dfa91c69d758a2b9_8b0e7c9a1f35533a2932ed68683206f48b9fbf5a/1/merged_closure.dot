digraph  {
n21 [label="Humanizer.Configuration.OrdinalizerRegistry", span=""];
n0 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", label="Entry Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", span="6-6"];
n1 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", label="Register(''de'', new GermanOrdinalizer())", span="8-8"];
n2 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", label="Register(''en'', new EnglishOrdinalizer())", span="9-9"];
n11 [cluster="Humanizer.Localisation.Ordinalizers.GermanOrdinalizer.GermanOrdinalizer()", label="Entry Humanizer.Localisation.Ordinalizers.GermanOrdinalizer.GermanOrdinalizer()", span="2-2"];
n12 [cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.Register(string, TLocaliser)", label="Entry Humanizer.Configuration.LocaliserRegistry<TLocaliser>.Register(string, TLocaliser)", span="54-54"];
n3 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", label="Register(''es'', new SpanishOrdinalizer())", span="10-10"];
n13 [cluster="Humanizer.Localisation.Ordinalizers.EnglishOrdinalizer.EnglishOrdinalizer()", label="Entry Humanizer.Localisation.Ordinalizers.EnglishOrdinalizer.EnglishOrdinalizer()", span="2-2"];
n4 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", label="Register(''it'', new ItalianOrdinalizer())", span="11-11"];
n14 [cluster="Humanizer.Localisation.Ordinalizers.SpanishOrdinalizer.SpanishOrdinalizer()", label="Entry Humanizer.Localisation.Ordinalizers.SpanishOrdinalizer.SpanishOrdinalizer()", span="2-2"];
n5 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", label="Register(''nl'', new DutchOrdinalizer())", span="12-12"];
n15 [cluster="Humanizer.Localisation.Ordinalizers.ItalianOrdinalizer.ItalianOrdinalizer()", label="Entry Humanizer.Localisation.Ordinalizers.ItalianOrdinalizer.ItalianOrdinalizer()", span="2-2"];
n6 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", label="Register(''pt'', new PortugueseOrdinalizer())", span="13-13"];
n16 [cluster="Humanizer.Localisation.Ordinalizers.DutchOrdinalizer.DutchOrdinalizer()", label="Entry Humanizer.Localisation.Ordinalizers.DutchOrdinalizer.DutchOrdinalizer()", span="2-2"];
n7 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", label="Register(''ru'', new RussianOrdinalizer())", span="14-14"];
n17 [cluster="Humanizer.Localisation.Ordinalizers.PortugueseOrdinalizer.PortugueseOrdinalizer()", label="Entry Humanizer.Localisation.Ordinalizers.PortugueseOrdinalizer.PortugueseOrdinalizer()", span="2-2"];
n8 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", label="Register(''tr'', new TurkishOrdinalizer())", span="15-15"];
n18 [cluster="Humanizer.Localisation.Ordinalizers.RussianOrdinalizer.RussianOrdinalizer()", label="Entry Humanizer.Localisation.Ordinalizers.RussianOrdinalizer.RussianOrdinalizer()", span="2-2"];
n9 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", label="Register(''uk'', new UkrainianOrdinalizer())", span="16-16"];
n19 [cluster="Humanizer.Localisation.Ordinalizers.TurkishOrdinalizer.TurkishOrdinalizer()", label="Entry Humanizer.Localisation.Ordinalizers.TurkishOrdinalizer.TurkishOrdinalizer()", span="7-7"];
n10 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", label="Exit Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", span="6-6"];
n20 [cluster="Humanizer.Localisation.Ordinalizers.UkrainianOrdinalizer.UkrainianOrdinalizer()", label="Entry Humanizer.Localisation.Ordinalizers.UkrainianOrdinalizer.UkrainianOrdinalizer()", span="2-2"];
d4 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", color=green, community=0, label="LetterCasing.LowerCase", prediction=0, span="24-24"];
d1 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", label=casing, span="19-19"];
d5 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", label="return input.ToLower();", span="25-25"];
d0 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", label="Entry Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", span="17-17"];
d2 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", label="LetterCasing.Title", span="21-21"];
d6 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", label="LetterCasing.AllCaps", span="27-27"];
d8 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", label="LetterCasing.Sentence", span="30-30"];
d12 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", label="throw new ArgumentOutOfRangeException(''casing'');", span="37-37"];
d13 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", label="Exit Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", span="17-17"];
d15 [cluster="string.ToLower()", label="Entry string.ToLower()", span="0-0"];
d3 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", label="return CultureInfo.CurrentCulture.TextInfo.ToTitleCase(input);", span="22-22"];
d7 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", label="return input.ToUpper();", span="28-28"];
d9 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", label="input.Length >= 1", span="31-31"];
d10 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", label="return String.Concat(input.Substring(0, 1).ToUpper(), input.Substring(1));", span="32-32"];
d11 [cluster="Humanizer.CasingExtensions.ApplyCase(string, Humanizer.LetterCasing)", label="return input.ToUpper();", span="34-34"];
d20 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
d14 [cluster="System.Globalization.TextInfo.ToTitleCase(string)", label="Entry System.Globalization.TextInfo.ToTitleCase(string)", span="0-0"];
d16 [cluster="string.ToUpper()", label="Entry string.ToUpper()", span="0-0"];
d17 [cluster="string.Substring(int, int)", label="Entry string.Substring(int, int)", span="0-0"];
d18 [cluster="string.Substring(int)", label="Entry string.Substring(int)", span="0-0"];
d19 [cluster="string.Concat(string, string)", label="Entry string.Concat(string, string)", span="0-0"];
m0_0 [cluster="Humanizer.Tests.CasingTests.ToTitle(string, string)", file="CasingTests.cs", label="Entry Humanizer.Tests.CasingTests.ToTitle(string, string)", span="12-12"];
m0_1 [cluster="Humanizer.Tests.CasingTests.ToTitle(string, string)", color=green, community=0, file="CasingTests.cs", label="Assert.Equal(expectedOutput, input.ToTitle())", prediction=1, span="14-14"];
m0_2 [cluster="Humanizer.Tests.CasingTests.ToTitle(string, string)", file="CasingTests.cs", label="Exit Humanizer.Tests.CasingTests.ToTitle(string, string)", span="12-12"];
m0_4 [cluster="Unk.Equal", file="CasingTests.cs", label="Entry Unk.Equal", span=""];
m0_5 [cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeTo(string, System.Type, Humanizer.OnNoMatch)", file="CasingTests.cs", label="return (Enum)DehumanizeToPrivate(input, targetEnum, onNoMatch);", span="32-32"];
m0_6 [cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeTo(string, System.Type, Humanizer.OnNoMatch)", file="CasingTests.cs", label="Exit Humanizer.EnumDehumanizeExtensions.DehumanizeTo(string, System.Type, Humanizer.OnNoMatch)", span="30-30"];
m0_3 [cluster="Unk.ToTitle", file="CasingTests.cs", label="Entry Unk.ToTitle", span=""];
m0_11 [cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeToPrivate(string, System.Type, Humanizer.OnNoMatch)", file="CasingTests.cs", label="Exit Humanizer.EnumDehumanizeExtensions.DehumanizeToPrivate(string, System.Type, Humanizer.OnNoMatch)", span="35-35"];
m0_12 [cluster="System.Enum.GetValues(System.Type)", file="CasingTests.cs", label="Entry System.Enum.GetValues(System.Type)", span="0-0"];
m0_13 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="CasingTests.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m0_15 [cluster="Humanizer.NoMatchFoundException.NoMatchFoundException(string)", file="CasingTests.cs", label="Entry Humanizer.NoMatchFoundException.NoMatchFoundException(string)", span="13-13"];
m0_19 [cluster="System.Enum.Humanize()", file="CasingTests.cs", label="Entry System.Enum.Humanize()", span="15-15"];
m0_16 [cluster="lambda expression", file="CasingTests.cs", label="Entry lambda expression", span="37-37"];
m0_18 [cluster="lambda expression", file="CasingTests.cs", label="Exit lambda expression", span="37-37"];
m0_20 [cluster="string.Equals(string, string, System.StringComparison)", file="CasingTests.cs", label="Entry string.Equals(string, string, System.StringComparison)", span="0-0"];
m0_14 [cluster="Unk.FirstOrDefault", file="CasingTests.cs", label="Entry Unk.FirstOrDefault", span=""];
m0_21 [file="CasingTests.cs", label=string, span=""];
m1_15 [cluster="Humanizer.Tests.EnumHumanizeTests.AllCapitalMembersAreReturnedAsIs()", file="EnumHumanizeTests.cs", label="Entry Humanizer.Tests.EnumHumanizeTests.AllCapitalMembersAreReturnedAsIs()", span="35-35"];
m1_16 [cluster="Humanizer.Tests.EnumHumanizeTests.AllCapitalMembersAreReturnedAsIs()", file="EnumHumanizeTests.cs", label="Assert.Equal(EnumUnderTest.ALLCAPITALS.ToString(), EnumUnderTest.ALLCAPITALS.Humanize())", span="37-37"];
m1_17 [cluster="Humanizer.Tests.EnumHumanizeTests.AllCapitalMembersAreReturnedAsIs()", file="EnumHumanizeTests.cs", label="Exit Humanizer.Tests.EnumHumanizeTests.AllCapitalMembersAreReturnedAsIs()", span="35-35"];
m1_18 [cluster="System.Enum.ToString()", file="EnumHumanizeTests.cs", label="Entry System.Enum.ToString()", span="0-0"];
m1_8 [cluster="Humanizer.Tests.EnumHumanizeTests.CanApplyTitleCasingOnEnumHumanization()", file="EnumHumanizeTests.cs", label="Entry Humanizer.Tests.EnumHumanizeTests.CanApplyTitleCasingOnEnumHumanization()", span="19-19"];
m1_9 [cluster="Humanizer.Tests.EnumHumanizeTests.CanApplyTitleCasingOnEnumHumanization()", file="EnumHumanizeTests.cs", label="Assert.Equal(\r\n                EnumTestsResources.MemberWithoutDescriptionAttributeTitle, \r\n                EnumUnderTest.MemberWithoutDescriptionAttribute.Humanize(LetterCasing.Title))", span="21-23"];
m1_10 [cluster="Humanizer.Tests.EnumHumanizeTests.CanApplyTitleCasingOnEnumHumanization()", file="EnumHumanizeTests.cs", label="Exit Humanizer.Tests.EnumHumanizeTests.CanApplyTitleCasingOnEnumHumanization()", span="19-19"];
m1_12 [cluster="Humanizer.Tests.EnumHumanizeTests.CanApplyLowerCaseCasingOnEnumHumanization()", file="EnumHumanizeTests.cs", label="Entry Humanizer.Tests.EnumHumanizeTests.CanApplyLowerCaseCasingOnEnumHumanization()", span="27-27"];
m1_13 [cluster="Humanizer.Tests.EnumHumanizeTests.CanApplyLowerCaseCasingOnEnumHumanization()", color=green, community=0, file="EnumHumanizeTests.cs", label="Assert.Equal(\r\n                EnumTestsResources.MemberWithoutDescriptionAttributeLowerCase, \r\n                EnumUnderTest.MemberWithoutDescriptionAttribute.Humanize(LetterCasing.LowerCase))", prediction=2, span="29-31"];
m1_14 [cluster="Humanizer.Tests.EnumHumanizeTests.CanApplyLowerCaseCasingOnEnumHumanization()", file="EnumHumanizeTests.cs", label="Exit Humanizer.Tests.EnumHumanizeTests.CanApplyLowerCaseCasingOnEnumHumanization()", span="27-27"];
m1_4 [cluster="Unk.Equal", file="EnumHumanizeTests.cs", label="Entry Unk.Equal", span=""];
m1_3 [cluster="System.Enum.Humanize()", file="EnumHumanizeTests.cs", label="Entry System.Enum.Humanize()", span="13-13"];
m1_0 [cluster="Humanizer.Tests.EnumHumanizeTests.HonorsDescriptionAttribute()", file="EnumHumanizeTests.cs", label="Entry Humanizer.Tests.EnumHumanizeTests.HonorsDescriptionAttribute()", span="7-7"];
m1_1 [cluster="Humanizer.Tests.EnumHumanizeTests.HonorsDescriptionAttribute()", file="EnumHumanizeTests.cs", label="Assert.Equal(EnumTestsResources.CustomDescription, EnumUnderTest.MemberWithDescriptionAttribute.Humanize())", span="9-9"];
m1_2 [cluster="Humanizer.Tests.EnumHumanizeTests.HonorsDescriptionAttribute()", file="EnumHumanizeTests.cs", label="Exit Humanizer.Tests.EnumHumanizeTests.HonorsDescriptionAttribute()", span="7-7"];
m1_11 [cluster="System.Enum.Humanize(Humanizer.LetterCasing)", file="EnumHumanizeTests.cs", label="Entry System.Enum.Humanize(Humanizer.LetterCasing)", span="37-37"];
m1_5 [cluster="Humanizer.Tests.EnumHumanizeTests.CanHumanizeMembersWithoutDescriptionAttribute()", file="EnumHumanizeTests.cs", label="Entry Humanizer.Tests.EnumHumanizeTests.CanHumanizeMembersWithoutDescriptionAttribute()", span="13-13"];
m1_6 [cluster="Humanizer.Tests.EnumHumanizeTests.CanHumanizeMembersWithoutDescriptionAttribute()", file="EnumHumanizeTests.cs", label="Assert.Equal(EnumTestsResources.MemberWithoutDescriptionAttributeSentence, EnumUnderTest.MemberWithoutDescriptionAttribute.Humanize())", span="15-15"];
m1_7 [cluster="Humanizer.Tests.EnumHumanizeTests.CanHumanizeMembersWithoutDescriptionAttribute()", file="EnumHumanizeTests.cs", label="Exit Humanizer.Tests.EnumHumanizeTests.CanHumanizeMembersWithoutDescriptionAttribute()", span="13-13"];
m2_8 [cluster="int.ToString(System.IFormatProvider)", file="InflectorExtensions.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m2_5 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int)", file="InflectorExtensions.cs", label="Entry Humanizer.OrdinalizeExtensions.Ordinalize(int)", span="25-25"];
m2_6 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int)", file="InflectorExtensions.cs", label="return Ordinalize(number, number.ToString(CultureInfo.InvariantCulture));", span="27-27"];
m2_7 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int)", file="InflectorExtensions.cs", label="Exit Humanizer.OrdinalizeExtensions.Ordinalize(int)", span="25-25"];
m2_4 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", file="InflectorExtensions.cs", label="Entry Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", span="30-30"];
m2_9 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", file="InflectorExtensions.cs", label="int nMod100 = number % 100", span="32-32"];
m2_11 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", file="InflectorExtensions.cs", label="return numberString + ''th'';", span="36-36"];
m2_12 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", file="InflectorExtensions.cs", label="number % 10", span="39-39"];
m2_14 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", file="InflectorExtensions.cs", label="return numberString + ''st'';", span="42-42"];
m2_16 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", file="InflectorExtensions.cs", label="return numberString + ''nd'';", span="44-44"];
m2_18 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", file="InflectorExtensions.cs", label="return numberString + ''rd'';", span="46-46"];
m2_19 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", file="InflectorExtensions.cs", label="return numberString + ''th'';", span="48-48"];
m2_10 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", file="InflectorExtensions.cs", label="nMod100 >= 11 && nMod100 <= 13", span="34-34"];
m2_13 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", file="InflectorExtensions.cs", label=1, span="41-41"];
m2_15 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", file="InflectorExtensions.cs", label=2, span="43-43"];
m2_17 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", file="InflectorExtensions.cs", label=3, span="45-45"];
m2_20 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", file="InflectorExtensions.cs", label="Exit Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", span="30-30"];
m2_0 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(string)", file="InflectorExtensions.cs", label="Entry Humanizer.OrdinalizeExtensions.Ordinalize(string)", span="15-15"];
m2_1 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(string)", file="InflectorExtensions.cs", label="return Ordinalize(int.Parse(numberString), numberString);", span="17-17"];
m2_2 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(string)", file="InflectorExtensions.cs", label="Exit Humanizer.OrdinalizeExtensions.Ordinalize(string)", span="15-15"];
m2_3 [cluster="int.Parse(string)", file="InflectorExtensions.cs", label="Entry int.Parse(string)", span="0-0"];
m3_0 [cluster="Humanizer.Localisation.Resources.GetResource(string, System.Globalization.CultureInfo)", file="InflectorTests.cs", label="Entry Humanizer.Localisation.Resources.GetResource(string, System.Globalization.CultureInfo)", span="18-18"];
m3_1 [cluster="Humanizer.Localisation.Resources.GetResource(string, System.Globalization.CultureInfo)", file="InflectorTests.cs", label="return ResourceManager.GetString(resourceKey, culture);", span="20-20"];
m3_2 [cluster="Humanizer.Localisation.Resources.GetResource(string, System.Globalization.CultureInfo)", file="InflectorTests.cs", label="Exit Humanizer.Localisation.Resources.GetResource(string, System.Globalization.CultureInfo)", span="18-18"];
m3_3 [cluster="System.Resources.ResourceManager.GetString(string, System.Globalization.CultureInfo)", file="InflectorTests.cs", label="Entry System.Resources.ResourceManager.GetString(string, System.Globalization.CultureInfo)", span="0-0"];
m6_45 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", span="115-115"];
m6_46 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''Can Return Title Case'',\r\n                ''Can_return_title_Case''.Humanize(LetterCasing.Title))", span="117-119"];
m6_47 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", span="115-115"];
m6_3 [cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", file="StringHumanizeTests.cs", label="value.Length == 0", span="15-15"];
m6_54 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoSentenceCase()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoSentenceCase()", span="139-139"];
m6_55 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoSentenceCase()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''Can return sentence case'',\r\n                ''CanReturnSentenceCase''.Humanize(LetterCasing.Sentence))", span="141-143"];
m6_56 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoSentenceCase()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoSentenceCase()", span="139-139"];
m6_38 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheStart()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheStart()", span="99-99"];
m6_39 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheStart()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''1 HTML'',\r\n                ''1HTML''.Humanize())", span="101-103"];
m6_40 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheStart()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheStart()", span="99-99"];
m6_0 [cluster="Humanizer.Tests.StringHumanizeTests.PascalCaseInputStringIsTurnedIntoSentence()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.PascalCaseInputStringIsTurnedIntoSentence()", span="7-7"];
m6_1 [cluster="Humanizer.Tests.StringHumanizeTests.PascalCaseInputStringIsTurnedIntoSentence()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''Pascal case input string is turned into sentence'',\r\n                ''PascalCaseInputStringIsTurnedIntoSentence''.Humanize())", span="9-11"];
m6_4 [cluster="Unk.Equal", file="StringHumanizeTests.cs", label="Entry Unk.Equal", span=""];
m6_5 [cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", span="15-15"];
m6_6 [cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''When I use an input a here'',\r\n                ''WhenIUseAnInputAHere''.Humanize())", span="17-19"];
m6_8 [cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringStartsWithANumber_ThenNumberIsDealtWithLikeAWord()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.WhenInputStringStartsWithANumber_ThenNumberIsDealtWithLikeAWord()", span="23-23"];
m6_10 [cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringStartsWithANumber_ThenNumberIsDealtWithLikeAWord()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.WhenInputStringStartsWithANumber_ThenNumberIsDealtWithLikeAWord()", span="23-23"];
m6_11 [cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", span="29-29"];
m6_13 [cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", span="29-29"];
m6_14 [cluster="Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringIsTurnedIntoSentence()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringIsTurnedIntoSentence()", span="35-35"];
m6_15 [cluster="Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringIsTurnedIntoSentence()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''Underscored input string is turned into sentence'',\r\n                ''Underscored_input_string_is_turned_into_sentence''.Humanize())", span="37-39"];
m6_16 [cluster="Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringIsTurnedIntoSentence()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringIsTurnedIntoSentence()", span="35-35"];
m6_18 [cluster="Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringPreservesCasing()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''Underscored input String is turned INTO sentence'',\r\n                ''Underscored_input_String_is_turned_INTO_sentence''.Humanize())", span="45-47"];
m6_2 [cluster="Humanizer.Tests.StringHumanizeTests.PascalCaseInputStringIsTurnedIntoSentence()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.PascalCaseInputStringIsTurnedIntoSentence()", span="7-7"];
m6_7 [cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", span="15-15"];
m6_12 [cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", file="StringHumanizeTests.cs", label="Assert.Equal(''Number is at the end 100'', ''NumberIsAtTheEnd100''.Humanize())", span="31-31"];
m6_9 [cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringStartsWithANumber_ThenNumberIsDealtWithLikeAWord()", file="StringHumanizeTests.cs", label="Assert.Equal(''10 is in the begining'', ''10IsInTheBegining''.Humanize())", span="25-25"];
m6_17 [cluster="Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringPreservesCasing()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringPreservesCasing()", span="43-43"];
m6_19 [cluster="Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringPreservesCasing()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringPreservesCasing()", span="43-43"];
m6_60 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", span="155-155"];
m6_61 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", color=green, community=0, file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''lowercase'',\r\n                ''LOWERCASE''.Humanize(LetterCasing.LowerCase))", prediction=3, span="157-159"];
m6_62 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", span="155-155"];
m6_22 [cluster="Humanizer.Tests.StringHumanizeTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", span="51-51"];
m6_48 [cluster="Humanizer.Tests.StringHumanizeTests.TitleHumanizationHonorsAllCaps()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.TitleHumanizationHonorsAllCaps()", span="123-123"];
m6_49 [cluster="Humanizer.Tests.StringHumanizeTests.TitleHumanizationHonorsAllCaps()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''Title Humanization Honors ALLCAPS'',\r\n                ''Title_humanization_Honors_ALLCAPS''.Humanize(LetterCasing.Title))", span="125-127"];
m6_50 [cluster="Humanizer.Tests.StringHumanizeTests.TitleHumanizationHonorsAllCaps()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.TitleHumanizationHonorsAllCaps()", span="123-123"];
m6_26 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheMiddle()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheMiddle()", span="67-67"];
m6_27 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheMiddle()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''The HTML language'',\r\n                ''TheHTMLLanguage''.Humanize())", span="69-71"];
m6_28 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheMiddle()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheMiddle()", span="67-67"];
m6_51 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCase()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCase()", span="131-131"];
m6_52 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCase()", color=green, community=0, file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''can return lower case'',\r\n                ''CanReturnLowerCase''.Humanize(LetterCasing.LowerCase))", prediction=4, span="133-135"];
m6_53 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCase()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCase()", span="131-131"];
m6_20 [cluster="Humanizer.Tests.StringHumanizeTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", span="51-51"];
m6_21 [cluster="string.ToCharArray()", file="StringHumanizeTests.cs", label="Entry string.ToCharArray()", span="0-0"];
m6_23 [cluster="char.IsLetterOrDigit(char)", file="StringHumanizeTests.cs", label="Entry char.IsLetterOrDigit(char)", span="0-0"];
m6_24 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreLeftIntact()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''HTML'',\r\n                ''HTML''.Humanize())", span="61-63"];
m6_25 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreLeftIntact()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.AcronymsAreLeftIntact()", span="59-59"];
m6_66 [cluster="Humanizer.Tests.StringHumanizeTests.CanTurnIntoUpperCasewhenUsingUnderscores()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.CanTurnIntoUpperCasewhenUsingUnderscores()", span="171-171"];
m6_67 [cluster="Humanizer.Tests.StringHumanizeTests.CanTurnIntoUpperCasewhenUsingUnderscores()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''CAN HUMANIZE INTO UPPER CASE'',\r\n                ''Can_Humanize_into_Upper_case''.Humanize(LetterCasing.AllCaps))", span="173-175"];
m6_68 [cluster="Humanizer.Tests.StringHumanizeTests.CanTurnIntoUpperCasewhenUsingUnderscores()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.CanTurnIntoUpperCasewhenUsingUnderscores()", span="171-171"];
m6_32 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheEnd()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheEnd()", span="83-83"];
m6_33 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheEnd()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''The language is HTML'',\r\n                ''TheLanguageIsHTML''.Humanize())", span="85-87"];
m6_34 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheEnd()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheEnd()", span="83-83"];
m6_44 [cluster="string.Humanize(Humanizer.LetterCasing)", file="StringHumanizeTests.cs", label="Entry string.Humanize(Humanizer.LetterCasing)", span="60-60"];
m6_63 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoUpperCase()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoUpperCase()", span="163-163"];
m6_64 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoUpperCase()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''CAN HUMANIZE INTO UPPER CASE'',\r\n                ''CanHumanizeIntoUpperCase''.Humanize(LetterCasing.AllCaps))", span="165-167"];
m6_65 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoUpperCase()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoUpperCase()", span="163-163"];
m6_35 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheEnd()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheEnd()", span="91-91"];
m6_36 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheEnd()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''HTML 5'',\r\n                ''HTML5''.Humanize())", span="93-95"];
m6_37 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheEnd()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheEnd()", span="91-91"];
m6_41 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", span="107-107"];
m6_42 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''Can Return Title Case'',\r\n                ''CanReturnTitleCase''.Humanize(LetterCasing.Title))", span="109-111"];
m6_43 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", span="107-107"];
m6_57 [cluster="Humanizer.Tests.StringHumanizeTests.SentenceCasingWorksOnEmptyStrings()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.SentenceCasingWorksOnEmptyStrings()", span="147-147"];
m6_58 [cluster="Humanizer.Tests.StringHumanizeTests.SentenceCasingWorksOnEmptyStrings()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                '''',\r\n                ''''.Humanize(LetterCasing.Sentence))", span="149-151"];
m6_59 [cluster="Humanizer.Tests.StringHumanizeTests.SentenceCasingWorksOnEmptyStrings()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.SentenceCasingWorksOnEmptyStrings()", span="147-147"];
m6_29 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheStart()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheStart()", span="75-75"];
m6_30 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheStart()", file="StringHumanizeTests.cs", label="Assert.Equal(\r\n                ''HTML is the language'',\r\n                ''HTMLIsTheLanguage''.Humanize())", span="77-79"];
m6_31 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheStart()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheStart()", span="75-75"];
m7_0 [cluster="Humanizer.Transformer.ToLowerCase.Transform(string)", file="ToLowerCase.cs", label="Entry Humanizer.Transformer.ToLowerCase.Transform(string)", span="6-6"];
m7_1 [cluster="Humanizer.Transformer.ToLowerCase.Transform(string)", color=green, community=0, file="ToLowerCase.cs", label="return CultureInfo.CurrentCulture.TextInfo.ToLower(input);", prediction=5, span="8-8"];
m7_2 [cluster="Humanizer.Transformer.ToLowerCase.Transform(string)", file="ToLowerCase.cs", label="Exit Humanizer.Transformer.ToLowerCase.Transform(string)", span="6-6"];
m7_3 [cluster="System.Globalization.TextInfo.ToLower(string)", file="ToLowerCase.cs", label="Entry System.Globalization.TextInfo.ToLower(string)", span="0-0"];
m8_0 [cluster="Humanizer.Transformer.ToSentenceCase.Transform(string)", file="ToSentenceCase.cs", label="Entry Humanizer.Transformer.ToSentenceCase.Transform(string)", span="6-6"];
m8_1 [cluster="Humanizer.Transformer.ToSentenceCase.Transform(string)", color=green, community=0, file="ToSentenceCase.cs", label="input.Length >= 1", prediction=6, span="8-8"];
m8_2 [cluster="Humanizer.Transformer.ToSentenceCase.Transform(string)", color=green, community=0, file="ToSentenceCase.cs", label="return String.Concat(input.Substring(0, 1).ToUpper(), input.Substring(1));", prediction=7, span="9-9"];
m8_3 [cluster="Humanizer.Transformer.ToSentenceCase.Transform(string)", color=green, community=0, file="ToSentenceCase.cs", label="return input.ToUpper();", prediction=7, span="11-11"];
m8_4 [cluster="Humanizer.Transformer.ToSentenceCase.Transform(string)", file="ToSentenceCase.cs", label="Exit Humanizer.Transformer.ToSentenceCase.Transform(string)", span="6-6"];
m8_6 [cluster="string.ToUpper()", file="ToSentenceCase.cs", label="Entry string.ToUpper()", span="0-0"];
m8_5 [cluster="string.Substring(int, int)", file="ToSentenceCase.cs", label="Entry string.Substring(int, int)", span="0-0"];
m8_7 [cluster="string.Substring(int)", file="ToSentenceCase.cs", label="Entry string.Substring(int)", span="0-0"];
m9_0 [cluster="Humanizer.Transformer.ToTitleCase.Transform(string)", file="ToTitleCase.cs", label="Entry Humanizer.Transformer.ToTitleCase.Transform(string)", span="6-6"];
m9_1 [cluster="Humanizer.Transformer.ToTitleCase.Transform(string)", color=green, community=0, file="ToTitleCase.cs", label="return CultureInfo.CurrentCulture.TextInfo.ToTitleCase(input);", prediction=9, span="8-8"];
m9_2 [cluster="Humanizer.Transformer.ToTitleCase.Transform(string)", file="ToTitleCase.cs", label="Exit Humanizer.Transformer.ToTitleCase.Transform(string)", span="6-6"];
m10_0 [cluster="Humanizer.Transformer.ToUpperCase.Transform(string)", file="ToUpperCase.cs", label="Entry Humanizer.Transformer.ToUpperCase.Transform(string)", span="4-4"];
m10_1 [cluster="Humanizer.Transformer.ToUpperCase.Transform(string)", color=green, community=0, file="ToUpperCase.cs", label="return input.ToUpper();", prediction=10, span="6-6"];
m10_2 [cluster="Humanizer.Transformer.ToUpperCase.Transform(string)", file="ToUpperCase.cs", label="Exit Humanizer.Transformer.ToUpperCase.Transform(string)", span="4-4"];
m11_4 [cluster="lambda expression", file="Transformers.cs", label="Entry lambda expression", span="18-18"];
m11_5 [cluster="lambda expression", color=green, community=0, file="Transformers.cs", label="stringTransformer.Transform(current)", prediction=11, span="18-18"];
m11_6 [cluster="lambda expression", file="Transformers.cs", label="Exit lambda expression", span="18-18"];
m11_3 [cluster="Unk.Aggregate", file="Transformers.cs", label="Entry Unk.Aggregate", span=""];
m11_7 [cluster="Humanizer.Transformer.IStringTransformer.Transform(string)", file="Transformers.cs", label="Entry Humanizer.Transformer.IStringTransformer.Transform(string)", span="12-12"];
m11_0 [cluster="Humanizer.Transformers.TransformWith(string, params Humanizer.Transformer.IStringTransformer[])", file="Transformers.cs", label="Entry Humanizer.Transformers.TransformWith(string, params Humanizer.Transformer.IStringTransformer[])", span="16-16"];
m11_1 [cluster="Humanizer.Transformers.TransformWith(string, params Humanizer.Transformer.IStringTransformer[])", color=green, community=0, file="Transformers.cs", label="return transformers.Aggregate(input, (current, stringTransformer) => stringTransformer.Transform(current));", prediction=12, span="18-18"];
m11_2 [cluster="Humanizer.Transformers.TransformWith(string, params Humanizer.Transformer.IStringTransformer[])", file="Transformers.cs", label="Exit Humanizer.Transformers.TransformWith(string, params Humanizer.Transformer.IStringTransformer[])", span="16-16"];
m12_14 [cluster="Humanizer.Localisation.Ordinalizers.SpanishOrdinalizer.SpanishOrdinalizer()", file="TransformersTests.cs", label="Entry Humanizer.Localisation.Ordinalizers.SpanishOrdinalizer.SpanishOrdinalizer()", span="2-2"];
m12_19 [cluster="Humanizer.Localisation.Ordinalizers.TurkishOrdinalizer.TurkishOrdinalizer()", file="TransformersTests.cs", label="Entry Humanizer.Localisation.Ordinalizers.TurkishOrdinalizer.TurkishOrdinalizer()", span="7-7"];
m12_20 [cluster="Humanizer.Localisation.Ordinalizers.UkrainianOrdinalizer.UkrainianOrdinalizer()", file="TransformersTests.cs", label="Entry Humanizer.Localisation.Ordinalizers.UkrainianOrdinalizer.UkrainianOrdinalizer()", span="2-2"];
m12_13 [cluster="Humanizer.Localisation.Ordinalizers.EnglishOrdinalizer.EnglishOrdinalizer()", file="TransformersTests.cs", label="Entry Humanizer.Localisation.Ordinalizers.EnglishOrdinalizer.EnglishOrdinalizer()", span="2-2"];
m12_11 [cluster="Humanizer.Localisation.Ordinalizers.GermanOrdinalizer.GermanOrdinalizer()", file="TransformersTests.cs", label="Entry Humanizer.Localisation.Ordinalizers.GermanOrdinalizer.GermanOrdinalizer()", span="2-2"];
m12_0 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", file="TransformersTests.cs", label="Entry Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", span="6-6"];
m12_1 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", color=green, community=0, file="TransformersTests.cs", label="Register(''de'', new GermanOrdinalizer())", prediction=13, span="8-8"];
m12_2 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", color=green, community=0, file="TransformersTests.cs", label="Register(''en'', new EnglishOrdinalizer())", prediction=13, span="9-9"];
m12_3 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", color=green, community=0, file="TransformersTests.cs", label="Register(''es'', new SpanishOrdinalizer())", prediction=13, span="10-10"];
m12_4 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", color=green, community=0, file="TransformersTests.cs", label="Register(''it'', new ItalianOrdinalizer())", prediction=13, span="11-11"];
m12_5 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", color=green, community=0, file="TransformersTests.cs", label="Register(''nl'', new DutchOrdinalizer())", prediction=13, span="12-12"];
m12_6 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", color=green, community=0, file="TransformersTests.cs", label="Register(''pt'', new PortugueseOrdinalizer())", prediction=13, span="13-13"];
m12_7 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", color=green, community=0, file="TransformersTests.cs", label="Register(''ru'', new RussianOrdinalizer())", prediction=13, span="14-14"];
m12_8 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", color=green, community=0, file="TransformersTests.cs", label="Register(''tr'', new TurkishOrdinalizer())", prediction=13, span="15-15"];
m12_9 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", color=green, community=0, file="TransformersTests.cs", label="Register(''uk'', new UkrainianOrdinalizer())", prediction=13, span="16-16"];
m12_10 [cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", file="TransformersTests.cs", label="Exit Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", span="6-6"];
m12_15 [cluster="Humanizer.Localisation.Ordinalizers.ItalianOrdinalizer.ItalianOrdinalizer()", file="TransformersTests.cs", label="Entry Humanizer.Localisation.Ordinalizers.ItalianOrdinalizer.ItalianOrdinalizer()", span="2-2"];
m12_16 [cluster="Humanizer.Localisation.Ordinalizers.DutchOrdinalizer.DutchOrdinalizer()", file="TransformersTests.cs", label="Entry Humanizer.Localisation.Ordinalizers.DutchOrdinalizer.DutchOrdinalizer()", span="2-2"];
m12_17 [cluster="Humanizer.Localisation.Ordinalizers.PortugueseOrdinalizer.PortugueseOrdinalizer()", file="TransformersTests.cs", label="Entry Humanizer.Localisation.Ordinalizers.PortugueseOrdinalizer.PortugueseOrdinalizer()", span="2-2"];
m12_18 [cluster="Humanizer.Localisation.Ordinalizers.RussianOrdinalizer.RussianOrdinalizer()", file="TransformersTests.cs", label="Entry Humanizer.Localisation.Ordinalizers.RussianOrdinalizer.RussianOrdinalizer()", span="2-2"];
m12_21 [file="TransformersTests.cs", label="Humanizer.Configuration.OrdinalizerRegistry", span=""];
n21 -> n1  [color=darkseagreen4, key=1, label="Humanizer.Configuration.OrdinalizerRegistry", style=dashed];
n21 -> n2  [color=darkseagreen4, key=1, label="Humanizer.Configuration.OrdinalizerRegistry", style=dashed];
n21 -> n3  [color=darkseagreen4, key=1, label="Humanizer.Configuration.OrdinalizerRegistry", style=dashed];
n21 -> n4  [color=darkseagreen4, key=1, label="Humanizer.Configuration.OrdinalizerRegistry", style=dashed];
n21 -> n5  [color=darkseagreen4, key=1, label="Humanizer.Configuration.OrdinalizerRegistry", style=dashed];
n21 -> n6  [color=darkseagreen4, key=1, label="Humanizer.Configuration.OrdinalizerRegistry", style=dashed];
n21 -> n7  [color=darkseagreen4, key=1, label="Humanizer.Configuration.OrdinalizerRegistry", style=dashed];
n21 -> n8  [color=darkseagreen4, key=1, label="Humanizer.Configuration.OrdinalizerRegistry", style=dashed];
n21 -> n9  [color=darkseagreen4, key=1, label="Humanizer.Configuration.OrdinalizerRegistry", style=dashed];
d0 -> d5  [color=darkseagreen4, key=1, label=string, style=dashed];
d0 -> d3  [color=darkseagreen4, key=1, label=string, style=dashed];
d0 -> d7  [color=darkseagreen4, key=1, label=string, style=dashed];
d0 -> d9  [color=darkseagreen4, key=1, label=string, style=dashed];
d0 -> d10  [color=darkseagreen4, key=1, label=string, style=dashed];
d0 -> d11  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_4 -> m2_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_4 -> m2_12  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_4 -> m2_14  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_4 -> m2_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_4 -> m2_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_4 -> m2_19  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_0 -> m6_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_0 -> m6_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_0 -> m6_5  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_0 -> m6_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_0 -> m6_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_0 -> m6_10  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_0 -> m6_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_0 -> m6_13  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_0 -> m6_14  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_0 -> m6_15  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_0 -> m6_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_0 -> m6_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_8 -> m6_13  [color=darkseagreen4, key=1, label=numberOfCharactersEqualToTruncateLength, style=dashed];
m6_8 -> m6_15  [color=darkseagreen4, key=1, label=numberOfCharactersEqualToTruncateLength, style=dashed];
m6_7 -> m6_12  [color=darkseagreen4, key=1, label=alphaNumericalCharactersProcessed, style=dashed];
m6_7 -> m6_13  [color=darkseagreen4, key=1, label=alphaNumericalCharactersProcessed, style=dashed];
m6_7 -> m6_15  [color=darkseagreen4, key=1, label=alphaNumericalCharactersProcessed, style=dashed];
m6_12 -> m6_12  [color=darkseagreen4, key=1, label=alphaNumericalCharactersProcessed, style=dashed];
m6_12 -> m6_15  [color=darkseagreen4, key=1, label=alphaNumericalCharactersProcessed, style=dashed];
m6_9 -> m6_11  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_9 -> m6_16  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_9 -> m6_17  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_17 -> m6_17  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_0 -> m8_2  [color=green, key=1, label=string, style=dashed];
m8_0 -> m8_3  [color=green, key=1, label=string, style=dashed];
m11_1 -> m11_4  [color=green, key=1, label="lambda expression", style=dashed];
m12_21 -> m12_1  [color=green, key=1, label="Humanizer.Configuration.OrdinalizerRegistry", style=dashed];
m12_21 -> m12_2  [color=green, key=1, label="Humanizer.Configuration.OrdinalizerRegistry", style=dashed];
m12_21 -> m12_3  [color=green, key=1, label="Humanizer.Configuration.OrdinalizerRegistry", style=dashed];
m12_21 -> m12_4  [color=green, key=1, label="Humanizer.Configuration.OrdinalizerRegistry", style=dashed];
m12_21 -> m12_5  [color=green, key=1, label="Humanizer.Configuration.OrdinalizerRegistry", style=dashed];
m12_21 -> m12_6  [color=green, key=1, label="Humanizer.Configuration.OrdinalizerRegistry", style=dashed];
m12_21 -> m12_7  [color=green, key=1, label="Humanizer.Configuration.OrdinalizerRegistry", style=dashed];
m12_21 -> m12_8  [color=green, key=1, label="Humanizer.Configuration.OrdinalizerRegistry", style=dashed];
m12_21 -> m12_9  [color=green, key=1, label="Humanizer.Configuration.OrdinalizerRegistry", style=dashed];
}
