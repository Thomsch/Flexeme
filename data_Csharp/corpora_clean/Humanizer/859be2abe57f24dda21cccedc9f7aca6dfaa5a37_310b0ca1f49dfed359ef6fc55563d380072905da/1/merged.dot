digraph  {
n0 [label="Entry Humanizer.To.Transform(string, params Humanizer.IStringTransformer[])", span="15-15", cluster="Humanizer.To.Transform(string, params Humanizer.IStringTransformer[])"];
n1 [label="return transformers.Aggregate(input, (current, stringTransformer) => stringTransformer.Transform(current));", span="17-17", cluster="Humanizer.To.Transform(string, params Humanizer.IStringTransformer[])"];
n2 [label="Exit Humanizer.To.Transform(string, params Humanizer.IStringTransformer[])", span="15-15", cluster="Humanizer.To.Transform(string, params Humanizer.IStringTransformer[])"];
n3 [label="Entry Unk.Aggregate", span="", cluster="Unk.Aggregate"];
n4 [label="Entry lambda expression", span="17-17", cluster="lambda expression"];
n5 [label="stringTransformer.Transform(current)", span="17-17", cluster="lambda expression"];
n6 [label="Exit lambda expression", span="17-17", cluster="lambda expression"];
n7 [label="Entry Humanizer.IStringTransformer.Transform(string)", span="12-12", cluster="Humanizer.IStringTransformer.Transform(string)"];
m1_0 [label="Entry Humanizer.Properties.Resources.Resources()", span="31-31", cluster="Humanizer.Properties.Resources.Resources()", file="NumberToWordsExtension.cs"];
m1_1 [label="Exit Humanizer.Properties.Resources.Resources()", span="31-31", cluster="Humanizer.Properties.Resources.Resources()", file="NumberToWordsExtension.cs"];
m2_8 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="NumberToWordsTests.cs"];
m2_7 [label="Entry int.ToWords()", span="14-14", cluster="int.ToWords()", file="NumberToWordsTests.cs"];
m2_0 [label="Entry Humanizer.Tests.Extensions.NumberToWordsTests.ToWords()", span="6-6", cluster="Humanizer.Tests.Extensions.NumberToWordsTests.ToWords()", file="NumberToWordsTests.cs"];
m2_1 [label="Assert.Equal(''one'', 1.ToWords())", span="8-8", cluster="Humanizer.Tests.Extensions.NumberToWordsTests.ToWords()", file="NumberToWordsTests.cs"];
m2_2 [label="Assert.Equal(''ten'', 10.ToWords())", span="9-9", cluster="Humanizer.Tests.Extensions.NumberToWordsTests.ToWords()", file="NumberToWordsTests.cs"];
m2_3 [label="Assert.Equal(''eleven'', 11.ToWords())", span="10-10", cluster="Humanizer.Tests.Extensions.NumberToWordsTests.ToWords()", file="NumberToWordsTests.cs"];
m2_4 [label="Assert.Equal(''one hundred and twenty-two'', 122.ToWords())", span="11-11", cluster="Humanizer.Tests.Extensions.NumberToWordsTests.ToWords()", file="NumberToWordsTests.cs"];
m2_5 [label="Assert.Equal(''three thousand five hundred and one'', 3501.ToWords())", span="12-12", cluster="Humanizer.Tests.Extensions.NumberToWordsTests.ToWords()", file="NumberToWordsTests.cs"];
m2_6 [label="Exit Humanizer.Tests.Extensions.NumberToWordsTests.ToWords()", span="6-6", cluster="Humanizer.Tests.Extensions.NumberToWordsTests.ToWords()", file="NumberToWordsTests.cs"];
m2_9 [label="Entry Humanizer.Tests.Extensions.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", span="16-16", cluster="Humanizer.Tests.Extensions.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", file="NumberToWordsTests.cs"];
m2_10 [label="Assert.Equal(''one hundred'', 100.ToWords())", span="18-18", cluster="Humanizer.Tests.Extensions.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", color=green, community=0, file="NumberToWordsTests.cs"];
m2_11 [label="Assert.Equal(''one thousand'', 1000.ToWords())", span="19-19", cluster="Humanizer.Tests.Extensions.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", color=green, community=0, file="NumberToWordsTests.cs"];
m2_12 [label="Assert.Equal(''one million'', 1000000.ToWords())", span="20-20", cluster="Humanizer.Tests.Extensions.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", color=green, community=0, file="NumberToWordsTests.cs"];
m2_13 [label="Exit Humanizer.Tests.Extensions.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", span="16-16", cluster="Humanizer.Tests.Extensions.NumberToWordsTests.RoundNumbersHaveNoSpaceAtTheEnd()", file="NumberToWordsTests.cs"];
m3_0 [label="Entry Humanizer.Properties.Resources.Resources()", span="31-31", cluster="Humanizer.Properties.Resources.Resources()", file="Resources.Designer.cs"];
m3_1 [label="Exit Humanizer.Properties.Resources.Resources()", span="31-31", cluster="Humanizer.Properties.Resources.Resources()", file="Resources.Designer.cs"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=2, style=dotted];
n1 -> n4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n2 -> n0  [key=0, style=bold, color=blue];
n4 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n5 -> n7  [key=2, style=dotted];
n6 -> n4  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_7  [key=2, style=dotted];
m2_1 -> m2_8  [key=2, style=dotted];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_7  [key=2, style=dotted];
m2_2 -> m2_8  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_7  [key=2, style=dotted];
m2_3 -> m2_8  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_7  [key=2, style=dotted];
m2_4 -> m2_8  [key=2, style=dotted];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_7  [key=2, style=dotted];
m2_5 -> m2_8  [key=2, style=dotted];
m2_6 -> m2_0  [key=0, style=bold, color=blue];
m2_9 -> m2_10  [key=0, style=solid, color=green];
m2_10 -> m2_11  [key=0, style=solid, color=green];
m2_10 -> m2_7  [key=2, style=dotted, color=green];
m2_10 -> m2_8  [key=2, style=dotted, color=green];
m2_11 -> m2_12  [key=0, style=solid, color=green];
m2_11 -> m2_7  [key=2, style=dotted, color=green];
m2_11 -> m2_8  [key=2, style=dotted, color=green];
m2_12 -> m2_13  [key=0, style=solid, color=green];
m2_12 -> m2_7  [key=2, style=dotted, color=green];
m2_12 -> m2_8  [key=2, style=dotted, color=green];
m2_13 -> m2_9  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_0  [key=0, style=bold, color=blue];
}
