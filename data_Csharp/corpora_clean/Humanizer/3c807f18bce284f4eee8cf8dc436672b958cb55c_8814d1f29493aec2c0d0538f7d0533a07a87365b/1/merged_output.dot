digraph  {
m2_3 [cluster="int.ToString()", file="DefaultNumberToWordsConverter.cs", label="Entry int.ToString()", span="0-0"];
m2_0 [cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.Convert(int)", file="DefaultNumberToWordsConverter.cs", label="Entry Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.Convert(int)", span="4-4"];
m2_1 [cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.Convert(int)", color=green, community=0, file="DefaultNumberToWordsConverter.cs", label="6: return number.ToString();", span="6-6"];
m2_2 [cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.Convert(int)", file="DefaultNumberToWordsConverter.cs", label="Exit Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.Convert(int)", span="4-4"];
m2_4 [cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.ConvertToOrdinal(int)", file="DefaultNumberToWordsConverter.cs", label="Entry Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.ConvertToOrdinal(int)", span="9-9"];
m2_5 [cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.ConvertToOrdinal(int)", file="DefaultNumberToWordsConverter.cs", label="return number.ToString();", span="11-11"];
m2_6 [cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.ConvertToOrdinal(int)", file="DefaultNumberToWordsConverter.cs", label="Exit Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.ConvertToOrdinal(int)", span="9-9"];
m7_2 [cluster="Humanizer.Localisation.NumberToWords.INumberToWordsConverter.ConvertToOrdinal(int)", file="INumberToWordsConverter.cs", label="Entry Humanizer.Localisation.NumberToWords.INumberToWordsConverter.ConvertToOrdinal(int)", span="19-19"];
m7_3 [cluster="Humanizer.Localisation.NumberToWords.INumberToWordsConverter.ConvertToOrdinal(int)", file="INumberToWordsConverter.cs", label="Exit Humanizer.Localisation.NumberToWords.INumberToWordsConverter.ConvertToOrdinal(int)", span="19-19"];
m7_0 [cluster="Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(int)", file="INumberToWordsConverter.cs", label="Entry Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(int)", span="12-12"];
m7_1 [cluster="Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(int)", file="INumberToWordsConverter.cs", label="Exit Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(int)", span="12-12"];
m8_4 [cluster="Unk.Equal", file="NumberToOrdinalWordsTests.cs", label="Entry Unk.Equal", span=""];
m8_0 [cluster="Humanizer.Tests.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", file="NumberToOrdinalWordsTests.cs", label="Entry Humanizer.Tests.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", span="50-50"];
m8_1 [cluster="Humanizer.Tests.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", file="NumberToOrdinalWordsTests.cs", label="Assert.Equal(words, number.ToOrdinalWords())", span="52-52"];
m8_2 [cluster="Humanizer.Tests.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", file="NumberToOrdinalWordsTests.cs", label="Exit Humanizer.Tests.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", span="50-50"];
m8_3 [cluster="int.ToOrdinalWords()", file="NumberToOrdinalWordsTests.cs", label="Entry int.ToOrdinalWords()", span="35-35"];
m9_7 [cluster="Humanizer.Localisation.NumberToWords.ArabicNumberToWordsConverter.ArabicNumberToWordsConverter()", file="NumberToWordsExtension.cs", label="Entry Humanizer.Localisation.NumberToWords.ArabicNumberToWordsConverter.ArabicNumberToWordsConverter()", span="4-4"];
m9_24 [cluster="Humanizer.NumberToWordsExtension.ToOrdinalWords(int)", file="NumberToWordsExtension.cs", label="Entry Humanizer.NumberToWordsExtension.ToOrdinalWords(int)", span="35-35"];
m9_25 [cluster="Humanizer.NumberToWordsExtension.ToOrdinalWords(int)", file="NumberToWordsExtension.cs", label="return Converter.ConvertToOrdinal(number);", span="37-37"];
m9_26 [cluster="Humanizer.NumberToWordsExtension.ToOrdinalWords(int)", file="NumberToWordsExtension.cs", label="Exit Humanizer.NumberToWordsExtension.ToOrdinalWords(int)", span="35-35"];
m9_15 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.SpanishNumberToWordsConverter()", file="NumberToWordsExtension.cs", label="Entry Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.SpanishNumberToWordsConverter()", span="5-5"];
m9_27 [cluster="Humanizer.Localisation.NumberToWords.INumberToWordsConverter.ConvertToOrdinal(int)", file="NumberToWordsExtension.cs", label="Entry Humanizer.Localisation.NumberToWords.INumberToWordsConverter.ConvertToOrdinal(int)", span="19-19"];
m9_23 [cluster="Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(int)", file="NumberToWordsExtension.cs", label="Entry Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(int)", span="12-12"];
m9_19 [cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.PolishNumberToWordsConverter()", file="NumberToWordsExtension.cs", label="Entry Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.PolishNumberToWordsConverter()", span="6-6"];
m9_20 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs", label="Entry Humanizer.NumberToWordsExtension.ToWords(int)", span="25-25"];
m9_21 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs", label="return Converter.Convert(number);", span="27-27"];
m9_22 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs", label="Exit Humanizer.NumberToWordsExtension.ToWords(int)", span="25-25"];
m9_3 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.EnglishNumberToWordsConverter()", file="NumberToWordsExtension.cs", label="Entry Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.EnglishNumberToWordsConverter()", span="5-5"];
m9_11 [cluster="Humanizer.Localisation.NumberToWords.FarsiNumberToWordsConverter.FarsiNumberToWordsConverter()", file="NumberToWordsExtension.cs", label="Entry Humanizer.Localisation.NumberToWords.FarsiNumberToWordsConverter.FarsiNumberToWordsConverter()", span="5-5"];
m9_16 [cluster="lambda expression", file="NumberToWordsExtension.cs", label="Entry lambda expression", span="17-17"];
m9_0 [cluster="lambda expression", file="NumberToWordsExtension.cs", label="Entry lambda expression", span="13-13"];
m9_1 [cluster="lambda expression", file="NumberToWordsExtension.cs", label="new EnglishNumberToWordsConverter()", span="13-13"];
m9_2 [cluster="lambda expression", file="NumberToWordsExtension.cs", label="Exit lambda expression", span="13-13"];
m9_4 [cluster="lambda expression", file="NumberToWordsExtension.cs", label="Entry lambda expression", span="14-14"];
m9_5 [cluster="lambda expression", file="NumberToWordsExtension.cs", label="new ArabicNumberToWordsConverter()", span="14-14"];
m9_6 [cluster="lambda expression", file="NumberToWordsExtension.cs", label="Exit lambda expression", span="14-14"];
m9_8 [cluster="lambda expression", file="NumberToWordsExtension.cs", label="Entry lambda expression", span="15-15"];
m9_9 [cluster="lambda expression", file="NumberToWordsExtension.cs", label="new FarsiNumberToWordsConverter()", span="15-15"];
m9_10 [cluster="lambda expression", file="NumberToWordsExtension.cs", label="Exit lambda expression", span="15-15"];
m9_12 [cluster="lambda expression", file="NumberToWordsExtension.cs", label="Entry lambda expression", span="16-16"];
m9_13 [cluster="lambda expression", file="NumberToWordsExtension.cs", label="new SpanishNumberToWordsConverter()", span="16-16"];
m9_14 [cluster="lambda expression", file="NumberToWordsExtension.cs", label="Exit lambda expression", span="16-16"];
m9_17 [cluster="lambda expression", color=red, community=0, file="NumberToWordsExtension.cs", label="5: new PolishNumberToWordsConverter()", span="17-17"];
m9_18 [cluster="lambda expression", file="NumberToWordsExtension.cs", label="Exit lambda expression", span="17-17"];
m11_43 [cluster="Unk.ToMaybe", file="RussianFormatter.cs", label="Entry Unk.ToMaybe", span=""];
m11_4 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=red, community=0, file="RussianFormatter.cs", label="5: mod10 == 1", span="14-14"];
m11_29 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="RussianFormatter.cs", label="MapValuesImpl(specProps.Skip(1), values.Skip(taken.Count()), converter)", span="61-61"];
m11_17 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="RussianFormatter.cs", label="specProps.Empty()", span="30-30"];
m11_18 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="RussianFormatter.cs", label="yield break;", span="32-32"];
m11_22 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="RussianFormatter.cs", label="yield return\r\n                    Tuple.Create(pt, MakeErrorInCaseOfMinConstraint(pt.Specification));", span="38-39"];
m11_23 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="RussianFormatter.cs", label="yield break;", span="40-40"];
m11_26 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="RussianFormatter.cs", label="yield return\r\n                    Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                        pt, Maybe.Just<Error>(new SequenceOutOfRangeError(NameInfo.EmptyName)));", span="48-50"];
m11_27 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="RussianFormatter.cs", label="yield break;", span="51-51"];
m11_28 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="RussianFormatter.cs", label="yield return\r\n                converter(taken, pt.Property.PropertyType, pt.Specification.ConversionType.IsScalar())\r\n                    .Return(\r\n                        converted => Tuple.Create(pt.WithValue(Maybe.Just(converted)), Maybe.Nothing<Error>()),\r\n                        Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                            pt, Maybe.Just<Error>(new BadFormatConversionError(NameInfo.EmptyName))));", span="54-59"];
m11_30 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="RussianFormatter.cs", label="yield return value;", span="63-63"];
m11_19 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="RussianFormatter.cs", label="var pt = specProps.First()", span="34-34"];
m11_20 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="RussianFormatter.cs", label="var taken = values.Take(pt.Specification.CountOfMaxNumberOfValues().Return(n => n, values.Count()))", span="35-35"];
m11_24 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="RussianFormatter.cs", label="var next = specProps.Skip(1).FirstOrDefault(s => s.Specification.IsValue()).ToMaybe()", span="43-43"];
m11_25 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="RussianFormatter.cs", label="pt.Specification.Max.IsJust()\r\n                && next.IsNothing()\r\n                && values.Skip(taken.Count()).Any()", span="44-46"];
m11_21 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="RussianFormatter.cs", label="taken.Empty()", span="36-36"];
m11_31 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="RussianFormatter.cs", label="Exit CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", span="25-25"];
m11_49 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="RussianFormatter.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="68-68"];
m11_45 [cluster="CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", file="RussianFormatter.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", span="144-144"];
m11_50 [cluster="System.Type.IsScalar()", file="RussianFormatter.cs", label="Entry System.Type.IsScalar()", span="44-44"];
m11_0 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", file="RussianFormatter.cs", label="Entry Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", span="7-7"];
m11_1 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=red, community=0, file="RussianFormatter.cs", label="17: var mod100 = number%100", span="9-9"];
m11_2 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=red, community=0, file="RussianFormatter.cs", label="2: mod100/10 != 1", span="10-10"];
m11_3 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=red, community=0, file="RussianFormatter.cs", label="17: var mod10 = number%10", span="12-12"];
m11_44 [cluster="CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", file="RussianFormatter.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", span="149-149"];
m11_51 [cluster="Unk.converter", file="RussianFormatter.cs", label="Entry Unk.converter", span=""];
m11_32 [cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="RussianFormatter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="62-62"];
m11_60 [cluster="CommandLine.Core.Specification.IsValue()", file="RussianFormatter.cs", label="Entry CommandLine.Core.Specification.IsValue()", span="15-15"];
m11_48 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="RussianFormatter.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="316-316"];
m11_39 [cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="RussianFormatter.cs", label="Entry CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", span="67-67"];
m11_66 [cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="RussianFormatter.cs", label="return specification.Min.IsJust()\r\n                ? Maybe.Just<Error>(new SequenceOutOfRangeError(NameInfo.EmptyName))\r\n                : Maybe.Nothing<Error>();", span="69-71"];
m11_67 [cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="RussianFormatter.cs", label="Exit CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", span="67-67"];
m11_6 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=red, community=0, file="RussianFormatter.cs", label="14: mod10 > 1 && mod10 < 5", span="17-17"];
m11_65 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="RussianFormatter.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63"];
m11_47 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="RussianFormatter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m11_37 [cluster="Unk.Take", file="RussianFormatter.cs", label="Entry Unk.Take", span=""];
m11_34 [cluster="CommandLine.Core.Specification.CountOfMaxNumberOfValues()", file="RussianFormatter.cs", label="Entry CommandLine.Core.Specification.CountOfMaxNumberOfValues()", span="51-51"];
m11_40 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="RussianFormatter.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m11_5 [cluster="Unk.Select", color=red, community=0, file="RussianFormatter.cs", label="13: Entry Unk.Select", span=""];
m11_7 [cluster="Unk.Create", color=red, community=0, file="RussianFormatter.cs", label="17: Entry Unk.Create", span=""];
m11_8 [cluster="lambda expression", color=red, community=0, file="RussianFormatter.cs", label="5: Entry lambda expression", span="19-19"];
m11_9 [cluster="lambda expression", color=green, community=0, file="RussianFormatter.cs", label="2: pe.Item1", span="19-19"];
m11_64 [cluster="CommandLine.Core.SpecificationProperty.WithValue(CommandLine.Infrastructure.Maybe<object>)", file="RussianFormatter.cs", label="Entry CommandLine.Core.SpecificationProperty.WithValue(CommandLine.Infrastructure.Maybe<object>)", span="18-18"];
m11_46 [cluster="Unk.Count", file="RussianFormatter.cs", label="Entry Unk.Count", span=""];
m11_52 [cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", file="RussianFormatter.cs", label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="305-305"];
m11_33 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="RussianFormatter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m11_57 [cluster="lambda expression", file="RussianFormatter.cs", label="Entry lambda expression", span="43-43"];
m11_11 [cluster="lambda expression", file="RussianFormatter.cs", label="Entry lambda expression", span="20-20"];
m11_14 [cluster="lambda expression", file="RussianFormatter.cs", label="Entry lambda expression", span="21-21"];
m11_10 [cluster="lambda expression", file="RussianFormatter.cs", label="Exit lambda expression", span="19-19"];
m11_13 [cluster="lambda expression", file="RussianFormatter.cs", label="Exit lambda expression", span="20-20"];
m11_12 [cluster="lambda expression", file="RussianFormatter.cs", label="pe.Item2", span="20-20"];
m11_16 [cluster="lambda expression", file="RussianFormatter.cs", label="Exit lambda expression", span="21-21"];
m11_15 [cluster="lambda expression", file="RussianFormatter.cs", label="e.Value", span="21-21"];
m11_61 [cluster="lambda expression", file="RussianFormatter.cs", label="Entry lambda expression", span="57-57"];
m11_62 [cluster="lambda expression", file="RussianFormatter.cs", label="Tuple.Create(pt.WithValue(Maybe.Just(converted)), Maybe.Nothing<Error>())", span="57-57"];
m11_54 [cluster="lambda expression", file="RussianFormatter.cs", label="Entry lambda expression", span="35-35"];
m11_63 [cluster="lambda expression", file="RussianFormatter.cs", label="Exit lambda expression", span="57-57"];
m11_56 [cluster="lambda expression", file="RussianFormatter.cs", label="Exit lambda expression", span="35-35"];
m11_55 [cluster="lambda expression", file="RussianFormatter.cs", label=n, span="35-35"];
m11_58 [cluster="lambda expression", file="RussianFormatter.cs", label="s.Specification.IsValue()", span="43-43"];
m11_59 [cluster="lambda expression", file="RussianFormatter.cs", label="Exit lambda expression", span="43-43"];
m11_42 [cluster="Unk.FirstOrDefault", file="RussianFormatter.cs", label="Entry Unk.FirstOrDefault", span=""];
m11_35 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="RussianFormatter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m11_38 [cluster="Unk.Empty", file="RussianFormatter.cs", label="Entry Unk.Empty", span=""];
m11_53 [cluster="CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="RussianFormatter.cs", label="Entry CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="100-100"];
m11_41 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="RussianFormatter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m11_36 [cluster="Unk.Return", file="RussianFormatter.cs", label="Entry Unk.Return", span=""];
m11_68 [file="RussianFormatter.cs", label=pt, span=""];
m15_12 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncator(string, int, string)", file="SpanishNumberToWordsConverter.cs", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncator(string, int, string)", span="51-51"];
m15_13 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncator(string, int, string)", file="SpanishNumberToWordsConverter.cs", label="Assert.Equal(expectedOutput, input.Truncate(length, Truncator.FixedNumberOfWords))", span="53-53"];
m15_14 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncator(string, int, string)", file="SpanishNumberToWordsConverter.cs", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncator(string, int, string)", span="51-51"];
m15_15 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationString(string, int, string, string)", file="SpanishNumberToWordsConverter.cs", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithTruncationString(string, int, string, string)", span="65-65"];
m15_16 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationString(string, int, string, string)", file="SpanishNumberToWordsConverter.cs", label="Assert.Equal(expectedOutput, input.Truncate(length, truncationString))", span="67-67"];
m15_17 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationString(string, int, string, string)", file="SpanishNumberToWordsConverter.cs", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithTruncationString(string, int, string, string)", span="65-65"];
m15_8 [cluster="string.Truncate(int, Humanizer.ITruncator)", file="SpanishNumberToWordsConverter.cs", label="Entry string.Truncate(int, Humanizer.ITruncator)", span="27-27"];
m15_22 [cluster="string.Truncate(int, string, Humanizer.ITruncator)", file="SpanishNumberToWordsConverter.cs", label="Entry string.Truncate(int, string, Humanizer.ITruncator)", span="52-52"];
m15_4 [cluster="Unk.Equal", file="SpanishNumberToWordsConverter.cs", label="Entry Unk.Equal", span=""];
m15_26 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)", file="SpanishNumberToWordsConverter.cs", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)", span="110-110"];
m15_27 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)", file="SpanishNumberToWordsConverter.cs", label="Assert.Equal(expectedOutput, input.Truncate(length, truncationString, Truncator.FixedNumberOfWords))", span="112-112"];
m15_28 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)", file="SpanishNumberToWordsConverter.cs", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)", span="110-110"];
m15_5 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncator(string, int, string)", file="SpanishNumberToWordsConverter.cs", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncator(string, int, string)", span="26-26"];
m15_6 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncator(string, int, string)", file="SpanishNumberToWordsConverter.cs", label="Assert.Equal(expectedOutput, input.Truncate(length, Truncator.FixedLength))", span="28-28"];
m15_7 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncator(string, int, string)", file="SpanishNumberToWordsConverter.cs", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncator(string, int, string)", span="26-26"];
m15_23 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncator(string, int, string, string)", file="SpanishNumberToWordsConverter.cs", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncator(string, int, string, string)", span="95-95"];
m15_24 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncator(string, int, string, string)", file="SpanishNumberToWordsConverter.cs", label="Assert.Equal(expectedOutput, input.Truncate(length, truncationString, Truncator.FixedNumberOfCharacters))", span="97-97"];
m15_25 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncator(string, int, string, string)", file="SpanishNumberToWordsConverter.cs", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncator(string, int, string, string)", span="95-95"];
m15_0 [cluster="Humanizer.Tests.TruncatorTests.Truncate(string, int, string)", file="SpanishNumberToWordsConverter.cs", label="Entry Humanizer.Tests.TruncatorTests.Truncate(string, int, string)", span="14-14"];
m15_1 [cluster="Humanizer.Tests.TruncatorTests.Truncate(string, int, string)", file="SpanishNumberToWordsConverter.cs", label="Assert.Equal(expectedOutput, input.Truncate(length))", span="16-16"];
m15_2 [cluster="Humanizer.Tests.TruncatorTests.Truncate(string, int, string)", file="SpanishNumberToWordsConverter.cs", label="Exit Humanizer.Tests.TruncatorTests.Truncate(string, int, string)", span="14-14"];
m15_18 [cluster="string.Truncate(int, string)", file="SpanishNumberToWordsConverter.cs", label="Entry string.Truncate(int, string)", span="39-39"];
m15_3 [cluster="string.Truncate(int)", file="SpanishNumberToWordsConverter.cs", label="Entry string.Truncate(int)", span="15-15"];
m15_19 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncator(string, int, string, string)", file="SpanishNumberToWordsConverter.cs", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncator(string, int, string, string)", span="80-80"];
m15_20 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncator(string, int, string, string)", file="SpanishNumberToWordsConverter.cs", label="Assert.Equal(expectedOutput, input.Truncate(length, truncationString, Truncator.FixedLength))", span="82-82"];
m15_21 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncator(string, int, string, string)", file="SpanishNumberToWordsConverter.cs", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncator(string, int, string, string)", span="80-80"];
m15_9 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", file="SpanishNumberToWordsConverter.cs", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", span="38-38"];
m15_10 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", file="SpanishNumberToWordsConverter.cs", label="Assert.Equal(expectedOutput, input.Truncate(length, Truncator.FixedNumberOfCharacters))", span="40-40"];
m15_11 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", file="SpanishNumberToWordsConverter.cs", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", span="38-38"];
m2_0 -> m2_1  [color=green, key=0, style=solid];
m2_1 -> m2_2  [color=green, key=0, style=solid];
m2_1 -> m2_3  [color=green, key=2, style=dotted];
m2_2 -> m2_0  [color=blue, key=0, style=bold];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_3  [key=2, style=dotted];
m2_6 -> m2_4  [color=blue, key=0, style=bold];
m7_2 -> m7_3  [key=0, style=solid];
m7_3 -> m7_2  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_0  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_3  [key=2, style=dotted];
m8_1 -> m8_4  [key=2, style=dotted];
m8_2 -> m8_0  [color=blue, key=0, style=bold];
m9_24 -> m9_25  [key=0, style=solid];
m9_25 -> m9_26  [key=0, style=solid];
m9_25 -> m9_27  [key=2, style=dotted];
m9_26 -> m9_24  [color=blue, key=0, style=bold];
m9_20 -> m9_21  [key=0, style=solid];
m9_21 -> m9_22  [key=0, style=solid];
m9_21 -> m9_23  [key=2, style=dotted];
m9_22 -> m9_20  [color=blue, key=0, style=bold];
m9_16 -> m9_17  [color=red, key=0, style=solid];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_3  [key=2, style=dotted];
m9_2 -> m9_0  [color=blue, key=0, style=bold];
m9_4 -> m9_5  [key=0, style=solid];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_7  [key=2, style=dotted];
m9_6 -> m9_4  [color=blue, key=0, style=bold];
m9_8 -> m9_9  [key=0, style=solid];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_11  [key=2, style=dotted];
m9_10 -> m9_8  [color=blue, key=0, style=bold];
m9_12 -> m9_13  [key=0, style=solid];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_15  [key=2, style=dotted];
m9_14 -> m9_12  [color=blue, key=0, style=bold];
m9_17 -> m9_18  [color=red, key=0, style=solid];
m9_17 -> m9_19  [color=red, key=2, style=dotted];
m9_18 -> m9_16  [color=blue, key=0, style=bold];
m11_4 -> m11_17  [key=0, style=solid];
m11_4 -> m11_18  [color=crimson, key=0, style=bold];
m11_4 -> m11_22  [color=crimson, key=0, style=bold];
m11_4 -> m11_23  [color=crimson, key=0, style=bold];
m11_4 -> m11_26  [color=crimson, key=0, style=bold];
m11_4 -> m11_27  [color=crimson, key=0, style=bold];
m11_4 -> m11_28  [color=crimson, key=0, style=bold];
m11_4 -> m11_30  [color=crimson, key=0, style=bold];
m11_4 -> m11_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m11_4 -> m11_20  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m11_4 -> m11_24  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m11_4 -> m11_25  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m11_4 -> m11_29  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m11_4 -> m11_5  [color=red, key=0, style=solid];
m11_4 -> m11_6  [color=red, key=0, style=solid];
m11_29 -> m11_4  [key=2, style=dotted];
m11_29 -> m11_30  [key=0, style=solid];
m11_29 -> m11_31  [key=0, style=solid];
m11_29 -> m11_41  [key=2, style=dotted];
m11_29 -> m11_46  [key=2, style=dotted];
m11_17 -> m11_18  [key=0, style=solid];
m11_17 -> m11_19  [key=0, style=solid];
m11_17 -> m11_32  [key=2, style=dotted];
m11_18 -> m11_19  [key=0, style=solid];
m11_22 -> m11_23  [key=0, style=solid];
m11_22 -> m11_39  [key=2, style=dotted];
m11_22 -> m11_40  [key=2, style=dotted];
m11_23 -> m11_24  [key=0, style=solid];
m11_26 -> m11_27  [key=0, style=solid];
m11_26 -> m11_48  [key=2, style=dotted];
m11_26 -> m11_49  [key=2, style=dotted];
m11_26 -> m11_40  [key=2, style=dotted];
m11_27 -> m11_28  [key=0, style=solid];
m11_28 -> m11_29  [key=0, style=solid];
m11_28 -> m11_50  [key=2, style=dotted];
m11_28 -> m11_51  [key=2, style=dotted];
m11_28 -> m11_52  [key=2, style=dotted];
m11_28 -> m11_49  [key=2, style=dotted];
m11_28 -> m11_40  [key=2, style=dotted];
m11_28 -> m11_53  [key=2, style=dotted];
m11_28 -> m11_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_30 -> m11_29  [key=0, style=solid];
m11_19 -> m11_22  [color=darkseagreen4, key=1, label=pt, style=dashed];
m11_19 -> m11_26  [color=darkseagreen4, key=1, label=pt, style=dashed];
m11_19 -> m11_28  [color=darkseagreen4, key=1, label=pt, style=dashed];
m11_19 -> m11_20  [key=0, style=solid];
m11_19 -> m11_33  [key=2, style=dotted];
m11_19 -> m11_25  [color=darkseagreen4, key=1, label=pt, style=dashed];
m11_19 -> m11_62  [color=darkseagreen4, key=1, label=pt, style=dashed];
m11_20 -> m11_29  [color=darkseagreen4, key=1, label=taken, style=dashed];
m11_20 -> m11_28  [color=darkseagreen4, key=1, label=taken, style=dashed];
m11_20 -> m11_21  [key=0, style=solid];
m11_20 -> m11_34  [key=2, style=dotted];
m11_20 -> m11_35  [key=2, style=dotted];
m11_20 -> m11_36  [key=2, style=dotted];
m11_20 -> m11_37  [key=2, style=dotted];
m11_20 -> m11_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_20 -> m11_25  [color=darkseagreen4, key=1, label=taken, style=dashed];
m11_24 -> m11_25  [key=0, style=solid];
m11_24 -> m11_41  [key=2, style=dotted];
m11_24 -> m11_42  [key=2, style=dotted];
m11_24 -> m11_43  [key=2, style=dotted];
m11_24 -> m11_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_25 -> m11_26  [key=0, style=solid];
m11_25 -> m11_28  [key=0, style=solid];
m11_25 -> m11_44  [key=2, style=dotted];
m11_25 -> m11_45  [key=2, style=dotted];
m11_25 -> m11_46  [key=2, style=dotted];
m11_25 -> m11_41  [key=2, style=dotted];
m11_25 -> m11_47  [key=2, style=dotted];
m11_21 -> m11_22  [key=0, style=solid];
m11_21 -> m11_24  [key=0, style=solid];
m11_21 -> m11_38  [key=2, style=dotted];
m11_31 -> m11_4  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [color=red, key=0, style=solid];
m11_0 -> m11_3  [color=red, key=1, label=int, style=dashed];
m11_0 -> m11_5  [color=red, key=1, label=string, style=dashed];
m11_0 -> m11_7  [color=red, key=1, label=string, style=dashed];
m11_0 -> m11_8  [color=red, key=1, label=string, style=dashed];
m11_0 -> m11_0  [color=darkorchid, key=3, label="method methodReturn string GetResourceKey", style=bold];
m11_1 -> m11_2  [color=red, key=0, style=solid];
m11_1 -> m11_4  [color=green, key=2, style=dotted];
m11_2 -> m11_3  [color=red, key=0, style=solid];
m11_2 -> m11_5  [color=green, key=2, style=dotted];
m11_2 -> m11_6  [color=green, key=2, style=dotted];
m11_2 -> m11_7  [color=green, key=2, style=dotted];
m11_2 -> m11_8  [color=green, key=1, label="lambda expression", style=dashed];
m11_2 -> m11_11  [color=green, key=1, label="lambda expression", style=dashed];
m11_2 -> m11_14  [color=green, key=1, label="lambda expression", style=dashed];
m11_3 -> m11_0  [color=blue, key=0, style=bold];
m11_3 -> m11_4  [color=red, key=0, style=solid];
m11_3 -> m11_6  [color=red, key=1, label=mod10, style=dashed];
m11_39 -> m11_66  [key=0, style=solid];
m11_66 -> m11_48  [key=2, style=dotted];
m11_66 -> m11_49  [key=2, style=dotted];
m11_66 -> m11_44  [key=2, style=dotted];
m11_66 -> m11_67  [key=0, style=solid];
m11_66 -> m11_65  [key=2, style=dotted];
m11_67 -> m11_39  [color=blue, key=0, style=bold];
m11_6 -> m11_7  [color=red, key=0, style=solid];
m11_6 -> m11_8  [color=red, key=0, style=solid];
m11_5 -> m11_9  [color=red, key=0, style=solid];
m11_7 -> m11_9  [color=red, key=0, style=solid];
m11_8 -> m11_9  [color=green, key=0, style=solid];
m11_9 -> m11_0  [color=blue, key=0, style=bold];
m11_9 -> m11_10  [color=green, key=0, style=solid];
m11_57 -> m11_58  [key=0, style=solid];
m11_11 -> m11_12  [key=0, style=solid];
m11_14 -> m11_15  [key=0, style=solid];
m11_10 -> m11_8  [color=blue, key=0, style=bold];
m11_13 -> m11_11  [color=blue, key=0, style=bold];
m11_12 -> m11_13  [key=0, style=solid];
m11_16 -> m11_14  [color=blue, key=0, style=bold];
m11_15 -> m11_16  [key=0, style=solid];
m11_61 -> m11_62  [key=0, style=solid];
m11_62 -> m11_40  [key=2, style=dotted];
m11_62 -> m11_49  [key=2, style=dotted];
m11_62 -> m11_63  [key=0, style=solid];
m11_62 -> m11_64  [key=2, style=dotted];
m11_62 -> m11_65  [key=2, style=dotted];
m11_54 -> m11_55  [key=0, style=solid];
m11_63 -> m11_61  [color=blue, key=0, style=bold];
m11_56 -> m11_54  [color=blue, key=0, style=bold];
m11_55 -> m11_56  [key=0, style=solid];
m11_58 -> m11_59  [key=0, style=solid];
m11_58 -> m11_60  [key=2, style=dotted];
m11_59 -> m11_57  [color=blue, key=0, style=bold];
m11_68 -> m11_62  [color=darkseagreen4, key=1, label=pt, style=dashed];
m15_12 -> m15_13  [key=0, style=solid];
m15_13 -> m15_14  [key=0, style=solid];
m15_13 -> m15_8  [key=2, style=dotted];
m15_13 -> m15_4  [key=2, style=dotted];
m15_14 -> m15_12  [color=blue, key=0, style=bold];
m15_15 -> m15_16  [key=0, style=solid];
m15_16 -> m15_17  [key=0, style=solid];
m15_16 -> m15_18  [key=2, style=dotted];
m15_16 -> m15_4  [key=2, style=dotted];
m15_17 -> m15_15  [color=blue, key=0, style=bold];
m15_26 -> m15_27  [key=0, style=solid];
m15_27 -> m15_28  [key=0, style=solid];
m15_27 -> m15_22  [key=2, style=dotted];
m15_27 -> m15_4  [key=2, style=dotted];
m15_28 -> m15_26  [color=blue, key=0, style=bold];
m15_5 -> m15_6  [key=0, style=solid];
m15_6 -> m15_7  [key=0, style=solid];
m15_6 -> m15_8  [key=2, style=dotted];
m15_6 -> m15_4  [key=2, style=dotted];
m15_7 -> m15_5  [color=blue, key=0, style=bold];
m15_23 -> m15_24  [key=0, style=solid];
m15_24 -> m15_25  [key=0, style=solid];
m15_24 -> m15_22  [key=2, style=dotted];
m15_24 -> m15_4  [key=2, style=dotted];
m15_25 -> m15_23  [color=blue, key=0, style=bold];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_3  [key=2, style=dotted];
m15_1 -> m15_4  [key=2, style=dotted];
m15_2 -> m15_0  [color=blue, key=0, style=bold];
m15_19 -> m15_20  [key=0, style=solid];
m15_20 -> m15_21  [key=0, style=solid];
m15_20 -> m15_22  [key=2, style=dotted];
m15_20 -> m15_4  [key=2, style=dotted];
m15_21 -> m15_19  [color=blue, key=0, style=bold];
m15_9 -> m15_10  [key=0, style=solid];
m15_10 -> m15_11  [key=0, style=solid];
m15_10 -> m15_8  [key=2, style=dotted];
m15_10 -> m15_4  [key=2, style=dotted];
m15_11 -> m15_9  [color=blue, key=0, style=bold];
}
