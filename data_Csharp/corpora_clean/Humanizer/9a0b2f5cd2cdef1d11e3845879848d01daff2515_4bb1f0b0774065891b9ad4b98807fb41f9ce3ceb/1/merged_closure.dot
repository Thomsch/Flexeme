digraph  {
m1_9 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="DateHumanizeTests.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="17-17"];
m1_35 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="DateHumanizeTests.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m1_48 [cluster="CommandLine.Core.Specification.IsOption()", file="DateHumanizeTests.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="11-11"];
m1_0 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="11-11"];
m1_2 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="11-11"];
m1_16 [cluster="Unk.Any", file="DateHumanizeTests.cs", label="Entry Unk.Any", span=""];
m1_21 [cluster="System.Func<T, TResult>.Invoke(T)", file="DateHumanizeTests.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m1_22 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", span="51-51"];
m1_29 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="var min = specification.Min", span="60-60"];
m1_30 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="var max = specification.Max", span="61-61"];
m1_26 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="TypeDescriptorKind.Scalar", span="57-57"];
m1_28 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="TypeDescriptorKind.Sequence", span="59-59"];
m1_27 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="return  Maybe.Just(1);", span="58-58"];
m1_31 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="min >= 0 && max >= 0", span="62-62"];
m1_33 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="return Maybe.Nothing<int>();", span="69-69"];
m1_34 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", span="51-51"];
m1_3 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="16-16"];
m1_4 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="return specification.Tag == SpecificationType.Value;", span="18-18"];
m1_5 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="16-16"];
m1_37 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="DateHumanizeTests.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71"];
m1_38 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="DateHumanizeTests.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66"];
m1_39 [cluster="CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", span="72-72"];
m1_40 [cluster="CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="return specification.Min == -1;", span="74-74"];
m1_41 [cluster="CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", span="72-72"];
m1_45 [cluster="CommandLine.Core.SpecificationExtensions.GetSetName(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.GetSetName(CommandLine.Core.Specification)", span="82-82"];
m1_46 [cluster="CommandLine.Core.SpecificationExtensions.GetSetName(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="return specification.IsOption()\r\n                ? ((OptionSpecification)specification).SetName\r\n                : string.Empty;", span="84-86"];
m1_47 [cluster="CommandLine.Core.SpecificationExtensions.GetSetName(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.GetSetName(CommandLine.Core.Specification)", span="82-82"];
m1_42 [cluster="CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", span="77-77"];
m1_43 [cluster="CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="return specification.Max == -1;", span="79-79"];
m1_44 [cluster="CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", file="DateHumanizeTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", span="77-77"];
m1_36 [cluster="System.Type.ToDescriptorKind()", file="DateHumanizeTests.cs", label="Entry System.Type.ToDescriptorKind()", span="22-22"];
m1_17 [cluster="System.ApplicationException.ApplicationException(string)", file="DateHumanizeTests.cs", label="Entry System.ApplicationException.ApplicationException(string)", span="0-0"];
m1_18 [cluster="lambda expression", file="DateHumanizeTests.cs", label="Entry lambda expression", span="42-42"];
m1_19 [cluster="lambda expression", file="DateHumanizeTests.cs", label="guard.Item1(spec)", span="42-42"];
m1_20 [cluster="lambda expression", file="DateHumanizeTests.cs", label="Exit lambda expression", span="42-42"];
m1_10 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="DateHumanizeTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="38-38"];
m1_11 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="DateHumanizeTests.cs", label=guardsLookup, span="40-40"];
m1_12 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="DateHumanizeTests.cs", label="specifications.Any(spec => guard.Item1(spec))", span="42-42"];
m1_14 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="DateHumanizeTests.cs", label="return specifications;", span="48-48"];
m1_15 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="DateHumanizeTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="38-38"];
m1_6 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", file="DateHumanizeTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", span="21-21"];
m1_8 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", file="DateHumanizeTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", span="21-21"];
m1_49 [file="DateHumanizeTests.cs", label=guard, span=""];
m2_37 [cluster="string.Humanize()", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry string.Humanize()", span="42-42"];
m2_31 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m2_19 [cluster="Unk.All", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry Unk.All", span=""];
m2_32 [cluster="System.Func<T, TResult>.Invoke(T)", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m2_4 [cluster="string.Join(string, params string[])", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m2_53 [cluster="string.ToUpper()", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry string.ToUpper()", span="0-0"];
m2_54 [cluster="string.Substring(int, int)", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry string.Substring(int, int)", span="0-0"];
m2_12 [cluster="Unk.Aggregate", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry Unk.Aggregate", span=""];
m2_52 [cluster="System.Globalization.TextInfo.ToTitleCase(string)", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry System.Globalization.TextInfo.ToTitleCase(string)", span="0-0"];
m2_14 [cluster="Unk.Substring", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry Unk.Substring", span=""];
m2_56 [cluster="string.Concat(string, string)", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry string.Concat(string, string)", span="0-0"];
m2_24 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry Humanizer.StringHumanizeExtensions.Humanize(string)", span="42-42"];
m2_25 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="DefaultDateTimeHumanizeStrategy.cs", label="input.All(Char.IsUpper)", span="45-45"];
m2_26 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="DefaultDateTimeHumanizeStrategy.cs", label="return input;", span="46-46"];
m2_27 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="DefaultDateTimeHumanizeStrategy.cs", label="input.Contains('_') || input.Contains('-')", span="48-48"];
m2_28 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="DefaultDateTimeHumanizeStrategy.cs", label="return FromUnderscoreDashSeparatedWords(input);", span="49-49"];
m2_29 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="DefaultDateTimeHumanizeStrategy.cs", label="return FromPascalCase(input);", span="51-51"];
m2_30 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="DefaultDateTimeHumanizeStrategy.cs", label="Exit Humanizer.StringHumanizeExtensions.Humanize(string)", span="42-42"];
m2_21 [cluster="lambda expression", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry lambda expression", span="30-30"];
m2_0 [cluster="lambda expression", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry lambda expression", span="9-9"];
m2_1 [cluster="lambda expression", file="DefaultDateTimeHumanizeStrategy.cs", label="string.Join('' '', methodName.Split(new[] { '_', '-' }))", span="9-9"];
m2_2 [cluster="lambda expression", file="DefaultDateTimeHumanizeStrategy.cs", label="Exit lambda expression", span="9-9"];
m2_16 [cluster="lambda expression", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry lambda expression", span="26-29"];
m2_17 [cluster="lambda expression", file="DefaultDateTimeHumanizeStrategy.cs", label="word.All(Char.IsUpper) && word.Length > 1\r\n                        ? word\r\n                        : word.ToLower()", span="27-29"];
m2_18 [cluster="lambda expression", file="DefaultDateTimeHumanizeStrategy.cs", label="Exit lambda expression", span="26-29"];
m2_22 [cluster="lambda expression", file="DefaultDateTimeHumanizeStrategy.cs", label="res + '' '' + word", span="30-30"];
m2_23 [cluster="lambda expression", file="DefaultDateTimeHumanizeStrategy.cs", label="Exit lambda expression", span="30-30"];
m2_57 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m2_11 [cluster="Unk.Select", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry Unk.Select", span=""];
m2_3 [cluster="string.Split(params char[])", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry string.Split(params char[])", span="0-0"];
m2_33 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", span="60-60"];
m2_34 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs", label="var humanizedString = input.Humanize()", span="62-62"];
m2_35 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs", label="return ApplyCase(humanizedString, casing);", span="64-64"];
m2_36 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs", label="Exit Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", span="60-60"];
m2_15 [cluster="Unk.Replace", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry Unk.Replace", span=""];
m2_38 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", span="73-73"];
m2_39 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs", label=casing, span="75-75"];
m2_41 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs", label="return CultureInfo.CurrentCulture.TextInfo.ToTitleCase(input);", span="78-78"];
m2_43 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs", label="return input.ToLower();", span="81-81"];
m2_45 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs", label="return input.ToUpper();", span="84-84"];
m2_47 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs", label="input.Length >= 1", span="87-87"];
m2_48 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs", label="return string.Concat(input.Substring(0, 1).ToUpper(), input.Substring(1));", span="88-88"];
m2_49 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs", label="return input.ToUpper();", span="90-90"];
m2_40 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs", label="LetterCasing.Title", span="77-77"];
m2_42 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs", label="LetterCasing.LowerCase", span="80-80"];
m2_44 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs", label="LetterCasing.AllCaps", span="83-83"];
m2_46 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs", label="LetterCasing.Sentence", span="86-86"];
m2_50 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs", label="throw new ArgumentOutOfRangeException(''casing'');", span="93-93"];
m2_51 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="DefaultDateTimeHumanizeStrategy.cs", label="Exit Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", span="73-73"];
m2_5 [cluster="Humanizer.StringHumanizeExtensions.FromPascalCase(string)", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry Humanizer.StringHumanizeExtensions.FromPascalCase(string)", span="22-22"];
m2_6 [cluster="Humanizer.StringHumanizeExtensions.FromPascalCase(string)", file="DefaultDateTimeHumanizeStrategy.cs", label="var result = PascalCaseWordBoundaryRegex\r\n                .Split(name)\r\n                .Select(word =>\r\n                    word.All(Char.IsUpper) && word.Length > 1\r\n                        ? word\r\n                        : word.ToLower())\r\n                .Aggregate((res, word) => res + '' '' + word)", span="24-30"];
m2_7 [cluster="Humanizer.StringHumanizeExtensions.FromPascalCase(string)", file="DefaultDateTimeHumanizeStrategy.cs", label="result = Char.ToUpper(result[0]) +\r\n                result.Substring(1, result.Length - 1)", span="32-33"];
m2_8 [cluster="Humanizer.StringHumanizeExtensions.FromPascalCase(string)", file="DefaultDateTimeHumanizeStrategy.cs", label="return result.Replace('' i '', '' I '');", span="34-34"];
m2_9 [cluster="Humanizer.StringHumanizeExtensions.FromPascalCase(string)", file="DefaultDateTimeHumanizeStrategy.cs", label="Exit Humanizer.StringHumanizeExtensions.FromPascalCase(string)", span="22-22"];
m2_13 [cluster="Unk.ToUpper", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry Unk.ToUpper", span=""];
m2_10 [cluster="System.Text.RegularExpressions.Regex.Split(string)", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry System.Text.RegularExpressions.Regex.Split(string)", span="0-0"];
m2_20 [cluster="string.ToLower()", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry string.ToLower()", span="0-0"];
m2_55 [cluster="string.Substring(int)", file="DefaultDateTimeHumanizeStrategy.cs", label="Entry string.Substring(int)", span="0-0"];
m4_0 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="Entry Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", span="33-33"];
m4_23 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", color=green, community=0, file="DutchNumberToWordsConverter.cs", label="word += units + (trema ? ''�n'' : ''en'') + tens", prediction=0, span="72-72"];
m4_18 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="var tens = TensMap[number / 10]", span="66-66"];
m4_5 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="var word = ''''", span="41-41"];
m4_10 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="word += m.Name", span="51-51"];
m4_11 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="word += Convert(divided) + m.Prefix + m.Name", span="53-53"];
m4_14 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="word += m.Postfix", span="57-57"];
m4_21 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="var units = UnitsMap[unit]", span="70-70"];
m4_22 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="var trema = units.EndsWith(''e'')", span="71-71"];
m4_25 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="return word;", span="79-79"];
m4_12 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="number %= m.Value", span="55-55"];
m4_16 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="number < 20", span="62-62"];
m4_19 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="var unit = number % 10", span="67-67"];
m4_24 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="word += tens", span="75-75"];
m4_3 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="number < 0", span="38-38"];
m4_6 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label=Hunderds, span="43-43"];
m4_17 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="word += UnitsMap[number]", span="63-63"];
m4_9 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="divided == 1 && !m.DisplayOneUnit", span="50-50"];
m4_7 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="var divided = number / m.Value", span="45-45"];
m4_13 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="number > 0", span="56-56"];
m4_20 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="unit > 0", span="68-68"];
m4_15 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="number > 0", span="60-60"];
m4_4 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="return string.Format(''min {0}'', Convert(-number));", span="39-39"];
m4_1 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="number == 0", span="35-35"];
m4_8 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="divided <= 0", span="47-47"];
m4_2 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="return UnitsMap[0];", span="36-36"];
m4_26 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="DutchNumberToWordsConverter.cs", label="Exit Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", span="33-33"];
m4_28 [cluster="string.EndsWith(string)", file="DutchNumberToWordsConverter.cs", label="Entry string.EndsWith(string)", span="0-0"];
m4_27 [cluster="string.Format(string, object)", file="DutchNumberToWordsConverter.cs", label="Entry string.Format(string, object)", span="0-0"];
m4_38 [cluster="Unk.Substring", file="DutchNumberToWordsConverter.cs", label="Entry Unk.Substring", span=""];
m4_29 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="DutchNumberToWordsConverter.cs", label="Entry Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", span="91-91"];
m4_30 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="DutchNumberToWordsConverter.cs", label="var word = Convert(number)", span="93-93"];
m4_31 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="DutchNumberToWordsConverter.cs", label="OrdinalExceptions.Where(kv => word.EndsWith(kv.Key))", span="95-95"];
m4_32 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="DutchNumberToWordsConverter.cs", label="return word.Substring(0, word.Length - kv.Key.Length) + kv.Value;", span="98-98"];
m4_33 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="DutchNumberToWordsConverter.cs", label="word.LastIndexOfAny(EndingCharForSte) == (word.Length - 1)", span="104-104"];
m4_34 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="DutchNumberToWordsConverter.cs", label="return word + ''ste'';", span="105-105"];
m4_35 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="DutchNumberToWordsConverter.cs", label="return word + ''de'';", span="107-107"];
m4_36 [cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="DutchNumberToWordsConverter.cs", label="Exit Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", span="91-91"];
m4_39 [cluster="string.LastIndexOfAny(char[])", file="DutchNumberToWordsConverter.cs", label="Entry string.LastIndexOfAny(char[])", span="0-0"];
m4_40 [cluster="lambda expression", file="DutchNumberToWordsConverter.cs", label="Entry lambda expression", span="95-95"];
m4_41 [cluster="lambda expression", file="DutchNumberToWordsConverter.cs", label="word.EndsWith(kv.Key)", span="95-95"];
m4_42 [cluster="lambda expression", file="DutchNumberToWordsConverter.cs", label="Exit lambda expression", span="95-95"];
m4_37 [cluster="Unk.Where", file="DutchNumberToWordsConverter.cs", label="Entry Unk.Where", span=""];
m4_43 [file="DutchNumberToWordsConverter.cs", label="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter", span=""];
m4_44 [file="DutchNumberToWordsConverter.cs", label=word, span=""];
m6_4 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="FixedLengthTruncator.cs", label="return value;", span="13-13"];
m6_5 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", color=green, community=0, file="FixedLengthTruncator.cs", label="truncationString == null || truncationString.Length > length", prediction=1, span="15-15"];
m6_8 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="FixedLengthTruncator.cs", label="Exit Humanizer.FixedLengthTruncator.Truncate(string, int, string)", span="7-7"];
m6_9 [cluster="string.Substring(int, int)", color=green, community=0, file="FixedLengthTruncator.cs", label="Entry string.Substring(int, int)", prediction=2, span="0-0"];
m6_10 [cluster="Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", file="FixedLengthTruncator.cs", label="Exit Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", span="25-25"];
m6_0 [cluster="Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", file="FixedLengthTruncator.cs", label="Entry Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", span="5-5"];
m6_1 [cluster="Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", color=green, community=0, file="FixedLengthTruncator.cs", label="return new DateTime(date.Year, date.Month, date.Day, hour, min, second, millisecond);", prediction=3, span="7-7"];
m6_3 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, int)", file="FixedLengthTruncator.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int)", span="0-0"];
m6_2 [cluster="Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", file="FixedLengthTruncator.cs", label="Exit Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", span="5-5"];
m6_11 [cluster="Humanizer.PrepositionsExtensions.In(System.DateTime, int)", file="FixedLengthTruncator.cs", label="Entry Humanizer.PrepositionsExtensions.In(System.DateTime, int)", span="36-36"];
m6_12 [cluster="Humanizer.PrepositionsExtensions.In(System.DateTime, int)", file="FixedLengthTruncator.cs", label="return new DateTime(year, date.Month, date.Day, date.Hour, date.Minute, date.Second, date.Millisecond);", span="38-38"];
m6_13 [cluster="Humanizer.PrepositionsExtensions.In(System.DateTime, int)", file="FixedLengthTruncator.cs", label="Exit Humanizer.PrepositionsExtensions.In(System.DateTime, int)", span="36-36"];
m8_0 [cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs", label="Entry Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", span="10-10"];
m8_1 [cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", color=green, community=0, file="FixedNumberOfWordsTruncator.cs", label="value == null", prediction=4, span="12-12"];
m8_2 [cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs", label="return null;", span="13-13"];
}
