digraph  {
n37 [label="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter", span=""];
n0 [label="Entry Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", span="11-11", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
n1 [label="number == 0", span="13-13", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n3 [label="number < 0", span="16-16", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n4 [label="return string.Format(''menos {0}'', Convert(Math.Abs(number)));", span="17-17", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n6 [label="(number / 1000000000) > 0", span="21-21", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n7 [label="parts.Add(number/1000000000 > 2\r\n                    ? string.Format(''{0} bilh천es'', Convert(number/1000000000))\r\n                    : string.Format(''{0} bilh찾o'', Convert(number/1000000000)))", span="23-25", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=1];
n8 [label="number %= 1000000000", span="27-27", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n9 [label="(number / 1000000) > 0", span="30-30", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n10 [label="parts.Add(number/1000000 > 2\r\n                    ? string.Format(''{0} milh천es'', Convert(number/1000000))\r\n                    : string.Format(''{0} milh찾o'', Convert(number/1000000)))", span="32-34", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=1];
n11 [label="number %= 1000000", span="36-36", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n12 [label="(number / 1000) > 0", span="39-39", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n13 [label="parts.Add(number/1000 == 1 ? ''mil'' : string.Format(''{0} mil'', Convert(number/1000)))", span="41-41", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n14 [label="number %= 1000", span="42-42", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n15 [label="(number / 100) > 0", span="45-45", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n16 [label="number == 100", span="47-47", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n18 [label="parts.Add(PortugueseHundredsMap[(number / 100)])", span="50-50", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n19 [label="number %= 100", span="52-52", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n20 [label="number > 0", span="55-55", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n23 [label="number < 20", span="60-60", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n24 [label="parts.Add(PortugueseUnitsMap[number])", span="61-61", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n25 [label="var lastPart = PortugueseTensMap[number / 10]", span="64-64", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n26 [label="(number % 10) > 0", span="65-65", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n27 [label="lastPart += string.Format('' e {0}'', PortugueseUnitsMap[number % 10])", span="66-66", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n2 [label="return ''zero'';", span="14-14", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n5 [label="var parts = new List<string>()", span="19-19", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n33 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()"];
n17 [label="parts.Add(parts.Count > 0 ? ''e cem'' : ''cem'')", span="48-48", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n21 [label="parts.Count != 0", span="57-57", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n22 [label="parts.Add(''e'')", span="58-58", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n28 [label="parts.Add(lastPart)", span="68-68", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n29 [label="return string.Join('' '', parts.ToArray());", span="72-72", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0];
n32 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)"];
n34 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)"];
n30 [label="Exit Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", span="11-11", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)"];
n31 [label="Entry System.Math.Abs(int)", span="0-0", cluster="System.Math.Abs(int)"];
n35 [label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0", cluster="System.Collections.Generic.List<T>.ToArray()"];
n36 [label="Entry string.Join(string, params string[])", span="0-0", cluster="string.Join(string, params string[])"];
m2_6 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="NumberToWordsTests.cs"];
m2_0 [label="Entry Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.NumberToWordsTests()", span="7-7", cluster="Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.NumberToWordsTests()", file="NumberToWordsTests.cs"];
m2_1 [label="Exit Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.NumberToWordsTests()", span="7-7", cluster="Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.NumberToWordsTests()", file="NumberToWordsTests.cs"];
m2_2 [label="Entry Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.ToWords(int, string)", span="41-41", cluster="Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.ToWords(int, string)", file="NumberToWordsTests.cs"];
m2_3 [label="Assert.Equal(expected, number.ToWords())", span="43-43", cluster="Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.ToWords(int, string)", color=red, community=0, file="NumberToWordsTests.cs"];
m2_4 [label="Exit Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.ToWords(int, string)", span="41-41", cluster="Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.ToWords(int, string)", file="NumberToWordsTests.cs"];
m2_5 [label="Entry int.ToWords()", span="28-28", cluster="int.ToWords()", file="NumberToWordsTests.cs"];
m3_5 [label="Entry Humanizer.Localisation.GrammaticalNumber.RussianGrammaticalNumberDetector.Detect(int)", span="4-4", cluster="Humanizer.Localisation.GrammaticalNumber.RussianGrammaticalNumberDetector.Detect(int)", file="RussianFormatter.cs"];
m3_0 [label="Entry Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", span="8-8", cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", file="RussianFormatter.cs"];
m3_1 [label="var grammaticalNumber = RussianGrammaticalNumberDetector.Detect(number)", span="10-10", cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=green, community=0, file="RussianFormatter.cs"];
m3_3 [label="return resourceKey + suffix;", span="12-12", cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=green, community=0, file="RussianFormatter.cs"];
m3_2 [label="var suffix = _map[(int) grammaticalNumber]", span="11-11", cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=green, community=0, file="RussianFormatter.cs"];
m3_4 [label="Exit Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", span="8-8", cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", file="RussianFormatter.cs"];
m3_6 [label="Humanizer.Localisation.Formatters.RussianFormatter", span="", file="RussianFormatter.cs"];
m5_0 [label="Entry Humanizer.Localisation.GrammaticalNumber.RussianGrammaticalNumberDetector.Detect(int)", span="4-4", cluster="Humanizer.Localisation.GrammaticalNumber.RussianGrammaticalNumberDetector.Detect(int)", file="RussianGrammaticalNumberDetector.cs"];
m5_1 [label="var tens = number % 100 / 10", span="6-6", cluster="Humanizer.Localisation.GrammaticalNumber.RussianGrammaticalNumberDetector.Detect(int)", color=red, community=0, file="RussianGrammaticalNumberDetector.cs"];
m5_3 [label="var unity = number % 10", span="9-9", cluster="Humanizer.Localisation.GrammaticalNumber.RussianGrammaticalNumberDetector.Detect(int)", color=red, community=0, file="RussianGrammaticalNumberDetector.cs"];
m5_2 [label="tens != 1", span="7-7", cluster="Humanizer.Localisation.GrammaticalNumber.RussianGrammaticalNumberDetector.Detect(int)", color=red, community=0, file="RussianGrammaticalNumberDetector.cs"];
m5_8 [label="return RussianGrammaticalNumber.Plural;", span="18-18", cluster="Humanizer.Localisation.GrammaticalNumber.RussianGrammaticalNumberDetector.Detect(int)", color=red, community=0, file="RussianGrammaticalNumberDetector.cs"];
m5_4 [label="unity == 1", span="11-11", cluster="Humanizer.Localisation.GrammaticalNumber.RussianGrammaticalNumberDetector.Detect(int)", color=red, community=0, file="RussianGrammaticalNumberDetector.cs"];
m5_6 [label="unity > 1 && unity < 5", span="14-14", cluster="Humanizer.Localisation.GrammaticalNumber.RussianGrammaticalNumberDetector.Detect(int)", color=red, community=0, file="RussianGrammaticalNumberDetector.cs"];
m5_5 [label="return RussianGrammaticalNumber.Singular;", span="12-12", cluster="Humanizer.Localisation.GrammaticalNumber.RussianGrammaticalNumberDetector.Detect(int)", color=red, community=0, file="RussianGrammaticalNumberDetector.cs"];
m5_7 [label="return RussianGrammaticalNumber.Paucal;", span="15-15", cluster="Humanizer.Localisation.GrammaticalNumber.RussianGrammaticalNumberDetector.Detect(int)", color=red, community=0, file="RussianGrammaticalNumberDetector.cs"];
m5_9 [label="Exit Humanizer.Localisation.GrammaticalNumber.RussianGrammaticalNumberDetector.Detect(int)", span="4-4", cluster="Humanizer.Localisation.GrammaticalNumber.RussianGrammaticalNumberDetector.Detect(int)", file="RussianGrammaticalNumberDetector.cs"];
n37 -> n4  [key=1, style=dashed, color=red, label="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter"];
n37 -> n7  [key=1, style=dashed, color=red, label="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter"];
n37 -> n10  [key=1, style=dashed, color=red, label="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter"];
n37 -> n13  [key=1, style=dashed, color=red, label="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter"];
n0 -> n1  [key=0, style=solid, color=red];
n0 -> n3  [key=1, style=dashed, color=red, label=int];
n0 -> n4  [key=1, style=dashed, color=red, label=int];
n0 -> n6  [key=1, style=dashed, color=red, label=int];
n0 -> n7  [key=1, style=dashed, color=red, label=int];
n0 -> n8  [key=1, style=dashed, color=red, label=int];
n0 -> n9  [key=1, style=dashed, color=red, label=int];
n0 -> n10  [key=1, style=dashed, color=red, label=int];
n0 -> n11  [key=1, style=dashed, color=red, label=int];
n0 -> n12  [key=1, style=dashed, color=red, label=int];
n0 -> n13  [key=1, style=dashed, color=red, label=int];
n0 -> n14  [key=1, style=dashed, color=red, label=int];
n0 -> n15  [key=1, style=dashed, color=red, label=int];
n0 -> n16  [key=1, style=dashed, color=red, label=int];
n0 -> n18  [key=1, style=dashed, color=red, label=int];
n0 -> n19  [key=1, style=dashed, color=red, label=int];
n0 -> n20  [key=1, style=dashed, color=red, label=int];
n0 -> n23  [key=1, style=dashed, color=red, label=int];
n0 -> n24  [key=1, style=dashed, color=red, label=int];
n0 -> n25  [key=1, style=dashed, color=red, label=int];
n0 -> n26  [key=1, style=dashed, color=red, label=int];
n0 -> n27  [key=1, style=dashed, color=red, label=int];
n0 -> n2  [key=3, color=red, style=bold, label="method methodReturn string Convert"];
n1 -> n2  [key=0, style=solid, color=red];
n1 -> n3  [key=0, style=solid, color=red];
n3 -> n4  [key=0, style=solid, color=red];
n3 -> n5  [key=0, style=solid, color=red];
n4 -> n30  [key=0, style=solid, color=red];
n4 -> n31  [key=2, style=dotted, color=red];
n4 -> n0  [key=2, style=dotted, color=red];
n4 -> n32  [key=2, style=dotted, color=red];
n6 -> n7  [key=0, style=solid, color=red];
n6 -> n9  [key=0, style=solid, color=red];
n7 -> n8  [key=0, style=solid, color=red];
n7 -> n0  [key=2, style=dotted, color=red];
n7 -> n32  [key=2, style=dotted, color=red];
n7 -> n34  [key=2, style=dotted, color=red];
n8 -> n9  [key=0, style=solid, color=red];
n8 -> n8  [key=1, style=dashed, color=red, label=int];
n8 -> n10  [key=1, style=dashed, color=red, label=int];
n8 -> n11  [key=1, style=dashed, color=red, label=int];
n8 -> n12  [key=1, style=dashed, color=red, label=int];
n8 -> n13  [key=1, style=dashed, color=red, label=int];
n8 -> n14  [key=1, style=dashed, color=red, label=int];
n8 -> n15  [key=1, style=dashed, color=red, label=int];
n8 -> n16  [key=1, style=dashed, color=red, label=int];
n8 -> n18  [key=1, style=dashed, color=red, label=int];
n8 -> n19  [key=1, style=dashed, color=red, label=int];
n8 -> n20  [key=1, style=dashed, color=red, label=int];
n8 -> n23  [key=1, style=dashed, color=red, label=int];
n8 -> n24  [key=1, style=dashed, color=red, label=int];
n8 -> n25  [key=1, style=dashed, color=red, label=int];
n8 -> n26  [key=1, style=dashed, color=red, label=int];
n8 -> n27  [key=1, style=dashed, color=red, label=int];
n9 -> n10  [key=0, style=solid, color=red];
n9 -> n12  [key=0, style=solid, color=red];
n10 -> n11  [key=0, style=solid, color=red];
n10 -> n0  [key=2, style=dotted, color=red];
n10 -> n32  [key=2, style=dotted, color=red];
n10 -> n34  [key=2, style=dotted, color=red];
n11 -> n12  [key=0, style=solid, color=red];
n11 -> n11  [key=1, style=dashed, color=red, label=int];
n11 -> n13  [key=1, style=dashed, color=red, label=int];
n11 -> n14  [key=1, style=dashed, color=red, label=int];
n11 -> n15  [key=1, style=dashed, color=red, label=int];
n11 -> n16  [key=1, style=dashed, color=red, label=int];
n11 -> n18  [key=1, style=dashed, color=red, label=int];
n11 -> n19  [key=1, style=dashed, color=red, label=int];
n11 -> n20  [key=1, style=dashed, color=red, label=int];
n11 -> n23  [key=1, style=dashed, color=red, label=int];
n11 -> n24  [key=1, style=dashed, color=red, label=int];
n11 -> n25  [key=1, style=dashed, color=red, label=int];
n11 -> n26  [key=1, style=dashed, color=red, label=int];
n11 -> n27  [key=1, style=dashed, color=red, label=int];
n12 -> n13  [key=0, style=solid, color=red];
n12 -> n15  [key=0, style=solid, color=red];
n13 -> n14  [key=0, style=solid, color=red];
n13 -> n0  [key=2, style=dotted, color=red];
n13 -> n32  [key=2, style=dotted, color=red];
n13 -> n34  [key=2, style=dotted, color=red];
n14 -> n15  [key=0, style=solid, color=red];
n14 -> n14  [key=1, style=dashed, color=red, label=int];
n14 -> n16  [key=1, style=dashed, color=red, label=int];
n14 -> n18  [key=1, style=dashed, color=red, label=int];
n14 -> n19  [key=1, style=dashed, color=red, label=int];
n14 -> n20  [key=1, style=dashed, color=red, label=int];
n14 -> n23  [key=1, style=dashed, color=red, label=int];
n14 -> n24  [key=1, style=dashed, color=red, label=int];
n14 -> n25  [key=1, style=dashed, color=red, label=int];
n14 -> n26  [key=1, style=dashed, color=red, label=int];
n14 -> n27  [key=1, style=dashed, color=red, label=int];
n15 -> n16  [key=0, style=solid, color=red];
n15 -> n20  [key=0, style=solid, color=red];
n16 -> n17  [key=0, style=solid, color=red];
n16 -> n18  [key=0, style=solid, color=red];
n18 -> n19  [key=0, style=solid, color=red];
n18 -> n34  [key=2, style=dotted, color=red];
n19 -> n20  [key=0, style=solid, color=red];
n19 -> n19  [key=1, style=dashed, color=red, label=int];
n19 -> n23  [key=1, style=dashed, color=red, label=int];
n19 -> n24  [key=1, style=dashed, color=red, label=int];
n19 -> n25  [key=1, style=dashed, color=red, label=int];
n19 -> n26  [key=1, style=dashed, color=red, label=int];
n19 -> n27  [key=1, style=dashed, color=red, label=int];
n20 -> n21  [key=0, style=solid, color=red];
n20 -> n29  [key=0, style=solid, color=red];
n23 -> n24  [key=0, style=solid, color=red];
n23 -> n25  [key=0, style=solid, color=red];
n24 -> n29  [key=0, style=solid, color=red];
n24 -> n34  [key=2, style=dotted, color=red];
n25 -> n26  [key=0, style=solid, color=red];
n25 -> n27  [key=1, style=dashed, color=red, label=lastPart];
n25 -> n28  [key=1, style=dashed, color=red, label=lastPart];
n26 -> n27  [key=0, style=solid, color=red];
n26 -> n28  [key=0, style=solid, color=red];
n27 -> n28  [key=0, style=solid, color=red];
n27 -> n32  [key=2, style=dotted, color=red];
n27 -> n27  [key=1, style=dashed, color=red, label=lastPart];
n2 -> n30  [key=0, style=solid, color=red];
n5 -> n6  [key=0, style=solid, color=red];
n5 -> n33  [key=2, style=dotted, color=red];
n5 -> n7  [key=1, style=dashed, color=red, label=parts];
n5 -> n10  [key=1, style=dashed, color=red, label=parts];
n5 -> n13  [key=1, style=dashed, color=red, label=parts];
n5 -> n17  [key=1, style=dashed, color=red, label=parts];
n5 -> n18  [key=1, style=dashed, color=red, label=parts];
n5 -> n21  [key=1, style=dashed, color=red, label=parts];
n5 -> n22  [key=1, style=dashed, color=red, label=parts];
n5 -> n24  [key=1, style=dashed, color=red, label=parts];
n5 -> n28  [key=1, style=dashed, color=red, label=parts];
n5 -> n29  [key=1, style=dashed, color=red, label=parts];
n17 -> n19  [key=0, style=solid, color=red];
n17 -> n34  [key=2, style=dotted, color=red];
n21 -> n22  [key=0, style=solid, color=red];
n21 -> n23  [key=0, style=solid, color=red];
n22 -> n23  [key=0, style=solid, color=red];
n22 -> n34  [key=2, style=dotted, color=red];
n28 -> n29  [key=0, style=solid, color=red];
n28 -> n34  [key=2, style=dotted, color=red];
n29 -> n30  [key=0, style=solid, color=red];
n29 -> n35  [key=2, style=dotted, color=red];
n29 -> n36  [key=2, style=dotted, color=red];
n30 -> n0  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_0  [key=0, style=bold, color=blue];
m2_2 -> m2_3  [key=0, style=solid, color=red];
m2_3 -> m2_4  [key=0, style=solid, color=red];
m2_3 -> m2_5  [key=2, style=dotted, color=red];
m2_3 -> m2_6  [key=2, style=dotted, color=red];
m2_4 -> m2_2  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid, color=green];
m3_0 -> m3_3  [key=1, style=dashed, color=green, label=string];
m3_1 -> m3_2  [key=0, style=solid, color=green];
m3_1 -> m3_5  [key=2, style=dotted, color=green];
m3_3 -> m3_4  [key=0, style=solid, color=green];
m3_2 -> m3_3  [key=0, style=solid, color=green];
m3_4 -> m3_0  [key=0, style=bold, color=blue];
m3_6 -> m3_2  [key=1, style=dashed, color=green, label="Humanizer.Localisation.Formatters.RussianFormatter"];
m5_0 -> m5_1  [key=0, style=solid, color=red];
m5_0 -> m5_3  [key=1, style=dashed, color=red, label=int];
m5_0 -> m5_5  [key=3, color=red, style=bold, label="method methodReturn Humanizer.Localisation.GrammaticalNumber.RussianGrammaticalNumber Detect"];
m5_0 -> m5_7  [key=3, color=red, style=bold, label="method methodReturn Humanizer.Localisation.GrammaticalNumber.RussianGrammaticalNumber Detect"];
m5_0 -> m5_8  [key=3, color=red, style=bold, label="method methodReturn Humanizer.Localisation.GrammaticalNumber.RussianGrammaticalNumber Detect"];
m5_1 -> m5_2  [key=0, style=solid, color=red];
m5_3 -> m5_4  [key=0, style=solid, color=red];
m5_3 -> m5_6  [key=1, style=dashed, color=red, label=unity];
m5_2 -> m5_3  [key=0, style=solid, color=red];
m5_2 -> m5_8  [key=0, style=solid, color=red];
m5_8 -> m5_9  [key=0, style=solid, color=red];
m5_4 -> m5_5  [key=0, style=solid, color=red];
m5_4 -> m5_6  [key=0, style=solid, color=red];
m5_6 -> m5_7  [key=0, style=solid, color=red];
m5_6 -> m5_8  [key=0, style=solid, color=red];
m5_5 -> m5_9  [key=0, style=solid, color=red];
m5_7 -> m5_9  [key=0, style=solid, color=red];
m5_9 -> m5_0  [key=0, style=bold, color=blue];
}
