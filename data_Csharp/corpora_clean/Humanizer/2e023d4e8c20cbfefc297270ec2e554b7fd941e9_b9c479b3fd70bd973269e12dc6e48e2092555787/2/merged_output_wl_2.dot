digraph  {
n37 [label="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter", span=""];
n0 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="Entry Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", span="11-11"];
n1 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="2: number == 0", span="13-13"];
n3 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="0: number < 0", span="16-16"];
n4 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="0: return string.Format(''menos {0}'', Convert(Math.Abs(number)));", span="17-17"];
n6 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="0: (number / 1000000000) > 0", span="21-21"];
n7 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=1, label="0: parts.Add(number/1000000000 > 2\r\n                    ? string.Format(''{0} bilh천es'', Convert(number/1000000000))\r\n                    : string.Format(''{0} bilh찾o'', Convert(number/1000000000)))", span="23-25"];
n8 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="0: number %= 1000000000", span="27-27"];
n9 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="0: (number / 1000000) > 0", span="30-30"];
n10 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=1, label="0: parts.Add(number/1000000 > 2\r\n                    ? string.Format(''{0} milh천es'', Convert(number/1000000))\r\n                    : string.Format(''{0} milh찾o'', Convert(number/1000000)))", span="32-34"];
n11 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="0: number %= 1000000", span="36-36"];
n12 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="0: (number / 1000) > 0", span="39-39"];
n13 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="0: parts.Add(number/1000 == 1 ? ''mil'' : string.Format(''{0} mil'', Convert(number/1000)))", span="41-41"];
n14 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="0: number %= 1000", span="42-42"];
n15 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="0: (number / 100) > 0", span="45-45"];
n16 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="3: number == 100", span="47-47"];
n18 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="2: parts.Add(PortugueseHundredsMap[(number / 100)])", span="50-50"];
n19 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="0: number %= 100", span="52-52"];
n20 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="0: number > 0", span="55-55"];
n23 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="0: number < 20", span="60-60"];
n24 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="0: parts.Add(PortugueseUnitsMap[number])", span="61-61"];
n25 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="0: var lastPart = PortugueseTensMap[number / 10]", span="64-64"];
n26 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="0: (number % 10) > 0", span="65-65"];
n27 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="0: lastPart += string.Format('' e {0}'', PortugueseUnitsMap[number % 10])", span="66-66"];
n2 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="1: return ''zero'';", span="14-14"];
n5 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="0: var parts = new List<string>()", span="19-19"];
n33 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n17 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="2: parts.Add(parts.Count > 0 ? ''e cem'' : ''cem'')", span="48-48"];
n21 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="2: parts.Count != 0", span="57-57"];
n22 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="2: parts.Add(''e'')", span="58-58"];
n28 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="0: parts.Add(lastPart)", span="68-68"];
n29 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", color=red, community=0, label="0: return string.Join('' '', parts.ToArray());", span="72-72"];
n32 [cluster="string.Format(string, object)", label="Entry string.Format(string, object)", span="0-0"];
n34 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n30 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", label="Exit Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.Convert(int)", span="11-11"];
n31 [cluster="System.Math.Abs(int)", label="Entry System.Math.Abs(int)", span="0-0"];
n35 [cluster="System.Collections.Generic.List<T>.ToArray()", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
n36 [cluster="string.Join(string, params string[])", label="Entry string.Join(string, params string[])", span="0-0"];
m2_6 [cluster="Unk.Equal", file="NumberToWordsTests.cs", label="Entry Unk.Equal", span=""];
m2_0 [cluster="Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.NumberToWordsTests()", file="NumberToWordsTests.cs", label="Entry Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.NumberToWordsTests()", span="7-7"];
m2_1 [cluster="Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.NumberToWordsTests()", file="NumberToWordsTests.cs", label="Exit Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.NumberToWordsTests()", span="7-7"];
m2_2 [cluster="Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.ToWords(int, string)", file="NumberToWordsTests.cs", label="Entry Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.ToWords(int, string)", span="41-41"];
m2_3 [cluster="Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.ToWords(int, string)", color=red, community=0, file="NumberToWordsTests.cs", label="0: Assert.Equal(expected, number.ToWords())", span="43-43"];
m2_4 [cluster="Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.ToWords(int, string)", file="NumberToWordsTests.cs", label="Exit Humanizer.Tests.Localisation.ptBR.NumberToWordsTests.ToWords(int, string)", span="41-41"];
m2_5 [cluster="int.ToWords()", file="NumberToWordsTests.cs", label="Entry int.ToWords()", span="28-28"];
m3_5 [cluster="Humanizer.Localisation.GrammaticalNumber.RussianGrammaticalNumberDetector.Detect(int)", file="RussianFormatter.cs", label="Entry Humanizer.Localisation.GrammaticalNumber.RussianGrammaticalNumberDetector.Detect(int)", span="4-4"];
m3_0 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", file="RussianFormatter.cs", label="Entry Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", span="8-8"];
m3_1 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=green, community=0, file="RussianFormatter.cs", label="0: var grammaticalNumber = RussianGrammaticalNumberDetector.Detect(number)", span="10-10"];
m3_3 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=green, community=0, file="RussianFormatter.cs", label="1: return resourceKey + suffix;", span="12-12"];
m3_2 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=green, community=0, file="RussianFormatter.cs", label="2: var suffix = _map[(int) grammaticalNumber]", span="11-11"];
m3_4 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", file="RussianFormatter.cs", label="Exit Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", span="8-8"];
m3_6 [file="RussianFormatter.cs", label="Humanizer.Localisation.Formatters.RussianFormatter", span=""];
m5_0 [cluster="Humanizer.Localisation.GrammaticalNumber.RussianGrammaticalNumberDetector.Detect(int)", file="RussianGrammaticalNumberDetector.cs", label="Entry Humanizer.Localisation.GrammaticalNumber.RussianGrammaticalNumberDetector.Detect(int)", span="4-4"];
m5_1 [cluster="Humanizer.Localisation.GrammaticalNumber.RussianGrammaticalNumberDetector.Detect(int)", color=red, community=0, file="RussianGrammaticalNumberDetector.cs", label="0: var tens = number % 100 / 10", span="6-6"];
m5_3 [cluster="Humanizer.Localisation.GrammaticalNumber.RussianGrammaticalNumberDetector.Detect(int)", color=red, community=0, file="RussianGrammaticalNumberDetector.cs", label="0: var unity = number % 10", span="9-9"];
m5_2 [cluster="Humanizer.Localisation.GrammaticalNumber.RussianGrammaticalNumberDetector.Detect(int)", color=red, community=0, file="RussianGrammaticalNumberDetector.cs", label="2: tens != 1", span="7-7"];
m5_8 [cluster="Humanizer.Localisation.GrammaticalNumber.RussianGrammaticalNumberDetector.Detect(int)", color=red, community=0, file="RussianGrammaticalNumberDetector.cs", label="1: return RussianGrammaticalNumber.Plural;", span="18-18"];
m5_4 [cluster="Humanizer.Localisation.GrammaticalNumber.RussianGrammaticalNumberDetector.Detect(int)", color=red, community=0, file="RussianGrammaticalNumberDetector.cs", label="2: unity == 1", span="11-11"];
m5_6 [cluster="Humanizer.Localisation.GrammaticalNumber.RussianGrammaticalNumberDetector.Detect(int)", color=red, community=0, file="RussianGrammaticalNumberDetector.cs", label="2: unity > 1 && unity < 5", span="14-14"];
m5_5 [cluster="Humanizer.Localisation.GrammaticalNumber.RussianGrammaticalNumberDetector.Detect(int)", color=red, community=0, file="RussianGrammaticalNumberDetector.cs", label="1: return RussianGrammaticalNumber.Singular;", span="12-12"];
m5_7 [cluster="Humanizer.Localisation.GrammaticalNumber.RussianGrammaticalNumberDetector.Detect(int)", color=red, community=0, file="RussianGrammaticalNumberDetector.cs", label="1: return RussianGrammaticalNumber.Paucal;", span="15-15"];
m5_9 [cluster="Humanizer.Localisation.GrammaticalNumber.RussianGrammaticalNumberDetector.Detect(int)", file="RussianGrammaticalNumberDetector.cs", label="Exit Humanizer.Localisation.GrammaticalNumber.RussianGrammaticalNumberDetector.Detect(int)", span="4-4"];
n37 -> n4  [color=red, key=1, label="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter", style=dashed];
n37 -> n7  [color=red, key=1, label="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter", style=dashed];
n37 -> n10  [color=red, key=1, label="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter", style=dashed];
n37 -> n13  [color=red, key=1, label="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter", style=dashed];
n0 -> n1  [color=red, key=0, style=solid];
n0 -> n3  [color=red, key=1, label=int, style=dashed];
n0 -> n4  [color=red, key=1, label=int, style=dashed];
n0 -> n6  [color=red, key=1, label=int, style=dashed];
n0 -> n7  [color=red, key=1, label=int, style=dashed];
n0 -> n8  [color=red, key=1, label=int, style=dashed];
n0 -> n9  [color=red, key=1, label=int, style=dashed];
n0 -> n10  [color=red, key=1, label=int, style=dashed];
n0 -> n11  [color=red, key=1, label=int, style=dashed];
n0 -> n12  [color=red, key=1, label=int, style=dashed];
n0 -> n13  [color=red, key=1, label=int, style=dashed];
n0 -> n14  [color=red, key=1, label=int, style=dashed];
n0 -> n15  [color=red, key=1, label=int, style=dashed];
n0 -> n16  [color=red, key=1, label=int, style=dashed];
n0 -> n18  [color=red, key=1, label=int, style=dashed];
n0 -> n19  [color=red, key=1, label=int, style=dashed];
n0 -> n20  [color=red, key=1, label=int, style=dashed];
n0 -> n23  [color=red, key=1, label=int, style=dashed];
n0 -> n24  [color=red, key=1, label=int, style=dashed];
n0 -> n25  [color=red, key=1, label=int, style=dashed];
n0 -> n26  [color=red, key=1, label=int, style=dashed];
n0 -> n27  [color=red, key=1, label=int, style=dashed];
n0 -> n2  [color=red, key=3, label="method methodReturn string Convert", style=bold];
n1 -> n2  [color=red, key=0, style=solid];
n1 -> n3  [color=red, key=0, style=solid];
n3 -> n4  [color=red, key=0, style=solid];
n3 -> n5  [color=red, key=0, style=solid];
n4 -> n30  [color=red, key=0, style=solid];
n4 -> n31  [color=red, key=2, style=dotted];
n4 -> n0  [color=red, key=2, style=dotted];
n4 -> n32  [color=red, key=2, style=dotted];
n6 -> n7  [color=red, key=0, style=solid];
n6 -> n9  [color=red, key=0, style=solid];
n7 -> n8  [color=red, key=0, style=solid];
n7 -> n0  [color=red, key=2, style=dotted];
n7 -> n32  [color=red, key=2, style=dotted];
n7 -> n34  [color=red, key=2, style=dotted];
n8 -> n9  [color=red, key=0, style=solid];
n8 -> n8  [color=red, key=1, label=int, style=dashed];
n8 -> n10  [color=red, key=1, label=int, style=dashed];
n8 -> n11  [color=red, key=1, label=int, style=dashed];
n8 -> n12  [color=red, key=1, label=int, style=dashed];
n8 -> n13  [color=red, key=1, label=int, style=dashed];
n8 -> n14  [color=red, key=1, label=int, style=dashed];
n8 -> n15  [color=red, key=1, label=int, style=dashed];
n8 -> n16  [color=red, key=1, label=int, style=dashed];
n8 -> n18  [color=red, key=1, label=int, style=dashed];
n8 -> n19  [color=red, key=1, label=int, style=dashed];
n8 -> n20  [color=red, key=1, label=int, style=dashed];
n8 -> n23  [color=red, key=1, label=int, style=dashed];
n8 -> n24  [color=red, key=1, label=int, style=dashed];
n8 -> n25  [color=red, key=1, label=int, style=dashed];
n8 -> n26  [color=red, key=1, label=int, style=dashed];
n8 -> n27  [color=red, key=1, label=int, style=dashed];
n9 -> n10  [color=red, key=0, style=solid];
n9 -> n12  [color=red, key=0, style=solid];
n10 -> n11  [color=red, key=0, style=solid];
n10 -> n0  [color=red, key=2, style=dotted];
n10 -> n32  [color=red, key=2, style=dotted];
n10 -> n34  [color=red, key=2, style=dotted];
n11 -> n12  [color=red, key=0, style=solid];
n11 -> n11  [color=red, key=1, label=int, style=dashed];
n11 -> n13  [color=red, key=1, label=int, style=dashed];
n11 -> n14  [color=red, key=1, label=int, style=dashed];
n11 -> n15  [color=red, key=1, label=int, style=dashed];
n11 -> n16  [color=red, key=1, label=int, style=dashed];
n11 -> n18  [color=red, key=1, label=int, style=dashed];
n11 -> n19  [color=red, key=1, label=int, style=dashed];
n11 -> n20  [color=red, key=1, label=int, style=dashed];
n11 -> n23  [color=red, key=1, label=int, style=dashed];
n11 -> n24  [color=red, key=1, label=int, style=dashed];
n11 -> n25  [color=red, key=1, label=int, style=dashed];
n11 -> n26  [color=red, key=1, label=int, style=dashed];
n11 -> n27  [color=red, key=1, label=int, style=dashed];
n12 -> n13  [color=red, key=0, style=solid];
n12 -> n15  [color=red, key=0, style=solid];
n13 -> n14  [color=red, key=0, style=solid];
n13 -> n0  [color=red, key=2, style=dotted];
n13 -> n32  [color=red, key=2, style=dotted];
n13 -> n34  [color=red, key=2, style=dotted];
n14 -> n15  [color=red, key=0, style=solid];
n14 -> n14  [color=red, key=1, label=int, style=dashed];
n14 -> n16  [color=red, key=1, label=int, style=dashed];
n14 -> n18  [color=red, key=1, label=int, style=dashed];
n14 -> n19  [color=red, key=1, label=int, style=dashed];
n14 -> n20  [color=red, key=1, label=int, style=dashed];
n14 -> n23  [color=red, key=1, label=int, style=dashed];
n14 -> n24  [color=red, key=1, label=int, style=dashed];
n14 -> n25  [color=red, key=1, label=int, style=dashed];
n14 -> n26  [color=red, key=1, label=int, style=dashed];
n14 -> n27  [color=red, key=1, label=int, style=dashed];
n15 -> n16  [color=red, key=0, style=solid];
n15 -> n20  [color=red, key=0, style=solid];
n16 -> n17  [color=red, key=0, style=solid];
n16 -> n18  [color=red, key=0, style=solid];
n18 -> n19  [color=red, key=0, style=solid];
n18 -> n34  [color=red, key=2, style=dotted];
n19 -> n20  [color=red, key=0, style=solid];
n19 -> n19  [color=red, key=1, label=int, style=dashed];
n19 -> n23  [color=red, key=1, label=int, style=dashed];
n19 -> n24  [color=red, key=1, label=int, style=dashed];
n19 -> n25  [color=red, key=1, label=int, style=dashed];
n19 -> n26  [color=red, key=1, label=int, style=dashed];
n19 -> n27  [color=red, key=1, label=int, style=dashed];
n20 -> n21  [color=red, key=0, style=solid];
n20 -> n29  [color=red, key=0, style=solid];
n23 -> n24  [color=red, key=0, style=solid];
n23 -> n25  [color=red, key=0, style=solid];
n24 -> n29  [color=red, key=0, style=solid];
n24 -> n34  [color=red, key=2, style=dotted];
n25 -> n26  [color=red, key=0, style=solid];
n25 -> n27  [color=red, key=1, label=lastPart, style=dashed];
n25 -> n28  [color=red, key=1, label=lastPart, style=dashed];
n26 -> n27  [color=red, key=0, style=solid];
n26 -> n28  [color=red, key=0, style=solid];
n27 -> n28  [color=red, key=0, style=solid];
n27 -> n32  [color=red, key=2, style=dotted];
n27 -> n27  [color=red, key=1, label=lastPart, style=dashed];
n2 -> n30  [color=red, key=0, style=solid];
n5 -> n6  [color=red, key=0, style=solid];
n5 -> n33  [color=red, key=2, style=dotted];
n5 -> n7  [color=red, key=1, label=parts, style=dashed];
n5 -> n10  [color=red, key=1, label=parts, style=dashed];
n5 -> n13  [color=red, key=1, label=parts, style=dashed];
n5 -> n17  [color=red, key=1, label=parts, style=dashed];
n5 -> n18  [color=red, key=1, label=parts, style=dashed];
n5 -> n21  [color=red, key=1, label=parts, style=dashed];
n5 -> n22  [color=red, key=1, label=parts, style=dashed];
n5 -> n24  [color=red, key=1, label=parts, style=dashed];
n5 -> n28  [color=red, key=1, label=parts, style=dashed];
n5 -> n29  [color=red, key=1, label=parts, style=dashed];
n17 -> n19  [color=red, key=0, style=solid];
n17 -> n34  [color=red, key=2, style=dotted];
n21 -> n22  [color=red, key=0, style=solid];
n21 -> n23  [color=red, key=0, style=solid];
n22 -> n23  [color=red, key=0, style=solid];
n22 -> n34  [color=red, key=2, style=dotted];
n28 -> n29  [color=red, key=0, style=solid];
n28 -> n34  [color=red, key=2, style=dotted];
n29 -> n30  [color=red, key=0, style=solid];
n29 -> n35  [color=red, key=2, style=dotted];
n29 -> n36  [color=red, key=2, style=dotted];
n30 -> n0  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_0  [color=blue, key=0, style=bold];
m2_2 -> m2_3  [color=red, key=0, style=solid];
m2_3 -> m2_4  [color=red, key=0, style=solid];
m2_3 -> m2_5  [color=red, key=2, style=dotted];
m2_3 -> m2_6  [color=red, key=2, style=dotted];
m2_4 -> m2_2  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [color=green, key=0, style=solid];
m3_0 -> m3_3  [color=green, key=1, label=string, style=dashed];
m3_1 -> m3_2  [color=green, key=0, style=solid];
m3_1 -> m3_5  [color=green, key=2, style=dotted];
m3_3 -> m3_4  [color=green, key=0, style=solid];
m3_2 -> m3_3  [color=green, key=0, style=solid];
m3_4 -> m3_0  [color=blue, key=0, style=bold];
m3_6 -> m3_2  [color=green, key=1, label="Humanizer.Localisation.Formatters.RussianFormatter", style=dashed];
m5_0 -> m5_1  [color=red, key=0, style=solid];
m5_0 -> m5_3  [color=red, key=1, label=int, style=dashed];
m5_0 -> m5_5  [color=red, key=3, label="method methodReturn Humanizer.Localisation.GrammaticalNumber.RussianGrammaticalNumber Detect", style=bold];
m5_0 -> m5_7  [color=red, key=3, label="method methodReturn Humanizer.Localisation.GrammaticalNumber.RussianGrammaticalNumber Detect", style=bold];
m5_0 -> m5_8  [color=red, key=3, label="method methodReturn Humanizer.Localisation.GrammaticalNumber.RussianGrammaticalNumber Detect", style=bold];
m5_1 -> m5_2  [color=red, key=0, style=solid];
m5_3 -> m5_4  [color=red, key=0, style=solid];
m5_3 -> m5_6  [color=red, key=1, label=unity, style=dashed];
m5_2 -> m5_3  [color=red, key=0, style=solid];
m5_2 -> m5_8  [color=red, key=0, style=solid];
m5_8 -> m5_9  [color=red, key=0, style=solid];
m5_4 -> m5_5  [color=red, key=0, style=solid];
m5_4 -> m5_6  [color=red, key=0, style=solid];
m5_6 -> m5_7  [color=red, key=0, style=solid];
m5_6 -> m5_8  [color=red, key=0, style=solid];
m5_5 -> m5_9  [color=red, key=0, style=solid];
m5_7 -> m5_9  [color=red, key=0, style=solid];
m5_9 -> m5_0  [color=blue, key=0, style=bold];
}
