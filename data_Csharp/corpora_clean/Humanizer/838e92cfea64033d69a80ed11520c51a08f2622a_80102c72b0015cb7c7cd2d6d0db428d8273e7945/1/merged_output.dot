digraph  {
d1 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, label="2: dateToCompareAgainst == null", span="21-21"];
d0 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", label="Entry Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", span="19-19"];
d2 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, label="2: dateToCompareAgainst = DateTime.UtcNow", span="22-22"];
d3 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, label="2: var formatter = Configurator.Formatter", span="24-24"];
d4 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, label="2: var comparisonBase = dateToCompareAgainst.Value", span="25-25"];
d5 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, label="1: !utcDate", span="27-27"];
d6 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, label="2: comparisonBase = comparisonBase.ToLocalTime()", span="28-28"];
d7 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, label="1: input <= comparisonBase && comparisonBase.Subtract(input) < TimeSpan.FromMilliseconds(500)", span="30-30"];
d9 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, label="2: var timeUnitTense = input > comparisonBase ? Tense.Future : Tense.Past", span="33-33"];
d10 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, label="2: var ts = new TimeSpan(Math.Abs(comparisonBase.Ticks - input.Ticks))", span="34-34"];
d26 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, label="3: comparisonBase.Date.AddMonths(timeUnitTense == Tense.Future ? 1 : -1) == input.Date", span="59-59"];
d8 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, label="2: return formatter.DateHumanize_Now();", span="31-31"];
d38 [cluster="System.DateTime.Subtract(System.DateTime)", label="Entry System.DateTime.Subtract(System.DateTime)", span="0-0"];
d39 [cluster="System.TimeSpan.FromMilliseconds(double)", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
d12 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, label="2: return formatter.DateHumanize(TimeUnit.Second, timeUnitTense, ts.Seconds);", span="37-37"];
d14 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, label="2: return formatter.DateHumanize(TimeUnit.Minute, timeUnitTense, 1);", span="40-40"];
d16 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, label="2: return formatter.DateHumanize(TimeUnit.Minute, timeUnitTense, ts.Minutes);", span="43-43"];
d18 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, label="2: return formatter.DateHumanize(TimeUnit.Hour, timeUnitTense, 1);", span="46-46"];
d20 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, label="2: return formatter.DateHumanize(TimeUnit.Hour, timeUnitTense, ts.Hours);", span="49-49"];
d22 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, label="2: return formatter.DateHumanize(TimeUnit.Day, timeUnitTense, 1);", span="52-52"];
d24 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, label="2: return formatter.DateHumanize(TimeUnit.Day, timeUnitTense, ts.Days);", span="55-55"];
d27 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, label="2: return formatter.DateHumanize(TimeUnit.Month, timeUnitTense, 1);", span="60-60"];
d28 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", label="return formatter.DateHumanize(TimeUnit.Day, timeUnitTense, ts.Days);", span="62-62"];
d31 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", label="return formatter.DateHumanize(TimeUnit.Month, timeUnitTense, months);", span="68-68"];
d35 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", label="return formatter.DateHumanize(TimeUnit.Year, timeUnitTense, years);", span="73-73"];
d11 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, label="2: ts.TotalSeconds < 60", span="36-36"];
d41 [cluster="System.TimeSpan.TimeSpan(long)", label="Entry System.TimeSpan.TimeSpan(long)", span="0-0"];
d42 [cluster="System.Math.Abs(long)", label="Entry System.Math.Abs(long)", span="0-0"];
d25 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, label="3: ts.TotalDays >= 28 && ts.TotalDays < 30", span="57-57"];
d44 [cluster="System.DateTime.AddMonths(int)", label="Entry System.DateTime.AddMonths(int)", span="0-0"];
d36 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", label="Exit Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", span="19-19"];
d40 [cluster="Humanizer.Localisation.IFormatter.DateHumanize_Now()", label="Entry Humanizer.Localisation.IFormatter.DateHumanize_Now()", span="9-9"];
d43 [cluster="Humanizer.Localisation.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", label="Entry Humanizer.Localisation.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="10-10"];
d13 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, label="2: ts.TotalSeconds < 120", span="39-39"];
d15 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, label="2: ts.TotalMinutes < 45", span="42-42"];
d17 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, label="3: ts.TotalMinutes < 90", span="45-45"];
d19 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, label="3: ts.TotalHours < 24", span="48-48"];
d21 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, label="3: ts.TotalHours < 48", span="51-51"];
d23 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, label="3: ts.TotalDays < 28", span="54-54"];
d37 [cluster="System.DateTime.ToLocalTime()", label="Entry System.DateTime.ToLocalTime()", span="0-0"];
d29 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", label="ts.TotalDays < 345", span="65-65"];
d30 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", label="int months = Convert.ToInt32(Math.Floor(ts.TotalDays / 29.5))", span="67-67"];
d32 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", label="int years = Convert.ToInt32(Math.Floor(ts.TotalDays / 365))", span="71-71"];
d33 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", label="years == 0", span="72-72"];
d34 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", label="years = 1", span="72-72"];
d45 [cluster="System.Math.Floor(double)", label="Entry System.Math.Floor(double)", span="0-0"];
d46 [cluster="System.Convert.ToInt32(double)", label="Entry System.Convert.ToInt32(double)", span="0-0"];
m0_0 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Weeks()", file="NumberToTimeSpanTests.cs", label="Entry Humanizer.Tests.Extensions.NumberToTimeSpanTests.Weeks()", span="8-8"];
m0_1 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Weeks()", color=green, community=0, file="NumberToTimeSpanTests.cs", label="1: var now = DateTime.Now", span="10-10"];
m0_2 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Weeks()", color=green, community=0, file="NumberToTimeSpanTests.cs", label="1: Assert.Equal(now.AddDays(14), now.Add(2.Weeks()))", span="11-11"];
m0_3 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Weeks()", file="NumberToTimeSpanTests.cs", label="Exit Humanizer.Tests.Extensions.NumberToTimeSpanTests.Weeks()", span="8-8"];
m0_6 [cluster="System.DateTime.Add(System.TimeSpan)", file="NumberToTimeSpanTests.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m0_13 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Hours()", file="NumberToTimeSpanTests.cs", label="Entry Humanizer.Tests.Extensions.NumberToTimeSpanTests.Hours()", span="21-21"];
m0_14 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Hours()", color=green, community=0, file="NumberToTimeSpanTests.cs", label="0: Assert.Equal(new TimeSpan(0, 3, 0, 0), 3.Hours())", span="23-23"];
m0_15 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Hours()", file="NumberToTimeSpanTests.cs", label="Exit Humanizer.Tests.Extensions.NumberToTimeSpanTests.Hours()", span="21-21"];
m0_16 [cluster="int.Hours()", file="NumberToTimeSpanTests.cs", label="Entry int.Hours()", span="25-25"];
m0_29 [cluster="int.Milliseconds()", file="NumberToTimeSpanTests.cs", label="Entry int.Milliseconds()", span="55-55"];
m0_12 [cluster="int.Days()", file="NumberToTimeSpanTests.cs", label="Entry int.Days()", span="15-15"];
m0_25 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Milliseconds()", file="NumberToTimeSpanTests.cs", label="Entry Humanizer.Tests.Extensions.NumberToTimeSpanTests.Milliseconds()", span="39-39"];
m0_26 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Milliseconds()", color=green, community=0, file="NumberToTimeSpanTests.cs", label="1: Assert.Equal(new TimeSpan(0, 0, 0, 0, 6), 6.Milliseconds())", span="41-41"];
m0_27 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Milliseconds()", file="NumberToTimeSpanTests.cs", label="Exit Humanizer.Tests.Extensions.NumberToTimeSpanTests.Milliseconds()", span="39-39"];
m0_8 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Days()", file="NumberToTimeSpanTests.cs", label="Entry Humanizer.Tests.Extensions.NumberToTimeSpanTests.Days()", span="15-15"];
m0_9 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Days()", color=green, community=0, file="NumberToTimeSpanTests.cs", label="1: Assert.Equal(new TimeSpan(2, 0, 0, 0), 2.Days())", span="17-17"];
m0_10 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Days()", file="NumberToTimeSpanTests.cs", label="Exit Humanizer.Tests.Extensions.NumberToTimeSpanTests.Days()", span="15-15"];
m0_7 [cluster="Unk.Equal", file="NumberToTimeSpanTests.cs", label="Entry Unk.Equal", span=""];
m0_21 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Seconds()", file="NumberToTimeSpanTests.cs", label="Entry Humanizer.Tests.Extensions.NumberToTimeSpanTests.Seconds()", span="33-33"];
m0_22 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Seconds()", color=green, community=0, file="NumberToTimeSpanTests.cs", label="1: Assert.Equal(new TimeSpan(0, 0, 0, 5), 5.Seconds())", span="35-35"];
m0_23 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Seconds()", file="NumberToTimeSpanTests.cs", label="Exit Humanizer.Tests.Extensions.NumberToTimeSpanTests.Seconds()", span="33-33"];
m0_24 [cluster="int.Seconds()", file="NumberToTimeSpanTests.cs", label="Entry int.Seconds()", span="45-45"];
m0_20 [cluster="int.Minutes()", file="NumberToTimeSpanTests.cs", label="Entry int.Minutes()", span="35-35"];
m0_28 [cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="NumberToTimeSpanTests.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0"];
m0_11 [cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file="NumberToTimeSpanTests.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0"];
m0_5 [cluster="int.Weeks()", file="NumberToTimeSpanTests.cs", label="Entry int.Weeks()", span="5-5"];
m0_17 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Minutes()", file="NumberToTimeSpanTests.cs", label="Entry Humanizer.Tests.Extensions.NumberToTimeSpanTests.Minutes()", span="27-27"];
m0_18 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Minutes()", color=green, community=0, file="NumberToTimeSpanTests.cs", label="1: Assert.Equal(new TimeSpan(0, 0, 4, 0), 4.Minutes())", span="29-29"];
m0_19 [cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Minutes()", file="NumberToTimeSpanTests.cs", label="Exit Humanizer.Tests.Extensions.NumberToTimeSpanTests.Minutes()", span="27-27"];
m0_4 [cluster="System.DateTime.AddDays(double)", file="NumberToTimeSpanTests.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
d1 -> d2  [color=green, key=0, style=solid];
d1 -> d3  [color=green, key=0, style=solid];
d0 -> d1  [color=green, key=0, style=solid];
d0 -> d4  [color=green, key=1, label="System.DateTime?", style=dashed];
d0 -> d5  [color=green, key=1, label=bool, style=dashed];
d0 -> d7  [color=green, key=1, label="System.DateTime", style=dashed];
d0 -> d9  [color=green, key=1, label="System.DateTime", style=dashed];
d0 -> d10  [color=green, key=1, label="System.DateTime", style=dashed];
d0 -> d26  [color=green, key=1, label="System.DateTime", style=dashed];
d2 -> d4  [color=green, key=1, label="System.DateTime?", style=dashed];
d2 -> d3  [color=green, key=0, style=solid];
d3 -> d4  [color=green, key=0, style=solid];
d3 -> d8  [color=green, key=1, label=formatter, style=dashed];
d3 -> d12  [color=green, key=1, label=formatter, style=dashed];
d3 -> d14  [color=green, key=1, label=formatter, style=dashed];
d3 -> d16  [color=green, key=1, label=formatter, style=dashed];
d3 -> d18  [color=green, key=1, label=formatter, style=dashed];
d3 -> d20  [color=green, key=1, label=formatter, style=dashed];
d3 -> d22  [color=green, key=1, label=formatter, style=dashed];
d3 -> d24  [color=green, key=1, label=formatter, style=dashed];
d3 -> d27  [color=green, key=1, label=formatter, style=dashed];
d3 -> d28  [color=green, key=1, label=formatter, style=dashed];
d3 -> d31  [color=green, key=1, label=formatter, style=dashed];
d3 -> d35  [color=green, key=1, label=formatter, style=dashed];
d4 -> d5  [color=green, key=0, style=solid];
d4 -> d6  [color=green, key=1, label=comparisonBase, style=dashed];
d4 -> d7  [color=green, key=1, label=comparisonBase, style=dashed];
d4 -> d9  [color=green, key=1, label=comparisonBase, style=dashed];
d4 -> d10  [color=green, key=1, label=comparisonBase, style=dashed];
d4 -> d26  [color=green, key=1, label=comparisonBase, style=dashed];
d5 -> d6  [color=green, key=0, style=solid];
d5 -> d7  [color=green, key=0, style=solid];
d6 -> d7  [color=green, key=0, style=solid];
d6 -> d9  [color=green, key=1, label=comparisonBase, style=dashed];
d6 -> d10  [color=green, key=1, label=comparisonBase, style=dashed];
d6 -> d26  [color=green, key=1, label=comparisonBase, style=dashed];
d6 -> d6  [color=green, key=1, label=comparisonBase, style=dashed];
d6 -> d37  [color=green, key=2, style=dotted];
d7 -> d8  [color=green, key=0, style=solid];
d7 -> d9  [color=green, key=0, style=solid];
d7 -> d38  [color=green, key=2, style=dotted];
d7 -> d39  [color=green, key=2, style=dotted];
d9 -> d10  [color=green, key=0, style=solid];
d9 -> d12  [color=green, key=1, label=timeUnitTense, style=dashed];
d9 -> d14  [color=green, key=1, label=timeUnitTense, style=dashed];
d9 -> d16  [color=green, key=1, label=timeUnitTense, style=dashed];
d9 -> d18  [color=green, key=1, label=timeUnitTense, style=dashed];
d9 -> d20  [color=green, key=1, label=timeUnitTense, style=dashed];
d9 -> d22  [color=green, key=1, label=timeUnitTense, style=dashed];
d9 -> d24  [color=green, key=1, label=timeUnitTense, style=dashed];
d9 -> d26  [color=green, key=1, label=timeUnitTense, style=dashed];
d9 -> d27  [color=green, key=1, label=timeUnitTense, style=dashed];
d9 -> d28  [color=green, key=1, label=timeUnitTense, style=dashed];
d9 -> d31  [color=green, key=1, label=timeUnitTense, style=dashed];
d9 -> d35  [color=green, key=1, label=timeUnitTense, style=dashed];
d10 -> d11  [color=green, key=0, style=solid];
d10 -> d41  [color=green, key=2, style=dotted];
d10 -> d42  [color=green, key=2, style=dotted];
d26 -> d27  [color=green, key=0, style=solid];
d26 -> d28  [color=green, key=0, style=solid];
d26 -> d44  [color=green, key=2, style=dotted];
d8 -> d36  [color=green, key=0, style=solid];
d8 -> d40  [color=green, key=2, style=dotted];
d12 -> d12  [color=green, key=1, label=ts, style=dashed];
d12 -> d36  [color=green, key=0, style=solid];
d12 -> d43  [color=green, key=2, style=dotted];
d12 -> d13  [color=green, key=1, label=ts, style=dashed];
d14 -> d36  [color=green, key=0, style=solid];
d14 -> d43  [color=green, key=2, style=dotted];
d16 -> d16  [color=green, key=1, label=ts, style=dashed];
d16 -> d36  [color=green, key=0, style=solid];
d16 -> d43  [color=green, key=2, style=dotted];
d16 -> d17  [color=green, key=1, label=ts, style=dashed];
d18 -> d36  [color=green, key=0, style=solid];
d18 -> d43  [color=green, key=2, style=dotted];
d20 -> d20  [color=green, key=1, label=ts, style=dashed];
d20 -> d36  [color=green, key=0, style=solid];
d20 -> d43  [color=green, key=2, style=dotted];
d20 -> d21  [color=green, key=1, label=ts, style=dashed];
d22 -> d36  [color=green, key=0, style=solid];
d22 -> d43  [color=green, key=2, style=dotted];
d24 -> d24  [color=green, key=1, label=ts, style=dashed];
d24 -> d36  [color=green, key=0, style=solid];
d24 -> d43  [color=green, key=2, style=dotted];
d24 -> d25  [color=green, key=1, label=ts, style=dashed];
d27 -> d36  [color=green, key=0, style=solid];
d27 -> d43  [color=green, key=2, style=dotted];
d28 -> d28  [color=darkseagreen4, key=1, label=ts, style=dashed];
d28 -> d36  [key=0, style=solid];
d28 -> d43  [key=2, style=dotted];
d28 -> d29  [color=darkseagreen4, key=1, label=ts, style=dashed];
d31 -> d36  [key=0, style=solid];
d31 -> d43  [key=2, style=dotted];
d35 -> d36  [key=0, style=solid];
d35 -> d43  [key=2, style=dotted];
d11 -> d12  [color=green, key=0, style=solid];
d11 -> d11  [color=green, key=1, label=ts, style=dashed];
d11 -> d13  [color=green, key=0, style=solid];
d25 -> d26  [color=green, key=0, style=solid];
d25 -> d25  [color=green, key=1, label=ts, style=dashed];
d25 -> d29  [color=green, key=0, style=solid];
d25 -> d28  [color=green, key=1, label=ts, style=dashed];
d36 -> d0  [color=blue, key=0, style=bold];
d13 -> d14  [color=green, key=0, style=solid];
d13 -> d13  [color=green, key=1, label=ts, style=dashed];
d13 -> d15  [color=green, key=0, style=solid];
d15 -> d16  [color=green, key=0, style=solid];
d15 -> d15  [color=green, key=1, label=ts, style=dashed];
d15 -> d17  [color=green, key=0, style=solid];
d17 -> d18  [color=green, key=0, style=solid];
d17 -> d17  [color=green, key=1, label=ts, style=dashed];
d17 -> d19  [color=green, key=0, style=solid];
d19 -> d20  [color=green, key=0, style=solid];
d19 -> d19  [color=green, key=1, label=ts, style=dashed];
d19 -> d21  [color=green, key=0, style=solid];
d21 -> d22  [color=green, key=0, style=solid];
d21 -> d21  [color=green, key=1, label=ts, style=dashed];
d21 -> d23  [color=green, key=0, style=solid];
d23 -> d24  [color=green, key=0, style=solid];
d23 -> d23  [color=green, key=1, label=ts, style=dashed];
d23 -> d25  [color=green, key=0, style=solid];
d29 -> d29  [color=darkseagreen4, key=1, label=ts, style=dashed];
d29 -> d30  [key=0, style=solid];
d29 -> d32  [key=0, style=solid];
d30 -> d31  [key=0, style=solid];
d30 -> d30  [color=darkseagreen4, key=1, label=ts, style=dashed];
d30 -> d45  [key=2, style=dotted];
d30 -> d46  [key=2, style=dotted];
d30 -> d32  [color=darkseagreen4, key=1, label=ts, style=dashed];
d32 -> d35  [color=darkseagreen4, key=1, label=years, style=dashed];
d32 -> d32  [color=darkseagreen4, key=1, label=ts, style=dashed];
d32 -> d33  [key=0, style=solid];
d32 -> d45  [key=2, style=dotted];
d32 -> d46  [key=2, style=dotted];
d33 -> d35  [key=0, style=solid];
d33 -> d34  [key=0, style=solid];
d34 -> d35  [key=0, style=solid];
m0_0 -> m0_1  [color=green, key=0, style=solid];
m0_1 -> m0_2  [color=green, key=0, style=solid];
m0_2 -> m0_3  [color=green, key=0, style=solid];
m0_2 -> m0_4  [color=green, key=2, style=dotted];
m0_2 -> m0_5  [color=green, key=2, style=dotted];
m0_2 -> m0_6  [color=green, key=2, style=dotted];
m0_2 -> m0_7  [color=green, key=2, style=dotted];
m0_3 -> m0_0  [color=blue, key=0, style=bold];
m0_13 -> m0_14  [color=green, key=0, style=solid];
m0_14 -> m0_15  [color=green, key=0, style=solid];
m0_14 -> m0_11  [color=green, key=2, style=dotted];
m0_14 -> m0_16  [color=green, key=2, style=dotted];
m0_14 -> m0_7  [color=green, key=2, style=dotted];
m0_15 -> m0_13  [color=blue, key=0, style=bold];
m0_25 -> m0_26  [color=green, key=0, style=solid];
m0_26 -> m0_27  [color=green, key=0, style=solid];
m0_26 -> m0_28  [color=green, key=2, style=dotted];
m0_26 -> m0_29  [color=green, key=2, style=dotted];
m0_26 -> m0_7  [color=green, key=2, style=dotted];
m0_27 -> m0_25  [color=blue, key=0, style=bold];
m0_8 -> m0_9  [color=green, key=0, style=solid];
m0_9 -> m0_10  [color=green, key=0, style=solid];
m0_9 -> m0_11  [color=green, key=2, style=dotted];
m0_9 -> m0_12  [color=green, key=2, style=dotted];
m0_9 -> m0_7  [color=green, key=2, style=dotted];
m0_10 -> m0_8  [color=blue, key=0, style=bold];
m0_21 -> m0_22  [color=green, key=0, style=solid];
m0_22 -> m0_23  [color=green, key=0, style=solid];
m0_22 -> m0_11  [color=green, key=2, style=dotted];
m0_22 -> m0_24  [color=green, key=2, style=dotted];
m0_22 -> m0_7  [color=green, key=2, style=dotted];
m0_23 -> m0_21  [color=blue, key=0, style=bold];
m0_17 -> m0_18  [color=green, key=0, style=solid];
m0_18 -> m0_19  [color=green, key=0, style=solid];
m0_18 -> m0_11  [color=green, key=2, style=dotted];
m0_18 -> m0_20  [color=green, key=2, style=dotted];
m0_18 -> m0_7  [color=green, key=2, style=dotted];
m0_19 -> m0_17  [color=blue, key=0, style=bold];
}
