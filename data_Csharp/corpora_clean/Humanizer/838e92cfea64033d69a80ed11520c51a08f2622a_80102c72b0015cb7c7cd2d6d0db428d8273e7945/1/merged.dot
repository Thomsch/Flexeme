digraph  {
d1 [label="dateToCompareAgainst == null", span="21-21", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0];
d0 [label="Entry Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", span="19-19", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)"];
d2 [label="dateToCompareAgainst = DateTime.UtcNow", span="22-22", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0];
d3 [label="var formatter = Configurator.Formatter", span="24-24", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0];
d4 [label="var comparisonBase = dateToCompareAgainst.Value", span="25-25", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0];
d5 [label="!utcDate", span="27-27", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0];
d6 [label="comparisonBase = comparisonBase.ToLocalTime()", span="28-28", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0];
d7 [label="input <= comparisonBase && comparisonBase.Subtract(input) < TimeSpan.FromMilliseconds(500)", span="30-30", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0];
d9 [label="var timeUnitTense = input > comparisonBase ? Tense.Future : Tense.Past", span="33-33", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0];
d10 [label="var ts = new TimeSpan(Math.Abs(comparisonBase.Ticks - input.Ticks))", span="34-34", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0];
d26 [label="comparisonBase.Date.AddMonths(timeUnitTense == Tense.Future ? 1 : -1) == input.Date", span="59-59", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0];
d8 [label="return formatter.DateHumanize_Now();", span="31-31", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0];
d38 [label="Entry System.DateTime.Subtract(System.DateTime)", span="0-0", cluster="System.DateTime.Subtract(System.DateTime)"];
d39 [label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0", cluster="System.TimeSpan.FromMilliseconds(double)"];
d12 [label="return formatter.DateHumanize(TimeUnit.Second, timeUnitTense, ts.Seconds);", span="37-37", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0];
d14 [label="return formatter.DateHumanize(TimeUnit.Minute, timeUnitTense, 1);", span="40-40", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0];
d16 [label="return formatter.DateHumanize(TimeUnit.Minute, timeUnitTense, ts.Minutes);", span="43-43", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0];
d18 [label="return formatter.DateHumanize(TimeUnit.Hour, timeUnitTense, 1);", span="46-46", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0];
d20 [label="return formatter.DateHumanize(TimeUnit.Hour, timeUnitTense, ts.Hours);", span="49-49", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0];
d22 [label="return formatter.DateHumanize(TimeUnit.Day, timeUnitTense, 1);", span="52-52", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0];
d24 [label="return formatter.DateHumanize(TimeUnit.Day, timeUnitTense, ts.Days);", span="55-55", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0];
d27 [label="return formatter.DateHumanize(TimeUnit.Month, timeUnitTense, 1);", span="60-60", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0];
d28 [label="return formatter.DateHumanize(TimeUnit.Day, timeUnitTense, ts.Days);", span="62-62", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)"];
d31 [label="return formatter.DateHumanize(TimeUnit.Month, timeUnitTense, months);", span="68-68", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)"];
d35 [label="return formatter.DateHumanize(TimeUnit.Year, timeUnitTense, years);", span="73-73", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)"];
d11 [label="ts.TotalSeconds < 60", span="36-36", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0];
d41 [label="Entry System.TimeSpan.TimeSpan(long)", span="0-0", cluster="System.TimeSpan.TimeSpan(long)"];
d42 [label="Entry System.Math.Abs(long)", span="0-0", cluster="System.Math.Abs(long)"];
d25 [label="ts.TotalDays >= 28 && ts.TotalDays < 30", span="57-57", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0];
d44 [label="Entry System.DateTime.AddMonths(int)", span="0-0", cluster="System.DateTime.AddMonths(int)"];
d36 [label="Exit Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", span="19-19", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)"];
d40 [label="Entry Humanizer.Localisation.IFormatter.DateHumanize_Now()", span="9-9", cluster="Humanizer.Localisation.IFormatter.DateHumanize_Now()"];
d43 [label="Entry Humanizer.Localisation.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="10-10", cluster="Humanizer.Localisation.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)"];
d13 [label="ts.TotalSeconds < 120", span="39-39", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0];
d15 [label="ts.TotalMinutes < 45", span="42-42", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0];
d17 [label="ts.TotalMinutes < 90", span="45-45", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0];
d19 [label="ts.TotalHours < 24", span="48-48", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0];
d21 [label="ts.TotalHours < 48", span="51-51", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0];
d23 [label="ts.TotalDays < 28", span="54-54", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0];
d37 [label="Entry System.DateTime.ToLocalTime()", span="0-0", cluster="System.DateTime.ToLocalTime()"];
d29 [label="ts.TotalDays < 345", span="65-65", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)"];
d30 [label="int months = Convert.ToInt32(Math.Floor(ts.TotalDays / 29.5))", span="67-67", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)"];
d32 [label="int years = Convert.ToInt32(Math.Floor(ts.TotalDays / 365))", span="71-71", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)"];
d33 [label="years == 0", span="72-72", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)"];
d34 [label="years = 1", span="72-72", cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)"];
d45 [label="Entry System.Math.Floor(double)", span="0-0", cluster="System.Math.Floor(double)"];
d46 [label="Entry System.Convert.ToInt32(double)", span="0-0", cluster="System.Convert.ToInt32(double)"];
m0_0 [label="Entry Humanizer.Tests.Extensions.NumberToTimeSpanTests.Weeks()", span="8-8", cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Weeks()", file="NumberToTimeSpanTests.cs"];
m0_1 [label="var now = DateTime.Now", span="10-10", cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Weeks()", color=green, community=0, file="NumberToTimeSpanTests.cs"];
m0_2 [label="Assert.Equal(now.AddDays(14), now.Add(2.Weeks()))", span="11-11", cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Weeks()", color=green, community=0, file="NumberToTimeSpanTests.cs"];
m0_3 [label="Exit Humanizer.Tests.Extensions.NumberToTimeSpanTests.Weeks()", span="8-8", cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Weeks()", file="NumberToTimeSpanTests.cs"];
m0_6 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="NumberToTimeSpanTests.cs"];
m0_13 [label="Entry Humanizer.Tests.Extensions.NumberToTimeSpanTests.Hours()", span="21-21", cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Hours()", file="NumberToTimeSpanTests.cs"];
m0_14 [label="Assert.Equal(new TimeSpan(0, 3, 0, 0), 3.Hours())", span="23-23", cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Hours()", color=green, community=0, file="NumberToTimeSpanTests.cs"];
m0_15 [label="Exit Humanizer.Tests.Extensions.NumberToTimeSpanTests.Hours()", span="21-21", cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Hours()", file="NumberToTimeSpanTests.cs"];
m0_16 [label="Entry int.Hours()", span="25-25", cluster="int.Hours()", file="NumberToTimeSpanTests.cs"];
m0_29 [label="Entry int.Milliseconds()", span="55-55", cluster="int.Milliseconds()", file="NumberToTimeSpanTests.cs"];
m0_12 [label="Entry int.Days()", span="15-15", cluster="int.Days()", file="NumberToTimeSpanTests.cs"];
m0_25 [label="Entry Humanizer.Tests.Extensions.NumberToTimeSpanTests.Milliseconds()", span="39-39", cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Milliseconds()", file="NumberToTimeSpanTests.cs"];
m0_26 [label="Assert.Equal(new TimeSpan(0, 0, 0, 0, 6), 6.Milliseconds())", span="41-41", cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Milliseconds()", color=green, community=0, file="NumberToTimeSpanTests.cs"];
m0_27 [label="Exit Humanizer.Tests.Extensions.NumberToTimeSpanTests.Milliseconds()", span="39-39", cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Milliseconds()", file="NumberToTimeSpanTests.cs"];
m0_8 [label="Entry Humanizer.Tests.Extensions.NumberToTimeSpanTests.Days()", span="15-15", cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Days()", file="NumberToTimeSpanTests.cs"];
m0_9 [label="Assert.Equal(new TimeSpan(2, 0, 0, 0), 2.Days())", span="17-17", cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Days()", color=green, community=0, file="NumberToTimeSpanTests.cs"];
m0_10 [label="Exit Humanizer.Tests.Extensions.NumberToTimeSpanTests.Days()", span="15-15", cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Days()", file="NumberToTimeSpanTests.cs"];
m0_7 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="NumberToTimeSpanTests.cs"];
m0_21 [label="Entry Humanizer.Tests.Extensions.NumberToTimeSpanTests.Seconds()", span="33-33", cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Seconds()", file="NumberToTimeSpanTests.cs"];
m0_22 [label="Assert.Equal(new TimeSpan(0, 0, 0, 5), 5.Seconds())", span="35-35", cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Seconds()", color=green, community=0, file="NumberToTimeSpanTests.cs"];
m0_23 [label="Exit Humanizer.Tests.Extensions.NumberToTimeSpanTests.Seconds()", span="33-33", cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Seconds()", file="NumberToTimeSpanTests.cs"];
m0_24 [label="Entry int.Seconds()", span="45-45", cluster="int.Seconds()", file="NumberToTimeSpanTests.cs"];
m0_20 [label="Entry int.Minutes()", span="35-35", cluster="int.Minutes()", file="NumberToTimeSpanTests.cs"];
m0_28 [label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="NumberToTimeSpanTests.cs"];
m0_11 [label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file="NumberToTimeSpanTests.cs"];
m0_5 [label="Entry int.Weeks()", span="5-5", cluster="int.Weeks()", file="NumberToTimeSpanTests.cs"];
m0_17 [label="Entry Humanizer.Tests.Extensions.NumberToTimeSpanTests.Minutes()", span="27-27", cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Minutes()", file="NumberToTimeSpanTests.cs"];
m0_18 [label="Assert.Equal(new TimeSpan(0, 0, 4, 0), 4.Minutes())", span="29-29", cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Minutes()", color=green, community=0, file="NumberToTimeSpanTests.cs"];
m0_19 [label="Exit Humanizer.Tests.Extensions.NumberToTimeSpanTests.Minutes()", span="27-27", cluster="Humanizer.Tests.Extensions.NumberToTimeSpanTests.Minutes()", file="NumberToTimeSpanTests.cs"];
m0_4 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="NumberToTimeSpanTests.cs"];
d1 -> d2  [key=0, style=solid, color=green];
d1 -> d3  [key=0, style=solid, color=green];
d0 -> d1  [key=0, style=solid, color=green];
d0 -> d4  [key=1, style=dashed, color=green, label="System.DateTime?"];
d0 -> d5  [key=1, style=dashed, color=green, label=bool];
d0 -> d7  [key=1, style=dashed, color=green, label="System.DateTime"];
d0 -> d9  [key=1, style=dashed, color=green, label="System.DateTime"];
d0 -> d10  [key=1, style=dashed, color=green, label="System.DateTime"];
d0 -> d26  [key=1, style=dashed, color=green, label="System.DateTime"];
d2 -> d4  [key=1, style=dashed, color=green, label="System.DateTime?"];
d2 -> d3  [key=0, style=solid, color=green];
d3 -> d4  [key=0, style=solid, color=green];
d3 -> d8  [key=1, style=dashed, color=green, label=formatter];
d3 -> d12  [key=1, style=dashed, color=green, label=formatter];
d3 -> d14  [key=1, style=dashed, color=green, label=formatter];
d3 -> d16  [key=1, style=dashed, color=green, label=formatter];
d3 -> d18  [key=1, style=dashed, color=green, label=formatter];
d3 -> d20  [key=1, style=dashed, color=green, label=formatter];
d3 -> d22  [key=1, style=dashed, color=green, label=formatter];
d3 -> d24  [key=1, style=dashed, color=green, label=formatter];
d3 -> d27  [key=1, style=dashed, color=green, label=formatter];
d3 -> d28  [key=1, style=dashed, color=green, label=formatter];
d3 -> d31  [key=1, style=dashed, color=green, label=formatter];
d3 -> d35  [key=1, style=dashed, color=green, label=formatter];
d4 -> d5  [key=0, style=solid, color=green];
d4 -> d6  [key=1, style=dashed, color=green, label=comparisonBase];
d4 -> d7  [key=1, style=dashed, color=green, label=comparisonBase];
d4 -> d9  [key=1, style=dashed, color=green, label=comparisonBase];
d4 -> d10  [key=1, style=dashed, color=green, label=comparisonBase];
d4 -> d26  [key=1, style=dashed, color=green, label=comparisonBase];
d5 -> d6  [key=0, style=solid, color=green];
d5 -> d7  [key=0, style=solid, color=green];
d6 -> d7  [key=0, style=solid, color=green];
d6 -> d9  [key=1, style=dashed, color=green, label=comparisonBase];
d6 -> d10  [key=1, style=dashed, color=green, label=comparisonBase];
d6 -> d26  [key=1, style=dashed, color=green, label=comparisonBase];
d6 -> d6  [key=1, style=dashed, color=green, label=comparisonBase];
d6 -> d37  [key=2, style=dotted, color=green];
d7 -> d8  [key=0, style=solid, color=green];
d7 -> d9  [key=0, style=solid, color=green];
d7 -> d38  [key=2, style=dotted, color=green];
d7 -> d39  [key=2, style=dotted, color=green];
d9 -> d10  [key=0, style=solid, color=green];
d9 -> d12  [key=1, style=dashed, color=green, label=timeUnitTense];
d9 -> d14  [key=1, style=dashed, color=green, label=timeUnitTense];
d9 -> d16  [key=1, style=dashed, color=green, label=timeUnitTense];
d9 -> d18  [key=1, style=dashed, color=green, label=timeUnitTense];
d9 -> d20  [key=1, style=dashed, color=green, label=timeUnitTense];
d9 -> d22  [key=1, style=dashed, color=green, label=timeUnitTense];
d9 -> d24  [key=1, style=dashed, color=green, label=timeUnitTense];
d9 -> d26  [key=1, style=dashed, color=green, label=timeUnitTense];
d9 -> d27  [key=1, style=dashed, color=green, label=timeUnitTense];
d9 -> d28  [key=1, style=dashed, color=green, label=timeUnitTense];
d9 -> d31  [key=1, style=dashed, color=green, label=timeUnitTense];
d9 -> d35  [key=1, style=dashed, color=green, label=timeUnitTense];
d10 -> d11  [key=0, style=solid, color=green];
d10 -> d41  [key=2, style=dotted, color=green];
d10 -> d42  [key=2, style=dotted, color=green];
d26 -> d27  [key=0, style=solid, color=green];
d26 -> d28  [key=0, style=solid, color=green];
d26 -> d44  [key=2, style=dotted, color=green];
d8 -> d36  [key=0, style=solid, color=green];
d8 -> d40  [key=2, style=dotted, color=green];
d12 -> d12  [key=1, style=dashed, color=green, label=ts];
d12 -> d36  [key=0, style=solid, color=green];
d12 -> d43  [key=2, style=dotted, color=green];
d12 -> d13  [key=1, style=dashed, color=green, label=ts];
d14 -> d36  [key=0, style=solid, color=green];
d14 -> d43  [key=2, style=dotted, color=green];
d16 -> d16  [key=1, style=dashed, color=green, label=ts];
d16 -> d36  [key=0, style=solid, color=green];
d16 -> d43  [key=2, style=dotted, color=green];
d16 -> d17  [key=1, style=dashed, color=green, label=ts];
d18 -> d36  [key=0, style=solid, color=green];
d18 -> d43  [key=2, style=dotted, color=green];
d20 -> d20  [key=1, style=dashed, color=green, label=ts];
d20 -> d36  [key=0, style=solid, color=green];
d20 -> d43  [key=2, style=dotted, color=green];
d20 -> d21  [key=1, style=dashed, color=green, label=ts];
d22 -> d36  [key=0, style=solid, color=green];
d22 -> d43  [key=2, style=dotted, color=green];
d24 -> d24  [key=1, style=dashed, color=green, label=ts];
d24 -> d36  [key=0, style=solid, color=green];
d24 -> d43  [key=2, style=dotted, color=green];
d24 -> d25  [key=1, style=dashed, color=green, label=ts];
d27 -> d36  [key=0, style=solid, color=green];
d27 -> d43  [key=2, style=dotted, color=green];
d28 -> d28  [key=1, style=dashed, color=darkseagreen4, label=ts];
d28 -> d36  [key=0, style=solid];
d28 -> d43  [key=2, style=dotted];
d28 -> d29  [key=1, style=dashed, color=darkseagreen4, label=ts];
d31 -> d36  [key=0, style=solid];
d31 -> d43  [key=2, style=dotted];
d35 -> d36  [key=0, style=solid];
d35 -> d43  [key=2, style=dotted];
d11 -> d12  [key=0, style=solid, color=green];
d11 -> d11  [key=1, style=dashed, color=green, label=ts];
d11 -> d13  [key=0, style=solid, color=green];
d25 -> d26  [key=0, style=solid, color=green];
d25 -> d25  [key=1, style=dashed, color=green, label=ts];
d25 -> d29  [key=0, style=solid, color=green];
d25 -> d28  [key=1, style=dashed, color=green, label=ts];
d36 -> d0  [key=0, style=bold, color=blue];
d13 -> d14  [key=0, style=solid, color=green];
d13 -> d13  [key=1, style=dashed, color=green, label=ts];
d13 -> d15  [key=0, style=solid, color=green];
d15 -> d16  [key=0, style=solid, color=green];
d15 -> d15  [key=1, style=dashed, color=green, label=ts];
d15 -> d17  [key=0, style=solid, color=green];
d17 -> d18  [key=0, style=solid, color=green];
d17 -> d17  [key=1, style=dashed, color=green, label=ts];
d17 -> d19  [key=0, style=solid, color=green];
d19 -> d20  [key=0, style=solid, color=green];
d19 -> d19  [key=1, style=dashed, color=green, label=ts];
d19 -> d21  [key=0, style=solid, color=green];
d21 -> d22  [key=0, style=solid, color=green];
d21 -> d21  [key=1, style=dashed, color=green, label=ts];
d21 -> d23  [key=0, style=solid, color=green];
d23 -> d24  [key=0, style=solid, color=green];
d23 -> d23  [key=1, style=dashed, color=green, label=ts];
d23 -> d25  [key=0, style=solid, color=green];
d29 -> d29  [key=1, style=dashed, color=darkseagreen4, label=ts];
d29 -> d30  [key=0, style=solid];
d29 -> d32  [key=0, style=solid];
d30 -> d31  [key=0, style=solid];
d30 -> d30  [key=1, style=dashed, color=darkseagreen4, label=ts];
d30 -> d45  [key=2, style=dotted];
d30 -> d46  [key=2, style=dotted];
d30 -> d32  [key=1, style=dashed, color=darkseagreen4, label=ts];
d32 -> d35  [key=1, style=dashed, color=darkseagreen4, label=years];
d32 -> d32  [key=1, style=dashed, color=darkseagreen4, label=ts];
d32 -> d33  [key=0, style=solid];
d32 -> d45  [key=2, style=dotted];
d32 -> d46  [key=2, style=dotted];
d33 -> d35  [key=0, style=solid];
d33 -> d34  [key=0, style=solid];
d34 -> d35  [key=0, style=solid];
m0_0 -> m0_1  [key=0, style=solid, color=green];
m0_1 -> m0_2  [key=0, style=solid, color=green];
m0_2 -> m0_3  [key=0, style=solid, color=green];
m0_2 -> m0_4  [key=2, style=dotted, color=green];
m0_2 -> m0_5  [key=2, style=dotted, color=green];
m0_2 -> m0_6  [key=2, style=dotted, color=green];
m0_2 -> m0_7  [key=2, style=dotted, color=green];
m0_3 -> m0_0  [key=0, style=bold, color=blue];
m0_13 -> m0_14  [key=0, style=solid, color=green];
m0_14 -> m0_15  [key=0, style=solid, color=green];
m0_14 -> m0_11  [key=2, style=dotted, color=green];
m0_14 -> m0_16  [key=2, style=dotted, color=green];
m0_14 -> m0_7  [key=2, style=dotted, color=green];
m0_15 -> m0_13  [key=0, style=bold, color=blue];
m0_25 -> m0_26  [key=0, style=solid, color=green];
m0_26 -> m0_27  [key=0, style=solid, color=green];
m0_26 -> m0_28  [key=2, style=dotted, color=green];
m0_26 -> m0_29  [key=2, style=dotted, color=green];
m0_26 -> m0_7  [key=2, style=dotted, color=green];
m0_27 -> m0_25  [key=0, style=bold, color=blue];
m0_8 -> m0_9  [key=0, style=solid, color=green];
m0_9 -> m0_10  [key=0, style=solid, color=green];
m0_9 -> m0_11  [key=2, style=dotted, color=green];
m0_9 -> m0_12  [key=2, style=dotted, color=green];
m0_9 -> m0_7  [key=2, style=dotted, color=green];
m0_10 -> m0_8  [key=0, style=bold, color=blue];
m0_21 -> m0_22  [key=0, style=solid, color=green];
m0_22 -> m0_23  [key=0, style=solid, color=green];
m0_22 -> m0_11  [key=2, style=dotted, color=green];
m0_22 -> m0_24  [key=2, style=dotted, color=green];
m0_22 -> m0_7  [key=2, style=dotted, color=green];
m0_23 -> m0_21  [key=0, style=bold, color=blue];
m0_17 -> m0_18  [key=0, style=solid, color=green];
m0_18 -> m0_19  [key=0, style=solid, color=green];
m0_18 -> m0_11  [key=2, style=dotted, color=green];
m0_18 -> m0_20  [key=2, style=dotted, color=green];
m0_18 -> m0_7  [key=2, style=dotted, color=green];
m0_19 -> m0_17  [key=0, style=bold, color=blue];
}
