digraph  {
n0 [label="Entry Humanizer.Localisation.IFormatter.DateHumanize_Now()", span="9-9", cluster="Humanizer.Localisation.IFormatter.DateHumanize_Now()"];
n1 [label="Exit Humanizer.Localisation.IFormatter.DateHumanize_Now()", span="9-9", cluster="Humanizer.Localisation.IFormatter.DateHumanize_Now()"];
n2 [label="Entry Humanizer.Localisation.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="10-10", cluster="Humanizer.Localisation.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)"];
n3 [label="Exit Humanizer.Localisation.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="10-10", cluster="Humanizer.Localisation.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)"];
n4 [label="Entry Humanizer.Localisation.IFormatter.TimeSpanHumanize_Zero()", span="12-12", cluster="Humanizer.Localisation.IFormatter.TimeSpanHumanize_Zero()"];
n5 [label="Exit Humanizer.Localisation.IFormatter.TimeSpanHumanize_Zero()", span="12-12", cluster="Humanizer.Localisation.IFormatter.TimeSpanHumanize_Zero()"];
n6 [label="Entry Humanizer.Localisation.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", span="13-13", cluster="Humanizer.Localisation.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)"];
n7 [label="Exit Humanizer.Localisation.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", span="13-13", cluster="Humanizer.Localisation.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)"];
d30 [label="Assert.Equal(expectedOutput, input.Pascalize())", span="106-106", cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", color=green, community=0];
d29 [label="Entry Humanizer.Tests.InflectorTests.Pascalize(string, string)", span="104-104", cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)"];
d31 [label="Exit Humanizer.Tests.InflectorTests.Pascalize(string, string)", span="104-104", cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)"];
d32 [label="Entry string.Pascalize()", span="95-95", cluster="string.Pascalize()"];
d4 [label="Entry Unk.Equal", span="", cluster="Unk.Equal"];
d1 [label="Assert.Equal(plural, singular.Pluralize())", span="37-37", cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)"];
d6 [label="Assert.Equal(plural, plural.Pluralize(false))", span="44-44", cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)"];
d7 [label="Assert.Equal(plural, singular.Pluralize(false))", span="45-45", cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)"];
d10 [label="Assert.Equal(singular, plural.Singularize())", span="52-52", cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)"];
d14 [label="Assert.Equal(singular, singular.Singularize(false))", span="59-59", cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)"];
d15 [label="Assert.Equal(singular, plural.Singularize(false))", span="60-60", cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)"];
d18 [label="Assert.Equal(expectedOuput, input.Titleize())", span="73-73", cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)"];
d22 [label="Assert.Equal(input.Dasherize(), expectedOutput)", span="83-83", cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)"];
d26 [label="Assert.Equal(input.Hyphenate(), expectedOutput)", span="93-93", cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)"];
d34 [label="Assert.Equal(expectedOutput, input.Camelize())", span="120-120", cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)"];
d38 [label="Assert.Equal(expectedOuput, input.Underscore())", span="133-133", cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)"];
d0 [label="Entry Humanizer.Tests.InflectorTests.Pluralize(string, string)", span="35-35", cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)"];
d2 [label="Exit Humanizer.Tests.InflectorTests.Pluralize(string, string)", span="35-35", cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)"];
d3 [label="Entry string.Pluralize(bool)", span="52-52", cluster="string.Pluralize(bool)"];
d5 [label="Entry Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", span="42-42", cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)"];
d8 [label="Exit Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", span="42-42", cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)"];
d9 [label="Entry Humanizer.Tests.InflectorTests.Singularize(string, string)", span="50-50", cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)"];
d11 [label="Exit Humanizer.Tests.InflectorTests.Singularize(string, string)", span="50-50", cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)"];
d12 [label="Entry string.Singularize(bool)", span="75-75", cluster="string.Singularize(bool)"];
d13 [label="Entry Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", span="57-57", cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)"];
d16 [label="Exit Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", span="57-57", cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)"];
d17 [label="Entry Humanizer.Tests.InflectorTests.Titleize(string, string)", span="71-71", cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)"];
d19 [label="Exit Humanizer.Tests.InflectorTests.Titleize(string, string)", span="71-71", cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)"];
d20 [label="Entry string.Titleize()", span="85-85", cluster="string.Titleize()"];
d21 [label="Entry Humanizer.Tests.InflectorTests.Dasherize(string, string)", span="81-81", cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)"];
d23 [label="Exit Humanizer.Tests.InflectorTests.Dasherize(string, string)", span="81-81", cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)"];
d24 [label="Entry string.Dasherize()", span="128-128", cluster="string.Dasherize()"];
d25 [label="Entry Humanizer.Tests.InflectorTests.Hyphenate(string, string)", span="91-91", cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)"];
d27 [label="Exit Humanizer.Tests.InflectorTests.Hyphenate(string, string)", span="91-91", cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)"];
d28 [label="Entry string.Hyphenate()", span="138-138", cluster="string.Hyphenate()"];
d33 [label="Entry Humanizer.Tests.InflectorTests.Camelize(string, string)", span="118-118", cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)"];
d35 [label="Exit Humanizer.Tests.InflectorTests.Camelize(string, string)", span="118-118", cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)"];
d36 [label="Entry string.Camelize()", span="105-105", cluster="string.Camelize()"];
d37 [label="Entry Humanizer.Tests.InflectorTests.Underscore(string, string)", span="131-131", cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)"];
d39 [label="Exit Humanizer.Tests.InflectorTests.Underscore(string, string)", span="131-131", cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)"];
d40 [label="Entry string.Underscore()", span="116-116", cluster="string.Underscore()"];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [key=0, style=bold, color=blue];
n2 -> n3  [key=0, style=solid];
n3 -> n2  [key=0, style=bold, color=blue];
n4 -> n5  [key=0, style=solid];
n5 -> n4  [key=0, style=bold, color=blue];
n6 -> n7  [key=0, style=solid];
n7 -> n6  [key=0, style=bold, color=blue];
d30 -> d31  [key=0, style=solid, color=green];
d30 -> d32  [key=2, style=dotted, color=green];
d30 -> d4  [key=2, style=dotted, color=green];
d29 -> d30  [key=0, style=solid, color=green];
d31 -> d29  [key=0, style=bold, color=blue];
d1 -> d4  [key=2, style=dotted];
d1 -> d2  [key=0, style=solid];
d1 -> d3  [key=2, style=dotted];
d6 -> d4  [key=2, style=dotted];
d6 -> d7  [key=0, style=solid];
d6 -> d3  [key=2, style=dotted];
d7 -> d4  [key=2, style=dotted];
d7 -> d8  [key=0, style=solid];
d7 -> d3  [key=2, style=dotted];
d10 -> d4  [key=2, style=dotted];
d10 -> d11  [key=0, style=solid];
d10 -> d12  [key=2, style=dotted];
d14 -> d4  [key=2, style=dotted];
d14 -> d15  [key=0, style=solid];
d14 -> d12  [key=2, style=dotted];
d15 -> d4  [key=2, style=dotted];
d15 -> d16  [key=0, style=solid];
d15 -> d12  [key=2, style=dotted];
d18 -> d4  [key=2, style=dotted];
d18 -> d19  [key=0, style=solid];
d18 -> d20  [key=2, style=dotted];
d22 -> d4  [key=2, style=dotted];
d22 -> d23  [key=0, style=solid];
d22 -> d24  [key=2, style=dotted];
d26 -> d4  [key=2, style=dotted];
d26 -> d27  [key=0, style=solid];
d26 -> d28  [key=2, style=dotted];
d34 -> d4  [key=2, style=dotted];
d34 -> d35  [key=0, style=solid];
d34 -> d36  [key=2, style=dotted];
d38 -> d4  [key=2, style=dotted];
d38 -> d39  [key=0, style=solid];
d38 -> d40  [key=2, style=dotted];
d0 -> d1  [key=0, style=solid];
d2 -> d0  [key=0, style=bold, color=blue];
d5 -> d6  [key=0, style=solid];
d5 -> d7  [key=1, style=dashed, color=darkseagreen4, label=string];
d8 -> d5  [key=0, style=bold, color=blue];
d9 -> d10  [key=0, style=solid];
d11 -> d9  [key=0, style=bold, color=blue];
d13 -> d14  [key=0, style=solid];
d13 -> d15  [key=1, style=dashed, color=darkseagreen4, label=string];
d16 -> d13  [key=0, style=bold, color=blue];
d17 -> d18  [key=0, style=solid];
d19 -> d17  [key=0, style=bold, color=blue];
d21 -> d22  [key=0, style=solid];
d23 -> d21  [key=0, style=bold, color=blue];
d25 -> d26  [key=0, style=solid];
d27 -> d25  [key=0, style=bold, color=blue];
d33 -> d34  [key=0, style=solid];
d35 -> d33  [key=0, style=bold, color=blue];
d37 -> d38  [key=0, style=solid];
d39 -> d37  [key=0, style=bold, color=blue];
}
