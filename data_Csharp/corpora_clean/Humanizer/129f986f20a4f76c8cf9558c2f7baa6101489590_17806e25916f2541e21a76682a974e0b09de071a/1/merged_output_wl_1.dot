digraph  {
m1_3 [cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", file="DateHumanizeTests.cs", label="Entry CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", span="17-17"];
m1_4 [cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", color=green, community=0, file="DateHumanizeTests.cs", label="0: return new ValueSpecification(\r\n                attribute.Index,\r\n                attribute.Required,\r\n                attribute.Min,\r\n                attribute.Max,\r\n                attribute.DefaultValue.ToMaybe(),\r\n                conversionType);", span="19-25"];
m1_5 [cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", file="DateHumanizeTests.cs", label="Exit CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", span="17-17"];
m1_0 [cluster="CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="DateHumanizeTests.cs", label="Entry CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", span="11-11"];
m1_1 [cluster="CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", color=green, community=0, file="DateHumanizeTests.cs", label="1: this.index = index", span="14-14"];
m1_2 [cluster="CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="DateHumanizeTests.cs", label="Exit CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", span="11-11"];
m1_6 [cluster="T.ToMaybe<T>()", file="DateHumanizeTests.cs", label="Entry T.ToMaybe<T>()", span="82-82"];
m1_7 [file="DateHumanizeTests.cs", label="CommandLine.Core.ValueSpecification", span=""];
m6_9 [cluster="string.Substring(int, int)", file="FixedLengthTruncator.cs", label="Entry string.Substring(int, int)", span="0-0"];
m6_0 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="FixedLengthTruncator.cs", label="Entry Humanizer.FixedLengthTruncator.Truncate(string, int, string)", span="7-7"];
m6_1 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="FixedLengthTruncator.cs", label="value == null", span="9-9"];
m6_3 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="FixedLengthTruncator.cs", label="value.Length == 0", span="12-12"];
m6_4 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="FixedLengthTruncator.cs", label="return value;", span="13-13"];
m6_5 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="FixedLengthTruncator.cs", label="truncationString == null || truncationString.Length > length", span="15-15"];
m6_6 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", color=green, community=0, file="FixedLengthTruncator.cs", label="0: return value.Substring(0, length);", span="16-16"];
m6_7 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", color=green, community=0, file="FixedLengthTruncator.cs", label="0: return value.Length > length ? value.Substring(0, length - truncationString.Length) + truncationString : value;", span="18-18"];
m6_2 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="FixedLengthTruncator.cs", label="return null;", span="10-10"];
m6_8 [cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="FixedLengthTruncator.cs", label="Exit Humanizer.FixedLengthTruncator.Truncate(string, int, string)", span="7-7"];
m7_37 [cluster="Humanizer.Tests.DehumanizeToEnumTests.HonorsAnyAttributeWithDescriptionStringProperty()", file="FixedNumberOfCharactersTruncator.cs", label="Entry Humanizer.Tests.DehumanizeToEnumTests.HonorsAnyAttributeWithDescriptionStringProperty()", span="44-44"];
m7_31 [cluster="Unk.Equal", file="FixedNumberOfCharactersTruncator.cs", label="Entry Unk.Equal", span=""];
m7_39 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="FixedNumberOfCharactersTruncator.cs", label=casing, span="75-75"];
m7_38 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="FixedNumberOfCharactersTruncator.cs", label="Entry Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", span="73-73"];
m7_40 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="FixedNumberOfCharactersTruncator.cs", label="LetterCasing.Title", span="77-77"];
m7_41 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="FixedNumberOfCharactersTruncator.cs", label="return CultureInfo.CurrentCulture.TextInfo.ToTitleCase(input);", span="78-78"];
m7_43 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="FixedNumberOfCharactersTruncator.cs", label="return input.ToLower();", span="81-81"];
m7_42 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="FixedNumberOfCharactersTruncator.cs", label="LetterCasing.LowerCase", span="80-80"];
m7_44 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="FixedNumberOfCharactersTruncator.cs", label="LetterCasing.AllCaps", span="83-83"];
m7_19 [cluster="lambda expression", file="FixedNumberOfCharactersTruncator.cs", label="Exit lambda expression", span="18-18"];
m7_0 [cluster="lambda expression", file="FixedNumberOfCharactersTruncator.cs", label="Entry lambda expression", span="9-9"];
m7_1 [cluster="lambda expression", file="FixedNumberOfCharactersTruncator.cs", label="String.Join('' '', methodName.Split(new[] { '_', '-' }))", span="9-9"];
m7_2 [cluster="lambda expression", file="FixedNumberOfCharactersTruncator.cs", label="Exit lambda expression", span="9-9"];
m7_3 [cluster="string.Split(params char[])", file="FixedNumberOfCharactersTruncator.cs", label="Entry string.Split(params char[])", span="0-0"];
m7_4 [cluster="string.Join(string, params string[])", file="FixedNumberOfCharactersTruncator.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m7_32 [cluster="Humanizer.Tests.DehumanizeToEnumTests.HonorsDescriptionAttributeSubclasses()", file="FixedNumberOfCharactersTruncator.cs", label="Entry Humanizer.Tests.DehumanizeToEnumTests.HonorsDescriptionAttributeSubclasses()", span="36-36"];
m7_54 [cluster="string.Substring(int, int)", file="FixedNumberOfCharactersTruncator.cs", label="Entry string.Substring(int, int)", span="0-0"];
m7_56 [cluster="string.Concat(string, string)", file="FixedNumberOfCharactersTruncator.cs", label="Entry string.Concat(string, string)", span="0-0"];
m7_55 [cluster="string.Substring(int)", file="FixedNumberOfCharactersTruncator.cs", label="Entry string.Substring(int)", span="0-0"];
m7_57 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="FixedNumberOfCharactersTruncator.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m7_53 [cluster="string.ToUpper()", file="FixedNumberOfCharactersTruncator.cs", label="Entry string.ToUpper()", span="0-0"];
m7_23 [cluster="lambda expression", file="FixedNumberOfCharactersTruncator.cs", label="Exit lambda expression", span="30-30"];
m7_24 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", color=green, community=0, file="FixedNumberOfCharactersTruncator.cs", label="0: Entry Humanizer.StringHumanizeExtensions.Humanize(string)", span="42-42"];
m7_25 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="FixedNumberOfCharactersTruncator.cs", label="input.All(Char.IsUpper)", span="45-45"];
m7_8 [cluster="Humanizer.StringHumanizeExtensions.FromPascalCase(string)", file="FixedNumberOfCharactersTruncator.cs", label="return result.Replace('' i '', '' I '');", span="34-34"];
m7_12 [cluster="string.DehumanizeTo(System.Type, Humanizer.OnNoMatch)", file="FixedNumberOfCharactersTruncator.cs", label="Entry string.DehumanizeTo(System.Type, Humanizer.OnNoMatch)", span="33-33"];
m7_27 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="FixedNumberOfCharactersTruncator.cs", label="input.Contains('_') || input.Contains('-')", span="48-48"];
m7_28 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", color=green, community=0, file="FixedNumberOfCharactersTruncator.cs", label="0: return FromUnderscoreDashSeparatedWords(input);", span="49-49"];
m7_29 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", color=green, community=0, file="FixedNumberOfCharactersTruncator.cs", label="0: return FromPascalCase(input);", span="51-51"];
m7_30 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="FixedNumberOfCharactersTruncator.cs", label="Exit Humanizer.StringHumanizeExtensions.Humanize(string)", span="42-42"];
m7_35 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", file="FixedNumberOfCharactersTruncator.cs", label="return ApplyCase(humanizedString, casing);", span="64-64"];
m7_34 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", file="FixedNumberOfCharactersTruncator.cs", label="var humanizedString = input.Humanize()", span="62-62"];
m7_33 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", file="FixedNumberOfCharactersTruncator.cs", label="Entry Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", span="60-60"];
m7_36 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", file="FixedNumberOfCharactersTruncator.cs", label="Exit Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", span="60-60"];
m7_52 [cluster="Humanizer.Tests.DehumanizeToEnumTests.AllCapitalMembersAreReturnedAsIs()", file="FixedNumberOfCharactersTruncator.cs", label="Exit Humanizer.Tests.DehumanizeToEnumTests.AllCapitalMembersAreReturnedAsIs()", span="68-68"];
m7_14 [cluster="Humanizer.Tests.DehumanizeToEnumTests.ThrowsForEnumNoMatch()", file="FixedNumberOfCharactersTruncator.cs", label="Assert.Throws<NoMatchFoundException>(() => EnumTestsResources.MemberWithDescriptionAttribute.DehumanizeTo<DummyEnum>())", span="18-18"];
m7_26 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="FixedNumberOfCharactersTruncator.cs", label="return input;", span="46-46"];
m7_13 [cluster="Unk.ToUpper", file="FixedNumberOfCharactersTruncator.cs", label="Entry Unk.ToUpper", span=""];
m7_15 [cluster="Unk.Replace", color=green, community=0, file="FixedNumberOfCharactersTruncator.cs", label="0: Entry Unk.Replace", span=""];
m7_16 [cluster="lambda expression", file="FixedNumberOfCharactersTruncator.cs", label="Entry lambda expression", span="26-29"];
m7_9 [cluster="Humanizer.StringHumanizeExtensions.FromPascalCase(string)", file="FixedNumberOfCharactersTruncator.cs", label="Exit Humanizer.StringHumanizeExtensions.FromPascalCase(string)", span="22-22"];
m7_21 [cluster="lambda expression", color=green, community=0, file="FixedNumberOfCharactersTruncator.cs", label="0: EnumTestsResources.MemberWithDescriptionAttribute.DehumanizeTo(typeof(DummyEnum))", span="19-19"];
m7_17 [cluster="lambda expression", file="FixedNumberOfCharactersTruncator.cs", label="Entry lambda expression", span="18-18"];
m7_18 [cluster="lambda expression", file="FixedNumberOfCharactersTruncator.cs", label="EnumTestsResources.MemberWithDescriptionAttribute.DehumanizeTo<DummyEnum>()", span="18-18"];
m7_22 [cluster="lambda expression", color=red, community=0, file="FixedNumberOfCharactersTruncator.cs", label="0: Exit lambda expression", span="19-19"];
m7_20 [cluster="string.ToLower()", file="FixedNumberOfCharactersTruncator.cs", label="Entry string.ToLower()", span="0-0"];
m7_10 [cluster="System.Text.RegularExpressions.Regex.Split(string)", file="FixedNumberOfCharactersTruncator.cs", label="Entry System.Text.RegularExpressions.Regex.Split(string)", span="0-0"];
m7_6 [cluster="Humanizer.StringHumanizeExtensions.FromPascalCase(string)", color=red, community=0, file="FixedNumberOfCharactersTruncator.cs", label="0: var result = PascalCaseWordBoundaryRegex\r\n                .Split(name)\r\n                .Select(word =>\r\n                    word.All(Char.IsUpper) && word.Length > 1\r\n                        ? word\r\n                        : word.ToLower())\r\n                .Aggregate((res, word) => res + '' '' + word)", span="24-30"];
m7_11 [cluster="Unk.Select", file="FixedNumberOfCharactersTruncator.cs", label="Entry Unk.Select", span=""];
m7_49 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="FixedNumberOfCharactersTruncator.cs", label="return input.ToUpper();", span="90-90"];
m7_51 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="FixedNumberOfCharactersTruncator.cs", label="Exit Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", span="73-73"];
m7_50 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="FixedNumberOfCharactersTruncator.cs", label="throw new ArgumentOutOfRangeException(''casing'');", span="93-93"];
m7_58 [cluster="Humanizer.Tests.DehumanizeToEnumTests.HonorsLocalizedDisplayAttribute()", file="FixedNumberOfCharactersTruncator.cs", label="Entry Humanizer.Tests.DehumanizeToEnumTests.HonorsLocalizedDisplayAttribute()", span="82-82"];
m7_60 [cluster="Humanizer.Tests.DehumanizeToEnumTests.HonorsLocalizedDisplayAttribute()", file="FixedNumberOfCharactersTruncator.cs", label="Assert.Equal(EnumUnderTest.MemberWithLocalizedDisplayAttribute, EnumTestsResources.MemberWithLocalizedDisplayAttribute.DehumanizeTo(typeof(EnumUnderTest)))", span="85-85"];
m7_59 [cluster="Humanizer.Tests.DehumanizeToEnumTests.HonorsLocalizedDisplayAttribute()", file="FixedNumberOfCharactersTruncator.cs", label="Assert.Equal(EnumUnderTest.MemberWithLocalizedDisplayAttribute, EnumTestsResources.MemberWithLocalizedDisplayAttribute.DehumanizeTo<EnumUnderTest>())", span="84-84"];
m7_61 [cluster="Humanizer.Tests.DehumanizeToEnumTests.HonorsLocalizedDisplayAttribute()", file="FixedNumberOfCharactersTruncator.cs", label="Exit Humanizer.Tests.DehumanizeToEnumTests.HonorsLocalizedDisplayAttribute()", span="82-82"];
m7_45 [cluster="Humanizer.Tests.DehumanizeToEnumTests.IsCaseInsensitive(string, Humanizer.Tests.EnumUnderTest)", file="FixedNumberOfCharactersTruncator.cs", label="Entry Humanizer.Tests.DehumanizeToEnumTests.IsCaseInsensitive(string, Humanizer.Tests.EnumUnderTest)", span="61-61"];
m7_47 [cluster="Humanizer.Tests.DehumanizeToEnumTests.IsCaseInsensitive(string, Humanizer.Tests.EnumUnderTest)", file="FixedNumberOfCharactersTruncator.cs", label="Assert.Equal(expectedEnum, input.DehumanizeTo(typeof(EnumUnderTest)))", span="64-64"];
m7_48 [cluster="Humanizer.Tests.DehumanizeToEnumTests.IsCaseInsensitive(string, Humanizer.Tests.EnumUnderTest)", file="FixedNumberOfCharactersTruncator.cs", label="Exit Humanizer.Tests.DehumanizeToEnumTests.IsCaseInsensitive(string, Humanizer.Tests.EnumUnderTest)", span="61-61"];
m7_46 [cluster="Humanizer.Tests.DehumanizeToEnumTests.IsCaseInsensitive(string, Humanizer.Tests.EnumUnderTest)", file="FixedNumberOfCharactersTruncator.cs", label="Assert.Equal(expectedEnum, input.DehumanizeTo<EnumUnderTest>())", span="63-63"];
m7_5 [cluster="Humanizer.StringHumanizeExtensions.FromPascalCase(string)", file="FixedNumberOfCharactersTruncator.cs", label="Entry Humanizer.StringHumanizeExtensions.FromPascalCase(string)", span="22-22"];
m7_7 [cluster="Humanizer.StringHumanizeExtensions.FromPascalCase(string)", color=red, community=0, file="FixedNumberOfCharactersTruncator.cs", label="1: result = Char.ToUpper(result[0]) +\r\n                result.Substring(1, result.Length - 1)", span="32-33"];
m8_0 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.PascalCaseSentence()", file="FixedNumberOfWordsTruncator.cs", label="Entry Humanizer.Tests.Extensions.StringDehumanizeTests.PascalCaseSentence()", span="7-7"];
m8_1 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.PascalCaseSentence()", color=red, community=0, file="FixedNumberOfWordsTruncator.cs", label="0: Assert.Equal(\r\n                ''PascalCaseSentenceIsCamelized'',\r\n                ''Pascal case sentence is camelized''.Dehumanize())", span="9-11"];
m8_2 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.PascalCaseSentence()", file="FixedNumberOfWordsTruncator.cs", label="Exit Humanizer.Tests.Extensions.StringDehumanizeTests.PascalCaseSentence()", span="7-7"];
m8_4 [cluster="Unk.Equal", file="FixedNumberOfWordsTruncator.cs", label="Entry Unk.Equal", span=""];
m8_3 [cluster="string.Dehumanize()", file="FixedNumberOfWordsTruncator.cs", label="Entry string.Dehumanize()", span="11-11"];
m8_8 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.MixedCaseSentence()", file="FixedNumberOfWordsTruncator.cs", label="Entry Humanizer.Tests.Extensions.StringDehumanizeTests.MixedCaseSentence()", span="23-23"];
m8_9 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.MixedCaseSentence()", file="FixedNumberOfWordsTruncator.cs", label="Assert.Equal(\r\n                ''MixedCaseSentenceIsCamelized'',\r\n                ''Mixed case sentence Is Camelized''.Dehumanize())", span="25-27"];
m8_10 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.MixedCaseSentence()", file="FixedNumberOfWordsTruncator.cs", label="Exit Humanizer.Tests.Extensions.StringDehumanizeTests.MixedCaseSentence()", span="23-23"];
m8_14 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.EmptySentence()", file="FixedNumberOfWordsTruncator.cs", label="Entry Humanizer.Tests.Extensions.StringDehumanizeTests.EmptySentence()", span="39-39"];
m8_15 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.EmptySentence()", color=red, community=0, file="FixedNumberOfWordsTruncator.cs", label="0: Assert.Equal(\r\n                '''',\r\n                ''''.Dehumanize())", span="41-43"];
m8_16 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.EmptySentence()", file="FixedNumberOfWordsTruncator.cs", label="Exit Humanizer.Tests.Extensions.StringDehumanizeTests.EmptySentence()", span="39-39"];
m8_5 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.TitleCaseSentence()", file="FixedNumberOfWordsTruncator.cs", label="Entry Humanizer.Tests.Extensions.StringDehumanizeTests.TitleCaseSentence()", span="15-15"];
m8_6 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.TitleCaseSentence()", color=red, community=0, file="FixedNumberOfWordsTruncator.cs", label="0: Assert.Equal(\r\n                ''TitleCaseSentenceIsCamelized'',\r\n                ''Title Case Sentence Is Camelized''.Dehumanize())", span="17-19"];
m8_7 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.TitleCaseSentence()", file="FixedNumberOfWordsTruncator.cs", label="Exit Humanizer.Tests.Extensions.StringDehumanizeTests.TitleCaseSentence()", span="15-15"];
m8_11 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.LowerCaseSentence()", file="FixedNumberOfWordsTruncator.cs", label="Entry Humanizer.Tests.Extensions.StringDehumanizeTests.LowerCaseSentence()", span="31-31"];
m8_12 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.LowerCaseSentence()", file="FixedNumberOfWordsTruncator.cs", label="Assert.Equal(\r\n                ''LowerCaseSentenceIsCamelized'',\r\n                ''lower case sentence is camelized''.Dehumanize())", span="33-35"];
m8_13 [cluster="Humanizer.Tests.Extensions.StringDehumanizeTests.LowerCaseSentence()", file="FixedNumberOfWordsTruncator.cs", label="Exit Humanizer.Tests.Extensions.StringDehumanizeTests.LowerCaseSentence()", span="31-31"];
m9_32 [cluster="Humanizer.RomanNumeralExtensions.ToRoman(int)", file="FrenchNumberToWordsConverter.cs", label=RomanNumerals, span="89-89"];
m9_33 [cluster="Humanizer.RomanNumeralExtensions.ToRoman(int)", file="FrenchNumberToWordsConverter.cs", label="input / pair.Value > 0", span="91-91"];
m9_34 [cluster="Humanizer.RomanNumeralExtensions.ToRoman(int)", color=green, community=0, file="FrenchNumberToWordsConverter.cs", label="0: sb.Append(pair.Key)", span="93-93"];
m9_35 [cluster="Humanizer.RomanNumeralExtensions.ToRoman(int)", color=green, community=0, file="FrenchNumberToWordsConverter.cs", label="0: input -= pair.Value", span="94-94"];
m9_36 [cluster="Humanizer.RomanNumeralExtensions.ToRoman(int)", color=green, community=0, file="FrenchNumberToWordsConverter.cs", label="0: return sb.ToString();", span="98-98"];
m9_10 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="FrenchNumberToWordsConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m9_19 [cluster="CommandLine.Core.Token.Name(string)", file="FrenchNumberToWordsConverter.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m9_5 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="FrenchNumberToWordsConverter.cs", label="Entry CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11"];
m9_13 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="FrenchNumberToWordsConverter.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71"];
m9_11 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="FrenchNumberToWordsConverter.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66"];
m9_38 [cluster="lambda expression", file="FrenchNumberToWordsConverter.cs", label="new[] { ''seq'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TypeDescriptorKind.Sequence, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>()", span="95-97"];
m9_41 [cluster="System.Text.StringBuilder.ToString()", file="FrenchNumberToWordsConverter.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m9_12 [cluster="CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TypeDescriptorKind, CommandLine.Infrastructure.Maybe<int>)", file="FrenchNumberToWordsConverter.cs", label="Entry CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TypeDescriptorKind, CommandLine.Infrastructure.Maybe<int>)", span="36-36"];
m9_40 [cluster="System.Text.StringBuilder.Append(string)", file="FrenchNumberToWordsConverter.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m9_14 [cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values()", file="FrenchNumberToWordsConverter.cs", label="Entry CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values()", span="34-34"];
m9_15 [cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values()", file="FrenchNumberToWordsConverter.cs", label="var expected = new[]\r\n                {\r\n                    Token.Name(''seq''), Token.Value(''seqval0''), Token.Value(''seqval1'')\r\n                }", span="36-39"];
m9_16 [cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values()", file="FrenchNumberToWordsConverter.cs", label="var result = Sequence.Partition(\r\n                new[]\r\n                    {\r\n                        Token.Name(''str''), Token.Value(''strvalue''), Token.Value(''freevalue''),\r\n                        Token.Name(''seq''), Token.Value(''seqval0''), Token.Value(''seqval1''),\r\n                        Token.Name(''x''), Token.Value(''freevalue2'')\r\n                    },\r\n                name =>\r\n                    new[] { ''seq'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TypeDescriptorKind.Sequence, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>())", span="41-51"];
m9_17 [cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values()", file="FrenchNumberToWordsConverter.cs", label="expected.ShouldAllBeEquivalentTo(result)", span="53-53"];
m9_18 [cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values()", file="FrenchNumberToWordsConverter.cs", label="Exit CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values()", span="34-34"];
m9_39 [cluster="lambda expression", file="FrenchNumberToWordsConverter.cs", label="Exit lambda expression", span="94-97"];
m9_0 [cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_empty_token_sequence()", file="FrenchNumberToWordsConverter.cs", label="Entry CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_empty_token_sequence()", span="19-19"];
m9_1 [cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_empty_token_sequence()", file="FrenchNumberToWordsConverter.cs", label="var expected = new Token[] { }", span="21-21"];
m9_2 [cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_empty_token_sequence()", file="FrenchNumberToWordsConverter.cs", label="var result = Sequence.Partition(\r\n                new Token[] { },\r\n                name =>\r\n                    new[] { ''seq'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TypeDescriptorKind.Sequence, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>())", span="23-28"];
m9_3 [cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_empty_token_sequence()", file="FrenchNumberToWordsConverter.cs", label="expected.ShouldAllBeEquivalentTo(result)", span="30-30"];
m9_4 [cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_empty_token_sequence()", file="FrenchNumberToWordsConverter.cs", label="Exit CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_empty_token_sequence()", span="19-19"];
m9_24 [cluster="CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_two_sequneces()", file="FrenchNumberToWordsConverter.cs", label="Entry CommandLine.Tests.Unit.Core.SequenceTests.Partition_sequence_values_from_two_sequneces()", span="57-57"];
m9_25 [cluster="Humanizer.RomanNumeralExtensions.ToRoman(int)", file="FrenchNumberToWordsConverter.cs", label="Entry Humanizer.RomanNumeralExtensions.ToRoman(int)", span="78-78"];
m9_26 [cluster="Humanizer.RomanNumeralExtensions.ToRoman(int)", file="FrenchNumberToWordsConverter.cs", label="int minValue = 1", span="80-80"];
m9_27 [cluster="Humanizer.RomanNumeralExtensions.ToRoman(int)", file="FrenchNumberToWordsConverter.cs", label="int maxValue = 3999", span="81-81"];
m9_28 [cluster="Humanizer.RomanNumeralExtensions.ToRoman(int)", file="FrenchNumberToWordsConverter.cs", label="int maxRomanNumeralLength = 15", span="82-82"];
m9_37 [cluster="Humanizer.RomanNumeralExtensions.ToRoman(int)", file="FrenchNumberToWordsConverter.cs", label="Exit Humanizer.RomanNumeralExtensions.ToRoman(int)", span="78-78"];
m9_7 [cluster="lambda expression", file="FrenchNumberToWordsConverter.cs", label="Entry lambda expression", span="25-28"];
m9_8 [cluster="lambda expression", file="FrenchNumberToWordsConverter.cs", label="new[] { ''seq'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TypeDescriptorKind.Sequence, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>()", span="26-28"];
m9_9 [cluster="lambda expression", file="FrenchNumberToWordsConverter.cs", label="Exit lambda expression", span="25-28"];
m9_21 [cluster="lambda expression", file="FrenchNumberToWordsConverter.cs", label="Entry lambda expression", span="48-51"];
m9_22 [cluster="lambda expression", file="FrenchNumberToWordsConverter.cs", label="new[] { ''seq'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TypeDescriptorKind.Sequence, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>()", span="49-51"];
m9_23 [cluster="lambda expression", file="FrenchNumberToWordsConverter.cs", label="Exit lambda expression", span="48-51"];
m9_29 [cluster="Humanizer.RomanNumeralExtensions.ToRoman(int)", file="FrenchNumberToWordsConverter.cs", label="(input < minValue) || (input > maxValue)", span="84-84"];
m9_30 [cluster="Humanizer.RomanNumeralExtensions.ToRoman(int)", file="FrenchNumberToWordsConverter.cs", label="throw new ArgumentOutOfRangeException();", span="85-85"];
m9_31 [cluster="Humanizer.RomanNumeralExtensions.ToRoman(int)", file="FrenchNumberToWordsConverter.cs", label="var sb = new StringBuilder(maxRomanNumeralLength)", span="87-87"];
m9_20 [cluster="CommandLine.Core.Token.Value(string)", file="FrenchNumberToWordsConverter.cs", label="Entry CommandLine.Core.Token.Value(string)", span="24-24"];
m9_6 [cluster="Unk.ShouldAllBeEquivalentTo", file="FrenchNumberToWordsConverter.cs", label="Entry Unk.ShouldAllBeEquivalentTo", span=""];
m10_0 [cluster="Humanizer.DateTimeHumanizeStrategy.IDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="IDateTimeHumanizeStrategy.cs", label="Entry Humanizer.DateTimeHumanizeStrategy.IDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", span="6-6"];
m10_1 [cluster="Humanizer.DateTimeHumanizeStrategy.IDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="IDateTimeHumanizeStrategy.cs", label="Exit Humanizer.DateTimeHumanizeStrategy.IDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", span="6-6"];
m11_0 [cluster="Humanizer.ITruncator.Truncate(string, int, string)", file="ITruncator.cs", label="Entry Humanizer.ITruncator.Truncate(string, int, string)", span="14-14"];
m11_1 [cluster="Humanizer.ITruncator.Truncate(string, int, string)", file="ITruncator.cs", label="Exit Humanizer.ITruncator.Truncate(string, int, string)", span="14-14"];
m12_7 [cluster="Humanizer.Tests.Localisation.es.NumberToWordsTests.ToOrdinalWords(int, string, Humanizer.GrammaticalGender)", file="NumberToWordsTests.cs", label="Entry Humanizer.Tests.Localisation.es.NumberToWordsTests.ToOrdinalWords(int, string, Humanizer.GrammaticalGender)", span="56-56"];
m12_8 [cluster="Humanizer.Tests.Localisation.es.NumberToWordsTests.ToOrdinalWords(int, string, Humanizer.GrammaticalGender)", file="NumberToWordsTests.cs", label="Assert.Equal(words, number.ToOrdinalWords(gender))", span="58-58"];
m12_9 [cluster="Humanizer.Tests.Localisation.es.NumberToWordsTests.ToOrdinalWords(int, string, Humanizer.GrammaticalGender)", file="NumberToWordsTests.cs", label="Exit Humanizer.Tests.Localisation.es.NumberToWordsTests.ToOrdinalWords(int, string, Humanizer.GrammaticalGender)", span="56-56"];
m12_2 [cluster="Humanizer.Tests.Localisation.es.NumberToWordsTests.ToWords(int, string)", file="NumberToWordsTests.cs", label="Entry Humanizer.Tests.Localisation.es.NumberToWordsTests.ToWords(int, string)", span="45-45"];
m12_3 [cluster="Humanizer.Tests.Localisation.es.NumberToWordsTests.ToWords(int, string)", file="NumberToWordsTests.cs", label="Assert.Equal(expected, number.ToWords())", span="47-47"];
m12_4 [cluster="Humanizer.Tests.Localisation.es.NumberToWordsTests.ToWords(int, string)", file="NumberToWordsTests.cs", label="Exit Humanizer.Tests.Localisation.es.NumberToWordsTests.ToWords(int, string)", span="45-45"];
m12_0 [cluster="Humanizer.Tests.Localisation.es.NumberToWordsTests.NumberToWordsTests()", file="NumberToWordsTests.cs", label="Entry Humanizer.Tests.Localisation.es.NumberToWordsTests.NumberToWordsTests()", span="7-7"];
m12_1 [cluster="Humanizer.Tests.Localisation.es.NumberToWordsTests.NumberToWordsTests()", file="NumberToWordsTests.cs", label="Exit Humanizer.Tests.Localisation.es.NumberToWordsTests.NumberToWordsTests()", span="7-7"];
m12_6 [cluster="Unk.Equal", file="NumberToWordsTests.cs", label="Entry Unk.Equal", span=""];
m12_5 [cluster="int.ToWords()", file="NumberToWordsTests.cs", label="Entry int.ToWords()", span="32-32"];
m12_10 [cluster="int.ToOrdinalWords(Humanizer.GrammaticalGender)", file="NumberToWordsTests.cs", label="Entry int.ToOrdinalWords(Humanizer.GrammaticalGender)", span="79-79"];
m13_8 [cluster="int.ToString(System.IFormatProvider)", file="OrdinalizeExtensions.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m13_5 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int)", file="OrdinalizeExtensions.cs", label="Entry Humanizer.OrdinalizeExtensions.Ordinalize(int)", span="25-25"];
m13_6 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int)", color=red, community=0, file="OrdinalizeExtensions.cs", label="0: return Ordinalize(number, number.ToString(CultureInfo.InvariantCulture));", span="27-27"];
m13_7 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int)", file="OrdinalizeExtensions.cs", label="Exit Humanizer.OrdinalizeExtensions.Ordinalize(int)", span="25-25"];
m13_4 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", file="OrdinalizeExtensions.cs", label="Entry Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", span="30-30"];
m13_9 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", color=green, community=0, file="OrdinalizeExtensions.cs", label="1: int nMod100 = number % 100", span="32-32"];
m13_11 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", color=green, community=0, file="OrdinalizeExtensions.cs", label="1: return numberString + ''th'';", span="36-36"];
m13_12 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", color=green, community=0, file="OrdinalizeExtensions.cs", label="0: number % 10", span="39-39"];
m13_14 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", color=green, community=0, file="OrdinalizeExtensions.cs", label="1: return numberString + ''st'';", span="42-42"];
m13_16 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", color=red, community=0, file="OrdinalizeExtensions.cs", label="1: return numberString + ''nd'';", span="44-44"];
m13_18 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", color=red, community=0, file="OrdinalizeExtensions.cs", label="1: return numberString + ''rd'';", span="46-46"];
m13_19 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", color=red, community=0, file="OrdinalizeExtensions.cs", label="1: return numberString + ''th'';", span="48-48"];
m13_10 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", color=green, community=0, file="OrdinalizeExtensions.cs", label="0: nMod100 >= 11 && nMod100 <= 13", span="34-34"];
m13_13 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", color=green, community=0, file="OrdinalizeExtensions.cs", label="1: 1", span="41-41"];
m13_15 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", color=red, community=0, file="OrdinalizeExtensions.cs", label="1: 2", span="43-43"];
m13_17 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", color=red, community=0, file="OrdinalizeExtensions.cs", label="1: 3", span="45-45"];
m13_20 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", file="OrdinalizeExtensions.cs", label="Exit Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", span="30-30"];
m13_0 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(string)", file="OrdinalizeExtensions.cs", label="Entry Humanizer.OrdinalizeExtensions.Ordinalize(string)", span="15-15"];
m13_1 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(string)", color=green, community=0, file="OrdinalizeExtensions.cs", label="0: return Ordinalize(int.Parse(numberString), numberString);", span="17-17"];
m13_2 [cluster="Humanizer.OrdinalizeExtensions.Ordinalize(string)", file="OrdinalizeExtensions.cs", label="Exit Humanizer.OrdinalizeExtensions.Ordinalize(string)", span="15-15"];
m13_3 [cluster="int.Parse(string)", file="OrdinalizeExtensions.cs", label="Entry int.Parse(string)", span="0-0"];
m14_10 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="OrdinalizeTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m14_19 [cluster="CommandLine.Core.Token.Name(string)", file="OrdinalizeTests.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m14_13 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="OrdinalizeTests.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71"];
m14_11 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="OrdinalizeTests.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66"];
m14_14 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", file="OrdinalizeTests.cs", label="Entry CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", span="34-34"];
m14_15 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", file="OrdinalizeTests.cs", label="var expected = new [] { Token.Name(''x'') }", span="36-36"];
m14_16 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", file="OrdinalizeTests.cs", label="var result = Switch.Partition(\r\n                new []\r\n                    {\r\n                        Token.Name(''str''), Token.Value(''strvalue''), Token.Value(''freevalue''),\r\n                        Token.Name(''x''), Token.Value(''freevalue2'')\r\n                    },\r\n                name =>\r\n                    new[] { ''x'', ''switch'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TypeDescriptorKind.Boolean, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>())", span="38-47"];
m14_17 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", file="OrdinalizeTests.cs", label="expected.ShouldAllBeEquivalentTo(result)", span="49-49"];
m14_18 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", file="OrdinalizeTests.cs", label="Exit CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", span="34-34"];
m14_12 [cluster="CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TypeDescriptorKind, CommandLine.Infrastructure.Maybe<int>)", file="OrdinalizeTests.cs", label="Entry CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TypeDescriptorKind, CommandLine.Infrastructure.Maybe<int>)", span="36-36"];
m14_5 [cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="OrdinalizeTests.cs", label="Entry CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11"];
m14_0 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values_from_empty_token_sequence()", file="OrdinalizeTests.cs", label="Entry CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values_from_empty_token_sequence()", span="19-19"];
m14_1 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values_from_empty_token_sequence()", file="OrdinalizeTests.cs", label="var expected = new Token[] { }", span="21-21"];
m14_2 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values_from_empty_token_sequence()", file="OrdinalizeTests.cs", label="var result = Switch.Partition(\r\n                new Token[] { },\r\n                name =>\r\n                    new[] { ''x'', ''switch'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TypeDescriptorKind.Boolean, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>())", span="23-28"];
m14_3 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values_from_empty_token_sequence()", file="OrdinalizeTests.cs", label="expected.ShouldAllBeEquivalentTo(result)", span="30-30"];
m14_4 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values_from_empty_token_sequence()", file="OrdinalizeTests.cs", label="Exit CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values_from_empty_token_sequence()", span="19-19"];
m14_21 [cluster="lambda expression", file="OrdinalizeTests.cs", label="Entry lambda expression", span="44-47"];
m14_7 [cluster="lambda expression", file="OrdinalizeTests.cs", label="Entry lambda expression", span="25-28"];
m14_8 [cluster="lambda expression", file="OrdinalizeTests.cs", label="new[] { ''x'', ''switch'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TypeDescriptorKind.Boolean, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>()", span="26-28"];
m14_9 [cluster="lambda expression", file="OrdinalizeTests.cs", label="Exit lambda expression", span="25-28"];
m14_22 [cluster="lambda expression", file="OrdinalizeTests.cs", label="new[] { ''x'', ''switch'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TypeDescriptorKind.Boolean, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>()", span="45-47"];
m14_23 [cluster="lambda expression", file="OrdinalizeTests.cs", label="Exit lambda expression", span="44-47"];
m14_20 [cluster="CommandLine.Core.Token.Value(string)", file="OrdinalizeTests.cs", label="Entry CommandLine.Core.Token.Value(string)", span="24-24"];
m14_6 [cluster="Unk.ShouldAllBeEquivalentTo", file="OrdinalizeTests.cs", label="Entry Unk.ShouldAllBeEquivalentTo", span=""];
m15_10 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="PolishNumberToWordsConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m15_19 [cluster="CommandLine.Core.Token.Name(string)", file="PolishNumberToWordsConverter.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m15_13 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="PolishNumberToWordsConverter.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71"];
m15_11 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="PolishNumberToWordsConverter.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66"];
m15_14 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", file="PolishNumberToWordsConverter.cs", label="Entry CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", span="34-34"];
m15_15 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", file="PolishNumberToWordsConverter.cs", label="var expected = new [] { Token.Name(''x'') }", span="36-36"];
m15_16 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", color=red, community=0, file="PolishNumberToWordsConverter.cs", label="0: var result = Switch.Partition(\r\n                new []\r\n                    {\r\n                        Token.Name(''str''), Token.Value(''strvalue''), Token.Value(''freevalue''),\r\n                        Token.Name(''x''), Token.Value(''freevalue2'')\r\n                    },\r\n                name =>\r\n                    new[] { ''x'', ''switch'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TypeDescriptorKind.Boolean, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>())", span="38-47"];
m15_17 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", file="PolishNumberToWordsConverter.cs", label="expected.ShouldAllBeEquivalentTo(result)", span="49-49"];
m15_18 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", file="PolishNumberToWordsConverter.cs", label="Exit CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", span="34-34"];
m15_12 [cluster="CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TypeDescriptorKind, CommandLine.Infrastructure.Maybe<int>)", file="PolishNumberToWordsConverter.cs", label="Entry CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TypeDescriptorKind, CommandLine.Infrastructure.Maybe<int>)", span="36-36"];
m15_5 [cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="PolishNumberToWordsConverter.cs", label="Entry CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11"];
m15_0 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values_from_empty_token_sequence()", file="PolishNumberToWordsConverter.cs", label="Entry CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values_from_empty_token_sequence()", span="19-19"];
m15_1 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values_from_empty_token_sequence()", color=red, community=0, file="PolishNumberToWordsConverter.cs", label="1: var expected = new Token[] { }", span="21-21"];
m15_2 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values_from_empty_token_sequence()", color=red, community=0, file="PolishNumberToWordsConverter.cs", label="0: var result = Switch.Partition(\r\n                new Token[] { },\r\n                name =>\r\n                    new[] { ''x'', ''switch'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TypeDescriptorKind.Boolean, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>())", span="23-28"];
m15_3 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values_from_empty_token_sequence()", color=red, community=0, file="PolishNumberToWordsConverter.cs", label="0: expected.ShouldAllBeEquivalentTo(result)", span="30-30"];
m15_4 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values_from_empty_token_sequence()", file="PolishNumberToWordsConverter.cs", label="Exit CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values_from_empty_token_sequence()", span="19-19"];
m15_21 [cluster="lambda expression", file="PolishNumberToWordsConverter.cs", label="Entry lambda expression", span="44-47"];
m15_7 [cluster="lambda expression", file="PolishNumberToWordsConverter.cs", label="Entry lambda expression", span="25-28"];
m15_8 [cluster="lambda expression", color=red, community=0, file="PolishNumberToWordsConverter.cs", label="0: new[] { ''x'', ''switch'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TypeDescriptorKind.Boolean, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>()", span="26-28"];
m15_9 [cluster="lambda expression", file="PolishNumberToWordsConverter.cs", label="Exit lambda expression", span="25-28"];
m15_22 [cluster="lambda expression", color=red, community=0, file="PolishNumberToWordsConverter.cs", label="0: new[] { ''x'', ''switch'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TypeDescriptorKind.Boolean, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>()", span="45-47"];
m15_23 [cluster="lambda expression", file="PolishNumberToWordsConverter.cs", label="Exit lambda expression", span="44-47"];
m15_20 [cluster="CommandLine.Core.Token.Value(string)", file="PolishNumberToWordsConverter.cs", label="Entry CommandLine.Core.Token.Value(string)", span="24-24"];
m15_6 [cluster="Unk.ShouldAllBeEquivalentTo", file="PolishNumberToWordsConverter.cs", label="Entry Unk.ShouldAllBeEquivalentTo", span=""];
m17_19 [cluster="lambda expression", file="RomanNumeralExtensions.cs", label="guard.Item1(spec)", span="42-42"];
m17_45 [cluster="CommandLine.Core.Specification.IsOption()", file="RomanNumeralExtensions.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="11-11"];
m17_21 [cluster="System.Func<T, TResult>.Invoke(T)", file="RomanNumeralExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m17_0 [cluster="Humanizer.RomanNumeralExtensions.FromRoman(string)", file="RomanNumeralExtensions.cs", label="Entry Humanizer.RomanNumeralExtensions.FromRoman(string)", span="38-38"];
m17_1 [cluster="Humanizer.RomanNumeralExtensions.FromRoman(string)", file="RomanNumeralExtensions.cs", label="input == null", span="40-40"];
m17_2 [cluster="Humanizer.RomanNumeralExtensions.FromRoman(string)", file="RomanNumeralExtensions.cs", label="throw new ArgumentNullException(''input'');", span="41-41"];
m17_16 [cluster="Humanizer.RomanNumeralExtensions.FromRoman(string)", file="RomanNumeralExtensions.cs", label="total += digit", span="67-67"];
m17_34 [cluster="Humanizer.RomanNumeralExtensions.ToRoman(int)", file="RomanNumeralExtensions.cs", label="sb.Append(pair.Key)", span="93-93"];
m17_40 [cluster="CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", file="RomanNumeralExtensions.cs", label="return specification.Max == -1;", span="77-77"];
m17_42 [cluster="Humanizer.RomanNumeralExtensions.IsInvalidRomanNumeral(string)", file="RomanNumeralExtensions.cs", label="return !ValidRomanNumeral.IsMatch(input);", span="103-103"];
m17_43 [cluster="Humanizer.RomanNumeralExtensions.IsInvalidRomanNumeral(string)", file="RomanNumeralExtensions.cs", label="Exit Humanizer.RomanNumeralExtensions.IsInvalidRomanNumeral(string)", span="101-101"];
m17_44 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string)", file="RomanNumeralExtensions.cs", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string)", span="0-0"];
m17_9 [cluster="Humanizer.RomanNumeralExtensions.FromRoman(string)", file="RomanNumeralExtensions.cs", label="i > 0", span="52-52"];
m17_35 [cluster="Humanizer.RomanNumeralExtensions.ToRoman(int)", file="RomanNumeralExtensions.cs", label="input -= pair.Value", span="94-94"];
m17_41 [cluster="CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", file="RomanNumeralExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", span="75-75"];
m17_39 [cluster="CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", file="RomanNumeralExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", span="75-75"];
m17_20 [cluster="lambda expression", file="RomanNumeralExtensions.cs", label="Exit lambda expression", span="42-42"];
m17_17 [cluster="Humanizer.RomanNumeralExtensions.FromRoman(string)", file="RomanNumeralExtensions.cs", label="return total;", span="70-70"];
m17_24 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="RomanNumeralExtensions.cs", label="TypeDescriptorKind.Scalar", span="55-55"];
m17_25 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="RomanNumeralExtensions.cs", label="return  Maybe.Just(1);", span="56-56"];
m17_29 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", color=green, community=0, file="RomanNumeralExtensions.cs", label="0: min >= 0 && max >= 0", span="60-60"];
m17_26 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="RomanNumeralExtensions.cs", label="TypeDescriptorKind.Sequence", span="57-57"];
m17_27 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="RomanNumeralExtensions.cs", label="var min = specification.Min", span="58-58"];
m17_28 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="RomanNumeralExtensions.cs", label="var max = specification.Max", span="59-59"];
m17_30 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="RomanNumeralExtensions.cs", label="return Maybe.Just(max);", span="62-62"];
m17_31 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="RomanNumeralExtensions.cs", label="return Maybe.Nothing<int>();", span="67-67"];
m17_33 [cluster="System.Type.ToDescriptorKind()", file="RomanNumeralExtensions.cs", label="Entry System.Type.ToDescriptorKind()", span="22-22"];
m17_32 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="RomanNumeralExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", span="51-51"];
m17_36 [cluster="CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", file="RomanNumeralExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", span="70-70"];
m17_37 [cluster="CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", file="RomanNumeralExtensions.cs", label="return specification.Min == -1;", span="72-72"];
m17_38 [cluster="CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", file="RomanNumeralExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", span="70-70"];
m17_22 [cluster="Humanizer.RomanNumeralExtensions.IsInvalidRomanNumeral(string)", file="RomanNumeralExtensions.cs", label="Entry Humanizer.RomanNumeralExtensions.IsInvalidRomanNumeral(string)", span="101-101"];
m17_23 [cluster="System.ArgumentException.ArgumentException(string, string)", file="RomanNumeralExtensions.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m17_18 [cluster="Humanizer.RomanNumeralExtensions.FromRoman(string)", file="RomanNumeralExtensions.cs", label="Exit Humanizer.RomanNumeralExtensions.FromRoman(string)", span="38-38"];
m17_5 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", color=green, community=0, file="RomanNumeralExtensions.cs", label="2: Exit CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="16-16"];
m17_3 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="RomanNumeralExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="16-16"];
m17_4 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", color=red, community=0, file="RomanNumeralExtensions.cs", label="0: return specification.Tag == SpecificationType.Value;", span="18-18"];
m17_6 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", file="RomanNumeralExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", span="21-21"];
m17_7 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", color=red, community=0, file="RomanNumeralExtensions.cs", label="3: return new OptionSpecification(\r\n                specification.ShortName,\r\n                newLongName,\r\n                specification.Required,\r\n                specification.SetName,\r\n                specification.Min,\r\n                specification.Max,\r\n                specification.Separator,\r\n                specification.DefaultValue,\r\n                specification.ConversionType,\r\n                specification.HelpText,\r\n                specification.MetaValue,\r\n                enumValues);", span="23-35"];
m17_8 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", file="RomanNumeralExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", span="21-21"];
m17_10 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="RomanNumeralExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="38-38"];
m17_12 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="RomanNumeralExtensions.cs", label="specifications.Any(spec => guard.Item1(spec))", span="42-42"];
m17_11 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="RomanNumeralExtensions.cs", label=guardsLookup, span="40-40"];
m17_13 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="RomanNumeralExtensions.cs", label="throw new ApplicationException(guard.Item2);", span="44-44"];
m17_14 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="RomanNumeralExtensions.cs", label="return specifications;", span="48-48"];
m17_15 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="RomanNumeralExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="38-38"];
m17_46 [file="RomanNumeralExtensions.cs", label=guard, span=""];
m20_0 [cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", file="ToQuantityExtensions.cs", label="Entry Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", span="45-45"];
m20_1 [cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", color=green, community=0, file="ToQuantityExtensions.cs", label="0: var transformedInput = quantity == 1\r\n                ? input.Singularize(Plurality.CouldBeEither)\r\n                : input.Pluralize(Plurality.CouldBeEither)", span="47-49"];
m20_2 [cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", color=green, community=0, file="ToQuantityExtensions.cs", label="0: showQuantityAs == ShowQuantityAs.None", span="51-51"];
m20_3 [cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", color=green, community=0, file="ToQuantityExtensions.cs", label="1: return transformedInput;", span="52-52"];
m20_5 [cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", color=green, community=0, file="ToQuantityExtensions.cs", label="0: return string.Format(''{0} {1}'', quantity, transformedInput);", span="55-55"];
m20_6 [cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", color=green, community=0, file="ToQuantityExtensions.cs", label="0: return string.Format(''{0} {1}'', quantity.ToWords(), transformedInput);", span="57-57"];
m20_4 [cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", color=green, community=0, file="ToQuantityExtensions.cs", label="0: showQuantityAs == ShowQuantityAs.Numeric", span="54-54"];
m20_7 [cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", file="ToQuantityExtensions.cs", label="Exit Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", span="45-45"];
m20_10 [cluster="string.Format(string, object, object)", file="ToQuantityExtensions.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m20_9 [cluster="string.Pluralize(Humanizer.Plurality)", file="ToQuantityExtensions.cs", label="Entry string.Pluralize(Humanizer.Plurality)", span="170-170"];
m20_11 [cluster="int.ToWords()", file="ToQuantityExtensions.cs", label="Entry int.ToWords()", span="32-32"];
m20_8 [cluster="string.Singularize(Humanizer.Plurality)", file="ToQuantityExtensions.cs", label="Entry string.Singularize(Humanizer.Plurality)", span="194-194"];
m22_15 [cluster="Unk.Replace", file="Truncator.cs", label="Entry Unk.Replace", span=""];
m22_16 [cluster="lambda expression", file="Truncator.cs", label="Entry lambda expression", span="26-29"];
m22_17 [cluster="lambda expression", color=green, community=0, file="Truncator.cs", label="1: word.All(Char.IsUpper) && word.Length > 1\r\n                        ? word\r\n                        : word.ToLower()", span="27-29"];
m22_37 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string)", file="Truncator.cs", label="WriteMessage(message, Console.Out)", span="111-111"];
m22_34 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", file="Truncator.cs", label="var humanizedString = input.Humanize()", span="62-62"];
m22_31 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="Truncator.cs", label="throw new ArgumentNullException(''writer'');", span="93-93"];
m22_6 [cluster="Humanizer.StringHumanizeExtensions.FromPascalCase(string)", color=green, community=0, file="Truncator.cs", label="0: var result = PascalCaseWordBoundaryRegex\r\n                .Split(name)\r\n                .Select(word =>\r\n                    word.All(Char.IsUpper) && word.Length > 1\r\n                        ? word\r\n                        : word.ToLower())\r\n                .Aggregate((res, word) => res + '' '' + word)", span="24-30"];
m22_24 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="Truncator.cs", label="Entry Humanizer.StringHumanizeExtensions.Humanize(string)", span="42-42"];
m22_19 [cluster="CommandLine.Text.HeadingInfo.ToString()", file="Truncator.cs", label="var isVersionNull = string.IsNullOrEmpty(version)", span="74-74"];
m22_32 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="Truncator.cs", label="writer.WriteLine(\r\n                new StringBuilder(programName.Length + message.Length + 2)\r\n                    .Append(programName)\r\n                    .Append('': '')\r\n                    .Append(message)\r\n                    .ToString())", span="95-100"];
m22_7 [cluster="Humanizer.StringHumanizeExtensions.FromPascalCase(string)", file="Truncator.cs", label="result = Char.ToUpper(result[0]) +\r\n                result.Substring(1, result.Length - 1)", span="32-33"];
m22_76 [cluster="System.Text.RegularExpressions.Regex.Replace(string, string, string)", file="Truncator.cs", label="Entry System.Text.RegularExpressions.Regex.Replace(string, string, string)", span="0-0"];
m22_26 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="Truncator.cs", label="return input;", span="46-46"];
m22_23 [cluster="lambda expression", file="Truncator.cs", label="Exit lambda expression", span="30-30"];
m22_69 [cluster="Humanizer.StringHumanizeExtensions.Camelize(string)", file="Truncator.cs", label="Entry Humanizer.StringHumanizeExtensions.Camelize(string)", span="122-122"];
m22_71 [cluster="Humanizer.StringHumanizeExtensions.Camelize(string)", file="Truncator.cs", label="return word.Substring(0, 1).ToLower() + word.Substring(1);", span="125-125"];
m22_70 [cluster="Humanizer.StringHumanizeExtensions.Camelize(string)", file="Truncator.cs", label="string word = Pascalize(input)", span="124-124"];
m22_72 [cluster="Humanizer.StringHumanizeExtensions.Camelize(string)", file="Truncator.cs", label="Exit Humanizer.StringHumanizeExtensions.Camelize(string)", span="122-122"];
m22_53 [cluster="string.ToUpper()", file="Truncator.cs", label="Entry string.ToUpper()", span="0-0"];
m22_54 [cluster="string.Substring(int, int)", file="Truncator.cs", label="Entry string.Substring(int, int)", span="0-0"];
m22_12 [cluster="lambda expression", file="Truncator.cs", label="Entry lambda expression", span="52-52"];
m22_36 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", file="Truncator.cs", label="Exit Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", span="60-60"];
m22_38 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="Truncator.cs", label="Entry Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", span="73-73"];
m22_25 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string)", file="Truncator.cs", label="input.All(Char.IsUpper)", span="45-45"];
m22_18 [cluster="lambda expression", file="Truncator.cs", label="Exit lambda expression", span="26-29"];
m22_20 [cluster="string.ToLower()", file="Truncator.cs", label="Entry string.ToLower()", span="0-0"];
m22_21 [cluster="lambda expression", file="Truncator.cs", label="Entry lambda expression", span="30-30"];
m22_62 [cluster="Humanizer.StringHumanizeExtensions.Pascalize(string)", file="Truncator.cs", label="Entry Humanizer.StringHumanizeExtensions.Pascalize(string)", span="112-112"];
m22_63 [cluster="Humanizer.StringHumanizeExtensions.Pascalize(string)", file="Truncator.cs", label="return Regex.Replace(input, ''(?:^|_)(.)'', match => match.Groups[1].Value.ToUpper());", span="114-114"];
m22_64 [cluster="Humanizer.StringHumanizeExtensions.Pascalize(string)", file="Truncator.cs", label="Exit Humanizer.StringHumanizeExtensions.Pascalize(string)", span="112-112"];
m22_52 [cluster="System.Globalization.TextInfo.ToTitleCase(string)", file="Truncator.cs", label="Entry System.Globalization.TextInfo.ToTitleCase(string)", span="0-0"];
m22_14 [cluster="lambda expression", file="Truncator.cs", label="Exit lambda expression", span="52-52"];
m22_22 [cluster="lambda expression", color=green, community=0, file="Truncator.cs", label="1: res + '' '' + word", span="30-30"];
m22_61 [cluster="string.Humanize(Humanizer.LetterCasing)", file="Truncator.cs", label="Entry string.Humanize(Humanizer.LetterCasing)", span="60-60"];
m22_73 [cluster="Humanizer.StringHumanizeExtensions.Underscore(string)", file="Truncator.cs", label="Entry Humanizer.StringHumanizeExtensions.Underscore(string)", span="133-133"];
m22_74 [cluster="Humanizer.StringHumanizeExtensions.Underscore(string)", file="Truncator.cs", label="return Regex.Replace(\r\n                Regex.Replace(\r\n                    Regex.Replace(input, @''([A-Z]+)([A-Z][a-z])'', ''$1_$2''), @''([a-z\d])([A-Z])'', ''$1_$2''), @''[-\s]'', ''_'').ToLower();", span="135-137"];
m22_75 [cluster="Humanizer.StringHumanizeExtensions.Underscore(string)", file="Truncator.cs", label="Exit Humanizer.StringHumanizeExtensions.Underscore(string)", span="133-133"];
m22_56 [cluster="string.Concat(string, string)", file="Truncator.cs", label="Entry string.Concat(string, string)", span="0-0"];
m22_29 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="Truncator.cs", label="throw new ArgumentException(''message'');", span="92-92"];
m22_27 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="Truncator.cs", label="Entry CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", span="90-90"];
m22_28 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="Truncator.cs", label="string.IsNullOrWhiteSpace(''message'')", span="92-92"];
m22_30 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="Truncator.cs", label="writer == null", span="93-93"];
m22_65 [cluster="System.Text.RegularExpressions.Regex.Replace(string, string, System.Text.RegularExpressions.MatchEvaluator)", file="Truncator.cs", label="Entry System.Text.RegularExpressions.Regex.Replace(string, string, System.Text.RegularExpressions.MatchEvaluator)", span="0-0"];
m22_33 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", file="Truncator.cs", label="Entry Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", span="60-60"];
m22_35 [cluster="Humanizer.StringHumanizeExtensions.Humanize(string, Humanizer.LetterCasing)", file="Truncator.cs", label="return ApplyCase(humanizedString, casing);", span="64-64"];
m22_66 [cluster="lambda expression", file="Truncator.cs", label="Entry lambda expression", span="114-114"];
m22_8 [cluster="Humanizer.StringHumanizeExtensions.FromPascalCase(string)", file="Truncator.cs", label="return result.Replace('' i '', '' I '');", span="34-34"];
m22_9 [cluster="Humanizer.StringHumanizeExtensions.FromPascalCase(string)", file="Truncator.cs", label="Exit Humanizer.StringHumanizeExtensions.FromPascalCase(string)", span="22-22"];
m22_10 [cluster="System.Text.RegularExpressions.Regex.Split(string)", file="Truncator.cs", label="Entry System.Text.RegularExpressions.Regex.Split(string)", span="0-0"];
m22_13 [cluster="Unk.ToUpper", color=red, community=0, file="Truncator.cs", label="1: Entry Unk.ToUpper", span=""];
m22_67 [cluster="lambda expression", file="Truncator.cs", label="match.Groups[1].Value.ToUpper()", span="114-114"];
m22_68 [cluster="lambda expression", file="Truncator.cs", label="Exit lambda expression", span="114-114"];
m22_57 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="Truncator.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m22_11 [cluster="Unk.GetFileNameWithoutExtension", file="Truncator.cs", label="Entry Unk.GetFileNameWithoutExtension", span=""];
m22_39 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="Truncator.cs", label=casing, span="75-75"];
m22_40 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="Truncator.cs", label="LetterCasing.Title", span="77-77"];
m22_41 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="Truncator.cs", label="return CultureInfo.CurrentCulture.TextInfo.ToTitleCase(input);", span="78-78"];
m22_58 [cluster="Humanizer.StringHumanizeExtensions.Titleize(string)", file="Truncator.cs", label="Entry Humanizer.StringHumanizeExtensions.Titleize(string)", span="102-102"];
m22_59 [cluster="Humanizer.StringHumanizeExtensions.Titleize(string)", color=green, community=0, file="Truncator.cs", label="0: return input.Humanize(LetterCasing.Title);", span="104-104"];
m22_60 [cluster="Humanizer.StringHumanizeExtensions.Titleize(string)", file="Truncator.cs", label="Exit Humanizer.StringHumanizeExtensions.Titleize(string)", span="102-102"];
m22_43 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="Truncator.cs", label="return input.ToLower();", span="81-81"];
m22_42 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="Truncator.cs", label="CommandLine.Text.HeadingInfo", span=""];
m22_45 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="Truncator.cs", label="return input.ToUpper();", span="84-84"];
m22_47 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="Truncator.cs", label="input.Length >= 1", span="87-87"];
m22_48 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="Truncator.cs", label="return String.Concat(input.Substring(0, 1).ToUpper(), input.Substring(1));", span="88-88"];
m22_49 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="Truncator.cs", label="return input.ToUpper();", span="90-90"];
m22_50 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="Truncator.cs", label="throw new ArgumentOutOfRangeException(''casing'');", span="93-93"];
m22_44 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="Truncator.cs", label="LetterCasing.AllCaps", span="83-83"];
m22_46 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="Truncator.cs", label="LetterCasing.Sentence", span="86-86"];
m22_51 [cluster="Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", file="Truncator.cs", label="Exit Humanizer.StringHumanizeExtensions.ApplyCase(string, Humanizer.LetterCasing)", span="73-73"];
m22_0 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="Truncator.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="27-27"];
m22_1 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", color=red, community=0, file="Truncator.cs", label="0: string.IsNullOrWhiteSpace(''programName'')", span="29-29"];
m22_3 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="Truncator.cs", label="this.programName = programName", span="31-31"];
m22_4 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="Truncator.cs", label="this.version = version", span="32-32"];
m22_2 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", color=red, community=0, file="Truncator.cs", label="2: throw new ArgumentException(''programName'');", span="29-29"];
m22_5 [cluster="Humanizer.StringHumanizeExtensions.FromPascalCase(string)", file="Truncator.cs", label="Entry Humanizer.StringHumanizeExtensions.FromPascalCase(string)", span="22-22"];
m22_55 [cluster="string.Substring(int)", file="Truncator.cs", label="Entry string.Substring(int)", span="0-0"];
m23_8 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="TruncatorTests.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="17-17"];
m23_14 [cluster="Unk.SequenceEqual", file="TruncatorTests.cs", label="Entry Unk.SequenceEqual", span=""];
m23_9 [cluster="System.Collections.Generic.List<T>.List()", file="TruncatorTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m23_6 [cluster="CommandLine.Core.Token.Name(string)", file="TruncatorTests.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m23_11 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="TruncatorTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m23_15 [cluster="Unk.True", file="TruncatorTests.cs", label="Entry Unk.True", span=""];
m23_13 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", file="TruncatorTests.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", span="48-48"];
m23_0 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TruncatorTests.cs", label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", span="16-16"];
m23_1 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TruncatorTests.cs", label="var expectedTokens = new[] { Token.Name(''i''), Token.Value(''10''), Token.Name(''string-seq''),\r\n                Token.Value(''aaa''), Token.Value(''bb''),  Token.Value(''cccc''), Token.Name(''switch''), }", span="19-20"];
m23_2 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TruncatorTests.cs", label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, -1, -1, ',', null, typeof(IEnumerable<string>), string.Empty, string.Empty, new List<string>())}", span="21-22"];
m23_4 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TruncatorTests.cs", label="Assert.True(expectedTokens.SequenceEqual(result.Value))", span="34-34"];
m23_3 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TruncatorTests.cs", label="var result =\r\n                Tokenizer.ExplodeOptionList(\r\n                    StatePair.Create(\r\n                        Enumerable.Empty<Token>().Concat(new[] { Token.Name(''i''), Token.Value(''10''),\r\n                            Token.Name(''string-seq''), Token.Value(''aaa,bb,cccc''), Token.Name(''switch'') }),\r\n                        Enumerable.Empty<Error>()),\r\n                        optionName => NameLookup.WithSeparator(optionName, specs, StringComparer.InvariantCulture))", span="25-31"];
m23_5 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TruncatorTests.cs", label="Exit CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", span="16-16"];
m23_12 [cluster="CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="TruncatorTests.cs", label="Entry CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="58-58"];
m23_26 [cluster="lambda expression", file="TruncatorTests.cs", label="Entry lambda expression", span="55-55"];
m23_17 [cluster="lambda expression", file="TruncatorTests.cs", label="NameLookup.WithSeparator(optionName, specs, StringComparer.InvariantCulture)", span="31-31"];
m23_16 [cluster="lambda expression", file="TruncatorTests.cs", label="Entry lambda expression", span="31-31"];
m23_18 [cluster="lambda expression", file="TruncatorTests.cs", label="Exit lambda expression", span="31-31"];
m23_27 [cluster="lambda expression", file="TruncatorTests.cs", label="NameLookup.WithSeparator(optionName, specs, StringComparer.InvariantCulture)", span="55-55"];
m23_28 [cluster="lambda expression", file="TruncatorTests.cs", label="Exit lambda expression", span="55-55"];
m23_7 [cluster="CommandLine.Core.Token.Value(string)", file="TruncatorTests.cs", label="Entry CommandLine.Core.Token.Value(string)", span="24-24"];
m23_20 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TruncatorTests.cs", label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", span="40-40"];
m23_21 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TruncatorTests.cs", label="var expectedTokens = new[] { Token.Name(''x''), Token.Name(''string-seq''),\r\n                Token.Value(''aaa''), Token.Value(''bb''),  Token.Value(''cccc''), Token.Name(''switch''), }", span="43-44"];
m23_22 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TruncatorTests.cs", label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, -1, -1, ',', null, typeof(IEnumerable<string>), string.Empty, string.Empty, new List<string>())}", span="45-46"];
m23_24 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TruncatorTests.cs", label="Assert.True(expectedTokens.SequenceEqual(result.Value))", span="58-58"];
m23_23 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TruncatorTests.cs", label="var result =\r\n                Tokenizer.ExplodeOptionList(\r\n                    StatePair.Create(\r\n                        Enumerable.Empty<Token>().Concat(new[] { Token.Name(''x''),\r\n                            Token.Name(''string-seq''), Token.Value(''aaa,bb,cccc''), Token.Name(''switch'') }),\r\n                        Enumerable.Empty<Error>()),\r\n                        optionName => NameLookup.WithSeparator(optionName, specs, StringComparer.InvariantCulture))", span="49-55"];
m23_25 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TruncatorTests.cs", label="Exit CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", span="40-40"];
m23_10 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="TruncatorTests.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m23_19 [cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TruncatorTests.cs", label="Entry CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="17-17"];
m23_29 [file="TruncatorTests.cs", label=specs, span=""];
m23_30 [file="TruncatorTests.cs", label=specs, span=""];
m1_3 -> m1_4  [color=green, key=0, style=solid];
m1_4 -> m1_5  [color=green, key=0, style=solid];
m1_4 -> m1_0  [color=green, key=2, style=dotted];
m1_4 -> m1_6  [color=green, key=2, style=dotted];
m1_5 -> m1_3  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [color=green, key=0, style=solid];
m1_1 -> m1_2  [color=green, key=0, style=solid];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m1_7 -> m1_1  [color=green, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_0 -> m6_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_0 -> m6_5  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_0 -> m6_6  [color=green, key=1, label=string, style=dashed];
m6_0 -> m6_7  [color=green, key=1, label=string, style=dashed];
m6_0 -> m6_2  [color=darkorchid, key=3, label="method methodReturn string Truncate", style=bold];
m6_0 -> m6_0  [color=darkorchid, key=3, label="method methodReturn string Truncate", style=bold];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=0, style=solid];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_5  [key=0, style=solid];
m6_4 -> m6_8  [key=0, style=solid];
m6_5 -> m6_6  [color=green, key=0, style=solid];
m6_5 -> m6_7  [color=green, key=0, style=solid];
m6_6 -> m6_8  [color=green, key=0, style=solid];
m6_6 -> m6_9  [color=green, key=2, style=dotted];
m6_7 -> m6_8  [color=green, key=0, style=solid];
m6_7 -> m6_9  [color=green, key=2, style=dotted];
m6_2 -> m6_8  [key=0, style=solid];
m6_8 -> m6_0  [color=blue, key=0, style=bold];
m7_37 -> m7_38  [key=0, style=solid];
m7_39 -> m7_12  [key=2, style=dotted];
m7_39 -> m7_31  [key=2, style=dotted];
m7_39 -> m7_40  [key=0, style=solid];
m7_39 -> m7_42  [key=0, style=solid];
m7_39 -> m7_44  [key=0, style=solid];
m7_39 -> m7_46  [key=0, style=solid];
m7_39 -> m7_50  [key=0, style=solid];
m7_38 -> m7_8  [key=2, style=dotted];
m7_38 -> m7_31  [key=2, style=dotted];
m7_38 -> m7_39  [key=0, style=solid];
m7_38 -> m7_41  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_38 -> m7_43  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_38 -> m7_45  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_38 -> m7_47  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_38 -> m7_48  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_38 -> m7_49  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_38 -> m7_34  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m7_38 -> m7_33  [color=darkorchid, key=3, label="Parameter variable Humanizer.LetterCasing casing", style=bold];
m7_40 -> m7_37  [color=blue, key=0, style=bold];
m7_40 -> m7_41  [key=0, style=solid];
m7_41 -> m7_42  [key=0, style=solid];
m7_41 -> m7_51  [key=0, style=solid];
m7_41 -> m7_52  [key=2, style=dotted];
m7_43 -> m7_12  [key=2, style=dotted];
m7_43 -> m7_31  [key=2, style=dotted];
m7_43 -> m7_44  [key=0, style=solid];
m7_43 -> m7_51  [key=0, style=solid];
m7_43 -> m7_20  [key=2, style=dotted];
m7_42 -> m7_8  [key=2, style=dotted];
m7_42 -> m7_31  [key=2, style=dotted];
m7_42 -> m7_43  [key=0, style=solid];
m7_44 -> m7_41  [color=blue, key=0, style=bold];
m7_44 -> m7_45  [key=0, style=solid];
m7_19 -> m7_17  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_0 -> m7_0  [color=darkorchid, key=3, label="Field variable System.Func<string, string> FromUnderscoreDashSeparatedWords", style=bold];
m7_1 -> m7_4  [key=2, style=dotted];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_1 -> m7_3  [key=2, style=dotted];
m7_2 -> m7_4  [key=2, style=dotted];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_9  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_2 -> m7_0  [color=blue, key=0, style=bold];
m7_3 -> m7_0  [color=blue, key=0, style=bold];
m7_32 -> m7_33  [key=0, style=solid];
m7_54 -> m7_55  [key=0, style=solid];
m7_56 -> m7_12  [key=2, style=dotted];
m7_56 -> m7_31  [key=2, style=dotted];
m7_56 -> m7_57  [key=0, style=solid];
m7_55 -> m7_8  [key=2, style=dotted];
m7_55 -> m7_31  [key=2, style=dotted];
m7_55 -> m7_56  [key=0, style=solid];
m7_57 -> m7_54  [color=blue, key=0, style=bold];
m7_23 -> m7_24  [color=green, key=0, style=solid];
m7_23 -> m7_21  [color=blue, key=0, style=bold];
m7_24 -> m7_25  [color=green, key=0, style=solid];
m7_24 -> m7_12  [color=green, key=2, style=dotted];
m7_24 -> m7_26  [color=green, key=2, style=dotted];
m7_24 -> m7_27  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_24 -> m7_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_24 -> m7_29  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_24 -> m7_24  [color=darkorchid, key=3, label="method methodReturn string Humanize", style=bold];
m7_24 -> m7_5  [color=darkorchid, key=3, label="method methodReturn string Humanize", style=bold];
m7_25 -> m7_23  [color=blue, key=0, style=bold];
m7_25 -> m7_26  [key=0, style=solid];
m7_25 -> m7_27  [key=0, style=solid];
m7_25 -> m7_19  [key=2, style=dotted];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_15  [key=2, style=dotted];
m7_27 -> m7_28  [color=green, key=0, style=solid];
m7_27 -> m7_29  [key=0, style=solid];
m7_27 -> m7_31  [key=2, style=dotted];
m7_28 -> m7_29  [color=green, key=0, style=solid];
m7_28 -> m7_8  [color=green, key=2, style=dotted];
m7_28 -> m7_31  [color=green, key=2, style=dotted];
m7_28 -> m7_30  [key=0, style=solid];
m7_28 -> m7_32  [key=2, style=dotted];
m7_29 -> m7_30  [color=green, key=0, style=solid];
m7_29 -> m7_12  [color=green, key=2, style=dotted];
m7_29 -> m7_31  [color=green, key=2, style=dotted];
m7_29 -> m7_5  [key=2, style=dotted];
m7_30 -> m7_27  [color=blue, key=0, style=bold];
m7_30 -> m7_24  [color=blue, key=0, style=bold];
m7_35 -> m7_12  [key=2, style=dotted];
m7_35 -> m7_31  [key=2, style=dotted];
m7_35 -> m7_36  [key=0, style=solid];
m7_35 -> m7_38  [key=2, style=dotted];
m7_34 -> m7_8  [key=2, style=dotted];
m7_34 -> m7_31  [key=2, style=dotted];
m7_34 -> m7_35  [key=0, style=solid];
m7_34 -> m7_37  [key=2, style=dotted];
m7_34 -> m7_24  [color=darkorchid, key=3, label="Local variable string humanizedString", style=bold];
m7_33 -> m7_35  [color=darkseagreen4, key=1, label="Humanizer.LetterCasing", style=dashed];
m7_33 -> m7_34  [key=0, style=solid];
m7_33 -> m7_38  [color=darkorchid, key=3, label="method methodReturn string Humanize", style=bold];
m7_36 -> m7_32  [color=blue, key=0, style=bold];
m7_36 -> m7_33  [color=blue, key=0, style=bold];
m7_52 -> m7_49  [color=blue, key=0, style=bold];
m7_14 -> m7_15  [color=green, key=0, style=solid];
m7_14 -> m7_4  [key=2, style=dotted];
m7_14 -> m7_17  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_26 -> m7_30  [key=0, style=solid];
m7_13 -> m7_14  [key=0, style=solid];
m7_15 -> m7_16  [color=green, key=0, style=solid];
m7_15 -> m7_4  [color=green, key=2, style=dotted];
m7_15 -> m7_20  [color=green, key=1, label="lambda expression", style=dashed];
m7_16 -> m7_13  [color=blue, key=0, style=bold];
m7_16 -> m7_17  [key=0, style=solid];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_5  [color=blue, key=0, style=bold];
m7_21 -> m7_22  [color=green, key=0, style=solid];
m7_21 -> m7_6  [key=0, style=solid];
m7_21 -> m7_12  [color=green, key=2, style=dotted];
m7_17 -> m7_18  [key=0, style=solid];
m7_17 -> m7_19  [key=2, style=dotted];
m7_17 -> m7_20  [key=2, style=dotted];
m7_18 -> m7_16  [color=blue, key=0, style=bold];
m7_18 -> m7_8  [key=2, style=dotted];
m7_18 -> m7_19  [key=0, style=solid];
m7_22 -> m7_23  [color=red, key=0, style=solid];
m7_22 -> m7_20  [color=blue, key=0, style=bold];
m7_20 -> m7_21  [color=green, key=0, style=solid];
m7_10 -> m7_12  [key=2, style=dotted];
m7_10 -> m7_11  [key=0, style=solid];
m7_6 -> m7_8  [key=2, style=dotted];
m7_6 -> m7_23  [key=0, style=solid];
m7_6 -> m7_7  [color=red, key=0, style=solid];
m7_6 -> m7_10  [color=red, key=2, style=dotted];
m7_6 -> m7_11  [color=red, key=2, style=dotted];
m7_6 -> m7_12  [color=red, key=2, style=dotted];
m7_6 -> m7_16  [color=red, key=1, label="lambda expression", style=dashed];
m7_6 -> m7_21  [color=red, key=1, label="lambda expression", style=dashed];
m7_11 -> m7_9  [color=blue, key=0, style=bold];
m7_49 -> m7_50  [key=0, style=solid];
m7_49 -> m7_51  [key=0, style=solid];
m7_49 -> m7_53  [key=2, style=dotted];
m7_51 -> m7_12  [key=2, style=dotted];
m7_51 -> m7_31  [key=2, style=dotted];
m7_51 -> m7_52  [key=0, style=solid];
m7_51 -> m7_53  [key=2, style=dotted];
m7_51 -> m7_38  [color=blue, key=0, style=bold];
m7_50 -> m7_8  [key=2, style=dotted];
m7_50 -> m7_31  [key=2, style=dotted];
m7_50 -> m7_51  [key=0, style=solid];
m7_50 -> m7_53  [key=2, style=dotted];
m7_50 -> m7_57  [key=2, style=dotted];
m7_58 -> m7_59  [key=0, style=solid];
m7_60 -> m7_12  [key=2, style=dotted];
m7_60 -> m7_31  [key=2, style=dotted];
m7_60 -> m7_61  [key=0, style=solid];
m7_59 -> m7_8  [key=2, style=dotted];
m7_59 -> m7_31  [key=2, style=dotted];
m7_59 -> m7_60  [key=0, style=solid];
m7_61 -> m7_58  [color=blue, key=0, style=bold];
m7_45 -> m7_51  [key=0, style=solid];
m7_45 -> m7_53  [key=2, style=dotted];
m7_45 -> m7_47  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_45 -> m7_46  [key=0, style=solid];
m7_47 -> m7_48  [key=0, style=solid];
m7_47 -> m7_49  [key=0, style=solid];
m7_47 -> m7_12  [key=2, style=dotted];
m7_47 -> m7_31  [key=2, style=dotted];
m7_48 -> m7_51  [key=0, style=solid];
m7_48 -> m7_54  [key=2, style=dotted];
m7_48 -> m7_53  [key=2, style=dotted];
m7_48 -> m7_55  [key=2, style=dotted];
m7_48 -> m7_56  [key=2, style=dotted];
m7_48 -> m7_45  [color=blue, key=0, style=bold];
m7_46 -> m7_47  [key=0, style=solid];
m7_46 -> m7_8  [key=2, style=dotted];
m7_46 -> m7_31  [key=2, style=dotted];
m7_5 -> m7_6  [color=red, key=0, style=solid];
m7_5 -> m7_24  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m7_7 -> m7_8  [color=red, key=0, style=solid];
m7_7 -> m7_13  [color=red, key=2, style=dotted];
m7_7 -> m7_14  [color=red, key=2, style=dotted];
m7_7 -> m7_7  [color=red, key=1, label=result, style=dashed];
m8_0 -> m8_1  [color=red, key=0, style=solid];
m8_1 -> m8_2  [color=red, key=0, style=solid];
m8_1 -> m8_3  [color=red, key=2, style=dotted];
m8_1 -> m8_4  [color=red, key=2, style=dotted];
m8_2 -> m8_0  [color=blue, key=0, style=bold];
m8_8 -> m8_9  [key=0, style=solid];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_3  [key=2, style=dotted];
m8_9 -> m8_4  [key=2, style=dotted];
m8_10 -> m8_8  [color=blue, key=0, style=bold];
m8_14 -> m8_15  [color=red, key=0, style=solid];
m8_15 -> m8_16  [color=red, key=0, style=solid];
m8_15 -> m8_3  [color=red, key=2, style=dotted];
m8_15 -> m8_4  [color=red, key=2, style=dotted];
m8_16 -> m8_14  [color=blue, key=0, style=bold];
m8_5 -> m8_6  [color=red, key=0, style=solid];
m8_6 -> m8_7  [color=red, key=0, style=solid];
m8_6 -> m8_3  [color=red, key=2, style=dotted];
m8_6 -> m8_4  [color=red, key=2, style=dotted];
m8_7 -> m8_5  [color=blue, key=0, style=bold];
m8_11 -> m8_12  [key=0, style=solid];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_3  [key=2, style=dotted];
m8_12 -> m8_4  [key=2, style=dotted];
m8_13 -> m8_11  [color=blue, key=0, style=bold];
m9_32 -> m9_33  [key=0, style=solid];
m9_32 -> m9_36  [color=green, key=0, style=solid];
m9_33 -> m9_34  [color=green, key=0, style=solid];
m9_33 -> m9_19  [key=2, style=dotted];
m9_33 -> m9_20  [key=2, style=dotted];
m9_33 -> m9_35  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_33 -> m9_33  [color=darkseagreen4, key=1, label=pair, style=dashed];
m9_33 -> m9_32  [key=0, style=solid];
m9_34 -> m9_35  [color=green, key=0, style=solid];
m9_34 -> m9_19  [key=2, style=dotted];
m9_34 -> m9_20  [key=2, style=dotted];
m9_34 -> m9_5  [key=2, style=dotted];
m9_34 -> m9_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_34 -> m9_34  [color=green, key=1, label=pair, style=dashed];
m9_34 -> m9_40  [color=green, key=2, style=dotted];
m9_35 -> m9_36  [key=0, style=solid];
m9_35 -> m9_6  [key=2, style=dotted];
m9_35 -> m9_35  [color=green, key=1, label=int, style=dashed];
m9_35 -> m9_33  [color=green, key=0, style=solid];
m9_36 -> m9_32  [color=blue, key=0, style=bold];
m9_36 -> m9_37  [color=green, key=0, style=solid];
m9_36 -> m9_41  [color=green, key=2, style=dotted];
m9_38 -> m9_39  [key=0, style=solid];
m9_38 -> m9_10  [key=2, style=dotted];
m9_38 -> m9_11  [key=2, style=dotted];
m9_38 -> m9_12  [key=2, style=dotted];
m9_38 -> m9_13  [key=2, style=dotted];
m9_14 -> m9_15  [key=0, style=solid];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_19  [key=2, style=dotted];
m9_15 -> m9_20  [key=2, style=dotted];
m9_15 -> m9_17  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_19  [key=2, style=dotted];
m9_16 -> m9_20  [key=2, style=dotted];
m9_16 -> m9_5  [key=2, style=dotted];
m9_16 -> m9_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_6  [key=2, style=dotted];
m9_18 -> m9_14  [color=blue, key=0, style=bold];
m9_39 -> m9_37  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_3  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_5  [key=2, style=dotted];
m9_2 -> m9_7  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_6  [key=2, style=dotted];
m9_4 -> m9_0  [color=blue, key=0, style=bold];
m9_24 -> m9_25  [key=0, style=solid];
m9_25 -> m9_26  [key=0, style=solid];
m9_25 -> m9_19  [key=2, style=dotted];
m9_25 -> m9_20  [key=2, style=dotted];
m9_25 -> m9_27  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_25 -> m9_35  [color=green, key=1, label=int, style=dashed];
m9_25 -> m9_29  [color=darkseagreen4, key=1, label=int, style=dashed];
m9_25 -> m9_33  [color=darkseagreen4, key=1, label=int, style=dashed];
m9_26 -> m9_27  [key=0, style=solid];
m9_26 -> m9_19  [key=2, style=dotted];
m9_26 -> m9_20  [key=2, style=dotted];
m9_26 -> m9_5  [key=2, style=dotted];
m9_26 -> m9_29  [color=darkseagreen4, key=1, label=minValue, style=dashed];
m9_27 -> m9_28  [key=0, style=solid];
m9_27 -> m9_6  [key=2, style=dotted];
m9_27 -> m9_29  [color=darkseagreen4, key=1, label=maxValue, style=dashed];
m9_28 -> m9_24  [color=blue, key=0, style=bold];
m9_28 -> m9_31  [color=darkseagreen4, key=1, label=maxRomanNumeralLength, style=dashed];
m9_28 -> m9_29  [key=0, style=solid];
m9_37 -> m9_38  [key=0, style=solid];
m9_37 -> m9_25  [color=blue, key=0, style=bold];
m9_7 -> m9_8  [key=0, style=solid];
m9_8 -> m9_9  [key=0, style=solid];
m9_8 -> m9_10  [key=2, style=dotted];
m9_8 -> m9_11  [key=2, style=dotted];
m9_8 -> m9_12  [key=2, style=dotted];
m9_8 -> m9_13  [key=2, style=dotted];
m9_9 -> m9_7  [color=blue, key=0, style=bold];
m9_21 -> m9_22  [key=0, style=solid];
m9_22 -> m9_23  [key=0, style=solid];
m9_22 -> m9_10  [key=2, style=dotted];
m9_22 -> m9_11  [key=2, style=dotted];
m9_22 -> m9_12  [key=2, style=dotted];
m9_22 -> m9_13  [key=2, style=dotted];
m9_23 -> m9_21  [color=blue, key=0, style=bold];
m9_29 -> m9_30  [key=0, style=solid];
m9_29 -> m9_31  [key=0, style=solid];
m9_30 -> m9_31  [key=0, style=solid];
m9_30 -> m9_10  [key=2, style=dotted];
m9_30 -> m9_11  [key=2, style=dotted];
m9_30 -> m9_12  [key=2, style=dotted];
m9_30 -> m9_13  [key=2, style=dotted];
m9_30 -> m9_37  [key=0, style=solid];
m9_30 -> m9_38  [key=2, style=dotted];
m9_31 -> m9_29  [color=blue, key=0, style=bold];
m9_31 -> m9_34  [color=green, key=1, label=sb, style=dashed];
m9_31 -> m9_36  [color=green, key=1, label=sb, style=dashed];
m9_31 -> m9_32  [key=0, style=solid];
m9_31 -> m9_39  [key=2, style=dotted];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_0  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_0  [color=blue, key=0, style=bold];
m12_7 -> m12_8  [key=0, style=solid];
m12_8 -> m12_9  [key=0, style=solid];
m12_8 -> m12_10  [key=2, style=dotted];
m12_8 -> m12_6  [key=2, style=dotted];
m12_9 -> m12_7  [color=blue, key=0, style=bold];
m12_2 -> m12_3  [key=0, style=solid];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_5  [key=2, style=dotted];
m12_3 -> m12_6  [key=2, style=dotted];
m12_4 -> m12_2  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_0  [color=blue, key=0, style=bold];
m13_5 -> m13_6  [color=red, key=0, style=solid];
m13_5 -> m13_4  [color=green, key=3, label="method methodReturn string Ordinalize", style=bold];
m13_6 -> m13_7  [color=red, key=0, style=solid];
m13_6 -> m13_8  [color=red, key=2, style=dotted];
m13_6 -> m13_4  [color=red, key=2, style=dotted];
m13_7 -> m13_5  [color=blue, key=0, style=bold];
m13_4 -> m13_9  [color=green, key=0, style=solid];
m13_4 -> m13_11  [color=green, key=1, label=string, style=dashed];
m13_4 -> m13_12  [color=green, key=1, label=int, style=dashed];
m13_4 -> m13_14  [color=green, key=1, label=string, style=dashed];
m13_4 -> m13_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_4 -> m13_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_4 -> m13_19  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_4 -> m13_0  [color=green, key=3, label="Parameter variable string numberString", style=bold];
m13_4 -> m13_5  [color=green, key=3, label="Parameter variable int number", style=bold];
m13_9 -> m13_10  [color=green, key=0, style=solid];
m13_11 -> m13_20  [color=green, key=0, style=solid];
m13_12 -> m13_13  [color=green, key=0, style=solid];
m13_12 -> m13_15  [color=green, key=0, style=solid];
m13_12 -> m13_17  [color=green, key=0, style=solid];
m13_12 -> m13_19  [color=green, key=0, style=solid];
m13_14 -> m13_20  [color=green, key=0, style=solid];
m13_16 -> m13_20  [color=red, key=0, style=solid];
m13_18 -> m13_20  [color=red, key=0, style=solid];
m13_19 -> m13_20  [color=red, key=0, style=solid];
m13_10 -> m13_11  [color=green, key=0, style=solid];
m13_10 -> m13_12  [color=green, key=0, style=solid];
m13_13 -> m13_14  [color=green, key=0, style=solid];
m13_15 -> m13_16  [color=red, key=0, style=solid];
m13_17 -> m13_18  [color=red, key=0, style=solid];
m13_20 -> m13_4  [color=blue, key=0, style=bold];
m13_0 -> m13_1  [color=green, key=0, style=solid];
m13_0 -> m13_4  [color=green, key=3, label="method methodReturn string Ordinalize", style=bold];
m13_1 -> m13_2  [color=green, key=0, style=solid];
m13_1 -> m13_3  [color=green, key=2, style=dotted];
m13_1 -> m13_4  [color=green, key=2, style=dotted];
m13_2 -> m13_0  [color=blue, key=0, style=bold];
m14_14 -> m14_15  [key=0, style=solid];
m14_15 -> m14_16  [key=0, style=solid];
m14_15 -> m14_19  [key=2, style=dotted];
m14_15 -> m14_17  [color=darkseagreen4, key=1, label=expected, style=dashed];
m14_16 -> m14_17  [key=0, style=solid];
m14_16 -> m14_19  [key=2, style=dotted];
m14_16 -> m14_20  [key=2, style=dotted];
m14_16 -> m14_5  [key=2, style=dotted];
m14_16 -> m14_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_17 -> m14_18  [key=0, style=solid];
m14_17 -> m14_6  [key=2, style=dotted];
m14_18 -> m14_14  [color=blue, key=0, style=bold];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_3  [color=darkseagreen4, key=1, label=expected, style=dashed];
m14_2 -> m14_3  [key=0, style=solid];
m14_2 -> m14_5  [key=2, style=dotted];
m14_2 -> m14_7  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_3 -> m14_4  [key=0, style=solid];
m14_3 -> m14_6  [key=2, style=dotted];
m14_4 -> m14_0  [color=blue, key=0, style=bold];
m14_21 -> m14_22  [key=0, style=solid];
m14_7 -> m14_8  [key=0, style=solid];
m14_8 -> m14_9  [key=0, style=solid];
m14_8 -> m14_10  [key=2, style=dotted];
m14_8 -> m14_11  [key=2, style=dotted];
m14_8 -> m14_12  [key=2, style=dotted];
m14_8 -> m14_13  [key=2, style=dotted];
m14_9 -> m14_7  [color=blue, key=0, style=bold];
m14_22 -> m14_23  [key=0, style=solid];
m14_22 -> m14_10  [key=2, style=dotted];
m14_22 -> m14_11  [key=2, style=dotted];
m14_22 -> m14_12  [key=2, style=dotted];
m14_22 -> m14_13  [key=2, style=dotted];
m14_23 -> m14_21  [color=blue, key=0, style=bold];
m15_14 -> m15_15  [key=0, style=solid];
m15_15 -> m15_16  [color=red, key=0, style=solid];
m15_15 -> m15_19  [key=2, style=dotted];
m15_15 -> m15_17  [color=darkseagreen4, key=1, label=expected, style=dashed];
m15_16 -> m15_17  [color=red, key=0, style=solid];
m15_16 -> m15_19  [color=red, key=2, style=dotted];
m15_16 -> m15_20  [color=red, key=2, style=dotted];
m15_16 -> m15_5  [color=red, key=2, style=dotted];
m15_16 -> m15_21  [color=red, key=1, label="lambda expression", style=dashed];
m15_17 -> m15_18  [key=0, style=solid];
m15_17 -> m15_6  [key=2, style=dotted];
m15_18 -> m15_14  [color=blue, key=0, style=bold];
m15_0 -> m15_1  [color=red, key=0, style=solid];
m15_1 -> m15_2  [color=red, key=0, style=solid];
m15_1 -> m15_3  [color=red, key=1, label=expected, style=dashed];
m15_2 -> m15_3  [color=red, key=0, style=solid];
m15_2 -> m15_5  [color=red, key=2, style=dotted];
m15_2 -> m15_7  [color=red, key=1, label="lambda expression", style=dashed];
m15_3 -> m15_4  [color=red, key=0, style=solid];
m15_3 -> m15_6  [color=red, key=2, style=dotted];
m15_4 -> m15_0  [color=blue, key=0, style=bold];
m15_21 -> m15_22  [color=red, key=0, style=solid];
m15_7 -> m15_8  [color=red, key=0, style=solid];
m15_8 -> m15_9  [color=red, key=0, style=solid];
m15_8 -> m15_10  [color=red, key=2, style=dotted];
m15_8 -> m15_11  [color=red, key=2, style=dotted];
m15_8 -> m15_12  [color=red, key=2, style=dotted];
m15_8 -> m15_13  [color=red, key=2, style=dotted];
m15_9 -> m15_7  [color=blue, key=0, style=bold];
m15_22 -> m15_23  [color=red, key=0, style=solid];
m15_22 -> m15_10  [color=red, key=2, style=dotted];
m15_22 -> m15_11  [color=red, key=2, style=dotted];
m15_22 -> m15_12  [color=red, key=2, style=dotted];
m15_22 -> m15_13  [color=red, key=2, style=dotted];
m15_23 -> m15_21  [color=blue, key=0, style=bold];
m17_19 -> m17_20  [key=0, style=solid];
m17_19 -> m17_21  [key=2, style=dotted];
m17_0 -> m17_1  [key=0, style=solid];
m17_0 -> m17_7  [color=green, key=3, label="method methodReturn int FromRoman", style=bold];
m17_0 -> m17_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_1 -> m17_2  [key=0, style=solid];
m17_1 -> m17_3  [key=0, style=solid];
m17_2 -> m17_0  [color=blue, key=0, style=bold];
m17_2 -> m17_18  [key=0, style=solid];
m17_2 -> m17_19  [key=2, style=dotted];
m17_16 -> m17_16  [color=darkseagreen4, key=1, label=total, style=dashed];
m17_16 -> m17_9  [key=0, style=solid];
m17_16 -> m17_17  [color=darkseagreen4, key=1, label=total, style=dashed];
m17_34 -> m17_35  [key=0, style=solid];
m17_34 -> m17_34  [color=darkseagreen4, key=1, label=pair, style=dashed];
m17_34 -> m17_40  [key=2, style=dotted];
m17_40 -> m17_41  [key=0, style=solid];
m17_42 -> m17_43  [key=0, style=solid];
m17_42 -> m17_44  [key=2, style=dotted];
m17_43 -> m17_44  [key=0, style=solid];
m17_43 -> m17_45  [key=2, style=dotted];
m17_43 -> m17_22  [color=blue, key=0, style=bold];
m17_44 -> m17_42  [color=blue, key=0, style=bold];
m17_9 -> m17_17  [key=0, style=solid];
m17_9 -> m17_10  [key=0, style=solid];
m17_35 -> m17_33  [key=0, style=solid];
m17_35 -> m17_35  [color=darkseagreen4, key=1, label=int, style=dashed];
m17_41 -> m17_39  [color=blue, key=0, style=bold];
m17_39 -> m17_40  [key=0, style=solid];
m17_20 -> m17_18  [color=blue, key=0, style=bold];
m17_17 -> m17_18  [key=0, style=solid];
m17_24 -> m17_25  [key=0, style=solid];
m17_25 -> m17_29  [color=green, key=1, label=int, style=dashed];
m17_25 -> m17_26  [key=0, style=solid];
m17_25 -> m17_33  [color=darkseagreen4, key=1, label=int, style=dashed];
m17_25 -> m17_35  [color=darkseagreen4, key=1, label=int, style=dashed];
m17_25 -> m17_32  [key=0, style=solid];
m17_25 -> m17_34  [key=2, style=dotted];
m17_29 -> m17_30  [color=green, key=0, style=solid];
m17_29 -> m17_31  [color=green, key=0, style=solid];
m17_26 -> m17_29  [color=green, key=1, label=minValue, style=dashed];
m17_26 -> m17_26  [color=darkorchid, key=3, label="Local variable int minValue", style=bold];
m17_26 -> m17_27  [key=0, style=solid];
m17_27 -> m17_29  [color=darkseagreen4, key=1, label=min, style=dashed];
m17_27 -> m17_27  [color=darkorchid, key=3, label="Local variable int maxValue", style=bold];
m17_27 -> m17_28  [key=0, style=solid];
m17_28 -> m17_29  [color=green, key=0, style=solid];
m17_28 -> m17_28  [color=darkorchid, key=3, label="Local variable int maxRomanNumeralLength", style=bold];
m17_28 -> m17_31  [color=darkseagreen4, key=1, label=maxRomanNumeralLength, style=dashed];
m17_28 -> m17_30  [color=darkseagreen4, key=1, label=max, style=dashed];
m17_30 -> m17_37  [key=0, style=solid];
m17_30 -> m17_38  [key=2, style=dotted];
m17_30 -> m17_32  [key=0, style=solid];
m17_30 -> m17_34  [key=2, style=dotted];
m17_31 -> m17_32  [key=0, style=solid];
m17_31 -> m17_39  [key=2, style=dotted];
m17_31 -> m17_34  [color=darkseagreen4, key=1, label=sb, style=dashed];
m17_31 -> m17_36  [color=darkseagreen4, key=1, label=sb, style=dashed];
m17_31 -> m17_35  [key=2, style=dotted];
m17_33 -> m17_33  [color=darkseagreen4, key=1, label=pair, style=dashed];
m17_33 -> m17_34  [key=0, style=solid];
m17_33 -> m17_32  [key=0, style=solid];
m17_32 -> m17_33  [key=0, style=solid];
m17_32 -> m17_36  [key=0, style=solid];
m17_32 -> m17_22  [color=blue, key=0, style=bold];
m17_36 -> m17_37  [key=0, style=solid];
m17_36 -> m17_41  [key=2, style=dotted];
m17_37 -> m17_25  [color=blue, key=0, style=bold];
m17_37 -> m17_38  [key=0, style=solid];
m17_38 -> m17_36  [color=blue, key=0, style=bold];
m17_22 -> m17_23  [key=0, style=solid];
m17_22 -> m17_27  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m17_22 -> m17_28  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m17_22 -> m17_42  [key=0, style=solid];
m17_22 -> m17_0  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m17_23 -> m17_24  [key=0, style=solid];
m17_23 -> m17_26  [key=0, style=solid];
m17_23 -> m17_33  [key=2, style=dotted];
m17_18 -> m17_19  [key=0, style=solid];
m17_18 -> m17_0  [color=blue, key=0, style=bold];
m17_5 -> m17_6  [color=green, key=0, style=solid];
m17_5 -> m17_7  [color=green, key=0, style=solid];
m17_5 -> m17_22  [color=green, key=2, style=dotted];
m17_5 -> m17_3  [color=blue, key=0, style=bold];
m17_3 -> m17_5  [color=green, key=1, label=string, style=dashed];
m17_3 -> m17_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_3 -> m17_4  [color=red, key=0, style=solid];
m17_3 -> m17_20  [key=2, style=dotted];
m17_3 -> m17_21  [key=2, style=dotted];
m17_3 -> m17_10  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_3 -> m17_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_4 -> m17_5  [color=red, key=0, style=solid];
m17_4 -> m17_8  [color=darkseagreen4, key=1, label=length, style=dashed];
m17_6 -> m17_18  [key=0, style=solid];
m17_6 -> m17_23  [key=2, style=dotted];
m17_6 -> m17_7  [color=red, key=0, style=solid];
m17_7 -> m17_7  [color=green, key=3, label="Local variable int total", style=bold];
m17_7 -> m17_8  [color=red, key=0, style=solid];
m17_7 -> m17_16  [color=green, key=1, label=total, style=dashed];
m17_7 -> m17_17  [color=green, key=1, label=total, style=dashed];
m17_7 -> m17_10  [color=green, key=3, label="Local variable int total", style=bold];
m17_7 -> m17_9  [color=red, key=2, style=dotted];
m17_8 -> m17_4  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m17_8 -> m17_9  [key=0, style=solid];
m17_8 -> m17_10  [color=darkseagreen4, key=1, label=i, style=dashed];
m17_8 -> m17_6  [color=blue, key=0, style=bold];
m17_10 -> m17_16  [color=darkseagreen4, key=1, label=digit, style=dashed];
m17_10 -> m17_10  [color=darkseagreen4, key=1, label=i, style=dashed];
m17_10 -> m17_11  [key=0, style=solid];
m17_10 -> m17_24  [key=2, style=dotted];
m17_10 -> m17_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m17_10 -> m17_13  [color=darkseagreen4, key=1, label=digit, style=dashed];
m17_10 -> m17_14  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m17_10 -> m17_15  [color=darkseagreen4, key=1, label=i, style=dashed];
m17_12 -> m17_13  [key=0, style=solid];
m17_12 -> m17_24  [key=2, style=dotted];
m17_12 -> m17_14  [color=darkseagreen4, key=1, label=previousDigit, style=dashed];
m17_12 -> m17_11  [key=0, style=solid];
m17_12 -> m17_16  [key=2, style=dotted];
m17_12 -> m17_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_11 -> m17_16  [key=0, style=solid];
m17_11 -> m17_12  [key=0, style=solid];
m17_11 -> m17_14  [key=0, style=solid];
m17_11 -> m17_19  [color=darkseagreen4, key=1, label=guard, style=dashed];
m17_11 -> m17_13  [color=darkseagreen4, key=1, label=guard, style=dashed];
m17_13 -> m17_16  [key=0, style=solid];
m17_13 -> m17_14  [key=0, style=solid];
m17_13 -> m17_15  [key=0, style=solid];
m17_13 -> m17_17  [key=2, style=dotted];
m17_14 -> m17_16  [color=darkseagreen4, key=1, label=digit, style=dashed];
m17_14 -> m17_14  [color=darkseagreen4, key=1, label=digit, style=dashed];
m17_14 -> m17_15  [key=0, style=solid];
m17_15 -> m17_16  [key=0, style=solid];
m17_15 -> m17_15  [color=darkseagreen4, key=1, label=i, style=dashed];
m17_15 -> m17_10  [color=blue, key=0, style=bold];
m17_46 -> m17_19  [color=darkseagreen4, key=1, label=guard, style=dashed];
m20_0 -> m20_1  [color=green, key=0, style=solid];
m20_0 -> m20_2  [color=green, key=1, label="Humanizer.ShowQuantityAs", style=dashed];
m20_0 -> m20_4  [color=green, key=1, label="Humanizer.ShowQuantityAs", style=dashed];
m20_0 -> m20_5  [color=green, key=1, label=int, style=dashed];
m20_0 -> m20_6  [color=green, key=1, label=int, style=dashed];
m20_1 -> m20_2  [color=green, key=0, style=solid];
m20_1 -> m20_8  [color=green, key=2, style=dotted];
m20_1 -> m20_9  [color=green, key=2, style=dotted];
m20_1 -> m20_3  [color=green, key=1, label=transformedInput, style=dashed];
m20_1 -> m20_5  [color=green, key=1, label=transformedInput, style=dashed];
m20_1 -> m20_6  [color=green, key=1, label=transformedInput, style=dashed];
m20_2 -> m20_3  [color=green, key=0, style=solid];
m20_2 -> m20_4  [color=green, key=0, style=solid];
m20_3 -> m20_7  [color=green, key=0, style=solid];
m20_5 -> m20_7  [color=green, key=0, style=solid];
m20_5 -> m20_10  [color=green, key=2, style=dotted];
m20_6 -> m20_7  [color=green, key=0, style=solid];
m20_6 -> m20_11  [color=green, key=2, style=dotted];
m20_6 -> m20_10  [color=green, key=2, style=dotted];
m20_4 -> m20_5  [color=green, key=0, style=solid];
m20_4 -> m20_6  [color=green, key=0, style=solid];
m20_7 -> m20_0  [color=blue, key=0, style=bold];
m22_15 -> m22_16  [key=0, style=solid];
m22_15 -> m22_18  [color=darkorchid, key=3, label="method methodReturn string op_Implicit", style=bold];
m22_16 -> m22_17  [color=green, key=0, style=solid];
m22_16 -> m22_18  [key=2, style=dotted];
m22_17 -> m22_15  [color=blue, key=0, style=bold];
m22_17 -> m22_18  [color=green, key=0, style=solid];
m22_17 -> m22_19  [color=green, key=2, style=dotted];
m22_17 -> m22_20  [color=green, key=2, style=dotted];
m22_37 -> m22_38  [key=0, style=solid];
m22_37 -> m22_27  [key=2, style=dotted];
m22_34 -> m22_35  [key=0, style=solid];
m22_34 -> m22_37  [key=2, style=dotted];
m22_31 -> m22_33  [key=0, style=solid];
m22_31 -> m22_34  [key=2, style=dotted];
m22_6 -> m22_7  [color=green, key=0, style=solid];
m22_6 -> m22_10  [color=green, key=2, style=dotted];
m22_6 -> m22_11  [color=green, key=2, style=dotted];
m22_6 -> m22_12  [color=green, key=2, style=dotted];
m22_6 -> m22_16  [color=green, key=1, label="lambda expression", style=dashed];
m22_6 -> m22_21  [color=green, key=1, label="lambda expression", style=dashed];
m22_24 -> m22_29  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_24 -> m22_25  [key=0, style=solid];
m22_24 -> m22_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_24 -> m22_27  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_24 -> m22_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_19 -> m22_20  [key=0, style=solid];
m22_19 -> m22_22  [key=2, style=dotted];
m22_32 -> m22_33  [key=0, style=solid];
m22_32 -> m22_23  [key=2, style=dotted];
m22_32 -> m22_24  [key=2, style=dotted];
m22_32 -> m22_26  [key=2, style=dotted];
m22_32 -> m22_35  [key=2, style=dotted];
m22_7 -> m22_7  [color=darkseagreen4, key=1, label=result, style=dashed];
m22_7 -> m22_8  [key=0, style=solid];
m22_7 -> m22_13  [key=2, style=dotted];
m22_7 -> m22_14  [key=2, style=dotted];
m22_26 -> m22_30  [key=0, style=solid];
m22_23 -> m22_21  [color=blue, key=0, style=bold];
m22_69 -> m22_70  [key=0, style=solid];
m22_71 -> m22_20  [key=2, style=dotted];
m22_71 -> m22_72  [key=0, style=solid];
m22_71 -> m22_54  [key=2, style=dotted];
m22_71 -> m22_55  [key=2, style=dotted];
m22_70 -> m22_71  [key=0, style=solid];
m22_70 -> m22_62  [key=2, style=dotted];
m22_72 -> m22_69  [color=blue, key=0, style=bold];
m22_12 -> m22_13  [color=red, key=0, style=solid];
m22_12 -> m22_0  [color=darkorchid, key=3, label="Parameter variable Humanizer.ITruncator truncator", style=bold];
m22_36 -> m22_37  [key=0, style=solid];
m22_36 -> m22_33  [color=blue, key=0, style=bold];
m22_38 -> m22_36  [color=blue, key=0, style=bold];
m22_38 -> m22_43  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_38 -> m22_39  [key=0, style=solid];
m22_38 -> m22_41  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_38 -> m22_45  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_38 -> m22_47  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_38 -> m22_48  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_38 -> m22_49  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_25 -> m22_19  [key=2, style=dotted];
m22_25 -> m22_26  [key=0, style=solid];
m22_25 -> m22_27  [key=0, style=solid];
m22_18 -> m22_19  [key=0, style=solid];
m22_18 -> m22_16  [color=blue, key=0, style=bold];
m22_20 -> m22_21  [key=0, style=solid];
m22_20 -> m22_23  [key=2, style=dotted];
m22_20 -> m22_24  [key=2, style=dotted];
m22_20 -> m22_25  [key=2, style=dotted];
m22_20 -> m22_26  [key=2, style=dotted];
m22_21 -> m22_18  [color=blue, key=0, style=bold];
m22_21 -> m22_22  [color=green, key=0, style=solid];
m22_62 -> m22_63  [key=0, style=solid];
m22_63 -> m22_64  [key=0, style=solid];
m22_63 -> m22_65  [key=2, style=dotted];
m22_63 -> m22_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_64 -> m22_62  [color=blue, key=0, style=bold];
m22_14 -> m22_12  [color=blue, key=0, style=bold];
m22_22 -> m22_23  [color=green, key=0, style=solid];
m22_73 -> m22_74  [key=0, style=solid];
m22_74 -> m22_20  [key=2, style=dotted];
m22_74 -> m22_75  [key=0, style=solid];
m22_74 -> m22_76  [key=2, style=dotted];
m22_75 -> m22_73  [color=blue, key=0, style=bold];
m22_29 -> m22_5  [key=2, style=dotted];
m22_29 -> m22_30  [key=0, style=solid];
m22_29 -> m22_33  [key=0, style=solid];
m22_29 -> m22_7  [key=2, style=dotted];
m22_27 -> m22_29  [key=0, style=solid];
m22_27 -> m22_28  [key=0, style=solid];
m22_27 -> m22_31  [key=2, style=dotted];
m22_27 -> m22_30  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m22_27 -> m22_32  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_27 -> m22_36  [color=darkorchid, key=3, label="Parameter variable string message", style=bold];
m22_27 -> m22_39  [color=darkorchid, key=3, label="Parameter variable string message", style=bold];
m22_28 -> m22_30  [key=0, style=solid];
m22_28 -> m22_32  [key=2, style=dotted];
m22_28 -> m22_29  [key=0, style=solid];
m22_28 -> m22_6  [key=2, style=dotted];
m22_30 -> m22_24  [color=blue, key=0, style=bold];
m22_30 -> m22_31  [key=0, style=solid];
m22_30 -> m22_32  [key=0, style=solid];
m22_33 -> m22_27  [color=blue, key=0, style=bold];
m22_33 -> m22_35  [color=darkseagreen4, key=1, label="Humanizer.LetterCasing", style=dashed];
m22_33 -> m22_34  [key=0, style=solid];
m22_35 -> m22_38  [key=2, style=dotted];
m22_35 -> m22_36  [key=0, style=solid];
m22_66 -> m22_67  [key=0, style=solid];
m22_8 -> m22_9  [key=0, style=solid];
m22_8 -> m22_15  [key=2, style=dotted];
m22_9 -> m22_10  [key=0, style=solid];
m22_9 -> m22_11  [key=2, style=dotted];
m22_9 -> m22_5  [color=blue, key=0, style=bold];
m22_10 -> m22_8  [color=blue, key=0, style=bold];
m22_13 -> m22_14  [color=red, key=0, style=solid];
m22_67 -> m22_53  [key=2, style=dotted];
m22_67 -> m22_68  [key=0, style=solid];
m22_68 -> m22_66  [color=blue, key=0, style=bold];
m22_39 -> m22_40  [key=0, style=solid];
m22_39 -> m22_42  [key=0, style=solid];
m22_39 -> m22_44  [key=0, style=solid];
m22_39 -> m22_46  [key=0, style=solid];
m22_39 -> m22_50  [key=0, style=solid];
m22_40 -> m22_41  [key=0, style=solid];
m22_40 -> m22_27  [key=2, style=dotted];
m22_41 -> m22_39  [color=blue, key=0, style=bold];
m22_41 -> m22_51  [key=0, style=solid];
m22_41 -> m22_52  [key=2, style=dotted];
m22_58 -> m22_59  [color=green, key=0, style=solid];
m22_59 -> m22_60  [color=green, key=0, style=solid];
m22_59 -> m22_61  [color=green, key=2, style=dotted];
m22_60 -> m22_58  [color=blue, key=0, style=bold];
m22_43 -> m22_20  [key=2, style=dotted];
m22_43 -> m22_51  [key=0, style=solid];
m22_42 -> m22_43  [key=0, style=solid];
m22_42 -> m22_3  [color=darkseagreen4, key=1, label="CommandLine.Text.HeadingInfo", style=dashed];
m22_42 -> m22_4  [color=darkseagreen4, key=1, label="CommandLine.Text.HeadingInfo", style=dashed];
m22_42 -> m22_19  [color=darkseagreen4, key=1, label="CommandLine.Text.HeadingInfo", style=dashed];
m22_42 -> m22_20  [color=darkseagreen4, key=1, label="CommandLine.Text.HeadingInfo", style=dashed];
m22_42 -> m22_32  [color=darkseagreen4, key=1, label="CommandLine.Text.HeadingInfo", style=dashed];
m22_42 -> m22_37  [color=darkseagreen4, key=1, label="CommandLine.Text.HeadingInfo", style=dashed];
m22_42 -> m22_40  [color=darkseagreen4, key=1, label="CommandLine.Text.HeadingInfo", style=dashed];
m22_45 -> m22_51  [key=0, style=solid];
m22_45 -> m22_53  [key=2, style=dotted];
m22_47 -> m22_48  [key=0, style=solid];
m22_47 -> m22_49  [key=0, style=solid];
m22_48 -> m22_51  [key=0, style=solid];
m22_48 -> m22_54  [key=2, style=dotted];
m22_48 -> m22_55  [key=2, style=dotted];
m22_48 -> m22_53  [key=2, style=dotted];
m22_48 -> m22_56  [key=2, style=dotted];
m22_49 -> m22_51  [key=0, style=solid];
m22_49 -> m22_53  [key=2, style=dotted];
m22_50 -> m22_51  [key=0, style=solid];
m22_50 -> m22_57  [key=2, style=dotted];
m22_44 -> m22_45  [key=0, style=solid];
m22_46 -> m22_47  [key=0, style=solid];
m22_51 -> m22_38  [color=blue, key=0, style=bold];
m22_0 -> m22_1  [color=red, key=0, style=solid];
m22_0 -> m22_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_0 -> m22_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_0 -> m22_12  [color=darkorchid, key=3, label="method methodReturn string Truncate", style=bold];
m22_1 -> m22_2  [color=red, key=0, style=solid];
m22_1 -> m22_3  [color=red, key=0, style=solid];
m22_1 -> m22_6  [color=red, key=2, style=dotted];
m22_3 -> m22_4  [key=0, style=solid];
m22_4 -> m22_5  [key=0, style=solid];
m22_2 -> m22_5  [color=red, key=0, style=solid];
m22_2 -> m22_7  [color=red, key=2, style=dotted];
m22_5 -> m22_0  [color=blue, key=0, style=bold];
m22_5 -> m22_6  [color=green, key=0, style=solid];
m23_0 -> m23_1  [key=0, style=solid];
m23_1 -> m23_2  [key=0, style=solid];
m23_1 -> m23_6  [key=2, style=dotted];
m23_1 -> m23_7  [key=2, style=dotted];
m23_1 -> m23_4  [color=darkseagreen4, key=1, label=expectedTokens, style=dashed];
m23_2 -> m23_3  [key=0, style=solid];
m23_2 -> m23_8  [key=2, style=dotted];
m23_2 -> m23_9  [key=2, style=dotted];
m23_2 -> m23_17  [color=darkseagreen4, key=1, label=specs, style=dashed];
m23_4 -> m23_5  [key=0, style=solid];
m23_4 -> m23_14  [key=2, style=dotted];
m23_4 -> m23_15  [key=2, style=dotted];
m23_3 -> m23_4  [key=0, style=solid];
m23_3 -> m23_10  [key=2, style=dotted];
m23_3 -> m23_6  [key=2, style=dotted];
m23_3 -> m23_7  [key=2, style=dotted];
m23_3 -> m23_11  [key=2, style=dotted];
m23_3 -> m23_12  [key=2, style=dotted];
m23_3 -> m23_13  [key=2, style=dotted];
m23_3 -> m23_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_5 -> m23_0  [color=blue, key=0, style=bold];
m23_26 -> m23_27  [key=0, style=solid];
m23_17 -> m23_18  [key=0, style=solid];
m23_17 -> m23_19  [key=2, style=dotted];
m23_16 -> m23_17  [key=0, style=solid];
m23_18 -> m23_16  [color=blue, key=0, style=bold];
m23_27 -> m23_28  [key=0, style=solid];
m23_27 -> m23_19  [key=2, style=dotted];
m23_28 -> m23_26  [color=blue, key=0, style=bold];
m23_20 -> m23_21  [key=0, style=solid];
m23_21 -> m23_22  [key=0, style=solid];
m23_21 -> m23_6  [key=2, style=dotted];
m23_21 -> m23_7  [key=2, style=dotted];
m23_21 -> m23_24  [color=darkseagreen4, key=1, label=expectedTokens, style=dashed];
m23_22 -> m23_23  [key=0, style=solid];
m23_22 -> m23_8  [key=2, style=dotted];
m23_22 -> m23_9  [key=2, style=dotted];
m23_22 -> m23_27  [color=darkseagreen4, key=1, label=specs, style=dashed];
m23_24 -> m23_25  [key=0, style=solid];
m23_24 -> m23_14  [key=2, style=dotted];
m23_24 -> m23_15  [key=2, style=dotted];
m23_23 -> m23_24  [key=0, style=solid];
m23_23 -> m23_10  [key=2, style=dotted];
m23_23 -> m23_6  [key=2, style=dotted];
m23_23 -> m23_7  [key=2, style=dotted];
m23_23 -> m23_11  [key=2, style=dotted];
m23_23 -> m23_12  [key=2, style=dotted];
m23_23 -> m23_13  [key=2, style=dotted];
m23_23 -> m23_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_25 -> m23_20  [color=blue, key=0, style=bold];
m23_29 -> m23_17  [color=darkseagreen4, key=1, label=specs, style=dashed];
m23_30 -> m23_27  [color=darkseagreen4, key=1, label=specs, style=dashed];
}
