digraph  {
m0_27 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="ByteSize.cs"];
m0_45 [label="Entry Humanizer.TimeSpanHumanizeExtensions.BuildFormatTimePart(Humanizer.Localisation.Formatters.IFormatter, Humanizer.Localisation.TimeUnit, int)", span="178-178", cluster="Humanizer.TimeSpanHumanizeExtensions.BuildFormatTimePart(Humanizer.Localisation.Formatters.IFormatter, Humanizer.Localisation.TimeUnit, int)", file="ByteSize.cs"];
m0_93 [label="return amountOfTimeUnits != 0\r\n                ? cultureFormatter.TimeSpanHumanize(timeUnitType, Math.Abs(amountOfTimeUnits))\r\n                : null;", span="181-183", cluster="Humanizer.TimeSpanHumanizeExtensions.BuildFormatTimePart(Humanizer.Localisation.Formatters.IFormatter, Humanizer.Localisation.TimeUnit, int)", file="ByteSize.cs"];
m0_94 [label="Exit Humanizer.TimeSpanHumanizeExtensions.BuildFormatTimePart(Humanizer.Localisation.Formatters.IFormatter, Humanizer.Localisation.TimeUnit, int)", span="178-178", cluster="Humanizer.TimeSpanHumanizeExtensions.BuildFormatTimePart(Humanizer.Localisation.Formatters.IFormatter, Humanizer.Localisation.TimeUnit, int)", file="ByteSize.cs"];
m0_0 [label="Entry Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, string)", span="29-29", cluster="Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, string)", file="ByteSize.cs"];
m0_1 [label="return Humanize(timeSpan, precision, false, culture, maxUnit, minUnit, collectionSeparator);", span="31-31", cluster="Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, string)", file="ByteSize.cs"];
m0_2 [label="Exit Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, string)", span="29-29", cluster="Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, string)", file="ByteSize.cs"];
m0_66 [label="Entry Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", span="147-147", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", file="ByteSize.cs"];
m0_81 [label=isTimeUnitToGetTheMaximumTimeUnit, span="149-149", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", file="ByteSize.cs"];
m0_82 [label="return timespan.Days;", span="151-151", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", file="ByteSize.cs"];
m0_83 [label="timespan.Days < _daysInAMonth", span="153-153", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", file="ByteSize.cs"];
m0_84 [label="var remainingDays = timespan.Days % _daysInAWeek", span="155-155", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", file="ByteSize.cs"];
m0_86 [label="return (int)((double)timespan.Days % _daysInAMonth);", span="158-158", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", file="ByteSize.cs"];
m0_85 [label="return remainingDays;", span="156-156", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", file="ByteSize.cs"];
m0_87 [label="Exit Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", span="147-147", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", file="ByteSize.cs"];
m0_101 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", file="ByteSize.cs"];
m0_37 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="ByteSize.cs"];
m0_36 [label="Entry System.Enum.GetValues(System.Type)", span="0-0", cluster="System.Enum.GetValues(System.Type)", file="ByteSize.cs"];
m0_9 [label="Entry Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", span="196-196", cluster="Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", file="ByteSize.cs"];
m0_105 [label="!countEmptyUnits", span="198-198", cluster="Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", file="ByteSize.cs"];
m0_106 [label="timeParts = timeParts.Where(x => x != null)", span="199-199", cluster="Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", file="ByteSize.cs"];
m0_107 [label="timeParts = timeParts.Take(precision)", span="200-200", cluster="Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", file="ByteSize.cs"];
m0_108 [label=countEmptyUnits, span="201-201", cluster="Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", file="ByteSize.cs"];
m0_109 [label="timeParts = timeParts.Where(x => x != null)", span="202-202", cluster="Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", file="ByteSize.cs"];
m0_110 [label="return timeParts;", span="204-204", cluster="Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", file="ByteSize.cs"];
m0_111 [label="Exit Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", span="196-196", cluster="Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", file="ByteSize.cs"];
m0_10 [label="Entry Humanizer.TimeSpanHumanizeExtensions.ConcatenateTimeSpanParts(System.Collections.Generic.IEnumerable<string>, System.Globalization.CultureInfo, string)", span="207-207", cluster="Humanizer.TimeSpanHumanizeExtensions.ConcatenateTimeSpanParts(System.Collections.Generic.IEnumerable<string>, System.Globalization.CultureInfo, string)", file="ByteSize.cs"];
m0_120 [label="collectionSeparator == null", span="209-209", cluster="Humanizer.TimeSpanHumanizeExtensions.ConcatenateTimeSpanParts(System.Collections.Generic.IEnumerable<string>, System.Globalization.CultureInfo, string)", file="ByteSize.cs"];
m0_121 [label="return Configurator.CollectionFormatters.ResolveForCulture(culture).Humanize(timeSpanParts);", span="211-211", cluster="Humanizer.TimeSpanHumanizeExtensions.ConcatenateTimeSpanParts(System.Collections.Generic.IEnumerable<string>, System.Globalization.CultureInfo, string)", file="ByteSize.cs"];
m0_122 [label="return string.Join(collectionSeparator, timeSpanParts);", span="214-214", cluster="Humanizer.TimeSpanHumanizeExtensions.ConcatenateTimeSpanParts(System.Collections.Generic.IEnumerable<string>, System.Globalization.CultureInfo, string)", file="ByteSize.cs"];
m0_123 [label="Exit Humanizer.TimeSpanHumanizeExtensions.ConcatenateTimeSpanParts(System.Collections.Generic.IEnumerable<string>, System.Globalization.CultureInfo, string)", span="207-207", cluster="Humanizer.TimeSpanHumanizeExtensions.ConcatenateTimeSpanParts(System.Collections.Generic.IEnumerable<string>, System.Globalization.CultureInfo, string)", file="ByteSize.cs"];
m0_125 [label="Entry Humanizer.Localisation.CollectionFormatters.ICollectionFormatter.Humanize<T>(System.Collections.Generic.IEnumerable<T>)", span="14-14", cluster="Humanizer.Localisation.CollectionFormatters.ICollectionFormatter.Humanize<T>(System.Collections.Generic.IEnumerable<T>)", file="ByteSize.cs"];
m0_67 [label="Entry Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseWeeksAsInteger(System.TimeSpan, bool)", span="138-138", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseWeeksAsInteger(System.TimeSpan, bool)", file="ByteSize.cs"];
m0_77 [label="isTimeUnitToGetTheMaximumTimeUnit || timespan.Days < _daysInAMonth", span="140-140", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseWeeksAsInteger(System.TimeSpan, bool)", file="ByteSize.cs"];
m0_78 [label="return timespan.Days / _daysInAWeek;", span="142-142", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseWeeksAsInteger(System.TimeSpan, bool)", file="ByteSize.cs"];
m0_79 [label="return 0;", span="144-144", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseWeeksAsInteger(System.TimeSpan, bool)", file="ByteSize.cs"];
m0_80 [label="Exit Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseWeeksAsInteger(System.TimeSpan, bool)", span="138-138", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseWeeksAsInteger(System.TimeSpan, bool)", file="ByteSize.cs"];
m0_96 [label="Entry Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", span="42-42", cluster="Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", file="ByteSize.cs"];
m0_112 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="ByteSize.cs"];
m0_8 [label="Entry Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", span="53-53", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="ByteSize.cs"];
m0_11 [label="var cultureFormatter = Configurator.GetFormatter(culture)", span="55-55", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="ByteSize.cs"];
m0_16 [label="var timepart = GetTimeUnitPart(timeUnitType, timespan, culture, maxUnit, minUnit, cultureFormatter)", span="62-62", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="ByteSize.cs"];
m0_12 [label="var firstValueFound = false", span="56-56", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="ByteSize.cs"];
m0_21 [label="var noTimeValueCultureFarmated = cultureFormatter.TimeSpanHumanize_Zero()", span="72-72", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="ByteSize.cs"];
m0_13 [label="var timeUnitsEnumTypes = GetEnumTypesForTimeUnit()", span="57-57", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="ByteSize.cs"];
m0_17 [label="timepart != null || firstValueFound", span="64-64", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="ByteSize.cs"];
m0_14 [label="var timeParts = new List<string>()", span="58-58", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="ByteSize.cs"];
m0_15 [label=timeUnitsEnumTypes, span="60-60", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="ByteSize.cs"];
m0_19 [label="timeParts.Add(timepart)", span="67-67", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="ByteSize.cs"];
m0_20 [label="IsContainingOnlyNullValue(timeParts)", span="70-70", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="ByteSize.cs"];
m0_23 [label="return timeParts;", span="75-75", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="ByteSize.cs"];
m0_18 [label="firstValueFound = true", span="66-66", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="ByteSize.cs"];
m0_22 [label="timeParts = CreateTimePartsWithNoTimeValue(noTimeValueCultureFarmated)", span="73-73", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="ByteSize.cs"];
m0_24 [label="Exit Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", span="53-53", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="ByteSize.cs"];
m0_95 [label="Entry System.Math.Abs(int)", span="0-0", cluster="System.Math.Abs(int)", file="ByteSize.cs"];
m0_126 [label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0", cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="ByteSize.cs"];
m0_113 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="ByteSize.cs"];
m0_124 [label="Entry Humanizer.Configuration.LocaliserRegistry<TLocaliser>.ResolveForCulture(System.Globalization.CultureInfo)", span="46-46", cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.ResolveForCulture(System.Globalization.CultureInfo)", file="ByteSize.cs"];
m0_3 [label="Entry Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, bool, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, string)", span="45-45", cluster="Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, bool, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, string)", file="ByteSize.cs"];
m0_4 [label="var timeParts = CreateTheTimePartsWithUpperAndLowerLimits(timeSpan, culture, maxUnit, minUnit)", span="47-47", cluster="Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, bool, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, string)", file="ByteSize.cs"];
m0_5 [label="timeParts = SetPrecisionOfTimeSpan(timeParts, precision, countEmptyUnits)", span="48-48", cluster="Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, bool, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, string)", file="ByteSize.cs"];
m0_6 [label="return ConcatenateTimeSpanParts(timeParts, culture, collectionSeparator);", span="50-50", cluster="Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, bool, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, string)", file="ByteSize.cs"];
m0_7 [label="Exit Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, bool, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, string)", span="45-45", cluster="Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, bool, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, string)", file="ByteSize.cs"];
m0_26 [label="Entry Humanizer.TimeSpanHumanizeExtensions.GetEnumTypesForTimeUnit()", span="78-78", cluster="Humanizer.TimeSpanHumanizeExtensions.GetEnumTypesForTimeUnit()", file="ByteSize.cs"];
m0_33 [label="var enumTypeEnumerator = (IEnumerable<TimeUnit>)Enum.GetValues(typeof(TimeUnit))", span="80-80", cluster="Humanizer.TimeSpanHumanizeExtensions.GetEnumTypesForTimeUnit()", file="ByteSize.cs"];
m0_34 [label="return enumTypeEnumerator.Reverse();", span="81-81", cluster="Humanizer.TimeSpanHumanizeExtensions.GetEnumTypesForTimeUnit()", file="ByteSize.cs"];
m0_35 [label="Exit Humanizer.TimeSpanHumanizeExtensions.GetEnumTypesForTimeUnit()", span="78-78", cluster="Humanizer.TimeSpanHumanizeExtensions.GetEnumTypesForTimeUnit()", file="ByteSize.cs"];
m0_44 [label="Entry Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", span="95-95", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSize.cs"];
m0_46 [label=timeUnitToGet, span="97-97", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSize.cs"];
m0_48 [label="return GetNormalCaseTimeAsInteger(timespan.Milliseconds, timespan.TotalMilliseconds, isTimeUnitToGetTheMaximumTimeUnit);", span="100-100", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSize.cs"];
m0_50 [label="return GetNormalCaseTimeAsInteger(timespan.Seconds, timespan.TotalSeconds, isTimeUnitToGetTheMaximumTimeUnit);", span="102-102", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSize.cs"];
m0_52 [label="return GetNormalCaseTimeAsInteger(timespan.Minutes, timespan.TotalMinutes, isTimeUnitToGetTheMaximumTimeUnit);", span="104-104", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSize.cs"];
m0_54 [label="return GetNormalCaseTimeAsInteger(timespan.Hours, timespan.TotalHours, isTimeUnitToGetTheMaximumTimeUnit);", span="106-106", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSize.cs"];
m0_56 [label="return GetSpecialCaseDaysAsInteger(timespan, isTimeUnitToGetTheMaximumTimeUnit);", span="108-108", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSize.cs"];
m0_58 [label="return GetSpecialCaseWeeksAsInteger(timespan, isTimeUnitToGetTheMaximumTimeUnit);", span="110-110", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSize.cs"];
m0_60 [label="return GetSpecialCaseMonthAsInteger(timespan, isTimeUnitToGetTheMaximumTimeUnit);", span="112-112", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSize.cs"];
m0_47 [label="TimeUnit.Millisecond", span="99-99", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSize.cs"];
m0_49 [label="TimeUnit.Second", span="101-101", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSize.cs"];
m0_51 [label="TimeUnit.Minute", span="103-103", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSize.cs"];
m0_53 [label="TimeUnit.Hour", span="105-105", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSize.cs"];
m0_55 [label="TimeUnit.Day", span="107-107", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSize.cs"];
m0_57 [label="TimeUnit.Week", span="109-109", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSize.cs"];
m0_59 [label="TimeUnit.Month", span="111-111", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSize.cs"];
m0_61 [label="TimeUnit.Year", span="113-113", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSize.cs"];
m0_63 [label="return 0;", span="116-116", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSize.cs"];
m0_62 [label="return GetSpecialCaseYearAsInteger(timespan);", span="114-114", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSize.cs"];
m0_64 [label="Exit Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", span="95-95", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSize.cs"];
m0_117 [label="Entry lambda expression", span="202-202", cluster="lambda expression", file="ByteSize.cs"];
m0_102 [label="Entry lambda expression", span="193-193", cluster="lambda expression", file="ByteSize.cs"];
m0_103 [label="x != null", span="193-193", cluster="lambda expression", file="ByteSize.cs"];
m0_104 [label="Exit lambda expression", span="193-193", cluster="lambda expression", file="ByteSize.cs"];
m0_114 [label="Entry lambda expression", span="199-199", cluster="lambda expression", file="ByteSize.cs"];
m0_115 [label="x != null", span="199-199", cluster="lambda expression", file="ByteSize.cs"];
m0_116 [label="Exit lambda expression", span="199-199", cluster="lambda expression", file="ByteSize.cs"];
m0_118 [label="x != null", span="202-202", cluster="lambda expression", file="ByteSize.cs"];
m0_119 [label="Exit lambda expression", span="202-202", cluster="lambda expression", file="ByteSize.cs"];
m0_32 [label="Entry Humanizer.TimeSpanHumanizeExtensions.CreateTimePartsWithNoTimeValue(string)", span="186-186", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTimePartsWithNoTimeValue(string)", file="ByteSize.cs"];
m0_97 [label="return new List<string>() { noTimeValue };", span="188-188", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTimePartsWithNoTimeValue(string)", file="ByteSize.cs"];
m0_98 [label="Exit Humanizer.TimeSpanHumanizeExtensions.CreateTimePartsWithNoTimeValue(string)", span="186-186", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTimePartsWithNoTimeValue(string)", file="ByteSize.cs"];
m0_25 [label="Entry Humanizer.Configuration.Configurator.GetFormatter(System.Globalization.CultureInfo)", span="76-76", cluster="Humanizer.Configuration.Configurator.GetFormatter(System.Globalization.CultureInfo)", file="ByteSize.cs"];
m0_30 [label="Entry Humanizer.TimeSpanHumanizeExtensions.IsContainingOnlyNullValue(System.Collections.Generic.IEnumerable<string>)", span="191-191", cluster="Humanizer.TimeSpanHumanizeExtensions.IsContainingOnlyNullValue(System.Collections.Generic.IEnumerable<string>)", file="ByteSize.cs"];
m0_99 [label="return (timeParts.Count(x => x != null) == 0);", span="193-193", cluster="Humanizer.TimeSpanHumanizeExtensions.IsContainingOnlyNullValue(System.Collections.Generic.IEnumerable<string>)", file="ByteSize.cs"];
m0_100 [label="Exit Humanizer.TimeSpanHumanizeExtensions.IsContainingOnlyNullValue(System.Collections.Generic.IEnumerable<string>)", span="191-191", cluster="Humanizer.TimeSpanHumanizeExtensions.IsContainingOnlyNullValue(System.Collections.Generic.IEnumerable<string>)", file="ByteSize.cs"];
m0_68 [label="Entry Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseMonthAsInteger(System.TimeSpan, bool)", span="120-120", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseMonthAsInteger(System.TimeSpan, bool)", file="ByteSize.cs"];
m0_70 [label=isTimeUnitToGetTheMaximumTimeUnit, span="122-122", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseMonthAsInteger(System.TimeSpan, bool)", file="ByteSize.cs"];
m0_71 [label="return (int)((double)timespan.Days / _daysInAMonth);", span="124-124", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseMonthAsInteger(System.TimeSpan, bool)", file="ByteSize.cs"];
m0_72 [label="var remainingDays = (double)timespan.Days % _daysInAYear", span="128-128", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseMonthAsInteger(System.TimeSpan, bool)", file="ByteSize.cs"];
m0_73 [label="return (int)(remainingDays / _daysInAMonth);", span="129-129", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseMonthAsInteger(System.TimeSpan, bool)", file="ByteSize.cs"];
m0_74 [label="Exit Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseMonthAsInteger(System.TimeSpan, bool)", span="120-120", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseMonthAsInteger(System.TimeSpan, bool)", file="ByteSize.cs"];
m0_28 [label="Entry Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitPart(Humanizer.Localisation.TimeUnit, System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Formatters.IFormatter)", span="84-84", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitPart(Humanizer.Localisation.TimeUnit, System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Formatters.IFormatter)", file="ByteSize.cs"];
m0_38 [label="timeUnitToGet <= maximumTimeUnit && timeUnitToGet >= minimumTimeUnit", span="86-86", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitPart(Humanizer.Localisation.TimeUnit, System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Formatters.IFormatter)", file="ByteSize.cs"];
m0_39 [label="var isTimeUnitToGetTheMaximumTimeUnit = (timeUnitToGet == maximumTimeUnit)", span="88-88", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitPart(Humanizer.Localisation.TimeUnit, System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Formatters.IFormatter)", file="ByteSize.cs"];
m0_40 [label="var numberOfTimeUnits = GetTimeUnitNumericalValue(timeUnitToGet, timespan, isTimeUnitToGetTheMaximumTimeUnit)", span="89-89", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitPart(Humanizer.Localisation.TimeUnit, System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Formatters.IFormatter)", file="ByteSize.cs"];
m0_41 [label="return BuildFormatTimePart(cultureFormatter, timeUnitToGet, numberOfTimeUnits);", span="90-90", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitPart(Humanizer.Localisation.TimeUnit, System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Formatters.IFormatter)", file="ByteSize.cs"];
m0_42 [label="return null;", span="92-92", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitPart(Humanizer.Localisation.TimeUnit, System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Formatters.IFormatter)", file="ByteSize.cs"];
m0_43 [label="Exit Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitPart(Humanizer.Localisation.TimeUnit, System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Formatters.IFormatter)", span="84-84", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitPart(Humanizer.Localisation.TimeUnit, System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Formatters.IFormatter)", file="ByteSize.cs"];
m0_29 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="ByteSize.cs"];
m0_31 [label="Entry Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize_Zero()", span="34-34", cluster="Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize_Zero()", file="ByteSize.cs"];
m0_69 [label="Entry Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseYearAsInteger(System.TimeSpan)", span="133-133", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseYearAsInteger(System.TimeSpan)", file="ByteSize.cs"];
m0_75 [label="return (int)((double)timespan.Days / _daysInAYear);", span="135-135", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseYearAsInteger(System.TimeSpan)", file="ByteSize.cs"];
m0_76 [label="Exit Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseYearAsInteger(System.TimeSpan)", span="133-133", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseYearAsInteger(System.TimeSpan)", file="ByteSize.cs"];
m0_65 [label="Entry Humanizer.TimeSpanHumanizeExtensions.GetNormalCaseTimeAsInteger(int, double, bool)", span="161-161", cluster="Humanizer.TimeSpanHumanizeExtensions.GetNormalCaseTimeAsInteger(int, double, bool)", file="ByteSize.cs"];
m0_88 [label=isTimeUnitToGetTheMaximumTimeUnit, span="163-163", cluster="Humanizer.TimeSpanHumanizeExtensions.GetNormalCaseTimeAsInteger(int, double, bool)", file="ByteSize.cs"];
m0_89 [label="return (int)totalTimeNumberOfUnits;", span="167-167", cluster="Humanizer.TimeSpanHumanizeExtensions.GetNormalCaseTimeAsInteger(int, double, bool)", file="ByteSize.cs"];
m0_90 [label="return timeNumberOfUnits;", span="175-175", cluster="Humanizer.TimeSpanHumanizeExtensions.GetNormalCaseTimeAsInteger(int, double, bool)", file="ByteSize.cs"];
m0_91 [label="return 0;", span="172-172", cluster="Humanizer.TimeSpanHumanizeExtensions.GetNormalCaseTimeAsInteger(int, double, bool)", file="ByteSize.cs"];
m0_92 [label="Exit Humanizer.TimeSpanHumanizeExtensions.GetNormalCaseTimeAsInteger(int, double, bool)", span="161-161", cluster="Humanizer.TimeSpanHumanizeExtensions.GetNormalCaseTimeAsInteger(int, double, bool)", file="ByteSize.cs"];
m1_27 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="ByteSizeExtensions.cs"];
m1_45 [label="Entry Humanizer.TimeSpanHumanizeExtensions.BuildFormatTimePart(Humanizer.Localisation.Formatters.IFormatter, Humanizer.Localisation.TimeUnit, int)", span="178-178", cluster="Humanizer.TimeSpanHumanizeExtensions.BuildFormatTimePart(Humanizer.Localisation.Formatters.IFormatter, Humanizer.Localisation.TimeUnit, int)", file="ByteSizeExtensions.cs"];
m1_93 [label="return amountOfTimeUnits != 0\r\n                ? cultureFormatter.TimeSpanHumanize(timeUnitType, Math.Abs(amountOfTimeUnits))\r\n                : null;", span="181-183", cluster="Humanizer.TimeSpanHumanizeExtensions.BuildFormatTimePart(Humanizer.Localisation.Formatters.IFormatter, Humanizer.Localisation.TimeUnit, int)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_94 [label="Exit Humanizer.TimeSpanHumanizeExtensions.BuildFormatTimePart(Humanizer.Localisation.Formatters.IFormatter, Humanizer.Localisation.TimeUnit, int)", span="178-178", cluster="Humanizer.TimeSpanHumanizeExtensions.BuildFormatTimePart(Humanizer.Localisation.Formatters.IFormatter, Humanizer.Localisation.TimeUnit, int)", file="ByteSizeExtensions.cs"];
m1_0 [label="Entry Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, string)", span="29-29", cluster="Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, string)", file="ByteSizeExtensions.cs"];
m1_1 [label="return Humanize(timeSpan, precision, false, culture, maxUnit, minUnit, collectionSeparator);", span="31-31", cluster="Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, string)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_2 [label="Exit Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, string)", span="29-29", cluster="Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, string)", file="ByteSizeExtensions.cs"];
m1_66 [label="Entry Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", span="147-147", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", file="ByteSizeExtensions.cs"];
m1_82 [label="return timespan.Days;", span="151-151", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_81 [label=isTimeUnitToGetTheMaximumTimeUnit, span="149-149", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", file="ByteSizeExtensions.cs"];
m1_83 [label="timespan.Days < _daysInAMonth", span="153-153", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_84 [label="var remainingDays = timespan.Days % _daysInAWeek", span="155-155", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_86 [label="return (int)((double)timespan.Days % _daysInAMonth);", span="158-158", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_85 [label="return remainingDays;", span="156-156", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_87 [label="Exit Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", span="147-147", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", file="ByteSizeExtensions.cs"];
m1_101 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", file="ByteSizeExtensions.cs"];
m1_37 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="ByteSizeExtensions.cs"];
m1_36 [label="Entry System.Enum.GetValues(System.Type)", span="0-0", cluster="System.Enum.GetValues(System.Type)", file="ByteSizeExtensions.cs"];
m1_9 [label="Entry Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", span="196-196", cluster="Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", file="ByteSizeExtensions.cs"];
m1_105 [label="!countEmptyUnits", span="198-198", cluster="Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_106 [label="timeParts = timeParts.Where(x => x != null)", span="199-199", cluster="Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_107 [label="timeParts = timeParts.Take(precision)", span="200-200", cluster="Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_108 [label=countEmptyUnits, span="201-201", cluster="Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_109 [label="timeParts = timeParts.Where(x => x != null)", span="202-202", cluster="Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_110 [label="return timeParts;", span="204-204", cluster="Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_111 [label="Exit Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", span="196-196", cluster="Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", file="ByteSizeExtensions.cs"];
m1_10 [label="Entry Humanizer.TimeSpanHumanizeExtensions.ConcatenateTimeSpanParts(System.Collections.Generic.IEnumerable<string>, System.Globalization.CultureInfo, string)", span="207-207", cluster="Humanizer.TimeSpanHumanizeExtensions.ConcatenateTimeSpanParts(System.Collections.Generic.IEnumerable<string>, System.Globalization.CultureInfo, string)", file="ByteSizeExtensions.cs"];
m1_120 [label="collectionSeparator == null", span="209-209", cluster="Humanizer.TimeSpanHumanizeExtensions.ConcatenateTimeSpanParts(System.Collections.Generic.IEnumerable<string>, System.Globalization.CultureInfo, string)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_121 [label="return Configurator.CollectionFormatters.ResolveForCulture(culture).Humanize(timeSpanParts);", span="211-211", cluster="Humanizer.TimeSpanHumanizeExtensions.ConcatenateTimeSpanParts(System.Collections.Generic.IEnumerable<string>, System.Globalization.CultureInfo, string)", file="ByteSizeExtensions.cs"];
m1_122 [label="return string.Join(collectionSeparator, timeSpanParts);", span="214-214", cluster="Humanizer.TimeSpanHumanizeExtensions.ConcatenateTimeSpanParts(System.Collections.Generic.IEnumerable<string>, System.Globalization.CultureInfo, string)", file="ByteSizeExtensions.cs"];
m1_123 [label="Exit Humanizer.TimeSpanHumanizeExtensions.ConcatenateTimeSpanParts(System.Collections.Generic.IEnumerable<string>, System.Globalization.CultureInfo, string)", span="207-207", cluster="Humanizer.TimeSpanHumanizeExtensions.ConcatenateTimeSpanParts(System.Collections.Generic.IEnumerable<string>, System.Globalization.CultureInfo, string)", file="ByteSizeExtensions.cs"];
m1_125 [label="Entry Humanizer.Localisation.CollectionFormatters.ICollectionFormatter.Humanize<T>(System.Collections.Generic.IEnumerable<T>)", span="14-14", cluster="Humanizer.Localisation.CollectionFormatters.ICollectionFormatter.Humanize<T>(System.Collections.Generic.IEnumerable<T>)", file="ByteSizeExtensions.cs"];
m1_67 [label="Entry Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseWeeksAsInteger(System.TimeSpan, bool)", span="138-138", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseWeeksAsInteger(System.TimeSpan, bool)", file="ByteSizeExtensions.cs"];
m1_77 [label="isTimeUnitToGetTheMaximumTimeUnit || timespan.Days < _daysInAMonth", span="140-140", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseWeeksAsInteger(System.TimeSpan, bool)", file="ByteSizeExtensions.cs"];
m1_78 [label="return timespan.Days / _daysInAWeek;", span="142-142", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseWeeksAsInteger(System.TimeSpan, bool)", file="ByteSizeExtensions.cs"];
m1_79 [label="return 0;", span="144-144", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseWeeksAsInteger(System.TimeSpan, bool)", file="ByteSizeExtensions.cs"];
m1_80 [label="Exit Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseWeeksAsInteger(System.TimeSpan, bool)", span="138-138", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseWeeksAsInteger(System.TimeSpan, bool)", file="ByteSizeExtensions.cs"];
m1_96 [label="Entry Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", span="42-42", cluster="Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", file="ByteSizeExtensions.cs"];
m1_112 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="ByteSizeExtensions.cs"];
m1_8 [label="Entry Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", span="53-53", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="ByteSizeExtensions.cs"];
m1_16 [label="var timepart = GetTimeUnitPart(timeUnitType, timespan, culture, maxUnit, minUnit, cultureFormatter)", span="62-62", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_11 [label="var cultureFormatter = Configurator.GetFormatter(culture)", span="55-55", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="ByteSizeExtensions.cs"];
m1_15 [label=timeUnitsEnumTypes, span="60-60", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_17 [label="timepart != null || firstValueFound", span="64-64", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_19 [label="timeParts.Add(timepart)", span="67-67", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_21 [label="var noTimeValueCultureFarmated = cultureFormatter.TimeSpanHumanize_Zero()", span="72-72", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_20 [label="IsContainingOnlyNullValue(timeParts)", span="70-70", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_22 [label="timeParts = CreateTimePartsWithNoTimeValue(noTimeValueCultureFarmated)", span="73-73", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_12 [label="var firstValueFound = false", span="56-56", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="ByteSizeExtensions.cs"];
m1_18 [label="firstValueFound = true", span="66-66", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_13 [label="var timeUnitsEnumTypes = GetEnumTypesForTimeUnit()", span="57-57", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="ByteSizeExtensions.cs"];
m1_14 [label="var timeParts = new List<string>()", span="58-58", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="ByteSizeExtensions.cs"];
m1_23 [label="return timeParts;", span="75-75", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_24 [label="Exit Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", span="53-53", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="ByteSizeExtensions.cs"];
m1_95 [label="Entry System.Math.Abs(int)", span="0-0", cluster="System.Math.Abs(int)", file="ByteSizeExtensions.cs"];
m1_126 [label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0", cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="ByteSizeExtensions.cs"];
m1_113 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="ByteSizeExtensions.cs"];
m1_124 [label="Entry Humanizer.Configuration.LocaliserRegistry<TLocaliser>.ResolveForCulture(System.Globalization.CultureInfo)", span="46-46", cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.ResolveForCulture(System.Globalization.CultureInfo)", file="ByteSizeExtensions.cs"];
m1_3 [label="Entry Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, bool, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, string)", span="45-45", cluster="Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, bool, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, string)", file="ByteSizeExtensions.cs"];
m1_4 [label="var timeParts = CreateTheTimePartsWithUpperAndLowerLimits(timeSpan, culture, maxUnit, minUnit)", span="47-47", cluster="Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, bool, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, string)", file="ByteSizeExtensions.cs"];
m1_5 [label="timeParts = SetPrecisionOfTimeSpan(timeParts, precision, countEmptyUnits)", span="48-48", cluster="Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, bool, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, string)", file="ByteSizeExtensions.cs"];
m1_6 [label="return ConcatenateTimeSpanParts(timeParts, culture, collectionSeparator);", span="50-50", cluster="Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, bool, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, string)", file="ByteSizeExtensions.cs"];
m1_7 [label="Exit Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, bool, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, string)", span="45-45", cluster="Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, bool, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, string)", file="ByteSizeExtensions.cs"];
m1_26 [label="Entry Humanizer.TimeSpanHumanizeExtensions.GetEnumTypesForTimeUnit()", span="78-78", cluster="Humanizer.TimeSpanHumanizeExtensions.GetEnumTypesForTimeUnit()", file="ByteSizeExtensions.cs"];
m1_33 [label="var enumTypeEnumerator = (IEnumerable<TimeUnit>)Enum.GetValues(typeof(TimeUnit))", span="80-80", cluster="Humanizer.TimeSpanHumanizeExtensions.GetEnumTypesForTimeUnit()", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_34 [label="return enumTypeEnumerator.Reverse();", span="81-81", cluster="Humanizer.TimeSpanHumanizeExtensions.GetEnumTypesForTimeUnit()", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_35 [label="Exit Humanizer.TimeSpanHumanizeExtensions.GetEnumTypesForTimeUnit()", span="78-78", cluster="Humanizer.TimeSpanHumanizeExtensions.GetEnumTypesForTimeUnit()", file="ByteSizeExtensions.cs"];
m1_44 [label="Entry Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", span="95-95", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSizeExtensions.cs"];
m1_46 [label=timeUnitToGet, span="97-97", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_47 [label="TimeUnit.Millisecond", span="99-99", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_49 [label="TimeUnit.Second", span="101-101", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_51 [label="TimeUnit.Minute", span="103-103", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_53 [label="TimeUnit.Hour", span="105-105", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_55 [label="TimeUnit.Day", span="107-107", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_57 [label="TimeUnit.Week", span="109-109", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_59 [label="TimeUnit.Month", span="111-111", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_61 [label="TimeUnit.Year", span="113-113", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_63 [label="return 0;", span="116-116", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_48 [label="return GetNormalCaseTimeAsInteger(timespan.Milliseconds, timespan.TotalMilliseconds, isTimeUnitToGetTheMaximumTimeUnit);", span="100-100", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_50 [label="return GetNormalCaseTimeAsInteger(timespan.Seconds, timespan.TotalSeconds, isTimeUnitToGetTheMaximumTimeUnit);", span="102-102", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_52 [label="return GetNormalCaseTimeAsInteger(timespan.Minutes, timespan.TotalMinutes, isTimeUnitToGetTheMaximumTimeUnit);", span="104-104", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_54 [label="return GetNormalCaseTimeAsInteger(timespan.Hours, timespan.TotalHours, isTimeUnitToGetTheMaximumTimeUnit);", span="106-106", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_56 [label="return GetSpecialCaseDaysAsInteger(timespan, isTimeUnitToGetTheMaximumTimeUnit);", span="108-108", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_58 [label="return GetSpecialCaseWeeksAsInteger(timespan, isTimeUnitToGetTheMaximumTimeUnit);", span="110-110", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_60 [label="return GetSpecialCaseMonthAsInteger(timespan, isTimeUnitToGetTheMaximumTimeUnit);", span="112-112", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_62 [label="return GetSpecialCaseYearAsInteger(timespan);", span="114-114", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_64 [label="Exit Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", span="95-95", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSizeExtensions.cs"];
m1_117 [label="Entry lambda expression", span="202-202", cluster="lambda expression", file="ByteSizeExtensions.cs"];
m1_102 [label="Entry lambda expression", span="193-193", cluster="lambda expression", file="ByteSizeExtensions.cs"];
m1_103 [label="x != null", span="193-193", cluster="lambda expression", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_104 [label="Exit lambda expression", span="193-193", cluster="lambda expression", file="ByteSizeExtensions.cs"];
m1_114 [label="Entry lambda expression", span="199-199", cluster="lambda expression", file="ByteSizeExtensions.cs"];
m1_115 [label="x != null", span="199-199", cluster="lambda expression", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_116 [label="Exit lambda expression", span="199-199", cluster="lambda expression", file="ByteSizeExtensions.cs"];
m1_118 [label="x != null", span="202-202", cluster="lambda expression", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_119 [label="Exit lambda expression", span="202-202", cluster="lambda expression", file="ByteSizeExtensions.cs"];
m1_32 [label="Entry Humanizer.TimeSpanHumanizeExtensions.CreateTimePartsWithNoTimeValue(string)", span="186-186", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTimePartsWithNoTimeValue(string)", file="ByteSizeExtensions.cs"];
m1_97 [label="return new List<string>() { noTimeValue };", span="188-188", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTimePartsWithNoTimeValue(string)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_98 [label="Exit Humanizer.TimeSpanHumanizeExtensions.CreateTimePartsWithNoTimeValue(string)", span="186-186", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTimePartsWithNoTimeValue(string)", file="ByteSizeExtensions.cs"];
m1_25 [label="Entry Humanizer.Configuration.Configurator.GetFormatter(System.Globalization.CultureInfo)", span="76-76", cluster="Humanizer.Configuration.Configurator.GetFormatter(System.Globalization.CultureInfo)", file="ByteSizeExtensions.cs"];
m1_30 [label="Entry Humanizer.TimeSpanHumanizeExtensions.IsContainingOnlyNullValue(System.Collections.Generic.IEnumerable<string>)", span="191-191", cluster="Humanizer.TimeSpanHumanizeExtensions.IsContainingOnlyNullValue(System.Collections.Generic.IEnumerable<string>)", file="ByteSizeExtensions.cs"];
m1_99 [label="return (timeParts.Count(x => x != null) == 0);", span="193-193", cluster="Humanizer.TimeSpanHumanizeExtensions.IsContainingOnlyNullValue(System.Collections.Generic.IEnumerable<string>)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_100 [label="Exit Humanizer.TimeSpanHumanizeExtensions.IsContainingOnlyNullValue(System.Collections.Generic.IEnumerable<string>)", span="191-191", cluster="Humanizer.TimeSpanHumanizeExtensions.IsContainingOnlyNullValue(System.Collections.Generic.IEnumerable<string>)", file="ByteSizeExtensions.cs"];
m1_68 [label="Entry Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseMonthAsInteger(System.TimeSpan, bool)", span="120-120", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseMonthAsInteger(System.TimeSpan, bool)", file="ByteSizeExtensions.cs"];
m1_70 [label=isTimeUnitToGetTheMaximumTimeUnit, span="122-122", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseMonthAsInteger(System.TimeSpan, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_71 [label="return (int)((double)timespan.Days / _daysInAMonth);", span="124-124", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseMonthAsInteger(System.TimeSpan, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_72 [label="var remainingDays = (double)timespan.Days % _daysInAYear", span="128-128", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseMonthAsInteger(System.TimeSpan, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_73 [label="return (int)(remainingDays / _daysInAMonth);", span="129-129", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseMonthAsInteger(System.TimeSpan, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_74 [label="Exit Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseMonthAsInteger(System.TimeSpan, bool)", span="120-120", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseMonthAsInteger(System.TimeSpan, bool)", file="ByteSizeExtensions.cs"];
m1_28 [label="Entry Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitPart(Humanizer.Localisation.TimeUnit, System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Formatters.IFormatter)", span="84-84", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitPart(Humanizer.Localisation.TimeUnit, System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Formatters.IFormatter)", file="ByteSizeExtensions.cs"];
m1_38 [label="timeUnitToGet <= maximumTimeUnit && timeUnitToGet >= minimumTimeUnit", span="86-86", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitPart(Humanizer.Localisation.TimeUnit, System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Formatters.IFormatter)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_39 [label="var isTimeUnitToGetTheMaximumTimeUnit = (timeUnitToGet == maximumTimeUnit)", span="88-88", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitPart(Humanizer.Localisation.TimeUnit, System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Formatters.IFormatter)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_42 [label="return null;", span="92-92", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitPart(Humanizer.Localisation.TimeUnit, System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Formatters.IFormatter)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_40 [label="var numberOfTimeUnits = GetTimeUnitNumericalValue(timeUnitToGet, timespan, isTimeUnitToGetTheMaximumTimeUnit)", span="89-89", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitPart(Humanizer.Localisation.TimeUnit, System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Formatters.IFormatter)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_41 [label="return BuildFormatTimePart(cultureFormatter, timeUnitToGet, numberOfTimeUnits);", span="90-90", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitPart(Humanizer.Localisation.TimeUnit, System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Formatters.IFormatter)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_43 [label="Exit Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitPart(Humanizer.Localisation.TimeUnit, System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Formatters.IFormatter)", span="84-84", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitPart(Humanizer.Localisation.TimeUnit, System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Formatters.IFormatter)", file="ByteSizeExtensions.cs"];
m1_29 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="ByteSizeExtensions.cs"];
m1_31 [label="Entry Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize_Zero()", span="34-34", cluster="Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize_Zero()", file="ByteSizeExtensions.cs"];
m1_69 [label="Entry Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseYearAsInteger(System.TimeSpan)", span="133-133", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseYearAsInteger(System.TimeSpan)", file="ByteSizeExtensions.cs"];
m1_75 [label="return (int)((double)timespan.Days / _daysInAYear);", span="135-135", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseYearAsInteger(System.TimeSpan)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_76 [label="Exit Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseYearAsInteger(System.TimeSpan)", span="133-133", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseYearAsInteger(System.TimeSpan)", file="ByteSizeExtensions.cs"];
m1_65 [label="Entry Humanizer.TimeSpanHumanizeExtensions.GetNormalCaseTimeAsInteger(int, double, bool)", span="161-161", cluster="Humanizer.TimeSpanHumanizeExtensions.GetNormalCaseTimeAsInteger(int, double, bool)", file="ByteSizeExtensions.cs"];
m1_88 [label=isTimeUnitToGetTheMaximumTimeUnit, span="163-163", cluster="Humanizer.TimeSpanHumanizeExtensions.GetNormalCaseTimeAsInteger(int, double, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_89 [label="return (int)totalTimeNumberOfUnits;", span="167-167", cluster="Humanizer.TimeSpanHumanizeExtensions.GetNormalCaseTimeAsInteger(int, double, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_90 [label="return timeNumberOfUnits;", span="175-175", cluster="Humanizer.TimeSpanHumanizeExtensions.GetNormalCaseTimeAsInteger(int, double, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_92 [label="return 0;", span="172-172", cluster="Humanizer.TimeSpanHumanizeExtensions.GetNormalCaseTimeAsInteger(int, double, bool)", color=green, community=0, file="ByteSizeExtensions.cs"];
m1_91 [label="Exit Humanizer.TimeSpanHumanizeExtensions.GetNormalCaseTimeAsInteger(int, double, bool)", span="161-161", cluster="Humanizer.TimeSpanHumanizeExtensions.GetNormalCaseTimeAsInteger(int, double, bool)", file="ByteSizeExtensions.cs"];
m2_4 [label="Entry CommandLine.Core.Token.Equals(CommandLine.Core.Token)", span="59-59", cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="ByteSizeExtensionsTests.cs"];
m2_0 [label="Entry CommandLine.Tests.Unit.Core.TokenTests.Equality()", span="16-16", cluster="CommandLine.Tests.Unit.Core.TokenTests.Equality()", file="ByteSizeExtensionsTests.cs"];
m2_1 [label="Assert.True(Token.Name(''nametok'').Equals(Token.Name(''nametok'')))", span="18-18", cluster="CommandLine.Tests.Unit.Core.TokenTests.Equality()", file="ByteSizeExtensionsTests.cs"];
m2_2 [label="Exit CommandLine.Tests.Unit.Core.TokenTests.Equality()", span="16-16", cluster="CommandLine.Tests.Unit.Core.TokenTests.Equality()", file="ByteSizeExtensionsTests.cs"];
m2_3 [label="Entry CommandLine.Core.Token.Name(string)", span="19-19", cluster="CommandLine.Core.Token.Name(string)", file="ByteSizeExtensionsTests.cs"];
m2_5 [label="Entry Unk.True", span="", cluster="Unk.True", file="ByteSizeExtensionsTests.cs"];
m6_0 [label="Entry Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", span="33-33", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="FormatterRegistry.cs"];
m6_1 [label="number == 0", span="35-35", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="FormatterRegistry.cs"];
m6_3 [label="number < 0", span="38-38", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="FormatterRegistry.cs"];
m6_4 [label="return string.Format(''min {0}'', Convert(-number));", span="39-39", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="FormatterRegistry.cs"];
m6_7 [label="var divided = number / m.Value", span="45-45", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="FormatterRegistry.cs"];
m6_12 [label="number %= m.Value", span="55-55", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="FormatterRegistry.cs"];
m6_15 [label="number > 0", span="60-60", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="FormatterRegistry.cs"];
m6_16 [label="number < 20", span="62-62", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="FormatterRegistry.cs"];
m6_17 [label="word += UnitsMap[number]", span="63-63", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="FormatterRegistry.cs"];
m6_18 [label="var tens = TensMap[number / 10]", span="66-66", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="FormatterRegistry.cs"];
m6_19 [label="var unit = number % 10", span="67-67", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="FormatterRegistry.cs"];
m6_2 [label="return UnitsMap[0];", span="36-36", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="FormatterRegistry.cs"];
m6_5 [label="var word = ''''", span="41-41", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="FormatterRegistry.cs"];
m6_6 [label=Hunderds, span="43-43", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="FormatterRegistry.cs"];
m6_10 [label="word += m.Name", span="51-51", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="FormatterRegistry.cs"];
m6_11 [label="word += Convert(divided) + m.Prefix + m.Name", span="53-53", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="FormatterRegistry.cs"];
m6_23 [label="word += units + (trema ? ''ën'' : ''en'') + tens", span="72-72", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="FormatterRegistry.cs"];
m6_24 [label="word += tens", span="75-75", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="FormatterRegistry.cs"];
m6_25 [label="return word;", span="79-79", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="FormatterRegistry.cs"];
m6_9 [label="divided == 1 && !m.DisplayOneUnit", span="50-50", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="FormatterRegistry.cs"];
m6_14 [label="word += m.Postfix", span="57-57", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="FormatterRegistry.cs"];
m6_8 [label="divided <= 0", span="47-47", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="FormatterRegistry.cs"];
m6_13 [label="number > 0", span="56-56", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="FormatterRegistry.cs"];
m6_20 [label="unit > 0", span="68-68", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="FormatterRegistry.cs"];
m6_21 [label="var units = UnitsMap[unit]", span="70-70", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="FormatterRegistry.cs"];
m6_22 [label="var trema = units.EndsWith(''e'')", span="71-71", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="FormatterRegistry.cs"];
m6_26 [label="Exit Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", span="33-33", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.Convert(int)", file="FormatterRegistry.cs"];
m6_28 [label="Entry string.EndsWith(string)", span="0-0", cluster="string.EndsWith(string)", file="FormatterRegistry.cs"];
m6_38 [label="Entry Unk.Substring", span="", cluster="Unk.Substring", file="FormatterRegistry.cs"];
m6_29 [label="Entry Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", span="91-91", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="FormatterRegistry.cs"];
m6_30 [label="var word = Convert(number)", span="93-93", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="FormatterRegistry.cs"];
m6_31 [label="OrdinalExceptions.Where(kv => word.EndsWith(kv.Key))", span="95-95", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="FormatterRegistry.cs"];
m6_32 [label="return word.Substring(0, word.Length - kv.Key.Length) + kv.Value;", span="98-98", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="FormatterRegistry.cs"];
m6_33 [label="word.LastIndexOfAny(EndingCharForSte) == (word.Length - 1)", span="104-104", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="FormatterRegistry.cs"];
m6_34 [label="return word + ''ste'';", span="105-105", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="FormatterRegistry.cs"];
m6_35 [label="return word + ''de'';", span="107-107", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="FormatterRegistry.cs"];
m6_36 [label="Exit Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", span="91-91", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.ConvertToOrdinal(int)", file="FormatterRegistry.cs"];
m6_40 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="FormatterRegistry.cs"];
m6_41 [label="word.EndsWith(kv.Key)", span="95-95", cluster="lambda expression", file="FormatterRegistry.cs"];
m6_42 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="FormatterRegistry.cs"];
m6_39 [label="Entry string.LastIndexOfAny(char[])", span="0-0", cluster="string.LastIndexOfAny(char[])", file="FormatterRegistry.cs"];
m6_27 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="FormatterRegistry.cs"];
m6_37 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="FormatterRegistry.cs"];
m6_43 [label="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter", span="", file="FormatterRegistry.cs"];
m6_44 [label=word, span="", file="FormatterRegistry.cs"];
m7_0 [label="Entry Humanizer.Localisation.NumberToWords.GenderlessNumberToWordsConverter.Convert(int)", span="9-9", cluster="Humanizer.Localisation.NumberToWords.GenderlessNumberToWordsConverter.Convert(int)", file="GenderlessNumberToWordsConverter.cs"];
m7_1 [label="Exit Humanizer.Localisation.NumberToWords.GenderlessNumberToWordsConverter.Convert(int)", span="9-9", cluster="Humanizer.Localisation.NumberToWords.GenderlessNumberToWordsConverter.Convert(int)", file="GenderlessNumberToWordsConverter.cs"];
m7_2 [label="Entry Humanizer.Localisation.NumberToWords.GenderlessNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", span="17-17", cluster="Humanizer.Localisation.NumberToWords.GenderlessNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", file="GenderlessNumberToWordsConverter.cs"];
m7_3 [label="return Convert(number);", span="19-19", cluster="Humanizer.Localisation.NumberToWords.GenderlessNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", file="GenderlessNumberToWordsConverter.cs"];
m7_4 [label="Exit Humanizer.Localisation.NumberToWords.GenderlessNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", span="17-17", cluster="Humanizer.Localisation.NumberToWords.GenderlessNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", file="GenderlessNumberToWordsConverter.cs"];
m7_5 [label="Entry Humanizer.Localisation.NumberToWords.GenderlessNumberToWordsConverter.ConvertToOrdinal(int)", span="27-27", cluster="Humanizer.Localisation.NumberToWords.GenderlessNumberToWordsConverter.ConvertToOrdinal(int)", file="GenderlessNumberToWordsConverter.cs"];
m7_6 [label="Exit Humanizer.Localisation.NumberToWords.GenderlessNumberToWordsConverter.ConvertToOrdinal(int)", span="27-27", cluster="Humanizer.Localisation.NumberToWords.GenderlessNumberToWordsConverter.ConvertToOrdinal(int)", file="GenderlessNumberToWordsConverter.cs"];
m7_7 [label="Entry Humanizer.Localisation.NumberToWords.GenderlessNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", span="35-35", cluster="Humanizer.Localisation.NumberToWords.GenderlessNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", file="GenderlessNumberToWordsConverter.cs"];
m7_8 [label="return ConvertToOrdinal(number);", span="37-37", cluster="Humanizer.Localisation.NumberToWords.GenderlessNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", file="GenderlessNumberToWordsConverter.cs"];
m7_9 [label="Exit Humanizer.Localisation.NumberToWords.GenderlessNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", span="35-35", cluster="Humanizer.Localisation.NumberToWords.GenderlessNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", file="GenderlessNumberToWordsConverter.cs"];
m7_10 [label="Humanizer.Localisation.NumberToWords.GenderlessNumberToWordsConverter", span="", file="GenderlessNumberToWordsConverter.cs"];
m8_118 [label="Entry Humanizer.Bytes.ByteSize.operator ++(Humanizer.Bytes.ByteSize)", span="274-274", cluster="Humanizer.Bytes.ByteSize.operator ++(Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_119 [label="return new ByteSize(b.Bytes + 1);", span="276-276", cluster="Humanizer.Bytes.ByteSize.operator ++(Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_120 [label="Exit Humanizer.Bytes.ByteSize.operator ++(Humanizer.Bytes.ByteSize)", span="274-274", cluster="Humanizer.Bytes.ByteSize.operator ++(Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_63 [label="Entry Humanizer.Bytes.ByteSize.Equals(object)", span="189-189", cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="InflectorExtensions.cs"];
m8_64 [label="value == null", span="191-191", cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="InflectorExtensions.cs"];
m8_67 [label="value is ByteSize", span="195-195", cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="InflectorExtensions.cs"];
m8_68 [label="other = (ByteSize)value", span="196-196", cluster="Humanizer.Bytes.ByteSize.Equals(object)", color=red, community=0, file="InflectorExtensions.cs"];
m8_65 [label="return false;", span="192-192", cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="InflectorExtensions.cs"];
m8_66 [label="ByteSize other", span="194-194", cluster="Humanizer.Bytes.ByteSize.Equals(object)", color=red, community=0, file="InflectorExtensions.cs"];
m8_70 [label="return Equals(other);", span="200-200", cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="InflectorExtensions.cs"];
m8_69 [label="return false;", span="198-198", cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="InflectorExtensions.cs"];
m8_71 [label="Exit Humanizer.Bytes.ByteSize.Equals(object)", span="189-189", cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="InflectorExtensions.cs"];
m8_94 [label="Entry Humanizer.Bytes.ByteSize.AddBits(long)", span="234-234", cluster="Humanizer.Bytes.ByteSize.AddBits(long)", file="InflectorExtensions.cs"];
m8_95 [label="return this + FromBits(value);", span="236-236", cluster="Humanizer.Bytes.ByteSize.AddBits(long)", file="InflectorExtensions.cs"];
m8_96 [label="Exit Humanizer.Bytes.ByteSize.AddBits(long)", span="234-234", cluster="Humanizer.Bytes.ByteSize.AddBits(long)", file="InflectorExtensions.cs"];
m8_190 [label="Entry string.Trim()", span="0-0", cluster="string.Trim()", file="InflectorExtensions.cs"];
m8_130 [label="Entry Humanizer.Bytes.ByteSize.operator !=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="294-294", cluster="Humanizer.Bytes.ByteSize.operator !=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_131 [label="return b1.Bits != b2.Bits;", span="296-296", cluster="Humanizer.Bytes.ByteSize.operator !=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_132 [label="Exit Humanizer.Bytes.ByteSize.operator !=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="294-294", cluster="Humanizer.Bytes.ByteSize.operator !=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_52 [label="Entry string.Contains(string)", span="0-0", cluster="string.Contains(string)", file="InflectorExtensions.cs"];
m8_9 [label="Entry Humanizer.Bytes.ByteSize.FromBits(long)", span="115-115", cluster="Humanizer.Bytes.ByteSize.FromBits(long)", file="InflectorExtensions.cs"];
m8_10 [label="return new ByteSize(value / (double)BitsInByte);", span="117-117", cluster="Humanizer.Bytes.ByteSize.FromBits(long)", file="InflectorExtensions.cs"];
m8_11 [label="Exit Humanizer.Bytes.ByteSize.FromBits(long)", span="115-115", cluster="Humanizer.Bytes.ByteSize.FromBits(long)", file="InflectorExtensions.cs"];
m8_136 [label="Entry Humanizer.Bytes.ByteSize.operator <=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="304-304", cluster="Humanizer.Bytes.ByteSize.operator <=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_137 [label="return b1.Bits <= b2.Bits;", span="306-306", cluster="Humanizer.Bytes.ByteSize.operator <=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_138 [label="Exit Humanizer.Bytes.ByteSize.operator <=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="304-304", cluster="Humanizer.Bytes.ByteSize.operator <=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_30 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="InflectorExtensions.cs"];
m8_133 [label="Entry Humanizer.Bytes.ByteSize.operator <(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="299-299", cluster="Humanizer.Bytes.ByteSize.operator <(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_134 [label="return b1.Bits < b2.Bits;", span="301-301", cluster="Humanizer.Bytes.ByteSize.operator <(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_135 [label="Exit Humanizer.Bytes.ByteSize.operator <(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="299-299", cluster="Humanizer.Bytes.ByteSize.operator <(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_182 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="InflectorExtensions.cs"];
m8_27 [label="Entry Humanizer.Bytes.ByteSize.ToString()", span="151-151", cluster="Humanizer.Bytes.ByteSize.ToString()", file="InflectorExtensions.cs"];
m8_28 [label="return string.Format(''{0} {1}'', LargestWholeNumberValue, LargestWholeNumberSymbol);", span="153-153", cluster="Humanizer.Bytes.ByteSize.ToString()", file="InflectorExtensions.cs"];
m8_29 [label="Exit Humanizer.Bytes.ByteSize.ToString()", span="151-151", cluster="Humanizer.Bytes.ByteSize.ToString()", file="InflectorExtensions.cs"];
m8_183 [label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="InflectorExtensions.cs"];
m8_97 [label="Entry Humanizer.Bytes.ByteSize.AddBytes(double)", span="239-239", cluster="Humanizer.Bytes.ByteSize.AddBytes(double)", file="InflectorExtensions.cs"];
m8_98 [label="return this + FromBytes(value);", span="241-241", cluster="Humanizer.Bytes.ByteSize.AddBytes(double)", file="InflectorExtensions.cs"];
m8_99 [label="Exit Humanizer.Bytes.ByteSize.AddBytes(double)", span="239-239", cluster="Humanizer.Bytes.ByteSize.AddBytes(double)", file="InflectorExtensions.cs"];
m8_188 [label="Entry char.IsDigit(char)", span="0-0", cluster="char.IsDigit(char)", file="InflectorExtensions.cs"];
m8_103 [label="Entry Humanizer.Bytes.ByteSize.AddMegabytes(double)", span="249-249", cluster="Humanizer.Bytes.ByteSize.AddMegabytes(double)", file="InflectorExtensions.cs"];
m8_104 [label="return this + FromMegabytes(value);", span="251-251", cluster="Humanizer.Bytes.ByteSize.AddMegabytes(double)", file="InflectorExtensions.cs"];
m8_105 [label="Exit Humanizer.Bytes.ByteSize.AddMegabytes(double)", span="249-249", cluster="Humanizer.Bytes.ByteSize.AddMegabytes(double)", file="InflectorExtensions.cs"];
m8_91 [label="Entry Humanizer.Bytes.ByteSize.Add(Humanizer.Bytes.ByteSize)", span="229-229", cluster="Humanizer.Bytes.ByteSize.Add(Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_92 [label="return new ByteSize(Bytes + bs.Bytes);", span="231-231", cluster="Humanizer.Bytes.ByteSize.Add(Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_93 [label="Exit Humanizer.Bytes.ByteSize.Add(Humanizer.Bytes.ByteSize)", span="229-229", cluster="Humanizer.Bytes.ByteSize.Add(Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_0 [label="Entry Humanizer.Bytes.ByteSize.ByteSize(double)", span="102-102", cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="InflectorExtensions.cs"];
m8_1 [label="Bits = (long)Math.Ceiling(byteSize * BitsInByte)", span="106-106", cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="InflectorExtensions.cs"];
m8_2 [label="Bytes = byteSize", span="108-108", cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="InflectorExtensions.cs"];
m8_3 [label="Kilobytes = byteSize / BytesInKilobyte", span="109-109", cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="InflectorExtensions.cs"];
m8_4 [label="Megabytes = byteSize / BytesInMegabyte", span="110-110", cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="InflectorExtensions.cs"];
m8_5 [label="Gigabytes = byteSize / BytesInGigabyte", span="111-111", cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="InflectorExtensions.cs"];
m8_6 [label="Terabytes = byteSize / BytesInTerabyte", span="112-112", cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="InflectorExtensions.cs"];
m8_7 [label="Exit Humanizer.Bytes.ByteSize.ByteSize(double)", span="102-102", cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="InflectorExtensions.cs"];
m8_56 [label="Entry string.Equals(string)", span="0-0", cluster="string.Equals(string)", file="InflectorExtensions.cs"];
m8_18 [label="Entry Humanizer.Bytes.ByteSize.FromMegabytes(double)", span="130-130", cluster="Humanizer.Bytes.ByteSize.FromMegabytes(double)", file="InflectorExtensions.cs"];
m8_19 [label="return new ByteSize(value * BytesInMegabyte);", span="132-132", cluster="Humanizer.Bytes.ByteSize.FromMegabytes(double)", file="InflectorExtensions.cs"];
m8_20 [label="Exit Humanizer.Bytes.ByteSize.FromMegabytes(double)", span="130-130", cluster="Humanizer.Bytes.ByteSize.FromMegabytes(double)", file="InflectorExtensions.cs"];
m8_145 [label="Entry Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", span="319-319", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_146 [label="string.IsNullOrWhiteSpace(s)", span="322-322", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_147 [label="throw new ArgumentNullException(nameof(s), ''String is null or whitespace'');", span="323-323", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_149 [label="s = s.TrimStart()", span="329-329", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_148 [label="result = new ByteSize()", span="326-326", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_150 [label="int num", span="331-331", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_154 [label="num < s.Length", span="338-338", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_155 [label="!(char.IsDigit(s[num]) || s[num] == decSep)", span="339-339", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_161 [label="var numberPart = s.Substring(0, lastNumber).Trim()", span="351-351", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_162 [label="var sizePart = s.Substring(lastNumber, s.Length - lastNumber).Trim()", span="352-352", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_151 [label="var found = false", span="332-332", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_152 [label="var decSep = Convert.ToChar(System.Globalization.CultureInfo.CurrentCulture.NumberFormat.NumberDecimalSeparator)", span="335-335", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_158 [label="found == false", span="345-345", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_153 [label="num = 0", span="338-338", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_157 [label="num++", span="338-338", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_160 [label="var lastNumber = num", span="348-348", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_156 [label="found = true", span="341-341", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_159 [label="return false;", span="346-346", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_163 [label="!double.TryParse(numberPart, out var number)", span="355-355", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_165 [label="sizePart.ToUpper()", span="359-359", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_167 [label="sizePart == BitSymbol", span="362-362", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_164 [label="return false;", span="356-356", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_166 [label=ByteSymbol, span="361-361", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_172 [label=KilobyteSymbol, span="375-375", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_174 [label=MegabyteSymbol, span="379-379", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_176 [label=GigabyteSymbol, span="383-383", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_178 [label=TerabyteSymbol, span="387-387", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_168 [label="number % 1 != 0", span="364-364", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_171 [label="result = FromBytes(number)", span="371-371", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_169 [label="return false;", span="365-365", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_170 [label="result = FromBits((long)number)", span="367-367", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_173 [label="result = FromKilobytes(number)", span="376-376", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_175 [label="result = FromMegabytes(number)", span="380-380", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_177 [label="result = FromGigabytes(number)", span="384-384", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_179 [label="result = FromTerabytes(number)", span="388-388", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_180 [label="return true;", span="392-392", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_181 [label="Exit Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", span="319-319", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_12 [label="Entry Humanizer.Bytes.ByteSize.FromBytes(double)", span="120-120", cluster="Humanizer.Bytes.ByteSize.FromBytes(double)", file="InflectorExtensions.cs"];
m8_13 [label="return new ByteSize(value);", span="122-122", cluster="Humanizer.Bytes.ByteSize.FromBytes(double)", file="InflectorExtensions.cs"];
m8_14 [label="Exit Humanizer.Bytes.ByteSize.FromBytes(double)", span="120-120", cluster="Humanizer.Bytes.ByteSize.FromBytes(double)", file="InflectorExtensions.cs"];
m8_191 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="InflectorExtensions.cs"];
m8_53 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="InflectorExtensions.cs"];
m8_31 [label="Entry Humanizer.Bytes.ByteSize.ToString(string)", span="156-156", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="InflectorExtensions.cs"];
m8_32 [label="!format.Contains(''#'') && !format.Contains(''0'')", span="158-158", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="InflectorExtensions.cs"];
m8_33 [label="format = ''0.## '' + format", span="159-159", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="InflectorExtensions.cs"];
m8_34 [label="Func<string, bool> has = s => format.IndexOf(s, StringComparison.CurrentCultureIgnoreCase) != -1", span="161-161", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="InflectorExtensions.cs"];
m8_35 [label="Func<double, string> output = n => n.ToString(format)", span="162-162", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="InflectorExtensions.cs"];
m8_44 [label="format.IndexOf(ByteSymbol, StringComparison.Ordinal) != -1", span="174-174", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="InflectorExtensions.cs"];
m8_46 [label="format.IndexOf(BitSymbol, StringComparison.Ordinal) != -1", span="177-177", cluster="Humanizer.Bytes.ByteSize.ToString(string)", color=red, community=0, file="InflectorExtensions.cs"];
m8_48 [label="var formattedLargeWholeNumberValue = LargestWholeNumberValue.ToString(format)", span="180-180", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="InflectorExtensions.cs"];
m8_36 [label="has(TerabyteSymbol)", span="164-164", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="InflectorExtensions.cs"];
m8_38 [label="has(GigabyteSymbol)", span="166-166", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="InflectorExtensions.cs"];
m8_40 [label="has(MegabyteSymbol)", span="168-168", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="InflectorExtensions.cs"];
m8_42 [label="has(KilobyteSymbol)", span="170-170", cluster="Humanizer.Bytes.ByteSize.ToString(string)", color=red, community=0, file="InflectorExtensions.cs"];
m8_37 [label="return output(Terabytes);", span="165-165", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="InflectorExtensions.cs"];
m8_39 [label="return output(Gigabytes);", span="167-167", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="InflectorExtensions.cs"];
m8_41 [label="return output(Megabytes);", span="169-169", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="InflectorExtensions.cs"];
m8_43 [label="return output(Kilobytes);", span="171-171", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="InflectorExtensions.cs"];
m8_45 [label="return output(Bytes);", span="175-175", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="InflectorExtensions.cs"];
m8_47 [label="return output(Bits);", span="178-178", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="InflectorExtensions.cs"];
m8_49 [label="formattedLargeWholeNumberValue = formattedLargeWholeNumberValue.Equals(string.Empty)\r\n                                              ? ''0''\r\n                                              : formattedLargeWholeNumberValue", span="182-184", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="InflectorExtensions.cs"];
m8_50 [label="return string.Format(''{0} {1}'', formattedLargeWholeNumberValue, LargestWholeNumberSymbol);", span="186-186", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="InflectorExtensions.cs"];
m8_51 [label="Exit Humanizer.Bytes.ByteSize.ToString(string)", span="156-156", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="InflectorExtensions.cs"];
m8_72 [label="Entry Humanizer.Bytes.ByteSize.Equals(Humanizer.Bytes.ByteSize)", span="203-203", cluster="Humanizer.Bytes.ByteSize.Equals(Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_73 [label="return Bits == value.Bits;", span="205-205", cluster="Humanizer.Bytes.ByteSize.Equals(Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_74 [label="Exit Humanizer.Bytes.ByteSize.Equals(Humanizer.Bytes.ByteSize)", span="203-203", cluster="Humanizer.Bytes.ByteSize.Equals(Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_86 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="InflectorExtensions.cs"];
m8_112 [label="Entry Humanizer.Bytes.ByteSize.Subtract(Humanizer.Bytes.ByteSize)", span="264-264", cluster="Humanizer.Bytes.ByteSize.Subtract(Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_113 [label="return new ByteSize(Bytes - bs.Bytes);", span="266-266", cluster="Humanizer.Bytes.ByteSize.Subtract(Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_114 [label="Exit Humanizer.Bytes.ByteSize.Subtract(Humanizer.Bytes.ByteSize)", span="264-264", cluster="Humanizer.Bytes.ByteSize.Subtract(Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_121 [label="Entry Humanizer.Bytes.ByteSize.operator -(Humanizer.Bytes.ByteSize)", span="279-279", cluster="Humanizer.Bytes.ByteSize.operator -(Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_122 [label="return new ByteSize(-b.Bytes);", span="281-281", cluster="Humanizer.Bytes.ByteSize.operator -(Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_123 [label="Exit Humanizer.Bytes.ByteSize.operator -(Humanizer.Bytes.ByteSize)", span="279-279", cluster="Humanizer.Bytes.ByteSize.operator -(Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_186 [label="Entry string.TrimStart(params char[])", span="0-0", cluster="string.TrimStart(params char[])", file="InflectorExtensions.cs"];
m8_197 [label="Entry Unk.FromTerabytes", span="", cluster="Unk.FromTerabytes", file="InflectorExtensions.cs"];
m8_106 [label="Entry Humanizer.Bytes.ByteSize.AddGigabytes(double)", span="254-254", cluster="Humanizer.Bytes.ByteSize.AddGigabytes(double)", file="InflectorExtensions.cs"];
m8_107 [label="return this + FromGigabytes(value);", span="256-256", cluster="Humanizer.Bytes.ByteSize.AddGigabytes(double)", file="InflectorExtensions.cs"];
m8_108 [label="Exit Humanizer.Bytes.ByteSize.AddGigabytes(double)", span="254-254", cluster="Humanizer.Bytes.ByteSize.AddGigabytes(double)", file="InflectorExtensions.cs"];
m8_198 [label="Entry Humanizer.Bytes.ByteSize.Parse(string)", span="395-395", cluster="Humanizer.Bytes.ByteSize.Parse(string)", file="InflectorExtensions.cs"];
m8_199 [label="TryParse(s, out var result)", span="397-397", cluster="Humanizer.Bytes.ByteSize.Parse(string)", file="InflectorExtensions.cs"];
m8_200 [label="return result;", span="398-398", cluster="Humanizer.Bytes.ByteSize.Parse(string)", file="InflectorExtensions.cs"];
m8_201 [label="throw new FormatException(''Value is not in the correct format'');", span="400-400", cluster="Humanizer.Bytes.ByteSize.Parse(string)", file="InflectorExtensions.cs"];
m8_202 [label="Exit Humanizer.Bytes.ByteSize.Parse(string)", span="395-395", cluster="Humanizer.Bytes.ByteSize.Parse(string)", file="InflectorExtensions.cs"];
m8_184 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="InflectorExtensions.cs"];
m8_192 [label="Entry string.ToUpper()", span="0-0", cluster="string.ToUpper()", file="InflectorExtensions.cs"];
m8_193 [label="Entry Unk.FromBytes", span="", cluster="Unk.FromBytes", file="InflectorExtensions.cs"];
m8_189 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="InflectorExtensions.cs"];
m8_87 [label="Entry Humanizer.Bytes.ByteSize.CompareTo(Humanizer.Bytes.ByteSize)", span="224-224", cluster="Humanizer.Bytes.ByteSize.CompareTo(Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_88 [label="return Bits.CompareTo(other.Bits);", span="226-226", cluster="Humanizer.Bytes.ByteSize.CompareTo(Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_89 [label="Exit Humanizer.Bytes.ByteSize.CompareTo(Humanizer.Bytes.ByteSize)", span="224-224", cluster="Humanizer.Bytes.ByteSize.CompareTo(Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_78 [label="Entry long.GetHashCode()", span="0-0", cluster="long.GetHashCode()", file="InflectorExtensions.cs"];
m8_139 [label="Entry Humanizer.Bytes.ByteSize.operator >(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="309-309", cluster="Humanizer.Bytes.ByteSize.operator >(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_140 [label="return b1.Bits > b2.Bits;", span="311-311", cluster="Humanizer.Bytes.ByteSize.operator >(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_141 [label="Exit Humanizer.Bytes.ByteSize.operator >(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="309-309", cluster="Humanizer.Bytes.ByteSize.operator >(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_79 [label="Entry Humanizer.Bytes.ByteSize.CompareTo(object)", span="213-213", cluster="Humanizer.Bytes.ByteSize.CompareTo(object)", file="InflectorExtensions.cs"];
m8_80 [label="obj == null", span="215-215", cluster="Humanizer.Bytes.ByteSize.CompareTo(object)", file="InflectorExtensions.cs"];
m8_82 [label="!(obj is ByteSize)", span="218-218", cluster="Humanizer.Bytes.ByteSize.CompareTo(object)", file="InflectorExtensions.cs"];
m8_84 [label="return CompareTo((ByteSize) obj);", span="221-221", cluster="Humanizer.Bytes.ByteSize.CompareTo(object)", file="InflectorExtensions.cs"];
m8_81 [label="return 1;", span="216-216", cluster="Humanizer.Bytes.ByteSize.CompareTo(object)", file="InflectorExtensions.cs"];
m8_83 [label="throw new ArgumentException(''Object is not a ByteSize'');", span="219-219", cluster="Humanizer.Bytes.ByteSize.CompareTo(object)", file="InflectorExtensions.cs"];
m8_85 [label="Exit Humanizer.Bytes.ByteSize.CompareTo(object)", span="213-213", cluster="Humanizer.Bytes.ByteSize.CompareTo(object)", file="InflectorExtensions.cs"];
m8_187 [label="Entry System.Convert.ToChar(string)", span="0-0", cluster="System.Convert.ToChar(string)", file="InflectorExtensions.cs"];
m8_24 [label="Entry Humanizer.Bytes.ByteSize.FromTerabytes(double)", span="140-140", cluster="Humanizer.Bytes.ByteSize.FromTerabytes(double)", file="InflectorExtensions.cs"];
m8_25 [label="return new ByteSize(value * BytesInTerabyte);", span="142-142", cluster="Humanizer.Bytes.ByteSize.FromTerabytes(double)", file="InflectorExtensions.cs"];
m8_26 [label="Exit Humanizer.Bytes.ByteSize.FromTerabytes(double)", span="140-140", cluster="Humanizer.Bytes.ByteSize.FromTerabytes(double)", file="InflectorExtensions.cs"];
m8_194 [label="Entry Unk.FromKilobytes", span="", cluster="Unk.FromKilobytes", file="InflectorExtensions.cs"];
m8_196 [label="Entry Unk.FromGigabytes", span="", cluster="Unk.FromGigabytes", file="InflectorExtensions.cs"];
m8_203 [label="Entry System.FormatException.FormatException(string)", span="0-0", cluster="System.FormatException.FormatException(string)", file="InflectorExtensions.cs"];
m8_21 [label="Entry Humanizer.Bytes.ByteSize.FromGigabytes(double)", span="135-135", cluster="Humanizer.Bytes.ByteSize.FromGigabytes(double)", file="InflectorExtensions.cs"];
m8_22 [label="return new ByteSize(value * BytesInGigabyte);", span="137-137", cluster="Humanizer.Bytes.ByteSize.FromGigabytes(double)", file="InflectorExtensions.cs"];
m8_23 [label="Exit Humanizer.Bytes.ByteSize.FromGigabytes(double)", span="135-135", cluster="Humanizer.Bytes.ByteSize.FromGigabytes(double)", file="InflectorExtensions.cs"];
m8_15 [label="Entry Humanizer.Bytes.ByteSize.FromKilobytes(double)", span="125-125", cluster="Humanizer.Bytes.ByteSize.FromKilobytes(double)", file="InflectorExtensions.cs"];
m8_16 [label="return new ByteSize(value * BytesInKilobyte);", span="127-127", cluster="Humanizer.Bytes.ByteSize.FromKilobytes(double)", file="InflectorExtensions.cs"];
m8_17 [label="Exit Humanizer.Bytes.ByteSize.FromKilobytes(double)", span="125-125", cluster="Humanizer.Bytes.ByteSize.FromKilobytes(double)", file="InflectorExtensions.cs"];
m8_60 [label="Entry lambda expression", span="162-162", cluster="lambda expression", file="InflectorExtensions.cs"];
m8_58 [label="format.IndexOf(s, StringComparison.CurrentCultureIgnoreCase) != -1", span="161-161", cluster="lambda expression", file="InflectorExtensions.cs"];
m8_61 [label="n.ToString(format)", span="162-162", cluster="lambda expression", file="InflectorExtensions.cs"];
m8_57 [label="Entry lambda expression", span="161-161", cluster="lambda expression", file="InflectorExtensions.cs"];
m8_59 [label="Exit lambda expression", span="161-161", cluster="lambda expression", file="InflectorExtensions.cs"];
m8_62 [label="Exit lambda expression", span="162-162", cluster="lambda expression", file="InflectorExtensions.cs"];
m8_109 [label="Entry Humanizer.Bytes.ByteSize.AddTerabytes(double)", span="259-259", cluster="Humanizer.Bytes.ByteSize.AddTerabytes(double)", file="InflectorExtensions.cs"];
m8_110 [label="return this + FromTerabytes(value);", span="261-261", cluster="Humanizer.Bytes.ByteSize.AddTerabytes(double)", file="InflectorExtensions.cs"];
m8_111 [label="Exit Humanizer.Bytes.ByteSize.AddTerabytes(double)", span="259-259", cluster="Humanizer.Bytes.ByteSize.AddTerabytes(double)", file="InflectorExtensions.cs"];
m8_54 [label="Entry string.IndexOf(string, System.StringComparison)", span="0-0", cluster="string.IndexOf(string, System.StringComparison)", file="InflectorExtensions.cs"];
m8_75 [label="Entry Humanizer.Bytes.ByteSize.GetHashCode()", span="208-208", cluster="Humanizer.Bytes.ByteSize.GetHashCode()", file="InflectorExtensions.cs"];
m8_76 [label="return Bits.GetHashCode();", span="210-210", cluster="Humanizer.Bytes.ByteSize.GetHashCode()", file="InflectorExtensions.cs"];
m8_77 [label="Exit Humanizer.Bytes.ByteSize.GetHashCode()", span="208-208", cluster="Humanizer.Bytes.ByteSize.GetHashCode()", file="InflectorExtensions.cs"];
m8_195 [label="Entry Unk.FromMegabytes", span="", cluster="Unk.FromMegabytes", file="InflectorExtensions.cs"];
m8_124 [label="Entry Humanizer.Bytes.ByteSize.operator --(Humanizer.Bytes.ByteSize)", span="284-284", cluster="Humanizer.Bytes.ByteSize.operator --(Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_125 [label="return new ByteSize(b.Bytes - 1);", span="286-286", cluster="Humanizer.Bytes.ByteSize.operator --(Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_126 [label="Exit Humanizer.Bytes.ByteSize.operator --(Humanizer.Bytes.ByteSize)", span="284-284", cluster="Humanizer.Bytes.ByteSize.operator --(Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_142 [label="Entry Humanizer.Bytes.ByteSize.operator >=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="314-314", cluster="Humanizer.Bytes.ByteSize.operator >=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_143 [label="return b1.Bits >= b2.Bits;", span="316-316", cluster="Humanizer.Bytes.ByteSize.operator >=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_144 [label="Exit Humanizer.Bytes.ByteSize.operator >=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="314-314", cluster="Humanizer.Bytes.ByteSize.operator >=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_127 [label="Entry Humanizer.Bytes.ByteSize.operator ==(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="289-289", cluster="Humanizer.Bytes.ByteSize.operator ==(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_128 [label="return b1.Bits == b2.Bits;", span="291-291", cluster="Humanizer.Bytes.ByteSize.operator ==(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_129 [label="Exit Humanizer.Bytes.ByteSize.operator ==(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="289-289", cluster="Humanizer.Bytes.ByteSize.operator ==(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_115 [label="Entry Humanizer.Bytes.ByteSize.operator +(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="269-269", cluster="Humanizer.Bytes.ByteSize.operator +(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_116 [label="return new ByteSize(b1.Bytes + b2.Bytes);", span="271-271", cluster="Humanizer.Bytes.ByteSize.operator +(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_117 [label="Exit Humanizer.Bytes.ByteSize.operator +(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="269-269", cluster="Humanizer.Bytes.ByteSize.operator +(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="InflectorExtensions.cs"];
m8_185 [label="Entry Humanizer.Bytes.ByteSize.ByteSize()", span="30-30", cluster="Humanizer.Bytes.ByteSize.ByteSize()", file="InflectorExtensions.cs"];
m8_90 [label="Entry long.CompareTo(long)", span="0-0", cluster="long.CompareTo(long)", file="InflectorExtensions.cs"];
m8_100 [label="Entry Humanizer.Bytes.ByteSize.AddKilobytes(double)", span="244-244", cluster="Humanizer.Bytes.ByteSize.AddKilobytes(double)", file="InflectorExtensions.cs"];
m8_101 [label="return this + FromKilobytes(value);", span="246-246", cluster="Humanizer.Bytes.ByteSize.AddKilobytes(double)", file="InflectorExtensions.cs"];
m8_102 [label="Exit Humanizer.Bytes.ByteSize.AddKilobytes(double)", span="244-244", cluster="Humanizer.Bytes.ByteSize.AddKilobytes(double)", file="InflectorExtensions.cs"];
m8_55 [label="Entry double.ToString(string)", span="0-0", cluster="double.ToString(string)", file="InflectorExtensions.cs"];
m8_8 [label="Entry System.Math.Ceiling(double)", span="0-0", cluster="System.Math.Ceiling(double)", file="InflectorExtensions.cs"];
m8_204 [label="Humanizer.Bytes.ByteSize", span="", file="InflectorExtensions.cs"];
m8_205 [label="ref Humanizer.Bytes.ByteSize", span="", file="InflectorExtensions.cs"];
m8_206 [label="ref Humanizer.Bytes.ByteSize", span="", file="InflectorExtensions.cs"];
m8_207 [label=string, span="", file="InflectorExtensions.cs"];
m8_208 [label="ref Humanizer.Bytes.ByteSize", span="", file="InflectorExtensions.cs"];
m8_209 [label="ref Humanizer.Bytes.ByteSize", span="", file="InflectorExtensions.cs"];
m8_210 [label="ref Humanizer.Bytes.ByteSize", span="", file="InflectorExtensions.cs"];
m8_211 [label="ref Humanizer.Bytes.ByteSize", span="", file="InflectorExtensions.cs"];
m8_212 [label="ref Humanizer.Bytes.ByteSize", span="", file="InflectorExtensions.cs"];
m8_213 [label="ref Humanizer.Bytes.ByteSize", span="", file="InflectorExtensions.cs"];
m8_214 [label="ref Humanizer.Bytes.ByteSize", span="", file="InflectorExtensions.cs"];
m10_8 [label="Entry lambda expression", span="18-18", cluster="lambda expression", file="NumberToWordsConverterRegistry.cs"];
m10_5 [label="new RussianFormatter()", span="17-17", cluster="lambda expression", color=green, community=0, file="NumberToWordsConverterRegistry.cs"];
m10_4 [label="Entry lambda expression", span="17-17", cluster="lambda expression", file="NumberToWordsConverterRegistry.cs"];
m10_6 [label="Exit lambda expression", span="17-17", cluster="lambda expression", file="NumberToWordsConverterRegistry.cs"];
m10_9 [label="new ArabicFormatter()", span="18-18", cluster="lambda expression", color=green, community=0, file="NumberToWordsConverterRegistry.cs"];
m10_10 [label="Exit lambda expression", span="18-18", cluster="lambda expression", file="NumberToWordsConverterRegistry.cs"];
m10_7 [label="Entry Humanizer.Localisation.RussianFormatter.RussianFormatter()", span="2-2", cluster="Humanizer.Localisation.RussianFormatter.RussianFormatter()", file="NumberToWordsConverterRegistry.cs"];
m10_11 [label="Entry Humanizer.Localisation.ArabicFormatter.ArabicFormatter()", span="2-2", cluster="Humanizer.Localisation.ArabicFormatter.ArabicFormatter()", file="NumberToWordsConverterRegistry.cs"];
m12_10 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="PolishNumberToWordsConverter.cs"];
m12_0 [label="Entry Humanizer.Tests.Extensions.FluentDate.OnTests.OnJanuaryThe23rd()", span="8-8", cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnJanuaryThe23rd()", file="PolishNumberToWordsConverter.cs"];
m12_2 [label="Assert.Equal(DateTime.Now.Year, jan23rd.Year)", span="11-11", cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnJanuaryThe23rd()", color=green, community=0, file="PolishNumberToWordsConverter.cs"];
m12_1 [label="var jan23rd = On.January.The23rd", span="10-10", cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnJanuaryThe23rd()", file="PolishNumberToWordsConverter.cs"];
m12_3 [label="Assert.Equal(1, jan23rd.Month)", span="12-12", cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnJanuaryThe23rd()", color=green, community=0, file="PolishNumberToWordsConverter.cs"];
m12_4 [label="Assert.Equal(23, jan23rd.Day)", span="13-13", cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnJanuaryThe23rd()", color=green, community=0, file="PolishNumberToWordsConverter.cs"];
m12_5 [label="Assert.Equal(0, jan23rd.Hour)", span="14-14", cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnJanuaryThe23rd()", color=green, community=0, file="PolishNumberToWordsConverter.cs"];
m12_6 [label="Assert.Equal(0, jan23rd.Minute)", span="15-15", cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnJanuaryThe23rd()", color=green, community=0, file="PolishNumberToWordsConverter.cs"];
m12_7 [label="Assert.Equal(0, jan23rd.Second)", span="16-16", cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnJanuaryThe23rd()", color=green, community=0, file="PolishNumberToWordsConverter.cs"];
m12_8 [label="Assert.Equal(0, jan23rd.Millisecond)", span="17-17", cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnJanuaryThe23rd()", file="PolishNumberToWordsConverter.cs"];
m12_9 [label="Exit Humanizer.Tests.Extensions.FluentDate.OnTests.OnJanuaryThe23rd()", span="8-8", cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnJanuaryThe23rd()", file="PolishNumberToWordsConverter.cs"];
m12_11 [label="Entry Humanizer.Tests.Extensions.FluentDate.OnTests.OnDecemberThe4th()", span="21-21", cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnDecemberThe4th()", file="PolishNumberToWordsConverter.cs"];
m12_13 [label="Assert.Equal(DateTime.Now.Year, dec4th.Year)", span="24-24", cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnDecemberThe4th()", file="PolishNumberToWordsConverter.cs"];
m12_14 [label="Assert.Equal(12, dec4th.Month)", span="25-25", cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnDecemberThe4th()", file="PolishNumberToWordsConverter.cs"];
m12_15 [label="Assert.Equal(4, dec4th.Day)", span="26-26", cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnDecemberThe4th()", file="PolishNumberToWordsConverter.cs"];
m12_16 [label="Assert.Equal(0, dec4th.Hour)", span="27-27", cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnDecemberThe4th()", file="PolishNumberToWordsConverter.cs"];
m12_17 [label="Assert.Equal(0, dec4th.Minute)", span="28-28", cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnDecemberThe4th()", file="PolishNumberToWordsConverter.cs"];
m12_18 [label="Assert.Equal(0, dec4th.Second)", span="29-29", cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnDecemberThe4th()", file="PolishNumberToWordsConverter.cs"];
m12_19 [label="Assert.Equal(0, dec4th.Millisecond)", span="30-30", cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnDecemberThe4th()", file="PolishNumberToWordsConverter.cs"];
m12_12 [label="var dec4th = On.December.The4th", span="23-23", cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnDecemberThe4th()", file="PolishNumberToWordsConverter.cs"];
m12_20 [label="Exit Humanizer.Tests.Extensions.FluentDate.OnTests.OnDecemberThe4th()", span="21-21", cluster="Humanizer.Tests.Extensions.FluentDate.OnTests.OnDecemberThe4th()", file="PolishNumberToWordsConverter.cs"];
m13_0 [label="Entry Humanizer.StringExentions.FormatWith(string, params object[])", span="15-15", cluster="Humanizer.StringExentions.FormatWith(string, params object[])", file="StringExentions.cs"];
m13_1 [label="return String.Format(format, args);", span="17-17", cluster="Humanizer.StringExentions.FormatWith(string, params object[])", file="StringExentions.cs"];
m13_2 [label="Exit Humanizer.StringExentions.FormatWith(string, params object[])", span="15-15", cluster="Humanizer.StringExentions.FormatWith(string, params object[])", file="StringExentions.cs"];
m13_3 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="StringExentions.cs"];
m14_11 [label="Entry Unk.>", span="", cluster="Unk.>", file="StringExtensionsTests.cs"];
m14_5 [label="Entry Humanizer.Tests.StringExtensionsTests.CanFormatStringWithMoreArguments()", span="17-17", cluster="Humanizer.Tests.StringExtensionsTests.CanFormatStringWithMoreArguments()", file="StringExtensionsTests.cs"];
m14_6 [label="Assert.Equal(Expected, Format.FormatWith(1, 2, 3, 4, 5))", span="19-19", cluster="Humanizer.Tests.StringExtensionsTests.CanFormatStringWithMoreArguments()", file="StringExtensionsTests.cs"];
m14_7 [label="Exit Humanizer.Tests.StringExtensionsTests.CanFormatStringWithMoreArguments()", span="17-17", cluster="Humanizer.Tests.StringExtensionsTests.CanFormatStringWithMoreArguments()", file="StringExtensionsTests.cs"];
m14_15 [label="Entry Humanizer.Tests.StringExtensionsTests.FormatCannotBeNull()", span="29-29", cluster="Humanizer.Tests.StringExtensionsTests.FormatCannotBeNull()", file="StringExtensionsTests.cs"];
m14_16 [label="string format = null", span="31-31", cluster="Humanizer.Tests.StringExtensionsTests.FormatCannotBeNull()", file="StringExtensionsTests.cs"];
m14_17 [label="Assert.Throws<ArgumentNullException>(() => format.FormatWith(1, 2))", span="32-32", cluster="Humanizer.Tests.StringExtensionsTests.FormatCannotBeNull()", file="StringExtensionsTests.cs"];
m14_18 [label="Exit Humanizer.Tests.StringExtensionsTests.FormatCannotBeNull()", span="29-29", cluster="Humanizer.Tests.StringExtensionsTests.FormatCannotBeNull()", file="StringExtensionsTests.cs"];
m14_0 [label="Entry Humanizer.Tests.StringExtensionsTests.CanFormatStringWithExactNumberOfArguments()", span="11-11", cluster="Humanizer.Tests.StringExtensionsTests.CanFormatStringWithExactNumberOfArguments()", file="StringExtensionsTests.cs"];
m14_1 [label="Assert.Equal(Expected, Format.FormatWith(1, 2, 3))", span="13-13", cluster="Humanizer.Tests.StringExtensionsTests.CanFormatStringWithExactNumberOfArguments()", file="StringExtensionsTests.cs"];
m14_2 [label="Exit Humanizer.Tests.StringExtensionsTests.CanFormatStringWithExactNumberOfArguments()", span="11-11", cluster="Humanizer.Tests.StringExtensionsTests.CanFormatStringWithExactNumberOfArguments()", file="StringExtensionsTests.cs"];
m14_4 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="StringExtensionsTests.cs"];
m14_26 [label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="27-27", cluster="string.FormatWith(System.IFormatProvider, params object[])", file="StringExtensionsTests.cs"];
m14_3 [label="Entry string.FormatWith(params object[])", span="15-15", cluster="string.FormatWith(params object[])", file="StringExtensionsTests.cs"];
m14_8 [label="Entry Humanizer.Tests.StringExtensionsTests.CannotFormatStringWithLessArguments()", span="23-23", cluster="Humanizer.Tests.StringExtensionsTests.CannotFormatStringWithLessArguments()", file="StringExtensionsTests.cs"];
m14_9 [label="Assert.Throws<FormatException>(() => Format.FormatWith(1, 2))", span="25-25", cluster="Humanizer.Tests.StringExtensionsTests.CannotFormatStringWithLessArguments()", file="StringExtensionsTests.cs"];
m14_10 [label="Exit Humanizer.Tests.StringExtensionsTests.CannotFormatStringWithLessArguments()", span="23-23", cluster="Humanizer.Tests.StringExtensionsTests.CannotFormatStringWithLessArguments()", file="StringExtensionsTests.cs"];
m14_19 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="StringExtensionsTests.cs"];
m14_12 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="StringExtensionsTests.cs"];
m14_13 [label="Format.FormatWith(1, 2)", span="25-25", cluster="lambda expression", file="StringExtensionsTests.cs"];
m14_14 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="StringExtensionsTests.cs"];
m14_20 [label="format.FormatWith(1, 2)", span="32-32", cluster="lambda expression", file="StringExtensionsTests.cs"];
m14_21 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="StringExtensionsTests.cs"];
m14_22 [label=format, span="", cluster="Humanizer.Tests.StringExtensionsTests.CanSpecifyCultureExplicitly(string, string)", file="StringExtensionsTests.cs"];
m14_23 [label="Assert.Equal(expected, ''{0:N2}''.FormatWith(new CultureInfo(culture), 6666.66))", span="42-42", cluster="Humanizer.Tests.StringExtensionsTests.CanSpecifyCultureExplicitly(string, string)", color=green, community=0, file="StringExtensionsTests.cs"];
m14_24 [label="Exit Humanizer.Tests.StringExtensionsTests.CanSpecifyCultureExplicitly(string, string)", span="40-40", cluster="Humanizer.Tests.StringExtensionsTests.CanSpecifyCultureExplicitly(string, string)", file="StringExtensionsTests.cs"];
m14_25 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="StringExtensionsTests.cs"];
m16_19 [label="Entry int.ToWords(System.Globalization.CultureInfo)", span="16-16", cluster="int.ToWords(System.Globalization.CultureInfo)", file="ToQuantityExtensions.cs"];
m16_3 [label="Entry string.ToQuantity(int, Humanizer.ShowQuantityAs, string, System.IFormatProvider)", span="69-69", cluster="string.ToQuantity(int, Humanizer.ShowQuantityAs, string, System.IFormatProvider)", file="ToQuantityExtensions.cs"];
m16_18 [label="Entry string.Format(System.IFormatProvider, string, object, object)", span="0-0", cluster="string.Format(System.IFormatProvider, string, object, object)", file="ToQuantityExtensions.cs"];
m16_0 [label="Entry Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", span="46-46", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", file="ToQuantityExtensions.cs"];
m16_1 [label="return input.ToQuantity(quantity, showQuantityAs, format: null, formatProvider: null);", span="48-48", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", file="ToQuantityExtensions.cs"];
m16_2 [label="Exit Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", span="46-46", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", file="ToQuantityExtensions.cs"];
m16_4 [label="Entry Humanizer.ToQuantityExtensions.ToQuantity(string, int, string, System.IFormatProvider)", span="64-64", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, string, System.IFormatProvider)", file="ToQuantityExtensions.cs"];
m16_5 [label="return input.ToQuantity(quantity, showQuantityAs: ShowQuantityAs.Numeric, format: format, formatProvider: formatProvider);", span="66-66", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, string, System.IFormatProvider)", file="ToQuantityExtensions.cs"];
m16_6 [label="Exit Humanizer.ToQuantityExtensions.ToQuantity(string, int, string, System.IFormatProvider)", span="64-64", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, string, System.IFormatProvider)", file="ToQuantityExtensions.cs"];
m16_20 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="ToQuantityExtensions.cs"];
m16_16 [label="Entry string.Pluralize(Humanizer.Plurality)", span="170-170", cluster="string.Pluralize(Humanizer.Plurality)", file="ToQuantityExtensions.cs"];
m16_17 [label="Entry int.ToString(string, System.IFormatProvider)", span="0-0", cluster="int.ToString(string, System.IFormatProvider)", file="ToQuantityExtensions.cs"];
m16_15 [label="Entry string.Singularize(Humanizer.Plurality)", span="194-194", cluster="string.Singularize(Humanizer.Plurality)", file="ToQuantityExtensions.cs"];
m16_7 [label="Entry Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs, string, System.IFormatProvider)", span="69-69", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs, string, System.IFormatProvider)", file="ToQuantityExtensions.cs"];
m16_8 [label="var transformedInput = quantity == 1\r\n                ? input.Singularize(Plurality.CouldBeEither)\r\n                : input.Pluralize(Plurality.CouldBeEither)", span="71-73", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs, string, System.IFormatProvider)", color=green, community=0, file="ToQuantityExtensions.cs"];
m16_9 [label="showQuantityAs == ShowQuantityAs.None", span="75-75", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs, string, System.IFormatProvider)", file="ToQuantityExtensions.cs"];
m16_10 [label="return transformedInput;", span="76-76", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs, string, System.IFormatProvider)", file="ToQuantityExtensions.cs"];
m16_12 [label="return string.Format(formatProvider, ''{0} {1}'', quantity.ToString(format, formatProvider), transformedInput);", span="79-79", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs, string, System.IFormatProvider)", file="ToQuantityExtensions.cs"];
m16_13 [label="return string.Format(''{0} {1}'', quantity.ToWords(), transformedInput);", span="81-81", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs, string, System.IFormatProvider)", file="ToQuantityExtensions.cs"];
m16_11 [label="showQuantityAs == ShowQuantityAs.Numeric", span="78-78", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs, string, System.IFormatProvider)", file="ToQuantityExtensions.cs"];
m16_14 [label="Exit Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs, string, System.IFormatProvider)", span="69-69", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs, string, System.IFormatProvider)", file="ToQuantityExtensions.cs"];
m0_45 -> m0_93  [key=0, style=solid];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_95  [key=2, style=dotted];
m0_93 -> m0_96  [key=2, style=dotted];
m0_93 -> m0_32  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m0_94 -> m0_45  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=2, style=dotted];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_66 -> m0_81  [key=0, style=solid];
m0_66 -> m0_82  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_66 -> m0_83  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_83  [key=0, style=solid];
m0_82 -> m0_87  [key=0, style=solid];
m0_82 -> m0_82  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_82 -> m0_83  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_86  [key=0, style=solid];
m0_83 -> m0_83  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_84  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_84 -> m0_86  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_86  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_85 -> m0_87  [key=0, style=solid];
m0_87 -> m0_66  [key=0, style=bold, color=blue];
m0_9 -> m0_105  [key=0, style=solid];
m0_9 -> m0_106  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_9 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_9 -> m0_108  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_107  [key=0, style=solid];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_112  [key=2, style=dotted];
m0_106 -> m0_106  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_106 -> m0_114  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_113  [key=2, style=dotted];
m0_107 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_107 -> m0_109  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_107 -> m0_110  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_110  [key=0, style=solid];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_112  [key=2, style=dotted];
m0_109 -> m0_109  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_109 -> m0_117  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_110 -> m0_111  [key=0, style=solid];
m0_111 -> m0_9  [key=0, style=bold, color=blue];
m0_10 -> m0_120  [key=0, style=solid];
m0_10 -> m0_121  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_10 -> m0_122  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_120 -> m0_121  [key=0, style=solid];
m0_120 -> m0_122  [key=0, style=solid];
m0_121 -> m0_123  [key=0, style=solid];
m0_121 -> m0_124  [key=2, style=dotted];
m0_121 -> m0_125  [key=2, style=dotted];
m0_122 -> m0_123  [key=0, style=solid];
m0_122 -> m0_126  [key=2, style=dotted];
m0_123 -> m0_10  [key=0, style=bold, color=blue];
m0_67 -> m0_77  [key=0, style=solid];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_79  [key=0, style=solid];
m0_77 -> m0_77  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_78 -> m0_80  [key=0, style=solid];
m0_78 -> m0_78  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_79 -> m0_80  [key=0, style=solid];
m0_80 -> m0_67  [key=0, style=bold, color=blue];
m0_96 -> m0_96  [key=3, color=darkorchid, style=bold, label="Field variable string ByteSymbol"];
m0_8 -> m0_11  [key=0, style=solid];
m0_8 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_25  [key=2, style=dotted];
m0_11 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label=cultureFormatter];
m0_11 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label=cultureFormatter];
m0_11 -> m0_124  [key=3, color=darkorchid, style=bold, label="Property variable string LargestWholeNumberSymbol"];
m0_11 -> m0_3  [key=3, color=darkorchid, style=bold, label="Property variable string LargestWholeNumberSymbol"];
m0_11 -> m0_96  [key=3, color=darkorchid, style=bold, label="Property variable string LargestWholeNumberSymbol"];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_28  [key=2, style=dotted];
m0_16 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label=timepart];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label=firstValueFound];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_31  [key=2, style=dotted];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_26  [key=2, style=dotted];
m0_13 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label=timeUnitsEnumTypes];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_15  [key=0, style=solid];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_27  [key=2, style=dotted];
m0_14 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label=timeParts];
m0_14 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label=timeParts];
m0_14 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label=timeParts];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_20  [key=0, style=solid];
m0_19 -> m0_15  [key=0, style=solid];
m0_19 -> m0_29  [key=2, style=dotted];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_23  [key=0, style=solid];
m0_20 -> m0_30  [key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid];
m0_18 -> m0_19  [key=0, style=solid];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_32  [key=2, style=dotted];
m0_24 -> m0_8  [key=0, style=bold, color=blue];
m0_124 -> m0_124  [key=3, color=darkorchid, style=bold, label="Field variable string TerabyteSymbol"];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_3 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m0_3 -> m0_3  [key=3, color=darkorchid, style=bold, label="Field variable string GigabyteSymbol"];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_8  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_9  [key=2, style=dotted];
m0_5 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label=timeParts];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_10  [key=2, style=dotted];
m0_7 -> m0_3  [key=0, style=bold, color=blue];
m0_26 -> m0_33  [key=0, style=solid];
m0_26 -> m0_8  [key=3, color=darkorchid, style=bold, label="Property variable double LargestWholeNumberValue"];
m0_26 -> m0_6  [key=3, color=darkorchid, style=bold, label="Property variable double LargestWholeNumberValue"];
m0_26 -> m0_5  [key=3, color=darkorchid, style=bold, label="Property variable double LargestWholeNumberValue"];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_36  [key=2, style=dotted];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_37  [key=2, style=dotted];
m0_35 -> m0_26  [key=0, style=bold, color=blue];
m0_44 -> m0_46  [key=0, style=solid];
m0_44 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_44 -> m0_50  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_44 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_44 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_44 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_44 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_44 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_49  [key=0, style=solid];
m0_46 -> m0_51  [key=0, style=solid];
m0_46 -> m0_53  [key=0, style=solid];
m0_46 -> m0_55  [key=0, style=solid];
m0_46 -> m0_57  [key=0, style=solid];
m0_46 -> m0_59  [key=0, style=solid];
m0_46 -> m0_61  [key=0, style=solid];
m0_46 -> m0_63  [key=0, style=solid];
m0_48 -> m0_64  [key=0, style=solid];
m0_48 -> m0_65  [key=2, style=dotted];
m0_48 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_48 -> m0_50  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_50 -> m0_64  [key=0, style=solid];
m0_50 -> m0_65  [key=2, style=dotted];
m0_50 -> m0_50  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_50 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_52 -> m0_64  [key=0, style=solid];
m0_52 -> m0_65  [key=2, style=dotted];
m0_52 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_52 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_54 -> m0_64  [key=0, style=solid];
m0_54 -> m0_65  [key=2, style=dotted];
m0_54 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_54 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_54 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_54 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_54 -> m0_62  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_56 -> m0_64  [key=0, style=solid];
m0_56 -> m0_66  [key=2, style=dotted];
m0_58 -> m0_64  [key=0, style=solid];
m0_58 -> m0_67  [key=2, style=dotted];
m0_60 -> m0_64  [key=0, style=solid];
m0_60 -> m0_68  [key=2, style=dotted];
m0_47 -> m0_48  [key=0, style=solid];
m0_49 -> m0_50  [key=0, style=solid];
m0_51 -> m0_52  [key=0, style=solid];
m0_53 -> m0_54  [key=0, style=solid];
m0_55 -> m0_56  [key=0, style=solid];
m0_57 -> m0_58  [key=0, style=solid];
m0_59 -> m0_60  [key=0, style=solid];
m0_61 -> m0_62  [key=0, style=solid];
m0_63 -> m0_64  [key=0, style=solid];
m0_62 -> m0_64  [key=0, style=solid];
m0_62 -> m0_69  [key=2, style=dotted];
m0_64 -> m0_44  [key=0, style=bold, color=blue];
m0_117 -> m0_118  [key=0, style=solid];
m0_102 -> m0_103  [key=0, style=solid];
m0_103 -> m0_104  [key=0, style=solid];
m0_104 -> m0_102  [key=0, style=bold, color=blue];
m0_114 -> m0_115  [key=0, style=solid];
m0_115 -> m0_116  [key=0, style=solid];
m0_116 -> m0_114  [key=0, style=bold, color=blue];
m0_118 -> m0_119  [key=0, style=solid];
m0_119 -> m0_117  [key=0, style=bold, color=blue];
m0_32 -> m0_97  [key=0, style=solid];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_27  [key=2, style=dotted];
m0_98 -> m0_32  [key=0, style=bold, color=blue];
m0_30 -> m0_99  [key=0, style=solid];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_101  [key=2, style=dotted];
m0_99 -> m0_102  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_100 -> m0_30  [key=0, style=bold, color=blue];
m0_68 -> m0_70  [key=0, style=solid];
m0_68 -> m0_71  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_68 -> m0_72  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_72  [key=0, style=solid];
m0_71 -> m0_74  [key=0, style=solid];
m0_71 -> m0_71  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_72  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_73 -> m0_74  [key=0, style=solid];
m0_74 -> m0_68  [key=0, style=bold, color=blue];
m0_28 -> m0_38  [key=0, style=solid];
m0_28 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.TimeUnit"];
m0_28 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.TimeUnit"];
m0_28 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.TimeUnit"];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_42  [key=0, style=solid];
m0_39 -> m0_40  [key=0, style=solid];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_44  [key=2, style=dotted];
m0_41 -> m0_43  [key=0, style=solid];
m0_41 -> m0_45  [key=2, style=dotted];
m0_42 -> m0_43  [key=0, style=solid];
m0_43 -> m0_28  [key=0, style=bold, color=blue];
m0_69 -> m0_75  [key=0, style=solid];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_75  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_76 -> m0_69  [key=0, style=bold, color=blue];
m0_65 -> m0_88  [key=0, style=solid];
m0_65 -> m0_89  [key=1, style=dashed, color=darkseagreen4, label=double];
m0_65 -> m0_90  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_65 -> m0_65  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<string, bool> has"];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_90  [key=0, style=solid];
m0_89 -> m0_92  [key=0, style=solid];
m0_90 -> m0_92  [key=0, style=solid];
m0_91 -> m0_92  [key=0, style=solid];
m0_92 -> m0_65  [key=0, style=bold, color=blue];
m1_45 -> m1_93  [key=0, style=solid, color=green];
m1_93 -> m1_94  [key=0, style=solid, color=green];
m1_93 -> m1_95  [key=2, style=dotted, color=green];
m1_93 -> m1_96  [key=2, style=dotted, color=green];
m1_94 -> m1_45  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid, color=green];
m1_1 -> m1_2  [key=0, style=solid, color=green];
m1_1 -> m1_3  [key=2, style=dotted, color=green];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m1_66 -> m1_82  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m1_66 -> m1_83  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m1_66 -> m1_81  [key=0, style=solid];
m1_82 -> m1_82  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m1_82 -> m1_87  [key=0, style=solid, color=green];
m1_82 -> m1_83  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m1_81 -> m1_82  [key=0, style=solid, color=green];
m1_81 -> m1_83  [key=0, style=solid, color=green];
m1_83 -> m1_83  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m1_83 -> m1_84  [key=0, style=solid, color=green];
m1_83 -> m1_86  [key=0, style=solid, color=green];
m1_84 -> m1_84  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m1_84 -> m1_85  [key=0, style=solid, color=green];
m1_84 -> m1_86  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m1_86 -> m1_86  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m1_86 -> m1_87  [key=0, style=solid, color=green];
m1_85 -> m1_87  [key=0, style=solid, color=green];
m1_87 -> m1_66  [key=0, style=bold, color=blue];
m1_9 -> m1_105  [key=0, style=solid, color=green];
m1_9 -> m1_106  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<string>"];
m1_9 -> m1_107  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<string>"];
m1_9 -> m1_108  [key=1, style=dashed, color=green, label=bool];
m1_105 -> m1_106  [key=0, style=solid, color=green];
m1_105 -> m1_107  [key=0, style=solid, color=green];
m1_106 -> m1_106  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<string>"];
m1_106 -> m1_107  [key=0, style=solid, color=green];
m1_106 -> m1_112  [key=2, style=dotted, color=green];
m1_106 -> m1_114  [key=1, style=dashed, color=green, label="lambda expression"];
m1_107 -> m1_107  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<string>"];
m1_107 -> m1_108  [key=0, style=solid, color=green];
m1_107 -> m1_113  [key=2, style=dotted, color=green];
m1_107 -> m1_109  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<string>"];
m1_107 -> m1_110  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<string>"];
m1_108 -> m1_109  [key=0, style=solid, color=green];
m1_108 -> m1_110  [key=0, style=solid, color=green];
m1_109 -> m1_109  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<string>"];
m1_109 -> m1_110  [key=0, style=solid, color=green];
m1_109 -> m1_112  [key=2, style=dotted, color=green];
m1_109 -> m1_117  [key=1, style=dashed, color=green, label="lambda expression"];
m1_110 -> m1_111  [key=0, style=solid, color=green];
m1_111 -> m1_9  [key=0, style=bold, color=blue];
m1_10 -> m1_120  [key=0, style=solid, color=green];
m1_10 -> m1_121  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m1_10 -> m1_122  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m1_120 -> m1_121  [key=0, style=solid, color=green];
m1_120 -> m1_122  [key=0, style=solid, color=green];
m1_121 -> m1_123  [key=0, style=solid];
m1_121 -> m1_124  [key=2, style=dotted];
m1_121 -> m1_125  [key=2, style=dotted];
m1_122 -> m1_123  [key=0, style=solid];
m1_122 -> m1_126  [key=2, style=dotted];
m1_123 -> m1_10  [key=0, style=bold, color=blue];
m1_67 -> m1_77  [key=0, style=solid];
m1_77 -> m1_77  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m1_77 -> m1_78  [key=0, style=solid];
m1_77 -> m1_79  [key=0, style=solid];
m1_78 -> m1_80  [key=0, style=solid];
m1_78 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m1_79 -> m1_80  [key=0, style=solid];
m1_80 -> m1_67  [key=0, style=bold, color=blue];
m1_8 -> m1_16  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m1_8 -> m1_11  [key=0, style=solid];
m1_16 -> m1_17  [key=0, style=solid, color=green];
m1_16 -> m1_28  [key=2, style=dotted, color=green];
m1_16 -> m1_19  [key=1, style=dashed, color=green, label=timepart];
m1_11 -> m1_16  [key=1, style=dashed, color=green, label=cultureFormatter];
m1_11 -> m1_21  [key=1, style=dashed, color=green, label=cultureFormatter];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_25  [key=2, style=dotted];
m1_15 -> m1_16  [key=0, style=solid, color=green];
m1_15 -> m1_20  [key=0, style=solid, color=green];
m1_17 -> m1_18  [key=0, style=solid, color=green];
m1_17 -> m1_15  [key=0, style=solid, color=green];
m1_19 -> m1_15  [key=0, style=solid, color=green];
m1_19 -> m1_29  [key=2, style=dotted, color=green];
m1_21 -> m1_22  [key=0, style=solid, color=green];
m1_21 -> m1_31  [key=2, style=dotted, color=green];
m1_20 -> m1_21  [key=0, style=solid, color=green];
m1_20 -> m1_23  [key=0, style=solid, color=green];
m1_20 -> m1_30  [key=2, style=dotted, color=green];
m1_22 -> m1_23  [key=0, style=solid, color=green];
m1_22 -> m1_32  [key=2, style=dotted, color=green];
m1_12 -> m1_17  [key=1, style=dashed, color=green, label=firstValueFound];
m1_12 -> m1_13  [key=0, style=solid];
m1_18 -> m1_19  [key=0, style=solid, color=green];
m1_13 -> m1_15  [key=1, style=dashed, color=green, label=timeUnitsEnumTypes];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_26  [key=2, style=dotted];
m1_14 -> m1_15  [key=0, style=solid, color=green];
m1_14 -> m1_19  [key=1, style=dashed, color=green, label=timeParts];
m1_14 -> m1_20  [key=1, style=dashed, color=green, label=timeParts];
m1_14 -> m1_23  [key=1, style=dashed, color=green, label=timeParts];
m1_14 -> m1_27  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid, color=green];
m1_24 -> m1_8  [key=0, style=bold, color=blue];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_3 -> m1_6  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m1_4 -> m1_8  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_9  [key=2, style=dotted];
m1_5 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label=timeParts];
m1_5 -> m1_6  [key=0, style=solid];
m1_6 -> m1_10  [key=2, style=dotted];
m1_6 -> m1_7  [key=0, style=solid];
m1_7 -> m1_3  [key=0, style=bold, color=blue];
m1_26 -> m1_33  [key=0, style=solid, color=green];
m1_33 -> m1_34  [key=0, style=solid, color=green];
m1_33 -> m1_36  [key=2, style=dotted, color=green];
m1_34 -> m1_35  [key=0, style=solid, color=green];
m1_34 -> m1_37  [key=2, style=dotted, color=green];
m1_35 -> m1_26  [key=0, style=bold, color=blue];
m1_44 -> m1_46  [key=0, style=solid, color=green];
m1_44 -> m1_48  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m1_44 -> m1_50  [key=1, style=dashed, color=green, label=bool];
m1_44 -> m1_52  [key=1, style=dashed, color=green, label=bool];
m1_44 -> m1_54  [key=1, style=dashed, color=green, label=bool];
m1_44 -> m1_56  [key=1, style=dashed, color=green, label=bool];
m1_44 -> m1_58  [key=1, style=dashed, color=green, label=bool];
m1_44 -> m1_60  [key=1, style=dashed, color=green, label=bool];
m1_46 -> m1_47  [key=0, style=solid, color=green];
m1_46 -> m1_49  [key=0, style=solid, color=green];
m1_46 -> m1_51  [key=0, style=solid, color=green];
m1_46 -> m1_53  [key=0, style=solid, color=green];
m1_46 -> m1_55  [key=0, style=solid, color=green];
m1_46 -> m1_57  [key=0, style=solid, color=green];
m1_46 -> m1_59  [key=0, style=solid, color=green];
m1_46 -> m1_61  [key=0, style=solid, color=green];
m1_46 -> m1_63  [key=0, style=solid, color=green];
m1_47 -> m1_48  [key=0, style=solid, color=green];
m1_49 -> m1_50  [key=0, style=solid, color=green];
m1_51 -> m1_52  [key=0, style=solid, color=green];
m1_53 -> m1_54  [key=0, style=solid, color=green];
m1_55 -> m1_56  [key=0, style=solid, color=green];
m1_57 -> m1_58  [key=0, style=solid, color=green];
m1_59 -> m1_60  [key=0, style=solid, color=green];
m1_61 -> m1_62  [key=0, style=solid, color=green];
m1_63 -> m1_64  [key=0, style=solid, color=green];
m1_48 -> m1_48  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m1_48 -> m1_64  [key=0, style=solid, color=green];
m1_48 -> m1_65  [key=2, style=dotted, color=green];
m1_48 -> m1_50  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m1_50 -> m1_50  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m1_50 -> m1_64  [key=0, style=solid, color=green];
m1_50 -> m1_65  [key=2, style=dotted, color=green];
m1_50 -> m1_52  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m1_52 -> m1_52  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m1_52 -> m1_64  [key=0, style=solid, color=green];
m1_52 -> m1_65  [key=2, style=dotted, color=green];
m1_52 -> m1_54  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m1_54 -> m1_54  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m1_54 -> m1_64  [key=0, style=solid, color=green];
m1_54 -> m1_65  [key=2, style=dotted, color=green];
m1_54 -> m1_56  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m1_54 -> m1_58  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m1_54 -> m1_60  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m1_54 -> m1_62  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m1_56 -> m1_64  [key=0, style=solid, color=green];
m1_56 -> m1_66  [key=2, style=dotted, color=green];
m1_58 -> m1_64  [key=0, style=solid, color=green];
m1_58 -> m1_67  [key=2, style=dotted, color=green];
m1_60 -> m1_64  [key=0, style=solid, color=green];
m1_60 -> m1_68  [key=2, style=dotted, color=green];
m1_62 -> m1_64  [key=0, style=solid, color=green];
m1_62 -> m1_69  [key=2, style=dotted, color=green];
m1_64 -> m1_44  [key=0, style=bold, color=blue];
m1_117 -> m1_118  [key=0, style=solid, color=green];
m1_102 -> m1_103  [key=0, style=solid, color=green];
m1_103 -> m1_104  [key=0, style=solid, color=green];
m1_104 -> m1_102  [key=0, style=bold, color=blue];
m1_114 -> m1_115  [key=0, style=solid, color=green];
m1_115 -> m1_116  [key=0, style=solid, color=green];
m1_116 -> m1_114  [key=0, style=bold, color=blue];
m1_118 -> m1_119  [key=0, style=solid, color=green];
m1_119 -> m1_117  [key=0, style=bold, color=blue];
m1_32 -> m1_97  [key=0, style=solid, color=green];
m1_97 -> m1_98  [key=0, style=solid, color=green];
m1_97 -> m1_27  [key=2, style=dotted, color=green];
m1_98 -> m1_32  [key=0, style=bold, color=blue];
m1_30 -> m1_99  [key=0, style=solid, color=green];
m1_99 -> m1_100  [key=0, style=solid, color=green];
m1_99 -> m1_101  [key=2, style=dotted, color=green];
m1_99 -> m1_102  [key=1, style=dashed, color=green, label="lambda expression"];
m1_100 -> m1_30  [key=0, style=bold, color=blue];
m1_68 -> m1_70  [key=0, style=solid, color=green];
m1_68 -> m1_71  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m1_68 -> m1_72  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m1_70 -> m1_71  [key=0, style=solid, color=green];
m1_70 -> m1_72  [key=0, style=solid, color=green];
m1_71 -> m1_71  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m1_71 -> m1_74  [key=0, style=solid, color=green];
m1_72 -> m1_72  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m1_72 -> m1_73  [key=0, style=solid, color=green];
m1_73 -> m1_74  [key=0, style=solid, color=green];
m1_74 -> m1_68  [key=0, style=bold, color=blue];
m1_28 -> m1_38  [key=0, style=solid, color=green];
m1_28 -> m1_39  [key=1, style=dashed, color=green, label="Humanizer.Localisation.TimeUnit"];
m1_28 -> m1_40  [key=1, style=dashed, color=green, label="Humanizer.Localisation.TimeUnit"];
m1_28 -> m1_41  [key=1, style=dashed, color=green, label="Humanizer.Localisation.TimeUnit"];
m1_38 -> m1_39  [key=0, style=solid, color=green];
m1_38 -> m1_42  [key=0, style=solid, color=green];
m1_39 -> m1_40  [key=0, style=solid, color=green];
m1_42 -> m1_43  [key=0, style=solid, color=green];
m1_40 -> m1_41  [key=0, style=solid, color=green];
m1_40 -> m1_44  [key=2, style=dotted, color=green];
m1_41 -> m1_43  [key=0, style=solid, color=green];
m1_41 -> m1_45  [key=2, style=dotted, color=green];
m1_43 -> m1_28  [key=0, style=bold, color=blue];
m1_69 -> m1_75  [key=0, style=solid, color=green];
m1_75 -> m1_75  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m1_75 -> m1_76  [key=0, style=solid, color=green];
m1_76 -> m1_69  [key=0, style=bold, color=blue];
m1_65 -> m1_88  [key=0, style=solid, color=green];
m1_65 -> m1_89  [key=1, style=dashed, color=green, label=double];
m1_65 -> m1_90  [key=1, style=dashed, color=green, label=int];
m1_88 -> m1_89  [key=0, style=solid, color=green];
m1_88 -> m1_90  [key=0, style=solid, color=green];
m1_89 -> m1_91  [key=0, style=solid, color=green];
m1_90 -> m1_91  [key=0, style=solid, color=green];
m1_92 -> m1_91  [key=0, style=solid, color=green];
m1_91 -> m1_65  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_1 -> m2_4  [key=2, style=dotted];
m2_1 -> m2_5  [key=2, style=dotted];
m2_2 -> m2_0  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_0 -> m6_4  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_0 -> m6_7  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_0 -> m6_12  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_0 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_0 -> m6_16  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_0 -> m6_17  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_0 -> m6_18  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_0 -> m6_19  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=0, style=solid];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_5  [key=0, style=solid];
m6_4 -> m6_26  [key=0, style=solid];
m6_4 -> m6_0  [key=2, style=dotted];
m6_4 -> m6_27  [key=2, style=dotted];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_9  [key=1, style=dashed, color=darkseagreen4, label=divided];
m6_7 -> m6_11  [key=1, style=dashed, color=darkseagreen4, label=divided];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_12  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_12 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_12 -> m6_16  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_12 -> m6_17  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_12 -> m6_18  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_12 -> m6_19  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_25  [key=0, style=solid];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_18  [key=0, style=solid];
m6_17 -> m6_25  [key=0, style=solid];
m6_17 -> m6_17  [key=1, style=dashed, color=darkseagreen4, label=word];
m6_18 -> m6_19  [key=0, style=solid];
m6_18 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label=tens];
m6_18 -> m6_24  [key=1, style=dashed, color=darkseagreen4, label=tens];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_21  [key=1, style=dashed, color=darkseagreen4, label=unit];
m6_2 -> m6_26  [key=0, style=solid];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_10  [key=1, style=dashed, color=darkseagreen4, label=word];
m6_5 -> m6_11  [key=1, style=dashed, color=darkseagreen4, label=word];
m6_5 -> m6_17  [key=1, style=dashed, color=darkseagreen4, label=word];
m6_5 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label=word];
m6_5 -> m6_24  [key=1, style=dashed, color=darkseagreen4, label=word];
m6_5 -> m6_25  [key=1, style=dashed, color=darkseagreen4, label=word];
m6_5 -> m6_0  [key=3, color=darkorchid, style=bold, label="Parameter variable string localeCode"];
m6_5 -> m6_1  [key=3, color=darkorchid, style=bold, label="Parameter variable string localeCode"];
m6_5 -> m6_2  [key=3, color=darkorchid, style=bold, label="Parameter variable string localeCode"];
m6_5 -> m6_3  [key=3, color=darkorchid, style=bold, label="Parameter variable string localeCode"];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_15  [key=0, style=solid];
m6_6 -> m6_9  [key=1, style=dashed, color=darkseagreen4, label=m];
m6_6 -> m6_10  [key=1, style=dashed, color=darkseagreen4, label=m];
m6_6 -> m6_11  [key=1, style=dashed, color=darkseagreen4, label=m];
m6_6 -> m6_12  [key=1, style=dashed, color=darkseagreen4, label=m];
m6_6 -> m6_14  [key=1, style=dashed, color=darkseagreen4, label=m];
m6_10 -> m6_12  [key=0, style=solid];
m6_10 -> m6_10  [key=1, style=dashed, color=darkseagreen4, label=word];
m6_10 -> m6_14  [key=1, style=dashed, color=darkseagreen4, label=word];
m6_10 -> m6_17  [key=1, style=dashed, color=darkseagreen4, label=word];
m6_10 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label=word];
m6_10 -> m6_24  [key=1, style=dashed, color=darkseagreen4, label=word];
m6_10 -> m6_25  [key=1, style=dashed, color=darkseagreen4, label=word];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_0  [key=2, style=dotted];
m6_11 -> m6_11  [key=1, style=dashed, color=darkseagreen4, label=word];
m6_11 -> m6_14  [key=1, style=dashed, color=darkseagreen4, label=word];
m6_11 -> m6_17  [key=1, style=dashed, color=darkseagreen4, label=word];
m6_11 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label=word];
m6_11 -> m6_24  [key=1, style=dashed, color=darkseagreen4, label=word];
m6_11 -> m6_25  [key=1, style=dashed, color=darkseagreen4, label=word];
m6_23 -> m6_25  [key=0, style=solid];
m6_23 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label=word];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_24  [key=1, style=dashed, color=darkseagreen4, label=word];
m6_25 -> m6_26  [key=0, style=solid];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_11  [key=0, style=solid];
m6_14 -> m6_6  [key=0, style=solid];
m6_14 -> m6_14  [key=1, style=dashed, color=darkseagreen4, label=word];
m6_14 -> m6_17  [key=1, style=dashed, color=darkseagreen4, label=word];
m6_14 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label=word];
m6_14 -> m6_24  [key=1, style=dashed, color=darkseagreen4, label=word];
m6_14 -> m6_25  [key=1, style=dashed, color=darkseagreen4, label=word];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_6  [key=0, style=solid];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_6  [key=0, style=solid];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_24  [key=0, style=solid];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label=units];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_28  [key=2, style=dotted];
m6_26 -> m6_0  [key=0, style=bold, color=blue];
m6_29 -> m6_30  [key=0, style=solid];
m6_30 -> m6_31  [key=0, style=solid];
m6_30 -> m6_0  [key=2, style=dotted];
m6_30 -> m6_41  [key=1, style=dashed, color=darkseagreen4, label=word];
m6_30 -> m6_32  [key=1, style=dashed, color=darkseagreen4, label=word];
m6_30 -> m6_33  [key=1, style=dashed, color=darkseagreen4, label=word];
m6_30 -> m6_34  [key=1, style=dashed, color=darkseagreen4, label=word];
m6_30 -> m6_35  [key=1, style=dashed, color=darkseagreen4, label=word];
m6_31 -> m6_32  [key=0, style=solid];
m6_31 -> m6_33  [key=0, style=solid];
m6_31 -> m6_37  [key=2, style=dotted];
m6_31 -> m6_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_32 -> m6_36  [key=0, style=solid];
m6_32 -> m6_38  [key=2, style=dotted];
m6_33 -> m6_34  [key=0, style=solid];
m6_33 -> m6_35  [key=0, style=solid];
m6_33 -> m6_39  [key=2, style=dotted];
m6_34 -> m6_36  [key=0, style=solid];
m6_35 -> m6_36  [key=0, style=solid];
m6_36 -> m6_29  [key=0, style=bold, color=blue];
m6_40 -> m6_41  [key=0, style=solid];
m6_41 -> m6_42  [key=0, style=solid];
m6_41 -> m6_28  [key=2, style=dotted];
m6_41 -> m6_41  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, string>"];
m6_42 -> m6_40  [key=0, style=bold, color=blue];
m6_43 -> m6_4  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter"];
m6_43 -> m6_11  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter"];
m6_43 -> m6_30  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter"];
m6_44 -> m6_41  [key=1, style=dashed, color=darkseagreen4, label=word];
m7_0 -> m7_1  [key=0, style=solid];
m7_0 -> m7_2  [key=3, color=darkorchid, style=bold, label="Parameter variable int number"];
m7_1 -> m7_0  [key=0, style=bold, color=blue];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_0  [key=3, color=darkorchid, style=bold, label="method methodReturn string Convert"];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_0  [key=2, style=dotted];
m7_4 -> m7_2  [key=0, style=bold, color=blue];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_7  [key=3, color=darkorchid, style=bold, label="Parameter variable int number"];
m7_6 -> m7_5  [key=0, style=bold, color=blue];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_5  [key=3, color=darkorchid, style=bold, label="method methodReturn string ConvertToOrdinal"];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_5  [key=2, style=dotted];
m7_9 -> m7_7  [key=0, style=bold, color=blue];
m7_10 -> m7_3  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.GenderlessNumberToWordsConverter"];
m7_10 -> m7_8  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.GenderlessNumberToWordsConverter"];
m8_118 -> m8_119  [key=0, style=solid];
m8_119 -> m8_120  [key=0, style=solid];
m8_119 -> m8_0  [key=2, style=dotted];
m8_119 -> m8_119  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_120 -> m8_118  [key=0, style=bold, color=blue];
m8_63 -> m8_64  [key=0, style=solid];
m8_63 -> m8_67  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_63 -> m8_68  [key=1, style=dashed, color=red, label=object];
m8_64 -> m8_65  [key=0, style=solid];
m8_64 -> m8_66  [key=0, style=solid, color=red];
m8_67 -> m8_68  [key=0, style=solid, color=red];
m8_67 -> m8_69  [key=0, style=solid];
m8_68 -> m8_70  [key=0, style=solid, color=red];
m8_65 -> m8_71  [key=0, style=solid];
m8_66 -> m8_67  [key=0, style=solid, color=red];
m8_66 -> m8_70  [key=1, style=dashed, color=red, label=other];
m8_70 -> m8_71  [key=0, style=solid];
m8_70 -> m8_72  [key=2, style=dotted];
m8_70 -> m8_208  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_69 -> m8_71  [key=0, style=solid];
m8_71 -> m8_63  [key=0, style=bold, color=blue];
m8_94 -> m8_95  [key=0, style=solid];
m8_95 -> m8_96  [key=0, style=solid];
m8_95 -> m8_9  [key=2, style=dotted];
m8_96 -> m8_94  [key=0, style=bold, color=blue];
m8_130 -> m8_131  [key=0, style=solid];
m8_131 -> m8_132  [key=0, style=solid];
m8_131 -> m8_131  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_132 -> m8_130  [key=0, style=bold, color=blue];
m8_9 -> m8_10  [key=0, style=solid];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_0  [key=2, style=dotted];
m8_11 -> m8_9  [key=0, style=bold, color=blue];
m8_136 -> m8_137  [key=0, style=solid];
m8_137 -> m8_138  [key=0, style=solid];
m8_137 -> m8_137  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_138 -> m8_136  [key=0, style=bold, color=blue];
m8_133 -> m8_134  [key=0, style=solid];
m8_134 -> m8_135  [key=0, style=solid];
m8_134 -> m8_134  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_135 -> m8_133  [key=0, style=bold, color=blue];
m8_27 -> m8_28  [key=0, style=solid];
m8_28 -> m8_29  [key=0, style=solid];
m8_28 -> m8_30  [key=2, style=dotted];
m8_28 -> m8_205  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_29 -> m8_27  [key=0, style=bold, color=blue];
m8_97 -> m8_98  [key=0, style=solid];
m8_98 -> m8_99  [key=0, style=solid];
m8_98 -> m8_12  [key=2, style=dotted];
m8_99 -> m8_97  [key=0, style=bold, color=blue];
m8_103 -> m8_104  [key=0, style=solid];
m8_104 -> m8_105  [key=0, style=solid];
m8_104 -> m8_18  [key=2, style=dotted];
m8_105 -> m8_103  [key=0, style=bold, color=blue];
m8_91 -> m8_92  [key=0, style=solid];
m8_92 -> m8_93  [key=0, style=solid];
m8_92 -> m8_0  [key=2, style=dotted];
m8_92 -> m8_213  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_92 -> m8_92  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_93 -> m8_91  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_2  [key=1, style=dashed, color=darkseagreen4, label=double];
m8_0 -> m8_3  [key=1, style=dashed, color=darkseagreen4, label=double];
m8_0 -> m8_4  [key=1, style=dashed, color=darkseagreen4, label=double];
m8_0 -> m8_5  [key=1, style=dashed, color=darkseagreen4, label=double];
m8_0 -> m8_6  [key=1, style=dashed, color=darkseagreen4, label=double];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_8  [key=2, style=dotted];
m8_2 -> m8_3  [key=0, style=solid];
m8_3 -> m8_4  [key=0, style=solid];
m8_4 -> m8_5  [key=0, style=solid];
m8_5 -> m8_6  [key=0, style=solid];
m8_6 -> m8_7  [key=0, style=solid];
m8_7 -> m8_0  [key=0, style=bold, color=blue];
m8_18 -> m8_19  [key=0, style=solid];
m8_19 -> m8_20  [key=0, style=solid];
m8_19 -> m8_0  [key=2, style=dotted];
m8_20 -> m8_18  [key=0, style=bold, color=blue];
m8_145 -> m8_146  [key=0, style=solid];
m8_145 -> m8_147  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_145 -> m8_149  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_146 -> m8_147  [key=0, style=solid];
m8_146 -> m8_148  [key=0, style=solid];
m8_146 -> m8_182  [key=2, style=dotted];
m8_147 -> m8_181  [key=0, style=solid];
m8_147 -> m8_183  [key=2, style=dotted];
m8_147 -> m8_184  [key=2, style=dotted];
m8_149 -> m8_150  [key=0, style=solid];
m8_149 -> m8_186  [key=2, style=dotted];
m8_149 -> m8_149  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_149 -> m8_154  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_149 -> m8_155  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_149 -> m8_161  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_149 -> m8_162  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_148 -> m8_149  [key=0, style=solid];
m8_148 -> m8_185  [key=2, style=dotted];
m8_150 -> m8_151  [key=0, style=solid];
m8_154 -> m8_155  [key=0, style=solid];
m8_154 -> m8_158  [key=0, style=solid];
m8_155 -> m8_156  [key=0, style=solid];
m8_155 -> m8_157  [key=0, style=solid];
m8_155 -> m8_188  [key=2, style=dotted];
m8_161 -> m8_162  [key=0, style=solid];
m8_161 -> m8_189  [key=2, style=dotted];
m8_161 -> m8_190  [key=2, style=dotted];
m8_161 -> m8_163  [key=1, style=dashed, color=darkseagreen4, label=numberPart];
m8_162 -> m8_163  [key=0, style=solid];
m8_162 -> m8_189  [key=2, style=dotted];
m8_162 -> m8_190  [key=2, style=dotted];
m8_162 -> m8_165  [key=1, style=dashed, color=darkseagreen4, label=sizePart];
m8_162 -> m8_167  [key=1, style=dashed, color=darkseagreen4, label=sizePart];
m8_151 -> m8_152  [key=0, style=solid];
m8_151 -> m8_158  [key=1, style=dashed, color=darkseagreen4, label=found];
m8_152 -> m8_153  [key=0, style=solid];
m8_152 -> m8_187  [key=2, style=dotted];
m8_152 -> m8_155  [key=1, style=dashed, color=darkseagreen4, label=decSep];
m8_158 -> m8_159  [key=0, style=solid];
m8_158 -> m8_160  [key=0, style=solid];
m8_153 -> m8_154  [key=0, style=solid];
m8_153 -> m8_155  [key=1, style=dashed, color=darkseagreen4, label=num];
m8_153 -> m8_157  [key=1, style=dashed, color=darkseagreen4, label=num];
m8_153 -> m8_160  [key=1, style=dashed, color=darkseagreen4, label=num];
m8_157 -> m8_154  [key=0, style=solid];
m8_157 -> m8_157  [key=1, style=dashed, color=darkseagreen4, label=num];
m8_157 -> m8_160  [key=1, style=dashed, color=darkseagreen4, label=num];
m8_160 -> m8_161  [key=0, style=solid];
m8_160 -> m8_162  [key=1, style=dashed, color=darkseagreen4, label=lastNumber];
m8_156 -> m8_158  [key=0, style=solid];
m8_159 -> m8_181  [key=0, style=solid];
m8_163 -> m8_164  [key=0, style=solid];
m8_163 -> m8_165  [key=0, style=solid];
m8_163 -> m8_191  [key=2, style=dotted];
m8_165 -> m8_166  [key=0, style=solid];
m8_165 -> m8_172  [key=0, style=solid];
m8_165 -> m8_174  [key=0, style=solid];
m8_165 -> m8_176  [key=0, style=solid];
m8_165 -> m8_178  [key=0, style=solid];
m8_165 -> m8_192  [key=2, style=dotted];
m8_167 -> m8_168  [key=0, style=solid];
m8_167 -> m8_171  [key=0, style=solid];
m8_164 -> m8_181  [key=0, style=solid];
m8_166 -> m8_167  [key=0, style=solid];
m8_172 -> m8_173  [key=0, style=solid];
m8_174 -> m8_175  [key=0, style=solid];
m8_176 -> m8_177  [key=0, style=solid];
m8_178 -> m8_179  [key=0, style=solid];
m8_168 -> m8_169  [key=0, style=solid];
m8_168 -> m8_170  [key=0, style=solid];
m8_171 -> m8_180  [key=0, style=solid];
m8_171 -> m8_193  [key=2, style=dotted];
m8_169 -> m8_181  [key=0, style=solid];
m8_170 -> m8_180  [key=0, style=solid];
m8_170 -> m8_9  [key=2, style=dotted];
m8_173 -> m8_180  [key=0, style=solid];
m8_173 -> m8_194  [key=2, style=dotted];
m8_175 -> m8_180  [key=0, style=solid];
m8_175 -> m8_195  [key=2, style=dotted];
m8_177 -> m8_180  [key=0, style=solid];
m8_177 -> m8_196  [key=2, style=dotted];
m8_179 -> m8_180  [key=0, style=solid];
m8_179 -> m8_197  [key=2, style=dotted];
m8_179 -> m8_181  [key=1, style=dashed, color=darkseagreen4, label="out Humanizer.Bytes.ByteSize"];
m8_180 -> m8_181  [key=0, style=solid];
m8_181 -> m8_145  [key=0, style=bold, color=blue];
m8_12 -> m8_13  [key=0, style=solid];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_0  [key=2, style=dotted];
m8_14 -> m8_12  [key=0, style=bold, color=blue];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_31 -> m8_34  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_31 -> m8_58  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_31 -> m8_35  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_31 -> m8_61  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_31 -> m8_44  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_31 -> m8_46  [key=1, style=dashed, color=red, label=string];
m8_31 -> m8_48  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_32 -> m8_33  [key=0, style=solid];
m8_32 -> m8_34  [key=0, style=solid];
m8_32 -> m8_52  [key=2, style=dotted];
m8_33 -> m8_34  [key=0, style=solid];
m8_33 -> m8_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_33 -> m8_58  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_33 -> m8_35  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_33 -> m8_61  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_33 -> m8_44  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_33 -> m8_46  [key=1, style=dashed, color=red, label=string];
m8_33 -> m8_48  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_58  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_34 -> m8_36  [key=1, style=dashed, color=darkseagreen4, label=has];
m8_34 -> m8_38  [key=1, style=dashed, color=darkseagreen4, label=has];
m8_34 -> m8_40  [key=1, style=dashed, color=darkseagreen4, label=has];
m8_34 -> m8_42  [key=1, style=dashed, color=red, label=has];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_61  [key=1, style=dashed, color=darkseagreen4, label=double];
m8_35 -> m8_37  [key=1, style=dashed, color=darkseagreen4, label=output];
m8_35 -> m8_39  [key=1, style=dashed, color=darkseagreen4, label=output];
m8_35 -> m8_41  [key=1, style=dashed, color=darkseagreen4, label=output];
m8_35 -> m8_43  [key=1, style=dashed, color=darkseagreen4, label=output];
m8_35 -> m8_45  [key=1, style=dashed, color=darkseagreen4, label=output];
m8_35 -> m8_47  [key=1, style=dashed, color=darkseagreen4, label=output];
m8_44 -> m8_45  [key=0, style=solid];
m8_44 -> m8_46  [key=0, style=solid, color=red];
m8_44 -> m8_54  [key=2, style=dotted];
m8_46 -> m8_47  [key=0, style=solid, color=red];
m8_46 -> m8_48  [key=0, style=solid, color=red];
m8_46 -> m8_54  [key=2, style=dotted, color=red];
m8_48 -> m8_49  [key=0, style=solid];
m8_48 -> m8_55  [key=2, style=dotted];
m8_48 -> m8_206  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_36 -> m8_37  [key=0, style=solid];
m8_36 -> m8_38  [key=0, style=solid];
m8_36 -> m8_53  [key=2, style=dotted];
m8_38 -> m8_39  [key=0, style=solid];
m8_38 -> m8_40  [key=0, style=solid];
m8_38 -> m8_53  [key=2, style=dotted];
m8_40 -> m8_41  [key=0, style=solid];
m8_40 -> m8_42  [key=0, style=solid, color=red];
m8_40 -> m8_53  [key=2, style=dotted];
m8_42 -> m8_43  [key=0, style=solid, color=red];
m8_42 -> m8_44  [key=0, style=solid, color=red];
m8_42 -> m8_53  [key=2, style=dotted, color=red];
m8_37 -> m8_51  [key=0, style=solid];
m8_37 -> m8_53  [key=2, style=dotted];
m8_37 -> m8_206  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_39 -> m8_51  [key=0, style=solid];
m8_39 -> m8_53  [key=2, style=dotted];
m8_39 -> m8_206  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_41 -> m8_51  [key=0, style=solid];
m8_41 -> m8_53  [key=2, style=dotted];
m8_41 -> m8_206  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_43 -> m8_51  [key=0, style=solid];
m8_43 -> m8_53  [key=2, style=dotted];
m8_43 -> m8_206  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_45 -> m8_51  [key=0, style=solid];
m8_45 -> m8_53  [key=2, style=dotted];
m8_45 -> m8_206  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_47 -> m8_51  [key=0, style=solid];
m8_47 -> m8_53  [key=2, style=dotted];
m8_47 -> m8_206  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_49 -> m8_50  [key=0, style=solid];
m8_49 -> m8_56  [key=2, style=dotted];
m8_49 -> m8_49  [key=1, style=dashed, color=darkseagreen4, label=formattedLargeWholeNumberValue];
m8_50 -> m8_51  [key=0, style=solid];
m8_50 -> m8_30  [key=2, style=dotted];
m8_50 -> m8_206  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_51 -> m8_31  [key=0, style=bold, color=blue];
m8_72 -> m8_73  [key=0, style=solid];
m8_73 -> m8_74  [key=0, style=solid];
m8_73 -> m8_209  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_73 -> m8_73  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_74 -> m8_72  [key=0, style=bold, color=blue];
m8_112 -> m8_113  [key=0, style=solid];
m8_113 -> m8_114  [key=0, style=solid];
m8_113 -> m8_0  [key=2, style=dotted];
m8_113 -> m8_214  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_113 -> m8_113  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_114 -> m8_112  [key=0, style=bold, color=blue];
m8_121 -> m8_122  [key=0, style=solid];
m8_122 -> m8_123  [key=0, style=solid];
m8_122 -> m8_0  [key=2, style=dotted];
m8_122 -> m8_122  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_123 -> m8_121  [key=0, style=bold, color=blue];
m8_106 -> m8_107  [key=0, style=solid];
m8_107 -> m8_108  [key=0, style=solid];
m8_107 -> m8_21  [key=2, style=dotted];
m8_108 -> m8_106  [key=0, style=bold, color=blue];
m8_198 -> m8_199  [key=0, style=solid];
m8_199 -> m8_200  [key=0, style=solid];
m8_199 -> m8_201  [key=0, style=solid];
m8_199 -> m8_191  [key=2, style=dotted];
m8_200 -> m8_202  [key=0, style=solid];
m8_201 -> m8_202  [key=0, style=solid];
m8_201 -> m8_203  [key=2, style=dotted];
m8_202 -> m8_198  [key=0, style=bold, color=blue];
m8_87 -> m8_88  [key=0, style=solid];
m8_88 -> m8_89  [key=0, style=solid];
m8_88 -> m8_90  [key=2, style=dotted];
m8_88 -> m8_212  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_88 -> m8_88  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_89 -> m8_87  [key=0, style=bold, color=blue];
m8_139 -> m8_140  [key=0, style=solid];
m8_140 -> m8_141  [key=0, style=solid];
m8_140 -> m8_140  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_141 -> m8_139  [key=0, style=bold, color=blue];
m8_79 -> m8_80  [key=0, style=solid];
m8_79 -> m8_82  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_79 -> m8_84  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_80 -> m8_81  [key=0, style=solid];
m8_80 -> m8_82  [key=0, style=solid];
m8_82 -> m8_83  [key=0, style=solid];
m8_82 -> m8_84  [key=0, style=solid];
m8_84 -> m8_85  [key=0, style=solid];
m8_84 -> m8_87  [key=2, style=dotted];
m8_84 -> m8_211  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_81 -> m8_85  [key=0, style=solid];
m8_83 -> m8_85  [key=0, style=solid];
m8_83 -> m8_86  [key=2, style=dotted];
m8_85 -> m8_79  [key=0, style=bold, color=blue];
m8_24 -> m8_25  [key=0, style=solid];
m8_25 -> m8_26  [key=0, style=solid];
m8_25 -> m8_0  [key=2, style=dotted];
m8_26 -> m8_24  [key=0, style=bold, color=blue];
m8_21 -> m8_22  [key=0, style=solid];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_0  [key=2, style=dotted];
m8_23 -> m8_21  [key=0, style=bold, color=blue];
m8_15 -> m8_16  [key=0, style=solid];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_0  [key=2, style=dotted];
m8_17 -> m8_15  [key=0, style=bold, color=blue];
m8_60 -> m8_61  [key=0, style=solid];
m8_58 -> m8_59  [key=0, style=solid];
m8_58 -> m8_54  [key=2, style=dotted];
m8_61 -> m8_62  [key=0, style=solid];
m8_61 -> m8_55  [key=2, style=dotted];
m8_57 -> m8_58  [key=0, style=solid];
m8_59 -> m8_57  [key=0, style=bold, color=blue];
m8_62 -> m8_60  [key=0, style=bold, color=blue];
m8_109 -> m8_110  [key=0, style=solid];
m8_110 -> m8_111  [key=0, style=solid];
m8_110 -> m8_24  [key=2, style=dotted];
m8_111 -> m8_109  [key=0, style=bold, color=blue];
m8_75 -> m8_76  [key=0, style=solid];
m8_76 -> m8_77  [key=0, style=solid];
m8_76 -> m8_78  [key=2, style=dotted];
m8_76 -> m8_210  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_77 -> m8_75  [key=0, style=bold, color=blue];
m8_124 -> m8_125  [key=0, style=solid];
m8_125 -> m8_126  [key=0, style=solid];
m8_125 -> m8_0  [key=2, style=dotted];
m8_125 -> m8_125  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_126 -> m8_124  [key=0, style=bold, color=blue];
m8_142 -> m8_143  [key=0, style=solid];
m8_143 -> m8_144  [key=0, style=solid];
m8_143 -> m8_143  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_144 -> m8_142  [key=0, style=bold, color=blue];
m8_127 -> m8_128  [key=0, style=solid];
m8_128 -> m8_129  [key=0, style=solid];
m8_128 -> m8_128  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_129 -> m8_127  [key=0, style=bold, color=blue];
m8_115 -> m8_116  [key=0, style=solid];
m8_116 -> m8_117  [key=0, style=solid];
m8_116 -> m8_0  [key=2, style=dotted];
m8_116 -> m8_116  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_117 -> m8_115  [key=0, style=bold, color=blue];
m8_100 -> m8_101  [key=0, style=solid];
m8_101 -> m8_102  [key=0, style=solid];
m8_101 -> m8_15  [key=2, style=dotted];
m8_102 -> m8_100  [key=0, style=bold, color=blue];
m8_204 -> m8_28  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_204 -> m8_37  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_204 -> m8_39  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_204 -> m8_41  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_204 -> m8_43  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_204 -> m8_45  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_204 -> m8_47  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_204 -> m8_48  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_204 -> m8_50  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_204 -> m8_70  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_204 -> m8_73  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_204 -> m8_76  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_204 -> m8_84  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_204 -> m8_88  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_204 -> m8_92  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_204 -> m8_95  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_204 -> m8_98  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_204 -> m8_101  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_204 -> m8_104  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_204 -> m8_107  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_204 -> m8_110  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_204 -> m8_113  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m8_205 -> m8_29  [key=1, style=dashed, color=darkseagreen4, label="ref Humanizer.Bytes.ByteSize"];
m8_206 -> m8_51  [key=1, style=dashed, color=darkseagreen4, label="ref Humanizer.Bytes.ByteSize"];
m8_207 -> m8_58  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_207 -> m8_61  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_208 -> m8_71  [key=1, style=dashed, color=darkseagreen4, label="ref Humanizer.Bytes.ByteSize"];
m8_209 -> m8_74  [key=1, style=dashed, color=darkseagreen4, label="ref Humanizer.Bytes.ByteSize"];
m8_210 -> m8_77  [key=1, style=dashed, color=darkseagreen4, label="ref Humanizer.Bytes.ByteSize"];
m8_211 -> m8_85  [key=1, style=dashed, color=darkseagreen4, label="ref Humanizer.Bytes.ByteSize"];
m8_212 -> m8_89  [key=1, style=dashed, color=darkseagreen4, label="ref Humanizer.Bytes.ByteSize"];
m8_213 -> m8_93  [key=1, style=dashed, color=darkseagreen4, label="ref Humanizer.Bytes.ByteSize"];
m8_214 -> m8_114  [key=1, style=dashed, color=darkseagreen4, label="ref Humanizer.Bytes.ByteSize"];
m10_8 -> m10_9  [key=0, style=solid, color=green];
m10_5 -> m10_6  [key=0, style=solid, color=green];
m10_5 -> m10_7  [key=2, style=dotted, color=green];
m10_4 -> m10_5  [key=0, style=solid, color=green];
m10_6 -> m10_4  [key=0, style=bold, color=blue];
m10_9 -> m10_10  [key=0, style=solid, color=green];
m10_9 -> m10_11  [key=2, style=dotted, color=green];
m10_10 -> m10_8  [key=0, style=bold, color=blue];
m12_0 -> m12_1  [key=0, style=solid];
m12_2 -> m12_3  [key=0, style=solid, color=green];
m12_2 -> m12_10  [key=2, style=dotted, color=green];
m12_1 -> m12_2  [key=0, style=solid, color=green];
m12_1 -> m12_3  [key=1, style=dashed, color=green, label=jan23rd];
m12_1 -> m12_4  [key=1, style=dashed, color=green, label=jan23rd];
m12_1 -> m12_5  [key=1, style=dashed, color=green, label=jan23rd];
m12_1 -> m12_6  [key=1, style=dashed, color=green, label=jan23rd];
m12_1 -> m12_7  [key=1, style=dashed, color=green, label=jan23rd];
m12_1 -> m12_8  [key=1, style=dashed, color=darkseagreen4, label=jan23rd];
m12_3 -> m12_4  [key=0, style=solid, color=green];
m12_3 -> m12_10  [key=2, style=dotted, color=green];
m12_4 -> m12_5  [key=0, style=solid, color=green];
m12_4 -> m12_10  [key=2, style=dotted, color=green];
m12_5 -> m12_6  [key=0, style=solid, color=green];
m12_5 -> m12_10  [key=2, style=dotted, color=green];
m12_6 -> m12_7  [key=0, style=solid, color=green];
m12_6 -> m12_10  [key=2, style=dotted, color=green];
m12_7 -> m12_8  [key=0, style=solid, color=green];
m12_7 -> m12_10  [key=2, style=dotted, color=green];
m12_8 -> m12_10  [key=2, style=dotted];
m12_8 -> m12_9  [key=0, style=solid];
m12_9 -> m12_0  [key=0, style=bold, color=blue];
m12_11 -> m12_12  [key=0, style=solid];
m12_13 -> m12_10  [key=2, style=dotted];
m12_13 -> m12_14  [key=0, style=solid];
m12_14 -> m12_10  [key=2, style=dotted];
m12_14 -> m12_15  [key=0, style=solid];
m12_15 -> m12_10  [key=2, style=dotted];
m12_15 -> m12_16  [key=0, style=solid];
m12_16 -> m12_10  [key=2, style=dotted];
m12_16 -> m12_17  [key=0, style=solid];
m12_17 -> m12_10  [key=2, style=dotted];
m12_17 -> m12_18  [key=0, style=solid];
m12_18 -> m12_10  [key=2, style=dotted];
m12_18 -> m12_19  [key=0, style=solid];
m12_19 -> m12_10  [key=2, style=dotted];
m12_19 -> m12_20  [key=0, style=solid];
m12_12 -> m12_13  [key=0, style=solid];
m12_12 -> m12_14  [key=1, style=dashed, color=darkseagreen4, label=dec4th];
m12_12 -> m12_15  [key=1, style=dashed, color=darkseagreen4, label=dec4th];
m12_12 -> m12_16  [key=1, style=dashed, color=darkseagreen4, label=dec4th];
m12_12 -> m12_17  [key=1, style=dashed, color=darkseagreen4, label=dec4th];
m12_12 -> m12_18  [key=1, style=dashed, color=darkseagreen4, label=dec4th];
m12_12 -> m12_19  [key=1, style=dashed, color=darkseagreen4, label=dec4th];
m12_20 -> m12_11  [key=0, style=bold, color=blue];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_2  [key=0, style=solid];
m13_1 -> m13_3  [key=2, style=dotted];
m13_2 -> m13_0  [key=0, style=bold, color=blue];
m14_5 -> m14_6  [key=0, style=solid];
m14_6 -> m14_7  [key=0, style=solid];
m14_6 -> m14_3  [key=2, style=dotted];
m14_6 -> m14_4  [key=2, style=dotted];
m14_7 -> m14_5  [key=0, style=bold, color=blue];
m14_15 -> m14_16  [key=0, style=solid];
m14_16 -> m14_17  [key=0, style=solid];
m14_16 -> m14_20  [key=1, style=dashed, color=darkseagreen4, label=format];
m14_16 -> m14_16  [key=3, color=darkorchid, style=bold, label="Local variable string format"];
m14_17 -> m14_18  [key=0, style=solid];
m14_17 -> m14_11  [key=2, style=dotted];
m14_17 -> m14_19  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_18 -> m14_15  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_3  [key=2, style=dotted];
m14_1 -> m14_4  [key=2, style=dotted];
m14_2 -> m14_0  [key=0, style=bold, color=blue];
m14_8 -> m14_9  [key=0, style=solid];
m14_9 -> m14_10  [key=0, style=solid];
m14_9 -> m14_11  [key=2, style=dotted];
m14_9 -> m14_12  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_10 -> m14_8  [key=0, style=bold, color=blue];
m14_19 -> m14_20  [key=0, style=solid];
m14_12 -> m14_13  [key=0, style=solid];
m14_13 -> m14_14  [key=0, style=solid];
m14_13 -> m14_3  [key=2, style=dotted];
m14_14 -> m14_12  [key=0, style=bold, color=blue];
m14_20 -> m14_21  [key=0, style=solid];
m14_20 -> m14_3  [key=2, style=dotted];
m14_21 -> m14_19  [key=0, style=bold, color=blue];
m14_22 -> m14_23  [key=0, style=solid, color=green];
m14_22 -> m14_20  [key=1, style=dashed, color=darkseagreen4, label=format];
m14_23 -> m14_24  [key=0, style=solid, color=green];
m14_23 -> m14_25  [key=2, style=dotted, color=green];
m14_23 -> m14_26  [key=2, style=dotted, color=green];
m14_23 -> m14_4  [key=2, style=dotted, color=green];
m14_24 -> m14_22  [key=0, style=bold, color=blue];
m16_3 -> m16_8  [key=3, color=green, style=bold, label="method methodReturn string ToQuantity"];
m16_3 -> m16_0  [key=3, color=darkorchid, style=bold, label="Parameter variable Humanizer.ShowQuantityAs showQuantityAs"];
m16_3 -> m16_4  [key=3, color=darkorchid, style=bold, label="Parameter variable System.IFormatProvider formatProvider"];
m16_3 -> m16_5  [key=3, color=darkorchid, style=bold, label="Parameter variable Humanizer.ShowQuantityAs showQuantityAs"];
m16_3 -> m16_1  [key=3, color=darkorchid, style=bold, label="Parameter variable System.IFormatProvider formatProvider"];
m16_0 -> m16_3  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToQuantity"];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_3  [key=2, style=dotted];
m16_1 -> m16_2  [key=0, style=solid];
m16_2 -> m16_0  [key=0, style=bold, color=blue];
m16_4 -> m16_3  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToQuantity"];
m16_4 -> m16_5  [key=0, style=solid];
m16_5 -> m16_3  [key=2, style=dotted];
m16_5 -> m16_6  [key=0, style=solid];
m16_6 -> m16_4  [key=0, style=bold, color=blue];
m16_7 -> m16_8  [key=0, style=solid, color=green];
m16_7 -> m16_9  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.ShowQuantityAs"];
m16_7 -> m16_11  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.ShowQuantityAs"];
m16_7 -> m16_12  [key=1, style=dashed, color=darkseagreen4, label=int];
m16_7 -> m16_13  [key=1, style=dashed, color=darkseagreen4, label=int];
m16_8 -> m16_9  [key=0, style=solid, color=green];
m16_8 -> m16_15  [key=2, style=dotted, color=green];
m16_8 -> m16_16  [key=2, style=dotted, color=green];
m16_8 -> m16_10  [key=1, style=dashed, color=green, label=transformedInput];
m16_8 -> m16_12  [key=1, style=dashed, color=green, label=transformedInput];
m16_8 -> m16_13  [key=1, style=dashed, color=green, label=transformedInput];
m16_9 -> m16_10  [key=0, style=solid];
m16_9 -> m16_11  [key=0, style=solid];
m16_10 -> m16_14  [key=0, style=solid];
m16_12 -> m16_14  [key=0, style=solid];
m16_12 -> m16_17  [key=2, style=dotted];
m16_12 -> m16_18  [key=2, style=dotted];
m16_13 -> m16_14  [key=0, style=solid];
m16_13 -> m16_19  [key=2, style=dotted];
m16_13 -> m16_20  [key=2, style=dotted];
m16_11 -> m16_12  [key=0, style=solid];
m16_11 -> m16_13  [key=0, style=solid];
m16_14 -> m16_7  [key=0, style=bold, color=blue];
}
