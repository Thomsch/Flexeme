digraph  {
n0 [cluster="Humanizer.Tests.Localisation.sr_Latn.NumberToWordsTest.NumberToWordsTest()", label="Entry Humanizer.Tests.Localisation.sr_Latn.NumberToWordsTest.NumberToWordsTest()", span="10-10"];
n1 [cluster="Humanizer.Tests.Localisation.sr_Latn.NumberToWordsTest.NumberToWordsTest()", label="Exit Humanizer.Tests.Localisation.sr_Latn.NumberToWordsTest.NumberToWordsTest()", span="10-10"];
n2 [cluster="Humanizer.Tests.Localisation.sr_Latn.NumberToWordsTest.ToWords(int, string)", label="Entry Humanizer.Tests.Localisation.sr_Latn.NumberToWordsTest.ToWords(int, string)", span="47-47"];
n3 [cluster="Humanizer.Tests.Localisation.sr_Latn.NumberToWordsTest.ToWords(int, string)", label="Assert.Equal(expected, number.ToWords())", span="49-49"];
n4 [cluster="Humanizer.Tests.Localisation.sr_Latn.NumberToWordsTest.ToWords(int, string)", label="Exit Humanizer.Tests.Localisation.sr_Latn.NumberToWordsTest.ToWords(int, string)", span="47-47"];
n5 [cluster="int.ToWords(System.Globalization.CultureInfo)", label="Entry int.ToWords(System.Globalization.CultureInfo)", span="16-16"];
n6 [cluster="Unk.Equal", label="Entry Unk.Equal", span=""];
d2 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", color=green, community=0, label="0: Thread.CurrentThread.CurrentUICulture = culture", span="13-13"];
d0 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", label="Entry Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", span="10-10"];
d1 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", label="_culture = Thread.CurrentThread.CurrentUICulture", span="12-12"];
d3 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", label="Exit Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", span="10-10"];
d9 [label="Humanizer.Tests.AmbientCulture", span=""];
d7 [cluster="Humanizer.Tests.AmbientCulture.Dispose()", label="Thread.CurrentThread.CurrentUICulture = _culture", span="23-23"];
d6 [cluster="Humanizer.Tests.AmbientCulture.Dispose()", label="Entry Humanizer.Tests.AmbientCulture.Dispose()", span="21-21"];
d8 [cluster="Humanizer.Tests.AmbientCulture.Dispose()", label="Exit Humanizer.Tests.AmbientCulture.Dispose()", span="21-21"];
m3_30 [cluster="System.Collections.Generic.List<T>.List()", file="EnumHumanizeExtensions.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m3_55 [cluster="string.Replace(char, char)", file="EnumHumanizeExtensions.cs", label="Entry string.Replace(char, char)", span="0-0"];
m3_56 [cluster="string.EndsWith(string)", file="EnumHumanizeExtensions.cs", label="Entry string.EndsWith(string)", span="0-0"];
m3_32 [cluster="System.Collections.Generic.List<T>.ToArray()", file="EnumHumanizeExtensions.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m3_66 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="EnumHumanizeExtensions.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m3_31 [cluster="System.Collections.Generic.List<T>.Add(T)", file="EnumHumanizeExtensions.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m3_0 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.Convert(int)", file="EnumHumanizeExtensions.cs", label="Entry Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.Convert(int)", span="22-22"];
m3_1 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.Convert(int)", file="EnumHumanizeExtensions.cs", label="number == 0", span="24-24"];
m3_3 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.Convert(int)", file="EnumHumanizeExtensions.cs", label="number < 0", span="27-27"];
m3_4 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.Convert(int)", file="EnumHumanizeExtensions.cs", label="return string.Format(''minus {0}'', Convert(-number));", span="28-28"];
m3_6 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.Convert(int)", file="EnumHumanizeExtensions.cs", label="(number / 1000000000) > 0", span="32-32"];
m3_7 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.Convert(int)", file="EnumHumanizeExtensions.cs", label="parts.Add(string.Format(''{0} billion'', Convert(number / 1000000000)))", span="34-34"];
m3_8 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.Convert(int)", file="EnumHumanizeExtensions.cs", label="number %= 1000000000", span="35-35"];
m3_9 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.Convert(int)", file="EnumHumanizeExtensions.cs", label="(number / 1000000) > 0", span="38-38"];
m3_10 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.Convert(int)", color=red, community=0, file="EnumHumanizeExtensions.cs", label="0: parts.Add(string.Format(''{0} million'', Convert(number / 1000000)))", span="40-40"];
m3_11 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.Convert(int)", color=red, community=0, file="EnumHumanizeExtensions.cs", label="0: number %= 1000000", span="41-41"];
m3_12 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.Convert(int)", color=red, community=0, file="EnumHumanizeExtensions.cs", label="0: (number / 1000) > 0", span="44-44"];
m3_13 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.Convert(int)", color=red, community=0, file="EnumHumanizeExtensions.cs", label="0: parts.Add(string.Format(''{0} thousand'', Convert(number / 1000)))", span="46-46"];
m3_14 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.Convert(int)", color=red, community=0, file="EnumHumanizeExtensions.cs", label="0: number %= 1000", span="47-47"];
m3_15 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.Convert(int)", file="EnumHumanizeExtensions.cs", label="(number / 100) > 0", span="50-50"];
m3_16 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.Convert(int)", file="EnumHumanizeExtensions.cs", label="parts.Add(string.Format(''{0} hundred'', Convert(number / 100)))", span="52-52"];
m3_17 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.Convert(int)", file="EnumHumanizeExtensions.cs", label="number %= 100", span="53-53"];
m3_18 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.Convert(int)", file="EnumHumanizeExtensions.cs", label="number > 0", span="56-56"];
m3_21 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.Convert(int)", file="EnumHumanizeExtensions.cs", label="number < 20", span="61-61"];
m3_22 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.Convert(int)", file="EnumHumanizeExtensions.cs", label="parts.Add(UnitsMap[number])", span="62-62"];
m3_23 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.Convert(int)", file="EnumHumanizeExtensions.cs", label="var lastPart = TensMap[number / 10]", span="65-65"];
m3_24 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.Convert(int)", file="EnumHumanizeExtensions.cs", label="(number % 10) > 0", span="66-66"];
m3_25 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.Convert(int)", file="EnumHumanizeExtensions.cs", label="lastPart += string.Format(''-{0}'', UnitsMap[number % 10])", span="67-67"];
m3_2 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.Convert(int)", file="EnumHumanizeExtensions.cs", label="return ''zero'';", span="25-25"];
m3_5 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.Convert(int)", file="EnumHumanizeExtensions.cs", label="var parts = new List<string>()", span="30-30"];
m3_19 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.Convert(int)", file="EnumHumanizeExtensions.cs", label="parts.Count != 0", span="58-58"];
m3_20 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.Convert(int)", file="EnumHumanizeExtensions.cs", label="parts.Add(''and'')", span="59-59"];
m3_26 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.Convert(int)", file="EnumHumanizeExtensions.cs", label="parts.Add(lastPart)", span="69-69"];
m3_27 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.Convert(int)", file="EnumHumanizeExtensions.cs", label="return string.Join('' '', parts.ToArray());", span="73-73"];
m3_28 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.Convert(int)", file="EnumHumanizeExtensions.cs", label="Exit Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.Convert(int)", span="22-22"];
m3_33 [cluster="string.Join(string, params string[])", file="EnumHumanizeExtensions.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m3_34 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.ConvertToOrdinal(int)", file="EnumHumanizeExtensions.cs", label="Entry Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.ConvertToOrdinal(int)", span="76-76"];
m3_35 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.ConvertToOrdinal(int)", file="EnumHumanizeExtensions.cs", label="string towords", span="78-78"];
m3_36 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.ConvertToOrdinal(int)", file="EnumHumanizeExtensions.cs", label="ExceptionNumbersToWords(number, out towords)", span="80-80"];
m3_38 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.ConvertToOrdinal(int)", file="EnumHumanizeExtensions.cs", label="number > 20", span="84-84"];
m3_40 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.ConvertToOrdinal(int)", file="EnumHumanizeExtensions.cs", label="ExceptionNumbersToWords(number%10, out exceptionPart)", span="87-87"];
m3_41 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.ConvertToOrdinal(int)", file="EnumHumanizeExtensions.cs", label="var normalPart = number - number%10", span="89-89"];
m3_44 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.ConvertToOrdinal(int)", file="EnumHumanizeExtensions.cs", label="return NormalNumberToWords(number);", span="95-95"];
m3_37 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.ConvertToOrdinal(int)", file="EnumHumanizeExtensions.cs", label="return towords;", span="81-81"];
m3_39 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.ConvertToOrdinal(int)", file="EnumHumanizeExtensions.cs", label="string exceptionPart", span="86-86"];
m3_43 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.ConvertToOrdinal(int)", file="EnumHumanizeExtensions.cs", label="return towords + '' '' + exceptionPart;", span="91-91"];
m3_42 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.ConvertToOrdinal(int)", file="EnumHumanizeExtensions.cs", label="towords = RemoveOnePrefix(Convert(normalPart))", span="90-90"];
m3_45 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.ConvertToOrdinal(int)", file="EnumHumanizeExtensions.cs", label="Exit Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.ConvertToOrdinal(int)", span="76-76"];
m3_47 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.RemoveOnePrefix(string)", file="EnumHumanizeExtensions.cs", label="Entry Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.RemoveOnePrefix(string)", span="110-110"];
m3_58 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.RemoveOnePrefix(string)", file="EnumHumanizeExtensions.cs", label="towords.IndexOf(''one'', StringComparison.Ordinal) == 0", span="113-113"];
m3_59 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.RemoveOnePrefix(string)", file="EnumHumanizeExtensions.cs", label="towords = towords.Remove(0, 4)", span="114-114"];
m3_60 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.RemoveOnePrefix(string)", file="EnumHumanizeExtensions.cs", label="return towords;", span="116-116"];
m3_61 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.RemoveOnePrefix(string)", file="EnumHumanizeExtensions.cs", label="Exit Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.RemoveOnePrefix(string)", span="110-110"];
m3_48 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.NormalNumberToWords(int)", file="EnumHumanizeExtensions.cs", label="Entry Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.NormalNumberToWords(int)", span="98-98"];
m3_49 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.NormalNumberToWords(int)", file="EnumHumanizeExtensions.cs", label="string towords = Convert(number).Replace('-', ' ')", span="100-100"];
m3_50 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.NormalNumberToWords(int)", file="EnumHumanizeExtensions.cs", label="towords = RemoveOnePrefix(towords)", span="102-102"];
m3_51 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.NormalNumberToWords(int)", file="EnumHumanizeExtensions.cs", label="towords.EndsWith(''y'')", span="104-104"];
m3_52 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.NormalNumberToWords(int)", file="EnumHumanizeExtensions.cs", label="towords = towords.TrimEnd('y') + ''ie''", span="105-105"];
m3_53 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.NormalNumberToWords(int)", file="EnumHumanizeExtensions.cs", label="return towords + ''th'';", span="107-107"];
m3_54 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.NormalNumberToWords(int)", file="EnumHumanizeExtensions.cs", label="Exit Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.NormalNumberToWords(int)", span="98-98"];
m3_63 [cluster="string.Remove(int, int)", file="EnumHumanizeExtensions.cs", label="Entry string.Remove(int, int)", span="0-0"];
m3_46 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.ExceptionNumbersToWords(int, out string)", file="EnumHumanizeExtensions.cs", label="Entry Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.ExceptionNumbersToWords(int, out string)", span="119-119"];
m3_64 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.ExceptionNumbersToWords(int, out string)", file="EnumHumanizeExtensions.cs", label="return OrdinalExceptions.TryGetValue(number, out words);", span="121-121"];
m3_65 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.ExceptionNumbersToWords(int, out string)", file="EnumHumanizeExtensions.cs", label="Exit Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.ExceptionNumbersToWords(int, out string)", span="119-119"];
m3_57 [cluster="string.TrimEnd(params char[])", file="EnumHumanizeExtensions.cs", label="Entry string.TrimEnd(params char[])", span="0-0"];
m3_29 [cluster="string.Format(string, object)", file="EnumHumanizeExtensions.cs", label="Entry string.Format(string, object)", span="0-0"];
m3_62 [cluster="string.IndexOf(string, System.StringComparison)", file="EnumHumanizeExtensions.cs", label="Entry string.IndexOf(string, System.StringComparison)", span="0-0"];
m3_67 [file="EnumHumanizeExtensions.cs", label="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter", span=""];
m4_15 [cluster="Humanizer.Localisation.Formatters.CzechSlovakPolishFormatter.CzechSlovakPolishFormatter()", file="EnumHumanizeTests.cs", label="Entry Humanizer.Localisation.Formatters.CzechSlovakPolishFormatter.CzechSlovakPolishFormatter()", span="2-2"];
m4_16 [cluster="lambda expression", file="EnumHumanizeTests.cs", label="Entry lambda expression", span="20-20"];
m4_17 [cluster="lambda expression", file="EnumHumanizeTests.cs", label="new CzechSlovakPolishFormatter()", span="20-20"];
m4_7 [cluster="Humanizer.Tests.EnumHumanizeTests.CanHumanizeMembersWithoutDescriptionAttribute()", file="EnumHumanizeTests.cs", label="Exit Humanizer.Tests.EnumHumanizeTests.CanHumanizeMembersWithoutDescriptionAttribute()", span="13-13"];
m4_3 [cluster="System.Enum.Humanize()", file="EnumHumanizeTests.cs", label="Entry System.Enum.Humanize()", span="15-15"];
m4_18 [cluster="lambda expression", file="EnumHumanizeTests.cs", label="Exit lambda expression", span="20-20"];
m4_8 [cluster="lambda expression", file="EnumHumanizeTests.cs", label="Entry lambda expression", span="18-18"];
m4_9 [cluster="lambda expression", color=green, community=1, file="EnumHumanizeTests.cs", label="0: new ArabicFormatter()", span="18-18"];
m4_10 [cluster="lambda expression", file="EnumHumanizeTests.cs", label="Exit lambda expression", span="18-18"];
m4_12 [cluster="lambda expression", file="EnumHumanizeTests.cs", label="Entry lambda expression", span="19-19"];
m4_13 [cluster="lambda expression", file="EnumHumanizeTests.cs", label="new CzechSlovakPolishFormatter()", span="19-19"];
m4_14 [cluster="lambda expression", file="EnumHumanizeTests.cs", label="Exit lambda expression", span="19-19"];
m4_11 [cluster="System.Enum.Humanize(Humanizer.LetterCasing)", file="EnumHumanizeTests.cs", label="Entry System.Enum.Humanize(Humanizer.LetterCasing)", span="59-59"];
m4_0 [cluster="lambda expression", file="EnumHumanizeTests.cs", label="Entry lambda expression", span="16-16"];
m4_1 [cluster="lambda expression", color=green, community=0, file="EnumHumanizeTests.cs", label="0: new RomanianFormatter()", span="16-16"];
m4_2 [cluster="lambda expression", file="EnumHumanizeTests.cs", label="Exit lambda expression", span="16-16"];
m4_19 [cluster="lambda expression", file="EnumHumanizeTests.cs", label="Entry lambda expression", span="21-21"];
m4_4 [cluster="lambda expression", file="EnumHumanizeTests.cs", label="Entry lambda expression", span="17-17"];
m4_5 [cluster="Humanizer.Tests.EnumHumanizeTests.CanHumanizeMembersWithoutDescriptionAttribute()", file="EnumHumanizeTests.cs", label="Entry Humanizer.Tests.EnumHumanizeTests.CanHumanizeMembersWithoutDescriptionAttribute()", span="13-13"];
m4_6 [cluster="Humanizer.Tests.EnumHumanizeTests.CanHumanizeMembersWithoutDescriptionAttribute()", color=green, community=0, file="EnumHumanizeTests.cs", label="0: Assert.Equal(EnumTestsResources.MemberWithoutDescriptionAttributeSentence, EnumUnderTest.MemberWithoutDescriptionAttribute.Humanize())", span="15-15"];
m4_20 [cluster="lambda expression", file="EnumHumanizeTests.cs", label="new CzechSlovakPolishFormatter()", span="21-21"];
m4_21 [cluster="lambda expression", file="EnumHumanizeTests.cs", label="Exit lambda expression", span="21-21"];
m11_51 [cluster="Humanizer.Bytes.ByteSize.FromBits(long)", file="ParsingTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromBits(long)", span="93-93"];
m11_26 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParseWorksWithLotsOfSpaces()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.TryParseWorksWithLotsOfSpaces()", span="45-45"];
m11_27 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParseWorksWithLotsOfSpaces()", file="ParsingTests.cs", label="Assert.Equal(ByteSize.FromKilobytes(100), ByteSize.Parse('' 100 KB ''))", span="47-47"];
m11_28 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParseWorksWithLotsOfSpaces()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.TryParseWorksWithLotsOfSpaces()", span="45-45"];
m11_12 [cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ParsingTests.cs", label="Entry Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", span="280-280"];
m11_17 [cluster="Humanizer.Bytes.ByteSize.FromMegabytes(double)", file="ParsingTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromMegabytes(double)", span="108-108"];
m11_55 [cluster="Humanizer.Bytes.ByteSize.FromBytes(double)", file="ParsingTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromBytes(double)", span="98-98"];
m11_32 [cluster="Unk.>", file="ParsingTests.cs", label="Entry Unk.>", span=""];
m11_18 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParseReturnsFalseOnBadValue(string)", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.TryParseReturnsFalseOnBadValue(string)", span="35-35"];
m11_19 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParseReturnsFalseOnBadValue(string)", file="ParsingTests.cs", label="ByteSize resultByteSize", span="37-37"];
m11_20 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParseReturnsFalseOnBadValue(string)", file="ParsingTests.cs", label="var resultBool = ByteSize.TryParse(input, out resultByteSize)", span="38-38"];
m11_21 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParseReturnsFalseOnBadValue(string)", file="ParsingTests.cs", label="Assert.False(resultBool)", span="40-40"];
m11_22 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParseReturnsFalseOnBadValue(string)", file="ParsingTests.cs", label="Assert.Equal(new ByteSize(), resultByteSize)", span="41-41"];
m11_23 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParseReturnsFalseOnBadValue(string)", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.TryParseReturnsFalseOnBadValue(string)", span="35-35"];
m11_24 [cluster="Unk.False", file="ParsingTests.cs", label="Entry Unk.False", span=""];
m11_48 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseBits()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseBits()", span="69-69"];
m11_49 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseBits()", file="ParsingTests.cs", label="Assert.Equal(ByteSize.FromBits(1), ByteSize.Parse(''1b''))", span="71-71"];
m11_50 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseBits()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseBits()", span="69-69"];
m11_42 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnNull()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnNull()", span="63-63"];
m11_43 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnNull()", file="ParsingTests.cs", label="Assert.Throws<ArgumentNullException>(() => { ByteSize.Parse(null); })", span="65-65"];
m11_44 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnNull()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnNull()", span="63-63"];
m11_4 [cluster="Humanizer.Bytes.ByteSize.Parse(string)", file="ParsingTests.cs", label="Entry Humanizer.Bytes.ByteSize.Parse(string)", span="354-354"];
m11_29 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnPartialBits()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnPartialBits()", span="51-51"];
m11_30 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnPartialBits()", file="ParsingTests.cs", label="Assert.Throws<FormatException>(() => { ByteSize.Parse(''10.5b''); })", span="53-53"];
m11_31 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnPartialBits()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnPartialBits()", span="51-51"];
m11_66 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseTerabytes()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseTerabytes()", span="99-99"];
m11_67 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseTerabytes()", file="ParsingTests.cs", label="Assert.Equal(ByteSize.FromTerabytes(100), ByteSize.Parse(''100TB''))", span="101-101"];
m11_68 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseTerabytes()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseTerabytes()", span="99-99"];
m11_69 [cluster="Humanizer.Bytes.ByteSize.FromTerabytes(double)", file="ParsingTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromTerabytes(double)", span="118-118"];
m11_36 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnInvalid()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnInvalid()", span="57-57"];
m11_37 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnInvalid()", file="ParsingTests.cs", label="Assert.Throws<FormatException>(() => { ByteSize.Parse(''Unexpected Value''); })", span="59-59"];
m11_38 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnInvalid()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseThrowsOnInvalid()", span="57-57"];
m11_59 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseMegabytes()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseMegabytes()", span="87-87"];
m11_60 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseMegabytes()", file="ParsingTests.cs", label="Assert.Equal(ByteSize.FromMegabytes(1000), ByteSize.Parse(''1000MB''))", span="89-89"];
m11_61 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseMegabytes()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseMegabytes()", span="87-87"];
m11_56 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseKilobytes()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseKilobytes()", span="81-81"];
m11_57 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseKilobytes()", file="ParsingTests.cs", label="Assert.Equal(ByteSize.FromKilobytes(1020), ByteSize.Parse(''1020KB''))", span="83-83"];
m11_58 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseKilobytes()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseKilobytes()", span="81-81"];
m11_65 [cluster="Humanizer.Bytes.ByteSize.FromGigabytes(double)", file="ParsingTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromGigabytes(double)", span="113-113"];
m11_3 [cluster="Humanizer.Bytes.ByteSize.FromKilobytes(double)", file="ParsingTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromKilobytes(double)", span="103-103"];
m11_0 [cluster="Humanizer.Tests.Bytes.ParsingTests.Parse()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.Parse()", span="10-10"];
m11_1 [cluster="Humanizer.Tests.Bytes.ParsingTests.Parse()", file="ParsingTests.cs", label="Assert.Equal(ByteSize.FromKilobytes(1020), ByteSize.Parse(''1020KB''))", span="12-12"];
m11_2 [cluster="Humanizer.Tests.Bytes.ParsingTests.Parse()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.Parse()", span="10-10"];
m11_45 [cluster="lambda expression", file="ParsingTests.cs", label="Entry lambda expression", span="65-65"];
m11_33 [cluster="lambda expression", file="ParsingTests.cs", label="Entry lambda expression", span="53-53"];
m11_34 [cluster="lambda expression", file="ParsingTests.cs", label="ByteSize.Parse(''10.5b'')", span="53-53"];
m11_35 [cluster="lambda expression", file="ParsingTests.cs", label="Exit lambda expression", span="53-53"];
m11_39 [cluster="lambda expression", file="ParsingTests.cs", label="Entry lambda expression", span="59-59"];
m11_40 [cluster="lambda expression", file="ParsingTests.cs", label="ByteSize.Parse(''Unexpected Value'')", span="59-59"];
m11_41 [cluster="lambda expression", file="ParsingTests.cs", label="Exit lambda expression", span="59-59"];
m11_46 [cluster="lambda expression", file="ParsingTests.cs", label="ByteSize.Parse(null)", span="65-65"];
m11_47 [cluster="lambda expression", file="ParsingTests.cs", label="Exit lambda expression", span="65-65"];
m11_62 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseGigabytes()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseGigabytes()", span="93-93"];
m11_63 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseGigabytes()", file="ParsingTests.cs", label="Assert.Equal(ByteSize.FromGigabytes(805), ByteSize.Parse(''805GB''))", span="95-95"];
m11_64 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseGigabytes()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseGigabytes()", span="93-93"];
m11_13 [cluster="Unk.True", file="ParsingTests.cs", label="Entry Unk.True", span=""];
m11_25 [cluster="Humanizer.Bytes.ByteSize.ByteSize()", file="ParsingTests.cs", label="Entry Humanizer.Bytes.ByteSize.ByteSize()", span="8-8"];
m11_52 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseBytes()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseBytes()", span="75-75"];
m11_53 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseBytes()", file="ParsingTests.cs", label="Assert.Equal(ByteSize.FromBytes(1), ByteSize.Parse(''1B''))", span="77-77"];
m11_54 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseBytes()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseBytes()", span="75-75"];
m11_6 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParse()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.TryParse()", span="16-16"];
m11_7 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParse()", file="ParsingTests.cs", label="ByteSize resultByteSize", span="18-18"];
m11_8 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParse()", file="ParsingTests.cs", label="var resultBool = ByteSize.TryParse(''1020KB'', out resultByteSize)", span="19-19"];
m11_9 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParse()", file="ParsingTests.cs", label="Assert.True(resultBool)", span="21-21"];
m11_10 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParse()", file="ParsingTests.cs", label="Assert.Equal(ByteSize.FromKilobytes(1020), resultByteSize)", span="22-22"];
m11_11 [cluster="Humanizer.Tests.Bytes.ParsingTests.TryParse()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.TryParse()", span="16-16"];
m11_14 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseDecimalMegabytes()", file="ParsingTests.cs", label="Entry Humanizer.Tests.Bytes.ParsingTests.ParseDecimalMegabytes()", span="26-26"];
m11_15 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseDecimalMegabytes()", file="ParsingTests.cs", label="Assert.Equal(ByteSize.FromMegabytes(100.5), ByteSize.Parse(''100.5MB''))", span="28-28"];
m11_16 [cluster="Humanizer.Tests.Bytes.ParsingTests.ParseDecimalMegabytes()", file="ParsingTests.cs", label="Exit Humanizer.Tests.Bytes.ParsingTests.ParseDecimalMegabytes()", span="26-26"];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [color=blue, key=0, style=bold];
n2 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n3 -> n5  [key=2, style=dotted];
n3 -> n6  [key=2, style=dotted];
n4 -> n2  [color=blue, key=0, style=bold];
d2 -> d3  [color=green, key=0, style=solid];
d0 -> d2  [color=green, key=1, label="System.Globalization.CultureInfo", style=dashed];
d0 -> d1  [key=0, style=solid];
d1 -> d2  [color=green, key=0, style=solid];
d3 -> d0  [color=blue, key=0, style=bold];
d9 -> d1  [color=darkseagreen4, key=1, label="Humanizer.Tests.AmbientCulture", style=dashed];
d9 -> d7  [color=darkseagreen4, key=1, label="Humanizer.Tests.AmbientCulture", style=dashed];
d7 -> d8  [key=0, style=solid];
d6 -> d7  [key=0, style=solid];
d8 -> d6  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_0 -> m3_4  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_0 -> m3_6  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_0 -> m3_7  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_0 -> m3_8  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_0 -> m3_9  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_0 -> m3_10  [color=red, key=1, label=int, style=dashed];
m3_0 -> m3_11  [color=red, key=1, label=int, style=dashed];
m3_0 -> m3_12  [color=red, key=1, label=int, style=dashed];
m3_0 -> m3_13  [color=red, key=1, label=int, style=dashed];
m3_0 -> m3_14  [color=red, key=1, label=int, style=dashed];
m3_0 -> m3_15  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_0 -> m3_16  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_0 -> m3_17  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_0 -> m3_18  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_0 -> m3_21  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_0 -> m3_22  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_0 -> m3_23  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_0 -> m3_24  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_0 -> m3_25  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=0, style=solid];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_5  [key=0, style=solid];
m3_4 -> m3_28  [key=0, style=solid];
m3_4 -> m3_0  [key=2, style=dotted];
m3_4 -> m3_29  [key=2, style=dotted];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_9  [key=0, style=solid];
m3_6 -> m3_15  [color=darkorchid, key=3, label="method methodReturn string GetCustomDescription", style=bold];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_0  [key=2, style=dotted];
m3_7 -> m3_29  [key=2, style=dotted];
m3_7 -> m3_31  [key=2, style=dotted];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_8  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_8 -> m3_10  [color=red, key=1, label=int, style=dashed];
m3_8 -> m3_11  [color=red, key=1, label=int, style=dashed];
m3_8 -> m3_12  [color=red, key=1, label=int, style=dashed];
m3_8 -> m3_13  [color=red, key=1, label=int, style=dashed];
m3_8 -> m3_14  [color=red, key=1, label=int, style=dashed];
m3_8 -> m3_15  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_8 -> m3_16  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_8 -> m3_17  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_8 -> m3_18  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_8 -> m3_21  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_8 -> m3_22  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_8 -> m3_23  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_8 -> m3_24  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_8 -> m3_25  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_9 -> m3_10  [color=red, key=0, style=solid];
m3_9 -> m3_12  [color=red, key=0, style=solid];
m3_10 -> m3_11  [color=red, key=0, style=solid];
m3_10 -> m3_0  [color=red, key=2, style=dotted];
m3_10 -> m3_29  [color=red, key=2, style=dotted];
m3_10 -> m3_31  [color=red, key=2, style=dotted];
m3_11 -> m3_12  [color=red, key=0, style=solid];
m3_11 -> m3_11  [color=red, key=1, label=int, style=dashed];
m3_11 -> m3_13  [color=red, key=1, label=int, style=dashed];
m3_11 -> m3_14  [color=red, key=1, label=int, style=dashed];
m3_11 -> m3_15  [color=red, key=1, label=int, style=dashed];
m3_11 -> m3_16  [color=red, key=1, label=int, style=dashed];
m3_11 -> m3_17  [color=red, key=1, label=int, style=dashed];
m3_11 -> m3_18  [color=red, key=1, label=int, style=dashed];
m3_11 -> m3_21  [color=red, key=1, label=int, style=dashed];
m3_11 -> m3_22  [color=red, key=1, label=int, style=dashed];
m3_11 -> m3_23  [color=red, key=1, label=int, style=dashed];
m3_11 -> m3_24  [color=red, key=1, label=int, style=dashed];
m3_11 -> m3_25  [color=red, key=1, label=int, style=dashed];
m3_12 -> m3_13  [color=red, key=0, style=solid];
m3_12 -> m3_15  [color=red, key=0, style=solid];
m3_13 -> m3_14  [color=red, key=0, style=solid];
m3_13 -> m3_0  [color=red, key=2, style=dotted];
m3_13 -> m3_29  [color=red, key=2, style=dotted];
m3_13 -> m3_31  [color=red, key=2, style=dotted];
m3_14 -> m3_15  [color=red, key=0, style=solid];
m3_14 -> m3_14  [color=red, key=1, label=int, style=dashed];
m3_14 -> m3_16  [color=red, key=1, label=int, style=dashed];
m3_14 -> m3_17  [color=red, key=1, label=int, style=dashed];
m3_14 -> m3_18  [color=red, key=1, label=int, style=dashed];
m3_14 -> m3_21  [color=red, key=1, label=int, style=dashed];
m3_14 -> m3_22  [color=red, key=1, label=int, style=dashed];
m3_14 -> m3_23  [color=red, key=1, label=int, style=dashed];
m3_14 -> m3_24  [color=red, key=1, label=int, style=dashed];
m3_14 -> m3_25  [color=red, key=1, label=int, style=dashed];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_18  [key=0, style=solid];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_0  [key=2, style=dotted];
m3_16 -> m3_29  [key=2, style=dotted];
m3_16 -> m3_31  [key=2, style=dotted];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_17  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_17 -> m3_21  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_17 -> m3_22  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_17 -> m3_23  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_17 -> m3_24  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_17 -> m3_25  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_27  [key=0, style=solid];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_23  [key=0, style=solid];
m3_22 -> m3_27  [key=0, style=solid];
m3_22 -> m3_31  [key=2, style=dotted];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_25  [color=darkseagreen4, key=1, label=lastPart, style=dashed];
m3_23 -> m3_26  [color=darkseagreen4, key=1, label=lastPart, style=dashed];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_26  [key=0, style=solid];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_29  [key=2, style=dotted];
m3_25 -> m3_25  [color=darkseagreen4, key=1, label=lastPart, style=dashed];
m3_2 -> m3_28  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_30  [key=2, style=dotted];
m3_5 -> m3_7  [color=darkseagreen4, key=1, label=parts, style=dashed];
m3_5 -> m3_10  [color=red, key=1, label=parts, style=dashed];
m3_5 -> m3_13  [color=red, key=1, label=parts, style=dashed];
m3_5 -> m3_16  [color=darkseagreen4, key=1, label=parts, style=dashed];
m3_5 -> m3_19  [color=darkseagreen4, key=1, label=parts, style=dashed];
m3_5 -> m3_20  [color=darkseagreen4, key=1, label=parts, style=dashed];
m3_5 -> m3_22  [color=darkseagreen4, key=1, label=parts, style=dashed];
m3_5 -> m3_26  [color=darkseagreen4, key=1, label=parts, style=dashed];
m3_5 -> m3_27  [color=darkseagreen4, key=1, label=parts, style=dashed];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_21  [key=0, style=solid];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_31  [key=2, style=dotted];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_31  [key=2, style=dotted];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_32  [key=2, style=dotted];
m3_27 -> m3_33  [key=2, style=dotted];
m3_28 -> m3_0  [color=blue, key=0, style=bold];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_36  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_34 -> m3_38  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_34 -> m3_40  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_34 -> m3_41  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_34 -> m3_44  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_35 -> m3_36  [key=0, style=solid];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> m3_38  [key=0, style=solid];
m3_36 -> m3_46  [key=2, style=dotted];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_44  [key=0, style=solid];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_44  [key=0, style=solid];
m3_40 -> m3_46  [key=2, style=dotted];
m3_40 -> m3_43  [color=darkseagreen4, key=1, label=exceptionPart, style=dashed];
m3_41 -> m3_42  [key=0, style=solid];
m3_44 -> m3_45  [key=0, style=solid];
m3_44 -> m3_48  [key=2, style=dotted];
m3_37 -> m3_45  [key=0, style=solid];
m3_39 -> m3_40  [key=0, style=solid];
m3_43 -> m3_45  [key=0, style=solid];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_0  [key=2, style=dotted];
m3_42 -> m3_47  [key=2, style=dotted];
m3_45 -> m3_34  [color=blue, key=0, style=bold];
m3_47 -> m3_58  [key=0, style=solid];
m3_47 -> m3_59  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_47 -> m3_60  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_58 -> m3_59  [key=0, style=solid];
m3_58 -> m3_60  [key=0, style=solid];
m3_58 -> m3_62  [key=2, style=dotted];
m3_59 -> m3_60  [key=0, style=solid];
m3_59 -> m3_63  [key=2, style=dotted];
m3_59 -> m3_59  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_60 -> m3_61  [key=0, style=solid];
m3_61 -> m3_47  [color=blue, key=0, style=bold];
m3_48 -> m3_49  [key=0, style=solid];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_0  [key=2, style=dotted];
m3_49 -> m3_55  [key=2, style=dotted];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_47  [key=2, style=dotted];
m3_50 -> m3_50  [color=darkseagreen4, key=1, label=towords, style=dashed];
m3_50 -> m3_52  [color=darkseagreen4, key=1, label=towords, style=dashed];
m3_50 -> m3_53  [color=darkseagreen4, key=1, label=towords, style=dashed];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> m3_53  [key=0, style=solid];
m3_51 -> m3_56  [key=2, style=dotted];
m3_52 -> m3_53  [key=0, style=solid];
m3_52 -> m3_57  [key=2, style=dotted];
m3_52 -> m3_52  [color=darkseagreen4, key=1, label=towords, style=dashed];
m3_53 -> m3_54  [key=0, style=solid];
m3_54 -> m3_48  [color=blue, key=0, style=bold];
m3_46 -> m3_64  [key=0, style=solid];
m3_64 -> m3_65  [key=0, style=solid];
m3_64 -> m3_66  [key=2, style=dotted];
m3_65 -> m3_46  [color=blue, key=0, style=bold];
m3_67 -> m3_4  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter", style=dashed];
m3_67 -> m3_7  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter", style=dashed];
m3_67 -> m3_10  [color=red, key=1, label="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter", style=dashed];
m3_67 -> m3_13  [color=red, key=1, label="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter", style=dashed];
m3_67 -> m3_16  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter", style=dashed];
m3_67 -> m3_42  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter", style=dashed];
m3_67 -> m3_44  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter", style=dashed];
m3_67 -> m3_49  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter", style=dashed];
m4_15 -> m4_16  [key=0, style=solid];
m4_16 -> m4_3  [key=2, style=dotted];
m4_16 -> n6  [key=2, style=dotted];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_18  [key=2, style=dotted];
m4_17 -> m4_15  [color=blue, key=0, style=bold];
m4_17 -> m4_18  [key=0, style=solid];
m4_7 -> m4_5  [color=blue, key=0, style=bold];
m4_18 -> m4_16  [color=blue, key=0, style=bold];
m4_8 -> m4_9  [color=green, key=0, style=solid];
m4_9 -> m4_10  [color=green, key=0, style=solid];
m4_9 -> m4_11  [color=green, key=2, style=dotted];
m4_9 -> n6  [color=green, key=2, style=dotted];
m4_10 -> m4_8  [color=blue, key=0, style=bold];
m4_12 -> m4_13  [key=0, style=solid];
m4_13 -> n6  [key=2, style=dotted];
m4_13 -> m4_11  [key=2, style=dotted];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_15  [key=2, style=dotted];
m4_14 -> m4_12  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [color=green, key=0, style=solid];
m4_1 -> m4_2  [color=green, key=0, style=solid];
m4_1 -> m4_3  [color=green, key=2, style=dotted];
m4_1 -> n6  [color=green, key=2, style=dotted];
m4_2 -> m4_0  [color=blue, key=0, style=bold];
m4_19 -> m4_20  [key=0, style=solid];
m4_4 -> m4_5  [key=0, style=solid];
m4_5 -> m4_6  [color=green, key=0, style=solid];
m4_5 -> m4_7  [key=2, style=dotted];
m4_6 -> m4_4  [color=blue, key=0, style=bold];
m4_6 -> m4_7  [color=green, key=0, style=solid];
m4_6 -> m4_3  [color=green, key=2, style=dotted];
m4_6 -> n6  [color=green, key=2, style=dotted];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_15  [key=2, style=dotted];
m4_21 -> m4_19  [color=blue, key=0, style=bold];
m11_26 -> m11_27  [key=0, style=solid];
m11_27 -> m11_28  [key=0, style=solid];
m11_27 -> m11_3  [key=2, style=dotted];
m11_27 -> m11_4  [key=2, style=dotted];
m11_27 -> n6  [key=2, style=dotted];
m11_28 -> m11_26  [color=blue, key=0, style=bold];
m11_18 -> m11_19  [key=0, style=solid];
m11_18 -> m11_20  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_19 -> m11_20  [key=0, style=solid];
m11_20 -> m11_21  [key=0, style=solid];
m11_20 -> m11_12  [key=2, style=dotted];
m11_20 -> m11_22  [color=darkseagreen4, key=1, label=resultByteSize, style=dashed];
m11_21 -> m11_22  [key=0, style=solid];
m11_21 -> m11_24  [key=2, style=dotted];
m11_22 -> m11_23  [key=0, style=solid];
m11_22 -> m11_25  [key=2, style=dotted];
m11_22 -> n6  [key=2, style=dotted];
m11_23 -> m11_18  [color=blue, key=0, style=bold];
m11_48 -> m11_49  [key=0, style=solid];
m11_49 -> m11_50  [key=0, style=solid];
m11_49 -> m11_51  [key=2, style=dotted];
m11_49 -> m11_4  [key=2, style=dotted];
m11_49 -> n6  [key=2, style=dotted];
m11_50 -> m11_48  [color=blue, key=0, style=bold];
m11_42 -> m11_43  [key=0, style=solid];
m11_43 -> m11_44  [key=0, style=solid];
m11_43 -> m11_32  [key=2, style=dotted];
m11_43 -> m11_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_44 -> m11_42  [color=blue, key=0, style=bold];
m11_29 -> m11_30  [key=0, style=solid];
m11_30 -> m11_31  [key=0, style=solid];
m11_30 -> m11_32  [key=2, style=dotted];
m11_30 -> m11_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_31 -> m11_29  [color=blue, key=0, style=bold];
m11_66 -> m11_67  [key=0, style=solid];
m11_67 -> m11_68  [key=0, style=solid];
m11_67 -> m11_69  [key=2, style=dotted];
m11_67 -> m11_4  [key=2, style=dotted];
m11_67 -> n6  [key=2, style=dotted];
m11_68 -> m11_66  [color=blue, key=0, style=bold];
m11_36 -> m11_37  [key=0, style=solid];
m11_37 -> m11_38  [key=0, style=solid];
m11_37 -> m11_32  [key=2, style=dotted];
m11_37 -> m11_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_38 -> m11_36  [color=blue, key=0, style=bold];
m11_59 -> m11_60  [key=0, style=solid];
m11_60 -> m11_61  [key=0, style=solid];
m11_60 -> m11_17  [key=2, style=dotted];
m11_60 -> m11_4  [key=2, style=dotted];
m11_60 -> n6  [key=2, style=dotted];
m11_61 -> m11_59  [color=blue, key=0, style=bold];
m11_56 -> m11_57  [key=0, style=solid];
m11_57 -> m11_58  [key=0, style=solid];
m11_57 -> m11_3  [key=2, style=dotted];
m11_57 -> m11_4  [key=2, style=dotted];
m11_57 -> n6  [key=2, style=dotted];
m11_58 -> m11_56  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_3  [key=2, style=dotted];
m11_1 -> m11_4  [key=2, style=dotted];
m11_1 -> n6  [key=2, style=dotted];
m11_2 -> m11_0  [color=blue, key=0, style=bold];
m11_45 -> m11_46  [key=0, style=solid];
m11_33 -> m11_34  [key=0, style=solid];
m11_34 -> m11_35  [key=0, style=solid];
m11_34 -> m11_4  [key=2, style=dotted];
m11_35 -> m11_33  [color=blue, key=0, style=bold];
m11_39 -> m11_40  [key=0, style=solid];
m11_40 -> m11_41  [key=0, style=solid];
m11_40 -> m11_4  [key=2, style=dotted];
m11_41 -> m11_39  [color=blue, key=0, style=bold];
m11_46 -> m11_47  [key=0, style=solid];
m11_46 -> m11_4  [key=2, style=dotted];
m11_47 -> m11_45  [color=blue, key=0, style=bold];
m11_62 -> m11_63  [key=0, style=solid];
m11_63 -> m11_64  [key=0, style=solid];
m11_63 -> m11_65  [key=2, style=dotted];
m11_63 -> m11_4  [key=2, style=dotted];
m11_63 -> n6  [key=2, style=dotted];
m11_64 -> m11_62  [color=blue, key=0, style=bold];
m11_52 -> m11_53  [key=0, style=solid];
m11_53 -> m11_54  [key=0, style=solid];
m11_53 -> m11_55  [key=2, style=dotted];
m11_53 -> m11_4  [key=2, style=dotted];
m11_53 -> n6  [key=2, style=dotted];
m11_54 -> m11_52  [color=blue, key=0, style=bold];
m11_6 -> m11_7  [key=0, style=solid];
m11_7 -> m11_8  [key=0, style=solid];
m11_8 -> m11_9  [key=0, style=solid];
m11_8 -> m11_12  [key=2, style=dotted];
m11_8 -> m11_10  [color=darkseagreen4, key=1, label=resultByteSize, style=dashed];
m11_9 -> m11_10  [key=0, style=solid];
m11_9 -> m11_13  [key=2, style=dotted];
m11_10 -> m11_11  [key=0, style=solid];
m11_10 -> m11_3  [key=2, style=dotted];
m11_10 -> n6  [key=2, style=dotted];
m11_11 -> m11_6  [color=blue, key=0, style=bold];
m11_14 -> m11_15  [key=0, style=solid];
m11_15 -> m11_16  [key=0, style=solid];
m11_15 -> m11_17  [key=2, style=dotted];
m11_15 -> m11_4  [key=2, style=dotted];
m11_15 -> n6  [key=2, style=dotted];
m11_16 -> m11_14  [color=blue, key=0, style=bold];
}
