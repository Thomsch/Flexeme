digraph  {
n95 [label="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter", span=""];
n0 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="Entry Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", span="15-15"];
n1 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="number == 0", span="17-17"];
n3 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="number < 0", span="20-20"];
n4 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="return string.Format(''minus {0}'', Convert(-number));", span="21-21"];
n6 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="var billions = number/1000000000", span="25-25"];
n9 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="number %= 1000000000", span="29-29"];
n12 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="var millions = number/1000000", span="34-34"];
n15 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="number %= 1000000", span="38-38"];
n18 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="var thousands = number/1000", span="43-43"];
n21 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="number %= 1000", span="47-47"];
n22 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="var hundreds = number/100", span="50-50"];
n25 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="number %= 100", span="54-54"];
n26 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="number > 0", span="57-57"];
n27 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="number < 20", span="59-59"];
n28 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="number > 1", span="61-61"];
n29 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="parts.Add(UnitsMap[number])", span="62-62"];
n31 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="var units = number%10", span="68-68"];
n34 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="parts.Add(TensMap[number/10])", span="72-72"];
n2 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="return ''null'';", span="18-18"];
n5 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="var parts = new List<string>()", span="23-23"];
n38 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n8 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="parts.Add(Part(''{0} Milliarden'', ''eine Milliarde'', billions))", span="28-28"];
n11 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="parts.Add('' '')", span="31-31"];
n14 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="parts.Add(Part(''{0} Millionen'', ''eine Million'', millions))", span="37-37"];
n17 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="parts.Add('' '')", span="40-40"];
n20 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="parts.Add(Part(''{0}tausend'', ''eintausend'', thousands))", span="46-46"];
n24 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="parts.Add(Part(''{0}hundert'', ''einhundert'', hundreds))", span="53-53"];
n30 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="parts.Add(''eins'')", span="64-64"];
n33 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="parts.Add(string.Format(''{0}und'', UnitsMap[units]))", span="70-70"];
n35 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="return string.Join('''', parts);", span="76-76"];
n7 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="billions > 0", span="26-26"];
n39 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Part(string, string, int)", label="Entry Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Part(string, string, int)", span="137-137"];
n40 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n10 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="number > 0", span="30-30"];
n13 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="millions > 0", span="35-35"];
n16 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="number > 0", span="39-39"];
n19 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="thousands > 0", span="44-44"];
n23 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="hundreds > 0", span="51-51"];
n32 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="units > 0", span="69-69"];
n37 [cluster="string.Format(string, object)", label="Entry string.Format(string, object)", span="0-0"];
n36 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", label="Exit Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Convert(int)", span="15-15"];
n41 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
n42 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int)", label="Entry Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int)", span="79-79"];
n43 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int)", label="return ConvertToOrdinal(number, GrammaticalGender.Masculine);", span="81-81"];
n44 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int)", label="Exit Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int)", span="79-79"];
n45 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", label="Entry Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", span="84-84"];
n46 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", label="number == 0", span="86-86"];
n47 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", label="return ''null'' + GetEndingForGender(gender);", span="87-87"];
n49 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", label="number < 0", span="90-90"];
n51 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", label="number = -number", span="93-93"];
n52 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", label="var billions = number/1000000000", span="96-96"];
n54 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", label="number %= 1000000000", span="99-99"];
n57 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", label="var millions = number/1000000", span="104-104"];
n59 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", label="number %= 1000000", span="107-107"];
n62 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", label="var thousands = number/1000", span="112-112"];
n65 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", label="number %= 1000", span="116-116"];
n66 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", label="var hundreds = number/100", span="119-119"];
n69 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", label="number %= 100", span="123-123"];
n70 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", label="number > 0", span="126-126"];
n71 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", label="parts.Add(number < 20 ? UnitsOrdinal[number] : Convert(number))", span="127-127"];
n72 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", label="number == 0 || number >= 20", span="129-129"];
n74 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", label="parts.Add(GetEndingForGender(gender))", span="132-132"];
n48 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", label="var parts = new List<string>()", span="89-89"];
n50 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", label="parts.Add(''minus '')", span="92-92"];
n56 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", label="parts.Add(Part(BillionOrdinalPlural[noRest], BillionOrdinalSingular[noRest], billions))", span="101-101"];
n61 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", label="parts.Add(Part(MillionOrdinalPlural[noRest], MillionOrdinalSingular[noRest], millions))", span="109-109"];
n64 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", label="parts.Add(Part(''{0}tausend'', ''eintausend'', thousands))", span="115-115"];
n68 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", label="parts.Add(Part(''{0}hundert'', ''einhundert'', hundreds))", span="122-122"];
n73 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", label="parts.Add(''s'')", span="130-130"];
n75 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", label="return string.Join('''', parts);", span="134-134"];
n53 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", label="billions > 0", span="97-97"];
n55 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", label="var noRest = NoRestIndex(number)", span="100-100"];
n78 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.NoRestIndex(int)", label="Entry Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.NoRestIndex(int)", span="144-144"];
n58 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", label="millions > 0", span="105-105"];
n60 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", label="var noRest = NoRestIndex(number)", span="108-108"];
n63 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", label="thousands > 0", span="113-113"];
n67 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", label="hundreds > 0", span="120-120"];
n77 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.GetEndingForGender(Humanizer.GrammaticalGender)", label="Entry Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.GetEndingForGender(Humanizer.GrammaticalGender)", span="149-149"];
n76 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", label="Exit Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", span="84-84"];
n79 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Part(string, string, int)", label="number == 1", span="139-139"];
n80 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Part(string, string, int)", label="return singular;", span="140-140"];
n81 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Part(string, string, int)", label="return string.Format(pluralFormat, Convert(number));", span="141-141"];
n82 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Part(string, string, int)", label="Exit Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.Part(string, string, int)", span="137-137"];
n83 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.NoRestIndex(int)", label="return number == 0 ? 0 : 1;", span="146-146"];
n84 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.NoRestIndex(int)", label="Exit Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.NoRestIndex(int)", span="144-144"];
n85 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.GetEndingForGender(Humanizer.GrammaticalGender)", label=gender, span="151-151"];
n86 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.GetEndingForGender(Humanizer.GrammaticalGender)", label="GrammaticalGender.Masculine", span="153-153"];
n88 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.GetEndingForGender(Humanizer.GrammaticalGender)", label="GrammaticalGender.Feminine", span="155-155"];
n90 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.GetEndingForGender(Humanizer.GrammaticalGender)", label="GrammaticalGender.Neuter", span="157-157"];
n92 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.GetEndingForGender(Humanizer.GrammaticalGender)", label="throw new ArgumentOutOfRangeException(''gender'');", span="160-160"];
n87 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.GetEndingForGender(Humanizer.GrammaticalGender)", label="return ''ter'';", span="154-154"];
n89 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.GetEndingForGender(Humanizer.GrammaticalGender)", label="return ''te'';", span="156-156"];
n91 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.GetEndingForGender(Humanizer.GrammaticalGender)", label="return ''tes'';", span="158-158"];
n93 [cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.GetEndingForGender(Humanizer.GrammaticalGender)", label="Exit Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.GetEndingForGender(Humanizer.GrammaticalGender)", span="149-149"];
n94 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m0_142 [cluster="Humanizer.InflectorExtensions.Camelize(string)", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.Camelize(string)", span="282-282"];
m0_143 [cluster="Humanizer.InflectorExtensions.Camelize(string)", file="DateHumanizeTests.cs", label="string word = Pascalize(input)", span="284-284"];
m0_144 [cluster="Humanizer.InflectorExtensions.Camelize(string)", file="DateHumanizeTests.cs", label="return word.Substring(0, 1).ToLower() + word.Substring(1);", span="285-285"];
m0_145 [cluster="Humanizer.InflectorExtensions.Camelize(string)", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.Camelize(string)", span="282-282"];
m0_75 [cluster="System.Text.RegularExpressions.Regex.Replace(string, string)", file="DateHumanizeTests.cs", label="Entry System.Text.RegularExpressions.Regex.Replace(string, string)", span="0-0"];
m0_100 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", span="236-236"];
m0_119 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="DateHumanizeTests.cs", label="word == null", span="238-238"];
m0_121 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="DateHumanizeTests.cs", label="var result = word", span="241-241"];
m0_122 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="DateHumanizeTests.cs", label="!Uncountables.Contains(word.ToLower())", span="243-243"];
m0_123 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="DateHumanizeTests.cs", label="int i = rules.Count - 1", span="245-245"];
m0_125 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="DateHumanizeTests.cs", label="(result = rules[i].Apply(word)) != null", span="247-247"];
m0_120 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="DateHumanizeTests.cs", label="return null;", span="239-239"];
m0_127 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="DateHumanizeTests.cs", label="return result;", span="254-254"];
m0_124 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="DateHumanizeTests.cs", label="i >= 0", span="245-245"];
m0_126 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="DateHumanizeTests.cs", label="i--", span="245-245"];
m0_128 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>, string)", span="236-236"];
m0_147 [cluster="Humanizer.InflectorExtensions.Underscore(string)", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.Underscore(string)", span="293-293"];
m0_148 [cluster="Humanizer.InflectorExtensions.Underscore(string)", file="DateHumanizeTests.cs", label="return Regex.Replace(\r\n                Regex.Replace(\r\n                    Regex.Replace(input, @''([A-Z]+)([A-Z][a-z])'', ''$1_$2''), @''([a-z\d])([A-Z])'', ''$1_$2''), @''[-\s]'', ''_'').ToLower();", span="295-297"];
m0_149 [cluster="Humanizer.InflectorExtensions.Underscore(string)", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.Underscore(string)", span="293-293"];
m0_155 [cluster="Humanizer.InflectorExtensions.Hyphenate(string)", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.Hyphenate(string)", span="315-315"];
m0_156 [cluster="Humanizer.InflectorExtensions.Hyphenate(string)", file="DateHumanizeTests.cs", label="return Dasherize(underscoredWord);", span="317-317"];
m0_157 [cluster="Humanizer.InflectorExtensions.Hyphenate(string)", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.Hyphenate(string)", span="315-315"];
m0_154 [cluster="string.Replace(char, char)", file="DateHumanizeTests.cs", label="Entry string.Replace(char, char)", span="0-0"];
m0_150 [cluster="System.Text.RegularExpressions.Regex.Replace(string, string, string)", file="DateHumanizeTests.cs", label="Entry System.Text.RegularExpressions.Regex.Replace(string, string, string)", span="0-0"];
m0_61 [cluster="Humanizer.InflectorExtensions.AddSingular(string, string)", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.AddSingular(string, string)", span="156-156"];
m0_86 [cluster="Humanizer.InflectorExtensions.AddSingular(string, string)", file="DateHumanizeTests.cs", label="Singulars.Add(new Rule(rule, replacement))", span="158-158"];
m0_87 [cluster="Humanizer.InflectorExtensions.AddSingular(string, string)", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.AddSingular(string, string)", span="156-156"];
m0_129 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="DateHumanizeTests.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m0_134 [cluster="Humanizer.InflectorExtensions.Pascalize(string)", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.Pascalize(string)", span="272-272"];
m0_135 [cluster="Humanizer.InflectorExtensions.Pascalize(string)", file="DateHumanizeTests.cs", label="return Regex.Replace(input, ''(?:^|_)(.)'', match => match.Groups[1].Value.ToUpper());", span="274-274"];
m0_136 [cluster="Humanizer.InflectorExtensions.Pascalize(string)", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.Pascalize(string)", span="272-272"];
m0_141 [cluster="string.ToUpper()", file="DateHumanizeTests.cs", label="Entry string.ToUpper()", span="0-0"];
m0_146 [cluster="string.Substring(int, int)", file="DateHumanizeTests.cs", label="Entry string.Substring(int, int)", span="0-0"];
m0_0 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.InflectorExtensions()", span="53-53"];
m0_1 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", color=red, community=0, file="DateHumanizeTests.cs", label="0: AddPlural(''$'', ''s'')", span="55-55"];
m0_2 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", color=red, community=0, file="DateHumanizeTests.cs", label="0: AddPlural(''s$'', ''s'')", span="56-56"];
m0_3 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddPlural(''(ax|test)is$'', ''$1es'')", span="57-57"];
m0_4 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddPlural(''(octop|vir|alumn|fung)us$'', ''$1i'')", span="58-58"];
m0_5 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddPlural(''(alias|status)$'', ''$1es'')", span="59-59"];
m0_6 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddPlural(''(bu)s$'', ''$1ses'')", span="60-60"];
m0_7 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddPlural(''(buffal|tomat|volcan)o$'', ''$1oes'')", span="61-61"];
m0_8 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddPlural(''([ti])um$'', ''$1a'')", span="62-62"];
m0_9 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", color=red, community=0, file="DateHumanizeTests.cs", label="0: AddPlural(''sis$'', ''ses'')", span="63-63"];
m0_10 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", color=red, community=0, file="DateHumanizeTests.cs", label="0: AddPlural(''(?:([^f])fe|([lr])f)$'', ''$1$2ves'')", span="64-64"];
m0_11 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", color=red, community=0, file="DateHumanizeTests.cs", label="0: AddPlural(''(hive)$'', ''$1s'')", span="65-65"];
m0_12 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", color=red, community=0, file="DateHumanizeTests.cs", label="0: AddPlural(''([^aeiouy]|qu)y$'', ''$1ies'')", span="66-66"];
m0_13 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddPlural(''(x|ch|ss|sh)$'', ''$1es'')", span="67-67"];
m0_14 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddPlural(''(matr|vert|ind)ix|ex$'', ''$1ices'')", span="68-68"];
m0_15 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddPlural(''([m|l])ouse$'', ''$1ice'')", span="69-69"];
m0_16 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddPlural(''^(ox)$'', ''$1en'')", span="70-70"];
m0_17 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddPlural(''(quiz)$'', ''$1zes'')", span="71-71"];
m0_18 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''s$'', '''')", span="73-73"];
m0_19 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''(n)ews$'', ''$1ews'')", span="74-74"];
m0_20 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''([ti])a$'', ''$1um'')", span="75-75"];
m0_21 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$'', ''$1$2sis'')", span="76-76"];
m0_22 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''(^analy)ses$'', ''$1sis'')", span="77-77"];
m0_23 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''([^f])ves$'', ''$1fe'')", span="78-78"];
m0_24 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''(hive)s$'', ''$1'')", span="79-79"];
m0_25 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''(tive)s$'', ''$1'')", span="80-80"];
m0_26 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''([lr])ves$'', ''$1f'')", span="81-81"];
m0_27 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''([^aeiouy]|qu)ies$'', ''$1y'')", span="82-82"];
m0_28 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''(s)eries$'', ''$1eries'')", span="83-83"];
m0_29 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''(m)ovies$'', ''$1ovie'')", span="84-84"];
m0_30 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''(x|ch|ss|sh)es$'', ''$1'')", span="85-85"];
m0_31 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''([m|l])ice$'', ''$1ouse'')", span="86-86"];
m0_32 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''(bus)es$'', ''$1'')", span="87-87"];
m0_33 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''(o)es$'', ''$1'')", span="88-88"];
m0_34 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''(shoe)s$'', ''$1'')", span="89-89"];
m0_35 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''(cris|ax|test)es$'', ''$1is'')", span="90-90"];
m0_36 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''(octop|vir|alumn|fung)i$'', ''$1us'')", span="91-91"];
m0_37 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''(alias|status)es$'', ''$1'')", span="92-92"];
m0_38 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''^(ox)en'', ''$1'')", span="93-93"];
m0_39 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''(vert|ind)ices$'', ''$1ex'')", span="94-94"];
m0_40 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''(matr)ices$'', ''$1ix'')", span="95-95"];
m0_41 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddSingular(''(quiz)zes$'', ''$1'')", span="96-96"];
m0_42 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddIrregular(''person'', ''people'')", span="98-98"];
m0_43 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddIrregular(''man'', ''men'')", span="99-99"];
m0_44 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddIrregular(''child'', ''children'')", span="100-100"];
m0_45 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddIrregular(''sex'', ''sexes'')", span="101-101"];
m0_46 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddIrregular(''move'', ''moves'')", span="102-102"];
m0_47 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddIrregular(''goose'', ''geese'')", span="103-103"];
m0_48 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddIrregular(''alumna'', ''alumnae'')", span="104-104"];
m0_49 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddUncountable(''equipment'')", span="106-106"];
m0_50 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddUncountable(''information'')", span="107-107"];
m0_51 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddUncountable(''rice'')", span="108-108"];
m0_52 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddUncountable(''money'')", span="109-109"];
m0_53 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddUncountable(''species'')", span="110-110"];
m0_54 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddUncountable(''series'')", span="111-111"];
m0_55 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddUncountable(''fish'')", span="112-112"];
m0_56 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddUncountable(''sheep'')", span="113-113"];
m0_57 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddUncountable(''deer'')", span="114-114"];
m0_58 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="AddUncountable(''aircraft'')", span="115-115"];
m0_59 [cluster="Humanizer.InflectorExtensions.InflectorExtensions()", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.InflectorExtensions()", span="53-53"];
m0_62 [cluster="Humanizer.InflectorExtensions.AddIrregular(string, string)", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.AddIrregular(string, string)", span="140-140"];
m0_76 [cluster="Humanizer.InflectorExtensions.AddIrregular(string, string)", file="DateHumanizeTests.cs", label="AddPlural(''('' + singular[0] + '')'' + singular.Substring(1) + ''$'', ''$1'' + plural.Substring(1))", span="142-142"];
m0_77 [cluster="Humanizer.InflectorExtensions.AddIrregular(string, string)", file="DateHumanizeTests.cs", label="AddSingular(''('' + plural[0] + '')'' + plural.Substring(1) + ''$'', ''$1'' + singular.Substring(1))", span="143-143"];
m0_78 [cluster="Humanizer.InflectorExtensions.AddIrregular(string, string)", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.AddIrregular(string, string)", span="140-140"];
m0_101 [cluster="Humanizer.InflectorExtensions.Pluralize(string, bool)", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.Pluralize(string, bool)", span="195-195"];
m0_102 [cluster="Humanizer.InflectorExtensions.Pluralize(string, bool)", file="DateHumanizeTests.cs", label="return Pluralize(word, inputIsSingular ? Plurality.Singular : Plurality.CouldBeEither);", span="197-197"];
m0_103 [cluster="Humanizer.InflectorExtensions.Pluralize(string, bool)", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.Pluralize(string, bool)", span="195-195"];
m0_63 [cluster="Humanizer.InflectorExtensions.AddUncountable(string)", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.AddUncountable(string)", span="146-146"];
m0_80 [cluster="Humanizer.InflectorExtensions.AddUncountable(string)", file="DateHumanizeTests.cs", label="Uncountables.Add(word.ToLower())", span="148-148"];
m0_81 [cluster="Humanizer.InflectorExtensions.AddUncountable(string)", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.AddUncountable(string)", span="146-146"];
m0_133 [cluster="string.Humanize(Humanizer.LetterCasing)", file="DateHumanizeTests.cs", label="Entry string.Humanize(Humanizer.LetterCasing)", span="65-65"];
m0_151 [cluster="Humanizer.InflectorExtensions.Dasherize(string)", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.Dasherize(string)", span="305-305"];
m0_152 [cluster="Humanizer.InflectorExtensions.Dasherize(string)", file="DateHumanizeTests.cs", label="return underscoredWord.Replace('_', '-');", span="307-307"];
m0_153 [cluster="Humanizer.InflectorExtensions.Dasherize(string)", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.Dasherize(string)", span="305-305"];
m0_137 [cluster="System.Text.RegularExpressions.Regex.Replace(string, string, System.Text.RegularExpressions.MatchEvaluator)", file="DateHumanizeTests.cs", label="Entry System.Text.RegularExpressions.Regex.Replace(string, string, System.Text.RegularExpressions.MatchEvaluator)", span="0-0"];
m0_64 [cluster="Humanizer.InflectorExtensions.Rule.Rule(string, string)", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.Rule.Rule(string, string)", span="123-123"];
m0_65 [cluster="Humanizer.InflectorExtensions.Rule.Rule(string, string)", file="DateHumanizeTests.cs", label="_regex = new Regex(pattern, RegexOptions.IgnoreCase)", span="125-125"];
m0_66 [cluster="Humanizer.InflectorExtensions.Rule.Rule(string, string)", file="DateHumanizeTests.cs", label="_replacement = replacement", span="126-126"];
m0_67 [cluster="Humanizer.InflectorExtensions.Rule.Rule(string, string)", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.Rule.Rule(string, string)", span="123-123"];
m0_138 [cluster="lambda expression", file="DateHumanizeTests.cs", label="Entry lambda expression", span="274-274"];
m0_139 [cluster="lambda expression", file="DateHumanizeTests.cs", label="match.Groups[1].Value.ToUpper()", span="274-274"];
m0_140 [cluster="lambda expression", file="DateHumanizeTests.cs", label="Exit lambda expression", span="274-274"];
m0_69 [cluster="Humanizer.InflectorExtensions.Rule.Apply(string)", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.Rule.Apply(string)", span="129-129"];
m0_70 [cluster="Humanizer.InflectorExtensions.Rule.Apply(string)", file="DateHumanizeTests.cs", label="!_regex.IsMatch(word)", span="131-131"];
m0_72 [cluster="Humanizer.InflectorExtensions.Rule.Apply(string)", file="DateHumanizeTests.cs", label="return _regex.Replace(word, _replacement);", span="136-136"];
m0_71 [cluster="Humanizer.InflectorExtensions.Rule.Apply(string)", file="DateHumanizeTests.cs", label="return null;", span="133-133"];
m0_73 [cluster="Humanizer.InflectorExtensions.Rule.Apply(string)", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.Rule.Apply(string)", span="129-129"];
m0_88 [cluster="Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", span="171-171"];
m0_89 [cluster="Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", file="DateHumanizeTests.cs", label="plurality == Plurality.Plural", span="173-173"];
m0_90 [cluster="Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", file="DateHumanizeTests.cs", label="return word;", span="174-174"];
m0_91 [cluster="Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", file="DateHumanizeTests.cs", label="var result = ApplyRules(Plurals, word)", span="176-176"];
m0_92 [cluster="Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", file="DateHumanizeTests.cs", label="plurality == Plurality.Singular", span="178-178"];
m0_94 [cluster="Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", file="DateHumanizeTests.cs", label="var asSingular = ApplyRules(Singulars, word)", span="181-181"];
m0_96 [cluster="Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", file="DateHumanizeTests.cs", label="asSingular != null && asSingular != word && asSingular + ''s'' != word && asSingularAsPlural == word && result != word", span="183-183"];
m0_97 [cluster="Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", file="DateHumanizeTests.cs", label="return word;", span="184-184"];
m0_93 [cluster="Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", file="DateHumanizeTests.cs", label="return result;", span="179-179"];
m0_98 [cluster="Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", file="DateHumanizeTests.cs", label="return result;", span="186-186"];
m0_95 [cluster="Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", file="DateHumanizeTests.cs", label="var asSingularAsPlural = ApplyRules(Plurals, asSingular)", span="182-182"];
m0_99 [cluster="Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", span="171-171"];
m0_68 [cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", file="DateHumanizeTests.cs", label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", span="0-0"];
m0_74 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string)", file="DateHumanizeTests.cs", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string)", span="0-0"];
m0_130 [cluster="Humanizer.InflectorExtensions.Titleize(string)", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.Titleize(string)", span="262-262"];
m0_131 [cluster="Humanizer.InflectorExtensions.Titleize(string)", file="DateHumanizeTests.cs", label="return input.Humanize(LetterCasing.Title);", span="264-264"];
m0_132 [cluster="Humanizer.InflectorExtensions.Titleize(string)", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.Titleize(string)", span="262-262"];
m0_116 [cluster="Humanizer.InflectorExtensions.Singularize(string, bool)", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.Singularize(string, bool)", span="231-231"];
m0_117 [cluster="Humanizer.InflectorExtensions.Singularize(string, bool)", file="DateHumanizeTests.cs", label="return Singularize(word, inputIsPlural ? Plurality.Plural : Plurality.CouldBeEither);", span="233-233"];
m0_118 [cluster="Humanizer.InflectorExtensions.Singularize(string, bool)", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.Singularize(string, bool)", span="231-231"];
m0_60 [cluster="Humanizer.InflectorExtensions.AddPlural(string, string)", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.AddPlural(string, string)", span="151-151"];
m0_84 [cluster="Humanizer.InflectorExtensions.AddPlural(string, string)", file="DateHumanizeTests.cs", label="Plurals.Add(new Rule(rule, replacement))", span="153-153"];
m0_85 [cluster="Humanizer.InflectorExtensions.AddPlural(string, string)", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.AddPlural(string, string)", span="151-151"];
m0_82 [cluster="string.ToLower()", file="DateHumanizeTests.cs", label="Entry string.ToLower()", span="0-0"];
m0_104 [cluster="Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", file="DateHumanizeTests.cs", label="Entry Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", span="206-206"];
m0_105 [cluster="Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", file="DateHumanizeTests.cs", label="plurality == Plurality.Singular", span="208-208"];
m0_106 [cluster="Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", file="DateHumanizeTests.cs", label="return word;", span="209-209"];
m0_107 [cluster="Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", file="DateHumanizeTests.cs", label="var result = ApplyRules(Singulars, word)", span="211-211"];
m0_108 [cluster="Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", file="DateHumanizeTests.cs", label="plurality == Plurality.Plural", span="213-213"];
m0_110 [cluster="Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", file="DateHumanizeTests.cs", label="var asPlural = ApplyRules(Plurals, word)", span="217-217"];
m0_112 [cluster="Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", file="DateHumanizeTests.cs", label="asPlural != word && word+''s'' != asPlural && asPluralAsSingular == word && result != word", span="219-219"];
m0_113 [cluster="Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", file="DateHumanizeTests.cs", label="return word;", span="220-220"];
m0_114 [cluster="Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", file="DateHumanizeTests.cs", label="return result ?? word;", span="222-222"];
m0_109 [cluster="Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", file="DateHumanizeTests.cs", label="return result;", span="214-214"];
m0_111 [cluster="Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", file="DateHumanizeTests.cs", label="var asPluralAsSingular = ApplyRules(Singulars, asPlural)", span="218-218"];
m0_115 [cluster="Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", file="DateHumanizeTests.cs", label="Exit Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", span="206-206"];
m0_79 [cluster="string.Substring(int)", file="DateHumanizeTests.cs", label="Entry string.Substring(int)", span="0-0"];
m0_158 [file="DateHumanizeTests.cs", label="Humanizer.InflectorExtensions.Rule", span=""];
m3_54 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="NumberToWordsTests.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m3_16 [cluster="Unk.Any", file="NumberToWordsTests.cs", label="Entry Unk.Any", span=""];
m3_43 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="NumberToWordsTests.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="68-68"];
m3_71 [cluster="System.Enum.Parse(System.Type, string)", file="NumberToWordsTests.cs", label="Entry System.Enum.Parse(System.Type, string)", span="0-0"];
m3_6 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", file="NumberToWordsTests.cs", label="var type =\r\n                conversionType.GetGenericArguments()\r\n                              .SingleOrDefault()\r\n                              .ToMaybe()\r\n                              .FromJust(\r\n                                  new ApplicationException(''Non scalar properties should be sequence of type IEnumerable<T>.''))", span="21-26"];
m3_5 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", file="NumberToWordsTests.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", span="19-19"];
m3_2 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="NumberToWordsTests.cs", label="Exit CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="12-12"];
m3_3 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="NumberToWordsTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m3_4 [cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", file="NumberToWordsTests.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", span="35-35"];
m3_73 [cluster="System.Enum.IsDefined(System.Type, object)", file="NumberToWordsTests.cs", label="Entry System.Enum.IsDefined(System.Type, object)", span="0-0"];
m3_53 [cluster="System.Nullable.GetUnderlyingType(System.Type)", file="NumberToWordsTests.cs", label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0"];
m3_0 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="NumberToWordsTests.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="12-12"];
m3_1 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="NumberToWordsTests.cs", label="return scalar\r\n                ? ChangeType(values.Single(), conversionType, conversionCulture)\r\n                : ChangeType(values, conversionType, conversionCulture);", span="14-16"];
m3_41 [cluster="CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", file="NumberToWordsTests.cs", label="Entry CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", span="83-83"];
m3_63 [cluster="CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", file="NumberToWordsTests.cs", label="object parsedValue", span="85-85"];
m3_64 [cluster="CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", file="NumberToWordsTests.cs", label="parsedValue = Enum.Parse(conversionType, value)", span="88-88"];
m3_67 [cluster="CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", file="NumberToWordsTests.cs", label="Enum.IsDefined(conversionType, parsedValue)", span="94-94"];
m3_65 [cluster="CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", file="NumberToWordsTests.cs", label=ArgumentException, span="90-90"];
m3_68 [cluster="CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", file="NumberToWordsTests.cs", label="return parsedValue;", span="96-96"];
m3_66 [cluster="CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", file="NumberToWordsTests.cs", label="throw new FormatException();", span="92-92"];
m3_69 [cluster="CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", file="NumberToWordsTests.cs", label="throw new FormatException();", span="98-98"];
m3_70 [cluster="CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", file="NumberToWordsTests.cs", label="Exit CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", span="83-83"];
m3_12 [cluster="T.ToMaybe<T>()", file="NumberToWordsTests.cs", label="Entry T.ToMaybe<T>()", span="79-79"];
m3_17 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="NumberToWordsTests.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63"];
m3_19 [cluster="Unk.Just", file="NumberToWordsTests.cs", label="Entry Unk.Just", span=""];
m3_26 [cluster="Unk.MatchNothing", file="NumberToWordsTests.cs", label="Entry Unk.MatchNothing", span=""];
m3_57 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", file="NumberToWordsTests.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", span="13-13"];
m3_14 [cluster="CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", file="NumberToWordsTests.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", span="134-134"];
m3_13 [cluster="System.ApplicationException.ApplicationException(string)", file="NumberToWordsTests.cs", label="Entry System.ApplicationException.ApplicationException(string)", span="0-0"];
m3_18 [cluster="Unk.ToArray", file="NumberToWordsTests.cs", label="Entry Unk.ToArray", span=""];
m3_39 [cluster="CommandLine.Core.TypeConverter.MatchBoolString(string)", file="NumberToWordsTests.cs", label="Entry CommandLine.Core.TypeConverter.MatchBoolString(string)", span="72-72"];
m3_58 [cluster="CommandLine.Core.TypeConverter.MatchBoolString(string)", file="NumberToWordsTests.cs", label="return value.Equals(''true'', StringComparison.OrdinalIgnoreCase)\r\n                   || value.Equals(''false'', StringComparison.OrdinalIgnoreCase);", span="74-75"];
m3_59 [cluster="CommandLine.Core.TypeConverter.MatchBoolString(string)", file="NumberToWordsTests.cs", label="Exit CommandLine.Core.TypeConverter.MatchBoolString(string)", span="72-72"];
m3_11 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="NumberToWordsTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m3_72 [cluster="System.FormatException.FormatException()", file="NumberToWordsTests.cs", label="Entry System.FormatException.FormatException()", span="0-0"];
m3_30 [cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", color=red, community=0, file="NumberToWordsTests.cs", label="1: Func<object> safeChangeType = () =>\r\n                    {\r\n                        Type t;\r\n                        if (!ReflectionHelper.IsFSharpOptionType(conversionType))\r\n                        {\r\n                            t = Nullable.GetUnderlyingType(conversionType) ?? conversionType;\r\n                            return (value == null) ? null : Convert.ChangeType(value, t, conversionCulture);\r\n                        }\r\n                        t = FSharpOptionHelper.GetUnderlyingType(conversionType);\r\n                        return (value == null) ? FSharpOptionHelper.None(t) : FSharpOptionHelper.Some(t, Convert.ChangeType(value, t, conversionCulture));\r\n                    }", span="39-49"];
m3_31 [cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", file="NumberToWordsTests.cs", label="return Maybe.Just(\r\n                    MatchBoolString(value)\r\n                        ? ConvertBoolString(value)\r\n                        : conversionType.IsEnum\r\n                            ? ConvertEnumString(value, conversionType)\r\n                            : safeChangeType());", span="51-56"];
m3_32 [cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", file="NumberToWordsTests.cs", label=InvalidCastException, span="58-58"];
m3_33 [cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", file="NumberToWordsTests.cs", label="return Maybe.Nothing<object>();", span="60-60"];
m3_34 [cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", file="NumberToWordsTests.cs", label=FormatException, span="62-62"];
m3_35 [cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", file="NumberToWordsTests.cs", label="return Maybe.Nothing<object>();", span="64-64"];
m3_36 [cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", file="NumberToWordsTests.cs", label=OverflowException, span="66-66"];
m3_37 [cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", file="NumberToWordsTests.cs", label="return Maybe.Nothing<object>();", span="68-68"];
m3_38 [cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", file="NumberToWordsTests.cs", label="Exit CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", span="35-35"];
m3_55 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", file="NumberToWordsTests.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", span="8-8"];
m3_7 [cluster="Humanizer.Tests.Localisation.he.NumberToWordsTests.NegativeToWords(int, string)", file="NumberToWordsTests.cs", label="Entry Humanizer.Tests.Localisation.he.NumberToWordsTests.NegativeToWords(int, string)", span="60-60"];
m3_8 [cluster="Humanizer.Tests.Localisation.he.NumberToWordsTests.NegativeToWords(int, string)", color=green, community=0, file="NumberToWordsTests.cs", label="1: Assert.Equal(expected, number.ToWords())", span="62-62"];
m3_9 [cluster="Humanizer.Tests.Localisation.he.NumberToWordsTests.NegativeToWords(int, string)", file="NumberToWordsTests.cs", label="Exit Humanizer.Tests.Localisation.he.NumberToWordsTests.NegativeToWords(int, string)", span="60-60"];
m3_10 [cluster="System.Type.GetGenericArguments()", file="NumberToWordsTests.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m3_40 [cluster="CommandLine.Core.TypeConverter.ConvertBoolString(string)", file="NumberToWordsTests.cs", label="Entry CommandLine.Core.TypeConverter.ConvertBoolString(string)", span="78-78"];
m3_61 [cluster="CommandLine.Core.TypeConverter.ConvertBoolString(string)", file="NumberToWordsTests.cs", label="return value.Equals(''true'', StringComparison.OrdinalIgnoreCase);", span="80-80"];
m3_62 [cluster="CommandLine.Core.TypeConverter.ConvertBoolString(string)", file="NumberToWordsTests.cs", label="Exit CommandLine.Core.TypeConverter.ConvertBoolString(string)", span="78-78"];
m3_44 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Entry lambda expression", span="39-49"];
m3_21 [cluster="lambda expression", file="NumberToWordsTests.cs", label="ChangeType(value, type, conversionCulture)", span="28-28"];
m3_20 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Entry lambda expression", span="28-28"];
m3_23 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Entry lambda expression", span="30-30"];
m3_27 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Entry lambda expression", span="32-32"];
m3_22 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Exit lambda expression", span="28-28"];
m3_24 [cluster="lambda expression", file="NumberToWordsTests.cs", label="a.MatchNothing()", span="30-30"];
m3_25 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Exit lambda expression", span="30-30"];
m3_28 [cluster="lambda expression", file="NumberToWordsTests.cs", label="((Just<object>)c).Value", span="32-32"];
m3_29 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Exit lambda expression", span="32-32"];
m3_46 [cluster="lambda expression", color=red, community=0, file="NumberToWordsTests.cs", label="1: !ReflectionHelper.IsFSharpOptionType(conversionType)", span="42-42"];
m3_47 [cluster="lambda expression", color=red, community=0, file="NumberToWordsTests.cs", label="1: t = Nullable.GetUnderlyingType(conversionType) ?? conversionType", span="44-44"];
m3_48 [cluster="lambda expression", color=red, community=0, file="NumberToWordsTests.cs", label="1: return (value == null) ? null : Convert.ChangeType(value, t, conversionCulture);", span="45-45"];
m3_49 [cluster="lambda expression", file="NumberToWordsTests.cs", label="t = FSharpOptionHelper.GetUnderlyingType(conversionType)", span="47-47"];
m3_50 [cluster="lambda expression", file="NumberToWordsTests.cs", label="return (value == null) ? FSharpOptionHelper.None(t) : FSharpOptionHelper.Some(t, Convert.ChangeType(value, t, conversionCulture));", span="48-48"];
m3_45 [cluster="lambda expression", color=red, community=0, file="NumberToWordsTests.cs", label="1: Type t", span="41-41"];
m3_51 [cluster="lambda expression", file="NumberToWordsTests.cs", label="Exit lambda expression", span="39-49"];
m3_60 [cluster="string.Equals(string, System.StringComparison)", file="NumberToWordsTests.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m3_15 [cluster="Unk.Select", file="NumberToWordsTests.cs", label="Entry Unk.Select", span=""];
m3_52 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="NumberToWordsTests.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="32-32"];
m3_56 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", file="NumberToWordsTests.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", span="26-26"];
m3_42 [cluster="System.Func<TResult>.Invoke()", file="NumberToWordsTests.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m3_74 [file="NumberToWordsTests.cs", label="System.Globalization.CultureInfo", span=""];
m3_75 [file="NumberToWordsTests.cs", label=type, span=""];
m3_76 [file="NumberToWordsTests.cs", label="System.Type", span=""];
m3_77 [file="NumberToWordsTests.cs", label=string, span=""];
m3_78 [file="NumberToWordsTests.cs", label="System.Globalization.CultureInfo", span=""];
m5_4 [cluster="Unk.Equal", file="PrecisionDateTimeHumanizeStrategy.cs", label="Entry Unk.Equal", span=""];
m5_3 [cluster="string.ToQuantity(int)", file="PrecisionDateTimeHumanizeStrategy.cs", label="Entry string.ToQuantity(int)", span="17-17"];
m5_0 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", file="PrecisionDateTimeHumanizeStrategy.cs", label="Entry Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", span="19-19"];
m5_1 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", file="PrecisionDateTimeHumanizeStrategy.cs", label="Assert.Equal(expected, word.ToQuantity(quatity))", span="21-21"];
m5_2 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", file="PrecisionDateTimeHumanizeStrategy.cs", label="Exit Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", span="19-19"];
m6_38 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.HoursAgo()", file="PrepositionsExtensions.cs", label="Entry Humanizer.Tests.Extensions.DateExtensionsTests.HoursAgo()", span="65-65"];
m6_39 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.HoursAgo()", file="PrepositionsExtensions.cs", label="Verify(string.Format(Resources.DateExtensions_HoursAgo__hours_ago, 10), new TimeSpan(0, -10, 0, 0))", span="67-67"];
m6_40 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.HoursAgo()", file="PrepositionsExtensions.cs", label="Exit Humanizer.Tests.Extensions.DateExtensionsTests.HoursAgo()", span="65-65"];
m6_5 [cluster="System.DateTime.Humanize(bool, System.DateTime?)", file="PrepositionsExtensions.cs", label="Entry System.DateTime.Humanize(bool, System.DateTime?)", span="9-9"];
m6_6 [cluster="Unk.Equal", file="PrepositionsExtensions.cs", label="Entry Unk.Equal", span=""];
m6_21 [cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file="PrepositionsExtensions.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0"];
m6_41 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.Yesterday()", file="PrepositionsExtensions.cs", label="Entry Humanizer.Tests.Extensions.DateExtensionsTests.Yesterday()", span="71-71"];
m6_42 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.Yesterday()", file="PrepositionsExtensions.cs", label="Verify(Resources.DateExtensions_Yesterday_yesterday, new TimeSpan(-1, -10, 0, 0))", span="73-73"];
m6_43 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.Yesterday()", file="PrepositionsExtensions.cs", label="Exit Humanizer.Tests.Extensions.DateExtensionsTests.Yesterday()", span="71-71"];
m6_13 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="PrepositionsExtensions.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m6_35 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.AnHourAgo()", file="PrepositionsExtensions.cs", label="Entry Humanizer.Tests.Extensions.DateExtensionsTests.AnHourAgo()", span="59-59"];
m6_36 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.AnHourAgo()", file="PrepositionsExtensions.cs", label="Verify(Resources.DateExtensions_OneHourAgo_an_hour_ago, new TimeSpan(0, -1, -10, 0))", span="61-61"];
m6_37 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.AnHourAgo()", file="PrepositionsExtensions.cs", label="Exit Humanizer.Tests.Extensions.DateExtensionsTests.AnHourAgo()", span="59-59"];
m6_44 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.AFewDaysAgo()", file="PrepositionsExtensions.cs", label="Entry Humanizer.Tests.Extensions.DateExtensionsTests.AFewDaysAgo()", span="77-77"];
m6_45 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.AFewDaysAgo()", file="PrepositionsExtensions.cs", label="Verify(string.Format(Resources.DateExtensions_DaysAgo__days_ago, 10), new TimeSpan(-10, 0, 0, 0))", span="79-79"];
m6_46 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.AFewDaysAgo()", file="PrepositionsExtensions.cs", label="Exit Humanizer.Tests.Extensions.DateExtensionsTests.AFewDaysAgo()", span="77-77"];
m6_56 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.OneYearAgo()", file="PrepositionsExtensions.cs", label="Entry Humanizer.Tests.Extensions.DateExtensionsTests.OneYearAgo()", span="101-101"];
m6_57 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.OneYearAgo()", file="PrepositionsExtensions.cs", label="Verify(Resources.DateExtensions_OneYearAgo_one_year_ago, new TimeSpan(-400, 0, 0, 0))", span="103-103"];
m6_58 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.OneYearAgo()", file="PrepositionsExtensions.cs", label="Exit Humanizer.Tests.Extensions.DateExtensionsTests.OneYearAgo()", span="101-101"];
m6_18 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.FutureDates()", file="PrepositionsExtensions.cs", label="Entry Humanizer.Tests.Extensions.DateExtensionsTests.FutureDates()", span="29-29"];
m6_19 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.FutureDates()", file="PrepositionsExtensions.cs", label="Verify(Resources.DateExtensions_FutureDate_not_yet, new TimeSpan(0, 0, 1, 0))", span="31-31"];
m6_20 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.FutureDates()", file="PrepositionsExtensions.cs", label="Exit Humanizer.Tests.Extensions.DateExtensionsTests.FutureDates()", span="29-29"];
m6_4 [cluster="System.DateTime.Add(System.TimeSpan)", file="PrepositionsExtensions.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m6_47 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.OneMonthAgo()", file="PrepositionsExtensions.cs", label="Entry Humanizer.Tests.Extensions.DateExtensionsTests.OneMonthAgo()", span="83-83"];
m6_48 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.OneMonthAgo()", file="PrepositionsExtensions.cs", label="Verify(Resources.DateExtensions_OneMonthAgo_one_month_ago, new TimeSpan(-30, 0, 0, 0))", span="85-85"];
m6_49 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.OneMonthAgo()", file="PrepositionsExtensions.cs", label="Exit Humanizer.Tests.Extensions.DateExtensionsTests.OneMonthAgo()", span="83-83"];
m6_29 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.OneMinuteAgo()", file="PrepositionsExtensions.cs", label="Entry Humanizer.Tests.Extensions.DateExtensionsTests.OneMinuteAgo()", span="47-47"];
m6_30 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.OneMinuteAgo()", file="PrepositionsExtensions.cs", label="Verify(Resources.DateExtensions_OneMinuteAgo_a_minute_ago, new TimeSpan(0, 0, -1, 0))", span="49-49"];
m6_31 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.OneMinuteAgo()", file="PrepositionsExtensions.cs", label="Exit Humanizer.Tests.Extensions.DateExtensionsTests.OneMinuteAgo()", span="47-47"];
m6_53 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.OneYearAgoIsNotAccureate()", file="PrepositionsExtensions.cs", label="Entry Humanizer.Tests.Extensions.DateExtensionsTests.OneYearAgoIsNotAccureate()", span="95-95"];
m6_54 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.OneYearAgoIsNotAccureate()", file="PrepositionsExtensions.cs", label="Verify(Resources.DateExtensions_OneYearAgo_one_year_ago, new TimeSpan(-360, 0, 0, 0))", span="97-97"];
m6_55 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.OneYearAgoIsNotAccureate()", file="PrepositionsExtensions.cs", label="Exit Humanizer.Tests.Extensions.DateExtensionsTests.OneYearAgoIsNotAccureate()", span="95-95"];
m6_7 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.VerifyWithDateInjection(string, System.TimeSpan)", file="PrepositionsExtensions.cs", label="Entry Humanizer.Tests.Extensions.DateExtensionsTests.VerifyWithDateInjection(string, System.TimeSpan)", span="13-13"];
m6_8 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.VerifyWithDateInjection(string, System.TimeSpan)", file="PrepositionsExtensions.cs", label="var utcNow = new DateTime(2013, 6, 20, 9, 58, 22, DateTimeKind.Utc)", span="15-15"];
m6_10 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.VerifyWithDateInjection(string, System.TimeSpan)", file="PrepositionsExtensions.cs", label="Assert.Equal(expectedString, utcNow.Add(deltaFromNow).Humanize(now: utcNow))", span="18-18"];
m6_11 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.VerifyWithDateInjection(string, System.TimeSpan)", file="PrepositionsExtensions.cs", label="Assert.Equal(expectedString, now.Add(deltaFromNow).Humanize(false, now))", span="19-19"];
m6_9 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.VerifyWithDateInjection(string, System.TimeSpan)", file="PrepositionsExtensions.cs", label="var now = new DateTime(2013, 6, 20, 11, 58, 22, DateTimeKind.Local)", span="16-16"];
m6_12 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.VerifyWithDateInjection(string, System.TimeSpan)", file="PrepositionsExtensions.cs", label="Exit Humanizer.Tests.Extensions.DateExtensionsTests.VerifyWithDateInjection(string, System.TimeSpan)", span="13-13"];
m6_22 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.JustNow()", file="PrepositionsExtensions.cs", label="Entry Humanizer.Tests.Extensions.DateExtensionsTests.JustNow()", span="35-35"];
m6_23 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.JustNow()", file="PrepositionsExtensions.cs", label="Verify(Resources.DateExtensions_OneSecondAgo_one_second_ago, new TimeSpan(0, 0, 0, -1))", span="37-37"];
m6_24 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.JustNow()", file="PrepositionsExtensions.cs", label="Exit Humanizer.Tests.Extensions.DateExtensionsTests.JustNow()", span="35-35"];
m6_25 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.SecondsAgo()", file="PrepositionsExtensions.cs", label="Entry Humanizer.Tests.Extensions.DateExtensionsTests.SecondsAgo()", span="41-41"];
m6_26 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.SecondsAgo()", file="PrepositionsExtensions.cs", label="Verify(string.Format(Resources.DateExtensions_SecondsAgo__seconds_ago, 10), new TimeSpan(0, 0, 0, -10))", span="43-43"];
m6_27 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.SecondsAgo()", file="PrepositionsExtensions.cs", label="Exit Humanizer.Tests.Extensions.DateExtensionsTests.SecondsAgo()", span="41-41"];
m6_50 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.AFewMonthsAgo()", file="PrepositionsExtensions.cs", label="Entry Humanizer.Tests.Extensions.DateExtensionsTests.AFewMonthsAgo()", span="89-89"];
m6_51 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.AFewMonthsAgo()", file="PrepositionsExtensions.cs", label="Verify(string.Format(Resources.DateExtensions_MonthsAgo__months_ago, 2), new TimeSpan(-60, 0, 0, 0))", span="91-91"];
m6_52 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.AFewMonthsAgo()", file="PrepositionsExtensions.cs", label="Exit Humanizer.Tests.Extensions.DateExtensionsTests.AFewMonthsAgo()", span="89-89"];
m6_14 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.Verify(string, System.TimeSpan)", file="PrepositionsExtensions.cs", label="Entry Humanizer.Tests.Extensions.DateExtensionsTests.Verify(string, System.TimeSpan)", span="22-22"];
m6_15 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.Verify(string, System.TimeSpan)", file="PrepositionsExtensions.cs", label="VerifyWithCurrentDate(expectedString, deltaFromNow)", span="24-24"];
m6_16 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.Verify(string, System.TimeSpan)", file="PrepositionsExtensions.cs", label="VerifyWithDateInjection(expectedString, deltaFromNow)", span="25-25"];
m6_17 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.Verify(string, System.TimeSpan)", file="PrepositionsExtensions.cs", label="Exit Humanizer.Tests.Extensions.DateExtensionsTests.Verify(string, System.TimeSpan)", span="22-22"];
m6_32 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.AFewMinutesAgo()", file="PrepositionsExtensions.cs", label="Entry Humanizer.Tests.Extensions.DateExtensionsTests.AFewMinutesAgo()", span="53-53"];
m6_33 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.AFewMinutesAgo()", file="PrepositionsExtensions.cs", label="Verify(string.Format(Resources.DateExtensions_MinutesAgo__minutes_ago, 10), new TimeSpan(0, 0, -10, 0))", span="55-55"];
m6_34 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.AFewMinutesAgo()", file="PrepositionsExtensions.cs", label="Exit Humanizer.Tests.Extensions.DateExtensionsTests.AFewMinutesAgo()", span="53-53"];
m6_0 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.VerifyWithCurrentDate(string, System.TimeSpan)", file="PrepositionsExtensions.cs", label="Entry Humanizer.Tests.Extensions.DateExtensionsTests.VerifyWithCurrentDate(string, System.TimeSpan)", span="7-7"];
m6_1 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.VerifyWithCurrentDate(string, System.TimeSpan)", file="PrepositionsExtensions.cs", label="Assert.Equal(expectedString, DateTime.UtcNow.Add(deltaFromNow).Humanize())", span="9-9"];
m6_2 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.VerifyWithCurrentDate(string, System.TimeSpan)", file="PrepositionsExtensions.cs", label="Assert.Equal(expectedString, DateTime.Now.Add(deltaFromNow).Humanize(false))", span="10-10"];
m6_3 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.VerifyWithCurrentDate(string, System.TimeSpan)", file="PrepositionsExtensions.cs", label="Exit Humanizer.Tests.Extensions.DateExtensionsTests.VerifyWithCurrentDate(string, System.TimeSpan)", span="7-7"];
m6_59 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.FewYearsAgo()", file="PrepositionsExtensions.cs", label="Entry Humanizer.Tests.Extensions.DateExtensionsTests.FewYearsAgo()", span="107-107"];
m6_60 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.FewYearsAgo()", file="PrepositionsExtensions.cs", label="Verify(string.Format(Resources.DateExtensions_YearsAgo__years_ago, 2), new TimeSpan(-900, 0, 0, 0))", span="109-109"];
m6_61 [cluster="Humanizer.Tests.Extensions.DateExtensionsTests.FewYearsAgo()", file="PrepositionsExtensions.cs", label="Exit Humanizer.Tests.Extensions.DateExtensionsTests.FewYearsAgo()", span="107-107"];
m6_62 [file="PrepositionsExtensions.cs", label="Humanizer.Tests.Extensions.DateExtensionsTests", span=""];
m9_11 [cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Get_underlying_type()", file="ToQuantityExtensions.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Get_underlying_type()", span="23-23"];
m9_10 [cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Get_underlying_type()", file="ToQuantityExtensions.cs", label="var expected = FSharpOptionHelper.GetUnderlyingType(prop.PropertyType)", span="27-27"];
m9_21 [cluster="Humanizer.Tests.Bytes.ByteRateTests.ThowsOnUnsupportedData(Humanizer.Localisation.TimeUnit)", file="ToQuantityExtensions.cs", label="Entry Humanizer.Tests.Bytes.ByteRateTests.ThowsOnUnsupportedData(Humanizer.Localisation.TimeUnit)", span="56-56"];
m9_22 [cluster="Humanizer.Tests.Bytes.ByteRateTests.ThowsOnUnsupportedData(Humanizer.Localisation.TimeUnit)", file="ToQuantityExtensions.cs", label="var dummyRate = ByteSize.FromBits(1).Per(TimeSpan.FromSeconds(1))", span="58-58"];
m9_23 [cluster="Humanizer.Tests.Bytes.ByteRateTests.ThowsOnUnsupportedData(Humanizer.Localisation.TimeUnit)", file="ToQuantityExtensions.cs", label="Assert.Throws<NotSupportedException>(() =>\r\n            {\r\n                dummyRate.Humanize(units);\r\n            })", span="60-63"];
m9_24 [cluster="Humanizer.Tests.Bytes.ByteRateTests.ThowsOnUnsupportedData(Humanizer.Localisation.TimeUnit)", file="ToQuantityExtensions.cs", label="Exit Humanizer.Tests.Bytes.ByteRateTests.ThowsOnUnsupportedData(Humanizer.Localisation.TimeUnit)", span="56-56"];
m9_20 [cluster="Humanizer.Bytes.ByteSize.FromMegabytes(double)", file="ToQuantityExtensions.cs", label="Entry Humanizer.Bytes.ByteSize.FromMegabytes(double)", span="130-130"];
m9_26 [cluster="Unk.>", file="ToQuantityExtensions.cs", label="Entry Unk.>", span=""];
m9_13 [cluster="Humanizer.Tests.Bytes.ByteRateTests.TimeUnitTests(long, double, Humanizer.Localisation.TimeUnit, string)", file="ToQuantityExtensions.cs", label="Entry Humanizer.Tests.Bytes.ByteRateTests.TimeUnitTests(long, double, Humanizer.Localisation.TimeUnit, string)", span="39-39"];
m9_15 [cluster="Humanizer.Tests.Bytes.ByteRateTests.TimeUnitTests(long, double, Humanizer.Localisation.TimeUnit, string)", color=green, community=0, file="ToQuantityExtensions.cs", label="1: var measurementInterval = TimeSpan.FromSeconds(measurementIntervalSeconds)", span="42-42"];
m9_14 [cluster="Humanizer.Tests.Bytes.ByteRateTests.TimeUnitTests(long, double, Humanizer.Localisation.TimeUnit, string)", file="ToQuantityExtensions.cs", label="var size = ByteSize.FromMegabytes(megabytes)", span="41-41"];
m9_16 [cluster="Humanizer.Tests.Bytes.ByteRateTests.TimeUnitTests(long, double, Humanizer.Localisation.TimeUnit, string)", file="ToQuantityExtensions.cs", label="var rate = size.Per(measurementInterval)", span="44-44"];
m9_18 [cluster="Humanizer.Tests.Bytes.ByteRateTests.TimeUnitTests(long, double, Humanizer.Localisation.TimeUnit, string)", file="ToQuantityExtensions.cs", label="Assert.Equal(expectedValue, text)", span="47-47"];
m9_17 [cluster="Humanizer.Tests.Bytes.ByteRateTests.TimeUnitTests(long, double, Humanizer.Localisation.TimeUnit, string)", file="ToQuantityExtensions.cs", label="var text = rate.Humanize(displayInterval)", span="45-45"];
m9_19 [cluster="Humanizer.Tests.Bytes.ByteRateTests.TimeUnitTests(long, double, Humanizer.Localisation.TimeUnit, string)", file="ToQuantityExtensions.cs", label="Exit Humanizer.Tests.Bytes.ByteRateTests.TimeUnitTests(long, double, Humanizer.Localisation.TimeUnit, string)", span="39-39"];
m9_7 [cluster="Humanizer.Tests.Bytes.ByteRateTests.HumanizesRates(long, double, string)", file="ToQuantityExtensions.cs", label="Exit Humanizer.Tests.Bytes.ByteRateTests.HumanizesRates(long, double, string)", span="19-19"];
m9_25 [cluster="Humanizer.Bytes.ByteSize.FromBits(long)", file="ToQuantityExtensions.cs", label="Entry Humanizer.Bytes.ByteSize.FromBits(long)", span="115-115"];
m9_6 [cluster="Humanizer.Tests.Bytes.ByteRateTests.HumanizesRates(long, double, string)", color=green, community=0, file="ToQuantityExtensions.cs", label="1: Assert.Equal(expectedValue, rate)", span="26-26"];
m9_8 [cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="ToQuantityExtensions.cs", label="Entry Humanizer.Bytes.ByteSize.ByteSize(double)", span="102-102"];
m9_9 [cluster="System.TimeSpan.FromSeconds(double)", file="ToQuantityExtensions.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m9_12 [cluster="Unk.Equal", file="ToQuantityExtensions.cs", label="Entry Unk.Equal", span=""];
m9_5 [cluster="Humanizer.Tests.Bytes.ByteRateTests.HumanizesRates(long, double, string)", file="ToQuantityExtensions.cs", label="var rate = size.Per(interval).Humanize()", span="24-24"];
m9_2 [cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Match_type_returns_true_if_FSharpOption()", file="ToQuantityExtensions.cs", label="ReflectionHelper.IsFSharpOptionType(prop.PropertyType).Should().BeTrue()", span="19-19"];
m9_3 [cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Match_type_returns_true_if_FSharpOption()", color=green, community=0, file="ToQuantityExtensions.cs", label="0: Exit CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Match_type_returns_true_if_FSharpOption()", span="15-15"];
m9_4 [cluster="System.Type.GetProperty(string, System.Reflection.BindingFlags)", color=green, community=0, file="ToQuantityExtensions.cs", label="1: Entry System.Type.GetProperty(string, System.Reflection.BindingFlags)", span="0-0"];
m9_27 [cluster="lambda expression", file="ToQuantityExtensions.cs", label="Entry lambda expression", span="60-63"];
m9_28 [cluster="lambda expression", file="ToQuantityExtensions.cs", label="dummyRate.Humanize(units)", span="62-62"];
m9_29 [cluster="lambda expression", file="ToQuantityExtensions.cs", label="Exit lambda expression", span="60-63"];
m9_0 [cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Match_type_returns_true_if_FSharpOption()", file="ToQuantityExtensions.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Match_type_returns_true_if_FSharpOption()", span="15-15"];
m9_1 [cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.Match_type_returns_true_if_FSharpOption()", file="ToQuantityExtensions.cs", label="var prop = typeof(FakeOptionsWithFSharpOption).GetProperty(''FileName'', BindingFlags.Public | BindingFlags.Instance)", span="17-17"];
m9_30 [file="ToQuantityExtensions.cs", label="Humanizer.Localisation.TimeUnit", span=""];
m9_31 [file="ToQuantityExtensions.cs", label=dummyRate, span=""];
n95 -> n4  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter", style=dashed];
n95 -> n8  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter", style=dashed];
n95 -> n14  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter", style=dashed];
n95 -> n20  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter", style=dashed];
n95 -> n24  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter", style=dashed];
n95 -> n43  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter", style=dashed];
n95 -> n56  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter", style=dashed];
n95 -> n61  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter", style=dashed];
n95 -> n64  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter", style=dashed];
n95 -> n68  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter", style=dashed];
n95 -> n71  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter", style=dashed];
n95 -> n81  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter", style=dashed];
n0 -> n1  [key=0, style=solid];
n0 -> n3  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n4  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n6  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n9  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n12  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n15  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n18  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n21  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n22  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n25  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n26  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n27  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n28  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n29  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n31  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n34  [color=darkseagreen4, key=1, label=int, style=dashed];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n3 -> n5  [key=0, style=solid];
n4 -> n36  [key=0, style=solid];
n4 -> n0  [key=2, style=dotted];
n4 -> n37  [key=2, style=dotted];
n6 -> n7  [key=0, style=solid];
n6 -> n8  [color=darkseagreen4, key=1, label=billions, style=dashed];
n9 -> n10  [key=0, style=solid];
n9 -> n9  [color=darkseagreen4, key=1, label=int, style=dashed];
n9 -> n12  [color=darkseagreen4, key=1, label=int, style=dashed];
n9 -> n15  [color=darkseagreen4, key=1, label=int, style=dashed];
n9 -> n18  [color=darkseagreen4, key=1, label=int, style=dashed];
n9 -> n21  [color=darkseagreen4, key=1, label=int, style=dashed];
n9 -> n22  [color=darkseagreen4, key=1, label=int, style=dashed];
n9 -> n25  [color=darkseagreen4, key=1, label=int, style=dashed];
n9 -> n26  [color=darkseagreen4, key=1, label=int, style=dashed];
n9 -> n27  [color=darkseagreen4, key=1, label=int, style=dashed];
n9 -> n28  [color=darkseagreen4, key=1, label=int, style=dashed];
n9 -> n29  [color=darkseagreen4, key=1, label=int, style=dashed];
n9 -> n31  [color=darkseagreen4, key=1, label=int, style=dashed];
n9 -> n34  [color=darkseagreen4, key=1, label=int, style=dashed];
n12 -> n13  [key=0, style=solid];
n12 -> n14  [color=darkseagreen4, key=1, label=millions, style=dashed];
n15 -> n16  [key=0, style=solid];
n15 -> n15  [color=darkseagreen4, key=1, label=int, style=dashed];
n15 -> n18  [color=darkseagreen4, key=1, label=int, style=dashed];
n15 -> n21  [color=darkseagreen4, key=1, label=int, style=dashed];
n15 -> n22  [color=darkseagreen4, key=1, label=int, style=dashed];
n15 -> n25  [color=darkseagreen4, key=1, label=int, style=dashed];
n15 -> n26  [color=darkseagreen4, key=1, label=int, style=dashed];
n15 -> n27  [color=darkseagreen4, key=1, label=int, style=dashed];
n15 -> n28  [color=darkseagreen4, key=1, label=int, style=dashed];
n15 -> n29  [color=darkseagreen4, key=1, label=int, style=dashed];
n15 -> n31  [color=darkseagreen4, key=1, label=int, style=dashed];
n15 -> n34  [color=darkseagreen4, key=1, label=int, style=dashed];
n18 -> n19  [key=0, style=solid];
n18 -> n20  [color=darkseagreen4, key=1, label=thousands, style=dashed];
n18 -> n18  [color=darkorchid, key=3, label="Field variable string KilobyteSymbol", style=bold];
n21 -> n22  [key=0, style=solid];
n21 -> n21  [color=darkseagreen4, key=1, label=int, style=dashed];
n21 -> n25  [color=darkseagreen4, key=1, label=int, style=dashed];
n21 -> n26  [color=darkseagreen4, key=1, label=int, style=dashed];
n21 -> n27  [color=darkseagreen4, key=1, label=int, style=dashed];
n21 -> n28  [color=darkseagreen4, key=1, label=int, style=dashed];
n21 -> n29  [color=darkseagreen4, key=1, label=int, style=dashed];
n21 -> n31  [color=darkseagreen4, key=1, label=int, style=dashed];
n21 -> n34  [color=darkseagreen4, key=1, label=int, style=dashed];
n22 -> n23  [key=0, style=solid];
n22 -> n24  [color=darkseagreen4, key=1, label=hundreds, style=dashed];
n25 -> n26  [key=0, style=solid];
n25 -> n25  [color=darkseagreen4, key=1, label=int, style=dashed];
n25 -> n27  [color=darkseagreen4, key=1, label=int, style=dashed];
n25 -> n28  [color=darkseagreen4, key=1, label=int, style=dashed];
n25 -> n29  [color=darkseagreen4, key=1, label=int, style=dashed];
n25 -> n31  [color=darkseagreen4, key=1, label=int, style=dashed];
n25 -> n34  [color=darkseagreen4, key=1, label=int, style=dashed];
n26 -> n27  [key=0, style=solid];
n26 -> n35  [key=0, style=solid];
n27 -> n28  [key=0, style=solid];
n27 -> n31  [key=0, style=solid];
n28 -> n29  [key=0, style=solid];
n28 -> n30  [key=0, style=solid];
n29 -> n35  [key=0, style=solid];
n29 -> n40  [key=2, style=dotted];
n31 -> n32  [key=0, style=solid];
n31 -> n33  [color=darkseagreen4, key=1, label=units, style=dashed];
n34 -> n35  [key=0, style=solid];
n34 -> n40  [key=2, style=dotted];
n2 -> n36  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n5 -> n38  [key=2, style=dotted];
n5 -> n8  [color=darkseagreen4, key=1, label=parts, style=dashed];
n5 -> n11  [color=darkseagreen4, key=1, label=parts, style=dashed];
n5 -> n14  [color=darkseagreen4, key=1, label=parts, style=dashed];
n5 -> n17  [color=darkseagreen4, key=1, label=parts, style=dashed];
n5 -> n20  [color=darkseagreen4, key=1, label=parts, style=dashed];
n5 -> n24  [color=darkseagreen4, key=1, label=parts, style=dashed];
n5 -> n29  [color=darkseagreen4, key=1, label=parts, style=dashed];
n5 -> n30  [color=darkseagreen4, key=1, label=parts, style=dashed];
n5 -> n33  [color=darkseagreen4, key=1, label=parts, style=dashed];
n5 -> n34  [color=darkseagreen4, key=1, label=parts, style=dashed];
n5 -> n35  [color=darkseagreen4, key=1, label=parts, style=dashed];
n8 -> n9  [key=0, style=solid];
n8 -> n39  [key=2, style=dotted];
n8 -> n40  [key=2, style=dotted];
n11 -> n12  [key=0, style=solid];
n11 -> n40  [key=2, style=dotted];
n14 -> n15  [key=0, style=solid];
n14 -> n39  [key=2, style=dotted];
n14 -> n40  [key=2, style=dotted];
n14 -> n14  [color=darkorchid, key=3, label="Field variable long BytesInMegabyte", style=bold];
n17 -> n18  [key=0, style=solid];
n17 -> n40  [key=2, style=dotted];
n20 -> n21  [key=0, style=solid];
n20 -> n39  [key=2, style=dotted];
n20 -> n40  [key=2, style=dotted];
n20 -> n20  [color=darkorchid, key=3, label="Field variable string TerabyteSymbol", style=bold];
n24 -> n25  [key=0, style=solid];
n24 -> n39  [key=2, style=dotted];
n24 -> n40  [key=2, style=dotted];
n30 -> n35  [key=0, style=solid];
n30 -> n40  [key=2, style=dotted];
n33 -> n34  [key=0, style=solid];
n33 -> n37  [key=2, style=dotted];
n33 -> n40  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid];
n35 -> n41  [key=2, style=dotted];
n7 -> n8  [key=0, style=solid];
n7 -> n12  [key=0, style=solid];
n39 -> n79  [key=0, style=solid];
n39 -> n80  [color=darkseagreen4, key=1, label=string, style=dashed];
n39 -> n81  [color=darkseagreen4, key=1, label=string, style=dashed];
n10 -> n11  [key=0, style=solid];
n10 -> n12  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n13 -> n18  [key=0, style=solid];
n13 -> n13  [color=darkorchid, key=3, label="Field variable long BitsInByte", style=bold];
n16 -> n17  [key=0, style=solid];
n16 -> n18  [key=0, style=solid];
n16 -> n16  [color=darkorchid, key=3, label="Field variable long BytesInTerabyte", style=bold];
n19 -> n20  [key=0, style=solid];
n19 -> n22  [key=0, style=solid];
n19 -> n19  [color=darkorchid, key=3, label="Field variable string MegabyteSymbol", style=bold];
n23 -> n24  [key=0, style=solid];
n23 -> n26  [key=0, style=solid];
n32 -> n33  [key=0, style=solid];
n32 -> n34  [key=0, style=solid];
n36 -> n0  [color=blue, key=0, style=bold];
n42 -> n43  [key=0, style=solid];
n43 -> n44  [key=0, style=solid];
n43 -> n45  [key=2, style=dotted];
n44 -> n42  [color=blue, key=0, style=bold];
n45 -> n46  [key=0, style=solid];
n45 -> n47  [color=darkseagreen4, key=1, label="Humanizer.GrammaticalGender", style=dashed];
n45 -> n49  [color=darkseagreen4, key=1, label=int, style=dashed];
n45 -> n51  [color=darkseagreen4, key=1, label=int, style=dashed];
n45 -> n52  [color=darkseagreen4, key=1, label=int, style=dashed];
n45 -> n54  [color=darkseagreen4, key=1, label=int, style=dashed];
n45 -> n57  [color=darkseagreen4, key=1, label=int, style=dashed];
n45 -> n59  [color=darkseagreen4, key=1, label=int, style=dashed];
n45 -> n62  [color=darkseagreen4, key=1, label=int, style=dashed];
n45 -> n65  [color=darkseagreen4, key=1, label=int, style=dashed];
n45 -> n66  [color=darkseagreen4, key=1, label=int, style=dashed];
n45 -> n69  [color=darkseagreen4, key=1, label=int, style=dashed];
n45 -> n70  [color=darkseagreen4, key=1, label=int, style=dashed];
n45 -> n71  [color=darkseagreen4, key=1, label=int, style=dashed];
n45 -> n72  [color=darkseagreen4, key=1, label=int, style=dashed];
n45 -> n74  [color=darkseagreen4, key=1, label="Humanizer.GrammaticalGender", style=dashed];
n46 -> n47  [key=0, style=solid];
n46 -> n48  [key=0, style=solid];
n47 -> n76  [key=0, style=solid];
n47 -> n77  [key=2, style=dotted];
n49 -> n50  [key=0, style=solid];
n49 -> n52  [key=0, style=solid];
n51 -> n52  [key=0, style=solid];
n51 -> n51  [color=darkseagreen4, key=1, label=int, style=dashed];
n51 -> n54  [color=darkseagreen4, key=1, label=int, style=dashed];
n51 -> n57  [color=darkseagreen4, key=1, label=int, style=dashed];
n51 -> n59  [color=darkseagreen4, key=1, label=int, style=dashed];
n51 -> n62  [color=darkseagreen4, key=1, label=int, style=dashed];
n51 -> n65  [color=darkseagreen4, key=1, label=int, style=dashed];
n51 -> n66  [color=darkseagreen4, key=1, label=int, style=dashed];
n51 -> n69  [color=darkseagreen4, key=1, label=int, style=dashed];
n51 -> n70  [color=darkseagreen4, key=1, label=int, style=dashed];
n51 -> n71  [color=darkseagreen4, key=1, label=int, style=dashed];
n51 -> n72  [color=darkseagreen4, key=1, label=int, style=dashed];
n52 -> n53  [key=0, style=solid];
n52 -> n56  [color=darkseagreen4, key=1, label=billions, style=dashed];
n54 -> n55  [key=0, style=solid];
n54 -> n54  [color=darkseagreen4, key=1, label=int, style=dashed];
n54 -> n57  [color=darkseagreen4, key=1, label=int, style=dashed];
n54 -> n59  [color=darkseagreen4, key=1, label=int, style=dashed];
n54 -> n62  [color=darkseagreen4, key=1, label=int, style=dashed];
n54 -> n65  [color=darkseagreen4, key=1, label=int, style=dashed];
n54 -> n66  [color=darkseagreen4, key=1, label=int, style=dashed];
n54 -> n69  [color=darkseagreen4, key=1, label=int, style=dashed];
n54 -> n70  [color=darkseagreen4, key=1, label=int, style=dashed];
n54 -> n71  [color=darkseagreen4, key=1, label=int, style=dashed];
n54 -> n72  [color=darkseagreen4, key=1, label=int, style=dashed];
n57 -> n58  [key=0, style=solid];
n57 -> n61  [color=darkseagreen4, key=1, label=millions, style=dashed];
n59 -> n60  [key=0, style=solid];
n59 -> n59  [color=darkseagreen4, key=1, label=int, style=dashed];
n59 -> n62  [color=darkseagreen4, key=1, label=int, style=dashed];
n59 -> n65  [color=darkseagreen4, key=1, label=int, style=dashed];
n59 -> n66  [color=darkseagreen4, key=1, label=int, style=dashed];
n59 -> n69  [color=darkseagreen4, key=1, label=int, style=dashed];
n59 -> n70  [color=darkseagreen4, key=1, label=int, style=dashed];
n59 -> n71  [color=darkseagreen4, key=1, label=int, style=dashed];
n59 -> n72  [color=darkseagreen4, key=1, label=int, style=dashed];
n62 -> n63  [key=0, style=solid];
n62 -> n64  [color=darkseagreen4, key=1, label=thousands, style=dashed];
n65 -> n66  [key=0, style=solid];
n65 -> n65  [color=darkseagreen4, key=1, label=int, style=dashed];
n65 -> n69  [color=darkseagreen4, key=1, label=int, style=dashed];
n65 -> n70  [color=darkseagreen4, key=1, label=int, style=dashed];
n65 -> n71  [color=darkseagreen4, key=1, label=int, style=dashed];
n65 -> n72  [color=darkseagreen4, key=1, label=int, style=dashed];
n66 -> n67  [key=0, style=solid];
n66 -> n68  [color=darkseagreen4, key=1, label=hundreds, style=dashed];
n69 -> n70  [key=0, style=solid];
n69 -> n69  [color=darkseagreen4, key=1, label=int, style=dashed];
n69 -> n71  [color=darkseagreen4, key=1, label=int, style=dashed];
n69 -> n72  [color=darkseagreen4, key=1, label=int, style=dashed];
n70 -> n71  [key=0, style=solid];
n70 -> n72  [key=0, style=solid];
n71 -> n72  [key=0, style=solid];
n71 -> n0  [key=2, style=dotted];
n71 -> n40  [key=2, style=dotted];
n72 -> n73  [key=0, style=solid];
n72 -> n74  [key=0, style=solid];
n74 -> n75  [key=0, style=solid];
n74 -> n77  [key=2, style=dotted];
n74 -> n40  [key=2, style=dotted];
n48 -> n49  [key=0, style=solid];
n48 -> n38  [key=2, style=dotted];
n48 -> n50  [color=darkseagreen4, key=1, label=parts, style=dashed];
n48 -> n56  [color=darkseagreen4, key=1, label=parts, style=dashed];
n48 -> n61  [color=darkseagreen4, key=1, label=parts, style=dashed];
n48 -> n64  [color=darkseagreen4, key=1, label=parts, style=dashed];
n48 -> n68  [color=darkseagreen4, key=1, label=parts, style=dashed];
n48 -> n71  [color=darkseagreen4, key=1, label=parts, style=dashed];
n48 -> n73  [color=darkseagreen4, key=1, label=parts, style=dashed];
n48 -> n74  [color=darkseagreen4, key=1, label=parts, style=dashed];
n48 -> n75  [color=darkseagreen4, key=1, label=parts, style=dashed];
n50 -> n51  [key=0, style=solid];
n50 -> n40  [key=2, style=dotted];
n56 -> n57  [key=0, style=solid];
n56 -> n39  [key=2, style=dotted];
n56 -> n40  [key=2, style=dotted];
n61 -> n62  [key=0, style=solid];
n61 -> n39  [key=2, style=dotted];
n61 -> n40  [key=2, style=dotted];
n64 -> n65  [key=0, style=solid];
n64 -> n39  [key=2, style=dotted];
n64 -> n40  [key=2, style=dotted];
n68 -> n69  [key=0, style=solid];
n68 -> n39  [key=2, style=dotted];
n68 -> n40  [key=2, style=dotted];
n73 -> n74  [key=0, style=solid];
n73 -> n40  [key=2, style=dotted];
n75 -> n76  [key=0, style=solid];
n75 -> n41  [key=2, style=dotted];
n53 -> n54  [key=0, style=solid];
n53 -> n57  [key=0, style=solid];
n55 -> n56  [key=0, style=solid];
n55 -> n78  [key=2, style=dotted];
n78 -> n83  [key=0, style=solid];
n58 -> n59  [key=0, style=solid];
n58 -> n62  [key=0, style=solid];
n60 -> n61  [key=0, style=solid];
n60 -> n78  [key=2, style=dotted];
n63 -> n64  [key=0, style=solid];
n63 -> n66  [key=0, style=solid];
n67 -> n68  [key=0, style=solid];
n67 -> n70  [key=0, style=solid];
n77 -> n85  [key=0, style=solid];
n76 -> n45  [color=blue, key=0, style=bold];
n79 -> n80  [key=0, style=solid];
n79 -> n81  [key=0, style=solid];
n80 -> n82  [key=0, style=solid];
n81 -> n82  [key=0, style=solid];
n81 -> n0  [key=2, style=dotted];
n81 -> n37  [key=2, style=dotted];
n82 -> n39  [color=blue, key=0, style=bold];
n83 -> n84  [key=0, style=solid];
n84 -> n78  [color=blue, key=0, style=bold];
n85 -> n86  [key=0, style=solid];
n85 -> n88  [key=0, style=solid];
n85 -> n90  [key=0, style=solid];
n85 -> n92  [key=0, style=solid];
n86 -> n87  [key=0, style=solid];
n88 -> n89  [key=0, style=solid];
n90 -> n91  [key=0, style=solid];
n92 -> n93  [key=0, style=solid];
n92 -> n94  [key=2, style=dotted];
n87 -> n93  [key=0, style=solid];
n89 -> n93  [key=0, style=solid];
n91 -> n93  [key=0, style=solid];
n93 -> n77  [color=blue, key=0, style=bold];
m0_142 -> m0_143  [key=0, style=solid];
m0_143 -> m0_144  [key=0, style=solid];
m0_143 -> m0_134  [key=2, style=dotted];
m0_144 -> m0_145  [key=0, style=solid];
m0_144 -> m0_146  [key=2, style=dotted];
m0_144 -> m0_82  [key=2, style=dotted];
m0_144 -> m0_79  [key=2, style=dotted];
m0_145 -> m0_142  [color=blue, key=0, style=bold];
m0_100 -> m0_119  [key=0, style=solid];
m0_100 -> m0_121  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_100 -> m0_122  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_100 -> m0_123  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>", style=dashed];
m0_100 -> m0_125  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<Humanizer.InflectorExtensions.Rule>", style=dashed];
m0_119 -> m0_120  [key=0, style=solid];
m0_119 -> m0_121  [key=0, style=solid];
m0_121 -> m0_122  [key=0, style=solid];
m0_121 -> m0_127  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_122 -> m0_123  [key=0, style=solid];
m0_122 -> m0_127  [key=0, style=solid];
m0_122 -> m0_82  [key=2, style=dotted];
m0_122 -> m0_129  [key=2, style=dotted];
m0_123 -> m0_124  [key=0, style=solid];
m0_123 -> m0_125  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_123 -> m0_126  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_127  [key=0, style=solid];
m0_125 -> m0_69  [key=2, style=dotted];
m0_120 -> m0_128  [key=0, style=solid];
m0_127 -> m0_128  [key=0, style=solid];
m0_124 -> m0_125  [key=0, style=solid];
m0_124 -> m0_127  [key=0, style=solid];
m0_126 -> m0_124  [key=0, style=solid];
m0_126 -> m0_126  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_128 -> m0_100  [color=blue, key=0, style=bold];
m0_147 -> m0_148  [key=0, style=solid];
m0_148 -> m0_149  [key=0, style=solid];
m0_148 -> m0_150  [key=2, style=dotted];
m0_148 -> m0_82  [key=2, style=dotted];
m0_149 -> m0_147  [color=blue, key=0, style=bold];
m0_155 -> m0_156  [key=0, style=solid];
m0_156 -> m0_157  [key=0, style=solid];
m0_156 -> m0_151  [key=2, style=dotted];
m0_157 -> m0_155  [color=blue, key=0, style=bold];
m0_61 -> m0_86  [key=0, style=solid];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_64  [key=2, style=dotted];
m0_86 -> n40  [key=2, style=dotted];
m0_87 -> m0_61  [color=blue, key=0, style=bold];
m0_134 -> m0_135  [key=0, style=solid];
m0_135 -> m0_136  [key=0, style=solid];
m0_135 -> m0_137  [key=2, style=dotted];
m0_135 -> m0_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_136 -> m0_134  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [color=red, key=0, style=solid];
m0_1 -> m0_2  [color=red, key=0, style=solid];
m0_1 -> m0_60  [color=red, key=2, style=dotted];
m0_2 -> m0_3  [color=red, key=0, style=solid];
m0_2 -> m0_60  [color=red, key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_60  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_60  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_60  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_60  [key=2, style=dotted];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_60  [key=2, style=dotted];
m0_8 -> m0_9  [color=red, key=0, style=solid];
m0_8 -> m0_60  [key=2, style=dotted];
m0_9 -> m0_10  [color=red, key=0, style=solid];
m0_9 -> m0_60  [color=red, key=2, style=dotted];
m0_10 -> m0_11  [color=red, key=0, style=solid];
m0_10 -> m0_60  [color=red, key=2, style=dotted];
m0_11 -> m0_12  [color=red, key=0, style=solid];
m0_11 -> m0_60  [color=red, key=2, style=dotted];
m0_12 -> m0_13  [color=red, key=0, style=solid];
m0_12 -> m0_60  [color=red, key=2, style=dotted];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_60  [key=2, style=dotted];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_60  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_60  [key=2, style=dotted];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_60  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_60  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_61  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_61  [key=2, style=dotted];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_61  [key=2, style=dotted];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_61  [key=2, style=dotted];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_61  [key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_61  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_61  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_61  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_61  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_61  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_61  [key=2, style=dotted];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_61  [key=2, style=dotted];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_61  [key=2, style=dotted];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_61  [key=2, style=dotted];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_61  [key=2, style=dotted];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_61  [key=2, style=dotted];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_61  [key=2, style=dotted];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_61  [key=2, style=dotted];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_61  [key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_61  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_61  [key=2, style=dotted];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_61  [key=2, style=dotted];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_61  [key=2, style=dotted];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_61  [key=2, style=dotted];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_62  [key=2, style=dotted];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_62  [key=2, style=dotted];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_62  [key=2, style=dotted];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_62  [key=2, style=dotted];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_62  [key=2, style=dotted];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_62  [key=2, style=dotted];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_62  [key=2, style=dotted];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_63  [key=2, style=dotted];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_63  [key=2, style=dotted];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_63  [key=2, style=dotted];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_63  [key=2, style=dotted];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_63  [key=2, style=dotted];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_63  [key=2, style=dotted];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_63  [key=2, style=dotted];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_63  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_63  [key=2, style=dotted];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_63  [key=2, style=dotted];
m0_59 -> m0_0  [color=blue, key=0, style=bold];
m0_62 -> m0_76  [key=0, style=solid];
m0_62 -> m0_77  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_79  [key=2, style=dotted];
m0_76 -> m0_60  [key=2, style=dotted];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_79  [key=2, style=dotted];
m0_77 -> m0_61  [key=2, style=dotted];
m0_78 -> m0_62  [color=blue, key=0, style=bold];
m0_101 -> m0_102  [key=0, style=solid];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_88  [key=2, style=dotted];
m0_103 -> m0_101  [color=blue, key=0, style=bold];
m0_63 -> m0_80  [key=0, style=solid];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_82  [key=2, style=dotted];
m0_80 -> n40  [key=2, style=dotted];
m0_81 -> m0_63  [color=blue, key=0, style=bold];
m0_151 -> m0_152  [key=0, style=solid];
m0_152 -> m0_153  [key=0, style=solid];
m0_152 -> m0_154  [key=2, style=dotted];
m0_153 -> m0_151  [color=blue, key=0, style=bold];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_66  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_68  [key=2, style=dotted];
m0_66 -> m0_67  [key=0, style=solid];
m0_67 -> m0_64  [color=blue, key=0, style=bold];
m0_138 -> m0_139  [key=0, style=solid];
m0_139 -> m0_140  [key=0, style=solid];
m0_139 -> m0_141  [key=2, style=dotted];
m0_140 -> m0_138  [color=blue, key=0, style=bold];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_72  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_72  [key=0, style=solid];
m0_70 -> m0_74  [key=2, style=dotted];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_75  [key=2, style=dotted];
m0_71 -> m0_73  [key=0, style=solid];
m0_73 -> m0_69  [color=blue, key=0, style=bold];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_90  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_88 -> m0_91  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_88 -> m0_92  [color=darkseagreen4, key=1, label="Humanizer.Plurality", style=dashed];
m0_88 -> m0_94  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_88 -> m0_96  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_88 -> m0_97  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_91  [key=0, style=solid];
m0_90 -> m0_99  [key=0, style=solid];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_100  [key=2, style=dotted];
m0_91 -> m0_93  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_91 -> m0_96  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_91 -> m0_98  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_94  [key=0, style=solid];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_100  [key=2, style=dotted];
m0_94 -> m0_96  [color=darkseagreen4, key=1, label=asSingular, style=dashed];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_98  [key=0, style=solid];
m0_97 -> m0_99  [key=0, style=solid];
m0_93 -> m0_99  [key=0, style=solid];
m0_98 -> m0_99  [key=0, style=solid];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_100  [key=2, style=dotted];
m0_99 -> m0_88  [color=blue, key=0, style=bold];
m0_130 -> m0_131  [key=0, style=solid];
m0_131 -> m0_132  [key=0, style=solid];
m0_131 -> m0_133  [key=2, style=dotted];
m0_132 -> m0_130  [color=blue, key=0, style=bold];
m0_116 -> m0_117  [key=0, style=solid];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_104  [key=2, style=dotted];
m0_118 -> m0_116  [color=blue, key=0, style=bold];
m0_60 -> m0_84  [key=0, style=solid];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_64  [key=2, style=dotted];
m0_84 -> n40  [key=2, style=dotted];
m0_85 -> m0_60  [color=blue, key=0, style=bold];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_106  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_104 -> m0_107  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_104 -> m0_108  [color=darkseagreen4, key=1, label="Humanizer.Plurality", style=dashed];
m0_104 -> m0_110  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_104 -> m0_112  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_104 -> m0_113  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_104 -> m0_114  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_107  [key=0, style=solid];
m0_106 -> m0_115  [key=0, style=solid];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_100  [key=2, style=dotted];
m0_107 -> m0_109  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_107 -> m0_112  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_107 -> m0_114  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_110  [key=0, style=solid];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_100  [key=2, style=dotted];
m0_110 -> m0_112  [color=darkseagreen4, key=1, label=asPlural, style=dashed];
m0_112 -> m0_113  [key=0, style=solid];
m0_112 -> m0_114  [key=0, style=solid];
m0_113 -> m0_115  [key=0, style=solid];
m0_114 -> m0_115  [key=0, style=solid];
m0_109 -> m0_115  [key=0, style=solid];
m0_111 -> m0_112  [key=0, style=solid];
m0_111 -> m0_100  [key=2, style=dotted];
m0_115 -> m0_104  [color=blue, key=0, style=bold];
m0_158 -> m0_65  [color=darkseagreen4, key=1, label="Humanizer.InflectorExtensions.Rule", style=dashed];
m0_158 -> m0_66  [color=darkseagreen4, key=1, label="Humanizer.InflectorExtensions.Rule", style=dashed];
m0_158 -> m0_70  [color=darkseagreen4, key=1, label="Humanizer.InflectorExtensions.Rule", style=dashed];
m0_158 -> m0_72  [color=darkseagreen4, key=1, label="Humanizer.InflectorExtensions.Rule", style=dashed];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_10  [key=2, style=dotted];
m3_6 -> m3_11  [key=2, style=dotted];
m3_6 -> m3_12  [key=2, style=dotted];
m3_6 -> m3_13  [key=2, style=dotted];
m3_6 -> m3_14  [key=2, style=dotted];
m3_6 -> m3_21  [color=darkseagreen4, key=1, label=type, style=dashed];
m3_6 -> m3_8  [color=darkseagreen4, key=1, label=type, style=dashed];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_7  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m3_5 -> m3_21  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_0  [color=blue, key=0, style=bold];
m3_3 -> m3_5  [key=2, style=dotted];
m3_3 -> m3_6  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid];
m3_4 -> m3_2  [color=blue, key=0, style=bold];
m3_4 -> m3_30  [color=red, key=0, style=solid];
m3_4 -> m3_46  [color=red, key=1, label="System.Type", style=dashed];
m3_4 -> m3_47  [color=red, key=1, label="System.Type", style=dashed];
m3_4 -> m3_48  [color=red, key=1, label=string, style=dashed];
m3_4 -> m3_49  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_4 -> m3_50  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_4 -> m3_31  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=2, style=dotted];
m3_1 -> m3_4  [key=2, style=dotted];
m3_1 -> m3_5  [key=2, style=dotted];
m3_41 -> m3_63  [key=0, style=solid];
m3_41 -> m3_64  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_41 -> m3_67  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_63 -> m3_64  [key=0, style=solid];
m3_64 -> m3_65  [key=0, style=solid];
m3_64 -> m3_67  [key=0, style=solid];
m3_64 -> m3_71  [key=2, style=dotted];
m3_64 -> m3_68  [color=darkseagreen4, key=1, label=parsedValue, style=dashed];
m3_67 -> m3_68  [key=0, style=solid];
m3_67 -> m3_69  [key=0, style=solid];
m3_67 -> m3_73  [key=2, style=dotted];
m3_65 -> m3_66  [key=0, style=solid];
m3_68 -> m3_70  [key=0, style=solid];
m3_66 -> m3_70  [key=0, style=solid];
m3_66 -> m3_72  [key=2, style=dotted];
m3_69 -> m3_70  [key=0, style=solid];
m3_69 -> m3_72  [key=2, style=dotted];
m3_70 -> m3_41  [color=blue, key=0, style=bold];
m3_39 -> m3_58  [key=0, style=solid];
m3_58 -> m3_59  [key=0, style=solid];
m3_58 -> m3_60  [key=2, style=dotted];
m3_59 -> m3_39  [color=blue, key=0, style=bold];
m3_30 -> m3_31  [color=red, key=0, style=solid];
m3_31 -> m3_38  [key=0, style=solid];
m3_31 -> m3_39  [key=2, style=dotted];
m3_31 -> m3_40  [key=2, style=dotted];
m3_31 -> m3_41  [key=2, style=dotted];
m3_31 -> m3_42  [key=2, style=dotted];
m3_31 -> m3_43  [key=2, style=dotted];
m3_32 -> m3_33  [key=0, style=solid];
m3_33 -> m3_38  [key=0, style=solid];
m3_33 -> m3_17  [key=2, style=dotted];
m3_34 -> m3_35  [key=0, style=solid];
m3_35 -> m3_38  [key=0, style=solid];
m3_35 -> m3_17  [key=2, style=dotted];
m3_36 -> m3_37  [key=0, style=solid];
m3_37 -> m3_38  [key=0, style=solid];
m3_37 -> m3_17  [key=2, style=dotted];
m3_38 -> m3_4  [color=blue, key=0, style=bold];
m3_7 -> m3_8  [color=green, key=0, style=solid];
m3_7 -> m3_15  [key=2, style=dotted];
m3_7 -> m3_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_8 -> m3_9  [color=green, key=0, style=solid];
m3_8 -> m3_16  [key=2, style=dotted];
m3_8 -> m3_17  [key=2, style=dotted];
m3_8 -> m3_15  [key=2, style=dotted];
m3_8 -> m3_18  [key=2, style=dotted];
m3_8 -> m3_19  [key=2, style=dotted];
m3_8 -> m3_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_8 -> m3_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_8 -> m3_5  [color=green, key=2, style=dotted];
m3_8 -> m3_6  [color=green, key=2, style=dotted];
m3_9 -> m3_5  [color=blue, key=0, style=bold];
m3_9 -> m3_7  [color=blue, key=0, style=bold];
m3_40 -> m3_61  [key=0, style=solid];
m3_61 -> m3_62  [key=0, style=solid];
m3_61 -> m3_60  [key=2, style=dotted];
m3_62 -> m3_40  [color=blue, key=0, style=bold];
m3_44 -> m3_45  [color=red, key=0, style=solid];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_4  [key=2, style=dotted];
m3_20 -> m3_21  [key=0, style=solid];
m3_23 -> m3_24  [key=0, style=solid];
m3_27 -> m3_28  [key=0, style=solid];
m3_22 -> m3_20  [color=blue, key=0, style=bold];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_26  [key=2, style=dotted];
m3_25 -> m3_23  [color=blue, key=0, style=bold];
m3_28 -> m3_29  [key=0, style=solid];
m3_29 -> m3_27  [color=blue, key=0, style=bold];
m3_46 -> m3_47  [color=red, key=0, style=solid];
m3_46 -> m3_49  [color=red, key=0, style=solid];
m3_46 -> m3_52  [color=red, key=2, style=dotted];
m3_47 -> m3_48  [color=red, key=0, style=solid];
m3_47 -> m3_53  [color=red, key=2, style=dotted];
m3_48 -> m3_51  [color=red, key=0, style=solid];
m3_48 -> m3_54  [color=red, key=2, style=dotted];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_55  [key=2, style=dotted];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_56  [key=2, style=dotted];
m3_50 -> m3_54  [key=2, style=dotted];
m3_50 -> m3_57  [key=2, style=dotted];
m3_45 -> m3_46  [color=red, key=0, style=solid];
m3_51 -> m3_44  [color=blue, key=0, style=bold];
m3_74 -> m3_21  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m3_75 -> m3_21  [color=darkseagreen4, key=1, label=type, style=dashed];
m3_76 -> m3_46  [color=red, key=1, label="System.Type", style=dashed];
m3_76 -> m3_47  [color=red, key=1, label="System.Type", style=dashed];
m3_76 -> m3_49  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_77 -> m3_48  [color=red, key=1, label=string, style=dashed];
m3_77 -> m3_50  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_78 -> m3_48  [color=red, key=1, label="System.Globalization.CultureInfo", style=dashed];
m3_78 -> m3_50  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=2, style=dotted];
m5_1 -> m5_4  [key=2, style=dotted];
m5_2 -> m5_0  [color=blue, key=0, style=bold];
m6_38 -> m6_39  [key=0, style=solid];
m6_39 -> m6_40  [key=0, style=solid];
m6_39 -> n37  [key=2, style=dotted];
m6_39 -> m6_21  [key=2, style=dotted];
m6_39 -> m6_14  [key=2, style=dotted];
m6_40 -> m6_38  [color=blue, key=0, style=bold];
m6_41 -> m6_42  [key=0, style=solid];
m6_42 -> m6_43  [key=0, style=solid];
m6_42 -> m6_21  [key=2, style=dotted];
m6_42 -> m6_14  [key=2, style=dotted];
m6_43 -> m6_41  [color=blue, key=0, style=bold];
m6_35 -> m6_36  [key=0, style=solid];
m6_36 -> m6_37  [key=0, style=solid];
m6_36 -> m6_21  [key=2, style=dotted];
m6_36 -> m6_14  [key=2, style=dotted];
m6_37 -> m6_35  [color=blue, key=0, style=bold];
m6_44 -> m6_45  [key=0, style=solid];
m6_45 -> m6_46  [key=0, style=solid];
m6_45 -> n37  [key=2, style=dotted];
m6_45 -> m6_21  [key=2, style=dotted];
m6_45 -> m6_14  [key=2, style=dotted];
m6_46 -> m6_44  [color=blue, key=0, style=bold];
m6_56 -> m6_57  [key=0, style=solid];
m6_57 -> m6_58  [key=0, style=solid];
m6_57 -> m6_21  [key=2, style=dotted];
m6_57 -> m6_14  [key=2, style=dotted];
m6_58 -> m6_56  [color=blue, key=0, style=bold];
m6_18 -> m6_19  [key=0, style=solid];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_21  [key=2, style=dotted];
m6_19 -> m6_14  [key=2, style=dotted];
m6_20 -> m6_18  [color=blue, key=0, style=bold];
m6_47 -> m6_48  [key=0, style=solid];
m6_48 -> m6_49  [key=0, style=solid];
m6_48 -> m6_21  [key=2, style=dotted];
m6_48 -> m6_14  [key=2, style=dotted];
m6_49 -> m6_47  [color=blue, key=0, style=bold];
m6_29 -> m6_30  [key=0, style=solid];
m6_30 -> m6_31  [key=0, style=solid];
m6_30 -> m6_21  [key=2, style=dotted];
m6_30 -> m6_14  [key=2, style=dotted];
m6_31 -> m6_29  [color=blue, key=0, style=bold];
m6_53 -> m6_54  [key=0, style=solid];
m6_54 -> m6_55  [key=0, style=solid];
m6_54 -> m6_21  [key=2, style=dotted];
m6_54 -> m6_14  [key=2, style=dotted];
m6_55 -> m6_53  [color=blue, key=0, style=bold];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_10  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_7 -> m6_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_13  [key=2, style=dotted];
m6_8 -> m6_10  [color=darkseagreen4, key=1, label=utcNow, style=dashed];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_4  [key=2, style=dotted];
m6_10 -> m6_5  [key=2, style=dotted];
m6_10 -> m6_6  [key=2, style=dotted];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_4  [key=2, style=dotted];
m6_11 -> m6_5  [key=2, style=dotted];
m6_11 -> m6_6  [key=2, style=dotted];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_13  [key=2, style=dotted];
m6_9 -> m6_11  [color=darkseagreen4, key=1, label=now, style=dashed];
m6_12 -> m6_7  [color=blue, key=0, style=bold];
m6_22 -> m6_23  [key=0, style=solid];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_21  [key=2, style=dotted];
m6_23 -> m6_14  [key=2, style=dotted];
m6_24 -> m6_22  [color=blue, key=0, style=bold];
m6_25 -> m6_26  [key=0, style=solid];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> n37  [key=2, style=dotted];
m6_26 -> m6_21  [key=2, style=dotted];
m6_26 -> m6_14  [key=2, style=dotted];
m6_27 -> m6_25  [color=blue, key=0, style=bold];
m6_50 -> m6_51  [key=0, style=solid];
m6_51 -> m6_52  [key=0, style=solid];
m6_51 -> n37  [key=2, style=dotted];
m6_51 -> m6_21  [key=2, style=dotted];
m6_51 -> m6_14  [key=2, style=dotted];
m6_52 -> m6_50  [color=blue, key=0, style=bold];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_0  [key=2, style=dotted];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_7  [key=2, style=dotted];
m6_17 -> m6_14  [color=blue, key=0, style=bold];
m6_32 -> m6_33  [key=0, style=solid];
m6_33 -> m6_34  [key=0, style=solid];
m6_33 -> n37  [key=2, style=dotted];
m6_33 -> m6_21  [key=2, style=dotted];
m6_33 -> m6_14  [key=2, style=dotted];
m6_34 -> m6_32  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_4  [key=2, style=dotted];
m6_1 -> m6_5  [key=2, style=dotted];
m6_1 -> m6_6  [key=2, style=dotted];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_4  [key=2, style=dotted];
m6_2 -> m6_5  [key=2, style=dotted];
m6_2 -> m6_6  [key=2, style=dotted];
m6_3 -> m6_0  [color=blue, key=0, style=bold];
m6_59 -> m6_60  [key=0, style=solid];
m6_60 -> m6_61  [key=0, style=solid];
m6_60 -> n37  [key=2, style=dotted];
m6_60 -> m6_21  [key=2, style=dotted];
m6_60 -> m6_14  [key=2, style=dotted];
m6_61 -> m6_59  [color=blue, key=0, style=bold];
m6_62 -> m6_15  [color=darkseagreen4, key=1, label="Humanizer.Tests.Extensions.DateExtensionsTests", style=dashed];
m6_62 -> m6_16  [color=darkseagreen4, key=1, label="Humanizer.Tests.Extensions.DateExtensionsTests", style=dashed];
m6_62 -> m6_19  [color=darkseagreen4, key=1, label="Humanizer.Tests.Extensions.DateExtensionsTests", style=dashed];
m6_62 -> m6_23  [color=darkseagreen4, key=1, label="Humanizer.Tests.Extensions.DateExtensionsTests", style=dashed];
m6_62 -> m6_26  [color=darkseagreen4, key=1, label="Humanizer.Tests.Extensions.DateExtensionsTests", style=dashed];
m6_62 -> m6_30  [color=darkseagreen4, key=1, label="Humanizer.Tests.Extensions.DateExtensionsTests", style=dashed];
m6_62 -> m6_33  [color=darkseagreen4, key=1, label="Humanizer.Tests.Extensions.DateExtensionsTests", style=dashed];
m6_62 -> m6_36  [color=darkseagreen4, key=1, label="Humanizer.Tests.Extensions.DateExtensionsTests", style=dashed];
m6_62 -> m6_39  [color=darkseagreen4, key=1, label="Humanizer.Tests.Extensions.DateExtensionsTests", style=dashed];
m6_62 -> m6_42  [color=darkseagreen4, key=1, label="Humanizer.Tests.Extensions.DateExtensionsTests", style=dashed];
m6_62 -> m6_45  [color=darkseagreen4, key=1, label="Humanizer.Tests.Extensions.DateExtensionsTests", style=dashed];
m6_62 -> m6_48  [color=darkseagreen4, key=1, label="Humanizer.Tests.Extensions.DateExtensionsTests", style=dashed];
m6_62 -> m6_51  [color=darkseagreen4, key=1, label="Humanizer.Tests.Extensions.DateExtensionsTests", style=dashed];
m6_62 -> m6_54  [color=darkseagreen4, key=1, label="Humanizer.Tests.Extensions.DateExtensionsTests", style=dashed];
m6_62 -> m6_57  [color=darkseagreen4, key=1, label="Humanizer.Tests.Extensions.DateExtensionsTests", style=dashed];
m6_62 -> m6_60  [color=darkseagreen4, key=1, label="Humanizer.Tests.Extensions.DateExtensionsTests", style=dashed];
m9_11 -> m9_8  [color=blue, key=0, style=bold];
m9_10 -> m9_11  [key=0, style=solid];
m9_10 -> m9_12  [key=2, style=dotted];
m9_21 -> m9_22  [key=0, style=solid];
m9_21 -> m9_28  [color=darkseagreen4, key=1, label="Humanizer.Localisation.TimeUnit", style=dashed];
m9_21 -> m9_23  [color=darkseagreen4, key=1, label="Humanizer.Localisation.TimeUnit", style=dashed];
m9_22 -> m9_9  [key=2, style=dotted];
m9_22 -> m9_10  [key=2, style=dotted];
m9_22 -> m9_23  [key=0, style=solid];
m9_22 -> m9_25  [key=2, style=dotted];
m9_22 -> m9_28  [color=darkseagreen4, key=1, label=dummyRate, style=dashed];
m9_23 -> m9_24  [key=0, style=solid];
m9_23 -> m9_26  [key=2, style=dotted];
m9_23 -> m9_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_24 -> m9_21  [color=blue, key=0, style=bold];
m9_13 -> m9_15  [color=green, key=1, label=double, style=dashed];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_17  [color=darkseagreen4, key=1, label="Humanizer.Localisation.TimeUnit", style=dashed];
m9_13 -> m9_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_15 -> m9_16  [color=green, key=0, style=solid];
m9_15 -> m9_9  [color=green, key=2, style=dotted];
m9_14 -> m9_15  [color=green, key=0, style=solid];
m9_14 -> m9_20  [key=2, style=dotted];
m9_14 -> m9_16  [color=darkseagreen4, key=1, label=size, style=dashed];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_10  [key=2, style=dotted];
m9_18 -> m9_12  [key=2, style=dotted];
m9_18 -> m9_19  [key=0, style=solid];
m9_17 -> m9_11  [key=2, style=dotted];
m9_17 -> m9_18  [key=0, style=solid];
m9_19 -> m9_13  [color=blue, key=0, style=bold];
m9_7 -> m9_2  [color=blue, key=0, style=bold];
m9_6 -> m9_7  [color=green, key=0, style=solid];
m9_6 -> m9_12  [color=green, key=2, style=dotted];
m9_8 -> m9_9  [key=0, style=solid];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_4  [key=2, style=dotted];
m9_5 -> m9_6  [color=green, key=0, style=solid];
m9_5 -> m9_10  [key=2, style=dotted];
m9_5 -> m9_11  [key=2, style=dotted];
m9_2 -> m9_3  [color=green, key=0, style=solid];
m9_2 -> m9_4  [color=green, key=1, label=double, style=dashed];
m9_2 -> m9_6  [color=green, key=1, label=string, style=dashed];
m9_2 -> m9_5  [key=2, style=dotted];
m9_2 -> m9_7  [key=2, style=dotted];
m9_3 -> m9_4  [color=green, key=0, style=solid];
m9_3 -> m9_8  [color=green, key=2, style=dotted];
m9_3 -> m9_5  [color=green, key=1, label=size, style=dashed];
m9_3 -> m9_0  [color=blue, key=0, style=bold];
m9_4 -> m9_5  [color=green, key=0, style=solid];
m9_4 -> m9_9  [color=green, key=2, style=dotted];
m9_27 -> m9_28  [key=0, style=solid];
m9_28 -> m9_11  [key=2, style=dotted];
m9_28 -> m9_29  [key=0, style=solid];
m9_29 -> m9_27  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_4  [key=2, style=dotted];
m9_30 -> m9_28  [color=darkseagreen4, key=1, label="Humanizer.Localisation.TimeUnit", style=dashed];
m9_31 -> m9_28  [color=darkseagreen4, key=1, label=dummyRate, style=dashed];
}
