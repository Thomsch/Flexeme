digraph  {
n0 [label="Entry Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", span="45-45", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)"];
n1 [label="var transformedInput = quantity == 1\r\n                ? input.Singularize(Plurality.CouldBeEither)\r\n                : input.Pluralize(Plurality.CouldBeEither)", span="47-49", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)"];
n2 [label="showQuantityAs == ShowQuantityAs.None", span="51-51", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)"];
n4 [label="showQuantityAs == ShowQuantityAs.Numeric", span="54-54", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)"];
n5 [label="return string.Format(''{0} {1}'', quantity, transformedInput);", span="55-55", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", color=red, community=0];
n6 [label="return string.Format(''{0} {1}'', quantity.ToWords(), transformedInput);", span="57-57", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)"];
n8 [label="Entry string.Singularize(Humanizer.Plurality)", span="194-194", cluster="string.Singularize(Humanizer.Plurality)"];
n9 [label="Entry string.Pluralize(Humanizer.Plurality)", span="170-170", cluster="string.Pluralize(Humanizer.Plurality)"];
n3 [label="return transformedInput;", span="52-52", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)"];
n7 [label="Exit Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", span="45-45", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)"];
n11 [label="Entry int.ToWords()", span="32-32", cluster="int.ToWords()"];
n10 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)"];
d1 [label="return input.ToQuantity(quantity, showQuantityAs, format: null, formatProvider: null);", span="48-48", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", color=green, community=0];
d0 [label="Entry Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", span="46-46", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)"];
d3 [label="Entry string.ToQuantity(int, Humanizer.ShowQuantityAs, string, System.IFormatProvider)", span="69-69", cluster="string.ToQuantity(int, Humanizer.ShowQuantityAs, string, System.IFormatProvider)"];
d5 [label="return input.ToQuantity(quantity, showQuantityAs: ShowQuantityAs.Numeric, format: format, formatProvider: formatProvider);", span="66-66", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, string, System.IFormatProvider)", color=green, community=0];
d4 [label="Entry Humanizer.ToQuantityExtensions.ToQuantity(string, int, string, System.IFormatProvider)", span="64-64", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, string, System.IFormatProvider)"];
d6 [label="Exit Humanizer.ToQuantityExtensions.ToQuantity(string, int, string, System.IFormatProvider)", span="64-64", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, string, System.IFormatProvider)"];
d12 [label="return string.Format(formatProvider, ''{0} {1}'', quantity.ToString(format, formatProvider), transformedInput);", span="79-79", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs, string, System.IFormatProvider)", color=green, community=0];
d7 [label="Entry Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs, string, System.IFormatProvider)", span="69-69", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs, string, System.IFormatProvider)"];
d8 [label="var transformedInput = quantity == 1\r\n                ? input.Singularize(Plurality.CouldBeEither)\r\n                : input.Pluralize(Plurality.CouldBeEither)", span="71-73", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs, string, System.IFormatProvider)"];
d11 [label="showQuantityAs == ShowQuantityAs.Numeric", span="78-78", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs, string, System.IFormatProvider)"];
d14 [label="Exit Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs, string, System.IFormatProvider)", span="69-69", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs, string, System.IFormatProvider)"];
d17 [label="Entry int.ToString(string, System.IFormatProvider)", span="0-0", cluster="int.ToString(string, System.IFormatProvider)"];
d18 [label="Entry string.Format(System.IFormatProvider, string, object, object)", span="0-0", cluster="string.Format(System.IFormatProvider, string, object, object)"];
d9 [label="showQuantityAs == ShowQuantityAs.None", span="75-75", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs, string, System.IFormatProvider)"];
d13 [label="return string.Format(''{0} {1}'', quantity.ToWords(), transformedInput);", span="81-81", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs, string, System.IFormatProvider)"];
d10 [label="return transformedInput;", span="76-76", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs, string, System.IFormatProvider)"];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.ShowQuantityAs"];
n0 -> n4  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.ShowQuantityAs"];
n0 -> n5  [key=1, style=dashed, color=red, label=int];
n0 -> n6  [key=1, style=dashed, color=darkseagreen4, label=int];
n1 -> n2  [key=0, style=solid];
n1 -> n8  [key=2, style=dotted];
n1 -> n9  [key=2, style=dotted];
n1 -> n3  [key=1, style=dashed, color=darkseagreen4, label=transformedInput];
n1 -> n5  [key=1, style=dashed, color=red, label=transformedInput];
n1 -> n6  [key=1, style=dashed, color=darkseagreen4, label=transformedInput];
n2 -> n3  [key=0, style=solid];
n2 -> n4  [key=0, style=solid];
n4 -> n5  [key=0, style=solid, color=red];
n4 -> n6  [key=0, style=solid];
n5 -> n7  [key=0, style=solid, color=red];
n5 -> n10  [key=2, style=dotted, color=red];
n6 -> n7  [key=0, style=solid];
n6 -> n11  [key=2, style=dotted];
n6 -> n10  [key=2, style=dotted];
n3 -> n7  [key=0, style=solid];
n7 -> n0  [key=0, style=bold, color=blue];
n7 -> d0  [key=0, style=bold, color=blue];
d1 -> n7  [key=0, style=solid, color=green];
d1 -> d3  [key=2, style=dotted, color=green];
d0 -> d1  [key=0, style=solid, color=green];
d0 -> d3  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToQuantity"];
d3 -> d1  [key=3, color=green, style=bold, label="Parameter variable System.IFormatProvider formatProvider"];
d3 -> d5  [key=3, color=green, style=bold, label="Parameter variable Humanizer.ShowQuantityAs showQuantityAs"];
d3 -> d0  [key=3, color=darkorchid, style=bold, label="Parameter variable Humanizer.ShowQuantityAs showQuantityAs"];
d3 -> d4  [key=3, color=darkorchid, style=bold, label="Parameter variable System.IFormatProvider formatProvider"];
d3 -> d8  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToQuantity"];
d5 -> d6  [key=0, style=solid, color=green];
d5 -> d3  [key=2, style=dotted, color=green];
d4 -> d5  [key=0, style=solid, color=green];
d4 -> d3  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToQuantity"];
d6 -> d4  [key=0, style=bold, color=blue];
d12 -> d14  [key=0, style=solid, color=green];
d12 -> d17  [key=2, style=dotted, color=green];
d12 -> d18  [key=2, style=dotted, color=green];
d7 -> d12  [key=1, style=dashed, color=green, label=int];
d7 -> d8  [key=0, style=solid];
d7 -> d9  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.ShowQuantityAs"];
d7 -> d11  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.ShowQuantityAs"];
d7 -> d13  [key=1, style=dashed, color=darkseagreen4, label=int];
d8 -> d12  [key=1, style=dashed, color=green, label=transformedInput];
d8 -> d9  [key=0, style=solid];
d8 -> n8  [key=2, style=dotted];
d8 -> n9  [key=2, style=dotted];
d8 -> d10  [key=1, style=dashed, color=darkseagreen4, label=transformedInput];
d8 -> d13  [key=1, style=dashed, color=darkseagreen4, label=transformedInput];
d11 -> d12  [key=0, style=solid, color=green];
d11 -> d13  [key=0, style=solid];
d14 -> d7  [key=0, style=bold, color=blue];
d9 -> d11  [key=0, style=solid];
d9 -> d10  [key=0, style=solid];
d13 -> d14  [key=0, style=solid];
d13 -> n11  [key=2, style=dotted];
d13 -> n10  [key=2, style=dotted];
d10 -> d14  [key=0, style=solid];
}
