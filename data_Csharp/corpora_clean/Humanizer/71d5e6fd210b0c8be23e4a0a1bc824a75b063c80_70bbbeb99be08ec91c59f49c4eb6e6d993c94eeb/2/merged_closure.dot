digraph  {
n10 [label="Humanizer.Tests.AmbientCulture", span=""];
n0 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", label="Entry Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", span="10-10"];
n1 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", label="_culture = Thread.CurrentThread.CurrentUICulture", span="12-12"];
n2 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", label="Thread.CurrentThread.CurrentCulture = culture", span="13-13"];
n3 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", label="Thread.CurrentThread.CurrentUICulture = culture", span="14-14"];
n4 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", label="Exit Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", span="10-10"];
n5 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(string)", label="Entry Humanizer.Tests.AmbientCulture.AmbientCulture(string)", span="17-17"];
n6 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(string)", label="Exit Humanizer.Tests.AmbientCulture.AmbientCulture(string)", span="17-17"];
n7 [cluster="Humanizer.Tests.AmbientCulture.Dispose()", label="Entry Humanizer.Tests.AmbientCulture.Dispose()", span="22-22"];
n8 [cluster="Humanizer.Tests.AmbientCulture.Dispose()", label="Thread.CurrentThread.CurrentUICulture = _culture", span="24-24"];
n9 [cluster="Humanizer.Tests.AmbientCulture.Dispose()", label="Exit Humanizer.Tests.AmbientCulture.Dispose()", span="22-22"];
m0_7 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.RussianFormatter()", file="Configurator.cs", label="Entry Humanizer.Localisation.Formatters.RussianFormatter.RussianFormatter()", span="2-2"];
m0_3 [cluster="Humanizer.Localisation.Formatters.RomanianFormatter.RomanianFormatter()", file="Configurator.cs", label="Entry Humanizer.Localisation.Formatters.RomanianFormatter.RomanianFormatter()", span="2-2"];
m0_15 [cluster="Humanizer.Localisation.Formatters.CzechSlovakPolishFormatter.CzechSlovakPolishFormatter()", file="Configurator.cs", label="Entry Humanizer.Localisation.Formatters.CzechSlovakPolishFormatter.CzechSlovakPolishFormatter()", span="2-2"];
m0_11 [cluster="Humanizer.Localisation.Formatters.ArabicFormatter.ArabicFormatter()", file="Configurator.cs", label="Entry Humanizer.Localisation.Formatters.ArabicFormatter.ArabicFormatter()", span="2-2"];
m0_19 [cluster="lambda expression", file="Configurator.cs", label="Entry lambda expression", span="21-21"];
m0_0 [cluster="lambda expression", file="Configurator.cs", label="Entry lambda expression", span="16-16"];
m0_1 [cluster="lambda expression", file="Configurator.cs", label="new RomanianFormatter()", span="16-16"];
m0_2 [cluster="lambda expression", file="Configurator.cs", label="Exit lambda expression", span="16-16"];
m0_4 [cluster="lambda expression", file="Configurator.cs", label="Entry lambda expression", span="17-17"];
m0_5 [cluster="lambda expression", file="Configurator.cs", label="new RussianFormatter()", span="17-17"];
m0_6 [cluster="lambda expression", file="Configurator.cs", label="Exit lambda expression", span="17-17"];
m0_8 [cluster="lambda expression", file="Configurator.cs", label="Entry lambda expression", span="18-18"];
m0_9 [cluster="lambda expression", file="Configurator.cs", label="new ArabicFormatter()", span="18-18"];
m0_10 [cluster="lambda expression", file="Configurator.cs", label="Exit lambda expression", span="18-18"];
m0_12 [cluster="lambda expression", file="Configurator.cs", label="Entry lambda expression", span="19-19"];
m0_13 [cluster="lambda expression", file="Configurator.cs", label="new CzechSlovakPolishFormatter()", span="19-19"];
m0_14 [cluster="lambda expression", file="Configurator.cs", label="Exit lambda expression", span="19-19"];
m0_16 [cluster="lambda expression", file="Configurator.cs", label="Entry lambda expression", span="20-20"];
m0_17 [cluster="lambda expression", file="Configurator.cs", label="new CzechSlovakPolishFormatter()", span="20-20"];
m0_18 [cluster="lambda expression", file="Configurator.cs", label="Exit lambda expression", span="20-20"];
m0_20 [cluster="lambda expression", file="Configurator.cs", label="new CzechSlovakPolishFormatter()", span="21-21"];
m0_21 [cluster="lambda expression", file="Configurator.cs", label="Exit lambda expression", span="21-21"];
m2_37 [cluster="System.DateTime.ToLocalTime()", file="DateHumanizeExtensions.cs", label="Entry System.DateTime.ToLocalTime()", span="0-0"];
m2_41 [cluster="System.TimeSpan.TimeSpan(long)", file="DateHumanizeExtensions.cs", label="Entry System.TimeSpan.TimeSpan(long)", span="0-0"];
m2_42 [cluster="System.Math.Abs(long)", file="DateHumanizeExtensions.cs", label="Entry System.Math.Abs(long)", span="0-0"];
m2_39 [cluster="System.TimeSpan.FromMilliseconds(double)", file="DateHumanizeExtensions.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m2_46 [cluster="System.Convert.ToInt32(double)", file="DateHumanizeExtensions.cs", label="Entry System.Convert.ToInt32(double)", span="0-0"];
m2_38 [cluster="System.DateTime.Subtract(System.DateTime)", file="DateHumanizeExtensions.cs", label="Entry System.DateTime.Subtract(System.DateTime)", span="0-0"];
m2_43 [cluster="Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", file="DateHumanizeExtensions.cs", label="Entry Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="10-10"];
m2_40 [cluster="Humanizer.Localisation.Formatters.IFormatter.DateHumanize_Now()", file="DateHumanizeExtensions.cs", label="Entry Humanizer.Localisation.Formatters.IFormatter.DateHumanize_Now()", span="9-9"];
m2_45 [cluster="System.Math.Floor(double)", file="DateHumanizeExtensions.cs", label="Entry System.Math.Floor(double)", span="0-0"];
m2_0 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="DateHumanizeExtensions.cs", label="Entry Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", span="19-19"];
m2_5 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="DateHumanizeExtensions.cs", label="!utcDate", span="27-27"];
m2_3 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="DateHumanizeExtensions.cs", label="var formatter = Configurator.Formatter", prediction=0, span="24-24"];
m2_6 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="DateHumanizeExtensions.cs", label="comparisonBase = comparisonBase.ToLocalTime()", span="28-28"];
m2_36 [cluster="Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="DateHumanizeExtensions.cs", label="Exit Humanizer.DateHumanizeExtensions.Humanize(System.DateTime, bool, System.DateTime?)", span="19-19"];
m2_44 [cluster="System.DateTime.AddMonths(int)", file="DateHumanizeExtensions.cs", label="Entry System.DateTime.AddMonths(int)", span="0-0"];
m8_7 [cluster="Humanizer.Localisation.NumberToWords.ArabicNumberToWordsConverter.ArabicNumberToWordsConverter()", file="NumberToWordsExtension.cs", label="Entry Humanizer.Localisation.NumberToWords.ArabicNumberToWordsConverter.ArabicNumberToWordsConverter()", span="4-4"];
m8_15 [cluster="Humanizer.SpanishNumberToWordsConverter.SpanishNumberToWordsConverter()", file="NumberToWordsExtension.cs", label="Entry Humanizer.SpanishNumberToWordsConverter.SpanishNumberToWordsConverter()", span="7-7"];
m8_12 [cluster="lambda expression", file="NumberToWordsExtension.cs", label="Entry lambda expression", span="16-16"];
m8_13 [cluster="lambda expression", color=green, community=0, file="NumberToWordsExtension.cs", label="new SpanishNumberToWordsConverter()", prediction=1, span="16-16"];
m8_14 [cluster="lambda expression", file="NumberToWordsExtension.cs", label="Exit lambda expression", span="16-16"];
m8_3 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.EnglishNumberToWordsConverter()", file="NumberToWordsExtension.cs", label="Entry Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.EnglishNumberToWordsConverter()", span="5-5"];
m8_11 [cluster="Humanizer.Localisation.NumberToWords.FarsiNumberToWordsConverter.FarsiNumberToWordsConverter()", file="NumberToWordsExtension.cs", label="Entry Humanizer.Localisation.NumberToWords.FarsiNumberToWordsConverter.FarsiNumberToWordsConverter()", span="5-5"];
m8_0 [cluster="lambda expression", file="NumberToWordsExtension.cs", label="Entry lambda expression", span="15-15"];
m8_1 [cluster="lambda expression", file="NumberToWordsExtension.cs", label="new EnglishNumberToWordsConverter()", span="15-15"];
m8_2 [cluster="lambda expression", file="NumberToWordsExtension.cs", label="Exit lambda expression", span="15-15"];
m8_4 [cluster="lambda expression", file="NumberToWordsExtension.cs", label="Entry lambda expression", span="16-16"];
m8_5 [cluster="lambda expression", file="NumberToWordsExtension.cs", label="new ArabicNumberToWordsConverter()", span="16-16"];
m8_6 [cluster="lambda expression", file="NumberToWordsExtension.cs", label="Exit lambda expression", span="16-16"];
m8_8 [cluster="lambda expression", file="NumberToWordsExtension.cs", label="Entry lambda expression", span="17-17"];
m8_9 [cluster="lambda expression", color=green, community=0, file="NumberToWordsExtension.cs", label="new FarsiNumberToWordsConverter()", prediction=2, span="15-15"];
m8_10 [cluster="lambda expression", file="NumberToWordsExtension.cs", label="Exit lambda expression", span="17-17"];
m9_6 [cluster="Unk.Equal", file="NumberToWordsTests.cs", label="Entry Unk.Equal", span=""];
m9_5 [cluster="int.ToWords()", file="NumberToWordsTests.cs", label="Entry int.ToWords()", span="24-24"];
m9_2 [cluster="Humanizer.Tests.Localisation.es.NumberToWordsTests.ToWordsSpanish(int, string)", file="NumberToWordsTests.cs", label="Entry Humanizer.Tests.Localisation.es.NumberToWordsTests.ToWordsSpanish(int, string)", span="45-45"];
m9_3 [cluster="Humanizer.Tests.Localisation.es.NumberToWordsTests.ToWordsSpanish(int, string)", color=green, community=0, file="NumberToWordsTests.cs", label="Assert.Equal(expected, number.ToWords())", prediction=3, span="47-47"];
m9_4 [cluster="Humanizer.Tests.Localisation.es.NumberToWordsTests.ToWordsSpanish(int, string)", file="NumberToWordsTests.cs", label="Exit Humanizer.Tests.Localisation.es.NumberToWordsTests.ToWordsSpanish(int, string)", span="45-45"];
m13_4 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ToQuantityTests.cs", label="Entry CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", span="25-25"];
m13_17 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="ToQuantityTests.cs", label="specProps.Empty()", prediction=4, span="30-30"];
m13_18 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="ToQuantityTests.cs", label="yield break;", prediction=5, span="32-32"];
m13_19 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="ToQuantityTests.cs", label="var pt = specProps.First()", prediction=6, span="34-34"];
m13_22 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="ToQuantityTests.cs", label="yield return\r\n                    Tuple.Create(pt, MakeErrorInCaseOfMinConstraint(pt.Specification));", prediction=6, span="38-39"];
m13_21 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="ToQuantityTests.cs", label="taken.Empty()", prediction=8, span="36-36"];
m13_23 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="ToQuantityTests.cs", label="yield break;", prediction=9, span="40-40"];
m13_24 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="ToQuantityTests.cs", label="yield return\r\n                converter(taken, pt.Property.PropertyType, pt.Specification.ConversionType.IsScalar())\r\n                    .Return(\r\n                        converted => Tuple.Create(pt.WithValue(Maybe.Just(converted)), Maybe.Nothing<Error>()),\r\n                        Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                            pt, Maybe.Just<Error>(new BadFormatConversionError(NameInfo.EmptyName))));", prediction=6, span="43-48"];
m13_20 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="ToQuantityTests.cs", label="var taken = values.Take(pt.Specification.GetMaxValueCount().Return(n => n, values.Count()))", prediction=6, span="35-35"];
m13_25 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="ToQuantityTests.cs", label="MapValuesImpl(specProps.Skip(1), values.Skip(taken.Count()), converter)", prediction=6, span="50-50"];
m13_26 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="ToQuantityTests.cs", label="yield return value;", prediction=13, span="52-52"];
m13_27 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ToQuantityTests.cs", label="Exit CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", span="25-25"];
m13_37 [cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="ToQuantityTests.cs", label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0"];
m13_39 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="ToQuantityTests.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71"];
m13_36 [cluster="System.Type.IsScalar()", file="ToQuantityTests.cs", label="Entry System.Type.IsScalar()", span="33-33"];
m13_0 [cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ToQuantityTests.cs", label="Entry CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", span="11-11"];
m13_1 [cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="ToQuantityTests.cs", label="var propAndErrors = MapValuesImpl(specProps, values, converter)", prediction=14, span="16-16"];
m13_2 [cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=green, community=0, file="ToQuantityTests.cs", label="return StatePair.Create(\r\n                propAndErrors.Select(pe => pe.Item1),\r\n                propAndErrors.Select(pe => pe.Item2)\r\n                    .OfType<Just<Error>>().Select(e => e.Value)\r\n                );", prediction=15, span="18-22"];
m13_3 [cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ToQuantityTests.cs", label="Exit CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", span="11-11"];
m13_28 [cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="ToQuantityTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="81-81"];
m13_52 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="ToQuantityTests.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="316-316"];
m13_34 [cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="ToQuantityTests.cs", label="Entry CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", span="56-56"];
m13_49 [cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", color=green, community=0, file="ToQuantityTests.cs", label="return !specification.IsMinNotSpecified()\r\n                ? Maybe.Just<Error>(new SequenceOutOfRangeError(NameInfo.EmptyName))\r\n                : Maybe.Nothing<Error>();", prediction=16, span="58-60"];
m13_50 [cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="ToQuantityTests.cs", label="Exit CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", span="56-56"];
m13_6 [cluster="Unk.>", file="ToQuantityTests.cs", label="Entry Unk.>", span=""];
m13_30 [cluster="CommandLine.Core.Specification.GetMaxValueCount()", file="ToQuantityTests.cs", label="Entry CommandLine.Core.Specification.GetMaxValueCount()", span="51-51"];
m13_48 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="ToQuantityTests.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66"];
m13_35 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="ToQuantityTests.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m13_33 [cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="ToQuantityTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0"];
m13_47 [cluster="CommandLine.Core.SpecificationProperty.WithValue(CommandLine.Infrastructure.Maybe<object>)", file="ToQuantityTests.cs", label="Entry CommandLine.Core.SpecificationProperty.WithValue(CommandLine.Infrastructure.Maybe<object>)", span="18-18"];
m13_38 [cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", file="ToQuantityTests.cs", label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="305-305"];
m13_29 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="ToQuantityTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m13_41 [cluster="lambda expression", file="ToQuantityTests.cs", label="Entry lambda expression", span="35-35"];
m13_8 [cluster="lambda expression", file="ToQuantityTests.cs", label="Entry lambda expression", span="19-19"];
m13_11 [cluster="lambda expression", file="ToQuantityTests.cs", label="Entry lambda expression", span="20-20"];
m13_14 [cluster="lambda expression", file="ToQuantityTests.cs", label="Entry lambda expression", span="21-21"];
m13_9 [cluster="lambda expression", color=green, community=0, file="ToQuantityTests.cs", label="pe.Item1", prediction=17, span="19-19"];
m13_10 [cluster="lambda expression", file="ToQuantityTests.cs", label="Exit lambda expression", span="19-19"];
m13_12 [cluster="lambda expression", color=green, community=0, file="ToQuantityTests.cs", label="pe.Item2", prediction=18, span="20-20"];
m13_13 [cluster="lambda expression", file="ToQuantityTests.cs", label="Exit lambda expression", span="20-20"];
m13_15 [cluster="lambda expression", color=green, community=0, file="ToQuantityTests.cs", label="e.Value", prediction=19, span="21-21"];
m13_16 [cluster="lambda expression", file="ToQuantityTests.cs", label="Exit lambda expression", span="21-21"];
m13_44 [cluster="lambda expression", file="ToQuantityTests.cs", label="Entry lambda expression", span="46-46"];
m13_45 [cluster="lambda expression", color=green, community=0, file="ToQuantityTests.cs", label="Tuple.Create(pt.WithValue(Maybe.Just(converted)), Maybe.Nothing<Error>())", prediction=6, span="46-46"];
m13_46 [cluster="lambda expression", file="ToQuantityTests.cs", label="Exit lambda expression", span="46-46"];
m13_42 [cluster="lambda expression", color=green, community=1, file="ToQuantityTests.cs", label=n, prediction=21, span="35-35"];
m13_43 [cluster="lambda expression", file="ToQuantityTests.cs", label="Exit lambda expression", span="35-35"];
m13_31 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="ToQuantityTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m13_5 [cluster="Unk.Select", file="ToQuantityTests.cs", label="Entry Unk.Select", span=""];
m13_51 [cluster="CommandLine.Core.Specification.IsMinNotSpecified()", file="ToQuantityTests.cs", label="Entry CommandLine.Core.Specification.IsMinNotSpecified()", span="70-70"];
m13_7 [cluster="Unk.Create", file="ToQuantityTests.cs", label="Entry Unk.Create", span=""];
m13_32 [cluster="CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="ToQuantityTests.cs", label="Entry CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="103-103"];
m13_40 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="ToQuantityTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m13_53 [file="ToQuantityTests.cs", label=pt, span=""];
m2_0 -> m2_5  [color=darkseagreen4, key=1, label=bool, style=dashed];
m13_4 -> m13_25  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m13_19 -> m13_22  [color=green, key=1, label=pt, style=dashed];
m13_19 -> m13_24  [color=green, key=1, label=pt, style=dashed];
m13_19 -> m13_45  [color=green, key=1, label=pt, style=dashed];
m13_24 -> m13_44  [color=green, key=1, label="lambda expression", style=dashed];
m13_20 -> m13_24  [color=green, key=1, label=taken, style=dashed];
m13_20 -> m13_41  [color=green, key=1, label="lambda expression", style=dashed];
m13_20 -> m13_25  [color=green, key=1, label=taken, style=dashed];
m13_2 -> m13_8  [color=green, key=1, label="lambda expression", style=dashed];
m13_2 -> m13_11  [color=green, key=1, label="lambda expression", style=dashed];
m13_2 -> m13_14  [color=green, key=1, label="lambda expression", style=dashed];
m13_53 -> m13_45  [color=green, key=1, label=pt, style=dashed];
}
