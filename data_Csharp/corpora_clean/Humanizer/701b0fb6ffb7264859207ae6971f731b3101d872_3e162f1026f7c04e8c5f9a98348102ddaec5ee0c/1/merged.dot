digraph  {
d1 [label="return input*10;", span="18-18", cluster="Humanizer.NumberToNumberExtensions.Tens(int)", color=green, community=0];
d0 [label="Entry Humanizer.NumberToNumberExtensions.Tens(int)", span="16-16", cluster="Humanizer.NumberToNumberExtensions.Tens(int)"];
d2 [label="Exit Humanizer.NumberToNumberExtensions.Tens(int)", span="16-16", cluster="Humanizer.NumberToNumberExtensions.Tens(int)"];
d4 [label="return input*10;", span="26-26", cluster="Humanizer.NumberToNumberExtensions.Tens(uint)", color=green, community=0];
d3 [label="Entry Humanizer.NumberToNumberExtensions.Tens(uint)", span="24-24", cluster="Humanizer.NumberToNumberExtensions.Tens(uint)"];
d5 [label="Exit Humanizer.NumberToNumberExtensions.Tens(uint)", span="24-24", cluster="Humanizer.NumberToNumberExtensions.Tens(uint)"];
d7 [label="return input*10;", span="34-34", cluster="Humanizer.NumberToNumberExtensions.Tens(long)", color=green, community=0];
d6 [label="Entry Humanizer.NumberToNumberExtensions.Tens(long)", span="32-32", cluster="Humanizer.NumberToNumberExtensions.Tens(long)"];
d8 [label="Exit Humanizer.NumberToNumberExtensions.Tens(long)", span="32-32", cluster="Humanizer.NumberToNumberExtensions.Tens(long)"];
d10 [label="return input*10;", span="42-42", cluster="Humanizer.NumberToNumberExtensions.Tens(ulong)", color=green, community=0];
d9 [label="Entry Humanizer.NumberToNumberExtensions.Tens(ulong)", span="40-40", cluster="Humanizer.NumberToNumberExtensions.Tens(ulong)"];
d11 [label="Exit Humanizer.NumberToNumberExtensions.Tens(ulong)", span="40-40", cluster="Humanizer.NumberToNumberExtensions.Tens(ulong)"];
d13 [label="return input*10;", span="50-50", cluster="Humanizer.NumberToNumberExtensions.Tens(double)", color=green, community=0];
d12 [label="Entry Humanizer.NumberToNumberExtensions.Tens(double)", span="48-48", cluster="Humanizer.NumberToNumberExtensions.Tens(double)"];
d14 [label="Exit Humanizer.NumberToNumberExtensions.Tens(double)", span="48-48", cluster="Humanizer.NumberToNumberExtensions.Tens(double)"];
d16 [label="return input*100;", span="58-58", cluster="Humanizer.NumberToNumberExtensions.Hundreds(int)", color=green, community=0];
d15 [label="Entry Humanizer.NumberToNumberExtensions.Hundreds(int)", span="56-56", cluster="Humanizer.NumberToNumberExtensions.Hundreds(int)"];
d17 [label="Exit Humanizer.NumberToNumberExtensions.Hundreds(int)", span="56-56", cluster="Humanizer.NumberToNumberExtensions.Hundreds(int)"];
d19 [label="return input*100;", span="66-66", cluster="Humanizer.NumberToNumberExtensions.Hundreds(uint)", color=green, community=0];
d18 [label="Entry Humanizer.NumberToNumberExtensions.Hundreds(uint)", span="64-64", cluster="Humanizer.NumberToNumberExtensions.Hundreds(uint)"];
d20 [label="Exit Humanizer.NumberToNumberExtensions.Hundreds(uint)", span="64-64", cluster="Humanizer.NumberToNumberExtensions.Hundreds(uint)"];
d22 [label="return input*100;", span="74-74", cluster="Humanizer.NumberToNumberExtensions.Hundreds(long)", color=green, community=0];
d21 [label="Entry Humanizer.NumberToNumberExtensions.Hundreds(long)", span="72-72", cluster="Humanizer.NumberToNumberExtensions.Hundreds(long)"];
d23 [label="Exit Humanizer.NumberToNumberExtensions.Hundreds(long)", span="72-72", cluster="Humanizer.NumberToNumberExtensions.Hundreds(long)"];
d25 [label="return input*100;", span="82-82", cluster="Humanizer.NumberToNumberExtensions.Hundreds(ulong)", color=green, community=0];
d24 [label="Entry Humanizer.NumberToNumberExtensions.Hundreds(ulong)", span="80-80", cluster="Humanizer.NumberToNumberExtensions.Hundreds(ulong)"];
d26 [label="Exit Humanizer.NumberToNumberExtensions.Hundreds(ulong)", span="80-80", cluster="Humanizer.NumberToNumberExtensions.Hundreds(ulong)"];
d28 [label="return input*100;", span="90-90", cluster="Humanizer.NumberToNumberExtensions.Hundreds(double)", color=green, community=0];
d27 [label="Entry Humanizer.NumberToNumberExtensions.Hundreds(double)", span="88-88", cluster="Humanizer.NumberToNumberExtensions.Hundreds(double)"];
d29 [label="Exit Humanizer.NumberToNumberExtensions.Hundreds(double)", span="88-88", cluster="Humanizer.NumberToNumberExtensions.Hundreds(double)"];
d31 [label="return input*1000;", span="98-98", cluster="Humanizer.NumberToNumberExtensions.Thousands(int)", color=green, community=0];
d30 [label="Entry Humanizer.NumberToNumberExtensions.Thousands(int)", span="96-96", cluster="Humanizer.NumberToNumberExtensions.Thousands(int)"];
d32 [label="Exit Humanizer.NumberToNumberExtensions.Thousands(int)", span="96-96", cluster="Humanizer.NumberToNumberExtensions.Thousands(int)"];
d34 [label="return input*1000;", span="106-106", cluster="Humanizer.NumberToNumberExtensions.Thousands(uint)", color=green, community=0];
d33 [label="Entry Humanizer.NumberToNumberExtensions.Thousands(uint)", span="104-104", cluster="Humanizer.NumberToNumberExtensions.Thousands(uint)"];
d35 [label="Exit Humanizer.NumberToNumberExtensions.Thousands(uint)", span="104-104", cluster="Humanizer.NumberToNumberExtensions.Thousands(uint)"];
d37 [label="return input*1000;", span="114-114", cluster="Humanizer.NumberToNumberExtensions.Thousands(long)", color=green, community=0];
d36 [label="Entry Humanizer.NumberToNumberExtensions.Thousands(long)", span="112-112", cluster="Humanizer.NumberToNumberExtensions.Thousands(long)"];
d38 [label="Exit Humanizer.NumberToNumberExtensions.Thousands(long)", span="112-112", cluster="Humanizer.NumberToNumberExtensions.Thousands(long)"];
d40 [label="return input*1000;", span="122-122", cluster="Humanizer.NumberToNumberExtensions.Thousands(ulong)", color=green, community=0];
d39 [label="Entry Humanizer.NumberToNumberExtensions.Thousands(ulong)", span="120-120", cluster="Humanizer.NumberToNumberExtensions.Thousands(ulong)"];
d41 [label="Exit Humanizer.NumberToNumberExtensions.Thousands(ulong)", span="120-120", cluster="Humanizer.NumberToNumberExtensions.Thousands(ulong)"];
d43 [label="return input*1000;", span="130-130", cluster="Humanizer.NumberToNumberExtensions.Thousands(double)", color=green, community=0];
d42 [label="Entry Humanizer.NumberToNumberExtensions.Thousands(double)", span="128-128", cluster="Humanizer.NumberToNumberExtensions.Thousands(double)"];
d44 [label="Exit Humanizer.NumberToNumberExtensions.Thousands(double)", span="128-128", cluster="Humanizer.NumberToNumberExtensions.Thousands(double)"];
d46 [label="return input*1000000;", span="138-138", cluster="Humanizer.NumberToNumberExtensions.Millions(int)", color=green, community=0];
d45 [label="Entry Humanizer.NumberToNumberExtensions.Millions(int)", span="136-136", cluster="Humanizer.NumberToNumberExtensions.Millions(int)"];
d47 [label="Exit Humanizer.NumberToNumberExtensions.Millions(int)", span="136-136", cluster="Humanizer.NumberToNumberExtensions.Millions(int)"];
d49 [label="return input*1000000;", span="146-146", cluster="Humanizer.NumberToNumberExtensions.Millions(uint)", color=green, community=0];
d48 [label="Entry Humanizer.NumberToNumberExtensions.Millions(uint)", span="144-144", cluster="Humanizer.NumberToNumberExtensions.Millions(uint)"];
d50 [label="Exit Humanizer.NumberToNumberExtensions.Millions(uint)", span="144-144", cluster="Humanizer.NumberToNumberExtensions.Millions(uint)"];
d52 [label="return input*1000000;", span="154-154", cluster="Humanizer.NumberToNumberExtensions.Millions(long)", color=green, community=0];
d51 [label="Entry Humanizer.NumberToNumberExtensions.Millions(long)", span="152-152", cluster="Humanizer.NumberToNumberExtensions.Millions(long)"];
d53 [label="Exit Humanizer.NumberToNumberExtensions.Millions(long)", span="152-152", cluster="Humanizer.NumberToNumberExtensions.Millions(long)"];
d55 [label="return input*1000000;", span="162-162", cluster="Humanizer.NumberToNumberExtensions.Millions(ulong)", color=green, community=0];
d54 [label="Entry Humanizer.NumberToNumberExtensions.Millions(ulong)", span="160-160", cluster="Humanizer.NumberToNumberExtensions.Millions(ulong)"];
d56 [label="Exit Humanizer.NumberToNumberExtensions.Millions(ulong)", span="160-160", cluster="Humanizer.NumberToNumberExtensions.Millions(ulong)"];
d58 [label="return input*1000000;", span="170-170", cluster="Humanizer.NumberToNumberExtensions.Millions(double)", color=green, community=0];
d57 [label="Entry Humanizer.NumberToNumberExtensions.Millions(double)", span="168-168", cluster="Humanizer.NumberToNumberExtensions.Millions(double)"];
d59 [label="Exit Humanizer.NumberToNumberExtensions.Millions(double)", span="168-168", cluster="Humanizer.NumberToNumberExtensions.Millions(double)"];
d61 [label="return input*1000000000;", span="178-178", cluster="Humanizer.NumberToNumberExtensions.Billions(int)", color=green, community=0];
d60 [label="Entry Humanizer.NumberToNumberExtensions.Billions(int)", span="176-176", cluster="Humanizer.NumberToNumberExtensions.Billions(int)"];
d62 [label="Exit Humanizer.NumberToNumberExtensions.Billions(int)", span="176-176", cluster="Humanizer.NumberToNumberExtensions.Billions(int)"];
d64 [label="return input*1000000000;", span="186-186", cluster="Humanizer.NumberToNumberExtensions.Billions(uint)", color=green, community=0];
d63 [label="Entry Humanizer.NumberToNumberExtensions.Billions(uint)", span="184-184", cluster="Humanizer.NumberToNumberExtensions.Billions(uint)"];
d65 [label="Exit Humanizer.NumberToNumberExtensions.Billions(uint)", span="184-184", cluster="Humanizer.NumberToNumberExtensions.Billions(uint)"];
d67 [label="return input*1000000000;", span="194-194", cluster="Humanizer.NumberToNumberExtensions.Billions(long)", color=green, community=0];
d66 [label="Entry Humanizer.NumberToNumberExtensions.Billions(long)", span="192-192", cluster="Humanizer.NumberToNumberExtensions.Billions(long)"];
d68 [label="Exit Humanizer.NumberToNumberExtensions.Billions(long)", span="192-192", cluster="Humanizer.NumberToNumberExtensions.Billions(long)"];
d70 [label="return input*1000000000;", span="202-202", cluster="Humanizer.NumberToNumberExtensions.Billions(ulong)", color=green, community=0];
d69 [label="Entry Humanizer.NumberToNumberExtensions.Billions(ulong)", span="200-200", cluster="Humanizer.NumberToNumberExtensions.Billions(ulong)"];
d71 [label="Exit Humanizer.NumberToNumberExtensions.Billions(ulong)", span="200-200", cluster="Humanizer.NumberToNumberExtensions.Billions(ulong)"];
d73 [label="return input*1000000000;", span="210-210", cluster="Humanizer.NumberToNumberExtensions.Billions(double)", color=green, community=0];
d72 [label="Entry Humanizer.NumberToNumberExtensions.Billions(double)", span="208-208", cluster="Humanizer.NumberToNumberExtensions.Billions(double)"];
d74 [label="Exit Humanizer.NumberToNumberExtensions.Billions(double)", span="208-208", cluster="Humanizer.NumberToNumberExtensions.Billions(double)"];
m0_96 [label="Entry Humanizer.Tests.NumberToNumberTests.DoubleToMillions()", span="140-140", cluster="Humanizer.Tests.NumberToNumberTests.DoubleToMillions()", file="NumberToNumberTests.cs"];
m0_97 [label="double number = 4", span="142-142", cluster="Humanizer.Tests.NumberToNumberTests.DoubleToMillions()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_98 [label="Assert.Equal(4000000d, number.Millions())", span="143-143", cluster="Humanizer.Tests.NumberToNumberTests.DoubleToMillions()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_99 [label="Exit Humanizer.Tests.NumberToNumberTests.DoubleToMillions()", span="140-140", cluster="Humanizer.Tests.NumberToNumberTests.DoubleToMillions()", file="NumberToNumberTests.cs"];
m0_80 [label="Entry int.Millions()", span="136-136", cluster="int.Millions()", file="NumberToNumberTests.cs"];
m0_71 [label="Entry Humanizer.Tests.NumberToNumberTests.DoubleToThousands()", span="105-105", cluster="Humanizer.Tests.NumberToNumberTests.DoubleToThousands()", file="NumberToNumberTests.cs"];
m0_72 [label="double number = 3", span="107-107", cluster="Humanizer.Tests.NumberToNumberTests.DoubleToThousands()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_73 [label="Assert.Equal(3000d, number.Thousands())", span="108-108", cluster="Humanizer.Tests.NumberToNumberTests.DoubleToThousands()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_74 [label="Exit Humanizer.Tests.NumberToNumberTests.DoubleToThousands()", span="105-105", cluster="Humanizer.Tests.NumberToNumberTests.DoubleToThousands()", file="NumberToNumberTests.cs"];
m0_85 [label="Entry uint.Millions()", span="144-144", cluster="uint.Millions()", file="NumberToNumberTests.cs"];
m0_125 [label="Entry double.Billions()", span="208-208", cluster="double.Billions()", file="NumberToNumberTests.cs"];
m0_116 [label="Entry Humanizer.Tests.NumberToNumberTests.UlongToBillions()", span="168-168", cluster="Humanizer.Tests.NumberToNumberTests.UlongToBillions()", file="NumberToNumberTests.cs"];
m0_117 [label="ulong number = 1", span="170-170", cluster="Humanizer.Tests.NumberToNumberTests.UlongToBillions()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_118 [label="Assert.Equal(1000000000UL, number.Billions())", span="171-171", cluster="Humanizer.Tests.NumberToNumberTests.UlongToBillions()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_119 [label="Exit Humanizer.Tests.NumberToNumberTests.UlongToBillions()", span="168-168", cluster="Humanizer.Tests.NumberToNumberTests.UlongToBillions()", file="NumberToNumberTests.cs"];
m0_31 [label="Entry Humanizer.Tests.NumberToNumberTests.UintToHundreds()", span="49-49", cluster="Humanizer.Tests.NumberToNumberTests.UintToHundreds()", file="NumberToNumberTests.cs"];
m0_32 [label="uint number = 2", span="51-51", cluster="Humanizer.Tests.NumberToNumberTests.UintToHundreds()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_33 [label="Assert.Equal(200U, number.Hundreds())", span="52-52", cluster="Humanizer.Tests.NumberToNumberTests.UintToHundreds()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_34 [label="Exit Humanizer.Tests.NumberToNumberTests.UintToHundreds()", span="49-49", cluster="Humanizer.Tests.NumberToNumberTests.UintToHundreds()", file="NumberToNumberTests.cs"];
m0_45 [label="Entry ulong.Hundreds()", span="80-80", cluster="ulong.Hundreds()", file="NumberToNumberTests.cs"];
m0_5 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="NumberToNumberTests.cs"];
m0_60 [label="Entry uint.Thousands()", span="104-104", cluster="uint.Thousands()", file="NumberToNumberTests.cs"];
m0_6 [label="Entry Humanizer.Tests.NumberToNumberTests.UintToTens()", span="14-14", cluster="Humanizer.Tests.NumberToNumberTests.UintToTens()", file="NumberToNumberTests.cs"];
m0_7 [label="uint number = 1", span="16-16", cluster="Humanizer.Tests.NumberToNumberTests.UintToTens()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_8 [label="Assert.Equal(10U, number.Tens())", span="17-17", cluster="Humanizer.Tests.NumberToNumberTests.UintToTens()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_9 [label="Exit Humanizer.Tests.NumberToNumberTests.UintToTens()", span="14-14", cluster="Humanizer.Tests.NumberToNumberTests.UintToTens()", file="NumberToNumberTests.cs"];
m0_110 [label="Entry uint.Billions()", span="184-184", cluster="uint.Billions()", file="NumberToNumberTests.cs"];
m0_120 [label="Entry ulong.Billions()", span="200-200", cluster="ulong.Billions()", file="NumberToNumberTests.cs"];
m0_41 [label="Entry Humanizer.Tests.NumberToNumberTests.UlongToHundreds()", span="63-63", cluster="Humanizer.Tests.NumberToNumberTests.UlongToHundreds()", file="NumberToNumberTests.cs"];
m0_42 [label="ulong number = 2", span="65-65", cluster="Humanizer.Tests.NumberToNumberTests.UlongToHundreds()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_43 [label="Assert.Equal(200UL, number.Hundreds())", span="66-66", cluster="Humanizer.Tests.NumberToNumberTests.UlongToHundreds()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_44 [label="Exit Humanizer.Tests.NumberToNumberTests.UlongToHundreds()", span="63-63", cluster="Humanizer.Tests.NumberToNumberTests.UlongToHundreds()", file="NumberToNumberTests.cs"];
m0_21 [label="Entry Humanizer.Tests.NumberToNumberTests.DoubleToTens()", span="35-35", cluster="Humanizer.Tests.NumberToNumberTests.DoubleToTens()", file="NumberToNumberTests.cs"];
m0_22 [label="double number = 1", span="37-37", cluster="Humanizer.Tests.NumberToNumberTests.DoubleToTens()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_23 [label="Assert.Equal(10d, number.Tens())", span="38-38", cluster="Humanizer.Tests.NumberToNumberTests.DoubleToTens()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_24 [label="Exit Humanizer.Tests.NumberToNumberTests.DoubleToTens()", span="35-35", cluster="Humanizer.Tests.NumberToNumberTests.DoubleToTens()", file="NumberToNumberTests.cs"];
m0_50 [label="Entry double.Hundreds()", span="88-88", cluster="double.Hundreds()", file="NumberToNumberTests.cs"];
m0_35 [label="Entry uint.Hundreds()", span="64-64", cluster="uint.Hundreds()", file="NumberToNumberTests.cs"];
m0_111 [label="Entry Humanizer.Tests.NumberToNumberTests.LongToBillions()", span="161-161", cluster="Humanizer.Tests.NumberToNumberTests.LongToBillions()", file="NumberToNumberTests.cs"];
m0_112 [label="long number = 1", span="163-163", cluster="Humanizer.Tests.NumberToNumberTests.LongToBillions()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_113 [label="Assert.Equal(1000000000L, number.Billions())", span="164-164", cluster="Humanizer.Tests.NumberToNumberTests.LongToBillions()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_114 [label="Exit Humanizer.Tests.NumberToNumberTests.LongToBillions()", span="161-161", cluster="Humanizer.Tests.NumberToNumberTests.LongToBillions()", file="NumberToNumberTests.cs"];
m0_121 [label="Entry Humanizer.Tests.NumberToNumberTests.DoubleToBillions()", span="175-175", cluster="Humanizer.Tests.NumberToNumberTests.DoubleToBillions()", file="NumberToNumberTests.cs"];
m0_122 [label="double number = 1", span="177-177", cluster="Humanizer.Tests.NumberToNumberTests.DoubleToBillions()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_123 [label="Assert.Equal(1000000000d, number.Billions())", span="178-178", cluster="Humanizer.Tests.NumberToNumberTests.DoubleToBillions()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_124 [label="Exit Humanizer.Tests.NumberToNumberTests.DoubleToBillions()", span="175-175", cluster="Humanizer.Tests.NumberToNumberTests.DoubleToBillions()", file="NumberToNumberTests.cs"];
m0_61 [label="Entry Humanizer.Tests.NumberToNumberTests.LongToThousands()", span="91-91", cluster="Humanizer.Tests.NumberToNumberTests.LongToThousands()", file="NumberToNumberTests.cs"];
m0_62 [label="long number = 3", span="93-93", cluster="Humanizer.Tests.NumberToNumberTests.LongToThousands()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_63 [label="Assert.Equal(3000L, number.Thousands())", span="94-94", cluster="Humanizer.Tests.NumberToNumberTests.LongToThousands()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_64 [label="Exit Humanizer.Tests.NumberToNumberTests.LongToThousands()", span="91-91", cluster="Humanizer.Tests.NumberToNumberTests.LongToThousands()", file="NumberToNumberTests.cs"];
m0_55 [label="Entry int.Thousands()", span="96-96", cluster="int.Thousands()", file="NumberToNumberTests.cs"];
m0_20 [label="Entry ulong.Tens()", span="40-40", cluster="ulong.Tens()", file="NumberToNumberTests.cs"];
m0_81 [label="Entry Humanizer.Tests.NumberToNumberTests.UintToMillions()", span="119-119", cluster="Humanizer.Tests.NumberToNumberTests.UintToMillions()", file="NumberToNumberTests.cs"];
m0_82 [label="uint number = 4", span="121-121", cluster="Humanizer.Tests.NumberToNumberTests.UintToMillions()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_83 [label="Assert.Equal(4000000U, number.Millions())", span="122-122", cluster="Humanizer.Tests.NumberToNumberTests.UintToMillions()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_84 [label="Exit Humanizer.Tests.NumberToNumberTests.UintToMillions()", span="119-119", cluster="Humanizer.Tests.NumberToNumberTests.UintToMillions()", file="NumberToNumberTests.cs"];
m0_115 [label="Entry long.Billions()", span="192-192", cluster="long.Billions()", file="NumberToNumberTests.cs"];
m0_76 [label="Entry Humanizer.Tests.NumberToNumberTests.IntToMillions()", span="112-112", cluster="Humanizer.Tests.NumberToNumberTests.IntToMillions()", file="NumberToNumberTests.cs"];
m0_77 [label="int number = 4", span="114-114", cluster="Humanizer.Tests.NumberToNumberTests.IntToMillions()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_78 [label="Assert.Equal(4000000, number.Millions())", span="115-115", cluster="Humanizer.Tests.NumberToNumberTests.IntToMillions()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_79 [label="Exit Humanizer.Tests.NumberToNumberTests.IntToMillions()", span="112-112", cluster="Humanizer.Tests.NumberToNumberTests.IntToMillions()", file="NumberToNumberTests.cs"];
m0_66 [label="Entry Humanizer.Tests.NumberToNumberTests.UlongToThousands()", span="98-98", cluster="Humanizer.Tests.NumberToNumberTests.UlongToThousands()", file="NumberToNumberTests.cs"];
m0_67 [label="ulong number = 3", span="100-100", cluster="Humanizer.Tests.NumberToNumberTests.UlongToThousands()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_68 [label="Assert.Equal(3000UL, number.Thousands())", span="101-101", cluster="Humanizer.Tests.NumberToNumberTests.UlongToThousands()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_69 [label="Exit Humanizer.Tests.NumberToNumberTests.UlongToThousands()", span="98-98", cluster="Humanizer.Tests.NumberToNumberTests.UlongToThousands()", file="NumberToNumberTests.cs"];
m0_25 [label="Entry double.Tens()", span="48-48", cluster="double.Tens()", file="NumberToNumberTests.cs"];
m0_30 [label="Entry int.Hundreds()", span="56-56", cluster="int.Hundreds()", file="NumberToNumberTests.cs"];
m0_86 [label="Entry Humanizer.Tests.NumberToNumberTests.LongToMillions()", span="126-126", cluster="Humanizer.Tests.NumberToNumberTests.LongToMillions()", file="NumberToNumberTests.cs"];
m0_87 [label="long number = 4", span="128-128", cluster="Humanizer.Tests.NumberToNumberTests.LongToMillions()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_88 [label="Assert.Equal(4000000L, number.Millions())", span="129-129", cluster="Humanizer.Tests.NumberToNumberTests.LongToMillions()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_89 [label="Exit Humanizer.Tests.NumberToNumberTests.LongToMillions()", span="126-126", cluster="Humanizer.Tests.NumberToNumberTests.LongToMillions()", file="NumberToNumberTests.cs"];
m0_4 [label="Entry int.Tens()", span="16-16", cluster="int.Tens()", file="NumberToNumberTests.cs"];
m0_51 [label="Entry Humanizer.Tests.NumberToNumberTests.IntToThousands()", span="77-77", cluster="Humanizer.Tests.NumberToNumberTests.IntToThousands()", file="NumberToNumberTests.cs"];
m0_52 [label="int number = 3", span="79-79", cluster="Humanizer.Tests.NumberToNumberTests.IntToThousands()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_53 [label="Assert.Equal(3000, number.Thousands())", span="80-80", cluster="Humanizer.Tests.NumberToNumberTests.IntToThousands()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_54 [label="Exit Humanizer.Tests.NumberToNumberTests.IntToThousands()", span="77-77", cluster="Humanizer.Tests.NumberToNumberTests.IntToThousands()", file="NumberToNumberTests.cs"];
m0_90 [label="Entry long.Millions()", span="152-152", cluster="long.Millions()", file="NumberToNumberTests.cs"];
m0_105 [label="Entry int.Billions()", span="176-176", cluster="int.Billions()", file="NumberToNumberTests.cs"];
m0_11 [label="Entry Humanizer.Tests.NumberToNumberTests.LongToTens()", span="21-21", cluster="Humanizer.Tests.NumberToNumberTests.LongToTens()", file="NumberToNumberTests.cs"];
m0_12 [label="long number = 1", span="23-23", cluster="Humanizer.Tests.NumberToNumberTests.LongToTens()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_13 [label="Assert.Equal(10L, number.Tens())", span="24-24", cluster="Humanizer.Tests.NumberToNumberTests.LongToTens()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_14 [label="Exit Humanizer.Tests.NumberToNumberTests.LongToTens()", span="21-21", cluster="Humanizer.Tests.NumberToNumberTests.LongToTens()", file="NumberToNumberTests.cs"];
m0_75 [label="Entry double.Thousands()", span="128-128", cluster="double.Thousands()", file="NumberToNumberTests.cs"];
m0_15 [label="Entry long.Tens()", span="32-32", cluster="long.Tens()", file="NumberToNumberTests.cs"];
m0_106 [label="Entry Humanizer.Tests.NumberToNumberTests.UintToBillions()", span="154-154", cluster="Humanizer.Tests.NumberToNumberTests.UintToBillions()", file="NumberToNumberTests.cs"];
m0_107 [label="uint number = 1", span="156-156", cluster="Humanizer.Tests.NumberToNumberTests.UintToBillions()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_108 [label="Assert.Equal(1000000000U, number.Billions())", span="157-157", cluster="Humanizer.Tests.NumberToNumberTests.UintToBillions()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_109 [label="Exit Humanizer.Tests.NumberToNumberTests.UintToBillions()", span="154-154", cluster="Humanizer.Tests.NumberToNumberTests.UintToBillions()", file="NumberToNumberTests.cs"];
m0_65 [label="Entry long.Thousands()", span="112-112", cluster="long.Thousands()", file="NumberToNumberTests.cs"];
m0_95 [label="Entry ulong.Millions()", span="160-160", cluster="ulong.Millions()", file="NumberToNumberTests.cs"];
m0_26 [label="Entry Humanizer.Tests.NumberToNumberTests.IntToHundreds()", span="42-42", cluster="Humanizer.Tests.NumberToNumberTests.IntToHundreds()", file="NumberToNumberTests.cs"];
m0_27 [label="int number = 2", span="44-44", cluster="Humanizer.Tests.NumberToNumberTests.IntToHundreds()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_28 [label="Assert.Equal(200, number.Hundreds())", span="45-45", cluster="Humanizer.Tests.NumberToNumberTests.IntToHundreds()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_29 [label="Exit Humanizer.Tests.NumberToNumberTests.IntToHundreds()", span="42-42", cluster="Humanizer.Tests.NumberToNumberTests.IntToHundreds()", file="NumberToNumberTests.cs"];
m0_46 [label="Entry Humanizer.Tests.NumberToNumberTests.DoubleToHundreds()", span="70-70", cluster="Humanizer.Tests.NumberToNumberTests.DoubleToHundreds()", file="NumberToNumberTests.cs"];
m0_47 [label="double number = 2", span="72-72", cluster="Humanizer.Tests.NumberToNumberTests.DoubleToHundreds()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_48 [label="Assert.Equal(200d, number.Hundreds())", span="73-73", cluster="Humanizer.Tests.NumberToNumberTests.DoubleToHundreds()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_49 [label="Exit Humanizer.Tests.NumberToNumberTests.DoubleToHundreds()", span="70-70", cluster="Humanizer.Tests.NumberToNumberTests.DoubleToHundreds()", file="NumberToNumberTests.cs"];
m0_16 [label="Entry Humanizer.Tests.NumberToNumberTests.UlongToTens()", span="28-28", cluster="Humanizer.Tests.NumberToNumberTests.UlongToTens()", file="NumberToNumberTests.cs"];
m0_17 [label="ulong number = 1", span="30-30", cluster="Humanizer.Tests.NumberToNumberTests.UlongToTens()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_18 [label="Assert.Equal(10UL, number.Tens())", span="31-31", cluster="Humanizer.Tests.NumberToNumberTests.UlongToTens()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_19 [label="Exit Humanizer.Tests.NumberToNumberTests.UlongToTens()", span="28-28", cluster="Humanizer.Tests.NumberToNumberTests.UlongToTens()", file="NumberToNumberTests.cs"];
m0_36 [label="Entry Humanizer.Tests.NumberToNumberTests.LongToHundreds()", span="56-56", cluster="Humanizer.Tests.NumberToNumberTests.LongToHundreds()", file="NumberToNumberTests.cs"];
m0_37 [label="long number = 2", span="58-58", cluster="Humanizer.Tests.NumberToNumberTests.LongToHundreds()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_38 [label="Assert.Equal(200L, number.Hundreds())", span="59-59", cluster="Humanizer.Tests.NumberToNumberTests.LongToHundreds()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_39 [label="Exit Humanizer.Tests.NumberToNumberTests.LongToHundreds()", span="56-56", cluster="Humanizer.Tests.NumberToNumberTests.LongToHundreds()", file="NumberToNumberTests.cs"];
m0_40 [label="Entry long.Hundreds()", span="72-72", cluster="long.Hundreds()", file="NumberToNumberTests.cs"];
m0_91 [label="Entry Humanizer.Tests.NumberToNumberTests.UlongToMillions()", span="133-133", cluster="Humanizer.Tests.NumberToNumberTests.UlongToMillions()", file="NumberToNumberTests.cs"];
m0_92 [label="ulong number = 4", span="135-135", cluster="Humanizer.Tests.NumberToNumberTests.UlongToMillions()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_93 [label="Assert.Equal(4000000UL, number.Millions())", span="136-136", cluster="Humanizer.Tests.NumberToNumberTests.UlongToMillions()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_94 [label="Exit Humanizer.Tests.NumberToNumberTests.UlongToMillions()", span="133-133", cluster="Humanizer.Tests.NumberToNumberTests.UlongToMillions()", file="NumberToNumberTests.cs"];
m0_70 [label="Entry ulong.Thousands()", span="120-120", cluster="ulong.Thousands()", file="NumberToNumberTests.cs"];
m0_100 [label="Entry double.Millions()", span="168-168", cluster="double.Millions()", file="NumberToNumberTests.cs"];
m0_101 [label="Entry Humanizer.Tests.NumberToNumberTests.IntToBillions()", span="147-147", cluster="Humanizer.Tests.NumberToNumberTests.IntToBillions()", file="NumberToNumberTests.cs"];
m0_102 [label="int number = 1", span="149-149", cluster="Humanizer.Tests.NumberToNumberTests.IntToBillions()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_103 [label="Assert.Equal(1000000000, number.Billions())", span="150-150", cluster="Humanizer.Tests.NumberToNumberTests.IntToBillions()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_104 [label="Exit Humanizer.Tests.NumberToNumberTests.IntToBillions()", span="147-147", cluster="Humanizer.Tests.NumberToNumberTests.IntToBillions()", file="NumberToNumberTests.cs"];
m0_0 [label="Entry Humanizer.Tests.NumberToNumberTests.IntToTens()", span="7-7", cluster="Humanizer.Tests.NumberToNumberTests.IntToTens()", file="NumberToNumberTests.cs"];
m0_1 [label="int number = 1", span="9-9", cluster="Humanizer.Tests.NumberToNumberTests.IntToTens()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_2 [label="Assert.Equal(10, number.Tens())", span="10-10", cluster="Humanizer.Tests.NumberToNumberTests.IntToTens()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_3 [label="Exit Humanizer.Tests.NumberToNumberTests.IntToTens()", span="7-7", cluster="Humanizer.Tests.NumberToNumberTests.IntToTens()", file="NumberToNumberTests.cs"];
m0_56 [label="Entry Humanizer.Tests.NumberToNumberTests.UintToThousands()", span="84-84", cluster="Humanizer.Tests.NumberToNumberTests.UintToThousands()", file="NumberToNumberTests.cs"];
m0_57 [label="uint number = 3", span="86-86", cluster="Humanizer.Tests.NumberToNumberTests.UintToThousands()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_58 [label="Assert.Equal(3000U, number.Thousands())", span="87-87", cluster="Humanizer.Tests.NumberToNumberTests.UintToThousands()", color=green, community=0, file="NumberToNumberTests.cs"];
m0_59 [label="Exit Humanizer.Tests.NumberToNumberTests.UintToThousands()", span="84-84", cluster="Humanizer.Tests.NumberToNumberTests.UintToThousands()", file="NumberToNumberTests.cs"];
m0_10 [label="Entry uint.Tens()", span="24-24", cluster="uint.Tens()", file="NumberToNumberTests.cs"];
d1 -> d2  [key=0, style=solid, color=green];
d0 -> d1  [key=0, style=solid, color=green];
d2 -> d0  [key=0, style=bold, color=blue];
d4 -> d5  [key=0, style=solid, color=green];
d3 -> d4  [key=0, style=solid, color=green];
d5 -> d3  [key=0, style=bold, color=blue];
d7 -> d8  [key=0, style=solid, color=green];
d6 -> d7  [key=0, style=solid, color=green];
d8 -> d6  [key=0, style=bold, color=blue];
d10 -> d11  [key=0, style=solid, color=green];
d9 -> d10  [key=0, style=solid, color=green];
d11 -> d9  [key=0, style=bold, color=blue];
d13 -> d14  [key=0, style=solid, color=green];
d12 -> d13  [key=0, style=solid, color=green];
d14 -> d12  [key=0, style=bold, color=blue];
d16 -> d17  [key=0, style=solid, color=green];
d15 -> d16  [key=0, style=solid, color=green];
d17 -> d15  [key=0, style=bold, color=blue];
d19 -> d20  [key=0, style=solid, color=green];
d18 -> d19  [key=0, style=solid, color=green];
d20 -> d18  [key=0, style=bold, color=blue];
d22 -> d23  [key=0, style=solid, color=green];
d21 -> d22  [key=0, style=solid, color=green];
d23 -> d21  [key=0, style=bold, color=blue];
d25 -> d26  [key=0, style=solid, color=green];
d24 -> d25  [key=0, style=solid, color=green];
d26 -> d24  [key=0, style=bold, color=blue];
d28 -> d29  [key=0, style=solid, color=green];
d27 -> d28  [key=0, style=solid, color=green];
d29 -> d27  [key=0, style=bold, color=blue];
d31 -> d32  [key=0, style=solid, color=green];
d30 -> d31  [key=0, style=solid, color=green];
d32 -> d30  [key=0, style=bold, color=blue];
d34 -> d35  [key=0, style=solid, color=green];
d33 -> d34  [key=0, style=solid, color=green];
d35 -> d33  [key=0, style=bold, color=blue];
d37 -> d38  [key=0, style=solid, color=green];
d36 -> d37  [key=0, style=solid, color=green];
d38 -> d36  [key=0, style=bold, color=blue];
d40 -> d41  [key=0, style=solid, color=green];
d39 -> d40  [key=0, style=solid, color=green];
d41 -> d39  [key=0, style=bold, color=blue];
d43 -> d44  [key=0, style=solid, color=green];
d42 -> d43  [key=0, style=solid, color=green];
d44 -> d42  [key=0, style=bold, color=blue];
d46 -> d47  [key=0, style=solid, color=green];
d45 -> d46  [key=0, style=solid, color=green];
d47 -> d45  [key=0, style=bold, color=blue];
d49 -> d50  [key=0, style=solid, color=green];
d48 -> d49  [key=0, style=solid, color=green];
d50 -> d48  [key=0, style=bold, color=blue];
d52 -> d53  [key=0, style=solid, color=green];
d51 -> d52  [key=0, style=solid, color=green];
d53 -> d51  [key=0, style=bold, color=blue];
d55 -> d56  [key=0, style=solid, color=green];
d54 -> d55  [key=0, style=solid, color=green];
d56 -> d54  [key=0, style=bold, color=blue];
d58 -> d59  [key=0, style=solid, color=green];
d57 -> d58  [key=0, style=solid, color=green];
d59 -> d57  [key=0, style=bold, color=blue];
d61 -> d62  [key=0, style=solid, color=green];
d60 -> d61  [key=0, style=solid, color=green];
d62 -> d60  [key=0, style=bold, color=blue];
d64 -> d65  [key=0, style=solid, color=green];
d63 -> d64  [key=0, style=solid, color=green];
d65 -> d63  [key=0, style=bold, color=blue];
d67 -> d68  [key=0, style=solid, color=green];
d66 -> d67  [key=0, style=solid, color=green];
d68 -> d66  [key=0, style=bold, color=blue];
d70 -> d71  [key=0, style=solid, color=green];
d69 -> d70  [key=0, style=solid, color=green];
d71 -> d69  [key=0, style=bold, color=blue];
d73 -> d74  [key=0, style=solid, color=green];
d72 -> d73  [key=0, style=solid, color=green];
d74 -> d72  [key=0, style=bold, color=blue];
m0_96 -> m0_97  [key=0, style=solid, color=green];
m0_97 -> m0_77  [key=3, color=green, style=bold, label="Local variable double number"];
m0_97 -> m0_98  [key=0, style=solid, color=green];
m0_98 -> m0_99  [key=0, style=solid, color=green];
m0_98 -> m0_100  [key=2, style=dotted, color=green];
m0_98 -> m0_5  [key=2, style=dotted, color=green];
m0_99 -> m0_96  [key=0, style=bold, color=blue];
m0_71 -> m0_72  [key=0, style=solid, color=green];
m0_72 -> m0_52  [key=3, color=green, style=bold, label="Local variable double number"];
m0_72 -> m0_73  [key=0, style=solid, color=green];
m0_73 -> m0_74  [key=0, style=solid, color=green];
m0_73 -> m0_75  [key=2, style=dotted, color=green];
m0_73 -> m0_5  [key=2, style=dotted, color=green];
m0_74 -> m0_71  [key=0, style=bold, color=blue];
m0_116 -> m0_117  [key=0, style=solid, color=green];
m0_117 -> m0_1  [key=3, color=green, style=bold, label="Local variable ulong number"];
m0_117 -> m0_118  [key=0, style=solid, color=green];
m0_118 -> m0_119  [key=0, style=solid, color=green];
m0_118 -> m0_120  [key=2, style=dotted, color=green];
m0_118 -> m0_5  [key=2, style=dotted, color=green];
m0_119 -> m0_116  [key=0, style=bold, color=blue];
m0_31 -> m0_32  [key=0, style=solid, color=green];
m0_32 -> m0_27  [key=3, color=green, style=bold, label="Local variable uint number"];
m0_32 -> m0_33  [key=0, style=solid, color=green];
m0_33 -> m0_34  [key=0, style=solid, color=green];
m0_33 -> m0_35  [key=2, style=dotted, color=green];
m0_33 -> m0_5  [key=2, style=dotted, color=green];
m0_34 -> m0_31  [key=0, style=bold, color=blue];
m0_6 -> m0_7  [key=0, style=solid, color=green];
m0_7 -> m0_8  [key=0, style=solid, color=green];
m0_8 -> m0_9  [key=0, style=solid, color=green];
m0_8 -> m0_10  [key=2, style=dotted, color=green];
m0_8 -> m0_5  [key=2, style=dotted, color=green];
m0_9 -> m0_6  [key=0, style=bold, color=blue];
m0_41 -> m0_42  [key=0, style=solid, color=green];
m0_42 -> m0_27  [key=3, color=green, style=bold, label="Local variable ulong number"];
m0_42 -> m0_43  [key=0, style=solid, color=green];
m0_43 -> m0_44  [key=0, style=solid, color=green];
m0_43 -> m0_45  [key=2, style=dotted, color=green];
m0_43 -> m0_5  [key=2, style=dotted, color=green];
m0_44 -> m0_41  [key=0, style=bold, color=blue];
m0_21 -> m0_22  [key=0, style=solid, color=green];
m0_22 -> m0_1  [key=3, color=green, style=bold, label="Local variable double number"];
m0_22 -> m0_23  [key=0, style=solid, color=green];
m0_23 -> m0_24  [key=0, style=solid, color=green];
m0_23 -> m0_25  [key=2, style=dotted, color=green];
m0_23 -> m0_5  [key=2, style=dotted, color=green];
m0_24 -> m0_21  [key=0, style=bold, color=blue];
m0_111 -> m0_112  [key=0, style=solid, color=green];
m0_112 -> m0_1  [key=3, color=green, style=bold, label="Local variable long number"];
m0_112 -> m0_113  [key=0, style=solid, color=green];
m0_113 -> m0_114  [key=0, style=solid, color=green];
m0_113 -> m0_115  [key=2, style=dotted, color=green];
m0_113 -> m0_5  [key=2, style=dotted, color=green];
m0_114 -> m0_111  [key=0, style=bold, color=blue];
m0_121 -> m0_122  [key=0, style=solid, color=green];
m0_122 -> m0_1  [key=3, color=green, style=bold, label="Local variable double number"];
m0_122 -> m0_123  [key=0, style=solid, color=green];
m0_123 -> m0_124  [key=0, style=solid, color=green];
m0_123 -> m0_125  [key=2, style=dotted, color=green];
m0_123 -> m0_5  [key=2, style=dotted, color=green];
m0_124 -> m0_121  [key=0, style=bold, color=blue];
m0_61 -> m0_62  [key=0, style=solid, color=green];
m0_62 -> m0_52  [key=3, color=green, style=bold, label="Local variable long number"];
m0_62 -> m0_63  [key=0, style=solid, color=green];
m0_63 -> m0_64  [key=0, style=solid, color=green];
m0_63 -> m0_65  [key=2, style=dotted, color=green];
m0_63 -> m0_5  [key=2, style=dotted, color=green];
m0_64 -> m0_61  [key=0, style=bold, color=blue];
m0_81 -> m0_82  [key=0, style=solid, color=green];
m0_82 -> m0_77  [key=3, color=green, style=bold, label="Local variable uint number"];
m0_82 -> m0_83  [key=0, style=solid, color=green];
m0_83 -> m0_84  [key=0, style=solid, color=green];
m0_83 -> m0_85  [key=2, style=dotted, color=green];
m0_83 -> m0_5  [key=2, style=dotted, color=green];
m0_84 -> m0_81  [key=0, style=bold, color=blue];
m0_76 -> m0_77  [key=0, style=solid, color=green];
m0_77 -> m0_77  [key=3, color=green, style=bold, label="Local variable int number"];
m0_77 -> m0_78  [key=0, style=solid, color=green];
m0_78 -> m0_79  [key=0, style=solid, color=green];
m0_78 -> m0_80  [key=2, style=dotted, color=green];
m0_78 -> m0_5  [key=2, style=dotted, color=green];
m0_79 -> m0_76  [key=0, style=bold, color=blue];
m0_66 -> m0_67  [key=0, style=solid, color=green];
m0_67 -> m0_52  [key=3, color=green, style=bold, label="Local variable ulong number"];
m0_67 -> m0_68  [key=0, style=solid, color=green];
m0_68 -> m0_69  [key=0, style=solid, color=green];
m0_68 -> m0_70  [key=2, style=dotted, color=green];
m0_68 -> m0_5  [key=2, style=dotted, color=green];
m0_69 -> m0_66  [key=0, style=bold, color=blue];
m0_86 -> m0_87  [key=0, style=solid, color=green];
m0_87 -> m0_88  [key=0, style=solid, color=green];
m0_88 -> m0_89  [key=0, style=solid, color=green];
m0_88 -> m0_90  [key=2, style=dotted, color=green];
m0_88 -> m0_5  [key=2, style=dotted, color=green];
m0_89 -> m0_86  [key=0, style=bold, color=blue];
m0_4 -> m0_1  [key=3, color=green, style=bold, label="Local variable uint number"];
m0_51 -> m0_52  [key=0, style=solid, color=green];
m0_52 -> m0_52  [key=3, color=green, style=bold, label="Local variable int number"];
m0_52 -> m0_53  [key=0, style=solid, color=green];
m0_53 -> m0_54  [key=0, style=solid, color=green];
m0_53 -> m0_55  [key=2, style=dotted, color=green];
m0_53 -> m0_5  [key=2, style=dotted, color=green];
m0_54 -> m0_51  [key=0, style=bold, color=blue];
m0_11 -> m0_12  [key=0, style=solid, color=green];
m0_12 -> m0_1  [key=3, color=green, style=bold, label="Local variable long number"];
m0_12 -> m0_13  [key=0, style=solid, color=green];
m0_13 -> m0_14  [key=0, style=solid, color=green];
m0_13 -> m0_15  [key=2, style=dotted, color=green];
m0_13 -> m0_5  [key=2, style=dotted, color=green];
m0_14 -> m0_11  [key=0, style=bold, color=blue];
m0_75 -> m0_77  [key=3, color=green, style=bold, label="Local variable long number"];
m0_106 -> m0_107  [key=0, style=solid, color=green];
m0_107 -> m0_1  [key=3, color=green, style=bold, label="Local variable uint number"];
m0_107 -> m0_108  [key=0, style=solid, color=green];
m0_108 -> m0_109  [key=0, style=solid, color=green];
m0_108 -> m0_110  [key=2, style=dotted, color=green];
m0_108 -> m0_5  [key=2, style=dotted, color=green];
m0_109 -> m0_106  [key=0, style=bold, color=blue];
m0_26 -> m0_27  [key=0, style=solid, color=green];
m0_27 -> m0_27  [key=3, color=green, style=bold, label="Local variable int number"];
m0_27 -> m0_28  [key=0, style=solid, color=green];
m0_28 -> m0_29  [key=0, style=solid, color=green];
m0_28 -> m0_30  [key=2, style=dotted, color=green];
m0_28 -> m0_5  [key=2, style=dotted, color=green];
m0_29 -> m0_26  [key=0, style=bold, color=blue];
m0_46 -> m0_47  [key=0, style=solid, color=green];
m0_47 -> m0_48  [key=0, style=solid, color=green];
m0_48 -> m0_49  [key=0, style=solid, color=green];
m0_48 -> m0_50  [key=2, style=dotted, color=green];
m0_48 -> m0_5  [key=2, style=dotted, color=green];
m0_49 -> m0_46  [key=0, style=bold, color=blue];
m0_16 -> m0_17  [key=0, style=solid, color=green];
m0_17 -> m0_1  [key=3, color=green, style=bold, label="Local variable ulong number"];
m0_17 -> m0_18  [key=0, style=solid, color=green];
m0_18 -> m0_19  [key=0, style=solid, color=green];
m0_18 -> m0_20  [key=2, style=dotted, color=green];
m0_18 -> m0_5  [key=2, style=dotted, color=green];
m0_19 -> m0_16  [key=0, style=bold, color=blue];
m0_36 -> m0_37  [key=0, style=solid, color=green];
m0_37 -> m0_27  [key=3, color=green, style=bold, label="Local variable long number"];
m0_37 -> m0_38  [key=0, style=solid, color=green];
m0_38 -> m0_39  [key=0, style=solid, color=green];
m0_38 -> m0_40  [key=2, style=dotted, color=green];
m0_38 -> m0_5  [key=2, style=dotted, color=green];
m0_39 -> m0_36  [key=0, style=bold, color=blue];
m0_40 -> m0_27  [key=3, color=green, style=bold, label="Local variable double number"];
m0_91 -> m0_92  [key=0, style=solid, color=green];
m0_92 -> m0_77  [key=3, color=green, style=bold, label="Local variable ulong number"];
m0_92 -> m0_93  [key=0, style=solid, color=green];
m0_93 -> m0_94  [key=0, style=solid, color=green];
m0_93 -> m0_95  [key=2, style=dotted, color=green];
m0_93 -> m0_5  [key=2, style=dotted, color=green];
m0_94 -> m0_91  [key=0, style=bold, color=blue];
m0_101 -> m0_102  [key=0, style=solid, color=green];
m0_102 -> m0_1  [key=3, color=green, style=bold, label="Local variable int number"];
m0_102 -> m0_103  [key=0, style=solid, color=green];
m0_103 -> m0_104  [key=0, style=solid, color=green];
m0_103 -> m0_105  [key=2, style=dotted, color=green];
m0_103 -> m0_5  [key=2, style=dotted, color=green];
m0_104 -> m0_101  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid, color=green];
m0_1 -> m0_1  [key=3, color=green, style=bold, label="Local variable int number"];
m0_1 -> m0_2  [key=0, style=solid, color=green];
m0_2 -> m0_3  [key=0, style=solid, color=green];
m0_2 -> m0_4  [key=2, style=dotted, color=green];
m0_2 -> m0_5  [key=2, style=dotted, color=green];
m0_3 -> m0_0  [key=0, style=bold, color=blue];
m0_56 -> m0_57  [key=0, style=solid, color=green];
m0_57 -> m0_52  [key=3, color=green, style=bold, label="Local variable uint number"];
m0_57 -> m0_58  [key=0, style=solid, color=green];
m0_58 -> m0_59  [key=0, style=solid, color=green];
m0_58 -> m0_60  [key=2, style=dotted, color=green];
m0_58 -> m0_5  [key=2, style=dotted, color=green];
m0_59 -> m0_56  [key=0, style=bold, color=blue];
}
