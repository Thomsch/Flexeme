digraph  {
m0_7 [label="Entry Humanizer.Localisation.Formatters.RussianFormatter.RussianFormatter()", span="4-4", cluster="Humanizer.Localisation.Formatters.RussianFormatter.RussianFormatter()", file="Configurator.cs"];
m0_3 [label="Entry Humanizer.Localisation.Formatters.RomanianFormatter.RomanianFormatter()", span="2-2", cluster="Humanizer.Localisation.Formatters.RomanianFormatter.RomanianFormatter()", file="Configurator.cs"];
m0_19 [label="Entry Humanizer.Localisation.Formatters.CzechSlovakPolishFormatter.CzechSlovakPolishFormatter()", span="2-2", cluster="Humanizer.Localisation.Formatters.CzechSlovakPolishFormatter.CzechSlovakPolishFormatter()", file="Configurator.cs"];
m0_15 [label="Entry Humanizer.Localisation.Formatters.HebrewFormatter.HebrewFormatter()", span="2-2", cluster="Humanizer.Localisation.Formatters.HebrewFormatter.HebrewFormatter()", file="Configurator.cs"];
m0_11 [label="Entry Humanizer.Localisation.Formatters.ArabicFormatter.ArabicFormatter()", span="2-2", cluster="Humanizer.Localisation.Formatters.ArabicFormatter.ArabicFormatter()", file="Configurator.cs"];
m0_23 [label="Entry lambda expression", span="22-22", cluster="lambda expression", file="Configurator.cs"];
m0_0 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="Configurator.cs"];
m0_1 [label="new RomanianFormatter()", span="16-16", cluster="lambda expression", file="Configurator.cs"];
m0_2 [label="Exit lambda expression", span="16-16", cluster="lambda expression", file="Configurator.cs"];
m0_4 [label="Entry lambda expression", span="17-17", cluster="lambda expression", file="Configurator.cs"];
m0_5 [label="new RussianFormatter()", span="17-17", cluster="lambda expression", file="Configurator.cs"];
m0_6 [label="Exit lambda expression", span="17-17", cluster="lambda expression", file="Configurator.cs"];
m0_8 [label="Entry lambda expression", span="18-18", cluster="lambda expression", file="Configurator.cs"];
m0_9 [label="new ArabicFormatter()", span="18-18", cluster="lambda expression", file="Configurator.cs"];
m0_10 [label="Exit lambda expression", span="18-18", cluster="lambda expression", file="Configurator.cs"];
m0_12 [label="Entry lambda expression", span="19-19", cluster="lambda expression", file="Configurator.cs"];
m0_13 [label="new HebrewFormatter()", span="19-19", cluster="lambda expression", file="Configurator.cs"];
m0_14 [label="Exit lambda expression", span="19-19", cluster="lambda expression", file="Configurator.cs"];
m0_16 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="Configurator.cs"];
m0_17 [label="new CzechSlovakPolishFormatter()", span="20-20", cluster="lambda expression", file="Configurator.cs"];
m0_18 [label="Exit lambda expression", span="20-20", cluster="lambda expression", file="Configurator.cs"];
m0_20 [label="Entry lambda expression", span="21-21", cluster="lambda expression", file="Configurator.cs"];
m0_21 [label="new CzechSlovakPolishFormatter()", span="21-21", cluster="lambda expression", file="Configurator.cs"];
m0_22 [label="Exit lambda expression", span="21-21", cluster="lambda expression", file="Configurator.cs"];
m0_24 [label="new CzechSlovakPolishFormatter()", span="22-22", cluster="lambda expression", file="Configurator.cs"];
m0_25 [label="Exit lambda expression", span="22-22", cluster="lambda expression", file="Configurator.cs"];
m1_0 [label="Entry Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.DateHumanizeTests()", span="7-7", cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.DateHumanizeTests()", file="DateHumanizeTests.cs"];
m1_1 [label="Exit Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.DateHumanizeTests()", span="7-7", cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.DateHumanizeTests()", file="DateHumanizeTests.cs"];
m1_5 [label="Entry Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?)", span="29-29", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?)", file="DateHumanizeTests.cs"];
m1_2 [label="Entry Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.DaysAgo(int, string)", span="17-17", cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.DaysAgo(int, string)", file="DateHumanizeTests.cs"];
m1_3 [label="DateHumanize.Verify(expected, days, TimeUnit.Day, Tense.Past)", span="19-19", cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.DaysAgo(int, string)", file="DateHumanizeTests.cs"];
m1_4 [label="Exit Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.DaysAgo(int, string)", span="17-17", cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.DaysAgo(int, string)", file="DateHumanizeTests.cs"];
m1_12 [label="Entry Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.MonthsAgo(int, string)", span="47-47", cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.MonthsAgo(int, string)", file="DateHumanizeTests.cs"];
m1_13 [label="DateHumanize.Verify(expected, months, TimeUnit.Month, Tense.Past)", span="49-49", cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.MonthsAgo(int, string)", file="DateHumanizeTests.cs"];
m1_14 [label="Exit Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.MonthsAgo(int, string)", span="47-47", cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.MonthsAgo(int, string)", file="DateHumanizeTests.cs"];
m1_9 [label="Entry Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.MinutesAgo(int, string)", span="37-37", cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.MinutesAgo(int, string)", file="DateHumanizeTests.cs"];
m1_10 [label="DateHumanize.Verify(expected, minutes, TimeUnit.Minute, Tense.Past)", span="39-39", cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.MinutesAgo(int, string)", file="DateHumanizeTests.cs"];
m1_11 [label="Exit Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.MinutesAgo(int, string)", span="37-37", cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.MinutesAgo(int, string)", file="DateHumanizeTests.cs"];
m1_6 [label="Entry Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.HoursAgo(int, string)", span="27-27", cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.HoursAgo(int, string)", file="DateHumanizeTests.cs"];
m1_7 [label="DateHumanize.Verify(expected, hours, TimeUnit.Hour, Tense.Past)", span="29-29", cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.HoursAgo(int, string)", file="DateHumanizeTests.cs"];
m1_8 [label="Exit Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.HoursAgo(int, string)", span="27-27", cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.HoursAgo(int, string)", file="DateHumanizeTests.cs"];
m1_18 [label="Entry Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.YearsAgo(int, string)", span="67-67", cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.YearsAgo(int, string)", file="DateHumanizeTests.cs"];
m1_19 [label="DateHumanize.Verify(expected, years, TimeUnit.Year, Tense.Past)", span="69-69", cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.YearsAgo(int, string)", file="DateHumanizeTests.cs"];
m1_20 [label="Exit Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.YearsAgo(int, string)", span="67-67", cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.YearsAgo(int, string)", file="DateHumanizeTests.cs"];
m1_15 [label="Entry Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.SecondsAgo(int, string)", span="57-57", cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.SecondsAgo(int, string)", file="DateHumanizeTests.cs"];
m1_16 [label="DateHumanize.Verify(expected, seconds, TimeUnit.Second, Tense.Past)", span="59-59", cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.SecondsAgo(int, string)", file="DateHumanizeTests.cs"];
m1_17 [label="Exit Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.SecondsAgo(int, string)", span="57-57", cluster="Humanizer.Tests.Localisation.fiFI.DateHumanizeTests.SecondsAgo(int, string)", file="DateHumanizeTests.cs"];
m2_31 [label="Entry System.TimeSpan.TimeSpan(long)", span="0-0", cluster="System.TimeSpan.TimeSpan(long)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_32 [label="Entry System.Math.Abs(long)", span="0-0", cluster="System.Math.Abs(long)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_36 [label="Entry System.Convert.ToInt32(double)", span="0-0", cluster="System.Convert.ToInt32(double)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_33 [label="Entry Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="10-10", cluster="Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_35 [label="Entry System.Math.Floor(double)", span="0-0", cluster="System.Math.Floor(double)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_0 [label="Entry Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", span="18-18", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_1 [label="var tense = input > comparisonBase ? Tense.Future : Tense.Past", span="20-20", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_2 [label="var ts = new TimeSpan(Math.Abs(comparisonBase.Ticks - input.Ticks))", span="21-21", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_20 [label="comparisonBase.Date.AddMonths(tense == Tense.Future ? 1 : -1) == input.Date", span="49-49", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_4 [label="return Configurator.Formatter.DateHumanize(TimeUnit.Millisecond, tense, 0);", span="24-24", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_6 [label="return Configurator.Formatter.DateHumanize(TimeUnit.Second, tense, ts.Seconds);", span="27-27", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_8 [label="return Configurator.Formatter.DateHumanize(TimeUnit.Minute, tense, 1);", span="30-30", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_10 [label="return Configurator.Formatter.DateHumanize(TimeUnit.Minute, tense, ts.Minutes);", span="33-33", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_12 [label="return Configurator.Formatter.DateHumanize(TimeUnit.Hour, tense, 1);", span="36-36", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_14 [label="return Configurator.Formatter.DateHumanize(TimeUnit.Hour, tense, ts.Hours);", span="39-39", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_16 [label="return Configurator.Formatter.DateHumanize(TimeUnit.Day, tense, 1);", span="42-42", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_18 [label="return Configurator.Formatter.DateHumanize(TimeUnit.Day, tense, ts.Days);", span="45-45", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_21 [label="return Configurator.Formatter.DateHumanize(TimeUnit.Month, tense, 1);", span="50-50", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_22 [label="return Configurator.Formatter.DateHumanize(TimeUnit.Day, tense, ts.Days);", span="51-51", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_25 [label="return Configurator.Formatter.DateHumanize(TimeUnit.Month, tense, months);", span="57-57", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_29 [label="return Configurator.Formatter.DateHumanize(TimeUnit.Year, tense, years);", span="63-63", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_3 [label="ts.TotalMilliseconds < 500", span="23-23", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_5 [label="ts.TotalSeconds < 60", span="26-26", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_7 [label="ts.TotalSeconds < 120", span="29-29", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_9 [label="ts.TotalMinutes < 45", span="32-32", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_11 [label="ts.TotalMinutes < 90", span="35-35", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_13 [label="ts.TotalHours < 24", span="38-38", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_15 [label="ts.TotalHours < 48", span="41-41", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_17 [label="ts.TotalDays < 28", span="44-44", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_19 [label="ts.TotalDays >= 28 && ts.TotalDays < 30", span="47-47", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_23 [label="ts.TotalDays < 345", span="54-54", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_24 [label="int months = Convert.ToInt32(Math.Floor(ts.TotalDays / 29.5))", span="56-56", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_26 [label="int years = Convert.ToInt32(Math.Floor(ts.TotalDays / 365))", span="60-60", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_27 [label="years == 0", span="61-61", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_28 [label="years = 1", span="61-61", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_30 [label="Exit Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", span="18-18", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_34 [label="Entry System.DateTime.AddMonths(int)", span="0-0", cluster="System.DateTime.AddMonths(int)", file="DefaultDateTimeHumanizeStrategy.cs"];
m3_30 [label="Entry Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceKey(string, int)", span="57-57", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceKey(string, int)", file="DefaultFormatter.cs"];
m3_32 [label="return resourceKey;", span="59-59", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceKey(string, int)", file="DefaultFormatter.cs"];
m3_33 [label="Exit Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceKey(string, int)", span="57-57", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceKey(string, int)", file="DefaultFormatter.cs"];
m3_4 [label="Entry CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string)", span="41-41", cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string)", file="DefaultFormatter.cs"];
m3_5 [label="Exit CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string)", span="41-41", cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string)", color=green, community=0, file="DefaultFormatter.cs"];
m3_6 [label="Entry CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string)", span="54-54", cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string)", file="DefaultFormatter.cs"];
m3_2 [label="Exit Humanizer.Localisation.Formatters.DefaultFormatter.DateHumanize_Now()", span="11-11", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.DateHumanize_Now()", file="DefaultFormatter.cs"];
m3_3 [label="Entry Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceForDate(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="35-35", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceForDate(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", file="DefaultFormatter.cs"];
m3_14 [label="string resourceKey = ResourceKeys.DateHumanize.GetResourceKey(unit, timeUnitTense: timeUnitTense, count: count)", span="37-37", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceForDate(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", color=green, community=0, file="DefaultFormatter.cs"];
m3_15 [label="return count == 1 ? Format(resourceKey) : Format(resourceKey, count);", span="38-38", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceForDate(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", color=green, community=0, file="DefaultFormatter.cs"];
m3_16 [label="Exit Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceForDate(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="35-35", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceForDate(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", file="DefaultFormatter.cs"];
m3_17 [label="Entry Humanizer.Localisation.ResourceKeys.DateHumanize.GetResourceKey(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="27-27", cluster="Humanizer.Localisation.ResourceKeys.DateHumanize.GetResourceKey(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", file="DefaultFormatter.cs"];
m3_11 [label="Entry Humanizer.Localisation.Formatters.DefaultFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", span="30-30", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", file="DefaultFormatter.cs"];
m3_12 [label="return GetResourceForTimeSpan(timeUnit, unit);", span="32-32", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", file="DefaultFormatter.cs"];
m3_13 [label="Exit Humanizer.Localisation.Formatters.DefaultFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", span="30-30", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", file="DefaultFormatter.cs"];
m3_7 [label="Entry Humanizer.Localisation.Formatters.DefaultFormatter.TimeSpanHumanize_Zero()", span="25-25", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.TimeSpanHumanize_Zero()", file="DefaultFormatter.cs"];
m3_27 [label="Entry Humanizer.Localisation.Resources.GetResource(string)", span="16-16", cluster="Humanizer.Localisation.Resources.GetResource(string)", file="DefaultFormatter.cs"];
m3_19 [label="Entry Humanizer.Localisation.Formatters.DefaultFormatter.Format(string, int)", span="52-52", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.Format(string, int)", file="DefaultFormatter.cs"];
m3_28 [label="return Resources.GetResource(GetResourceKey(resourceKey, number)).FormatWith(number);", span="54-54", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.Format(string, int)", file="DefaultFormatter.cs"];
m3_29 [label="Exit Humanizer.Localisation.Formatters.DefaultFormatter.Format(string, int)", span="52-52", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.Format(string, int)", file="DefaultFormatter.cs"];
m3_10 [label="Entry Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceForTimeSpan(Humanizer.Localisation.TimeUnit, int)", span="41-41", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceForTimeSpan(Humanizer.Localisation.TimeUnit, int)", file="DefaultFormatter.cs"];
m3_21 [label="return count == 1 ? Format(resourceKey) : Format(resourceKey, count);", span="44-44", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceForTimeSpan(Humanizer.Localisation.TimeUnit, int)", file="DefaultFormatter.cs"];
m3_20 [label="string resourceKey = ResourceKeys.TimeSpanHumanize.GetResourceKey(unit, count)", span="43-43", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceForTimeSpan(Humanizer.Localisation.TimeUnit, int)", file="DefaultFormatter.cs"];
m3_22 [label="Exit Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceForTimeSpan(Humanizer.Localisation.TimeUnit, int)", span="41-41", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceForTimeSpan(Humanizer.Localisation.TimeUnit, int)", file="DefaultFormatter.cs"];
m3_8 [label="return GetResourceForTimeSpan(TimeUnit.Millisecond, 0);", span="27-27", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.TimeSpanHumanize_Zero()", file="DefaultFormatter.cs"];
m3_9 [label="Exit Humanizer.Localisation.Formatters.DefaultFormatter.TimeSpanHumanize_Zero()", span="25-25", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.TimeSpanHumanize_Zero()", file="DefaultFormatter.cs"];
m3_31 [label="Entry string.FormatWith(params object[])", span="15-15", cluster="string.FormatWith(params object[])", file="DefaultFormatter.cs"];
m3_18 [label="Entry Humanizer.Localisation.Formatters.DefaultFormatter.Format(string)", span="47-47", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.Format(string)", file="DefaultFormatter.cs"];
m3_24 [label="return Resources.GetResource(GetResourceKey(resourceKey));", span="49-49", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.Format(string)", file="DefaultFormatter.cs"];
m3_25 [label="Exit Humanizer.Localisation.Formatters.DefaultFormatter.Format(string)", span="47-47", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.Format(string)", file="DefaultFormatter.cs"];
m3_23 [label="Entry Humanizer.Localisation.ResourceKeys.TimeSpanHumanize.GetResourceKey(Humanizer.Localisation.TimeUnit, int)", span="19-19", cluster="Humanizer.Localisation.ResourceKeys.TimeSpanHumanize.GetResourceKey(Humanizer.Localisation.TimeUnit, int)", file="DefaultFormatter.cs"];
m3_26 [label="Entry Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceKey(string)", span="62-62", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceKey(string)", file="DefaultFormatter.cs"];
m3_34 [label="return resourceKey;", span="64-64", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceKey(string)", color=green, community=0, file="DefaultFormatter.cs"];
m3_35 [label="Exit Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceKey(string)", span="62-62", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.GetResourceKey(string)", file="DefaultFormatter.cs"];
m3_0 [label="Entry CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string)", span="18-18", cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string)", file="DefaultFormatter.cs"];
m3_1 [label="Exit CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string)", span="18-18", cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string)", file="DefaultFormatter.cs"];
m3_36 [label="Humanizer.Localisation.Formatters.DefaultFormatter", span="", file="DefaultFormatter.cs"];
m5_10 [label="Entry int.ToOrdinalWords(System.Globalization.CultureInfo)", span="52-52", cluster="int.ToOrdinalWords(System.Globalization.CultureInfo)", file="DutchNumberToWordsConverter.cs"];
m5_5 [label="Entry int.ToWords(System.Globalization.CultureInfo)", span="16-16", cluster="int.ToWords(System.Globalization.CultureInfo)", file="DutchNumberToWordsConverter.cs"];
m5_11 [label="Entry <invalid-global-code>.ToOrdinalWords(int, string)", span="131-131", cluster="<invalid-global-code>.ToOrdinalWords(int, string)", file="DutchNumberToWordsConverter.cs"];
m5_12 [label="Assert.Equal(words, number.ToOrdinalWords())", span="133-133", cluster="<invalid-global-code>.ToOrdinalWords(int, string)", file="DutchNumberToWordsConverter.cs"];
m5_13 [label="Exit <invalid-global-code>.ToOrdinalWords(int, string)", span="131-131", cluster="<invalid-global-code>.ToOrdinalWords(int, string)", file="DutchNumberToWordsConverter.cs"];
m5_2 [label="Entry Humanizer.Tests.Localisation.bnBD.NumberToWordsTests.ToWords(int, string)", span="40-40", cluster="Humanizer.Tests.Localisation.bnBD.NumberToWordsTests.ToWords(int, string)", file="DutchNumberToWordsConverter.cs"];
m5_3 [label="Assert.Equal(expected, number.ToWords())", span="42-42", cluster="Humanizer.Tests.Localisation.bnBD.NumberToWordsTests.ToWords(int, string)", file="DutchNumberToWordsConverter.cs"];
m5_4 [label="Exit Humanizer.Tests.Localisation.bnBD.NumberToWordsTests.ToWords(int, string)", span="40-40", cluster="Humanizer.Tests.Localisation.bnBD.NumberToWordsTests.ToWords(int, string)", file="DutchNumberToWordsConverter.cs"];
m5_7 [label="Entry Humanizer.Tests.Localisation.bnBD.NumberToWordsTests.ToOrdinalWords(int, string)", span="82-82", cluster="Humanizer.Tests.Localisation.bnBD.NumberToWordsTests.ToOrdinalWords(int, string)", file="DutchNumberToWordsConverter.cs"];
m5_8 [label="Assert.Equal(words, number.ToOrdinalWords())", span="84-84", cluster="Humanizer.Tests.Localisation.bnBD.NumberToWordsTests.ToOrdinalWords(int, string)", file="DutchNumberToWordsConverter.cs"];
m5_9 [label="Exit Humanizer.Tests.Localisation.bnBD.NumberToWordsTests.ToOrdinalWords(int, string)", span="82-82", cluster="Humanizer.Tests.Localisation.bnBD.NumberToWordsTests.ToOrdinalWords(int, string)", file="DutchNumberToWordsConverter.cs"];
m5_6 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="DutchNumberToWordsConverter.cs"];
m5_0 [label="Entry Humanizer.Tests.Localisation.bnBD.NumberToWordsTests.NumberToWordsTests()", span="7-7", cluster="Humanizer.Tests.Localisation.bnBD.NumberToWordsTests.NumberToWordsTests()", file="DutchNumberToWordsConverter.cs"];
m5_1 [label="Exit Humanizer.Tests.Localisation.bnBD.NumberToWordsTests.NumberToWordsTests()", span="7-7", cluster="Humanizer.Tests.Localisation.bnBD.NumberToWordsTests.NumberToWordsTests()", file="DutchNumberToWordsConverter.cs"];
m5_14 [label="Entry Unk.ToOrdinalWords", span="", cluster="Unk.ToOrdinalWords", file="DutchNumberToWordsConverter.cs"];
m7_0 [label="Entry Humanizer.EnumDehumanizeExtensions.DehumanizeTo<TTargetEnum>(string)", span="15-15", cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeTo<TTargetEnum>(string)", file="EnumDehumanizeExtensions.cs"];
m7_1 [label="return (TTargetEnum)DehumanizeToPrivate(input, typeof(TTargetEnum), OnNoMatch.ThrowsException);", span="18-18", cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeTo<TTargetEnum>(string)", file="EnumDehumanizeExtensions.cs"];
m7_2 [label="Exit Humanizer.EnumDehumanizeExtensions.DehumanizeTo<TTargetEnum>(string)", span="15-15", cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeTo<TTargetEnum>(string)", file="EnumDehumanizeExtensions.cs"];
m7_4 [label="Entry Humanizer.EnumDehumanizeExtensions.DehumanizeTo(string, System.Type, Humanizer.OnNoMatch)", span="30-30", cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeTo(string, System.Type, Humanizer.OnNoMatch)", file="EnumDehumanizeExtensions.cs"];
m7_5 [label="return (Enum)DehumanizeToPrivate(input, targetEnum, onNoMatch);", span="32-32", cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeTo(string, System.Type, Humanizer.OnNoMatch)", file="EnumDehumanizeExtensions.cs"];
m7_6 [label="Exit Humanizer.EnumDehumanizeExtensions.DehumanizeTo(string, System.Type, Humanizer.OnNoMatch)", span="30-30", cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeTo(string, System.Type, Humanizer.OnNoMatch)", file="EnumDehumanizeExtensions.cs"];
m7_3 [label="Entry Humanizer.EnumDehumanizeExtensions.DehumanizeToPrivate(string, System.Type, Humanizer.OnNoMatch)", span="35-35", cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeToPrivate(string, System.Type, Humanizer.OnNoMatch)", file="EnumDehumanizeExtensions.cs"];
m7_7 [label="var match = Enum.GetValues(targetEnum).Cast<Enum>().FirstOrDefault(value => string.Equals(value.Humanize(), input, StringComparison.OrdinalIgnoreCase))", span="37-37", cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeToPrivate(string, System.Type, Humanizer.OnNoMatch)", file="EnumDehumanizeExtensions.cs"];
m7_8 [label="match == null && onNoMatch == OnNoMatch.ThrowsException", span="39-39", cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeToPrivate(string, System.Type, Humanizer.OnNoMatch)", file="EnumDehumanizeExtensions.cs"];
m7_9 [label="throw new NoMatchFoundException(''Couldn't find any enum member that matches the string '' + input);", span="40-40", cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeToPrivate(string, System.Type, Humanizer.OnNoMatch)", file="EnumDehumanizeExtensions.cs"];
m7_10 [label="return match;", span="42-42", cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeToPrivate(string, System.Type, Humanizer.OnNoMatch)", file="EnumDehumanizeExtensions.cs"];
m7_11 [label="Exit Humanizer.EnumDehumanizeExtensions.DehumanizeToPrivate(string, System.Type, Humanizer.OnNoMatch)", span="35-35", cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeToPrivate(string, System.Type, Humanizer.OnNoMatch)", file="EnumDehumanizeExtensions.cs"];
m7_12 [label="Entry System.Enum.GetValues(System.Type)", span="0-0", cluster="System.Enum.GetValues(System.Type)", file="EnumDehumanizeExtensions.cs"];
m7_13 [label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.Cast<TResult>()", file="EnumDehumanizeExtensions.cs"];
m7_15 [label="Entry Humanizer.NoMatchFoundException.NoMatchFoundException(string)", span="13-13", cluster="Humanizer.NoMatchFoundException.NoMatchFoundException(string)", file="EnumDehumanizeExtensions.cs"];
m7_19 [label="Entry System.Enum.Humanize()", span="15-15", cluster="System.Enum.Humanize()", file="EnumDehumanizeExtensions.cs"];
m7_16 [label="Entry lambda expression", span="37-37", cluster="lambda expression", file="EnumDehumanizeExtensions.cs"];
m7_17 [label="string.Equals(value.Humanize(), input, StringComparison.OrdinalIgnoreCase)", span="37-37", cluster="lambda expression", file="EnumDehumanizeExtensions.cs"];
m7_18 [label="Exit lambda expression", span="37-37", cluster="lambda expression", file="EnumDehumanizeExtensions.cs"];
m7_20 [label="Entry string.Equals(string, string, System.StringComparison)", span="0-0", cluster="string.Equals(string, string, System.StringComparison)", file="EnumDehumanizeExtensions.cs"];
m7_14 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="EnumDehumanizeExtensions.cs"];
m7_21 [label=string, span="", file="EnumDehumanizeExtensions.cs"];
m8_8 [label="Entry Humanizer.Configuration.LocaliserRegistry<TLocaliser>.Register(string, TLocaliser)", span="54-54", cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.Register(string, TLocaliser)", file="EnumHumanizeExtensions.cs"];
m8_9 [label="Entry Humanizer.Localisation.Ordinalizers.SpanishOrdinalizer.SpanishOrdinalizer()", span="2-2", cluster="Humanizer.Localisation.Ordinalizers.SpanishOrdinalizer.SpanishOrdinalizer()", file="EnumHumanizeExtensions.cs"];
m8_11 [label="Entry Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.BrazilianPortugueseOrdinalizer()", span="2-2", cluster="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.BrazilianPortugueseOrdinalizer()", file="EnumHumanizeExtensions.cs"];
m8_7 [label="Entry Humanizer.Localisation.Ordinalizers.EnglishOrdinalizer.EnglishOrdinalizer()", span="2-2", cluster="Humanizer.Localisation.Ordinalizers.EnglishOrdinalizer.EnglishOrdinalizer()", file="EnumHumanizeExtensions.cs"];
m8_12 [label="Entry Humanizer.Localisation.Ordinalizers.GermanOrdinalizer.GermanOrdinalizer()", span="2-2", cluster="Humanizer.Localisation.Ordinalizers.GermanOrdinalizer.GermanOrdinalizer()", file="EnumHumanizeExtensions.cs"];
m8_0 [label="Entry Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", span="6-6", cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", file="EnumHumanizeExtensions.cs"];
m8_1 [label="Register(''en'', new EnglishOrdinalizer())", span="8-8", cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", file="EnumHumanizeExtensions.cs", color=green, community=0];
m8_2 [label="Register(''es'', new SpanishOrdinalizer())", span="9-9", cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", file="EnumHumanizeExtensions.cs"];
m8_3 [label="Register(''ru'', new RussianOrdinalizer())", span="10-10", cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", file="EnumHumanizeExtensions.cs"];
m8_4 [label="Register(''pt-BR'', new BrazilianPortugueseOrdinalizer())", span="11-11", cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", file="EnumHumanizeExtensions.cs"];
m8_5 [label="Register(''de'', new GermanOrdinalizer())", span="12-12", cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", file="EnumHumanizeExtensions.cs"];
m8_6 [label="Exit Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", span="6-6", cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", file="EnumHumanizeExtensions.cs"];
m8_10 [label="Entry Humanizer.Localisation.Ordinalizers.RussianOrdinalizer.RussianOrdinalizer()", span="2-2", cluster="Humanizer.Localisation.Ordinalizers.RussianOrdinalizer.RussianOrdinalizer()", file="EnumHumanizeExtensions.cs"];
m8_13 [label="Humanizer.Configuration.OrdinalizerRegistry", span="", file="EnumHumanizeExtensions.cs"];
m9_9 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="FixedLengthTruncator.cs"];
m9_0 [label="Entry Humanizer.FixedLengthTruncator.Truncate(string, int, string)", span="7-7", cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="FixedLengthTruncator.cs"];
m9_1 [label="value == null", span="9-9", cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="FixedLengthTruncator.cs"];
m9_3 [label="value.Length == 0", span="12-12", cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="FixedLengthTruncator.cs"];
m9_4 [label="return value;", span="13-13", cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="FixedLengthTruncator.cs"];
m9_5 [label="truncationString == null || truncationString.Length > length", span="15-15", cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="FixedLengthTruncator.cs"];
m9_6 [label="return value.Substring(0, length);", span="16-16", cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", color=green, community=0, file="FixedLengthTruncator.cs"];
m9_7 [label="return value.Length > length ? value.Substring(0, length - truncationString.Length) + truncationString : value;", span="18-18", cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", color=green, community=0, file="FixedLengthTruncator.cs"];
m9_2 [label="return null;", span="10-10", cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="FixedLengthTruncator.cs"];
m9_8 [label="Exit Humanizer.FixedLengthTruncator.Truncate(string, int, string)", span="7-7", cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="FixedLengthTruncator.cs"];
m10_0 [label="Entry Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", span="10-10", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", file="FixedNumberOfCharactersTruncator.cs"];
m10_1 [label="value == null", span="12-12", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", file="FixedNumberOfCharactersTruncator.cs"];
m10_3 [label="value.Length == 0", span="15-15", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", file="FixedNumberOfCharactersTruncator.cs"];
m10_4 [label="return value;", span="16-16", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", file="FixedNumberOfCharactersTruncator.cs"];
m10_5 [label="truncationString == null || truncationString.Length > length", span="18-18", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", file="FixedNumberOfCharactersTruncator.cs"];
m10_6 [label="return value.Substring(0, length);", span="19-19", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", color=red, community=0, file="FixedNumberOfCharactersTruncator.cs"];
m10_8 [label="var numberOfCharactersEqualToTruncateLength = value.ToCharArray().Count(Char.IsLetterOrDigit) == length", span="23-23", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", color=red, community=0, file="FixedNumberOfCharactersTruncator.cs"];
m10_10 [label="i < value.Length - truncationString.Length", span="25-25", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", file="FixedNumberOfCharactersTruncator.cs"];
m10_11 [label="Char.IsLetterOrDigit(value[i])", span="27-27", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", file="FixedNumberOfCharactersTruncator.cs"];
m10_13 [label="numberOfCharactersEqualToTruncateLength && alphaNumericalCharactersProcessed == length", span="30-30", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", color=red, community=0, file="FixedNumberOfCharactersTruncator.cs"];
m10_14 [label="return value;", span="31-31", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", color=red, community=0, file="FixedNumberOfCharactersTruncator.cs"];
m10_15 [label="!numberOfCharactersEqualToTruncateLength && alphaNumericalCharactersProcessed + truncationString.Length == length", span="33-33", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", color=red, community=0, file="FixedNumberOfCharactersTruncator.cs"];
m10_16 [label="return value.Substring(0, i + 1) + truncationString;", span="34-34", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", file="FixedNumberOfCharactersTruncator.cs"];
m10_18 [label="return value;", span="37-37", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", file="FixedNumberOfCharactersTruncator.cs"];
m10_2 [label="return null;", span="13-13", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", file="FixedNumberOfCharactersTruncator.cs"];
m10_7 [label="var alphaNumericalCharactersProcessed = 0", span="21-21", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", file="FixedNumberOfCharactersTruncator.cs"];
m10_12 [label="alphaNumericalCharactersProcessed++", span="28-28", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", file="FixedNumberOfCharactersTruncator.cs"];
m10_9 [label="var i = 0", span="25-25", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", file="FixedNumberOfCharactersTruncator.cs"];
m10_17 [label="i++", span="25-25", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", file="FixedNumberOfCharactersTruncator.cs"];
m10_19 [label="Exit Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", span="10-10", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", file="FixedNumberOfCharactersTruncator.cs"];
m10_22 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", file="FixedNumberOfCharactersTruncator.cs"];
m10_23 [label="Entry char.IsLetterOrDigit(char)", span="0-0", cluster="char.IsLetterOrDigit(char)", file="FixedNumberOfCharactersTruncator.cs"];
m10_20 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="FixedNumberOfCharactersTruncator.cs"];
m10_21 [label="Entry string.ToCharArray()", span="0-0", cluster="string.ToCharArray()", file="FixedNumberOfCharactersTruncator.cs"];
m11_6 [label="var numberOfWords = value.Split((char[])null, StringSplitOptions.RemoveEmptyEntries).Count()", span="19-19", cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs"];
m11_13 [label="!lastCharactersWasWhiteSpace", span="30-30", cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs", color=green, community=0];
m11_7 [label="numberOfWords <= length", span="21-21", cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs"];
m11_8 [label="return value;", span="22-22", cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs", color=green, community=0];
m11_9 [label="var lastCharactersWasWhiteSpace = true", span="24-24", cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs", color=green, community=0];
m11_10 [label="var i = 0", span="26-26", cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs"];
m11_11 [label="i < value.Length", span="26-26", cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs"];
m11_25 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="FixedNumberOfWordsTruncator.cs"];
m11_5 [label="var numberOfWordsProcessed = 0", span="18-18", cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs"];
m11_24 [label="Entry char.IsWhiteSpace(char)", span="0-0", cluster="char.IsWhiteSpace(char)", file="FixedNumberOfWordsTruncator.cs"];
m11_0 [label="Entry Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", span="10-10", cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs"];
m11_1 [label="value == null", span="12-12", cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", color=red, community=0, file="FixedNumberOfWordsTruncator.cs"];
m11_2 [label="return null;", span="13-13", cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", color=red, community=0, file="FixedNumberOfWordsTruncator.cs"];
m11_3 [label="value.Length == 0", span="15-15", cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs"];
m11_4 [label="return value;", span="16-16", cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs"];
m11_12 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", color=green, community=0, file="FixedNumberOfWordsTruncator.cs"];
m11_18 [label="lastCharactersWasWhiteSpace = false", span="40-40", cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs"];
m11_14 [label="Entry CommandLine.Core.Token.Value(string)", span="24-24", cluster="CommandLine.Core.Token.Value(string)", file="FixedNumberOfWordsTruncator.cs"];
m11_15 [label="lastCharactersWasWhiteSpace = true", span="33-33", cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs"];
m11_16 [label="numberOfWordsProcessed == length", span="35-35", cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs"];
m11_17 [label="return value.Substring(0, i) + truncationString;", span="36-36", cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs"];
m11_20 [label="return value + truncationString;", span="44-44", cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs"];
m11_19 [label="i++", span="26-26", cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs"];
m11_21 [label="Exit Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", span="10-10", cluster="Humanizer.FixedNumberOfWordsTruncator.Truncate(string, int, string)", file="FixedNumberOfWordsTruncator.cs"];
m11_22 [label="Entry string.Split(char[], System.StringSplitOptions)", span="0-0", cluster="string.Split(char[], System.StringSplitOptions)", file="FixedNumberOfWordsTruncator.cs"];
m11_23 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="FixedNumberOfWordsTruncator.cs"];
m12_190 [label="Entry uint.Bytes()", span="135-135", cluster="uint.Bytes()", file="FrenchNumberToWordsConverter.cs"];
m12_185 [label="Entry int.Bytes()", span="125-125", cluster="int.Bytes()", file="FrenchNumberToWordsConverter.cs"];
m12_63 [label="Entry ushort.Gigabytes()", span="325-325", cluster="ushort.Gigabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_229 [label="Entry uint.Bits()", span="65-65", cluster="uint.Bits()", file="FrenchNumberToWordsConverter.cs"];
m12_53 [label="Entry sbyte.Gigabytes()", span="305-305", cluster="sbyte.Gigabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_102 [label="Entry ushort.Megabytes()", span="255-255", cluster="ushort.Megabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_69 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintGigabytes()", span="104-104", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintGigabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_71 [label="Assert.Equal(ByteSize.FromGigabytes(2), size.Gigabytes())", span="107-107", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintGigabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_70 [label="uint size = 2", span="106-106", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintGigabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_72 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintGigabytes()", span="104-104", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintGigabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_156 [label="Entry double.Kilobytes()", span="215-215", cluster="double.Kilobytes()", file="FrenchNumberToWordsConverter.cs"];
m12_78 [label="Entry double.Gigabytes()", span="355-355", cluster="double.Gigabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_126 [label="Entry byte.Kilobytes()", span="155-155", cluster="byte.Kilobytes()", file="FrenchNumberToWordsConverter.cs"];
m12_93 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortMegabytes()", span="141-141", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortMegabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_95 [label="Assert.Equal(ByteSize.FromMegabytes(2), size.Megabytes())", span="144-144", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortMegabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_94 [label="short size = 2", span="143-143", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortMegabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_96 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortMegabytes()", span="141-141", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortMegabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_196 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBytes(double, string, string)", span="295-295", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBytes(double, string, string)", file="FrenchNumberToWordsConverter.cs"];
m12_197 [label="Assert.Equal(expectedValue, input.Bytes().Humanize(format))", span="297-297", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBytes(double, string, string)", file="FrenchNumberToWordsConverter.cs"];
m12_198 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBytes(double, string, string)", span="295-295", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBytes(double, string, string)", file="FrenchNumberToWordsConverter.cs"];
m12_195 [label="Entry double.Bytes()", span="145-145", cluster="double.Bytes()", file="FrenchNumberToWordsConverter.cs"];
m12_39 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesTerabytes(double, string, string)", span="63-63", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesTerabytes(double, string, string)", file="FrenchNumberToWordsConverter.cs"];
m12_40 [label="Assert.Equal(expectedValue, input.Terabytes().Humanize(format))", span="65-65", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesTerabytes(double, string, string)", file="FrenchNumberToWordsConverter.cs"];
m12_41 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesTerabytes(double, string, string)", span="63-63", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesTerabytes(double, string, string)", file="FrenchNumberToWordsConverter.cs"];
m12_205 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBits()", span="308-308", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBits()", file="FrenchNumberToWordsConverter.cs"];
m12_207 [label="Assert.Equal(ByteSize.FromBits(2), size.Bits())", span="311-311", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBits()", file="FrenchNumberToWordsConverter.cs"];
m12_206 [label="sbyte size = 2", span="310-310", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBits()", file="FrenchNumberToWordsConverter.cs"];
m12_208 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBits()", span="308-308", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBits()", file="FrenchNumberToWordsConverter.cs"];
m12_136 [label="Entry short.Kilobytes()", span="175-175", cluster="short.Kilobytes()", file="FrenchNumberToWordsConverter.cs"];
m12_224 [label="Entry int.Bits()", span="55-55", cluster="int.Bits()", file="FrenchNumberToWordsConverter.cs"];
m12_92 [label="Entry sbyte.Megabytes()", span="235-235", cluster="sbyte.Megabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_171 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBytes()", span="257-257", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBytes()", file="FrenchNumberToWordsConverter.cs"];
m12_173 [label="Assert.Equal(ByteSize.FromBytes(2), size.Bytes())", span="260-260", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBytes()", file="FrenchNumberToWordsConverter.cs"];
m12_172 [label="short size = 2", span="259-259", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBytes()", file="FrenchNumberToWordsConverter.cs"];
m12_174 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBytes()", span="257-257", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBytes()", file="FrenchNumberToWordsConverter.cs"];
m12_7 [label="Entry byte.Terabytes()", span="365-365", cluster="byte.Terabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_38 [label="Entry double.Terabytes()", span="425-425", cluster="double.Terabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_175 [label="Entry short.Bytes()", span="105-105", cluster="short.Bytes()", file="FrenchNumberToWordsConverter.cs"];
m12_219 [label="Entry ushort.Bits()", span="45-45", cluster="ushort.Bits()", file="FrenchNumberToWordsConverter.cs"];
m12_164 [label="Entry Humanizer.Bytes.ByteSize.FromBytes(double)", span="120-120", cluster="Humanizer.Bytes.ByteSize.FromBytes(double)", file="FrenchNumberToWordsConverter.cs"];
m12_0 [label="Entry Humanizer.StringExentions.FormatWith(string, params object[])", span="15-15", cluster="Humanizer.StringExentions.FormatWith(string, params object[])", file="FrenchNumberToWordsConverter.cs"];
m12_1 [label="return String.Format(format, args);", span="17-17", cluster="Humanizer.StringExentions.FormatWith(string, params object[])", file="FrenchNumberToWordsConverter.cs"];
m12_2 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteTerabytes()", span="11-11", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteTerabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_147 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintKilobytes()", span="220-220", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintKilobytes()", file="FrenchNumberToWordsConverter.cs"];
m12_149 [label="Assert.Equal(ByteSize.FromKilobytes(2), size.Kilobytes())", span="223-223", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintKilobytes()", file="FrenchNumberToWordsConverter.cs"];
m12_148 [label="uint size = 2", span="222-222", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintKilobytes()", file="FrenchNumberToWordsConverter.cs"];
m12_150 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintKilobytes()", span="220-220", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintKilobytes()", file="FrenchNumberToWordsConverter.cs"];
m12_113 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleMegabytes()", span="169-169", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleMegabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_115 [label="Assert.Equal(ByteSize.FromMegabytes(2), size.Megabytes())", span="172-172", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleMegabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_114 [label="double size = 2", span="171-171", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleMegabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_116 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleMegabytes()", span="169-169", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleMegabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_235 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBits(long, string, string)", span="353-353", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBits(long, string, string)", file="FrenchNumberToWordsConverter.cs"];
m12_236 [label="Assert.Equal(expectedValue, input.Bits().Humanize(format))", span="355-355", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBits(long, string, string)", file="FrenchNumberToWordsConverter.cs"];
m12_237 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBits(long, string, string)", span="353-353", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBits(long, string, string)", file="FrenchNumberToWordsConverter.cs"];
m12_181 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBytes()", span="271-271", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBytes()", file="FrenchNumberToWordsConverter.cs"];
m12_183 [label="Assert.Equal(ByteSize.FromBytes(2), size.Bytes())", span="274-274", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBytes()", file="FrenchNumberToWordsConverter.cs"];
m12_182 [label="int size = 2", span="273-273", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBytes()", file="FrenchNumberToWordsConverter.cs"];
m12_184 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBytes()", span="271-271", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBytes()", file="FrenchNumberToWordsConverter.cs"];
m12_42 [label="Entry Humanizer.Bytes.ByteSize.Humanize(string)", span="436-436", cluster="Humanizer.Bytes.ByteSize.Humanize(string)", file="FrenchNumberToWordsConverter.cs"];
m12_23 [label="Entry ushort.Terabytes()", span="395-395", cluster="ushort.Terabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_13 [label="Entry sbyte.Terabytes()", span="375-375", cluster="sbyte.Terabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_214 [label="Entry short.Bits()", span="35-35", cluster="short.Bits()", file="FrenchNumberToWordsConverter.cs"];
m12_43 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteGigabytes()", span="69-69", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteGigabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_45 [label="Assert.Equal(ByteSize.FromGigabytes(2), size.Gigabytes())", span="72-72", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteGigabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_44 [label="byte size = 2", span="71-71", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteGigabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_46 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteGigabytes()", span="69-69", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteGigabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_141 [label="Entry ushort.Kilobytes()", span="185-185", cluster="ushort.Kilobytes()", file="FrenchNumberToWordsConverter.cs"];
m12_98 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortMegabytes()", span="148-148", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortMegabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_100 [label="Assert.Equal(ByteSize.FromMegabytes(2), size.Megabytes())", span="151-151", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortMegabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_99 [label="ushort size = 2", span="150-150", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortMegabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_101 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortMegabytes()", span="148-148", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortMegabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_152 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleKilobytes()", span="227-227", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleKilobytes()", file="FrenchNumberToWordsConverter.cs"];
m12_154 [label="Assert.Equal(ByteSize.FromKilobytes(2), size.Kilobytes())", span="230-230", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleKilobytes()", file="FrenchNumberToWordsConverter.cs"];
m12_153 [label="double size = 2", span="229-229", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleKilobytes()", file="FrenchNumberToWordsConverter.cs"];
m12_155 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleKilobytes()", span="227-227", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleKilobytes()", file="FrenchNumberToWordsConverter.cs"];
m12_34 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleTerabytes()", span="53-53", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleTerabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_36 [label="Assert.Equal(ByteSize.FromTerabytes(2), size.Terabytes())", span="56-56", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleTerabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_35 [label="double size = 2", span="55-55", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleTerabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_37 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleTerabytes()", span="53-53", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleTerabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_108 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintMegabytes()", span="162-162", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintMegabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_110 [label="Assert.Equal(ByteSize.FromMegabytes(2), size.Megabytes())", span="165-165", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintMegabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_109 [label="uint size = 2", span="164-164", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintMegabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_111 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintMegabytes()", span="162-162", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintMegabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_117 [label="Entry double.Megabytes()", span="285-285", cluster="double.Megabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_64 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntGigabytes()", span="97-97", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntGigabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_65 [label="int size = 2", span="99-99", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntGigabytes()", color=green, community=0, file="FrenchNumberToWordsConverter.cs"];
m12_66 [label="Assert.Equal(ByteSize.FromGigabytes(2), size.Gigabytes())", span="100-100", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntGigabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_67 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntGigabytes()", span="97-97", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntGigabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_24 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntTerabytes()", span="39-39", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntTerabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_26 [label="Assert.Equal(ByteSize.FromTerabytes(2), size.Terabytes())", span="42-42", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntTerabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_25 [label="int size = 2", span="41-41", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntTerabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_27 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntTerabytes()", span="39-39", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntTerabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_87 [label="Entry byte.Megabytes()", span="225-225", cluster="byte.Megabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_191 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleBytes()", span="285-285", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleBytes()", file="FrenchNumberToWordsConverter.cs"];
m12_193 [label="Assert.Equal(ByteSize.FromBytes(2), size.Bytes())", span="288-288", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleBytes()", file="FrenchNumberToWordsConverter.cs"];
m12_192 [label="double size = 2", span="287-287", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleBytes()", file="FrenchNumberToWordsConverter.cs"];
m12_194 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleBytes()", span="285-285", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleBytes()", file="FrenchNumberToWordsConverter.cs"];
m12_8 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="FrenchNumberToWordsConverter.cs"];
m12_180 [label="Entry ushort.Bytes()", span="115-115", cluster="ushort.Bytes()", file="FrenchNumberToWordsConverter.cs"];
m12_107 [label="Entry int.Megabytes()", span="265-265", cluster="int.Megabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_86 [label="Entry Humanizer.Bytes.ByteSize.FromMegabytes(double)", span="130-130", cluster="Humanizer.Bytes.ByteSize.FromMegabytes(double)", file="FrenchNumberToWordsConverter.cs"];
m12_166 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBytes()", span="250-250", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBytes()", file="FrenchNumberToWordsConverter.cs"];
m12_168 [label="Assert.Equal(ByteSize.FromBytes(2), size.Bytes())", span="253-253", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBytes()", file="FrenchNumberToWordsConverter.cs"];
m12_167 [label="sbyte size = 2", span="252-252", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBytes()", file="FrenchNumberToWordsConverter.cs"];
m12_169 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBytes()", span="250-250", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBytes()", file="FrenchNumberToWordsConverter.cs"];
m12_157 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesKilobytes(double, string, string)", span="237-237", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesKilobytes(double, string, string)", file="FrenchNumberToWordsConverter.cs"];
m12_158 [label="Assert.Equal(expectedValue, input.Kilobytes().Humanize(format))", span="239-239", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesKilobytes(double, string, string)", file="FrenchNumberToWordsConverter.cs"];
m12_159 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesKilobytes(double, string, string)", span="237-237", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesKilobytes(double, string, string)", file="FrenchNumberToWordsConverter.cs"];
m12_82 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteMegabytes()", span="127-127", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteMegabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_84 [label="Assert.Equal(ByteSize.FromMegabytes(2), size.Megabytes())", span="130-130", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteMegabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_83 [label="byte size = 2", span="129-129", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteMegabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_85 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteMegabytes()", span="127-127", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteMegabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_186 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBytes()", span="278-278", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBytes()", file="FrenchNumberToWordsConverter.cs"];
m12_188 [label="Assert.Equal(ByteSize.FromBytes(2), size.Bytes())", span="281-281", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBytes()", file="FrenchNumberToWordsConverter.cs"];
m12_187 [label="uint size = 2", span="280-280", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBytes()", file="FrenchNumberToWordsConverter.cs"];
m12_189 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBytes()", span="278-278", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBytes()", file="FrenchNumberToWordsConverter.cs"];
m12_215 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBits()", span="322-322", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBits()", file="FrenchNumberToWordsConverter.cs"];
m12_217 [label="Assert.Equal(ByteSize.FromBits(2), size.Bits())", span="325-325", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBits()", file="FrenchNumberToWordsConverter.cs"];
m12_216 [label="ushort size = 2", span="324-324", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBits()", file="FrenchNumberToWordsConverter.cs"];
m12_218 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBits()", span="322-322", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBits()", file="FrenchNumberToWordsConverter.cs"];
m12_165 [label="Entry byte.Bytes()", span="85-85", cluster="byte.Bytes()", file="FrenchNumberToWordsConverter.cs"];
m12_121 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteKilobytes()", span="185-185", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteKilobytes()", file="FrenchNumberToWordsConverter.cs"];
m12_123 [label="Assert.Equal(ByteSize.FromKilobytes(2), size.Kilobytes())", span="188-188", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteKilobytes()", file="FrenchNumberToWordsConverter.cs"];
m12_122 [label="byte size = 2", span="187-187", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteKilobytes()", file="FrenchNumberToWordsConverter.cs"];
m12_124 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteKilobytes()", span="185-185", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteKilobytes()", file="FrenchNumberToWordsConverter.cs"];
m12_127 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteKilobytes()", span="192-192", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteKilobytes()", file="FrenchNumberToWordsConverter.cs"];
m12_129 [label="Assert.Equal(ByteSize.FromKilobytes(2), size.Kilobytes())", span="195-195", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteKilobytes()", file="FrenchNumberToWordsConverter.cs"];
m12_128 [label="sbyte size = 2", span="194-194", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteKilobytes()", file="FrenchNumberToWordsConverter.cs"];
m12_130 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteKilobytes()", span="192-192", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteKilobytes()", file="FrenchNumberToWordsConverter.cs"];
m12_230 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongBits()", span="343-343", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongBits()", file="FrenchNumberToWordsConverter.cs"];
m12_232 [label="Assert.Equal(ByteSize.FromBits(2), size.Bits())", span="346-346", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongBits()", file="FrenchNumberToWordsConverter.cs"];
m12_231 [label="long size = 2", span="345-345", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongBits()", file="FrenchNumberToWordsConverter.cs"];
m12_233 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongBits()", span="343-343", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongBits()", file="FrenchNumberToWordsConverter.cs"];
m12_49 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteGigabytes()", span="76-76", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteGigabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_51 [label="Assert.Equal(ByteSize.FromGigabytes(2), size.Gigabytes())", span="79-79", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteGigabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_50 [label="sbyte size = 2", span="78-78", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteGigabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_52 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteGigabytes()", span="76-76", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteGigabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_103 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntMegabytes()", span="155-155", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntMegabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_105 [label="Assert.Equal(ByteSize.FromMegabytes(2), size.Megabytes())", span="158-158", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntMegabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_104 [label="int size = 2", span="157-157", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntMegabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_106 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntMegabytes()", span="155-155", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntMegabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_137 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortKilobytes()", span="206-206", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortKilobytes()", file="FrenchNumberToWordsConverter.cs"];
m12_139 [label="Assert.Equal(ByteSize.FromKilobytes(2), size.Kilobytes())", span="209-209", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortKilobytes()", file="FrenchNumberToWordsConverter.cs"];
m12_138 [label="ushort size = 2", span="208-208", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortKilobytes()", file="FrenchNumberToWordsConverter.cs"];
m12_140 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortKilobytes()", span="206-206", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortKilobytes()", file="FrenchNumberToWordsConverter.cs"];
m12_131 [label="Entry sbyte.Kilobytes()", span="165-165", cluster="sbyte.Kilobytes()", file="FrenchNumberToWordsConverter.cs"];
m12_220 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBits()", span="329-329", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBits()", file="FrenchNumberToWordsConverter.cs"];
m12_222 [label="Assert.Equal(ByteSize.FromBits(2), size.Bits())", span="332-332", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBits()", file="FrenchNumberToWordsConverter.cs"];
m12_221 [label="int size = 2", span="331-331", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBits()", file="FrenchNumberToWordsConverter.cs"];
m12_223 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBits()", span="329-329", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBits()", file="FrenchNumberToWordsConverter.cs"];
m12_54 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortGigabytes()", span="83-83", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortGigabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_56 [label="Assert.Equal(ByteSize.FromGigabytes(2), size.Gigabytes())", span="86-86", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortGigabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_55 [label="short size = 2", span="85-85", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortGigabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_57 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortGigabytes()", span="83-83", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortGigabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_97 [label="Entry short.Megabytes()", span="245-245", cluster="short.Megabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_151 [label="Entry uint.Kilobytes()", span="205-205", cluster="uint.Kilobytes()", file="FrenchNumberToWordsConverter.cs"];
m12_59 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortGigabytes()", span="90-90", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortGigabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_60 [label="ushort size = 2", span="92-92", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortGigabytes()", color=green, community=0, file="FrenchNumberToWordsConverter.cs"];
m12_61 [label="Assert.Equal(ByteSize.FromGigabytes(2), size.Gigabytes())", span="93-93", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortGigabytes()", color=green, community=0, file="FrenchNumberToWordsConverter.cs"];
m12_62 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortGigabytes()", span="90-90", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortGigabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_118 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesMegabytes(double, string, string)", span="179-179", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesMegabytes(double, string, string)", file="FrenchNumberToWordsConverter.cs"];
m12_119 [label="Assert.Equal(expectedValue, input.Megabytes().Humanize(format))", span="181-181", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesMegabytes(double, string, string)", file="FrenchNumberToWordsConverter.cs"];
m12_120 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesMegabytes(double, string, string)", span="179-179", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesMegabytes(double, string, string)", file="FrenchNumberToWordsConverter.cs"];
m12_58 [label="Entry short.Gigabytes()", span="315-315", cluster="short.Gigabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_234 [label="Entry long.Bits()", span="75-75", cluster="long.Bits()", file="FrenchNumberToWordsConverter.cs"];
m12_74 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleGigabytes()", span="111-111", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleGigabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_76 [label="Assert.Equal(ByteSize.FromGigabytes(2), size.Gigabytes())", span="114-114", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleGigabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_75 [label="double size = 2", span="113-113", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleGigabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_77 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleGigabytes()", span="111-111", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleGigabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_199 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBits()", span="301-301", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBits()", file="FrenchNumberToWordsConverter.cs"];
m12_201 [label="Assert.Equal(ByteSize.FromBits(2), size.Bits())", span="304-304", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBits()", file="FrenchNumberToWordsConverter.cs"];
m12_200 [label="byte size = 2", span="303-303", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBits()", file="FrenchNumberToWordsConverter.cs"];
m12_202 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBits()", span="301-301", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBits()", file="FrenchNumberToWordsConverter.cs"];
m12_18 [label="Entry short.Terabytes()", span="385-385", cluster="short.Terabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_33 [label="Entry uint.Terabytes()", span="415-415", cluster="uint.Terabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_170 [label="Entry sbyte.Bytes()", span="95-95", cluster="sbyte.Bytes()", file="FrenchNumberToWordsConverter.cs"];
m12_204 [label="Entry byte.Bits()", span="15-15", cluster="byte.Bits()", file="FrenchNumberToWordsConverter.cs"];
m12_14 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortTerabytes()", span="25-25", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortTerabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_16 [label="Assert.Equal(ByteSize.FromTerabytes(2), size.Terabytes())", span="28-28", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortTerabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_15 [label="short size = 2", span="27-27", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortTerabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_17 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortTerabytes()", span="25-25", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortTerabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_203 [label="Entry Humanizer.Bytes.ByteSize.FromBits(long)", span="115-115", cluster="Humanizer.Bytes.ByteSize.FromBits(long)", file="FrenchNumberToWordsConverter.cs"];
m12_3 [label="byte size = 2", span="13-13", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteTerabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_73 [label="Entry uint.Gigabytes()", span="345-345", cluster="uint.Gigabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_4 [label="Assert.Equal(ByteSize.FromTerabytes(2), size.Terabytes())", span="14-14", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteTerabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_5 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteTerabytes()", span="11-11", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteTerabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_176 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBytes()", span="264-264", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBytes()", file="FrenchNumberToWordsConverter.cs"];
m12_178 [label="Assert.Equal(ByteSize.FromBytes(2), size.Bytes())", span="267-267", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBytes()", file="FrenchNumberToWordsConverter.cs"];
m12_177 [label="ushort size = 2", span="266-266", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBytes()", file="FrenchNumberToWordsConverter.cs"];
m12_179 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBytes()", span="264-264", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBytes()", file="FrenchNumberToWordsConverter.cs"];
m12_48 [label="Entry byte.Gigabytes()", span="295-295", cluster="byte.Gigabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_142 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntKilobytes()", span="213-213", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntKilobytes()", file="FrenchNumberToWordsConverter.cs"];
m12_144 [label="Assert.Equal(ByteSize.FromKilobytes(2), size.Kilobytes())", span="216-216", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntKilobytes()", file="FrenchNumberToWordsConverter.cs"];
m12_143 [label="int size = 2", span="215-215", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntKilobytes()", file="FrenchNumberToWordsConverter.cs"];
m12_145 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntKilobytes()", span="213-213", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntKilobytes()", file="FrenchNumberToWordsConverter.cs"];
m12_9 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteTerabytes()", span="18-18", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteTerabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_11 [label="Assert.Equal(ByteSize.FromTerabytes(2), size.Terabytes())", span="21-21", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteTerabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_10 [label="sbyte size = 2", span="20-20", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteTerabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_12 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteTerabytes()", span="18-18", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteTerabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_19 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortTerabytes()", span="32-32", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortTerabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_21 [label="Assert.Equal(ByteSize.FromTerabytes(2), size.Terabytes())", span="35-35", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortTerabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_20 [label="ushort size = 2", span="34-34", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortTerabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_22 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortTerabytes()", span="32-32", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortTerabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_146 [label="Entry int.Kilobytes()", span="195-195", cluster="int.Kilobytes()", file="FrenchNumberToWordsConverter.cs"];
m12_68 [label="Entry int.Gigabytes()", span="335-335", cluster="int.Gigabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_132 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortKilobytes()", span="199-199", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortKilobytes()", file="FrenchNumberToWordsConverter.cs"];
m12_134 [label="Assert.Equal(ByteSize.FromKilobytes(2), size.Kilobytes())", span="202-202", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortKilobytes()", file="FrenchNumberToWordsConverter.cs"];
m12_133 [label="short size = 2", span="201-201", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortKilobytes()", file="FrenchNumberToWordsConverter.cs"];
m12_135 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortKilobytes()", span="199-199", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortKilobytes()", file="FrenchNumberToWordsConverter.cs"];
m12_6 [label="Entry Humanizer.Bytes.ByteSize.FromTerabytes(double)", span="140-140", cluster="Humanizer.Bytes.ByteSize.FromTerabytes(double)", file="FrenchNumberToWordsConverter.cs"];
m12_79 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesGigabytes(double, string, string)", span="121-121", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesGigabytes(double, string, string)", file="FrenchNumberToWordsConverter.cs"];
m12_80 [label="Assert.Equal(expectedValue, input.Gigabytes().Humanize(format))", span="123-123", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesGigabytes(double, string, string)", file="FrenchNumberToWordsConverter.cs"];
m12_81 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesGigabytes(double, string, string)", span="121-121", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesGigabytes(double, string, string)", file="FrenchNumberToWordsConverter.cs"];
m12_47 [label="Entry Humanizer.Bytes.ByteSize.FromGigabytes(double)", span="135-135", cluster="Humanizer.Bytes.ByteSize.FromGigabytes(double)", file="FrenchNumberToWordsConverter.cs"];
m12_88 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteMegabytes()", span="134-134", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteMegabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_90 [label="Assert.Equal(ByteSize.FromMegabytes(2), size.Megabytes())", span="137-137", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteMegabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_89 [label="sbyte size = 2", span="136-136", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteMegabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_91 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteMegabytes()", span="134-134", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteMegabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_125 [label="Entry Humanizer.Bytes.ByteSize.FromKilobytes(double)", span="125-125", cluster="Humanizer.Bytes.ByteSize.FromKilobytes(double)", file="FrenchNumberToWordsConverter.cs"];
m12_112 [label="Entry uint.Megabytes()", span="275-275", cluster="uint.Megabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_225 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBits()", span="336-336", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBits()", file="FrenchNumberToWordsConverter.cs"];
m12_227 [label="Assert.Equal(ByteSize.FromBits(2), size.Bits())", span="339-339", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBits()", file="FrenchNumberToWordsConverter.cs"];
m12_226 [label="uint size = 2", span="338-338", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBits()", file="FrenchNumberToWordsConverter.cs"];
m12_228 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBits()", span="336-336", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBits()", file="FrenchNumberToWordsConverter.cs"];
m12_29 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintTerabytes()", span="46-46", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintTerabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_31 [label="Assert.Equal(ByteSize.FromTerabytes(2), size.Terabytes())", span="49-49", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintTerabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_30 [label="uint size = 2", span="48-48", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintTerabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_32 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintTerabytes()", span="46-46", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintTerabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_160 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBytes()", span="243-243", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBytes()", file="FrenchNumberToWordsConverter.cs"];
m12_162 [label="Assert.Equal(ByteSize.FromBytes(2), size.Bytes())", span="246-246", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBytes()", file="FrenchNumberToWordsConverter.cs"];
m12_161 [label="byte size = 2", span="245-245", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBytes()", file="FrenchNumberToWordsConverter.cs"];
m12_163 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBytes()", span="243-243", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBytes()", file="FrenchNumberToWordsConverter.cs"];
m12_28 [label="Entry int.Terabytes()", span="405-405", cluster="int.Terabytes()", file="FrenchNumberToWordsConverter.cs"];
m12_209 [label="Entry sbyte.Bits()", span="25-25", cluster="sbyte.Bits()", file="FrenchNumberToWordsConverter.cs"];
m12_210 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBits()", span="315-315", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBits()", file="FrenchNumberToWordsConverter.cs"];
m12_212 [label="Assert.Equal(ByteSize.FromBits(2), size.Bits())", span="318-318", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBits()", file="FrenchNumberToWordsConverter.cs"];
m12_211 [label="short size = 2", span="317-317", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBits()", file="FrenchNumberToWordsConverter.cs"];
m12_213 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBits()", span="315-315", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBits()", file="FrenchNumberToWordsConverter.cs"];
m13_2 [label="Entry Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="10-10", cluster="Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", file="IFormatter.cs"];
m13_3 [label="Exit Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="10-10", cluster="Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", file="IFormatter.cs"];
m13_0 [label="Entry Humanizer.Localisation.Formatters.IFormatter.DateHumanize_Now()", span="9-9", cluster="Humanizer.Localisation.Formatters.IFormatter.DateHumanize_Now()", file="IFormatter.cs"];
m13_1 [label="Exit Humanizer.Localisation.Formatters.IFormatter.DateHumanize_Now()", span="9-9", cluster="Humanizer.Localisation.Formatters.IFormatter.DateHumanize_Now()", file="IFormatter.cs"];
m13_6 [label="Entry Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", span="13-13", cluster="Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", file="IFormatter.cs"];
m13_7 [label="Exit Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", span="13-13", cluster="Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", file="IFormatter.cs"];
m13_4 [label="Entry Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize_Zero()", span="12-12", cluster="Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize_Zero()", file="IFormatter.cs"];
m13_5 [label="Exit Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize_Zero()", span="12-12", cluster="Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize_Zero()", file="IFormatter.cs"];
m14_4 [label="Entry CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", span="25-25", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ITruncator.cs"];
m14_17 [label="specProps.Empty()", span="30-30", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ITruncator.cs"];
m14_18 [label="yield break;", span="32-32", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ITruncator.cs"];
m14_22 [label="yield return\r\n                    Tuple.Create(pt, MakeErrorInCaseOfMinConstraint(pt.Specification));", span="38-39", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ITruncator.cs"];
m14_23 [label="yield break;", span="40-40", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ITruncator.cs"];
m14_24 [label="yield return\r\n                converter(taken, pt.Property.PropertyType, pt.Specification.ConversionType.IsScalar())\r\n                    .Return(\r\n                        converted => Tuple.Create(pt.WithValue(Maybe.Just(converted)), Maybe.Nothing<Error>()),\r\n                        Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                            pt, Maybe.Just<Error>(new BadFormatConversionError(NameInfo.EmptyName))));", span="43-48", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ITruncator.cs"];
m14_26 [label="yield return value;", span="52-52", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ITruncator.cs"];
m14_19 [label="var pt = specProps.First()", span="34-34", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ITruncator.cs"];
m14_20 [label="var taken = values.Take(pt.Specification.GetMaxValueCount().Return(n => n, values.Count()))", span="35-35", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ITruncator.cs"];
m14_25 [label="MapValuesImpl(specProps.Skip(1), values.Skip(taken.Count()), converter)", span="50-50", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ITruncator.cs"];
m14_21 [label="taken.Empty()", span="36-36", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ITruncator.cs"];
m14_27 [label="Exit CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", span="25-25", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ITruncator.cs"];
m14_37 [label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0", cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="ITruncator.cs"];
m14_39 [label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71", cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="ITruncator.cs"];
m14_36 [label="Entry System.Type.IsScalar()", span="33-33", cluster="System.Type.IsScalar()", file="ITruncator.cs"];
m14_0 [label="Entry CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", span="11-11", cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ITruncator.cs"];
m14_1 [label="var propAndErrors = MapValuesImpl(specProps, values, converter)", span="16-16", cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ITruncator.cs"];
m14_2 [label="return StatePair.Create(\r\n                propAndErrors.Select(pe => pe.Item1),\r\n                propAndErrors.Select(pe => pe.Item2)\r\n                    .OfType<Just<Error>>().Select(e => e.Value)\r\n                );", span="18-22", cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ITruncator.cs"];
m14_3 [label="Exit CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", span="11-11", cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ITruncator.cs"];
m14_28 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="81-81", cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="ITruncator.cs"];
m14_52 [label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="316-316", cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="ITruncator.cs"];
m14_34 [label="Entry CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", span="56-56", cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="ITruncator.cs"];
m14_49 [label="return !specification.IsMinNotSpecified()\r\n                ? Maybe.Just<Error>(new SequenceOutOfRangeError(NameInfo.EmptyName))\r\n                : Maybe.Nothing<Error>();", span="58-60", cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="ITruncator.cs"];
m14_50 [label="Exit CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", span="56-56", cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="ITruncator.cs"];
m14_6 [label="Entry Unk.>", span="", cluster="Unk.>", file="ITruncator.cs"];
m14_30 [label="Entry CommandLine.Core.Specification.GetMaxValueCount()", span="51-51", cluster="CommandLine.Core.Specification.GetMaxValueCount()", file="ITruncator.cs"];
m14_48 [label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66", cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="ITruncator.cs"];
m14_35 [label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0", cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="ITruncator.cs"];
m14_33 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="ITruncator.cs"];
m14_47 [label="Entry CommandLine.Core.SpecificationProperty.WithValue(CommandLine.Infrastructure.Maybe<object>)", span="18-18", cluster="CommandLine.Core.SpecificationProperty.WithValue(CommandLine.Infrastructure.Maybe<object>)", file="ITruncator.cs"];
m14_38 [label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="305-305", cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", file="ITruncator.cs"];
m14_29 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="ITruncator.cs"];
m14_44 [label="Entry lambda expression", span="46-46", cluster="lambda expression", file="ITruncator.cs"];
m14_8 [label="Entry lambda expression", span="19-19", cluster="lambda expression", file="ITruncator.cs"];
m14_11 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="ITruncator.cs"];
m14_14 [label="Entry lambda expression", span="21-21", cluster="lambda expression", file="ITruncator.cs"];
m14_9 [label="pe.Item1", span="19-19", cluster="lambda expression", file="ITruncator.cs"];
m14_10 [label="Exit lambda expression", span="19-19", cluster="lambda expression", file="ITruncator.cs"];
m14_12 [label="pe.Item2", span="20-20", cluster="lambda expression", file="ITruncator.cs"];
m14_13 [label="Exit lambda expression", span="20-20", cluster="lambda expression", file="ITruncator.cs"];
m14_15 [label="e.Value", span="21-21", cluster="lambda expression", file="ITruncator.cs"];
m14_16 [label="Exit lambda expression", span="21-21", cluster="lambda expression", file="ITruncator.cs"];
m14_45 [label="Tuple.Create(pt.WithValue(Maybe.Just(converted)), Maybe.Nothing<Error>())", span="46-46", cluster="lambda expression", file="ITruncator.cs"];
m14_41 [label="Entry lambda expression", span="35-35", cluster="lambda expression", file="ITruncator.cs"];
m14_42 [label=n, span="35-35", cluster="lambda expression", file="ITruncator.cs"];
m14_43 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="ITruncator.cs"];
m14_46 [label="Exit lambda expression", span="46-46", cluster="lambda expression", file="ITruncator.cs"];
m14_31 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="ITruncator.cs"];
m14_5 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ITruncator.cs"];
m14_51 [label="Entry CommandLine.Core.Specification.IsMinNotSpecified()", span="70-70", cluster="CommandLine.Core.Specification.IsMinNotSpecified()", file="ITruncator.cs"];
m14_7 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="ITruncator.cs"];
m14_32 [label="Entry CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="103-103", cluster="CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="ITruncator.cs"];
m14_40 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="ITruncator.cs"];
m14_53 [label=pt, span="", file="ITruncator.cs"];
m15_0 [label="Entry Humanizer.NoMatchFoundException.NoMatchFoundException()", span="9-9", cluster="Humanizer.NoMatchFoundException.NoMatchFoundException()", file="NoMatchFoundException.cs"];
m15_1 [label="Exit Humanizer.NoMatchFoundException.NoMatchFoundException()", span="9-9", cluster="Humanizer.NoMatchFoundException.NoMatchFoundException()", file="NoMatchFoundException.cs"];
m15_2 [label="Entry Humanizer.NoMatchFoundException.NoMatchFoundException(string)", span="13-13", cluster="Humanizer.NoMatchFoundException.NoMatchFoundException(string)", file="NoMatchFoundException.cs"];
m15_3 [label="Exit Humanizer.NoMatchFoundException.NoMatchFoundException(string)", span="13-13", cluster="Humanizer.NoMatchFoundException.NoMatchFoundException(string)", file="NoMatchFoundException.cs"];
m15_4 [label="Entry Humanizer.NoMatchFoundException.NoMatchFoundException(string, System.Exception)", span="18-18", cluster="Humanizer.NoMatchFoundException.NoMatchFoundException(string, System.Exception)", file="NoMatchFoundException.cs"];
m15_5 [label="Exit Humanizer.NoMatchFoundException.NoMatchFoundException(string, System.Exception)", span="18-18", cluster="Humanizer.NoMatchFoundException.NoMatchFoundException(string, System.Exception)", file="NoMatchFoundException.cs"];
m17_8 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)", file="OrdinalizeExtensions.cs"];
m17_5 [label="Entry Humanizer.OrdinalizeExtensions.Ordinalize(int)", span="25-25", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int)", file="OrdinalizeExtensions.cs"];
m17_6 [label="return Ordinalize(number, number.ToString(CultureInfo.InvariantCulture));", span="27-27", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int)", color=red, community=0, file="OrdinalizeExtensions.cs"];
m17_7 [label="Exit Humanizer.OrdinalizeExtensions.Ordinalize(int)", span="25-25", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int)", file="OrdinalizeExtensions.cs"];
m17_4 [label="Entry Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", span="30-30", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", file="OrdinalizeExtensions.cs"];
m17_9 [label="int nMod100 = number % 100", span="32-32", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", color=green, community=0, file="OrdinalizeExtensions.cs"];
m17_11 [label="return numberString + ''th'';", span="36-36", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", color=green, community=0, file="OrdinalizeExtensions.cs"];
m17_12 [label="number % 10", span="39-39", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", color=green, community=0, file="OrdinalizeExtensions.cs"];
m17_14 [label="return numberString + ''st'';", span="42-42", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", color=green, community=0, file="OrdinalizeExtensions.cs"];
m17_16 [label="return numberString + ''nd'';", span="44-44", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", color=red, community=0, file="OrdinalizeExtensions.cs"];
m17_18 [label="return numberString + ''rd'';", span="46-46", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", color=red, community=0, file="OrdinalizeExtensions.cs"];
m17_19 [label="return numberString + ''th'';", span="48-48", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", color=red, community=0, file="OrdinalizeExtensions.cs"];
m17_10 [label="nMod100 >= 11 && nMod100 <= 13", span="34-34", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", color=green, community=0, file="OrdinalizeExtensions.cs"];
m17_13 [label=1, span="41-41", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", color=green, community=0, file="OrdinalizeExtensions.cs"];
m17_15 [label=2, span="43-43", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", color=red, community=0, file="OrdinalizeExtensions.cs"];
m17_17 [label=3, span="45-45", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", color=red, community=0, file="OrdinalizeExtensions.cs"];
m17_20 [label="Exit Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", span="30-30", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", file="OrdinalizeExtensions.cs"];
m17_0 [label="Entry Humanizer.OrdinalizeExtensions.Ordinalize(string)", span="15-15", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(string)", file="OrdinalizeExtensions.cs"];
m17_1 [label="return Ordinalize(int.Parse(numberString), numberString);", span="17-17", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(string)", color=green, community=0, file="OrdinalizeExtensions.cs"];
m17_2 [label="Exit Humanizer.OrdinalizeExtensions.Ordinalize(string)", span="15-15", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(string)", file="OrdinalizeExtensions.cs"];
m17_3 [label="Entry int.Parse(string)", span="0-0", cluster="int.Parse(string)", file="OrdinalizeExtensions.cs"];
m18_0 [label="Entry Humanizer.Tests.OrdinalizeTests.OrdinalizeString(string, string)", span="36-36", cluster="Humanizer.Tests.OrdinalizeTests.OrdinalizeString(string, string)", file="OrdinalizeTests.cs"];
m18_1 [label="Assert.Equal(number.Ordinalize(), ordinalized)", span="38-38", cluster="Humanizer.Tests.OrdinalizeTests.OrdinalizeString(string, string)", file="OrdinalizeTests.cs"];
m18_2 [label="Exit Humanizer.Tests.OrdinalizeTests.OrdinalizeString(string, string)", span="36-36", cluster="Humanizer.Tests.OrdinalizeTests.OrdinalizeString(string, string)", file="OrdinalizeTests.cs"];
m18_5 [label="Entry Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", span="70-70", cluster="Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", file="OrdinalizeTests.cs"];
m18_6 [label="Assert.Equal(number.Ordinalize(), ordinalized)", span="72-72", cluster="Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", file="OrdinalizeTests.cs"];
m18_7 [label="Exit Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", span="70-70", cluster="Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", file="OrdinalizeTests.cs"];
m18_4 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="OrdinalizeTests.cs"];
m18_8 [label="Entry int.Ordinalize()", span="25-25", cluster="int.Ordinalize()", file="OrdinalizeTests.cs"];
m18_3 [label="Entry string.Ordinalize()", span="15-15", cluster="string.Ordinalize()", file="OrdinalizeTests.cs"];
m19_18 [label="Exit Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.ConvertNumberUnderThousand(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", span="19-19", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.ConvertNumberUnderThousand(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", file="PolishNumberToWordsConverter.cs"];
m19_66 [label="Entry string.Trim()", span="0-0", cluster="string.Trim()", file="PolishNumberToWordsConverter.cs"];
m19_0 [label="Entry Humanizer.Configuration.NumberToWordsConverterRegistry.NumberToWordsConverterRegistry()", span="6-6", cluster="Humanizer.Configuration.NumberToWordsConverterRegistry.NumberToWordsConverterRegistry()", file="PolishNumberToWordsConverter.cs"];
m19_2 [label="Register(''ar'', new ArabicNumberToWordsConverter())", span="9-9", cluster="Humanizer.Configuration.NumberToWordsConverterRegistry.NumberToWordsConverterRegistry()", color=red, community=0, file="PolishNumberToWordsConverter.cs"];
m19_1 [label="Register(''en'', new EnglishNumberToWordsConverter())", span="8-8", cluster="Humanizer.Configuration.NumberToWordsConverterRegistry.NumberToWordsConverterRegistry()", file="PolishNumberToWordsConverter.cs", color=red, community=0];
m19_12 [label="Register(''de'', new GermanNumberToWordsConverter())", span="19-19", cluster="Humanizer.Configuration.NumberToWordsConverterRegistry.NumberToWordsConverterRegistry()", color=red, community=0, file="PolishNumberToWordsConverter.cs"];
m19_9 [label="Register(''nl'', new DutchNumberToWordsConverter())", span="16-16", cluster="Humanizer.Configuration.NumberToWordsConverterRegistry.NumberToWordsConverterRegistry()", file="PolishNumberToWordsConverter.cs", color=red, community=0];
m19_3 [label="Register(''fa'', new FarsiNumberToWordsConverter())", span="10-10", cluster="Humanizer.Configuration.NumberToWordsConverterRegistry.NumberToWordsConverterRegistry()", file="PolishNumberToWordsConverter.cs", color=red, community=0];
m19_11 [label="Register(''sl'', (culture) => new SlovenianNumberToWordsConverter(culture))", span="18-18", cluster="Humanizer.Configuration.NumberToWordsConverterRegistry.NumberToWordsConverterRegistry()", file="PolishNumberToWordsConverter.cs"];
m19_13 [label="Register(''bn-BD'', new BanglaNumberToWordsConverter())", span="20-20", cluster="Humanizer.Configuration.NumberToWordsConverterRegistry.NumberToWordsConverterRegistry()", file="PolishNumberToWordsConverter.cs"];
m19_5 [label="Register(''pl'', (culture) => new PolishNumberToWordsConverter(culture))", span="12-12", cluster="Humanizer.Configuration.NumberToWordsConverterRegistry.NumberToWordsConverterRegistry()", color=red, community=0, file="PolishNumberToWordsConverter.cs"];
m19_4 [label="Register(''es'', new SpanishNumberToWordsConverter())", span="11-11", cluster="Humanizer.Configuration.NumberToWordsConverterRegistry.NumberToWordsConverterRegistry()", file="PolishNumberToWordsConverter.cs", color=red, community=0];
m19_6 [label="Register(''pt-BR'', new BrazilianPortugueseNumberToWordsConverter())", span="13-13", cluster="Humanizer.Configuration.NumberToWordsConverterRegistry.NumberToWordsConverterRegistry()", file="PolishNumberToWordsConverter.cs", color=red, community=0];
m19_17 [label="Entry Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.EnglishNumberToWordsConverter()", span="5-5", cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.EnglishNumberToWordsConverter()", file="PolishNumberToWordsConverter.cs"];
m19_8 [label="Register(''fr'', new FrenchNumberToWordsConverter())", span="15-15", cluster="Humanizer.Configuration.NumberToWordsConverterRegistry.NumberToWordsConverterRegistry()", file="PolishNumberToWordsConverter.cs", color=red, community=0];
m19_10 [label="Register(''he'', (culture) => new HebrewNumberToWordsConverter(culture))", span="17-17", cluster="Humanizer.Configuration.NumberToWordsConverterRegistry.NumberToWordsConverterRegistry()", file="PolishNumberToWordsConverter.cs", color=red, community=0];
m19_7 [label="Register(''ru'', new RussianNumberToWordsConverter())", span="14-14", cluster="Humanizer.Configuration.NumberToWordsConverterRegistry.NumberToWordsConverterRegistry()", file="PolishNumberToWordsConverter.cs", color=red, community=0];
m19_16 [label="Exit Humanizer.Configuration.NumberToWordsConverterRegistry.NumberToWordsConverterRegistry()", span="6-6", cluster="Humanizer.Configuration.NumberToWordsConverterRegistry.NumberToWordsConverterRegistry()", file="PolishNumberToWordsConverter.cs"];
m19_14 [label="Register(''tr'', new TurkishNumberToWordConverter())", span="21-21", cluster="Humanizer.Configuration.NumberToWordsConverterRegistry.NumberToWordsConverterRegistry()", file="PolishNumberToWordsConverter.cs", color=red, community=0];
m19_15 [label="Register(''it'', new ItalianNumberToWordsConverter())", span="22-22", cluster="Humanizer.Configuration.NumberToWordsConverterRegistry.NumberToWordsConverterRegistry()", file="PolishNumberToWordsConverter.cs", color=red, community=0];
m19_64 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="PolishNumberToWordsConverter.cs"];
m19_63 [label="Entry System.Enum.GetValues(System.Type)", span="0-0", cluster="System.Enum.GetValues(System.Type)", file="PolishNumberToWordsConverter.cs"];
m19_25 [label="number > 1 && number < 5", span="56-56", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", file="PolishNumberToWordsConverter.cs"];
m19_27 [label="var tens = number / 10", span="59-59", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", file="PolishNumberToWordsConverter.cs", color=green, community=0];
m19_19 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="PolishNumberToWordsConverter.cs"];
m19_21 [label="Entry Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.SpanishNumberToWordsConverter()", span="5-5", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.SpanishNumberToWordsConverter()", file="PolishNumberToWordsConverter.cs"];
m19_29 [label="var unity = number % 10", span="62-62", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", file="PolishNumberToWordsConverter.cs", color=green, community=0];
m19_26 [label="return 1;", span="57-57", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", file="PolishNumberToWordsConverter.cs"];
m19_30 [label="unity > 1 && unity < 5", span="63-63", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", file="PolishNumberToWordsConverter.cs", color=green, community=0];
m19_23 [label="number == 1", span="53-53", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", file="PolishNumberToWordsConverter.cs"];
m19_20 [label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0", cluster="System.Text.StringBuilder.AppendFormat(string, object)", file="PolishNumberToWordsConverter.cs"];
m19_38 [label="return miliard[GetMappingIndex(num)];", span="76-76", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", file="PolishNumberToWordsConverter.cs", color=green, community=0];
m19_62 [label="Entry System.Math.Abs(int)", span="0-0", cluster="System.Math.Abs(int)", file="PolishNumberToWordsConverter.cs"];
m19_65 [label="Entry System.Text.StringBuilder.AppendFormat(string, object, object)", span="0-0", cluster="System.Text.StringBuilder.AppendFormat(string, object, object)", file="PolishNumberToWordsConverter.cs"];
m19_28 [label="tens > 1", span="60-60", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", file="PolishNumberToWordsConverter.cs", color=green, community=0];
m19_31 [label="return 1;", span="64-64", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", file="PolishNumberToWordsConverter.cs", color=green, community=0];
m19_35 [label=numeral, span="72-72", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", file="PolishNumberToWordsConverter.cs"];
m19_39 [label="Numeral.Million", span="77-77", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", file="PolishNumberToWordsConverter.cs", color=green, community=0];
m19_43 [label="var thousand = new[] { ''tysiąc'', ''tysiące'', ''tysięcy'' }", span="81-81", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", file="PolishNumberToWordsConverter.cs", color=green, community=0];
m19_32 [label="return 2;", span="67-67", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", file="PolishNumberToWordsConverter.cs", color=green, community=0];
m19_33 [label="Exit Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", span="51-51", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", file="PolishNumberToWordsConverter.cs"];
m19_36 [label="Numeral.Miliard", span="74-74", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", color=green, community=0, file="PolishNumberToWordsConverter.cs"];
m19_37 [label="var miliard = new[] { ''miliard'', ''miliardy'', ''miliardów'' }", span="75-75", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", file="PolishNumberToWordsConverter.cs"];
m19_40 [label="var million = new[] { ''milion'', ''miliony'', ''milionów'' }", span="78-78", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", color=green, community=0, file="PolishNumberToWordsConverter.cs"];
m19_41 [label="return million[GetMappingIndex(num)];", span="79-79", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", file="PolishNumberToWordsConverter.cs", color=green, community=0];
m19_44 [label="return thousand[GetMappingIndex(num)];", span="82-82", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", file="PolishNumberToWordsConverter.cs"];
m19_45 [label="return string.Empty;", span="84-84", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", file="PolishNumberToWordsConverter.cs", color=green, community=0];
m19_34 [label="Entry Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", span="70-70", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", file="PolishNumberToWordsConverter.cs"];
m19_22 [label="Entry Humanizer.Configuration.LocaliserRegistry<TLocaliser>.Register(string, System.Func<System.Globalization.CultureInfo, TLocaliser>)", span="62-62", cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.Register(string, System.Func<System.Globalization.CultureInfo, TLocaliser>)", file="PolishNumberToWordsConverter.cs"];
m19_24 [label="Entry Humanizer.Localisation.NumberToWords.RussianNumberToWordsConverter.RussianNumberToWordsConverter()", span="6-6", cluster="Humanizer.Localisation.NumberToWords.RussianNumberToWordsConverter.RussianNumberToWordsConverter()", color=green, community=0, file="PolishNumberToWordsConverter.cs"];
m19_42 [label="Entry Humanizer.Localisation.NumberToWords.HebrewNumberToWordsConverter.HebrewNumberToWordsConverter(System.Globalization.CultureInfo)", span="34-34", cluster="Humanizer.Localisation.NumberToWords.HebrewNumberToWordsConverter.HebrewNumberToWordsConverter(System.Globalization.CultureInfo)", color=green, community=0, file="PolishNumberToWordsConverter.cs"];
m19_46 [label="Entry Humanizer.Localisation.NumberToWords.SlovenianNumberToWordsConverter.SlovenianNumberToWordsConverter(System.Globalization.CultureInfo)", span="12-12", cluster="Humanizer.Localisation.NumberToWords.SlovenianNumberToWordsConverter.SlovenianNumberToWordsConverter(System.Globalization.CultureInfo)", file="PolishNumberToWordsConverter.cs"];
m19_47 [label="Humanizer.Configuration.NumberToWordsConverterRegistry", span="", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", file="PolishNumberToWordsConverter.cs"];
m19_48 [label="number == 0", span="90-90", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=green, community=0, file="PolishNumberToWordsConverter.cs"];
m19_49 [label="return Zero;", span="91-91", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=green, community=0, file="PolishNumberToWordsConverter.cs"];
m19_50 [label="var result = new StringBuilder()", span="93-93", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=green, community=0, file="PolishNumberToWordsConverter.cs"];
m19_51 [label="number < 0", span="95-95", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=green, community=0, file="PolishNumberToWordsConverter.cs"];
m19_52 [label="result.AppendFormat(@''{0} '', Negative)", span="97-97", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=green, community=0, file="PolishNumberToWordsConverter.cs"];
m19_54 [label="var numerals = ((Numeral[])Enum.GetValues(typeof(Numeral))).Reverse()", span="101-101", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", file="PolishNumberToWordsConverter.cs"];
m19_53 [label="number = Math.Abs(number)", span="98-98", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=green, community=0, file="PolishNumberToWordsConverter.cs"];
m19_56 [label="var num = number / (int)numeral", span="104-104", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", file="PolishNumberToWordsConverter.cs"];
m19_59 [label="number %= (int)numeral", span="108-108", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", file="PolishNumberToWordsConverter.cs"];
m19_58 [label="result.AppendFormat(@''{0}{1} '', ConvertNumberUnderThousand(numeral, num), GetSuffix(numeral, num))", span="107-107", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", file="PolishNumberToWordsConverter.cs"];
m19_60 [label="return result.ToString().Trim();", span="112-112", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", file="PolishNumberToWordsConverter.cs"];
m19_55 [label=numerals, span="102-102", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", file="PolishNumberToWordsConverter.cs"];
m19_57 [label="num > 0", span="105-105", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", file="PolishNumberToWordsConverter.cs"];
m19_61 [label="Exit Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", span="88-88", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", file="PolishNumberToWordsConverter.cs"];
m20_41 [label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0", cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_16 [label="Exit Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Hours(int, string)", span="30-30", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Hours(int, string)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_42 [label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71", cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_56 [label="Entry System.Enum.Parse(System.Type, string)", span="0-0", cluster="System.Enum.Parse(System.Type, string)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_22 [label="Exit lambda expression", span="28-28", cluster="lambda expression", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_32 [label="return Maybe.Nothing<object>();", span="48-48", cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_8 [label="return converted.Any(a => a.MatchNothing())\r\n                ? Maybe.Nothing<object>()\r\n                : Maybe.Just(converted.Select(c => ((Just<object>)c).Value).ToArray(type));", span="30-32", cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_17 [label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66", cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_18 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_19 [label="Entry Unk.Just", span="", cluster="Unk.Just", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_20 [label="Entry lambda expression", span="28-28", cluster="lambda expression", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_21 [label="ChangeType(value, type, conversionCulture)", span="28-28", cluster="lambda expression", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_58 [label="Entry System.Enum.IsDefined(System.Type, object)", span="0-0", cluster="System.Enum.IsDefined(System.Type, object)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_0 [label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="12-12", cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_1 [label="return scalar\r\n                ? ChangeType(values.Single(), conversionType, conversionCulture)\r\n                : ChangeType(values, conversionType, conversionCulture);", span="14-16", cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_2 [label="Entry Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Weeks(int, string)", span="12-12", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Weeks(int, string)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_40 [label="Entry CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", span="71-71", cluster="CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_48 [label="object parsedValue", span="73-73", cluster="CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_49 [label="parsedValue = Enum.Parse(conversionType, value)", span="76-76", cluster="CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_52 [label="Enum.IsDefined(conversionType, parsedValue)", span="82-82", cluster="CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_50 [label=ArgumentException, span="78-78", cluster="CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_53 [label="return parsedValue;", span="84-84", cluster="CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_51 [label="throw new FormatException();", span="80-80", cluster="CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_54 [label="throw new FormatException();", span="86-86", cluster="CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_55 [label="Exit CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", span="71-71", cluster="CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_12 [label="Exit Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Days(int, string)", span="21-21", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Days(int, string)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_33 [label=FormatException, span="50-50", cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_35 [label=OverflowException, span="54-54", cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_36 [label="return Maybe.Nothing<object>();", span="56-56", cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_34 [label="return Maybe.Nothing<object>();", span="52-52", cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_37 [label="Exit CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", span="35-35", cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_28 [label="((Just<object>)c).Value", span="32-32", cluster="lambda expression", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_29 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_30 [label="return Maybe.Just(\r\n                    MatchBoolString(value)\r\n                        ? ConvertBoolString(value)\r\n                        : conversionType.IsEnum\r\n                            ? ConvertEnumString(value, conversionType)\r\n                            : Convert.ChangeType(value, conversionType, conversionCulture));", span="39-44", cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_31 [label=InvalidCastException, span="46-46", cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_26 [label="Exit Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Seconds(int, string)", span="48-48", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Seconds(int, string)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_27 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_14 [label="var actual = TimeSpan.FromHours(hours).Humanize()", span="32-32", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Hours(int, string)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_3 [label="var actual = TimeSpan.FromDays(days).Humanize()", span="14-14", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Weeks(int, string)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_6 [label="var type =\r\n                conversionType.GetGenericArguments()\r\n                              .SingleOrDefault()\r\n                              .ToMaybe()\r\n                              .FromJust(\r\n                                  new ApplicationException(''Non scalar properties should be sequence of type IEnumerable<T>.''))", span="21-26", cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", file="PrecisionDateTimeHumanizeStrategy.cs", color=red, community=0];
m20_13 [label="Entry Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Hours(int, string)", span="30-30", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Hours(int, string)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_38 [label="Entry CommandLine.Core.TypeConverter.MatchBoolString(string)", span="60-60", cluster="CommandLine.Core.TypeConverter.MatchBoolString(string)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_43 [label="return value.Equals(''true'', StringComparison.OrdinalIgnoreCase)\r\n                   || value.Equals(''false'', StringComparison.OrdinalIgnoreCase);", span="62-63", cluster="CommandLine.Core.TypeConverter.MatchBoolString(string)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_44 [label="Exit CommandLine.Core.TypeConverter.MatchBoolString(string)", span="60-60", cluster="CommandLine.Core.TypeConverter.MatchBoolString(string)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_11 [label="Assert.Equal(expected, actual)", span="24-24", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Days(int, string)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_57 [label="Entry System.FormatException.FormatException()", span="0-0", cluster="System.FormatException.FormatException()", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_4 [label="Assert.Equal(expected, actual)", span="15-15", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Weeks(int, string)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_5 [label="Exit Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Weeks(int, string)", span="12-12", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Weeks(int, string)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_7 [label="Entry System.TimeSpan.Humanize(int, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", span="27-27", cluster="System.TimeSpan.Humanize(int, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_9 [label="Entry Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Days(int, string)", span="21-21", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Days(int, string)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_10 [label="var actual = TimeSpan.FromDays(days).Humanize()", span="23-23", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Days(int, string)", file="PrecisionDateTimeHumanizeStrategy.cs", color=green, community=0];
m20_39 [label="Entry CommandLine.Core.TypeConverter.ConvertBoolString(string)", span="66-66", cluster="CommandLine.Core.TypeConverter.ConvertBoolString(string)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_46 [label="return value.Equals(''true'', StringComparison.OrdinalIgnoreCase);", span="68-68", cluster="CommandLine.Core.TypeConverter.ConvertBoolString(string)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_47 [label="Exit CommandLine.Core.TypeConverter.ConvertBoolString(string)", span="66-66", cluster="CommandLine.Core.TypeConverter.ConvertBoolString(string)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_23 [label="Entry Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Seconds(int, string)", span="48-48", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Seconds(int, string)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_24 [label="var actual = TimeSpan.FromSeconds(seconds).Humanize()", span="50-50", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Seconds(int, string)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_25 [label="Assert.Equal(expected, actual)", span="51-51", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Seconds(int, string)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_45 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_15 [label="Assert.Equal(expected, actual)", span="33-33", cluster="Humanizer.Tests.Localisation.frBE.TimeSpanHumanizeTests.Hours(int, string)", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_59 [label="System.Globalization.CultureInfo", span="", file="PrecisionDateTimeHumanizeStrategy.cs"];
m20_60 [label=type, span="", file="PrecisionDateTimeHumanizeStrategy.cs"];
m21_4 [label="Entry Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", span="15-15", cluster="Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", file="PrepositionsExtensions.cs"];
m21_5 [label="return date.At(0);", span="17-17", cluster="Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", file="PrepositionsExtensions.cs"];
m21_6 [label="Exit Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", span="15-15", cluster="Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", file="PrepositionsExtensions.cs"];
m21_8 [label="Entry Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", span="25-25", cluster="Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", file="PrepositionsExtensions.cs"];
m21_9 [label="return date.At(12);", span="27-27", cluster="Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", file="PrepositionsExtensions.cs"];
m21_10 [label="Exit Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", span="25-25", cluster="Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", file="PrepositionsExtensions.cs"];
m21_7 [label="Entry System.DateTime.At(int, int, int, int)", span="5-5", cluster="System.DateTime.At(int, int, int, int)", file="PrepositionsExtensions.cs"];
m21_0 [label="Entry Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", span="5-5", cluster="Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", file="PrepositionsExtensions.cs"];
m21_1 [label="return new DateTime(date.Year, date.Month, date.Day, hour, min, second, millisecond);", span="7-7", cluster="Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", file="PrepositionsExtensions.cs"];
m21_2 [label="Exit Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", span="5-5", cluster="Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", file="PrepositionsExtensions.cs"];
m21_11 [label="Entry Humanizer.PrepositionsExtensions.In(System.DateTime, int)", span="36-36", cluster="Humanizer.PrepositionsExtensions.In(System.DateTime, int)", file="PrepositionsExtensions.cs"];
m21_12 [label="return new DateTime(year, date.Month, date.Day, date.Hour, date.Minute, date.Second, date.Millisecond);", span="38-38", cluster="Humanizer.PrepositionsExtensions.In(System.DateTime, int)", file="PrepositionsExtensions.cs"];
m21_13 [label="Exit Humanizer.PrepositionsExtensions.In(System.DateTime, int)", span="36-36", cluster="Humanizer.PrepositionsExtensions.In(System.DateTime, int)", file="PrepositionsExtensions.cs"];
m21_3 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, int)", file="PrepositionsExtensions.cs"];
m22_4 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="ResourceKeys.Common.cs"];
m22_0 [label="Entry Humanizer.Localisation.ResourceKeys.ValidateRange(int)", span="9-9", cluster="Humanizer.Localisation.ResourceKeys.ValidateRange(int)", file="ResourceKeys.Common.cs"];
m22_1 [label="count < 0", span="11-11", cluster="Humanizer.Localisation.ResourceKeys.ValidateRange(int)", file="ResourceKeys.Common.cs"];
m22_2 [label="throw new ArgumentOutOfRangeException(''count'');", span="12-12", cluster="Humanizer.Localisation.ResourceKeys.ValidateRange(int)", file="ResourceKeys.Common.cs"];
m22_3 [label="Exit Humanizer.Localisation.ResourceKeys.ValidateRange(int)", span="9-9", cluster="Humanizer.Localisation.ResourceKeys.ValidateRange(int)", file="ResourceKeys.Common.cs"];
m23_7 [label="Entry string.FormatWith(params object[])", span="15-15", cluster="string.FormatWith(params object[])", file="ResourceKeys.TimeSpanHumanize.cs"];
m23_6 [label="Entry Humanizer.Localisation.ResourceKeys.ValidateRange(int)", span="9-9", cluster="Humanizer.Localisation.ResourceKeys.ValidateRange(int)", file="ResourceKeys.TimeSpanHumanize.cs"];
m23_0 [label="Entry Humanizer.Localisation.ResourceKeys.TimeSpanHumanize.GetResourceKey(Humanizer.Localisation.TimeUnit, int)", span="19-19", cluster="Humanizer.Localisation.ResourceKeys.TimeSpanHumanize.GetResourceKey(Humanizer.Localisation.TimeUnit, int)", file="ResourceKeys.TimeSpanHumanize.cs"];
m23_1 [label="ValidateRange(count)", span="21-21", cluster="Humanizer.Localisation.ResourceKeys.TimeSpanHumanize.GetResourceKey(Humanizer.Localisation.TimeUnit, int)", file="ResourceKeys.TimeSpanHumanize.cs"];
m23_2 [label="count == 0", span="23-23", cluster="Humanizer.Localisation.ResourceKeys.TimeSpanHumanize.GetResourceKey(Humanizer.Localisation.TimeUnit, int)", file="ResourceKeys.TimeSpanHumanize.cs"];
m23_4 [label="return TimeSpanFormat.FormatWith(count == 1 ? Single : Multiple, unit, count == 1 ? '''' : ''s'');", span="26-26", cluster="Humanizer.Localisation.ResourceKeys.TimeSpanHumanize.GetResourceKey(Humanizer.Localisation.TimeUnit, int)", file="ResourceKeys.TimeSpanHumanize.cs"];
m23_3 [label="return Zero;", span="24-24", cluster="Humanizer.Localisation.ResourceKeys.TimeSpanHumanize.GetResourceKey(Humanizer.Localisation.TimeUnit, int)", file="ResourceKeys.TimeSpanHumanize.cs"];
m23_5 [label="Exit Humanizer.Localisation.ResourceKeys.TimeSpanHumanize.GetResourceKey(Humanizer.Localisation.TimeUnit, int)", span="19-19", cluster="Humanizer.Localisation.ResourceKeys.TimeSpanHumanize.GetResourceKey(Humanizer.Localisation.TimeUnit, int)", file="ResourceKeys.TimeSpanHumanize.cs"];
m25_0 [label="Entry CommandLine.Core.Verb.Verb(string, string)", span="13-13", cluster="CommandLine.Core.Verb.Verb(string, string)", file="RussianOrdinalizer.cs"];
m25_1 [label="name == null", span="15-15", cluster="CommandLine.Core.Verb.Verb(string, string)", file="RussianOrdinalizer.cs"];
m25_3 [label="helpText == null", span="16-16", cluster="CommandLine.Core.Verb.Verb(string, string)", file="RussianOrdinalizer.cs"];
m25_5 [label="this.name = name", span="18-18", cluster="CommandLine.Core.Verb.Verb(string, string)", file="RussianOrdinalizer.cs"];
m25_6 [label="this.helpText = helpText", span="19-19", cluster="CommandLine.Core.Verb.Verb(string, string)", file="RussianOrdinalizer.cs"];
m25_2 [label="throw new ArgumentNullException(''name'');", span="15-15", cluster="CommandLine.Core.Verb.Verb(string, string)", file="RussianOrdinalizer.cs"];
m25_4 [label="throw new ArgumentNullException(''helpText'');", span="16-16", cluster="CommandLine.Core.Verb.Verb(string, string)", file="RussianOrdinalizer.cs"];
m25_7 [label="Exit CommandLine.Core.Verb.Verb(string, string)", span="13-13", cluster="CommandLine.Core.Verb.Verb(string, string)", file="RussianOrdinalizer.cs"];
m25_8 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RussianOrdinalizer.cs"];
m25_16 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="RussianOrdinalizer.cs"];
m25_17 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="RussianOrdinalizer.cs"];
m25_9 [label="Entry CommandLine.Core.Verb.FromAttribute(CommandLine.VerbAttribute)", span="32-32", cluster="CommandLine.Core.Verb.FromAttribute(CommandLine.VerbAttribute)", file="RussianOrdinalizer.cs"];
m25_10 [label="return new Verb(\r\n                attribute.Name,\r\n                attribute.HelpText\r\n                );", span="34-37", cluster="CommandLine.Core.Verb.FromAttribute(CommandLine.VerbAttribute)", file="RussianOrdinalizer.cs"];
m25_11 [label="Exit CommandLine.Core.Verb.FromAttribute(CommandLine.VerbAttribute)", span="32-32", cluster="CommandLine.Core.Verb.FromAttribute(CommandLine.VerbAttribute)", file="RussianOrdinalizer.cs"];
m25_12 [label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40", cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="RussianOrdinalizer.cs"];
m25_13 [label="return from type in types\r\n                   let attrs = type.GetCustomAttributes(typeof(VerbAttribute), true)\r\n                   where attrs.Length == 1\r\n                   select Tuple.Create(\r\n                       Verb.FromAttribute((VerbAttribute)attrs.Single()),\r\n                       type);", span="42-47", cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="RussianOrdinalizer.cs"];
m25_14 [label="Exit CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40", cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="RussianOrdinalizer.cs"];
m25_15 [label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0", cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="RussianOrdinalizer.cs"];
m25_18 [label="CommandLine.Core.Verb", span="", file="RussianOrdinalizer.cs"];
m26_32 [label="Entry System.Math.Abs(int)", span="0-0", cluster="System.Math.Abs(int)", file="SpanishNumberToWordsConverter.cs"];
m26_3 [label="number < 0", span="27-27", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int)", file="SpanishNumberToWordsConverter.cs"];
m26_34 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="SpanishNumberToWordsConverter.cs"];
m26_47 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="SpanishNumberToWordsConverter.cs"];
m26_8 [label="number %= 1000000000", span="37-37", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int)", file="SpanishNumberToWordsConverter.cs"];
m26_37 [label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0", cluster="System.Collections.Generic.List<T>.ToArray()", file="SpanishNumberToWordsConverter.cs"];
m26_36 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="SpanishNumberToWordsConverter.cs"];
m26_39 [label="Entry Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", span="82-82", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", file="SpanishNumberToWordsConverter.cs"];
m26_40 [label="string towords", span="83-83", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", file="SpanishNumberToWordsConverter.cs"];
m26_41 [label="!Ordinals.TryGetValue(number, out towords)", span="84-84", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", file="SpanishNumberToWordsConverter.cs"];
m26_42 [label="towords = Convert(number)", span="85-85", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", file="SpanishNumberToWordsConverter.cs"];
m26_43 [label="gender == GrammaticalGender.Feminine", span="86-86", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", file="SpanishNumberToWordsConverter.cs"];
m26_44 [label="towords = towords.TrimEnd('o') + ''a''", span="87-87", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", file="SpanishNumberToWordsConverter.cs"];
m26_45 [label="return towords;", span="89-89", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", file="SpanishNumberToWordsConverter.cs"];
m26_46 [label="Exit Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", span="82-82", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", file="SpanishNumberToWordsConverter.cs"];
m26_35 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="SpanishNumberToWordsConverter.cs"];
m26_38 [label="Entry string.Join(string, params string[])", span="0-0", cluster="string.Join(string, params string[])", file="SpanishNumberToWordsConverter.cs"];
m26_4 [label="return string.Format(''menos {0}'', Convert(Math.Abs(number)));", span="28-28", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int)", file="SpanishNumberToWordsConverter.cs"];
m26_5 [label="var parts = new List<string>()", span="30-30", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int)", file="SpanishNumberToWordsConverter.cs"];
m26_6 [label="(number / 1000000000) > 0", span="32-32", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int)", file="SpanishNumberToWordsConverter.cs", color=red, community=0];
m26_7 [label="parts.Add(number / 1000000000 == 1\r\n                    ? string.Format(''mil millones'')\r\n                    : string.Format(''{0} mil millones'', Convert(number / 1000000000)))", span="33-35", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int)", file="SpanishNumberToWordsConverter.cs"];
m26_0 [label="Entry Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int)", span="23-23", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int)", file="SpanishNumberToWordsConverter.cs"];
m26_1 [label="number == 0", span="24-24", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int)", color=green, community=0, file="SpanishNumberToWordsConverter.cs"];
m26_2 [label="return ''cero'';", span="25-25", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int)", file="SpanishNumberToWordsConverter.cs"];
m26_48 [label="Entry string.TrimEnd(params char[])", span="0-0", cluster="string.TrimEnd(params char[])", file="SpanishNumberToWordsConverter.cs"];
m26_33 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="SpanishNumberToWordsConverter.cs"];
m26_9 [label="(number / 1000000) > 0", span="40-40", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int)", color=red, community=0, file="SpanishNumberToWordsConverter.cs"];
m26_10 [label="parts.Add(number / 1000000 == 1\r\n                    ? string.Format(''millón'')\r\n                    : string.Format(''{0} millones'', Convert(number / 1000000)))", span="41-43", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int)", file="SpanishNumberToWordsConverter.cs"];
m26_11 [label="number %= 1000000", span="45-45", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int)", file="SpanishNumberToWordsConverter.cs"];
m26_12 [label="(number / 1000) > 0", span="48-48", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int)", color=red, community=0, file="SpanishNumberToWordsConverter.cs"];
m26_13 [label="parts.Add(number / 1000 == 1\r\n                    ? string.Format(''mil'')\r\n                    : string.Format(''{0} mil'', Convert(number / 1000)))", span="49-51", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int)", file="SpanishNumberToWordsConverter.cs"];
m26_14 [label="number %= 1000", span="53-53", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int)", file="SpanishNumberToWordsConverter.cs"];
m26_15 [label="(number / 100) > 0", span="56-56", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int)", color=red, community=0, file="SpanishNumberToWordsConverter.cs"];
m26_16 [label="parts.Add(number == 100 ? string.Format(''cien'') : HundredsMap[(number / 100)])", span="57-57", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int)", file="SpanishNumberToWordsConverter.cs"];
m26_17 [label="number %= 100", span="58-58", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int)", file="SpanishNumberToWordsConverter.cs"];
m26_18 [label="number > 0", span="61-61", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int)", color=red, community=0, file="SpanishNumberToWordsConverter.cs"];
m26_19 [label="number < 20", span="62-62", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int)", color=red, community=0, file="SpanishNumberToWordsConverter.cs"];
m26_20 [label="parts.Add(UnitsMap[number])", span="63-63", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int)", file="SpanishNumberToWordsConverter.cs"];
m26_21 [label="number > 20 && number < 30", span="64-64", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int)", file="SpanishNumberToWordsConverter.cs"];
m26_22 [label="var lastPart = TensMap[number / 10]", span="65-65", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int)", file="SpanishNumberToWordsConverter.cs"];
m26_23 [label="(number % 10) > 0", span="66-66", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int)", file="SpanishNumberToWordsConverter.cs"];
m26_24 [label="lastPart += string.Format('' {0}'', UnitsMap[number % 10])", span="67-67", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int)", file="SpanishNumberToWordsConverter.cs"];
m26_26 [label="var lastPart = TensMap[number / 10]", span="71-71", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int)", file="SpanishNumberToWordsConverter.cs"];
m26_27 [label="(number % 10) > 0", span="72-72", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int)", file="SpanishNumberToWordsConverter.cs"];
m26_28 [label="lastPart += string.Format('' y {0}'', UnitsMap[number % 10])", span="73-73", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int)", file="SpanishNumberToWordsConverter.cs"];
m26_25 [label="parts.Add(lastPart)", span="69-69", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int)", file="SpanishNumberToWordsConverter.cs"];
m26_29 [label="parts.Add(lastPart)", span="75-75", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int)", file="SpanishNumberToWordsConverter.cs"];
m26_30 [label="return string.Join('' '', parts.ToArray());", span="79-79", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int)", file="SpanishNumberToWordsConverter.cs"];
m26_31 [label="Exit Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int)", span="23-23", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int)", file="SpanishNumberToWordsConverter.cs"];
m26_49 [label="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter", span="", file="SpanishNumberToWordsConverter.cs"];
m28_4 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="StringDehumanizeExtensions.cs"];
m28_6 [label="Entry Unk.Join", span="", cluster="Unk.Join", file="StringDehumanizeExtensions.cs"];
m28_5 [label="Entry string.Humanize(Humanizer.LetterCasing)", span="62-62", cluster="string.Humanize(Humanizer.LetterCasing)", file="StringDehumanizeExtensions.cs"];
m28_0 [label="Entry Humanizer.StringDehumanizeExtensions.Dehumanize(string)", span="11-11", cluster="Humanizer.StringDehumanizeExtensions.Dehumanize(string)", file="StringDehumanizeExtensions.cs"];
m28_1 [label="var titlizedWords = \r\n                (from word in input.Split(' ')\r\n                select word.Humanize(LetterCasing.Title))", span="13-15", cluster="Humanizer.StringDehumanizeExtensions.Dehumanize(string)", file="StringDehumanizeExtensions.cs"];
m28_2 [label="return string.Join('''', titlizedWords);", span="17-17", cluster="Humanizer.StringDehumanizeExtensions.Dehumanize(string)", file="StringDehumanizeExtensions.cs"];
m28_3 [label="Exit Humanizer.StringDehumanizeExtensions.Dehumanize(string)", span="11-11", cluster="Humanizer.StringDehumanizeExtensions.Dehumanize(string)", file="StringDehumanizeExtensions.cs"];
m29_19 [label="Entry int.ToWords(System.Globalization.CultureInfo)", span="16-16", cluster="int.ToWords(System.Globalization.CultureInfo)", file="StringHumanizeExtensions.cs"];
m29_3 [label="Entry string.ToQuantity(int, Humanizer.ShowQuantityAs, string, System.IFormatProvider)", span="69-69", cluster="string.ToQuantity(int, Humanizer.ShowQuantityAs, string, System.IFormatProvider)", file="StringHumanizeExtensions.cs"];
m29_18 [label="Entry string.Format(System.IFormatProvider, string, object, object)", span="0-0", cluster="string.Format(System.IFormatProvider, string, object, object)", file="StringHumanizeExtensions.cs"];
m29_0 [label="Entry Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", span="46-46", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", file="StringHumanizeExtensions.cs"];
m29_1 [label="return input.ToQuantity(quantity, showQuantityAs, format: null, formatProvider: null);", span="48-48", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", file="StringHumanizeExtensions.cs"];
m29_2 [label="Exit Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", span="46-46", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", file="StringHumanizeExtensions.cs"];
m29_4 [label="Entry Humanizer.ToQuantityExtensions.ToQuantity(string, int, string, System.IFormatProvider)", span="64-64", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, string, System.IFormatProvider)", file="StringHumanizeExtensions.cs"];
m29_5 [label="return input.ToQuantity(quantity, showQuantityAs: ShowQuantityAs.Numeric, format: format, formatProvider: formatProvider);", span="66-66", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, string, System.IFormatProvider)", file="StringHumanizeExtensions.cs"];
m29_6 [label="Exit Humanizer.ToQuantityExtensions.ToQuantity(string, int, string, System.IFormatProvider)", span="64-64", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, string, System.IFormatProvider)", file="StringHumanizeExtensions.cs"];
m29_20 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="StringHumanizeExtensions.cs"];
m29_16 [label="Entry string.Pluralize(Humanizer.Plurality)", span="170-170", cluster="string.Pluralize(Humanizer.Plurality)", file="StringHumanizeExtensions.cs"];
m29_17 [label="Entry int.ToString(string, System.IFormatProvider)", span="0-0", cluster="int.ToString(string, System.IFormatProvider)", file="StringHumanizeExtensions.cs"];
m29_15 [label="Entry string.Singularize(Humanizer.Plurality)", span="194-194", cluster="string.Singularize(Humanizer.Plurality)", file="StringHumanizeExtensions.cs"];
m29_7 [label="Entry Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs, string, System.IFormatProvider)", span="69-69", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs, string, System.IFormatProvider)", file="StringHumanizeExtensions.cs"];
m29_8 [label="var transformedInput = quantity == 1\r\n                ? input.Singularize(Plurality.CouldBeEither)\r\n                : input.Pluralize(Plurality.CouldBeEither)", span="71-73", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs, string, System.IFormatProvider)", file="StringHumanizeExtensions.cs"];
m29_9 [label="showQuantityAs == ShowQuantityAs.None", span="75-75", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs, string, System.IFormatProvider)", file="StringHumanizeExtensions.cs"];
m29_11 [label="showQuantityAs == ShowQuantityAs.Numeric", span="78-78", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs, string, System.IFormatProvider)", file="StringHumanizeExtensions.cs"];
m29_12 [label="return string.Format(formatProvider, ''{0} {1}'', quantity.ToString(format, formatProvider), transformedInput);", span="79-79", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs, string, System.IFormatProvider)", file="StringHumanizeExtensions.cs"];
m29_13 [label="return string.Format(''{0} {1}'', quantity.ToWords(), transformedInput);", span="81-81", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs, string, System.IFormatProvider)", file="StringHumanizeExtensions.cs"];
m29_10 [label="return transformedInput;", span="76-76", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs, string, System.IFormatProvider)", file="StringHumanizeExtensions.cs"];
m29_14 [label="Exit Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs, string, System.IFormatProvider)", span="69-69", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs, string, System.IFormatProvider)", file="StringHumanizeExtensions.cs"];
m33_56 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)", file="ToQuantityExtensions.cs"];
m33_20 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", span="83-83", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", file="ToQuantityExtensions.cs"];
m33_21 [label="this.attribute = attribute", span="85-85", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", file="ToQuantityExtensions.cs"];
m33_22 [label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", span="83-83", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", file="ToQuantityExtensions.cs"];
m33_0 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="32-32", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="ToQuantityExtensions.cs"];
m33_1 [label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="32-32", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", color=green, community=0, file="ToQuantityExtensions.cs"];
m33_2 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="45-45", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="ToQuantityExtensions.cs"];
m33_3 [label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="45-45", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="ToQuantityExtensions.cs"];
m33_5 [label="string.IsNullOrWhiteSpace(author)", span="61-61", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", color=green, community=0, file="ToQuantityExtensions.cs"];
m33_6 [label="throw new ArgumentException(''author'');", span="61-61", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="ToQuantityExtensions.cs"];
m33_4 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="59-59", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="ToQuantityExtensions.cs"];
m33_7 [label="copyrightYears.Length == 0", span="62-62", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="ToQuantityExtensions.cs"];
m33_10 [label="this.isSymbolUpper = isSymbolUpper", span="65-65", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="ToQuantityExtensions.cs"];
m33_15 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="ToQuantityExtensions.cs"];
m33_23 [label="Entry CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", span="128-128", cluster="CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", file="ToQuantityExtensions.cs"];
m33_24 [label="return info.ToString();", span="130-130", cluster="CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", file="ToQuantityExtensions.cs"];
m33_25 [label="Exit CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", span="128-128", cluster="CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", file="ToQuantityExtensions.cs"];
m33_40 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="ToQuantityExtensions.cs"];
m33_11 [label="this.author = author", span="66-66", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="ToQuantityExtensions.cs"];
m33_18 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo()", span="74-74", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo()", file="ToQuantityExtensions.cs"];
m33_19 [label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo()", span="74-74", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo()", file="ToQuantityExtensions.cs"];
m33_16 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="ToQuantityExtensions.cs"];
m33_12 [label="this.copyrightYears = copyrightYears", span="67-67", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="ToQuantityExtensions.cs"];
m33_13 [label="this.builderSize = 12 + author.Length + (4 * copyrightYears.Length) + ExtraLength", span="68-68", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="ToQuantityExtensions.cs"];
m33_8 [label="Entry string.Singularize(Humanizer.Plurality)", span="194-194", cluster="string.Singularize(Humanizer.Plurality)", file="ToQuantityExtensions.cs"];
m33_9 [label="Entry string.Pluralize(Humanizer.Plurality)", span="170-170", cluster="string.Pluralize(Humanizer.Plurality)", file="ToQuantityExtensions.cs"];
m33_14 [label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="59-59", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="ToQuantityExtensions.cs"];
m33_43 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="ToQuantityExtensions.cs"];
m33_39 [label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(int)", file="ToQuantityExtensions.cs"];
m33_41 [label="Entry System.Text.StringBuilder.Append(char)", span="0-0", cluster="System.Text.StringBuilder.Append(char)", file="ToQuantityExtensions.cs"];
m33_17 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="ToQuantityExtensions.cs"];
m33_26 [label="Entry CommandLine.Text.CopyrightInfo.ToString()", span="137-137", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="ToQuantityExtensions.cs"];
m33_27 [label="this.attribute != null", span="139-139", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="ToQuantityExtensions.cs"];
m33_28 [label="return this.attribute.Copyright;", span="141-141", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="ToQuantityExtensions.cs"];
m33_29 [label="var builder = new StringBuilder(this.builderSize)", span="144-144", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="ToQuantityExtensions.cs"];
m33_30 [label="builder.Append(CopyrightWord)", span="145-145", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="ToQuantityExtensions.cs"];
m33_31 [label="builder.Append(' ')", span="146-146", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="ToQuantityExtensions.cs"];
m33_32 [label="builder.Append(this.isSymbolUpper ? SymbolUpper : SymbolLower)", span="147-147", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="ToQuantityExtensions.cs"];
m33_33 [label="builder.Append(' ')", span="148-148", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="ToQuantityExtensions.cs"];
m33_34 [label="builder.Append(FormatYears(this.copyrightYears))", span="149-149", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="ToQuantityExtensions.cs"];
m33_35 [label="builder.Append(' ')", span="150-150", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="ToQuantityExtensions.cs"];
m33_36 [label="builder.Append(this.author)", span="151-151", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="ToQuantityExtensions.cs"];
m33_37 [label="return builder.ToString();", span="152-152", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="ToQuantityExtensions.cs"];
m33_38 [label="Exit CommandLine.Text.CopyrightInfo.ToString()", span="137-137", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="ToQuantityExtensions.cs"];
m33_42 [label="Entry CommandLine.Text.CopyrightInfo.FormatYears(int[])", span="161-161", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="ToQuantityExtensions.cs"];
m33_44 [label="years.Length == 1", span="163-163", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="ToQuantityExtensions.cs"];
m33_45 [label="return years[0].ToString(CultureInfo.InvariantCulture);", span="165-165", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="ToQuantityExtensions.cs"];
m33_46 [label="var yearsPart = new StringBuilder(years.Length * 6)", span="168-168", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="ToQuantityExtensions.cs"];
m33_48 [label="i < years.Length", span="169-169", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="ToQuantityExtensions.cs"];
m33_49 [label="yearsPart.Append(years[i].ToString(CultureInfo.InvariantCulture))", span="171-171", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="ToQuantityExtensions.cs"];
m33_51 [label="next < years.Length", span="173-173", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="ToQuantityExtensions.cs"];
m33_52 [label="yearsPart.Append(years[next] - years[i] > 1 ? '' - '' : '', '')", span="175-175", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="ToQuantityExtensions.cs"];
m33_47 [label="int i = 0", span="169-169", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="ToQuantityExtensions.cs"];
m33_54 [label="return yearsPart.ToString();", span="179-179", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="ToQuantityExtensions.cs"];
m33_50 [label="int next = i + 1", span="172-172", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="ToQuantityExtensions.cs"];
m33_53 [label="i++", span="169-169", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="ToQuantityExtensions.cs"];
m33_55 [label="Exit CommandLine.Text.CopyrightInfo.FormatYears(int[])", span="161-161", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="ToQuantityExtensions.cs"];
m33_57 [label="CommandLine.Text.CopyrightInfo", span="", file="ToQuantityExtensions.cs"];
m34_5 [label="Entry string.ToQuantity(int, Humanizer.ShowQuantityAs)", span="25-25", cluster="string.ToQuantity(int, Humanizer.ShowQuantityAs)", file="ToQuantityTests.cs"];
m34_0 [label="Entry Humanizer.Tests.ToQuantityTests.ToQuantityTests()", span="7-7", cluster="Humanizer.Tests.ToQuantityTests.ToQuantityTests()", file="ToQuantityTests.cs"];
m34_1 [label="Exit Humanizer.Tests.ToQuantityTests.ToQuantityTests()", span="7-7", cluster="Humanizer.Tests.ToQuantityTests.ToQuantityTests()", file="ToQuantityTests.cs"];
m34_2 [label="Entry Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", span="24-24", cluster="Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", file="ToQuantityTests.cs"];
m34_3 [label="Assert.Equal(expected, word.ToQuantity(quatity))", span="26-26", cluster="Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", file="ToQuantityTests.cs"];
m34_4 [label="Exit Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", span="24-24", cluster="Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", file="ToQuantityTests.cs"];
m34_6 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ToQuantityTests.cs"];
m34_13 [label="Entry Humanizer.Tests.ToQuantityTests.ToQuantityWords(string, int, string)", span="77-77", cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWords(string, int, string)", file="ToQuantityTests.cs"];
m34_14 [label="Assert.Equal(expected, word.ToQuantity(quatity, ShowQuantityAs.Words))", span="79-79", cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWords(string, int, string)", file="ToQuantityTests.cs"];
m34_15 [label="Exit Humanizer.Tests.ToQuantityTests.ToQuantityWords(string, int, string)", span="77-77", cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWords(string, int, string)", file="ToQuantityTests.cs"];
m34_7 [label="Entry Humanizer.Tests.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", span="41-41", cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", file="ToQuantityTests.cs"];
m34_8 [label="Assert.Equal(expected, word.ToQuantity(quatity, ShowQuantityAs.None))", span="43-43", cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", file="ToQuantityTests.cs"];
m34_9 [label="Exit Humanizer.Tests.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", span="41-41", cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", file="ToQuantityTests.cs"];
m34_10 [label="Entry Humanizer.Tests.ToQuantityTests.ToQuantityNumeric(string, int, string)", span="58-58", cluster="Humanizer.Tests.ToQuantityTests.ToQuantityNumeric(string, int, string)", file="ToQuantityTests.cs"];
m34_11 [label="Assert.Equal(expected, word.ToQuantity(quatity, ShowQuantityAs.Numeric))", span="61-61", cluster="Humanizer.Tests.ToQuantityTests.ToQuantityNumeric(string, int, string)", file="ToQuantityTests.cs"];
m34_12 [label="Exit Humanizer.Tests.ToQuantityTests.ToQuantityNumeric(string, int, string)", span="58-58", cluster="Humanizer.Tests.ToQuantityTests.ToQuantityNumeric(string, int, string)", file="ToQuantityTests.cs"];
m35_36 [label="Assert.Equal(expectedOutput, input.Truncate(length, Truncator.FixedNumberOfWords, TruncateFrom.Left))", span="150-150", cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncatorTruncateFromLeft(string, int, string)", file="Truncator.cs"];
m35_37 [label="Exit Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncatorTruncateFromLeft(string, int, string)", span="148-148", cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncatorTruncateFromLeft(string, int, string)", file="Truncator.cs"];
m35_38 [label="Entry Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncatorTruncateFromLeft(string, int, string, string)", span="163-163", cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncatorTruncateFromLeft(string, int, string, string)", file="Truncator.cs"];
m35_9 [label="Entry Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", span="37-37", cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", file="Truncator.cs"];
m35_10 [label="Assert.Equal(expectedOutput, input.Truncate(length, Truncator.FixedNumberOfCharacters))", span="39-39", cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", file="Truncator.cs", color=red, community=0];
m35_11 [label="Exit Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", span="37-37", cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", file="Truncator.cs"];
m35_22 [label="DateHumanize.Verify(expected, days, TimeUnit.Day, Tense.Past)", span="87-87", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.DaysAgo(int, string)", file="Truncator.cs"];
m35_4 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsAgo(int, string)", span="19-19", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsAgo(int, string)", file="Truncator.cs"];
m35_2 [label="Exit Humanizer.Tests.TruncatorTests.Truncate(string, int, string)", span="13-13", cluster="Humanizer.Tests.TruncatorTests.Truncate(string, int, string)", file="Truncator.cs"];
m35_3 [label="Entry string.Truncate(int)", span="15-15", cluster="string.Truncate(int)", file="Truncator.cs"];
m35_30 [label="Assert.Equal(expectedOutput, input.Truncate(length, Truncator.FixedLength, TruncateFrom.Left))", span="123-123", cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncatorTruncateFromLeft(string, int, string)", file="Truncator.cs"];
m35_31 [label="Exit Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncatorTruncateFromLeft(string, int, string)", span="121-121", cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncatorTruncateFromLeft(string, int, string)", file="Truncator.cs"];
m35_32 [label="Entry Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncatorTruncateFromLeft(string, int, string)", span="134-134", cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncatorTruncateFromLeft(string, int, string)", file="Truncator.cs"];
m35_18 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursFromNow(int, string)", span="75-75", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursFromNow(int, string)", file="Truncator.cs"];
m35_39 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.Now()", span="137-137", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.Now()", file="Truncator.cs"];
m35_40 [label="DateHumanize.Verify(''now'', 0, TimeUnit.Year, Tense.Future)", span="139-139", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.Now()", file="Truncator.cs"];
m35_5 [label="Entry Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo)", span="30-30", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo)", file="Truncator.cs"];
m35_6 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsFromNow(int, string)", span="29-29", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsFromNow(int, string)", color=red, community=0, file="Truncator.cs"];
m35_7 [label="DateHumanize.Verify(expected, seconds, TimeUnit.Second, Tense.Future)", span="31-31", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsFromNow(int, string)", file="Truncator.cs"];
m35_8 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsFromNow(int, string)", span="29-29", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsFromNow(int, string)", file="Truncator.cs"];
m35_12 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.MinutesFromNow(int, string)", span="55-55", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MinutesFromNow(int, string)", file="Truncator.cs"];
m35_13 [label="DateHumanize.Verify(expected, minutes, TimeUnit.Minute, Tense.Future)", span="57-57", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MinutesFromNow(int, string)", color=red, community=0, file="Truncator.cs"];
m35_14 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.MinutesFromNow(int, string)", span="55-55", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MinutesFromNow(int, string)", file="Truncator.cs"];
m35_33 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.YearsAgo(int, string)", span="123-123", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.YearsAgo(int, string)", file="Truncator.cs"];
m35_34 [label="DateHumanize.Verify(expected, years, TimeUnit.Year, Tense.Past)", span="125-125", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.YearsAgo(int, string)", file="Truncator.cs"];
m35_15 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursAgo(int, string)", span="65-65", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursAgo(int, string)", file="Truncator.cs"];
m35_16 [label="DateHumanize.Verify(expected, hours, TimeUnit.Hour, Tense.Past)", span="67-67", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursAgo(int, string)", color=red, community=0, file="Truncator.cs"];
m35_17 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursAgo(int, string)", span="65-65", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursAgo(int, string)", file="Truncator.cs"];
m35_42 [label="Assert.Equal(expectedOutput, input.Truncate(length, truncationString, Truncator.FixedNumberOfCharacters, TruncateFrom.Left))", span="180-180", cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncatorTruncateFromLeft(string, int, string, string)", file="Truncator.cs"];
m35_43 [label="Exit Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncatorTruncateFromLeft(string, int, string, string)", span="178-178", cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncatorTruncateFromLeft(string, int, string, string)", file="Truncator.cs"];
m35_44 [label="Entry Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncatorTruncateFromLeft(string, int, string, string)", span="194-194", cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncatorTruncateFromLeft(string, int, string, string)", file="Truncator.cs"];
m35_35 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.YearsAgo(int, string)", span="123-123", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.YearsAgo(int, string)", file="Truncator.cs"];
m35_21 [label="Exit Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncator(string, int, string, string)", span="79-79", cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncator(string, int, string, string)", file="Truncator.cs"];
m35_23 [label="Entry Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncator(string, int, string, string)", span="94-94", cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncator(string, int, string, string)", file="Truncator.cs"];
m35_45 [label="Assert.Equal(expectedOutput, input.Truncate(length, truncationString, Truncator.FixedNumberOfWords, TruncateFrom.Left))", span="196-196", cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncatorTruncateFromLeft(string, int, string, string)", file="Truncator.cs"];
m35_41 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.Now()", span="137-137", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.Now()", file="Truncator.cs"];
m35_46 [label="Exit Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncatorTruncateFromLeft(string, int, string, string)", span="194-194", cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncatorTruncateFromLeft(string, int, string, string)", file="Truncator.cs"];
m35_24 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.DaysFromNow(int, string)", span="95-95", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.DaysFromNow(int, string)", file="Truncator.cs"];
m35_25 [label="DateHumanize.Verify(expected, days, TimeUnit.Day, Tense.Future)", span="97-97", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.DaysFromNow(int, string)", file="Truncator.cs"];
m35_27 [label="Assert.Equal(expectedOutput, input.Truncate(length, truncationString, Truncator.FixedNumberOfWords))", span="111-111", cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)", file="Truncator.cs"];
m35_28 [label="Exit Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)", span="109-109", cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)", color=green, community=0, file="Truncator.cs"];
m35_29 [label="Entry Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncatorTruncateFromLeft(string, int, string)", span="121-121", cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncatorTruncateFromLeft(string, int, string)", file="Truncator.cs"];
m35_19 [label="DateHumanize.Verify(expected, hours, TimeUnit.Hour, Tense.Future)", span="77-77", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursFromNow(int, string)", file="Truncator.cs"];
m35_20 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursFromNow(int, string)", span="75-75", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursFromNow(int, string)", file="Truncator.cs"];
m35_26 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.DaysFromNow(int, string)", span="95-95", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.DaysFromNow(int, string)", file="Truncator.cs"];
m35_0 [label="Entry Humanizer.Tests.TruncatorTests.Truncate(string, int, string)", span="13-13", cluster="Humanizer.Tests.TruncatorTests.Truncate(string, int, string)", file="Truncator.cs"];
m35_1 [label="Assert.Equal(expectedOutput, input.Truncate(length))", span="15-15", cluster="Humanizer.Tests.TruncatorTests.Truncate(string, int, string)", file="Truncator.cs"];
m36_12 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteTerabytes()", span="18-18", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteTerabytes()", file="TruncatorTests.cs"];
m36_13 [label="Entry sbyte.Terabytes()", span="375-375", cluster="sbyte.Terabytes()", file="TruncatorTests.cs"];
m36_14 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortTerabytes()", span="25-25", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortTerabytes()", file="TruncatorTests.cs"];
m36_190 [label="Entry uint.Bytes()", span="135-135", cluster="uint.Bytes()", file="TruncatorTests.cs"];
m36_185 [label="Entry int.Bytes()", span="125-125", cluster="int.Bytes()", file="TruncatorTests.cs"];
m36_63 [label="Entry ushort.Gigabytes()", span="325-325", cluster="ushort.Gigabytes()", file="TruncatorTests.cs"];
m36_229 [label="Entry uint.Bits()", span="65-65", cluster="uint.Bits()", file="TruncatorTests.cs"];
m36_53 [label="Entry sbyte.Gigabytes()", span="305-305", cluster="sbyte.Gigabytes()", file="TruncatorTests.cs"];
m36_102 [label="Entry ushort.Megabytes()", span="255-255", cluster="ushort.Megabytes()", file="TruncatorTests.cs"];
m36_3 [label="byte size = 2", span="13-13", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteTerabytes()", file="TruncatorTests.cs"];
m36_69 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintGigabytes()", span="104-104", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintGigabytes()", file="TruncatorTests.cs"];
m36_70 [label="uint size = 2", span="106-106", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintGigabytes()", file="TruncatorTests.cs"];
m36_71 [label="Assert.Equal(ByteSize.FromGigabytes(size), size.Gigabytes())", span="107-107", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintGigabytes()", file="TruncatorTests.cs"];
m36_72 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintGigabytes()", span="104-104", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintGigabytes()", file="TruncatorTests.cs"];
m36_156 [label="Entry double.Kilobytes()", span="215-215", cluster="double.Kilobytes()", file="TruncatorTests.cs"];
m36_78 [label="Entry double.Gigabytes()", span="355-355", cluster="double.Gigabytes()", file="TruncatorTests.cs"];
m36_126 [label="Entry byte.Kilobytes()", span="155-155", cluster="byte.Kilobytes()", file="TruncatorTests.cs"];
m36_93 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortMegabytes()", span="141-141", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortMegabytes()", file="TruncatorTests.cs"];
m36_94 [label="short size = 2", span="143-143", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortMegabytes()", color=green, community=0, file="TruncatorTests.cs"];
m36_95 [label="Assert.Equal(ByteSize.FromMegabytes(size), size.Megabytes())", span="144-144", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortMegabytes()", color=green, community=0, file="TruncatorTests.cs"];
m36_96 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortMegabytes()", span="141-141", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortMegabytes()", file="TruncatorTests.cs"];
m36_196 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBytes(double, string, string)", span="295-295", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBytes(double, string, string)", file="TruncatorTests.cs"];
m36_197 [label="Assert.Equal(expectedValue, input.Bytes().Humanize(format))", span="297-297", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBytes(double, string, string)", file="TruncatorTests.cs"];
m36_198 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBytes(double, string, string)", span="295-295", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBytes(double, string, string)", file="TruncatorTests.cs"];
m36_195 [label="Entry double.Bytes()", span="145-145", cluster="double.Bytes()", file="TruncatorTests.cs"];
m36_19 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortTerabytes()", span="32-32", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortTerabytes()", file="TruncatorTests.cs"];
m36_20 [label="ushort size = 2", span="34-34", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortTerabytes()", file="TruncatorTests.cs"];
m36_21 [label="Assert.Equal(ByteSize.FromTerabytes(size), size.Terabytes())", span="35-35", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortTerabytes()", file="TruncatorTests.cs"];
m36_205 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBits()", span="308-308", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBits()", file="TruncatorTests.cs"];
m36_206 [label="sbyte size = 2", span="310-310", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBits()", file="TruncatorTests.cs"];
m36_207 [label="Assert.Equal(ByteSize.FromBits(size), size.Bits())", span="311-311", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBits()", file="TruncatorTests.cs"];
m36_208 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBits()", span="308-308", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBits()", file="TruncatorTests.cs"];
m36_39 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesTerabytes(double, string, string)", span="63-63", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesTerabytes(double, string, string)", file="TruncatorTests.cs"];
m36_40 [label="Assert.Equal(expectedValue, input.Terabytes().Humanize(format))", span="65-65", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesTerabytes(double, string, string)", file="TruncatorTests.cs"];
m36_41 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesTerabytes(double, string, string)", span="63-63", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesTerabytes(double, string, string)", file="TruncatorTests.cs"];
m36_136 [label="Entry short.Kilobytes()", span="175-175", cluster="short.Kilobytes()", file="TruncatorTests.cs"];
m36_224 [label="Entry int.Bits()", span="55-55", cluster="int.Bits()", file="TruncatorTests.cs"];
m36_92 [label="Entry sbyte.Megabytes()", span="235-235", cluster="sbyte.Megabytes()", file="TruncatorTests.cs"];
m36_0 [label="Entry Humanizer.Tests.TruncatorTests.Truncate(string, int, string)", span="14-14", cluster="Humanizer.Tests.TruncatorTests.Truncate(string, int, string)", file="TruncatorTests.cs"];
m36_1 [label="Assert.Equal(expectedOutput, input.Truncate(length))", span="16-16", cluster="Humanizer.Tests.TruncatorTests.Truncate(string, int, string)", file="TruncatorTests.cs"];
m36_2 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteTerabytes()", span="11-11", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteTerabytes()", file="TruncatorTests.cs"];
m36_171 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBytes()", span="257-257", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBytes()", file="TruncatorTests.cs"];
m36_172 [label="short size = 2", span="259-259", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBytes()", file="TruncatorTests.cs"];
m36_173 [label="Assert.Equal(ByteSize.FromBytes(size), size.Bytes())", span="260-260", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBytes()", file="TruncatorTests.cs"];
m36_174 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBytes()", span="257-257", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBytes()", file="TruncatorTests.cs"];
m36_15 [label="short size = 2", span="27-27", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortTerabytes()", file="TruncatorTests.cs"];
m36_16 [label="Assert.Equal(ByteSize.FromTerabytes(size), size.Terabytes())", span="28-28", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortTerabytes()", file="TruncatorTests.cs"];
m36_17 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortTerabytes()", span="25-25", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortTerabytes()", file="TruncatorTests.cs"];
m36_7 [label="Exit Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncator(string, int, string)", span="26-26", cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncator(string, int, string)", file="TruncatorTests.cs"];
m36_38 [label="Entry double.Terabytes()", span="425-425", cluster="double.Terabytes()", file="TruncatorTests.cs"];
m36_5 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteTerabytes()", span="11-11", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteTerabytes()", file="TruncatorTests.cs"];
m36_6 [label="Entry Humanizer.Bytes.ByteSize.FromTerabytes(double)", span="140-140", cluster="Humanizer.Bytes.ByteSize.FromTerabytes(double)", file="TruncatorTests.cs"];
m36_175 [label="Entry short.Bytes()", span="105-105", cluster="short.Bytes()", file="TruncatorTests.cs"];
m36_219 [label="Entry ushort.Bits()", span="45-45", cluster="ushort.Bits()", file="TruncatorTests.cs"];
m36_164 [label="Entry Humanizer.Bytes.ByteSize.FromBytes(double)", span="120-120", cluster="Humanizer.Bytes.ByteSize.FromBytes(double)", file="TruncatorTests.cs"];
m36_147 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintKilobytes()", span="220-220", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintKilobytes()", file="TruncatorTests.cs"];
m36_148 [label="uint size = 2", span="222-222", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintKilobytes()", file="TruncatorTests.cs"];
m36_149 [label="Assert.Equal(ByteSize.FromKilobytes(size), size.Kilobytes())", span="223-223", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintKilobytes()", file="TruncatorTests.cs"];
m36_150 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintKilobytes()", span="220-220", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintKilobytes()", file="TruncatorTests.cs"];
m36_113 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleMegabytes()", span="169-169", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleMegabytes()", file="TruncatorTests.cs"];
m36_114 [label="double size = 2", span="171-171", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleMegabytes()", color=green, community=0, file="TruncatorTests.cs"];
m36_115 [label="Assert.Equal(ByteSize.FromMegabytes(size), size.Megabytes())", span="172-172", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleMegabytes()", color=green, community=0, file="TruncatorTests.cs"];
m36_116 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleMegabytes()", span="169-169", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleMegabytes()", file="TruncatorTests.cs"];
m36_235 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBits(long, string, string)", span="353-353", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBits(long, string, string)", file="TruncatorTests.cs"];
m36_236 [label="Assert.Equal(expectedValue, input.Bits().Humanize(format))", span="355-355", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBits(long, string, string)", file="TruncatorTests.cs"];
m36_237 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBits(long, string, string)", span="353-353", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBits(long, string, string)", file="TruncatorTests.cs"];
m36_181 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBytes()", span="271-271", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBytes()", file="TruncatorTests.cs"];
m36_182 [label="int size = 2", span="273-273", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBytes()", file="TruncatorTests.cs"];
m36_183 [label="Assert.Equal(ByteSize.FromBytes(size), size.Bytes())", span="274-274", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBytes()", file="TruncatorTests.cs"];
m36_184 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBytes()", span="271-271", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBytes()", file="TruncatorTests.cs"];
m36_23 [label="Entry ushort.Terabytes()", span="395-395", cluster="ushort.Terabytes()", file="TruncatorTests.cs"];
m36_24 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntTerabytes()", span="39-39", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntTerabytes()", file="TruncatorTests.cs"];
m36_25 [label="int size = 2", span="41-41", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntTerabytes()", file="TruncatorTests.cs"];
m36_42 [label="Entry Humanizer.Bytes.ByteSize.Humanize(string)", span="436-436", cluster="Humanizer.Bytes.ByteSize.Humanize(string)", file="TruncatorTests.cs"];
m36_214 [label="Entry short.Bits()", span="35-35", cluster="short.Bits()", file="TruncatorTests.cs"];
m36_43 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteGigabytes()", span="69-69", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteGigabytes()", file="TruncatorTests.cs"];
m36_44 [label="byte size = 2", span="71-71", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteGigabytes()", file="TruncatorTests.cs"];
m36_45 [label="Assert.Equal(ByteSize.FromGigabytes(size), size.Gigabytes())", span="72-72", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteGigabytes()", file="TruncatorTests.cs"];
m36_46 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteGigabytes()", span="69-69", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteGigabytes()", file="TruncatorTests.cs"];
m36_141 [label="Entry ushort.Kilobytes()", span="185-185", cluster="ushort.Kilobytes()", file="TruncatorTests.cs"];
m36_98 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortMegabytes()", span="148-148", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortMegabytes()", file="TruncatorTests.cs"];
m36_99 [label="ushort size = 2", span="150-150", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortMegabytes()", color=green, community=0, file="TruncatorTests.cs"];
m36_100 [label="Assert.Equal(ByteSize.FromMegabytes(size), size.Megabytes())", span="151-151", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortMegabytes()", color=green, community=0, file="TruncatorTests.cs"];
m36_101 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortMegabytes()", span="148-148", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortMegabytes()", file="TruncatorTests.cs"];
m36_152 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleKilobytes()", span="227-227", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleKilobytes()", file="TruncatorTests.cs"];
m36_153 [label="double size = 2", span="229-229", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleKilobytes()", file="TruncatorTests.cs"];
m36_154 [label="Assert.Equal(ByteSize.FromKilobytes(size), size.Kilobytes())", span="230-230", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleKilobytes()", file="TruncatorTests.cs"];
m36_155 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleKilobytes()", span="227-227", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleKilobytes()", file="TruncatorTests.cs"];
m36_34 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleTerabytes()", span="53-53", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleTerabytes()", file="TruncatorTests.cs"];
m36_35 [label="double size = 2", span="55-55", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleTerabytes()", file="TruncatorTests.cs"];
m36_36 [label="Assert.Equal(ByteSize.FromTerabytes(size), size.Terabytes())", span="56-56", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleTerabytes()", file="TruncatorTests.cs"];
m36_37 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleTerabytes()", span="53-53", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleTerabytes()", file="TruncatorTests.cs"];
m36_108 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintMegabytes()", span="162-162", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintMegabytes()", file="TruncatorTests.cs"];
m36_109 [label="uint size = 2", span="164-164", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintMegabytes()", color=green, community=0, file="TruncatorTests.cs"];
m36_110 [label="Assert.Equal(ByteSize.FromMegabytes(size), size.Megabytes())", span="165-165", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintMegabytes()", color=green, community=0, file="TruncatorTests.cs"];
m36_111 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintMegabytes()", span="162-162", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintMegabytes()", file="TruncatorTests.cs"];
m36_117 [label="Entry double.Megabytes()", span="285-285", cluster="double.Megabytes()", file="TruncatorTests.cs"];
m36_64 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntGigabytes()", span="97-97", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntGigabytes()", file="TruncatorTests.cs"];
m36_65 [label="int size = 2", span="99-99", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntGigabytes()", file="TruncatorTests.cs"];
m36_66 [label="Assert.Equal(ByteSize.FromGigabytes(size), size.Gigabytes())", span="100-100", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntGigabytes()", file="TruncatorTests.cs"];
m36_67 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntGigabytes()", span="97-97", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntGigabytes()", file="TruncatorTests.cs"];
m36_26 [label="Entry Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)", span="110-110", cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)", file="TruncatorTests.cs"];
m36_27 [label="Assert.Equal(expectedOutput, input.Truncate(length, truncationString, Truncator.FixedNumberOfWords))", span="112-112", cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)", file="TruncatorTests.cs"];
m36_87 [label="Entry byte.Megabytes()", span="225-225", cluster="byte.Megabytes()", file="TruncatorTests.cs"];
m36_191 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleBytes()", span="285-285", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleBytes()", file="TruncatorTests.cs"];
m36_192 [label="double size = 2", span="287-287", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleBytes()", file="TruncatorTests.cs"];
m36_193 [label="Assert.Equal(ByteSize.FromBytes(size), size.Bytes())", span="288-288", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleBytes()", file="TruncatorTests.cs"];
m36_194 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleBytes()", span="285-285", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleBytes()", file="TruncatorTests.cs"];
m36_8 [label="Entry string.Truncate(int, Humanizer.ITruncator)", span="27-27", cluster="string.Truncate(int, Humanizer.ITruncator)", file="TruncatorTests.cs"];
m36_4 [label="Assert.Equal(ByteSize.FromTerabytes(size), size.Terabytes())", span="14-14", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteTerabytes()", file="TruncatorTests.cs"];
m36_180 [label="Entry ushort.Bytes()", span="115-115", cluster="ushort.Bytes()", file="TruncatorTests.cs"];
m36_107 [label="Entry int.Megabytes()", span="265-265", cluster="int.Megabytes()", file="TruncatorTests.cs"];
m36_86 [label="Entry Humanizer.Bytes.ByteSize.FromMegabytes(double)", span="130-130", cluster="Humanizer.Bytes.ByteSize.FromMegabytes(double)", file="TruncatorTests.cs"];
m36_166 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBytes()", span="250-250", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBytes()", file="TruncatorTests.cs"];
m36_167 [label="sbyte size = 2", span="252-252", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBytes()", file="TruncatorTests.cs"];
m36_168 [label="Assert.Equal(ByteSize.FromBytes(size), size.Bytes())", span="253-253", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBytes()", file="TruncatorTests.cs"];
m36_169 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBytes()", span="250-250", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBytes()", file="TruncatorTests.cs"];
m36_157 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesKilobytes(double, string, string)", span="237-237", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesKilobytes(double, string, string)", file="TruncatorTests.cs"];
m36_158 [label="Assert.Equal(expectedValue, input.Kilobytes().Humanize(format))", span="239-239", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesKilobytes(double, string, string)", file="TruncatorTests.cs"];
m36_159 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesKilobytes(double, string, string)", span="237-237", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesKilobytes(double, string, string)", file="TruncatorTests.cs"];
m36_82 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteMegabytes()", span="127-127", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteMegabytes()", file="TruncatorTests.cs"];
m36_83 [label="byte size = 2", span="129-129", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteMegabytes()", color=green, community=0, file="TruncatorTests.cs"];
m36_84 [label="Assert.Equal(ByteSize.FromMegabytes(size), size.Megabytes())", span="130-130", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteMegabytes()", color=green, community=0, file="TruncatorTests.cs"];
m36_85 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteMegabytes()", span="127-127", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteMegabytes()", file="TruncatorTests.cs"];
m36_186 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBytes()", span="278-278", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBytes()", file="TruncatorTests.cs"];
m36_187 [label="uint size = 2", span="280-280", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBytes()", file="TruncatorTests.cs"];
m36_188 [label="Assert.Equal(ByteSize.FromBytes(size), size.Bytes())", span="281-281", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBytes()", file="TruncatorTests.cs"];
m36_189 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBytes()", span="278-278", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBytes()", file="TruncatorTests.cs"];
m36_215 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBits()", span="322-322", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBits()", file="TruncatorTests.cs"];
m36_216 [label="ushort size = 2", span="324-324", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBits()", file="TruncatorTests.cs"];
m36_217 [label="Assert.Equal(ByteSize.FromBits(size), size.Bits())", span="325-325", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBits()", file="TruncatorTests.cs"];
m36_218 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBits()", span="322-322", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBits()", file="TruncatorTests.cs"];
m36_165 [label="Entry byte.Bytes()", span="85-85", cluster="byte.Bytes()", file="TruncatorTests.cs"];
m36_121 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteKilobytes()", span="185-185", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteKilobytes()", file="TruncatorTests.cs"];
m36_122 [label="byte size = 2", span="187-187", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteKilobytes()", color=green, community=0, file="TruncatorTests.cs"];
m36_123 [label="Assert.Equal(ByteSize.FromKilobytes(size), size.Kilobytes())", span="188-188", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteKilobytes()", color=green, community=0, file="TruncatorTests.cs"];
m36_124 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteKilobytes()", span="185-185", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteKilobytes()", file="TruncatorTests.cs"];
m36_127 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteKilobytes()", span="192-192", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteKilobytes()", file="TruncatorTests.cs"];
m36_128 [label="sbyte size = 2", span="194-194", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteKilobytes()", color=green, community=0, file="TruncatorTests.cs"];
m36_129 [label="Assert.Equal(ByteSize.FromKilobytes(size), size.Kilobytes())", span="195-195", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteKilobytes()", color=green, community=0, file="TruncatorTests.cs"];
m36_130 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteKilobytes()", span="192-192", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteKilobytes()", file="TruncatorTests.cs"];
m36_230 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongBits()", span="343-343", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongBits()", file="TruncatorTests.cs"];
m36_232 [label="Assert.Equal(ByteSize.FromBits(size), size.Bits())", span="346-346", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongBits()", file="TruncatorTests.cs"];
m36_231 [label="long size = 2", span="345-345", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongBits()", file="TruncatorTests.cs"];
m36_233 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongBits()", span="343-343", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongBits()", file="TruncatorTests.cs"];
m36_49 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteGigabytes()", span="76-76", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteGigabytes()", file="TruncatorTests.cs"];
m36_50 [label="sbyte size = 2", span="78-78", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteGigabytes()", file="TruncatorTests.cs"];
m36_51 [label="Assert.Equal(ByteSize.FromGigabytes(size), size.Gigabytes())", span="79-79", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteGigabytes()", file="TruncatorTests.cs"];
m36_52 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteGigabytes()", span="76-76", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteGigabytes()", file="TruncatorTests.cs"];
m36_103 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntMegabytes()", span="155-155", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntMegabytes()", file="TruncatorTests.cs"];
m36_104 [label="int size = 2", span="157-157", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntMegabytes()", color=green, community=0, file="TruncatorTests.cs"];
m36_105 [label="Assert.Equal(ByteSize.FromMegabytes(size), size.Megabytes())", span="158-158", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntMegabytes()", color=green, community=0, file="TruncatorTests.cs"];
m36_106 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntMegabytes()", span="155-155", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntMegabytes()", file="TruncatorTests.cs"];
m36_131 [label="Entry sbyte.Kilobytes()", span="165-165", cluster="sbyte.Kilobytes()", file="TruncatorTests.cs"];
m36_137 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortKilobytes()", span="206-206", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortKilobytes()", file="TruncatorTests.cs"];
m36_138 [label="ushort size = 2", span="208-208", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortKilobytes()", file="TruncatorTests.cs"];
m36_139 [label="Assert.Equal(ByteSize.FromKilobytes(size), size.Kilobytes())", span="209-209", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortKilobytes()", file="TruncatorTests.cs"];
m36_140 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortKilobytes()", span="206-206", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortKilobytes()", file="TruncatorTests.cs"];
m36_220 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBits()", span="329-329", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBits()", file="TruncatorTests.cs"];
m36_221 [label="int size = 2", span="331-331", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBits()", file="TruncatorTests.cs"];
m36_222 [label="Assert.Equal(ByteSize.FromBits(size), size.Bits())", span="332-332", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBits()", file="TruncatorTests.cs"];
m36_223 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBits()", span="329-329", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBits()", file="TruncatorTests.cs"];
m36_54 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortGigabytes()", span="83-83", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortGigabytes()", file="TruncatorTests.cs"];
m36_55 [label="short size = 2", span="85-85", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortGigabytes()", file="TruncatorTests.cs"];
m36_56 [label="Assert.Equal(ByteSize.FromGigabytes(size), size.Gigabytes())", span="86-86", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortGigabytes()", file="TruncatorTests.cs"];
m36_57 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortGigabytes()", span="83-83", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortGigabytes()", file="TruncatorTests.cs"];
m36_18 [label="Entry short.Terabytes()", span="385-385", cluster="short.Terabytes()", file="TruncatorTests.cs"];
m36_97 [label="Entry short.Megabytes()", span="245-245", cluster="short.Megabytes()", file="TruncatorTests.cs"];
m36_151 [label="Entry uint.Kilobytes()", span="205-205", cluster="uint.Kilobytes()", file="TruncatorTests.cs"];
m36_59 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortGigabytes()", span="90-90", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortGigabytes()", file="TruncatorTests.cs"];
m36_60 [label="ushort size = 2", span="92-92", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortGigabytes()", file="TruncatorTests.cs"];
m36_61 [label="Assert.Equal(ByteSize.FromGigabytes(size), size.Gigabytes())", span="93-93", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortGigabytes()", file="TruncatorTests.cs"];
m36_62 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortGigabytes()", span="90-90", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortGigabytes()", file="TruncatorTests.cs"];
m36_118 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesMegabytes(double, string, string)", span="179-179", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesMegabytes(double, string, string)", file="TruncatorTests.cs"];
m36_119 [label="Assert.Equal(expectedValue, input.Megabytes().Humanize(format))", span="181-181", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesMegabytes(double, string, string)", color=green, community=0, file="TruncatorTests.cs"];
m36_120 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesMegabytes(double, string, string)", span="179-179", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesMegabytes(double, string, string)", file="TruncatorTests.cs"];
m36_58 [label="Entry short.Gigabytes()", span="315-315", cluster="short.Gigabytes()", file="TruncatorTests.cs"];
m36_234 [label="Entry long.Bits()", span="75-75", cluster="long.Bits()", file="TruncatorTests.cs"];
m36_74 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleGigabytes()", span="111-111", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleGigabytes()", file="TruncatorTests.cs"];
m36_75 [label="double size = 2", span="113-113", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleGigabytes()", color=green, community=0, file="TruncatorTests.cs"];
m36_76 [label="Assert.Equal(ByteSize.FromGigabytes(size), size.Gigabytes())", span="114-114", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleGigabytes()", color=green, community=0, file="TruncatorTests.cs"];
m36_77 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleGigabytes()", span="111-111", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleGigabytes()", file="TruncatorTests.cs"];
m36_199 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBits()", span="301-301", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBits()", file="TruncatorTests.cs"];
m36_200 [label="byte size = 2", span="303-303", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBits()", file="TruncatorTests.cs"];
m36_201 [label="Assert.Equal(ByteSize.FromBits(size), size.Bits())", span="304-304", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBits()", file="TruncatorTests.cs"];
m36_202 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBits()", span="301-301", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBits()", file="TruncatorTests.cs"];
m36_33 [label="Entry uint.Terabytes()", span="415-415", cluster="uint.Terabytes()", file="TruncatorTests.cs"];
m36_170 [label="Entry sbyte.Bytes()", span="95-95", cluster="sbyte.Bytes()", file="TruncatorTests.cs"];
m36_204 [label="Entry byte.Bits()", span="15-15", cluster="byte.Bits()", file="TruncatorTests.cs"];
m36_203 [label="Entry Humanizer.Bytes.ByteSize.FromBits(long)", span="115-115", cluster="Humanizer.Bytes.ByteSize.FromBits(long)", file="TruncatorTests.cs"];
m36_22 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortTerabytes()", span="32-32", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortTerabytes()", file="TruncatorTests.cs"];
m36_73 [label="Entry uint.Gigabytes()", span="345-345", cluster="uint.Gigabytes()", file="TruncatorTests.cs"];
m36_176 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBytes()", span="264-264", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBytes()", file="TruncatorTests.cs"];
m36_177 [label="ushort size = 2", span="266-266", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBytes()", file="TruncatorTests.cs"];
m36_178 [label="Assert.Equal(ByteSize.FromBytes(size), size.Bytes())", span="267-267", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBytes()", file="TruncatorTests.cs"];
m36_179 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBytes()", span="264-264", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBytes()", file="TruncatorTests.cs"];
m36_48 [label="Entry byte.Gigabytes()", span="295-295", cluster="byte.Gigabytes()", file="TruncatorTests.cs"];
m36_142 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntKilobytes()", span="213-213", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntKilobytes()", file="TruncatorTests.cs"];
m36_143 [label="int size = 2", span="215-215", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntKilobytes()", file="TruncatorTests.cs"];
m36_144 [label="Assert.Equal(ByteSize.FromKilobytes(size), size.Kilobytes())", span="216-216", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntKilobytes()", file="TruncatorTests.cs"];
m36_145 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntKilobytes()", span="213-213", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntKilobytes()", file="TruncatorTests.cs"];
m36_9 [label="Entry Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", span="38-38", cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", file="TruncatorTests.cs"];
m36_10 [label="Assert.Equal(expectedOutput, input.Truncate(length, Truncator.FixedNumberOfCharacters))", span="40-40", cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", file="TruncatorTests.cs"];
m36_11 [label="Exit Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", span="38-38", cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", file="TruncatorTests.cs"];
m36_146 [label="Entry int.Kilobytes()", span="195-195", cluster="int.Kilobytes()", file="TruncatorTests.cs"];
m36_68 [label="Entry int.Gigabytes()", span="335-335", cluster="int.Gigabytes()", file="TruncatorTests.cs"];
m36_132 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortKilobytes()", span="199-199", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortKilobytes()", file="TruncatorTests.cs"];
m36_133 [label="short size = 2", span="201-201", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortKilobytes()", file="TruncatorTests.cs"];
m36_134 [label="Assert.Equal(ByteSize.FromKilobytes(size), size.Kilobytes())", span="202-202", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortKilobytes()", file="TruncatorTests.cs"];
m36_135 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortKilobytes()", span="199-199", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortKilobytes()", file="TruncatorTests.cs"];
m36_79 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesGigabytes(double, string, string)", span="121-121", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesGigabytes(double, string, string)", file="TruncatorTests.cs"];
m36_80 [label="Assert.Equal(expectedValue, input.Gigabytes().Humanize(format))", span="123-123", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesGigabytes(double, string, string)", color=green, community=0, file="TruncatorTests.cs"];
m36_81 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesGigabytes(double, string, string)", span="121-121", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesGigabytes(double, string, string)", file="TruncatorTests.cs"];
m36_47 [label="Entry Humanizer.Bytes.ByteSize.FromGigabytes(double)", span="135-135", cluster="Humanizer.Bytes.ByteSize.FromGigabytes(double)", file="TruncatorTests.cs"];
m36_88 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteMegabytes()", span="134-134", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteMegabytes()", file="TruncatorTests.cs"];
m36_89 [label="sbyte size = 2", span="136-136", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteMegabytes()", color=green, community=0, file="TruncatorTests.cs"];
m36_90 [label="Assert.Equal(ByteSize.FromMegabytes(size), size.Megabytes())", span="137-137", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteMegabytes()", color=green, community=0, file="TruncatorTests.cs"];
m36_91 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteMegabytes()", span="134-134", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteMegabytes()", file="TruncatorTests.cs"];
m36_125 [label="Entry Humanizer.Bytes.ByteSize.FromKilobytes(double)", span="125-125", cluster="Humanizer.Bytes.ByteSize.FromKilobytes(double)", file="TruncatorTests.cs"];
m36_112 [label="Entry uint.Megabytes()", span="275-275", cluster="uint.Megabytes()", file="TruncatorTests.cs"];
m36_225 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBits()", span="336-336", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBits()", file="TruncatorTests.cs"];
m36_226 [label="uint size = 2", span="338-338", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBits()", file="TruncatorTests.cs"];
m36_227 [label="Assert.Equal(ByteSize.FromBits(size), size.Bits())", span="339-339", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBits()", file="TruncatorTests.cs"];
m36_228 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBits()", span="336-336", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBits()", file="TruncatorTests.cs"];
m36_29 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintTerabytes()", span="46-46", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintTerabytes()", file="TruncatorTests.cs"];
m36_30 [label="uint size = 2", span="48-48", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintTerabytes()", file="TruncatorTests.cs"];
m36_31 [label="Assert.Equal(ByteSize.FromTerabytes(size), size.Terabytes())", span="49-49", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintTerabytes()", file="TruncatorTests.cs"];
m36_32 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintTerabytes()", span="46-46", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintTerabytes()", file="TruncatorTests.cs"];
m36_160 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBytes()", span="243-243", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBytes()", file="TruncatorTests.cs"];
m36_162 [label="Assert.Equal(ByteSize.FromBytes(size), size.Bytes())", span="246-246", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBytes()", file="TruncatorTests.cs"];
m36_161 [label="byte size = 2", span="245-245", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBytes()", file="TruncatorTests.cs"];
m36_163 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBytes()", span="243-243", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBytes()", file="TruncatorTests.cs"];
m36_28 [label="Exit Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)", span="110-110", cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)", file="TruncatorTests.cs"];
m36_209 [label="Entry sbyte.Bits()", span="25-25", cluster="sbyte.Bits()", file="TruncatorTests.cs"];
m36_210 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBits()", span="315-315", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBits()", file="TruncatorTests.cs"];
m36_211 [label="short size = 2", span="317-317", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBits()", file="TruncatorTests.cs"];
m36_212 [label="Assert.Equal(ByteSize.FromBits(size), size.Bits())", span="318-318", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBits()", file="TruncatorTests.cs"];
m36_213 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBits()", span="315-315", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBits()", file="TruncatorTests.cs"];
m0_23 -> m0_24  [key=0, style=solid];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=2, style=dotted];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_7  [key=2, style=dotted];
m0_6 -> m0_4  [key=0, style=bold, color=blue];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_11  [key=2, style=dotted];
m0_10 -> m0_8  [key=0, style=bold, color=blue];
m0_12 -> m0_13  [key=0, style=solid];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_15  [key=2, style=dotted];
m0_14 -> m0_12  [key=0, style=bold, color=blue];
m0_16 -> m0_17  [key=0, style=solid];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_19  [key=2, style=dotted];
m0_18 -> m0_16  [key=0, style=bold, color=blue];
m0_20 -> m0_21  [key=0, style=solid];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_19  [key=2, style=dotted];
m0_22 -> m0_20  [key=0, style=bold, color=blue];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_19  [key=2, style=dotted];
m0_25 -> m0_23  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [key=0, style=bold, color=blue];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_5  [key=2, style=dotted];
m1_4 -> m1_2  [key=0, style=bold, color=blue];
m1_12 -> m1_13  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_5  [key=2, style=dotted];
m1_14 -> m1_12  [key=0, style=bold, color=blue];
m1_9 -> m1_10  [key=0, style=solid];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_5  [key=2, style=dotted];
m1_11 -> m1_9  [key=0, style=bold, color=blue];
m1_6 -> m1_7  [key=0, style=solid];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_5  [key=2, style=dotted];
m1_8 -> m1_6  [key=0, style=bold, color=blue];
m1_18 -> m1_19  [key=0, style=solid];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_5  [key=2, style=dotted];
m1_20 -> m1_18  [key=0, style=bold, color=blue];
m1_15 -> m1_16  [key=0, style=solid];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_5  [key=2, style=dotted];
m1_17 -> m1_15  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m2_0 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label=tense];
m2_1 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label=tense];
m2_1 -> m2_8  [key=1, style=dashed, color=darkseagreen4, label=tense];
m2_1 -> m2_10  [key=1, style=dashed, color=darkseagreen4, label=tense];
m2_1 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label=tense];
m2_1 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label=tense];
m2_1 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label=tense];
m2_1 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label=tense];
m2_1 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label=tense];
m2_1 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label=tense];
m2_1 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label=tense];
m2_1 -> m2_25  [key=1, style=dashed, color=darkseagreen4, label=tense];
m2_1 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label=tense];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_31  [key=2, style=dotted];
m2_2 -> m2_32  [key=2, style=dotted];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_22  [key=0, style=solid];
m2_20 -> m2_34  [key=2, style=dotted];
m2_4 -> m2_30  [key=0, style=solid];
m2_4 -> m2_33  [key=2, style=dotted];
m2_6 -> m2_30  [key=0, style=solid];
m2_6 -> m2_33  [key=2, style=dotted];
m2_6 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_6 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_8 -> m2_30  [key=0, style=solid];
m2_8 -> m2_33  [key=2, style=dotted];
m2_10 -> m2_30  [key=0, style=solid];
m2_10 -> m2_33  [key=2, style=dotted];
m2_10 -> m2_10  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_10 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_12 -> m2_30  [key=0, style=solid];
m2_12 -> m2_33  [key=2, style=dotted];
m2_14 -> m2_30  [key=0, style=solid];
m2_14 -> m2_33  [key=2, style=dotted];
m2_14 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_14 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_16 -> m2_30  [key=0, style=solid];
m2_16 -> m2_33  [key=2, style=dotted];
m2_18 -> m2_30  [key=0, style=solid];
m2_18 -> m2_33  [key=2, style=dotted];
m2_18 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_18 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_21 -> m2_30  [key=0, style=solid];
m2_21 -> m2_33  [key=2, style=dotted];
m2_22 -> m2_30  [key=0, style=solid];
m2_22 -> m2_33  [key=2, style=dotted];
m2_22 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_22 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_25 -> m2_30  [key=0, style=solid];
m2_25 -> m2_33  [key=2, style=dotted];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_33  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_5  [key=0, style=solid];
m2_3 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_7  [key=0, style=solid];
m2_5 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_9  [key=0, style=solid];
m2_7 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_11  [key=0, style=solid];
m2_9 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_13  [key=0, style=solid];
m2_11 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_15  [key=0, style=solid];
m2_13 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_17  [key=0, style=solid];
m2_15 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_19  [key=0, style=solid];
m2_17 -> m2_17  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_23  [key=0, style=solid];
m2_19 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_19 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_26  [key=0, style=solid];
m2_23 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_35  [key=2, style=dotted];
m2_24 -> m2_36  [key=2, style=dotted];
m2_24 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_24 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_35  [key=2, style=dotted];
m2_26 -> m2_36  [key=2, style=dotted];
m2_26 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_26 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label=years];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_29  [key=0, style=solid];
m2_28 -> m2_29  [key=0, style=solid];
m2_30 -> m2_0  [key=0, style=bold, color=blue];
m3_30 -> m3_19  [key=3, color=darkorchid, style=bold, label="Parameter variable int number"];
m3_30 -> m3_30  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetResourceKey"];
m3_30 -> m3_32  [key=0, style=solid];
m3_32 -> m3_33  [key=0, style=solid];
m3_33 -> m3_30  [key=0, style=bold, color=blue];
m3_4 -> m3_5  [key=0, style=solid, color=green];
m3_4 -> m3_3  [key=3, color=darkorchid, style=bold, label="method methodReturn string DateHumanize"];
m3_5 -> m3_6  [key=0, style=solid, color=green];
m3_5 -> m3_3  [key=2, style=dotted, color=green];
m3_5 -> m3_4  [key=0, style=bold, color=blue];
m3_6 -> m3_4  [key=0, style=bold, color=blue];
m3_6 -> m3_7  [key=0, style=solid];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_0  [key=0, style=bold, color=blue];
m3_3 -> m3_2  [key=0, style=bold, color=blue];
m3_3 -> m3_14  [key=0, style=solid, color=green];
m3_3 -> m3_15  [key=1, style=dashed, color=green, label=int];
m3_3 -> m3_4  [key=3, color=darkorchid, style=bold, label="Parameter variable int count"];
m3_3 -> m3_1  [key=3, color=darkorchid, style=bold, label="Parameter variable int count"];
m3_14 -> m3_15  [key=0, style=solid, color=green];
m3_14 -> m3_17  [key=2, style=dotted, color=green];
m3_15 -> m3_16  [key=0, style=solid, color=green];
m3_15 -> m3_18  [key=2, style=dotted, color=green];
m3_15 -> m3_19  [key=2, style=dotted, color=green];
m3_16 -> m3_3  [key=0, style=bold, color=blue];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_10  [key=3, color=darkorchid, style=bold, label="method methodReturn string TimeSpanHumanize"];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_10  [key=2, style=dotted];
m3_13 -> m3_11  [key=0, style=bold, color=blue];
m3_7 -> m3_6  [key=0, style=bold, color=blue];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_10  [key=3, color=darkorchid, style=bold, label="method methodReturn string TimeSpanHumanize_Zero"];
m3_19 -> m3_14  [key=3, color=green, style=bold, label="Parameter variable string resourceKey"];
m3_19 -> m3_3  [key=3, color=darkorchid, style=bold, label="Parameter variable int number"];
m3_19 -> m3_28  [key=0, style=solid];
m3_19 -> m3_20  [key=3, color=darkorchid, style=bold, label="Parameter variable string resourceKey"];
m3_19 -> m3_10  [key=3, color=darkorchid, style=bold, label="Parameter variable int number"];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_30  [key=2, style=dotted];
m3_28 -> m3_27  [key=2, style=dotted];
m3_28 -> m3_31  [key=2, style=dotted];
m3_29 -> m3_19  [key=0, style=bold, color=blue];
m3_10 -> m3_1  [key=3, color=darkorchid, style=bold, label="Parameter variable int count"];
m3_10 -> m3_21  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_10 -> m3_20  [key=0, style=solid];
m3_10 -> m3_11  [key=3, color=darkorchid, style=bold, label="Parameter variable int count"];
m3_21 -> m3_18  [key=2, style=dotted];
m3_21 -> m3_19  [key=2, style=dotted];
m3_21 -> m3_22  [key=0, style=solid];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_23  [key=2, style=dotted];
m3_22 -> m3_10  [key=0, style=bold, color=blue];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_10  [key=2, style=dotted];
m3_9 -> m3_8  [key=0, style=bold, color=blue];
m3_9 -> m3_7  [key=0, style=bold, color=blue];
m3_18 -> m3_14  [key=3, color=green, style=bold, label="Parameter variable string resourceKey"];
m3_18 -> m3_24  [key=0, style=solid];
m3_18 -> m3_20  [key=3, color=darkorchid, style=bold, label="Parameter variable string resourceKey"];
m3_24 -> m3_26  [key=2, style=dotted];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_27  [key=2, style=dotted];
m3_25 -> m3_18  [key=0, style=bold, color=blue];
m3_26 -> m3_34  [key=0, style=solid, color=green];
m3_26 -> m3_18  [key=3, color=darkorchid, style=bold, label="Parameter variable string resourceKey"];
m3_26 -> m3_26  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetResourceKey"];
m3_34 -> m3_35  [key=0, style=solid, color=green];
m3_35 -> m3_26  [key=0, style=bold, color=blue];
m3_0 -> m3_3  [key=3, color=darkorchid, style=bold, label="method methodReturn string DateHumanize_Now"];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_3  [key=2, style=dotted];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_0  [key=0, style=bold, color=blue];
m3_36 -> m3_5  [key=1, style=dashed, color=green, label="Humanizer.Localisation.Formatters.DefaultFormatter"];
m3_36 -> m3_15  [key=1, style=dashed, color=green, label="Humanizer.Localisation.Formatters.DefaultFormatter"];
m3_36 -> m3_1  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.Formatters.DefaultFormatter"];
m3_36 -> m3_8  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.Formatters.DefaultFormatter"];
m3_36 -> m3_12  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.Formatters.DefaultFormatter"];
m3_36 -> m3_21  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.Formatters.DefaultFormatter"];
m3_36 -> m3_24  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.Formatters.DefaultFormatter"];
m3_36 -> m3_28  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.Formatters.DefaultFormatter"];
m5_11 -> m5_12  [key=0, style=solid];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_14  [key=2, style=dotted];
m5_12 -> m5_6  [key=2, style=dotted];
m5_13 -> m5_11  [key=0, style=bold, color=blue];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_5  [key=2, style=dotted];
m5_3 -> m5_6  [key=2, style=dotted];
m5_4 -> m5_2  [key=0, style=bold, color=blue];
m5_7 -> m5_8  [key=0, style=solid];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_10  [key=2, style=dotted];
m5_8 -> m5_6  [key=2, style=dotted];
m5_9 -> m5_7  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_0  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_0 -> m7_3  [key=3, color=darkorchid, style=bold, label="method methodReturn TTargetEnum DehumanizeTo"];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_3  [key=2, style=dotted];
m7_2 -> m7_0  [key=0, style=bold, color=blue];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_3  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Enum DehumanizeTo"];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_3  [key=2, style=dotted];
m7_6 -> m7_4  [key=0, style=bold, color=blue];
m7_3 -> m7_7  [key=0, style=solid];
m7_3 -> m7_17  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_3 -> m7_8  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.OnNoMatch"];
m7_3 -> m7_9  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_3 -> m7_0  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m7_3 -> m7_4  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type targetEnum"];
m7_3 -> m7_1  [key=3, color=darkorchid, style=bold, label="Parameter variable Humanizer.OnNoMatch onNoMatch"];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_12  [key=2, style=dotted];
m7_7 -> m7_13  [key=2, style=dotted];
m7_7 -> m7_14  [key=2, style=dotted];
m7_7 -> m7_16  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_7 -> m7_10  [key=1, style=dashed, color=darkseagreen4, label=match];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_10  [key=0, style=solid];
m7_9 -> m7_11  [key=0, style=solid];
m7_9 -> m7_15  [key=2, style=dotted];
m7_10 -> m7_11  [key=0, style=solid];
m7_11 -> m7_3  [key=0, style=bold, color=blue];
m7_16 -> m7_17  [key=0, style=solid];
m7_17 -> m7_18  [key=0, style=solid];
m7_17 -> m7_19  [key=2, style=dotted];
m7_17 -> m7_20  [key=2, style=dotted];
m7_18 -> m7_16  [key=0, style=bold, color=blue];
m7_21 -> m7_17  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_0 -> m8_1  [key=0, style=solid, color=green];
m8_1 -> m8_2  [key=0, style=solid, color=green];
m8_1 -> m8_7  [key=2, style=dotted, color=green];
m8_1 -> m8_8  [key=2, style=dotted, color=green];
m8_1 -> m8_1  [key=3, color=green, style=bold, label="Field variable System.Func<System.Reflection.PropertyInfo, bool> DescriptionProperty"];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_9  [key=2, style=dotted];
m8_2 -> m8_8  [key=2, style=dotted];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_10  [key=2, style=dotted];
m8_3 -> m8_8  [key=2, style=dotted];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_11  [key=2, style=dotted];
m8_4 -> m8_8  [key=2, style=dotted];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_12  [key=2, style=dotted];
m8_5 -> m8_8  [key=2, style=dotted];
m8_6 -> m8_0  [key=0, style=bold, color=blue];
m8_13 -> m8_1  [key=1, style=dashed, color=green, label="Humanizer.Configuration.OrdinalizerRegistry"];
m8_13 -> m8_2  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.OrdinalizerRegistry"];
m8_13 -> m8_3  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.OrdinalizerRegistry"];
m8_13 -> m8_4  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.OrdinalizerRegistry"];
m8_13 -> m8_5  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.OrdinalizerRegistry"];
m9_0 -> m9_1  [key=0, style=solid];
m9_0 -> m9_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_0 -> m9_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_0 -> m9_5  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_0 -> m9_6  [key=1, style=dashed, color=green, label=string];
m9_0 -> m9_7  [key=1, style=dashed, color=green, label=string];
m9_0 -> m9_2  [key=3, color=darkorchid, style=bold, label="method methodReturn string Truncate"];
m9_0 -> m9_0  [key=3, color=darkorchid, style=bold, label="method methodReturn string Truncate"];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_3  [key=0, style=solid];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_5  [key=0, style=solid];
m9_4 -> m9_8  [key=0, style=solid];
m9_5 -> m9_6  [key=0, style=solid, color=green];
m9_5 -> m9_7  [key=0, style=solid, color=green];
m9_6 -> m9_8  [key=0, style=solid, color=green];
m9_6 -> m9_9  [key=2, style=dotted, color=green];
m9_7 -> m9_8  [key=0, style=solid, color=green];
m9_7 -> m9_9  [key=2, style=dotted, color=green];
m9_2 -> m9_8  [key=0, style=solid];
m9_8 -> m9_0  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_0 -> m10_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_0 -> m10_5  [key=1, style=dashed, color=darkseagreen4, label=int];
m10_0 -> m10_6  [key=1, style=dashed, color=red, label=string];
m10_0 -> m10_8  [key=1, style=dashed, color=red, label=string];
m10_0 -> m10_10  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_0 -> m10_11  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_0 -> m10_13  [key=1, style=dashed, color=red, label=int];
m10_0 -> m10_14  [key=1, style=dashed, color=red, label=string];
m10_0 -> m10_15  [key=1, style=dashed, color=red, label=int];
m10_0 -> m10_16  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_0 -> m10_18  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_0 -> m10_2  [key=3, color=darkorchid, style=bold, label="method methodReturn string Truncate"];
m10_0 -> m10_0  [key=3, color=darkorchid, style=bold, label="method methodReturn string Truncate"];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_3  [key=0, style=solid];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_5  [key=0, style=solid];
m10_4 -> m10_19  [key=0, style=solid];
m10_5 -> m10_6  [key=0, style=solid, color=red];
m10_5 -> m10_7  [key=0, style=solid];
m10_6 -> m10_19  [key=0, style=solid, color=red];
m10_6 -> m10_20  [key=2, style=dotted, color=red];
m10_8 -> m10_9  [key=0, style=solid, color=red];
m10_8 -> m10_21  [key=2, style=dotted, color=red];
m10_8 -> m10_22  [key=2, style=dotted, color=red];
m10_8 -> m10_13  [key=1, style=dashed, color=red, label=numberOfCharactersEqualToTruncateLength];
m10_8 -> m10_15  [key=1, style=dashed, color=red, label=numberOfCharactersEqualToTruncateLength];
m10_10 -> m10_11  [key=0, style=solid];
m10_10 -> m10_18  [key=0, style=solid];
m10_10 -> m10_7  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m10_11 -> m10_12  [key=0, style=solid];
m10_11 -> m10_13  [key=0, style=solid, color=red];
m10_11 -> m10_23  [key=2, style=dotted];
m10_13 -> m10_14  [key=0, style=solid, color=red];
m10_13 -> m10_15  [key=0, style=solid, color=red];
m10_14 -> m10_19  [key=0, style=solid, color=red];
m10_15 -> m10_16  [key=0, style=solid, color=red];
m10_15 -> m10_17  [key=0, style=solid, color=red];
m10_16 -> m10_19  [key=0, style=solid];
m10_16 -> m10_20  [key=2, style=dotted];
m10_18 -> m10_19  [key=0, style=solid];
m10_2 -> m10_19  [key=0, style=solid];
m10_7 -> m10_8  [key=0, style=solid, color=red];
m10_7 -> m10_12  [key=1, style=dashed, color=darkseagreen4, label=alphaNumericalCharactersProcessed];
m10_7 -> m10_13  [key=1, style=dashed, color=red, label=alphaNumericalCharactersProcessed];
m10_7 -> m10_15  [key=1, style=dashed, color=red, label=alphaNumericalCharactersProcessed];
m10_7 -> m10_7  [key=3, color=darkorchid, style=bold, label="Local variable int alphaNumericalCharactersProcessed"];
m10_12 -> m10_13  [key=0, style=solid, color=red];
m10_12 -> m10_12  [key=1, style=dashed, color=darkseagreen4, label=alphaNumericalCharactersProcessed];
m10_12 -> m10_15  [key=1, style=dashed, color=red, label=alphaNumericalCharactersProcessed];
m10_9 -> m10_10  [key=0, style=solid];
m10_9 -> m10_11  [key=1, style=dashed, color=darkseagreen4, label=i];
m10_9 -> m10_16  [key=1, style=dashed, color=darkseagreen4, label=i];
m10_9 -> m10_17  [key=1, style=dashed, color=darkseagreen4, label=i];
m10_17 -> m10_10  [key=0, style=solid];
m10_17 -> m10_17  [key=1, style=dashed, color=darkseagreen4, label=i];
m10_19 -> m10_0  [key=0, style=bold, color=blue];
m11_6 -> m11_7  [key=0, style=solid];
m11_6 -> m11_22  [key=2, style=dotted];
m11_6 -> m11_23  [key=2, style=dotted];
m11_13 -> m11_14  [key=0, style=solid, color=green];
m11_13 -> m11_15  [key=0, style=solid, color=green];
m11_7 -> m11_8  [key=0, style=solid, color=green];
m11_7 -> m11_9  [key=0, style=solid, color=green];
m11_8 -> m11_9  [key=0, style=solid];
m11_8 -> m11_12  [key=2, style=dotted];
m11_8 -> m11_10  [key=1, style=dashed, color=darkseagreen4, label=expected];
m11_8 -> m11_21  [key=0, style=solid, color=green];
m11_9 -> m11_10  [key=0, style=solid, color=green];
m11_9 -> m11_13  [key=2, style=dotted];
m11_9 -> m11_14  [key=2, style=dotted];
m11_9 -> m11_5  [key=2, style=dotted];
m11_9 -> m11_9  [key=3, color=green, style=bold, label="Local variable bool lastCharactersWasWhiteSpace"];
m11_10 -> m11_11  [key=0, style=solid];
m11_10 -> m11_6  [key=2, style=dotted];
m11_10 -> m11_12  [key=1, style=dashed, color=green, label=i];
m11_10 -> m11_17  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_10 -> m11_19  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_11 -> m11_7  [key=0, style=bold, color=blue];
m11_11 -> m11_12  [key=0, style=solid, color=green];
m11_11 -> m11_20  [key=0, style=solid];
m11_11 -> m11_5  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m11_5 -> m11_14  [key=1, style=dashed, color=darkseagreen4, label=numberOfWordsProcessed];
m11_5 -> m11_6  [key=0, style=solid];
m11_5 -> m11_16  [key=1, style=dashed, color=darkseagreen4, label=numberOfWordsProcessed];
m11_5 -> m11_5  [key=3, color=darkorchid, style=bold, label="Local variable int numberOfWordsProcessed"];
m11_0 -> m11_1  [key=0, style=solid, color=red];
m11_0 -> m11_8  [key=1, style=dashed, color=green, label=string];
m11_0 -> m11_12  [key=1, style=dashed, color=green, label=string];
m11_0 -> m11_0  [key=3, color=darkorchid, style=bold, label="method methodReturn string Truncate"];
m11_0 -> m11_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_0 -> m11_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_0 -> m11_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_0 -> m11_7  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_0 -> m11_11  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_0 -> m11_16  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_0 -> m11_17  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_0 -> m11_20  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_0 -> m11_2  [key=3, color=darkorchid, style=bold, label="method methodReturn string Truncate"];
m11_1 -> m11_2  [key=0, style=solid, color=red];
m11_1 -> m11_3  [key=1, style=dashed, color=red, label=expected];
m11_2 -> m11_3  [key=0, style=solid, color=red];
m11_2 -> m11_5  [key=2, style=dotted, color=red];
m11_2 -> m11_21  [key=0, style=solid];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_6  [key=2, style=dotted];
m11_3 -> m11_5  [key=0, style=solid];
m11_4 -> m11_0  [key=0, style=bold, color=blue];
m11_4 -> m11_21  [key=0, style=solid];
m11_12 -> m11_13  [key=0, style=solid, color=green];
m11_12 -> m11_18  [key=0, style=solid, color=green];
m11_12 -> m11_24  [key=2, style=dotted, color=green];
m11_18 -> m11_19  [key=0, style=solid];
m11_14 -> m11_14  [key=1, style=dashed, color=darkseagreen4, label=numberOfWordsProcessed];
m11_14 -> m11_15  [key=0, style=solid];
m11_14 -> m11_16  [key=1, style=dashed, color=darkseagreen4, label=numberOfWordsProcessed];
m11_15 -> m11_16  [key=0, style=solid];
m11_16 -> m11_17  [key=0, style=solid];
m11_16 -> m11_19  [key=0, style=solid];
m11_17 -> m11_21  [key=0, style=solid];
m11_17 -> m11_25  [key=2, style=dotted];
m11_20 -> m11_21  [key=0, style=solid];
m11_19 -> m11_11  [key=0, style=solid];
m11_19 -> m11_19  [key=1, style=dashed, color=darkseagreen4, label=i];
m11_21 -> m11_0  [key=0, style=bold, color=blue];
m12_69 -> m12_70  [key=0, style=solid];
m12_71 -> m12_47  [key=2, style=dotted];
m12_71 -> m12_8  [key=2, style=dotted];
m12_71 -> m12_72  [key=0, style=solid];
m12_71 -> m12_73  [key=2, style=dotted];
m12_70 -> m12_71  [key=0, style=solid];
m12_72 -> m12_69  [key=0, style=bold, color=blue];
m12_93 -> m12_94  [key=0, style=solid];
m12_95 -> m12_8  [key=2, style=dotted];
m12_95 -> m12_96  [key=0, style=solid];
m12_95 -> m12_86  [key=2, style=dotted];
m12_95 -> m12_97  [key=2, style=dotted];
m12_94 -> m12_95  [key=0, style=solid];
m12_96 -> m12_93  [key=0, style=bold, color=blue];
m12_196 -> m12_197  [key=0, style=solid];
m12_197 -> m12_8  [key=2, style=dotted];
m12_197 -> m12_198  [key=0, style=solid];
m12_197 -> m12_195  [key=2, style=dotted];
m12_197 -> m12_42  [key=2, style=dotted];
m12_198 -> m12_196  [key=0, style=bold, color=blue];
m12_39 -> m12_40  [key=0, style=solid];
m12_40 -> m12_8  [key=2, style=dotted];
m12_40 -> m12_41  [key=0, style=solid];
m12_40 -> m12_38  [key=2, style=dotted];
m12_40 -> m12_42  [key=2, style=dotted];
m12_41 -> m12_39  [key=0, style=bold, color=blue];
m12_205 -> m12_206  [key=0, style=solid];
m12_207 -> m12_8  [key=2, style=dotted];
m12_207 -> m12_208  [key=0, style=solid];
m12_207 -> m12_203  [key=2, style=dotted];
m12_207 -> m12_209  [key=2, style=dotted];
m12_206 -> m12_207  [key=0, style=solid];
m12_208 -> m12_205  [key=0, style=bold, color=blue];
m12_171 -> m12_172  [key=0, style=solid];
m12_173 -> m12_8  [key=2, style=dotted];
m12_173 -> m12_174  [key=0, style=solid];
m12_173 -> m12_164  [key=2, style=dotted];
m12_173 -> m12_175  [key=2, style=dotted];
m12_172 -> m12_173  [key=0, style=solid];
m12_174 -> m12_171  [key=0, style=bold, color=blue];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_3  [key=2, style=dotted];
m12_2 -> m12_0  [key=0, style=bold, color=blue];
m12_2 -> m12_3  [key=0, style=solid];
m12_147 -> m12_148  [key=0, style=solid];
m12_149 -> m12_8  [key=2, style=dotted];
m12_149 -> m12_150  [key=0, style=solid];
m12_149 -> m12_125  [key=2, style=dotted];
m12_149 -> m12_151  [key=2, style=dotted];
m12_148 -> m12_149  [key=0, style=solid];
m12_150 -> m12_147  [key=0, style=bold, color=blue];
m12_113 -> m12_114  [key=0, style=solid];
m12_115 -> m12_8  [key=2, style=dotted];
m12_115 -> m12_116  [key=0, style=solid];
m12_115 -> m12_86  [key=2, style=dotted];
m12_115 -> m12_117  [key=2, style=dotted];
m12_114 -> m12_115  [key=0, style=solid];
m12_116 -> m12_113  [key=0, style=bold, color=blue];
m12_235 -> m12_236  [key=0, style=solid];
m12_236 -> m12_8  [key=2, style=dotted];
m12_236 -> m12_237  [key=0, style=solid];
m12_236 -> m12_234  [key=2, style=dotted];
m12_236 -> m12_42  [key=2, style=dotted];
m12_237 -> m12_235  [key=0, style=bold, color=blue];
m12_181 -> m12_182  [key=0, style=solid];
m12_183 -> m12_8  [key=2, style=dotted];
m12_183 -> m12_184  [key=0, style=solid];
m12_183 -> m12_164  [key=2, style=dotted];
m12_183 -> m12_185  [key=2, style=dotted];
m12_182 -> m12_183  [key=0, style=solid];
m12_184 -> m12_181  [key=0, style=bold, color=blue];
m12_43 -> m12_44  [key=0, style=solid];
m12_45 -> m12_47  [key=2, style=dotted];
m12_45 -> m12_8  [key=2, style=dotted];
m12_45 -> m12_46  [key=0, style=solid];
m12_45 -> m12_48  [key=2, style=dotted];
m12_44 -> m12_45  [key=0, style=solid];
m12_46 -> m12_43  [key=0, style=bold, color=blue];
m12_98 -> m12_99  [key=0, style=solid];
m12_100 -> m12_8  [key=2, style=dotted];
m12_100 -> m12_101  [key=0, style=solid];
m12_100 -> m12_86  [key=2, style=dotted];
m12_100 -> m12_102  [key=2, style=dotted];
m12_99 -> m12_100  [key=0, style=solid];
m12_101 -> m12_98  [key=0, style=bold, color=blue];
m12_152 -> m12_153  [key=0, style=solid];
m12_154 -> m12_8  [key=2, style=dotted];
m12_154 -> m12_155  [key=0, style=solid];
m12_154 -> m12_125  [key=2, style=dotted];
m12_154 -> m12_156  [key=2, style=dotted];
m12_153 -> m12_154  [key=0, style=solid];
m12_155 -> m12_152  [key=0, style=bold, color=blue];
m12_34 -> m12_35  [key=0, style=solid];
m12_36 -> m12_8  [key=2, style=dotted];
m12_36 -> m12_37  [key=0, style=solid];
m12_36 -> m12_6  [key=2, style=dotted];
m12_36 -> m12_38  [key=2, style=dotted];
m12_35 -> m12_36  [key=0, style=solid];
m12_37 -> m12_34  [key=0, style=bold, color=blue];
m12_108 -> m12_109  [key=0, style=solid];
m12_110 -> m12_8  [key=2, style=dotted];
m12_110 -> m12_111  [key=0, style=solid];
m12_110 -> m12_86  [key=2, style=dotted];
m12_110 -> m12_112  [key=2, style=dotted];
m12_109 -> m12_110  [key=0, style=solid];
m12_111 -> m12_108  [key=0, style=bold, color=blue];
m12_64 -> m12_65  [key=0, style=solid, color=green];
m12_65 -> m12_66  [key=0, style=solid, color=green];
m12_66 -> m12_47  [key=2, style=dotted];
m12_66 -> m12_8  [key=2, style=dotted];
m12_66 -> m12_67  [key=0, style=solid];
m12_66 -> m12_68  [key=2, style=dotted];
m12_67 -> m12_64  [key=0, style=bold, color=blue];
m12_24 -> m12_25  [key=0, style=solid];
m12_26 -> m12_8  [key=2, style=dotted];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_6  [key=2, style=dotted];
m12_26 -> m12_28  [key=2, style=dotted];
m12_25 -> m12_26  [key=0, style=solid];
m12_27 -> m12_24  [key=0, style=bold, color=blue];
m12_191 -> m12_192  [key=0, style=solid];
m12_193 -> m12_8  [key=2, style=dotted];
m12_193 -> m12_194  [key=0, style=solid];
m12_193 -> m12_164  [key=2, style=dotted];
m12_193 -> m12_195  [key=2, style=dotted];
m12_192 -> m12_193  [key=0, style=solid];
m12_194 -> m12_191  [key=0, style=bold, color=blue];
m12_166 -> m12_167  [key=0, style=solid];
m12_168 -> m12_8  [key=2, style=dotted];
m12_168 -> m12_169  [key=0, style=solid];
m12_168 -> m12_164  [key=2, style=dotted];
m12_168 -> m12_170  [key=2, style=dotted];
m12_167 -> m12_168  [key=0, style=solid];
m12_169 -> m12_166  [key=0, style=bold, color=blue];
m12_157 -> m12_158  [key=0, style=solid];
m12_158 -> m12_8  [key=2, style=dotted];
m12_158 -> m12_159  [key=0, style=solid];
m12_158 -> m12_156  [key=2, style=dotted];
m12_158 -> m12_42  [key=2, style=dotted];
m12_159 -> m12_157  [key=0, style=bold, color=blue];
m12_82 -> m12_83  [key=0, style=solid];
m12_84 -> m12_8  [key=2, style=dotted];
m12_84 -> m12_85  [key=0, style=solid];
m12_84 -> m12_86  [key=2, style=dotted];
m12_84 -> m12_87  [key=2, style=dotted];
m12_83 -> m12_84  [key=0, style=solid];
m12_85 -> m12_82  [key=0, style=bold, color=blue];
m12_186 -> m12_187  [key=0, style=solid];
m12_188 -> m12_8  [key=2, style=dotted];
m12_188 -> m12_189  [key=0, style=solid];
m12_188 -> m12_164  [key=2, style=dotted];
m12_188 -> m12_190  [key=2, style=dotted];
m12_187 -> m12_188  [key=0, style=solid];
m12_189 -> m12_186  [key=0, style=bold, color=blue];
m12_215 -> m12_216  [key=0, style=solid];
m12_217 -> m12_8  [key=2, style=dotted];
m12_217 -> m12_218  [key=0, style=solid];
m12_217 -> m12_203  [key=2, style=dotted];
m12_217 -> m12_219  [key=2, style=dotted];
m12_216 -> m12_217  [key=0, style=solid];
m12_218 -> m12_215  [key=0, style=bold, color=blue];
m12_121 -> m12_122  [key=0, style=solid];
m12_123 -> m12_8  [key=2, style=dotted];
m12_123 -> m12_124  [key=0, style=solid];
m12_123 -> m12_125  [key=2, style=dotted];
m12_123 -> m12_126  [key=2, style=dotted];
m12_122 -> m12_123  [key=0, style=solid];
m12_124 -> m12_121  [key=0, style=bold, color=blue];
m12_127 -> m12_128  [key=0, style=solid];
m12_129 -> m12_8  [key=2, style=dotted];
m12_129 -> m12_130  [key=0, style=solid];
m12_129 -> m12_125  [key=2, style=dotted];
m12_129 -> m12_131  [key=2, style=dotted];
m12_128 -> m12_129  [key=0, style=solid];
m12_130 -> m12_127  [key=0, style=bold, color=blue];
m12_230 -> m12_231  [key=0, style=solid];
m12_232 -> m12_8  [key=2, style=dotted];
m12_232 -> m12_233  [key=0, style=solid];
m12_232 -> m12_203  [key=2, style=dotted];
m12_232 -> m12_234  [key=2, style=dotted];
m12_231 -> m12_232  [key=0, style=solid];
m12_233 -> m12_230  [key=0, style=bold, color=blue];
m12_49 -> m12_50  [key=0, style=solid];
m12_51 -> m12_47  [key=2, style=dotted];
m12_51 -> m12_8  [key=2, style=dotted];
m12_51 -> m12_52  [key=0, style=solid];
m12_51 -> m12_53  [key=2, style=dotted];
m12_50 -> m12_51  [key=0, style=solid];
m12_52 -> m12_49  [key=0, style=bold, color=blue];
m12_103 -> m12_104  [key=0, style=solid];
m12_105 -> m12_8  [key=2, style=dotted];
m12_105 -> m12_106  [key=0, style=solid];
m12_105 -> m12_86  [key=2, style=dotted];
m12_105 -> m12_107  [key=2, style=dotted];
m12_104 -> m12_105  [key=0, style=solid];
m12_106 -> m12_103  [key=0, style=bold, color=blue];
m12_137 -> m12_138  [key=0, style=solid];
m12_139 -> m12_8  [key=2, style=dotted];
m12_139 -> m12_140  [key=0, style=solid];
m12_139 -> m12_125  [key=2, style=dotted];
m12_139 -> m12_141  [key=2, style=dotted];
m12_138 -> m12_139  [key=0, style=solid];
m12_140 -> m12_137  [key=0, style=bold, color=blue];
m12_220 -> m12_221  [key=0, style=solid];
m12_222 -> m12_8  [key=2, style=dotted];
m12_222 -> m12_223  [key=0, style=solid];
m12_222 -> m12_203  [key=2, style=dotted];
m12_222 -> m12_224  [key=2, style=dotted];
m12_221 -> m12_222  [key=0, style=solid];
m12_223 -> m12_220  [key=0, style=bold, color=blue];
m12_54 -> m12_55  [key=0, style=solid];
m12_56 -> m12_47  [key=2, style=dotted];
m12_56 -> m12_8  [key=2, style=dotted];
m12_56 -> m12_57  [key=0, style=solid];
m12_56 -> m12_58  [key=2, style=dotted];
m12_55 -> m12_56  [key=0, style=solid];
m12_57 -> m12_54  [key=0, style=bold, color=blue];
m12_59 -> m12_60  [key=0, style=solid, color=green];
m12_60 -> m12_61  [key=0, style=solid, color=green];
m12_61 -> m12_62  [key=0, style=solid, color=green];
m12_61 -> m12_47  [key=2, style=dotted, color=green];
m12_61 -> m12_63  [key=2, style=dotted, color=green];
m12_61 -> m12_8  [key=2, style=dotted, color=green];
m12_62 -> m12_59  [key=0, style=bold, color=blue];
m12_118 -> m12_119  [key=0, style=solid];
m12_119 -> m12_8  [key=2, style=dotted];
m12_119 -> m12_120  [key=0, style=solid];
m12_119 -> m12_117  [key=2, style=dotted];
m12_119 -> m12_42  [key=2, style=dotted];
m12_120 -> m12_118  [key=0, style=bold, color=blue];
m12_74 -> m12_75  [key=0, style=solid];
m12_76 -> m12_47  [key=2, style=dotted];
m12_76 -> m12_8  [key=2, style=dotted];
m12_76 -> m12_77  [key=0, style=solid];
m12_76 -> m12_78  [key=2, style=dotted];
m12_75 -> m12_76  [key=0, style=solid];
m12_77 -> m12_74  [key=0, style=bold, color=blue];
m12_199 -> m12_200  [key=0, style=solid];
m12_201 -> m12_8  [key=2, style=dotted];
m12_201 -> m12_202  [key=0, style=solid];
m12_201 -> m12_203  [key=2, style=dotted];
m12_201 -> m12_204  [key=2, style=dotted];
m12_200 -> m12_201  [key=0, style=solid];
m12_202 -> m12_199  [key=0, style=bold, color=blue];
m12_14 -> m12_15  [key=0, style=solid];
m12_16 -> m12_8  [key=2, style=dotted];
m12_16 -> m12_17  [key=0, style=solid];
m12_16 -> m12_6  [key=2, style=dotted];
m12_16 -> m12_18  [key=2, style=dotted];
m12_15 -> m12_16  [key=0, style=solid];
m12_17 -> m12_14  [key=0, style=bold, color=blue];
m12_3 -> m12_4  [key=0, style=solid];
m12_4 -> m12_8  [key=2, style=dotted];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_6  [key=2, style=dotted];
m12_4 -> m12_7  [key=2, style=dotted];
m12_5 -> m12_2  [key=0, style=bold, color=blue];
m12_176 -> m12_177  [key=0, style=solid];
m12_178 -> m12_8  [key=2, style=dotted];
m12_178 -> m12_179  [key=0, style=solid];
m12_178 -> m12_164  [key=2, style=dotted];
m12_178 -> m12_180  [key=2, style=dotted];
m12_177 -> m12_178  [key=0, style=solid];
m12_179 -> m12_176  [key=0, style=bold, color=blue];
m12_142 -> m12_143  [key=0, style=solid];
m12_144 -> m12_8  [key=2, style=dotted];
m12_144 -> m12_145  [key=0, style=solid];
m12_144 -> m12_125  [key=2, style=dotted];
m12_144 -> m12_146  [key=2, style=dotted];
m12_143 -> m12_144  [key=0, style=solid];
m12_145 -> m12_142  [key=0, style=bold, color=blue];
m12_9 -> m12_10  [key=0, style=solid];
m12_11 -> m12_8  [key=2, style=dotted];
m12_11 -> m12_12  [key=0, style=solid];
m12_11 -> m12_6  [key=2, style=dotted];
m12_11 -> m12_13  [key=2, style=dotted];
m12_10 -> m12_11  [key=0, style=solid];
m12_12 -> m12_9  [key=0, style=bold, color=blue];
m12_19 -> m12_20  [key=0, style=solid];
m12_21 -> m12_8  [key=2, style=dotted];
m12_21 -> m12_22  [key=0, style=solid];
m12_21 -> m12_6  [key=2, style=dotted];
m12_21 -> m12_23  [key=2, style=dotted];
m12_20 -> m12_21  [key=0, style=solid];
m12_22 -> m12_19  [key=0, style=bold, color=blue];
m12_132 -> m12_133  [key=0, style=solid];
m12_134 -> m12_8  [key=2, style=dotted];
m12_134 -> m12_135  [key=0, style=solid];
m12_134 -> m12_125  [key=2, style=dotted];
m12_134 -> m12_136  [key=2, style=dotted];
m12_133 -> m12_134  [key=0, style=solid];
m12_135 -> m12_132  [key=0, style=bold, color=blue];
m12_79 -> m12_80  [key=0, style=solid];
m12_80 -> m12_8  [key=2, style=dotted];
m12_80 -> m12_81  [key=0, style=solid];
m12_80 -> m12_78  [key=2, style=dotted];
m12_80 -> m12_42  [key=2, style=dotted];
m12_81 -> m12_79  [key=0, style=bold, color=blue];
m12_88 -> m12_89  [key=0, style=solid];
m12_90 -> m12_8  [key=2, style=dotted];
m12_90 -> m12_91  [key=0, style=solid];
m12_90 -> m12_86  [key=2, style=dotted];
m12_90 -> m12_92  [key=2, style=dotted];
m12_89 -> m12_90  [key=0, style=solid];
m12_91 -> m12_88  [key=0, style=bold, color=blue];
m12_225 -> m12_226  [key=0, style=solid];
m12_227 -> m12_8  [key=2, style=dotted];
m12_227 -> m12_228  [key=0, style=solid];
m12_227 -> m12_203  [key=2, style=dotted];
m12_227 -> m12_229  [key=2, style=dotted];
m12_226 -> m12_227  [key=0, style=solid];
m12_228 -> m12_225  [key=0, style=bold, color=blue];
m12_29 -> m12_30  [key=0, style=solid];
m12_31 -> m12_8  [key=2, style=dotted];
m12_31 -> m12_32  [key=0, style=solid];
m12_31 -> m12_6  [key=2, style=dotted];
m12_31 -> m12_33  [key=2, style=dotted];
m12_30 -> m12_31  [key=0, style=solid];
m12_32 -> m12_29  [key=0, style=bold, color=blue];
m12_160 -> m12_161  [key=0, style=solid];
m12_162 -> m12_8  [key=2, style=dotted];
m12_162 -> m12_163  [key=0, style=solid];
m12_162 -> m12_164  [key=2, style=dotted];
m12_162 -> m12_165  [key=2, style=dotted];
m12_161 -> m12_162  [key=0, style=solid];
m12_163 -> m12_160  [key=0, style=bold, color=blue];
m12_210 -> m12_211  [key=0, style=solid];
m12_212 -> m12_8  [key=2, style=dotted];
m12_212 -> m12_213  [key=0, style=solid];
m12_212 -> m12_203  [key=2, style=dotted];
m12_212 -> m12_214  [key=2, style=dotted];
m12_211 -> m12_212  [key=0, style=solid];
m12_213 -> m12_210  [key=0, style=bold, color=blue];
m13_2 -> m13_3  [key=0, style=solid];
m13_3 -> m13_2  [key=0, style=bold, color=blue];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_0  [key=0, style=bold, color=blue];
m13_6 -> m13_7  [key=0, style=solid];
m13_7 -> m13_6  [key=0, style=bold, color=blue];
m13_4 -> m13_5  [key=0, style=solid];
m13_5 -> m13_4  [key=0, style=bold, color=blue];
m14_4 -> m14_17  [key=0, style=solid];
m14_4 -> m14_18  [key=0, style=bold, color=crimson];
m14_4 -> m14_22  [key=0, style=bold, color=crimson];
m14_4 -> m14_23  [key=0, style=bold, color=crimson];
m14_4 -> m14_24  [key=0, style=bold, color=crimson];
m14_4 -> m14_26  [key=0, style=bold, color=crimson];
m14_4 -> m14_19  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m14_4 -> m14_20  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m14_4 -> m14_25  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m14_17 -> m14_18  [key=0, style=solid];
m14_17 -> m14_19  [key=0, style=solid];
m14_17 -> m14_28  [key=2, style=dotted];
m14_18 -> m14_19  [key=0, style=solid];
m14_22 -> m14_23  [key=0, style=solid];
m14_22 -> m14_34  [key=2, style=dotted];
m14_22 -> m14_35  [key=2, style=dotted];
m14_23 -> m14_24  [key=0, style=solid];
m14_24 -> m14_25  [key=0, style=solid];
m14_24 -> m14_36  [key=2, style=dotted];
m14_24 -> m14_37  [key=2, style=dotted];
m14_24 -> m14_38  [key=2, style=dotted];
m14_24 -> m14_39  [key=2, style=dotted];
m14_24 -> m14_35  [key=2, style=dotted];
m14_24 -> m14_32  [key=2, style=dotted];
m14_24 -> m14_44  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_26 -> m14_25  [key=0, style=solid];
m14_19 -> m14_20  [key=0, style=solid];
m14_19 -> m14_29  [key=2, style=dotted];
m14_19 -> m14_22  [key=1, style=dashed, color=darkseagreen4, label=pt];
m14_19 -> m14_24  [key=1, style=dashed, color=darkseagreen4, label=pt];
m14_19 -> m14_45  [key=1, style=dashed, color=darkseagreen4, label=pt];
m14_20 -> m14_21  [key=0, style=solid];
m14_20 -> m14_30  [key=2, style=dotted];
m14_20 -> m14_31  [key=2, style=dotted];
m14_20 -> m14_32  [key=2, style=dotted];
m14_20 -> m14_33  [key=2, style=dotted];
m14_20 -> m14_41  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_20 -> m14_24  [key=1, style=dashed, color=darkseagreen4, label=taken];
m14_20 -> m14_25  [key=1, style=dashed, color=darkseagreen4, label=taken];
m14_25 -> m14_26  [key=0, style=solid];
m14_25 -> m14_27  [key=0, style=solid];
m14_25 -> m14_40  [key=2, style=dotted];
m14_25 -> m14_31  [key=2, style=dotted];
m14_25 -> m14_4  [key=2, style=dotted];
m14_21 -> m14_22  [key=0, style=solid];
m14_21 -> m14_24  [key=0, style=solid];
m14_21 -> m14_28  [key=2, style=dotted];
m14_27 -> m14_4  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_4  [key=2, style=dotted];
m14_2 -> m14_3  [key=0, style=solid];
m14_2 -> m14_5  [key=2, style=dotted];
m14_2 -> m14_6  [key=2, style=dotted];
m14_2 -> m14_7  [key=2, style=dotted];
m14_2 -> m14_8  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_2 -> m14_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_2 -> m14_14  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_3 -> m14_0  [key=0, style=bold, color=blue];
m14_34 -> m14_49  [key=0, style=solid];
m14_49 -> m14_50  [key=0, style=solid];
m14_49 -> m14_51  [key=2, style=dotted];
m14_49 -> m14_52  [key=2, style=dotted];
m14_49 -> m14_39  [key=2, style=dotted];
m14_49 -> m14_48  [key=2, style=dotted];
m14_50 -> m14_34  [key=0, style=bold, color=blue];
m14_44 -> m14_45  [key=0, style=solid];
m14_8 -> m14_9  [key=0, style=solid];
m14_11 -> m14_12  [key=0, style=solid];
m14_14 -> m14_15  [key=0, style=solid];
m14_9 -> m14_10  [key=0, style=solid];
m14_10 -> m14_8  [key=0, style=bold, color=blue];
m14_12 -> m14_13  [key=0, style=solid];
m14_13 -> m14_11  [key=0, style=bold, color=blue];
m14_15 -> m14_16  [key=0, style=solid];
m14_16 -> m14_14  [key=0, style=bold, color=blue];
m14_45 -> m14_46  [key=0, style=solid];
m14_45 -> m14_39  [key=2, style=dotted];
m14_45 -> m14_47  [key=2, style=dotted];
m14_45 -> m14_48  [key=2, style=dotted];
m14_45 -> m14_35  [key=2, style=dotted];
m14_41 -> m14_42  [key=0, style=solid];
m14_42 -> m14_43  [key=0, style=solid];
m14_43 -> m14_41  [key=0, style=bold, color=blue];
m14_46 -> m14_44  [key=0, style=bold, color=blue];
m14_53 -> m14_45  [key=1, style=dashed, color=darkseagreen4, label=pt];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_0  [key=0, style=bold, color=blue];
m15_2 -> m15_3  [key=0, style=solid];
m15_3 -> m15_2  [key=0, style=bold, color=blue];
m15_4 -> m15_5  [key=0, style=solid];
m15_5 -> m15_4  [key=0, style=bold, color=blue];
m17_5 -> m17_6  [key=0, style=solid, color=red];
m17_5 -> m17_4  [key=3, color=darkorchid, style=bold, label="method methodReturn string Ordinalize"];
m17_6 -> m17_7  [key=0, style=solid, color=red];
m17_6 -> m17_8  [key=2, style=dotted, color=red];
m17_6 -> m17_4  [key=2, style=dotted, color=red];
m17_7 -> m17_5  [key=0, style=bold, color=blue];
m17_4 -> m17_9  [key=0, style=solid, color=green];
m17_4 -> m17_11  [key=1, style=dashed, color=green, label=string];
m17_4 -> m17_12  [key=1, style=dashed, color=green, label=int];
m17_4 -> m17_14  [key=1, style=dashed, color=green, label=string];
m17_4 -> m17_16  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_4 -> m17_18  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_4 -> m17_19  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_4 -> m17_0  [key=3, color=darkorchid, style=bold, label="Parameter variable string numberString"];
m17_4 -> m17_5  [key=3, color=darkorchid, style=bold, label="Parameter variable int number"];
m17_9 -> m17_10  [key=0, style=solid, color=green];
m17_11 -> m17_20  [key=0, style=solid, color=green];
m17_12 -> m17_13  [key=0, style=solid, color=green];
m17_12 -> m17_15  [key=0, style=solid, color=green];
m17_12 -> m17_17  [key=0, style=solid, color=green];
m17_12 -> m17_19  [key=0, style=solid, color=green];
m17_14 -> m17_20  [key=0, style=solid, color=green];
m17_16 -> m17_20  [key=0, style=solid, color=red];
m17_18 -> m17_20  [key=0, style=solid, color=red];
m17_19 -> m17_20  [key=0, style=solid, color=red];
m17_10 -> m17_11  [key=0, style=solid, color=green];
m17_10 -> m17_12  [key=0, style=solid, color=green];
m17_13 -> m17_14  [key=0, style=solid, color=green];
m17_15 -> m17_16  [key=0, style=solid, color=red];
m17_17 -> m17_18  [key=0, style=solid, color=red];
m17_20 -> m17_4  [key=0, style=bold, color=blue];
m17_0 -> m17_1  [key=0, style=solid, color=green];
m17_0 -> m17_4  [key=3, color=darkorchid, style=bold, label="method methodReturn string Ordinalize"];
m17_1 -> m17_2  [key=0, style=solid, color=green];
m17_1 -> m17_3  [key=2, style=dotted, color=green];
m17_1 -> m17_4  [key=2, style=dotted, color=green];
m17_2 -> m17_0  [key=0, style=bold, color=blue];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_2  [key=0, style=solid];
m18_1 -> m18_3  [key=2, style=dotted];
m18_1 -> m18_4  [key=2, style=dotted];
m18_2 -> m18_0  [key=0, style=bold, color=blue];
m18_5 -> m18_6  [key=0, style=solid];
m18_6 -> m18_7  [key=0, style=solid];
m18_6 -> m18_8  [key=2, style=dotted];
m18_6 -> m18_4  [key=2, style=dotted];
m18_7 -> m18_5  [key=0, style=bold, color=blue];
m19_18 -> m19_0  [key=0, style=bold, color=blue];
m19_0 -> m19_1  [key=0, style=solid, color=red];
m19_0 -> m19_9  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_0 -> m19_13  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_0 -> m19_4  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_0 -> m19_56  [key=3, color=darkorchid, style=bold, label="Parameter variable int number"];
m19_0 -> m19_8  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_0 -> m19_14  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_0 -> m19_16  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_0 -> m19_55  [key=3, color=darkorchid, style=bold, label="Parameter variable Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral numeral"];
m19_2 -> m19_18  [key=0, style=solid, color=green];
m19_2 -> m19_3  [key=0, style=solid, color=red];
m19_2 -> m19_19  [key=2, style=dotted, color=red];
m19_1 -> m19_2  [key=0, style=solid, color=red];
m19_1 -> m19_3  [key=0, style=solid];
m19_1 -> m19_17  [key=2, style=dotted, color=red];
m19_1 -> m19_18  [key=2, style=dotted, color=red];
m19_12 -> m19_13  [key=0, style=solid, color=red];
m19_12 -> m19_20  [key=2, style=dotted, color=green];
m19_12 -> m19_27  [key=2, style=dotted, color=red];
m19_12 -> m19_18  [key=2, style=dotted, color=red];
m19_9 -> m19_12  [key=1, style=dashed, color=green, label=tens];
m19_9 -> m19_10  [key=0, style=solid, color=red];
m19_9 -> m19_26  [key=2, style=dotted, color=red];
m19_9 -> m19_18  [key=2, style=dotted, color=red];
m19_3 -> m19_12  [key=1, style=dashed, color=green, label=result];
m19_3 -> m19_4  [key=0, style=solid, color=red];
m19_3 -> m19_19  [key=2, style=dotted];
m19_3 -> m19_7  [key=1, style=dashed, color=darkseagreen4, label=result];
m19_3 -> m19_16  [key=1, style=dashed, color=darkseagreen4, label=result];
m19_3 -> m19_17  [key=1, style=dashed, color=darkseagreen4, label=result];
m19_3 -> m19_20  [key=2, style=dotted, color=red];
m19_3 -> m19_18  [key=2, style=dotted, color=red];
m19_11 -> m19_12  [key=0, style=solid, color=red];
m19_11 -> m19_22  [key=2, style=dotted];
m19_11 -> m19_43  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_13 -> m19_13  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_13 -> m19_14  [key=0, style=solid, color=red];
m19_13 -> m19_16  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_13 -> m19_28  [key=2, style=dotted];
m19_13 -> m19_18  [key=2, style=dotted];
m19_5 -> m19_6  [key=0, style=solid, color=red];
m19_5 -> m19_9  [key=0, style=solid, color=green];
m19_5 -> m19_22  [key=2, style=dotted, color=red];
m19_5 -> m19_35  [key=1, style=dashed, color=red, label="lambda expression"];
m19_4 -> m19_5  [key=0, style=solid, color=red];
m19_4 -> m19_7  [key=1, style=dashed, color=darkseagreen4, label=hundreds];
m19_4 -> m19_21  [key=2, style=dotted, color=red];
m19_4 -> m19_18  [key=2, style=dotted, color=red];
m19_6 -> m19_7  [key=0, style=solid, color=red];
m19_6 -> m19_23  [key=2, style=dotted, color=red];
m19_6 -> m19_18  [key=2, style=dotted, color=red];
m19_17 -> m19_18  [key=0, style=solid];
m19_17 -> m19_21  [key=2, style=dotted];
m19_8 -> m19_9  [key=0, style=solid, color=red];
m19_8 -> m19_13  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_8 -> m19_8  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_8 -> m19_14  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_8 -> m19_16  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_8 -> m19_25  [key=2, style=dotted, color=red];
m19_8 -> m19_18  [key=2, style=dotted, color=red];
m19_10 -> m19_11  [key=0, style=solid, color=red];
m19_10 -> m19_14  [key=0, style=solid];
m19_10 -> m19_22  [key=2, style=dotted, color=red];
m19_10 -> m19_39  [key=1, style=dashed, color=red, label="lambda expression"];
m19_7 -> m19_20  [key=2, style=dotted];
m19_7 -> m19_8  [key=0, style=solid, color=red];
m19_7 -> m19_24  [key=2, style=dotted, color=red];
m19_7 -> m19_18  [key=2, style=dotted, color=red];
m19_16 -> m19_20  [key=2, style=dotted];
m19_16 -> m19_17  [key=0, style=solid];
m19_16 -> m19_0  [key=0, style=bold, color=blue];
m19_14 -> m19_17  [key=0, style=solid];
m19_14 -> m19_15  [key=0, style=solid, color=red];
m19_14 -> m19_29  [key=2, style=dotted, color=red];
m19_14 -> m19_18  [key=2, style=dotted, color=red];
m19_15 -> m19_16  [key=0, style=solid, color=red];
m19_15 -> m19_30  [key=2, style=dotted, color=red];
m19_15 -> m19_18  [key=2, style=dotted, color=red];
m19_25 -> m19_27  [key=0, style=solid, color=green];
m19_25 -> m19_26  [key=0, style=solid];
m19_27 -> m19_28  [key=0, style=solid, color=green];
m19_29 -> m19_30  [key=0, style=solid, color=green];
m19_26 -> m19_33  [key=0, style=solid];
m19_30 -> m19_32  [key=0, style=solid, color=green];
m19_30 -> m19_31  [key=0, style=solid, color=green];
m19_23 -> m19_24  [key=0, style=solid, color=green];
m19_23 -> m19_25  [key=0, style=solid];
m19_38 -> m19_46  [key=0, style=solid, color=green];
m19_38 -> m19_22  [key=2, style=dotted, color=green];
m19_28 -> m19_29  [key=0, style=solid, color=green];
m19_28 -> m19_32  [key=0, style=solid, color=green];
m19_31 -> m19_32  [key=0, style=solid];
m19_31 -> m19_33  [key=0, style=solid, color=green];
m19_35 -> m19_36  [key=0, style=solid, color=green];
m19_35 -> m19_39  [key=0, style=solid, color=green];
m19_35 -> m19_42  [key=0, style=solid, color=green];
m19_35 -> m19_45  [key=0, style=solid, color=green];
m19_39 -> m19_40  [key=0, style=solid, color=green];
m19_43 -> m19_44  [key=0, style=solid, color=green];
m19_32 -> m19_33  [key=0, style=solid, color=green];
m19_32 -> m19_34  [key=2, style=dotted];
m19_33 -> m19_31  [key=0, style=bold, color=blue];
m19_33 -> m19_22  [key=0, style=bold, color=blue];
m19_36 -> m19_37  [key=0, style=solid, color=green];
m19_36 -> m19_38  [key=2, style=dotted, color=red];
m19_37 -> m19_35  [key=0, style=bold, color=blue];
m19_37 -> m19_38  [key=0, style=solid, color=green];
m19_40 -> m19_41  [key=0, style=solid, color=green];
m19_40 -> m19_42  [key=2, style=dotted, color=red];
m19_41 -> m19_39  [key=0, style=bold, color=blue];
m19_41 -> m19_46  [key=0, style=solid, color=green];
m19_41 -> m19_22  [key=2, style=dotted, color=green];
m19_44 -> m19_45  [key=0, style=solid];
m19_44 -> m19_46  [key=2, style=dotted];
m19_44 -> m19_22  [key=2, style=dotted];
m19_45 -> m19_43  [key=0, style=bold, color=blue];
m19_45 -> m19_46  [key=0, style=solid, color=green];
m19_34 -> m19_38  [key=1, style=dashed, color=green, label=int];
m19_34 -> m19_41  [key=1, style=dashed, color=green, label=int];
m19_34 -> m19_35  [key=0, style=solid];
m19_34 -> m19_44  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_34 -> m19_55  [key=3, color=darkorchid, style=bold, label="Parameter variable Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral numeral"];
m19_34 -> m19_56  [key=3, color=darkorchid, style=bold, label="Parameter variable int num"];
m19_22 -> m19_27  [key=1, style=dashed, color=green, label=int];
m19_22 -> m19_29  [key=1, style=dashed, color=green, label=int];
m19_22 -> m19_24  [key=3, color=green, style=bold, label="method methodReturn int GetMappingIndex"];
m19_22 -> m19_32  [key=3, color=green, style=bold, label="method methodReturn int GetMappingIndex"];
m19_22 -> m19_23  [key=0, style=solid];
m19_22 -> m19_25  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_22 -> m19_26  [key=3, color=darkorchid, style=bold, label="method methodReturn int GetMappingIndex"];
m19_22 -> m19_34  [key=3, color=darkorchid, style=bold, label="Parameter variable int number"];
m19_24 -> m19_33  [key=0, style=solid, color=green];
m19_42 -> m19_43  [key=0, style=solid, color=green];
m19_46 -> m19_34  [key=0, style=bold, color=blue];
m19_47 -> m19_48  [key=0, style=solid, color=green];
m19_47 -> m19_51  [key=1, style=dashed, color=green, label=int];
m19_47 -> m19_53  [key=1, style=dashed, color=green, label=int];
m19_47 -> m19_56  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_47 -> m19_59  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_47 -> m19_1  [key=1, style=dashed, color=red, label="Humanizer.Configuration.NumberToWordsConverterRegistry"];
m19_47 -> m19_2  [key=1, style=dashed, color=red, label="Humanizer.Configuration.NumberToWordsConverterRegistry"];
m19_47 -> m19_3  [key=1, style=dashed, color=red, label="Humanizer.Configuration.NumberToWordsConverterRegistry"];
m19_47 -> m19_4  [key=1, style=dashed, color=red, label="Humanizer.Configuration.NumberToWordsConverterRegistry"];
m19_47 -> m19_5  [key=1, style=dashed, color=red, label="Humanizer.Configuration.NumberToWordsConverterRegistry"];
m19_47 -> m19_6  [key=1, style=dashed, color=red, label="Humanizer.Configuration.NumberToWordsConverterRegistry"];
m19_47 -> m19_7  [key=1, style=dashed, color=red, label="Humanizer.Configuration.NumberToWordsConverterRegistry"];
m19_47 -> m19_8  [key=1, style=dashed, color=red, label="Humanizer.Configuration.NumberToWordsConverterRegistry"];
m19_47 -> m19_9  [key=1, style=dashed, color=red, label="Humanizer.Configuration.NumberToWordsConverterRegistry"];
m19_47 -> m19_10  [key=1, style=dashed, color=red, label="Humanizer.Configuration.NumberToWordsConverterRegistry"];
m19_47 -> m19_11  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.NumberToWordsConverterRegistry"];
m19_47 -> m19_12  [key=1, style=dashed, color=red, label="Humanizer.Configuration.NumberToWordsConverterRegistry"];
m19_47 -> m19_13  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.NumberToWordsConverterRegistry"];
m19_47 -> m19_14  [key=1, style=dashed, color=red, label="Humanizer.Configuration.NumberToWordsConverterRegistry"];
m19_47 -> m19_15  [key=1, style=dashed, color=red, label="Humanizer.Configuration.NumberToWordsConverterRegistry"];
m19_48 -> m19_49  [key=0, style=solid, color=green];
m19_48 -> m19_50  [key=0, style=solid, color=green];
m19_49 -> m19_61  [key=0, style=solid, color=green];
m19_50 -> m19_51  [key=0, style=solid, color=green];
m19_50 -> m19_19  [key=2, style=dotted, color=green];
m19_50 -> m19_52  [key=1, style=dashed, color=green, label=result];
m19_50 -> m19_58  [key=1, style=dashed, color=green, label=result];
m19_50 -> m19_60  [key=1, style=dashed, color=green, label=result];
m19_51 -> m19_52  [key=0, style=solid, color=green];
m19_51 -> m19_54  [key=0, style=solid, color=green];
m19_52 -> m19_53  [key=0, style=solid, color=green];
m19_52 -> m19_20  [key=2, style=dotted, color=green];
m19_54 -> m19_55  [key=0, style=solid];
m19_54 -> m19_63  [key=2, style=dotted];
m19_54 -> m19_64  [key=2, style=dotted];
m19_53 -> m19_53  [key=1, style=dashed, color=green, label=int];
m19_53 -> m19_54  [key=0, style=solid, color=green];
m19_53 -> m19_62  [key=2, style=dotted, color=green];
m19_53 -> m19_56  [key=1, style=dashed, color=green, label=int];
m19_53 -> m19_59  [key=1, style=dashed, color=green, label=int];
m19_56 -> m19_57  [key=0, style=solid];
m19_56 -> m19_58  [key=1, style=dashed, color=darkseagreen4, label=num];
m19_59 -> m19_59  [key=1, style=dashed, color=darkseagreen4, label=int];
m19_59 -> m19_55  [key=0, style=solid];
m19_58 -> m19_34  [key=2, style=dotted];
m19_58 -> m19_59  [key=0, style=solid];
m19_58 -> m19_0  [key=2, style=dotted];
m19_58 -> m19_65  [key=2, style=dotted];
m19_60 -> m19_61  [key=0, style=solid];
m19_60 -> m19_21  [key=2, style=dotted];
m19_60 -> m19_66  [key=2, style=dotted];
m19_55 -> m19_56  [key=0, style=solid];
m19_55 -> m19_59  [key=1, style=dashed, color=darkseagreen4, label=numeral];
m19_55 -> m19_58  [key=1, style=dashed, color=darkseagreen4, label=numeral];
m19_55 -> m19_60  [key=0, style=solid];
m19_57 -> m19_58  [key=0, style=solid];
m19_57 -> m19_55  [key=0, style=solid];
m19_61 -> m19_47  [key=0, style=bold, color=blue];
m20_16 -> m20_13  [key=0, style=bold, color=blue];
m20_22 -> m20_20  [key=0, style=bold, color=blue];
m20_32 -> m20_37  [key=0, style=solid];
m20_32 -> m20_17  [key=2, style=dotted];
m20_8 -> m20_9  [key=0, style=solid];
m20_8 -> m20_16  [key=2, style=dotted];
m20_8 -> m20_17  [key=2, style=dotted];
m20_8 -> m20_15  [key=2, style=dotted];
m20_8 -> m20_18  [key=2, style=dotted];
m20_8 -> m20_19  [key=2, style=dotted];
m20_8 -> m20_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_8 -> m20_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_18 -> m20_19  [key=0, style=solid];
m20_18 -> m20_20  [key=1, style=dashed, color=darkseagreen4, label=string];
m20_19 -> m20_7  [key=2, style=dotted];
m20_19 -> m20_20  [key=0, style=solid];
m20_19 -> m20_22  [key=2, style=dotted];
m20_20 -> m20_8  [key=2, style=dotted];
m20_20 -> m20_21  [key=0, style=solid];
m20_21 -> m20_18  [key=0, style=bold, color=blue];
m20_21 -> m20_22  [key=0, style=solid];
m20_21 -> m20_4  [key=2, style=dotted];
m20_0 -> m20_1  [key=0, style=solid];
m20_1 -> m20_2  [key=0, style=solid];
m20_1 -> m20_3  [key=2, style=dotted];
m20_1 -> m20_4  [key=2, style=dotted];
m20_1 -> m20_5  [key=2, style=dotted];
m20_2 -> m20_0  [key=0, style=bold, color=blue];
m20_2 -> m20_3  [key=0, style=solid];
m20_2 -> m20_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m20_40 -> m20_48  [key=0, style=solid];
m20_40 -> m20_49  [key=1, style=dashed, color=darkseagreen4, label=string];
m20_40 -> m20_52  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m20_48 -> m20_49  [key=0, style=solid];
m20_49 -> m20_50  [key=0, style=solid];
m20_49 -> m20_52  [key=0, style=solid];
m20_49 -> m20_56  [key=2, style=dotted];
m20_49 -> m20_53  [key=1, style=dashed, color=darkseagreen4, label=parsedValue];
m20_52 -> m20_53  [key=0, style=solid];
m20_52 -> m20_54  [key=0, style=solid];
m20_52 -> m20_58  [key=2, style=dotted];
m20_50 -> m20_51  [key=0, style=solid];
m20_53 -> m20_55  [key=0, style=solid];
m20_51 -> m20_55  [key=0, style=solid];
m20_51 -> m20_57  [key=2, style=dotted];
m20_54 -> m20_55  [key=0, style=solid];
m20_54 -> m20_57  [key=2, style=dotted];
m20_55 -> m20_40  [key=0, style=bold, color=blue];
m20_12 -> m20_9  [key=0, style=bold, color=blue];
m20_33 -> m20_34  [key=0, style=solid];
m20_35 -> m20_7  [key=2, style=dotted];
m20_35 -> m20_36  [key=0, style=solid];
m20_36 -> m20_8  [key=2, style=dotted];
m20_36 -> m20_37  [key=0, style=solid];
m20_36 -> m20_17  [key=2, style=dotted];
m20_34 -> m20_35  [key=0, style=solid];
m20_34 -> m20_37  [key=0, style=solid];
m20_34 -> m20_17  [key=2, style=dotted];
m20_37 -> m20_33  [key=0, style=bold, color=blue];
m20_37 -> m20_4  [key=0, style=bold, color=blue];
m20_28 -> m20_29  [key=0, style=solid];
m20_28 -> m20_30  [key=1, style=dashed, color=darkseagreen4, label=string];
m20_29 -> m20_7  [key=2, style=dotted];
m20_29 -> m20_30  [key=0, style=solid];
m20_29 -> m20_32  [key=2, style=dotted];
m20_29 -> m20_27  [key=0, style=bold, color=blue];
m20_30 -> m20_8  [key=2, style=dotted];
m20_30 -> m20_31  [key=0, style=solid];
m20_30 -> m20_37  [key=0, style=solid];
m20_30 -> m20_38  [key=2, style=dotted];
m20_30 -> m20_39  [key=2, style=dotted];
m20_30 -> m20_40  [key=2, style=dotted];
m20_30 -> m20_41  [key=2, style=dotted];
m20_30 -> m20_42  [key=2, style=dotted];
m20_31 -> m20_28  [key=0, style=bold, color=blue];
m20_31 -> m20_32  [key=0, style=solid];
m20_26 -> m20_23  [key=0, style=bold, color=blue];
m20_27 -> m20_28  [key=0, style=solid];
m20_14 -> m20_7  [key=2, style=dotted];
m20_14 -> m20_15  [key=0, style=solid];
m20_14 -> m20_17  [key=2, style=dotted];
m20_3 -> m20_6  [key=2, style=dotted];
m20_3 -> m20_7  [key=2, style=dotted];
m20_3 -> m20_4  [key=0, style=solid];
m20_6 -> m20_7  [key=0, style=solid, color=red];
m20_6 -> m20_10  [key=2, style=dotted, color=red];
m20_6 -> m20_11  [key=2, style=dotted, color=red];
m20_6 -> m20_12  [key=2, style=dotted, color=red];
m20_6 -> m20_13  [key=2, style=dotted, color=red];
m20_6 -> m20_14  [key=2, style=dotted, color=red];
m20_6 -> m20_21  [key=1, style=dashed, color=red, label=type];
m20_6 -> m20_8  [key=1, style=dashed, color=red, label=type];
m20_13 -> m20_14  [key=0, style=solid];
m20_13 -> m20_15  [key=1, style=dashed, color=darkseagreen4, label=string];
m20_38 -> m20_43  [key=0, style=solid];
m20_43 -> m20_44  [key=0, style=solid];
m20_43 -> m20_45  [key=2, style=dotted];
m20_44 -> m20_38  [key=0, style=bold, color=blue];
m20_11 -> m20_12  [key=0, style=solid];
m20_11 -> m20_8  [key=2, style=dotted];
m20_4 -> m20_30  [key=0, style=solid];
m20_4 -> m20_8  [key=2, style=dotted];
m20_4 -> m20_5  [key=0, style=solid];
m20_5 -> m20_6  [key=0, style=solid, color=red];
m20_5 -> m20_7  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m20_5 -> m20_21  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m20_5 -> m20_2  [key=0, style=bold, color=blue];
m20_7 -> m20_8  [key=0, style=solid];
m20_7 -> m20_15  [key=2, style=dotted];
m20_7 -> m20_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_9 -> m20_5  [key=0, style=bold, color=blue];
m20_9 -> m20_10  [key=0, style=solid, color=green];
m20_9 -> m20_11  [key=1, style=dashed, color=darkseagreen4, label=string];
m20_10 -> m20_11  [key=0, style=solid, color=green];
m20_10 -> m20_6  [key=2, style=dotted, color=green];
m20_10 -> m20_7  [key=2, style=dotted, color=green];
m20_39 -> m20_46  [key=0, style=solid];
m20_46 -> m20_47  [key=0, style=solid];
m20_46 -> m20_45  [key=2, style=dotted];
m20_47 -> m20_39  [key=0, style=bold, color=blue];
m20_23 -> m20_24  [key=0, style=solid];
m20_23 -> m20_25  [key=1, style=dashed, color=darkseagreen4, label=string];
m20_24 -> m20_25  [key=0, style=solid];
m20_24 -> m20_26  [key=2, style=dotted];
m20_24 -> m20_7  [key=2, style=dotted];
m20_24 -> m20_27  [key=2, style=dotted];
m20_25 -> m20_23  [key=0, style=bold, color=blue];
m20_25 -> m20_8  [key=2, style=dotted];
m20_25 -> m20_26  [key=0, style=solid];
m20_15 -> m20_8  [key=2, style=dotted];
m20_15 -> m20_16  [key=0, style=solid];
m20_59 -> m20_21  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m20_60 -> m20_21  [key=1, style=dashed, color=darkseagreen4, label=type];
m21_4 -> m21_5  [key=0, style=solid];
m21_4 -> m21_0  [key=3, color=darkorchid, style=bold, label="method methodReturn System.DateTime AtMidnight"];
m21_5 -> m21_6  [key=0, style=solid];
m21_5 -> m21_7  [key=2, style=dotted];
m21_6 -> m21_4  [key=0, style=bold, color=blue];
m21_8 -> m21_9  [key=0, style=solid];
m21_8 -> m21_0  [key=3, color=darkorchid, style=bold, label="method methodReturn System.DateTime AtNoon"];
m21_9 -> m21_10  [key=0, style=solid];
m21_9 -> m21_7  [key=2, style=dotted];
m21_10 -> m21_8  [key=0, style=bold, color=blue];
m21_0 -> m21_1  [key=0, style=solid];
m21_0 -> m21_5  [key=3, color=darkorchid, style=bold, label="Parameter variable int hour"];
m21_0 -> m21_9  [key=3, color=darkorchid, style=bold, label="Parameter variable int hour"];
m21_1 -> m21_2  [key=0, style=solid];
m21_1 -> m21_3  [key=2, style=dotted];
m21_2 -> m21_0  [key=0, style=bold, color=blue];
m21_11 -> m21_12  [key=0, style=solid];
m21_12 -> m21_13  [key=0, style=solid];
m21_12 -> m21_3  [key=2, style=dotted];
m21_13 -> m21_11  [key=0, style=bold, color=blue];
m22_0 -> m22_1  [key=0, style=solid];
m22_1 -> m22_2  [key=0, style=solid];
m22_1 -> m22_3  [key=0, style=solid];
m22_2 -> m22_3  [key=0, style=solid];
m22_2 -> m22_4  [key=2, style=dotted];
m22_3 -> m22_0  [key=0, style=bold, color=blue];
m23_0 -> m23_1  [key=0, style=solid];
m23_0 -> m23_2  [key=1, style=dashed, color=darkseagreen4, label=int];
m23_0 -> m23_4  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.TimeUnit"];
m23_1 -> m23_2  [key=0, style=solid];
m23_1 -> m23_6  [key=2, style=dotted];
m23_2 -> m23_3  [key=0, style=solid];
m23_2 -> m23_4  [key=0, style=solid];
m23_4 -> m23_5  [key=0, style=solid];
m23_4 -> m23_7  [key=2, style=dotted];
m23_3 -> m23_5  [key=0, style=solid];
m23_5 -> m23_0  [key=0, style=bold, color=blue];
m25_0 -> m25_1  [key=0, style=solid];
m25_0 -> m25_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m25_0 -> m25_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m25_0 -> m25_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m25_1 -> m25_2  [key=0, style=solid];
m25_1 -> m25_3  [key=0, style=solid];
m25_3 -> m25_4  [key=0, style=solid];
m25_3 -> m25_5  [key=0, style=solid];
m25_5 -> m25_6  [key=0, style=solid];
m25_6 -> m25_7  [key=0, style=solid];
m25_2 -> m25_7  [key=0, style=solid];
m25_2 -> m25_8  [key=2, style=dotted];
m25_4 -> m25_7  [key=0, style=solid];
m25_4 -> m25_8  [key=2, style=dotted];
m25_7 -> m25_0  [key=0, style=bold, color=blue];
m25_9 -> m25_10  [key=0, style=solid];
m25_10 -> m25_11  [key=0, style=solid];
m25_10 -> m25_0  [key=2, style=dotted];
m25_11 -> m25_9  [key=0, style=bold, color=blue];
m25_12 -> m25_13  [key=0, style=solid];
m25_13 -> m25_14  [key=0, style=solid];
m25_13 -> m25_15  [key=2, style=dotted];
m25_13 -> m25_16  [key=2, style=dotted];
m25_13 -> m25_9  [key=2, style=dotted];
m25_13 -> m25_17  [key=2, style=dotted];
m25_13 -> m25_13  [key=1, style=dashed, color=darkseagreen4, label=type];
m25_14 -> m25_12  [key=0, style=bold, color=blue];
m25_18 -> m25_5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Verb"];
m25_18 -> m25_6  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Verb"];
m26_3 -> m26_4  [key=0, style=solid];
m26_3 -> m26_5  [key=0, style=solid];
m26_8 -> m26_9  [key=0, style=solid, color=red];
m26_8 -> m26_8  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_8 -> m26_10  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_8 -> m26_11  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_8 -> m26_12  [key=1, style=dashed, color=red, label=int];
m26_8 -> m26_13  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_8 -> m26_14  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_8 -> m26_15  [key=1, style=dashed, color=red, label=int];
m26_8 -> m26_16  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_8 -> m26_17  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_8 -> m26_18  [key=1, style=dashed, color=red, label=int];
m26_8 -> m26_19  [key=1, style=dashed, color=red, label=int];
m26_8 -> m26_20  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_8 -> m26_21  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_8 -> m26_22  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_8 -> m26_23  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_8 -> m26_24  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_8 -> m26_26  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_8 -> m26_27  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_8 -> m26_28  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_39 -> m26_40  [key=0, style=solid];
m26_39 -> m26_41  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_39 -> m26_42  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_39 -> m26_43  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.GrammaticalGender"];
m26_40 -> m26_41  [key=0, style=solid];
m26_40 -> m26_0  [key=3, color=darkorchid, style=bold, label="Local variable string towords"];
m26_41 -> m26_42  [key=0, style=solid];
m26_41 -> m26_43  [key=0, style=solid];
m26_41 -> m26_47  [key=2, style=dotted];
m26_41 -> m26_44  [key=1, style=dashed, color=darkseagreen4, label=towords];
m26_41 -> m26_45  [key=1, style=dashed, color=darkseagreen4, label=towords];
m26_42 -> m26_43  [key=0, style=solid];
m26_42 -> m26_0  [key=2, style=dotted];
m26_42 -> m26_44  [key=1, style=dashed, color=darkseagreen4, label=towords];
m26_42 -> m26_45  [key=1, style=dashed, color=darkseagreen4, label=towords];
m26_43 -> m26_44  [key=0, style=solid];
m26_43 -> m26_45  [key=0, style=solid];
m26_44 -> m26_45  [key=0, style=solid];
m26_44 -> m26_48  [key=2, style=dotted];
m26_44 -> m26_44  [key=1, style=dashed, color=darkseagreen4, label=towords];
m26_45 -> m26_46  [key=0, style=solid];
m26_46 -> m26_39  [key=0, style=bold, color=blue];
m26_4 -> m26_31  [key=0, style=solid];
m26_4 -> m26_32  [key=2, style=dotted];
m26_4 -> m26_0  [key=2, style=dotted];
m26_4 -> m26_33  [key=2, style=dotted];
m26_5 -> m26_6  [key=0, style=solid, color=red];
m26_5 -> m26_34  [key=2, style=dotted];
m26_5 -> m26_7  [key=1, style=dashed, color=darkseagreen4, label=parts];
m26_5 -> m26_10  [key=1, style=dashed, color=darkseagreen4, label=parts];
m26_5 -> m26_13  [key=1, style=dashed, color=darkseagreen4, label=parts];
m26_5 -> m26_16  [key=1, style=dashed, color=darkseagreen4, label=parts];
m26_5 -> m26_20  [key=1, style=dashed, color=darkseagreen4, label=parts];
m26_5 -> m26_25  [key=1, style=dashed, color=darkseagreen4, label=parts];
m26_5 -> m26_29  [key=1, style=dashed, color=darkseagreen4, label=parts];
m26_5 -> m26_30  [key=1, style=dashed, color=darkseagreen4, label=parts];
m26_6 -> m26_4  [key=2, style=dotted];
m26_6 -> m26_7  [key=0, style=solid, color=red];
m26_6 -> m26_8  [key=2, style=dotted];
m26_6 -> m26_9  [key=0, style=solid, color=red];
m26_7 -> m26_5  [key=0, style=bold, color=blue];
m26_7 -> m26_8  [key=0, style=solid];
m26_7 -> m26_35  [key=2, style=dotted];
m26_7 -> m26_0  [key=2, style=dotted];
m26_7 -> m26_33  [key=2, style=dotted];
m26_7 -> m26_36  [key=2, style=dotted];
m26_0 -> m26_1  [key=0, style=solid, color=green];
m26_0 -> m26_3  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_0 -> m26_4  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_0 -> m26_6  [key=1, style=dashed, color=red, label=int];
m26_0 -> m26_7  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_0 -> m26_8  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_0 -> m26_9  [key=1, style=dashed, color=red, label=int];
m26_0 -> m26_10  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_0 -> m26_11  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_0 -> m26_12  [key=1, style=dashed, color=red, label=int];
m26_0 -> m26_13  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_0 -> m26_14  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_0 -> m26_15  [key=1, style=dashed, color=red, label=int];
m26_0 -> m26_16  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_0 -> m26_17  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_0 -> m26_18  [key=1, style=dashed, color=red, label=int];
m26_0 -> m26_19  [key=1, style=dashed, color=red, label=int];
m26_0 -> m26_20  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_0 -> m26_21  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_0 -> m26_22  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_0 -> m26_23  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_0 -> m26_24  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_0 -> m26_26  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_0 -> m26_27  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_0 -> m26_28  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_0 -> m26_39  [key=3, color=darkorchid, style=bold, label="Parameter variable int number"];
m26_0 -> m26_2  [key=3, color=darkorchid, style=bold, label="method methodReturn string Convert"];
m26_1 -> m26_2  [key=0, style=solid, color=green];
m26_1 -> m26_3  [key=2, style=dotted, color=green];
m26_1 -> m26_4  [key=2, style=dotted, color=green];
m26_2 -> m26_0  [key=0, style=bold, color=blue];
m26_2 -> m26_31  [key=0, style=solid];
m26_9 -> m26_10  [key=0, style=solid, color=red];
m26_9 -> m26_12  [key=0, style=solid, color=red];
m26_10 -> m26_11  [key=0, style=solid];
m26_10 -> m26_35  [key=2, style=dotted];
m26_10 -> m26_0  [key=2, style=dotted];
m26_10 -> m26_33  [key=2, style=dotted];
m26_10 -> m26_36  [key=2, style=dotted];
m26_11 -> m26_12  [key=0, style=solid, color=red];
m26_11 -> m26_11  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_11 -> m26_13  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_11 -> m26_14  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_11 -> m26_15  [key=1, style=dashed, color=red, label=int];
m26_11 -> m26_16  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_11 -> m26_17  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_11 -> m26_18  [key=1, style=dashed, color=red, label=int];
m26_11 -> m26_19  [key=1, style=dashed, color=red, label=int];
m26_11 -> m26_20  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_11 -> m26_21  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_11 -> m26_22  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_11 -> m26_23  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_11 -> m26_24  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_11 -> m26_26  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_11 -> m26_27  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_11 -> m26_28  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_12 -> m26_13  [key=0, style=solid, color=red];
m26_12 -> m26_15  [key=0, style=solid, color=red];
m26_13 -> m26_14  [key=0, style=solid];
m26_13 -> m26_35  [key=2, style=dotted];
m26_13 -> m26_0  [key=2, style=dotted];
m26_13 -> m26_33  [key=2, style=dotted];
m26_13 -> m26_36  [key=2, style=dotted];
m26_14 -> m26_15  [key=0, style=solid, color=red];
m26_14 -> m26_14  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_14 -> m26_16  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_14 -> m26_17  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_14 -> m26_18  [key=1, style=dashed, color=red, label=int];
m26_14 -> m26_19  [key=1, style=dashed, color=red, label=int];
m26_14 -> m26_20  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_14 -> m26_21  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_14 -> m26_22  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_14 -> m26_23  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_14 -> m26_24  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_14 -> m26_26  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_14 -> m26_27  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_14 -> m26_28  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_15 -> m26_16  [key=0, style=solid, color=red];
m26_15 -> m26_18  [key=0, style=solid, color=red];
m26_16 -> m26_17  [key=0, style=solid];
m26_16 -> m26_35  [key=2, style=dotted];
m26_16 -> m26_36  [key=2, style=dotted];
m26_17 -> m26_18  [key=0, style=solid, color=red];
m26_17 -> m26_17  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_17 -> m26_19  [key=1, style=dashed, color=red, label=int];
m26_17 -> m26_20  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_17 -> m26_21  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_17 -> m26_22  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_17 -> m26_23  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_17 -> m26_24  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_17 -> m26_26  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_17 -> m26_27  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_17 -> m26_28  [key=1, style=dashed, color=darkseagreen4, label=int];
m26_18 -> m26_19  [key=0, style=solid, color=red];
m26_18 -> m26_30  [key=0, style=solid, color=red];
m26_19 -> m26_20  [key=0, style=solid, color=red];
m26_19 -> m26_21  [key=0, style=solid, color=red];
m26_20 -> m26_30  [key=0, style=solid];
m26_20 -> m26_36  [key=2, style=dotted];
m26_21 -> m26_22  [key=0, style=solid];
m26_21 -> m26_26  [key=0, style=solid];
m26_22 -> m26_23  [key=0, style=solid];
m26_22 -> m26_24  [key=1, style=dashed, color=darkseagreen4, label=lastPart];
m26_22 -> m26_25  [key=1, style=dashed, color=darkseagreen4, label=lastPart];
m26_23 -> m26_24  [key=0, style=solid];
m26_23 -> m26_25  [key=0, style=solid];
m26_24 -> m26_25  [key=0, style=solid];
m26_24 -> m26_33  [key=2, style=dotted];
m26_24 -> m26_24  [key=1, style=dashed, color=darkseagreen4, label=lastPart];
m26_26 -> m26_27  [key=0, style=solid];
m26_26 -> m26_28  [key=1, style=dashed, color=darkseagreen4, label=lastPart];
m26_26 -> m26_29  [key=1, style=dashed, color=darkseagreen4, label=lastPart];
m26_27 -> m26_28  [key=0, style=solid];
m26_27 -> m26_29  [key=0, style=solid];
m26_28 -> m26_29  [key=0, style=solid];
m26_28 -> m26_33  [key=2, style=dotted];
m26_28 -> m26_28  [key=1, style=dashed, color=darkseagreen4, label=lastPart];
m26_25 -> m26_30  [key=0, style=solid];
m26_25 -> m26_36  [key=2, style=dotted];
m26_29 -> m26_30  [key=0, style=solid];
m26_29 -> m26_36  [key=2, style=dotted];
m26_30 -> m26_31  [key=0, style=solid];
m26_30 -> m26_37  [key=2, style=dotted];
m26_30 -> m26_38  [key=2, style=dotted];
m26_31 -> m26_0  [key=0, style=bold, color=blue];
m26_49 -> m26_4  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter"];
m26_49 -> m26_7  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter"];
m26_49 -> m26_10  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter"];
m26_49 -> m26_13  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter"];
m26_49 -> m26_42  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter"];
m28_0 -> m28_1  [key=0, style=solid];
m28_1 -> m28_2  [key=0, style=solid];
m28_1 -> m28_4  [key=2, style=dotted];
m28_1 -> m28_5  [key=2, style=dotted];
m28_1 -> m28_1  [key=1, style=dashed, color=darkseagreen4, label=word];
m28_2 -> m28_3  [key=0, style=solid];
m28_2 -> m28_6  [key=2, style=dotted];
m28_3 -> m28_0  [key=0, style=bold, color=blue];
m29_3 -> m29_0  [key=3, color=darkorchid, style=bold, label="Parameter variable Humanizer.ShowQuantityAs showQuantityAs"];
m29_3 -> m29_4  [key=3, color=darkorchid, style=bold, label="Parameter variable System.IFormatProvider formatProvider"];
m29_3 -> m29_5  [key=3, color=darkorchid, style=bold, label="Parameter variable Humanizer.ShowQuantityAs showQuantityAs"];
m29_3 -> m29_1  [key=3, color=darkorchid, style=bold, label="Parameter variable System.IFormatProvider formatProvider"];
m29_3 -> m29_8  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToQuantity"];
m29_0 -> m29_1  [key=0, style=solid];
m29_0 -> m29_3  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToQuantity"];
m29_1 -> m29_2  [key=0, style=solid];
m29_1 -> m29_3  [key=2, style=dotted];
m29_2 -> m29_0  [key=0, style=bold, color=blue];
m29_4 -> m29_5  [key=0, style=solid];
m29_4 -> m29_3  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToQuantity"];
m29_5 -> m29_6  [key=0, style=solid];
m29_5 -> m29_3  [key=2, style=dotted];
m29_6 -> m29_4  [key=0, style=bold, color=blue];
m29_7 -> m29_8  [key=0, style=solid];
m29_7 -> m29_9  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.ShowQuantityAs"];
m29_7 -> m29_11  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.ShowQuantityAs"];
m29_7 -> m29_12  [key=1, style=dashed, color=darkseagreen4, label=int];
m29_7 -> m29_13  [key=1, style=dashed, color=darkseagreen4, label=int];
m29_8 -> m29_9  [key=0, style=solid];
m29_8 -> m29_15  [key=2, style=dotted];
m29_8 -> m29_16  [key=2, style=dotted];
m29_8 -> m29_10  [key=1, style=dashed, color=darkseagreen4, label=transformedInput];
m29_8 -> m29_12  [key=1, style=dashed, color=darkseagreen4, label=transformedInput];
m29_8 -> m29_13  [key=1, style=dashed, color=darkseagreen4, label=transformedInput];
m29_9 -> m29_10  [key=0, style=solid];
m29_9 -> m29_11  [key=0, style=solid];
m29_11 -> m29_12  [key=0, style=solid];
m29_11 -> m29_13  [key=0, style=solid];
m29_12 -> m29_14  [key=0, style=solid];
m29_12 -> m29_17  [key=2, style=dotted];
m29_12 -> m29_18  [key=2, style=dotted];
m29_13 -> m29_14  [key=0, style=solid];
m29_13 -> m29_19  [key=2, style=dotted];
m29_13 -> m29_20  [key=2, style=dotted];
m29_10 -> m29_14  [key=0, style=solid];
m29_14 -> m29_7  [key=0, style=bold, color=blue];
m33_20 -> m33_21  [key=0, style=solid];
m33_21 -> m33_22  [key=0, style=solid];
m33_22 -> m33_20  [key=0, style=bold, color=blue];
m33_0 -> m33_1  [key=0, style=solid, color=green];
m33_0 -> m33_5  [key=1, style=dashed, color=green, label=int];
m33_0 -> m33_2  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.ShowQuantityAs"];
m33_0 -> m33_4  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.ShowQuantityAs"];
m33_0 -> m33_6  [key=1, style=dashed, color=darkseagreen4, label=int];
m33_1 -> m33_2  [key=0, style=solid, color=green];
m33_1 -> m33_8  [key=2, style=dotted, color=green];
m33_1 -> m33_9  [key=2, style=dotted, color=green];
m33_1 -> m33_3  [key=1, style=dashed, color=green, label=transformedInput];
m33_1 -> m33_5  [key=1, style=dashed, color=green, label=transformedInput];
m33_1 -> m33_6  [key=1, style=dashed, color=green, label=transformedInput];
m33_1 -> m33_0  [key=0, style=bold, color=blue];
m33_2 -> m33_3  [key=0, style=solid];
m33_2 -> m33_4  [key=0, style=solid];
m33_3 -> m33_7  [key=0, style=solid];
m33_3 -> m33_2  [key=0, style=bold, color=blue];
m33_5 -> m33_7  [key=0, style=solid, color=green];
m33_5 -> m33_10  [key=2, style=dotted, color=green];
m33_5 -> m33_6  [key=0, style=solid];
m33_5 -> m33_15  [key=2, style=dotted];
m33_6 -> m33_7  [key=0, style=solid];
m33_6 -> m33_11  [key=2, style=dotted];
m33_6 -> m33_10  [key=2, style=dotted];
m33_6 -> m33_14  [key=0, style=solid];
m33_6 -> m33_16  [key=2, style=dotted];
m33_4 -> m33_5  [key=0, style=solid, color=green];
m33_4 -> m33_6  [key=0, style=solid];
m33_4 -> m33_7  [key=1, style=dashed, color=darkseagreen4, label="params int[]"];
m33_4 -> m33_10  [key=1, style=dashed, color=darkseagreen4, label=bool];
m33_4 -> m33_11  [key=1, style=dashed, color=darkseagreen4, label=string];
m33_4 -> m33_12  [key=1, style=dashed, color=darkseagreen4, label="params int[]"];
m33_4 -> m33_13  [key=1, style=dashed, color=darkseagreen4, label=string];
m33_7 -> m33_0  [key=0, style=bold, color=blue];
m33_7 -> m33_8  [key=0, style=solid];
m33_7 -> m33_9  [key=0, style=solid];
m33_10 -> m33_11  [key=0, style=solid];
m33_23 -> m33_24  [key=0, style=solid];
m33_24 -> m33_25  [key=0, style=solid];
m33_24 -> m33_26  [key=2, style=dotted];
m33_25 -> m33_23  [key=0, style=bold, color=blue];
m33_11 -> m33_12  [key=0, style=solid];
m33_18 -> m33_19  [key=0, style=solid];
m33_19 -> m33_18  [key=0, style=bold, color=blue];
m33_12 -> m33_13  [key=0, style=solid];
m33_13 -> m33_14  [key=0, style=solid];
m33_8 -> m33_14  [key=0, style=solid];
m33_8 -> m33_17  [key=2, style=dotted];
m33_9 -> m33_10  [key=0, style=solid];
m33_9 -> m33_13  [key=1, style=dashed, color=darkseagreen4, label=ExtraLength];
m33_14 -> m33_4  [key=0, style=bold, color=blue];
m33_26 -> m33_27  [key=0, style=solid];
m33_27 -> m33_28  [key=0, style=solid];
m33_27 -> m33_29  [key=0, style=solid];
m33_28 -> m33_38  [key=0, style=solid];
m33_29 -> m33_30  [key=0, style=solid];
m33_29 -> m33_39  [key=2, style=dotted];
m33_29 -> m33_31  [key=1, style=dashed, color=darkseagreen4, label=builder];
m33_29 -> m33_32  [key=1, style=dashed, color=darkseagreen4, label=builder];
m33_29 -> m33_33  [key=1, style=dashed, color=darkseagreen4, label=builder];
m33_29 -> m33_34  [key=1, style=dashed, color=darkseagreen4, label=builder];
m33_29 -> m33_35  [key=1, style=dashed, color=darkseagreen4, label=builder];
m33_29 -> m33_36  [key=1, style=dashed, color=darkseagreen4, label=builder];
m33_29 -> m33_37  [key=1, style=dashed, color=darkseagreen4, label=builder];
m33_30 -> m33_31  [key=0, style=solid];
m33_30 -> m33_40  [key=2, style=dotted];
m33_31 -> m33_32  [key=0, style=solid];
m33_31 -> m33_41  [key=2, style=dotted];
m33_32 -> m33_33  [key=0, style=solid];
m33_32 -> m33_40  [key=2, style=dotted];
m33_33 -> m33_34  [key=0, style=solid];
m33_33 -> m33_41  [key=2, style=dotted];
m33_34 -> m33_35  [key=0, style=solid];
m33_34 -> m33_42  [key=2, style=dotted];
m33_34 -> m33_40  [key=2, style=dotted];
m33_35 -> m33_36  [key=0, style=solid];
m33_35 -> m33_41  [key=2, style=dotted];
m33_36 -> m33_37  [key=0, style=solid];
m33_36 -> m33_40  [key=2, style=dotted];
m33_37 -> m33_38  [key=0, style=solid];
m33_37 -> m33_43  [key=2, style=dotted];
m33_38 -> m33_26  [key=0, style=bold, color=blue];
m33_42 -> m33_44  [key=0, style=solid];
m33_42 -> m33_45  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
m33_42 -> m33_46  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
m33_42 -> m33_48  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
m33_42 -> m33_49  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
m33_42 -> m33_51  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
m33_42 -> m33_52  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
m33_44 -> m33_45  [key=0, style=solid];
m33_44 -> m33_46  [key=0, style=solid];
m33_45 -> m33_55  [key=0, style=solid];
m33_45 -> m33_56  [key=2, style=dotted];
m33_46 -> m33_47  [key=0, style=solid];
m33_46 -> m33_39  [key=2, style=dotted];
m33_46 -> m33_49  [key=1, style=dashed, color=darkseagreen4, label=yearsPart];
m33_46 -> m33_52  [key=1, style=dashed, color=darkseagreen4, label=yearsPart];
m33_46 -> m33_54  [key=1, style=dashed, color=darkseagreen4, label=yearsPart];
m33_48 -> m33_49  [key=0, style=solid];
m33_48 -> m33_54  [key=0, style=solid];
m33_49 -> m33_50  [key=0, style=solid];
m33_49 -> m33_56  [key=2, style=dotted];
m33_49 -> m33_40  [key=2, style=dotted];
m33_51 -> m33_52  [key=0, style=solid];
m33_51 -> m33_53  [key=0, style=solid];
m33_52 -> m33_53  [key=0, style=solid];
m33_52 -> m33_40  [key=2, style=dotted];
m33_47 -> m33_48  [key=0, style=solid];
m33_47 -> m33_49  [key=1, style=dashed, color=darkseagreen4, label=i];
m33_47 -> m33_50  [key=1, style=dashed, color=darkseagreen4, label=i];
m33_47 -> m33_52  [key=1, style=dashed, color=darkseagreen4, label=i];
m33_47 -> m33_53  [key=1, style=dashed, color=darkseagreen4, label=i];
m33_54 -> m33_55  [key=0, style=solid];
m33_54 -> m33_43  [key=2, style=dotted];
m33_50 -> m33_51  [key=0, style=solid];
m33_50 -> m33_52  [key=1, style=dashed, color=darkseagreen4, label=next];
m33_53 -> m33_48  [key=0, style=solid];
m33_53 -> m33_53  [key=1, style=dashed, color=darkseagreen4, label=i];
m33_55 -> m33_42  [key=0, style=bold, color=blue];
m33_57 -> m33_10  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m33_57 -> m33_11  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m33_57 -> m33_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m33_57 -> m33_13  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m33_57 -> m33_21  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m33_57 -> m33_27  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m33_57 -> m33_28  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m33_57 -> m33_29  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m33_57 -> m33_30  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m33_57 -> m33_32  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m33_57 -> m33_34  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m33_57 -> m33_36  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m34_0 -> m34_1  [key=0, style=solid];
m34_1 -> m34_0  [key=0, style=bold, color=blue];
m34_2 -> m34_3  [key=0, style=solid];
m34_3 -> m34_4  [key=0, style=solid];
m34_3 -> m34_5  [key=2, style=dotted];
m34_3 -> m34_6  [key=2, style=dotted];
m34_4 -> m34_2  [key=0, style=bold, color=blue];
m34_13 -> m34_14  [key=0, style=solid];
m34_14 -> m34_15  [key=0, style=solid];
m34_14 -> m34_5  [key=2, style=dotted];
m34_14 -> m34_6  [key=2, style=dotted];
m34_15 -> m34_13  [key=0, style=bold, color=blue];
m34_7 -> m34_8  [key=0, style=solid];
m34_8 -> m34_9  [key=0, style=solid];
m34_8 -> m34_5  [key=2, style=dotted];
m34_8 -> m34_6  [key=2, style=dotted];
m34_9 -> m34_7  [key=0, style=bold, color=blue];
m34_10 -> m34_11  [key=0, style=solid];
m34_11 -> m34_12  [key=0, style=solid];
m34_11 -> m34_5  [key=2, style=dotted];
m34_11 -> m34_6  [key=2, style=dotted];
m34_12 -> m34_10  [key=0, style=bold, color=blue];
m35_36 -> m35_37  [key=0, style=solid];
m35_36 -> m35_8  [key=2, style=dotted];
m35_36 -> m35_4  [key=2, style=dotted];
m35_37 -> m35_5  [key=2, style=dotted];
m35_37 -> m35_38  [key=0, style=solid];
m35_37 -> m35_35  [key=0, style=bold, color=blue];
m35_38 -> m35_36  [key=0, style=bold, color=blue];
m35_38 -> m35_39  [key=0, style=solid];
m35_9 -> m35_10  [key=0, style=solid, color=red];
m35_10 -> m35_5  [key=2, style=dotted];
m35_10 -> m35_11  [key=0, style=solid, color=red];
m35_10 -> m35_8  [key=2, style=dotted, color=red];
m35_10 -> m35_4  [key=2, style=dotted, color=red];
m35_11 -> m35_9  [key=0, style=bold, color=blue];
m35_22 -> m35_5  [key=2, style=dotted];
m35_22 -> m35_23  [key=0, style=solid];
m35_4 -> m35_2  [key=0, style=bold, color=blue];
m35_2 -> m35_3  [key=0, style=solid];
m35_2 -> m35_0  [key=0, style=bold, color=blue];
m35_3 -> m35_5  [key=2, style=dotted];
m35_3 -> m35_4  [key=0, style=solid];
m35_30 -> m35_31  [key=0, style=solid];
m35_30 -> m35_8  [key=2, style=dotted];
m35_30 -> m35_4  [key=2, style=dotted];
m35_31 -> m35_5  [key=2, style=dotted];
m35_31 -> m35_32  [key=0, style=solid];
m35_31 -> m35_29  [key=0, style=bold, color=blue];
m35_32 -> m35_30  [key=0, style=bold, color=blue];
m35_32 -> m35_33  [key=0, style=solid];
m35_18 -> m35_19  [key=0, style=solid];
m35_39 -> m35_40  [key=0, style=solid];
m35_39 -> m35_22  [key=2, style=dotted];
m35_39 -> m35_4  [key=2, style=dotted];
m35_40 -> m35_38  [key=0, style=bold, color=blue];
m35_40 -> m35_5  [key=2, style=dotted];
m35_40 -> m35_41  [key=0, style=solid];
m35_5 -> m35_6  [key=0, style=solid, color=red];
m35_6 -> m35_7  [key=0, style=solid, color=red];
m35_6 -> m35_8  [key=2, style=dotted, color=red];
m35_6 -> m35_4  [key=2, style=dotted, color=red];
m35_7 -> m35_5  [key=0, style=bold, color=blue];
m35_7 -> m35_8  [key=0, style=solid];
m35_8 -> m35_6  [key=0, style=bold, color=blue];
m35_12 -> m35_13  [key=0, style=solid, color=red];
m35_13 -> m35_14  [key=0, style=solid, color=red];
m35_13 -> m35_8  [key=2, style=dotted, color=red];
m35_13 -> m35_4  [key=2, style=dotted, color=red];
m35_13 -> m35_5  [key=2, style=dotted];
m35_14 -> m35_12  [key=0, style=bold, color=blue];
m35_33 -> m35_34  [key=0, style=solid];
m35_33 -> m35_8  [key=2, style=dotted];
m35_33 -> m35_4  [key=2, style=dotted];
m35_34 -> m35_32  [key=0, style=bold, color=blue];
m35_34 -> m35_5  [key=2, style=dotted];
m35_34 -> m35_35  [key=0, style=solid];
m35_15 -> m35_16  [key=0, style=solid, color=red];
m35_16 -> m35_17  [key=0, style=solid, color=red];
m35_16 -> m35_18  [key=2, style=dotted, color=red];
m35_16 -> m35_4  [key=2, style=dotted, color=red];
m35_16 -> m35_5  [key=2, style=dotted];
m35_17 -> m35_15  [key=0, style=bold, color=blue];
m35_42 -> m35_43  [key=0, style=solid];
m35_42 -> m35_22  [key=2, style=dotted];
m35_42 -> m35_4  [key=2, style=dotted];
m35_43 -> m35_5  [key=2, style=dotted];
m35_43 -> m35_44  [key=0, style=solid];
m35_43 -> m35_45  [key=2, style=dotted];
m35_43 -> m35_41  [key=0, style=bold, color=blue];
m35_44 -> m35_42  [key=0, style=bold, color=blue];
m35_44 -> m35_45  [key=0, style=solid];
m35_35 -> m35_36  [key=0, style=solid];
m35_35 -> m35_33  [key=0, style=bold, color=blue];
m35_21 -> m35_22  [key=0, style=solid];
m35_21 -> m35_19  [key=0, style=bold, color=blue];
m35_23 -> m35_21  [key=0, style=bold, color=blue];
m35_23 -> m35_24  [key=0, style=solid];
m35_45 -> m35_46  [key=0, style=solid];
m35_45 -> m35_22  [key=2, style=dotted];
m35_45 -> m35_4  [key=2, style=dotted];
m35_41 -> m35_42  [key=0, style=solid];
m35_41 -> m35_39  [key=0, style=bold, color=blue];
m35_46 -> m35_44  [key=0, style=bold, color=blue];
m35_24 -> m35_25  [key=0, style=solid];
m35_24 -> m35_22  [key=2, style=dotted];
m35_24 -> m35_4  [key=2, style=dotted];
m35_25 -> m35_23  [key=0, style=bold, color=blue];
m35_25 -> m35_5  [key=2, style=dotted];
m35_25 -> m35_26  [key=0, style=solid];
m35_27 -> m35_28  [key=0, style=solid, color=green];
m35_27 -> m35_22  [key=2, style=dotted];
m35_27 -> m35_4  [key=2, style=dotted];
m35_28 -> m35_29  [key=0, style=solid, color=green];
m35_28 -> m35_5  [key=2, style=dotted, color=green];
m35_28 -> m35_26  [key=0, style=bold, color=blue];
m35_29 -> m35_27  [key=0, style=bold, color=blue];
m35_29 -> m35_30  [key=0, style=solid];
m35_19 -> m35_20  [key=0, style=solid];
m35_19 -> m35_5  [key=2, style=dotted];
m35_20 -> m35_21  [key=0, style=solid];
m35_20 -> m35_22  [key=2, style=dotted];
m35_20 -> m35_4  [key=2, style=dotted];
m35_20 -> m35_18  [key=0, style=bold, color=blue];
m35_26 -> m35_27  [key=0, style=solid];
m35_26 -> m35_24  [key=0, style=bold, color=blue];
m35_0 -> m35_1  [key=0, style=solid];
m35_1 -> m35_2  [key=0, style=solid];
m35_1 -> m35_3  [key=2, style=dotted];
m35_1 -> m35_4  [key=2, style=dotted];
m36_12 -> m36_13  [key=0, style=solid];
m36_12 -> m36_9  [key=0, style=bold, color=blue];
m36_13 -> m36_14  [key=0, style=solid];
m36_13 -> m36_8  [key=2, style=dotted];
m36_13 -> m36_4  [key=2, style=dotted];
m36_14 -> m36_12  [key=0, style=bold, color=blue];
m36_14 -> m36_15  [key=0, style=solid];
m36_3 -> m36_3  [key=3, color=darkorchid, style=bold, label="Local variable byte size"];
m36_3 -> m36_4  [key=0, style=solid];
m36_69 -> m36_70  [key=0, style=solid];
m36_70 -> m36_3  [key=3, color=darkorchid, style=bold, label="Local variable uint size"];
m36_70 -> m36_71  [key=0, style=solid];
m36_71 -> m36_47  [key=2, style=dotted];
m36_71 -> m36_8  [key=2, style=dotted];
m36_71 -> m36_73  [key=2, style=dotted];
m36_71 -> m36_72  [key=0, style=solid];
m36_72 -> m36_69  [key=0, style=bold, color=blue];
m36_93 -> m36_94  [key=0, style=solid, color=green];
m36_94 -> m36_95  [key=0, style=solid, color=green];
m36_94 -> m36_3  [key=3, color=green, style=bold, label="Local variable short size"];
m36_95 -> m36_96  [key=0, style=solid, color=green];
m36_95 -> m36_86  [key=2, style=dotted, color=green];
m36_95 -> m36_97  [key=2, style=dotted, color=green];
m36_95 -> m36_8  [key=2, style=dotted, color=green];
m36_96 -> m36_93  [key=0, style=bold, color=blue];
m36_196 -> m36_197  [key=0, style=solid];
m36_197 -> m36_8  [key=2, style=dotted];
m36_197 -> m36_42  [key=2, style=dotted];
m36_197 -> m36_198  [key=0, style=solid];
m36_197 -> m36_195  [key=2, style=dotted];
m36_198 -> m36_196  [key=0, style=bold, color=blue];
m36_19 -> m36_20  [key=0, style=solid];
m36_20 -> m36_21  [key=0, style=solid];
m36_20 -> m36_22  [key=2, style=dotted];
m36_20 -> m36_4  [key=2, style=dotted];
m36_20 -> m36_3  [key=3, color=darkorchid, style=bold, label="Local variable ushort size"];
m36_21 -> m36_19  [key=0, style=bold, color=blue];
m36_21 -> m36_8  [key=2, style=dotted];
m36_21 -> m36_22  [key=0, style=solid];
m36_21 -> m36_6  [key=2, style=dotted];
m36_21 -> m36_23  [key=2, style=dotted];
m36_205 -> m36_206  [key=0, style=solid];
m36_206 -> m36_3  [key=3, color=darkorchid, style=bold, label="Local variable sbyte size"];
m36_206 -> m36_207  [key=0, style=solid];
m36_207 -> m36_8  [key=2, style=dotted];
m36_207 -> m36_208  [key=0, style=solid];
m36_207 -> m36_203  [key=2, style=dotted];
m36_207 -> m36_209  [key=2, style=dotted];
m36_208 -> m36_205  [key=0, style=bold, color=blue];
m36_39 -> m36_40  [key=0, style=solid];
m36_40 -> m36_8  [key=2, style=dotted];
m36_40 -> m36_42  [key=2, style=dotted];
m36_40 -> m36_41  [key=0, style=solid];
m36_40 -> m36_38  [key=2, style=dotted];
m36_41 -> m36_39  [key=0, style=bold, color=blue];
m36_0 -> m36_1  [key=0, style=solid];
m36_1 -> m36_2  [key=0, style=solid];
m36_1 -> m36_3  [key=2, style=dotted];
m36_1 -> m36_4  [key=2, style=dotted];
m36_2 -> m36_0  [key=0, style=bold, color=blue];
m36_2 -> m36_3  [key=0, style=solid];
m36_171 -> m36_172  [key=0, style=solid];
m36_172 -> m36_3  [key=3, color=darkorchid, style=bold, label="Local variable short size"];
m36_172 -> m36_173  [key=0, style=solid];
m36_173 -> m36_8  [key=2, style=dotted];
m36_173 -> m36_174  [key=0, style=solid];
m36_173 -> m36_164  [key=2, style=dotted];
m36_173 -> m36_175  [key=2, style=dotted];
m36_174 -> m36_171  [key=0, style=bold, color=blue];
m36_15 -> m36_16  [key=0, style=solid];
m36_15 -> m36_3  [key=3, color=darkorchid, style=bold, label="Local variable short size"];
m36_16 -> m36_17  [key=0, style=solid];
m36_16 -> m36_18  [key=2, style=dotted];
m36_16 -> m36_4  [key=2, style=dotted];
m36_16 -> m36_8  [key=2, style=dotted];
m36_16 -> m36_6  [key=2, style=dotted];
m36_17 -> m36_15  [key=0, style=bold, color=blue];
m36_17 -> m36_14  [key=0, style=bold, color=blue];
m36_7 -> m36_5  [key=0, style=bold, color=blue];
m36_5 -> m36_6  [key=0, style=solid];
m36_5 -> m36_2  [key=0, style=bold, color=blue];
m36_6 -> m36_7  [key=0, style=solid];
m36_6 -> m36_8  [key=2, style=dotted];
m36_6 -> m36_4  [key=2, style=dotted];
m36_147 -> m36_148  [key=0, style=solid];
m36_148 -> m36_3  [key=3, color=darkorchid, style=bold, label="Local variable uint size"];
m36_148 -> m36_149  [key=0, style=solid];
m36_149 -> m36_8  [key=2, style=dotted];
m36_149 -> m36_125  [key=2, style=dotted];
m36_149 -> m36_150  [key=0, style=solid];
m36_149 -> m36_151  [key=2, style=dotted];
m36_150 -> m36_147  [key=0, style=bold, color=blue];
m36_113 -> m36_114  [key=0, style=solid, color=green];
m36_114 -> m36_115  [key=0, style=solid, color=green];
m36_114 -> m36_3  [key=3, color=green, style=bold, label="Local variable double size"];
m36_115 -> m36_116  [key=0, style=solid, color=green];
m36_115 -> m36_86  [key=2, style=dotted, color=green];
m36_115 -> m36_117  [key=2, style=dotted, color=green];
m36_115 -> m36_8  [key=2, style=dotted, color=green];
m36_116 -> m36_113  [key=0, style=bold, color=blue];
m36_235 -> m36_236  [key=0, style=solid];
m36_236 -> m36_8  [key=2, style=dotted];
m36_236 -> m36_42  [key=2, style=dotted];
m36_236 -> m36_237  [key=0, style=solid];
m36_236 -> m36_234  [key=2, style=dotted];
m36_237 -> m36_235  [key=0, style=bold, color=blue];
m36_181 -> m36_182  [key=0, style=solid];
m36_182 -> m36_3  [key=3, color=darkorchid, style=bold, label="Local variable int size"];
m36_182 -> m36_183  [key=0, style=solid];
m36_183 -> m36_8  [key=2, style=dotted];
m36_183 -> m36_184  [key=0, style=solid];
m36_183 -> m36_164  [key=2, style=dotted];
m36_183 -> m36_185  [key=2, style=dotted];
m36_184 -> m36_181  [key=0, style=bold, color=blue];
m36_23 -> m36_24  [key=0, style=solid];
m36_24 -> m36_25  [key=0, style=solid];
m36_24 -> m36_22  [key=2, style=dotted];
m36_24 -> m36_4  [key=2, style=dotted];
m36_25 -> m36_23  [key=0, style=bold, color=blue];
m36_25 -> m36_3  [key=3, color=darkorchid, style=bold, label="Local variable int size"];
m36_25 -> m36_26  [key=0, style=solid];
m36_43 -> m36_44  [key=0, style=solid];
m36_44 -> m36_3  [key=3, color=darkorchid, style=bold, label="Local variable byte size"];
m36_44 -> m36_45  [key=0, style=solid];
m36_45 -> m36_47  [key=2, style=dotted];
m36_45 -> m36_8  [key=2, style=dotted];
m36_45 -> m36_46  [key=0, style=solid];
m36_45 -> m36_48  [key=2, style=dotted];
m36_46 -> m36_43  [key=0, style=bold, color=blue];
m36_98 -> m36_99  [key=0, style=solid, color=green];
m36_99 -> m36_100  [key=0, style=solid, color=green];
m36_99 -> m36_3  [key=3, color=green, style=bold, label="Local variable ushort size"];
m36_100 -> m36_101  [key=0, style=solid, color=green];
m36_100 -> m36_86  [key=2, style=dotted, color=green];
m36_100 -> m36_102  [key=2, style=dotted, color=green];
m36_100 -> m36_8  [key=2, style=dotted, color=green];
m36_101 -> m36_98  [key=0, style=bold, color=blue];
m36_152 -> m36_153  [key=0, style=solid];
m36_153 -> m36_3  [key=3, color=darkorchid, style=bold, label="Local variable double size"];
m36_153 -> m36_154  [key=0, style=solid];
m36_154 -> m36_8  [key=2, style=dotted];
m36_154 -> m36_125  [key=2, style=dotted];
m36_154 -> m36_155  [key=0, style=solid];
m36_154 -> m36_156  [key=2, style=dotted];
m36_155 -> m36_152  [key=0, style=bold, color=blue];
m36_34 -> m36_35  [key=0, style=solid];
m36_35 -> m36_3  [key=3, color=darkorchid, style=bold, label="Local variable double size"];
m36_35 -> m36_36  [key=0, style=solid];
m36_36 -> m36_8  [key=2, style=dotted];
m36_36 -> m36_37  [key=0, style=solid];
m36_36 -> m36_6  [key=2, style=dotted];
m36_36 -> m36_38  [key=2, style=dotted];
m36_37 -> m36_34  [key=0, style=bold, color=blue];
m36_108 -> m36_109  [key=0, style=solid, color=green];
m36_109 -> m36_110  [key=0, style=solid, color=green];
m36_109 -> m36_3  [key=3, color=green, style=bold, label="Local variable uint size"];
m36_110 -> m36_111  [key=0, style=solid, color=green];
m36_110 -> m36_86  [key=2, style=dotted, color=green];
m36_110 -> m36_112  [key=2, style=dotted, color=green];
m36_110 -> m36_8  [key=2, style=dotted, color=green];
m36_111 -> m36_108  [key=0, style=bold, color=blue];
m36_64 -> m36_65  [key=0, style=solid];
m36_65 -> m36_3  [key=3, color=darkorchid, style=bold, label="Local variable int size"];
m36_65 -> m36_66  [key=0, style=solid];
m36_66 -> m36_47  [key=2, style=dotted];
m36_66 -> m36_8  [key=2, style=dotted];
m36_66 -> m36_67  [key=0, style=solid];
m36_66 -> m36_68  [key=2, style=dotted];
m36_67 -> m36_64  [key=0, style=bold, color=blue];
m36_26 -> m36_8  [key=2, style=dotted];
m36_26 -> m36_27  [key=0, style=solid];
m36_26 -> m36_6  [key=2, style=dotted];
m36_26 -> m36_28  [key=2, style=dotted];
m36_27 -> m36_24  [key=0, style=bold, color=blue];
m36_27 -> m36_28  [key=0, style=solid];
m36_27 -> m36_22  [key=2, style=dotted];
m36_27 -> m36_4  [key=2, style=dotted];
m36_191 -> m36_192  [key=0, style=solid];
m36_192 -> m36_3  [key=3, color=darkorchid, style=bold, label="Local variable double size"];
m36_192 -> m36_193  [key=0, style=solid];
m36_193 -> m36_8  [key=2, style=dotted];
m36_193 -> m36_194  [key=0, style=solid];
m36_193 -> m36_164  [key=2, style=dotted];
m36_193 -> m36_195  [key=2, style=dotted];
m36_194 -> m36_191  [key=0, style=bold, color=blue];
m36_4 -> m36_8  [key=2, style=dotted];
m36_4 -> m36_5  [key=0, style=solid];
m36_4 -> m36_6  [key=2, style=dotted];
m36_4 -> m36_7  [key=2, style=dotted];
m36_166 -> m36_167  [key=0, style=solid];
m36_167 -> m36_3  [key=3, color=darkorchid, style=bold, label="Local variable sbyte size"];
m36_167 -> m36_168  [key=0, style=solid];
m36_168 -> m36_8  [key=2, style=dotted];
m36_168 -> m36_169  [key=0, style=solid];
m36_168 -> m36_164  [key=2, style=dotted];
m36_168 -> m36_170  [key=2, style=dotted];
m36_169 -> m36_166  [key=0, style=bold, color=blue];
m36_157 -> m36_158  [key=0, style=solid];
m36_158 -> m36_8  [key=2, style=dotted];
m36_158 -> m36_42  [key=2, style=dotted];
m36_158 -> m36_159  [key=0, style=solid];
m36_158 -> m36_156  [key=2, style=dotted];
m36_159 -> m36_157  [key=0, style=bold, color=blue];
m36_82 -> m36_83  [key=0, style=solid, color=green];
m36_83 -> m36_84  [key=0, style=solid, color=green];
m36_83 -> m36_3  [key=3, color=green, style=bold, label="Local variable byte size"];
m36_84 -> m36_85  [key=0, style=solid, color=green];
m36_84 -> m36_86  [key=2, style=dotted, color=green];
m36_84 -> m36_87  [key=2, style=dotted, color=green];
m36_84 -> m36_8  [key=2, style=dotted, color=green];
m36_85 -> m36_82  [key=0, style=bold, color=blue];
m36_186 -> m36_187  [key=0, style=solid];
m36_187 -> m36_3  [key=3, color=darkorchid, style=bold, label="Local variable uint size"];
m36_187 -> m36_188  [key=0, style=solid];
m36_188 -> m36_8  [key=2, style=dotted];
m36_188 -> m36_189  [key=0, style=solid];
m36_188 -> m36_164  [key=2, style=dotted];
m36_188 -> m36_190  [key=2, style=dotted];
m36_189 -> m36_186  [key=0, style=bold, color=blue];
m36_215 -> m36_216  [key=0, style=solid];
m36_216 -> m36_3  [key=3, color=darkorchid, style=bold, label="Local variable ushort size"];
m36_216 -> m36_217  [key=0, style=solid];
m36_217 -> m36_8  [key=2, style=dotted];
m36_217 -> m36_218  [key=0, style=solid];
m36_217 -> m36_203  [key=2, style=dotted];
m36_217 -> m36_219  [key=2, style=dotted];
m36_218 -> m36_215  [key=0, style=bold, color=blue];
m36_121 -> m36_122  [key=0, style=solid, color=green];
m36_122 -> m36_123  [key=0, style=solid, color=green];
m36_122 -> m36_3  [key=3, color=green, style=bold, label="Local variable byte size"];
m36_123 -> m36_124  [key=0, style=solid, color=green];
m36_123 -> m36_125  [key=2, style=dotted, color=green];
m36_123 -> m36_126  [key=2, style=dotted, color=green];
m36_123 -> m36_8  [key=2, style=dotted, color=green];
m36_124 -> m36_121  [key=0, style=bold, color=blue];
m36_127 -> m36_128  [key=0, style=solid, color=green];
m36_128 -> m36_129  [key=0, style=solid, color=green];
m36_128 -> m36_3  [key=3, color=green, style=bold, label="Local variable sbyte size"];
m36_129 -> m36_130  [key=0, style=solid, color=green];
m36_129 -> m36_125  [key=2, style=dotted, color=green];
m36_129 -> m36_131  [key=2, style=dotted, color=green];
m36_129 -> m36_8  [key=2, style=dotted, color=green];
m36_130 -> m36_127  [key=0, style=bold, color=blue];
m36_230 -> m36_231  [key=0, style=solid];
m36_232 -> m36_8  [key=2, style=dotted];
m36_232 -> m36_233  [key=0, style=solid];
m36_232 -> m36_203  [key=2, style=dotted];
m36_232 -> m36_234  [key=2, style=dotted];
m36_231 -> m36_232  [key=0, style=solid];
m36_233 -> m36_230  [key=0, style=bold, color=blue];
m36_49 -> m36_50  [key=0, style=solid];
m36_50 -> m36_3  [key=3, color=darkorchid, style=bold, label="Local variable sbyte size"];
m36_50 -> m36_51  [key=0, style=solid];
m36_51 -> m36_47  [key=2, style=dotted];
m36_51 -> m36_8  [key=2, style=dotted];
m36_51 -> m36_52  [key=0, style=solid];
m36_51 -> m36_53  [key=2, style=dotted];
m36_52 -> m36_49  [key=0, style=bold, color=blue];
m36_103 -> m36_104  [key=0, style=solid, color=green];
m36_104 -> m36_105  [key=0, style=solid, color=green];
m36_104 -> m36_3  [key=3, color=green, style=bold, label="Local variable int size"];
m36_105 -> m36_106  [key=0, style=solid, color=green];
m36_105 -> m36_86  [key=2, style=dotted, color=green];
m36_105 -> m36_107  [key=2, style=dotted, color=green];
m36_105 -> m36_8  [key=2, style=dotted, color=green];
m36_106 -> m36_103  [key=0, style=bold, color=blue];
m36_137 -> m36_138  [key=0, style=solid];
m36_138 -> m36_3  [key=3, color=darkorchid, style=bold, label="Local variable ushort size"];
m36_138 -> m36_139  [key=0, style=solid];
m36_139 -> m36_8  [key=2, style=dotted];
m36_139 -> m36_125  [key=2, style=dotted];
m36_139 -> m36_140  [key=0, style=solid];
m36_139 -> m36_141  [key=2, style=dotted];
m36_140 -> m36_137  [key=0, style=bold, color=blue];
m36_220 -> m36_221  [key=0, style=solid];
m36_221 -> m36_3  [key=3, color=darkorchid, style=bold, label="Local variable int size"];
m36_221 -> m36_222  [key=0, style=solid];
m36_222 -> m36_8  [key=2, style=dotted];
m36_222 -> m36_223  [key=0, style=solid];
m36_222 -> m36_203  [key=2, style=dotted];
m36_222 -> m36_224  [key=2, style=dotted];
m36_223 -> m36_220  [key=0, style=bold, color=blue];
m36_54 -> m36_55  [key=0, style=solid];
m36_55 -> m36_3  [key=3, color=darkorchid, style=bold, label="Local variable short size"];
m36_55 -> m36_56  [key=0, style=solid];
m36_56 -> m36_47  [key=2, style=dotted];
m36_56 -> m36_8  [key=2, style=dotted];
m36_56 -> m36_57  [key=0, style=solid];
m36_56 -> m36_58  [key=2, style=dotted];
m36_57 -> m36_54  [key=0, style=bold, color=blue];
m36_97 -> m36_3  [key=3, color=darkorchid, style=bold, label="Local variable byte size"];
m36_59 -> m36_60  [key=0, style=solid];
m36_60 -> m36_3  [key=3, color=darkorchid, style=bold, label="Local variable ushort size"];
m36_60 -> m36_61  [key=0, style=solid];
m36_61 -> m36_47  [key=2, style=dotted];
m36_61 -> m36_8  [key=2, style=dotted];
m36_61 -> m36_62  [key=0, style=solid];
m36_61 -> m36_63  [key=2, style=dotted];
m36_62 -> m36_59  [key=0, style=bold, color=blue];
m36_118 -> m36_119  [key=0, style=solid, color=green];
m36_119 -> m36_120  [key=0, style=solid, color=green];
m36_119 -> m36_117  [key=2, style=dotted, color=green];
m36_119 -> m36_42  [key=2, style=dotted, color=green];
m36_119 -> m36_8  [key=2, style=dotted, color=green];
m36_120 -> m36_118  [key=0, style=bold, color=blue];
m36_74 -> m36_75  [key=0, style=solid, color=green];
m36_75 -> m36_76  [key=0, style=solid, color=green];
m36_75 -> m36_3  [key=3, color=green, style=bold, label="Local variable double size"];
m36_76 -> m36_77  [key=0, style=solid, color=green];
m36_76 -> m36_47  [key=2, style=dotted, color=green];
m36_76 -> m36_78  [key=2, style=dotted, color=green];
m36_76 -> m36_8  [key=2, style=dotted, color=green];
m36_77 -> m36_74  [key=0, style=bold, color=blue];
m36_199 -> m36_200  [key=0, style=solid];
m36_200 -> m36_3  [key=3, color=darkorchid, style=bold, label="Local variable byte size"];
m36_200 -> m36_201  [key=0, style=solid];
m36_201 -> m36_8  [key=2, style=dotted];
m36_201 -> m36_202  [key=0, style=solid];
m36_201 -> m36_203  [key=2, style=dotted];
m36_201 -> m36_204  [key=2, style=dotted];
m36_202 -> m36_199  [key=0, style=bold, color=blue];
m36_22 -> m36_19  [key=0, style=bold, color=blue];
m36_73 -> m36_3  [key=3, color=darkorchid, style=bold, label="Local variable long size"];
m36_176 -> m36_177  [key=0, style=solid];
m36_177 -> m36_3  [key=3, color=darkorchid, style=bold, label="Local variable ushort size"];
m36_177 -> m36_178  [key=0, style=solid];
m36_178 -> m36_8  [key=2, style=dotted];
m36_178 -> m36_179  [key=0, style=solid];
m36_178 -> m36_164  [key=2, style=dotted];
m36_178 -> m36_180  [key=2, style=dotted];
m36_179 -> m36_176  [key=0, style=bold, color=blue];
m36_142 -> m36_143  [key=0, style=solid];
m36_143 -> m36_3  [key=3, color=darkorchid, style=bold, label="Local variable int size"];
m36_143 -> m36_144  [key=0, style=solid];
m36_144 -> m36_8  [key=2, style=dotted];
m36_144 -> m36_125  [key=2, style=dotted];
m36_144 -> m36_145  [key=0, style=solid];
m36_144 -> m36_146  [key=2, style=dotted];
m36_145 -> m36_142  [key=0, style=bold, color=blue];
m36_9 -> m36_10  [key=0, style=solid];
m36_10 -> m36_3  [key=3, color=darkorchid, style=bold, label="Local variable sbyte size"];
m36_10 -> m36_11  [key=0, style=solid];
m36_10 -> m36_8  [key=2, style=dotted];
m36_10 -> m36_4  [key=2, style=dotted];
m36_11 -> m36_8  [key=2, style=dotted];
m36_11 -> m36_12  [key=0, style=solid];
m36_11 -> m36_6  [key=2, style=dotted];
m36_11 -> m36_13  [key=2, style=dotted];
m36_11 -> m36_9  [key=0, style=bold, color=blue];
m36_132 -> m36_133  [key=0, style=solid];
m36_133 -> m36_3  [key=3, color=darkorchid, style=bold, label="Local variable short size"];
m36_133 -> m36_134  [key=0, style=solid];
m36_134 -> m36_8  [key=2, style=dotted];
m36_134 -> m36_125  [key=2, style=dotted];
m36_134 -> m36_135  [key=0, style=solid];
m36_134 -> m36_136  [key=2, style=dotted];
m36_135 -> m36_132  [key=0, style=bold, color=blue];
m36_79 -> m36_80  [key=0, style=solid, color=green];
m36_80 -> m36_81  [key=0, style=solid, color=green];
m36_80 -> m36_78  [key=2, style=dotted, color=green];
m36_80 -> m36_42  [key=2, style=dotted, color=green];
m36_80 -> m36_8  [key=2, style=dotted, color=green];
m36_81 -> m36_79  [key=0, style=bold, color=blue];
m36_88 -> m36_89  [key=0, style=solid, color=green];
m36_89 -> m36_90  [key=0, style=solid, color=green];
m36_89 -> m36_3  [key=3, color=green, style=bold, label="Local variable sbyte size"];
m36_90 -> m36_91  [key=0, style=solid, color=green];
m36_90 -> m36_86  [key=2, style=dotted, color=green];
m36_90 -> m36_92  [key=2, style=dotted, color=green];
m36_90 -> m36_8  [key=2, style=dotted, color=green];
m36_91 -> m36_88  [key=0, style=bold, color=blue];
m36_225 -> m36_226  [key=0, style=solid];
m36_226 -> m36_3  [key=3, color=darkorchid, style=bold, label="Local variable uint size"];
m36_226 -> m36_227  [key=0, style=solid];
m36_227 -> m36_8  [key=2, style=dotted];
m36_227 -> m36_228  [key=0, style=solid];
m36_227 -> m36_203  [key=2, style=dotted];
m36_227 -> m36_229  [key=2, style=dotted];
m36_228 -> m36_225  [key=0, style=bold, color=blue];
m36_29 -> m36_30  [key=0, style=solid];
m36_30 -> m36_3  [key=3, color=darkorchid, style=bold, label="Local variable uint size"];
m36_30 -> m36_31  [key=0, style=solid];
m36_31 -> m36_8  [key=2, style=dotted];
m36_31 -> m36_32  [key=0, style=solid];
m36_31 -> m36_6  [key=2, style=dotted];
m36_31 -> m36_33  [key=2, style=dotted];
m36_32 -> m36_29  [key=0, style=bold, color=blue];
m36_160 -> m36_161  [key=0, style=solid];
m36_162 -> m36_8  [key=2, style=dotted];
m36_162 -> m36_163  [key=0, style=solid];
m36_162 -> m36_164  [key=2, style=dotted];
m36_162 -> m36_165  [key=2, style=dotted];
m36_161 -> m36_162  [key=0, style=solid];
m36_163 -> m36_160  [key=0, style=bold, color=blue];
m36_28 -> m36_26  [key=0, style=bold, color=blue];
m36_210 -> m36_211  [key=0, style=solid];
m36_211 -> m36_3  [key=3, color=darkorchid, style=bold, label="Local variable short size"];
m36_211 -> m36_212  [key=0, style=solid];
m36_212 -> m36_8  [key=2, style=dotted];
m36_212 -> m36_213  [key=0, style=solid];
m36_212 -> m36_203  [key=2, style=dotted];
m36_212 -> m36_214  [key=2, style=dotted];
m36_213 -> m36_210  [key=0, style=bold, color=blue];
}
