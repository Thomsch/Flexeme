digraph  {
n0 [label="Entry Humanizer.Localisation.Formatters.ArabicFormatter.GetResourceKey(string, int)", span="7-7", cluster="Humanizer.Localisation.Formatters.ArabicFormatter.GetResourceKey(string, int)"];
n1 [label="number == 2", span="10-10", cluster="Humanizer.Localisation.Formatters.ArabicFormatter.GetResourceKey(string, int)"];
n2 [label="return resourceKey + DualPostfix;", span="11-11", cluster="Humanizer.Localisation.Formatters.ArabicFormatter.GetResourceKey(string, int)"];
n3 [label="number >= 3 && number <= 10", span="14-14", cluster="Humanizer.Localisation.Formatters.ArabicFormatter.GetResourceKey(string, int)"];
n4 [label="return resourceKey + PluralPostfix;", span="15-15", cluster="Humanizer.Localisation.Formatters.ArabicFormatter.GetResourceKey(string, int)"];
n5 [label="return resourceKey;", span="17-17", cluster="Humanizer.Localisation.Formatters.ArabicFormatter.GetResourceKey(string, int)"];
n6 [label="Exit Humanizer.Localisation.Formatters.ArabicFormatter.GetResourceKey(string, int)", span="7-7", cluster="Humanizer.Localisation.Formatters.ArabicFormatter.GetResourceKey(string, int)"];
m0_107 [label="Entry Humanizer.Bytes.ByteSize.operator ++(Humanizer.Bytes.ByteSize)", span="257-257", cluster="Humanizer.Bytes.ByteSize.operator ++(Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_108 [label="return new ByteSize(b.Bits++);", span="259-259", cluster="Humanizer.Bytes.ByteSize.operator ++(Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_109 [label="Exit Humanizer.Bytes.ByteSize.operator ++(Humanizer.Bytes.ByteSize)", span="257-257", cluster="Humanizer.Bytes.ByteSize.operator ++(Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_60 [label="Entry Humanizer.Bytes.ByteSize.Equals(object)", span="183-183", cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="ByteSize.cs"];
m0_61 [label="value == null", span="185-185", cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="ByteSize.cs"];
m0_64 [label="value is ByteSize", span="189-189", cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="ByteSize.cs"];
m0_65 [label="other = (ByteSize)value", span="190-190", cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="ByteSize.cs"];
m0_62 [label="return false;", span="186-186", cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="ByteSize.cs"];
m0_63 [label="ByteSize other", span="188-188", cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="ByteSize.cs"];
m0_67 [label="return Equals(other);", span="194-194", cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="ByteSize.cs"];
m0_66 [label="return false;", span="192-192", cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="ByteSize.cs"];
m0_68 [label="Exit Humanizer.Bytes.ByteSize.Equals(object)", span="183-183", cluster="Humanizer.Bytes.ByteSize.Equals(object)", file="ByteSize.cs"];
m0_83 [label="Entry Humanizer.Bytes.ByteSize.AddBits(long)", span="217-217", cluster="Humanizer.Bytes.ByteSize.AddBits(long)", file="ByteSize.cs"];
m0_84 [label="return new ByteSize(Bits + value);", span="219-219", cluster="Humanizer.Bytes.ByteSize.AddBits(long)", file="ByteSize.cs"];
m0_85 [label="Exit Humanizer.Bytes.ByteSize.AddBits(long)", span="217-217", cluster="Humanizer.Bytes.ByteSize.AddBits(long)", file="ByteSize.cs"];
m0_177 [label="Entry string.Trim()", span="0-0", cluster="string.Trim()", file="ByteSize.cs"];
m0_119 [label="Entry Humanizer.Bytes.ByteSize.operator !=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="277-277", cluster="Humanizer.Bytes.ByteSize.operator !=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_120 [label="return b1.Bits != b2.Bits;", span="279-279", cluster="Humanizer.Bytes.ByteSize.operator !=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_121 [label="Exit Humanizer.Bytes.ByteSize.operator !=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="277-277", cluster="Humanizer.Bytes.ByteSize.operator !=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_50 [label="Entry string.Contains(string)", span="0-0", cluster="string.Contains(string)", file="ByteSize.cs"];
m0_9 [label="Entry Humanizer.Bytes.ByteSize.FromBits(long)", span="115-115", cluster="Humanizer.Bytes.ByteSize.FromBits(long)", file="ByteSize.cs"];
m0_10 [label="return new ByteSize(value / (double)BitsInByte);", span="117-117", cluster="Humanizer.Bytes.ByteSize.FromBits(long)", file="ByteSize.cs"];
m0_11 [label="Exit Humanizer.Bytes.ByteSize.FromBits(long)", span="115-115", cluster="Humanizer.Bytes.ByteSize.FromBits(long)", file="ByteSize.cs"];
m0_125 [label="Entry Humanizer.Bytes.ByteSize.operator <=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="287-287", cluster="Humanizer.Bytes.ByteSize.operator <=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_126 [label="return b1.Bits <= b2.Bits;", span="289-289", cluster="Humanizer.Bytes.ByteSize.operator <=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_127 [label="Exit Humanizer.Bytes.ByteSize.operator <=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="287-287", cluster="Humanizer.Bytes.ByteSize.operator <=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_30 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="ByteSize.cs"];
m0_122 [label="Entry Humanizer.Bytes.ByteSize.operator <(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="282-282", cluster="Humanizer.Bytes.ByteSize.operator <(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_123 [label="return b1.Bits < b2.Bits;", span="284-284", cluster="Humanizer.Bytes.ByteSize.operator <(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_124 [label="Exit Humanizer.Bytes.ByteSize.operator <(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="282-282", cluster="Humanizer.Bytes.ByteSize.operator <(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_171 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="ByteSize.cs"];
m0_27 [label="Entry Humanizer.Bytes.ByteSize.ToString()", span="151-151", cluster="Humanizer.Bytes.ByteSize.ToString()", file="ByteSize.cs"];
m0_28 [label="return string.Format(''{0} {1}'', LargestWholeNumberValue, LargestWholeNumberSymbol);", span="153-153", cluster="Humanizer.Bytes.ByteSize.ToString()", file="ByteSize.cs"];
m0_29 [label="Exit Humanizer.Bytes.ByteSize.ToString()", span="151-151", cluster="Humanizer.Bytes.ByteSize.ToString()", file="ByteSize.cs"];
m0_172 [label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="ByteSize.cs"];
m0_86 [label="Entry Humanizer.Bytes.ByteSize.AddBytes(double)", span="222-222", cluster="Humanizer.Bytes.ByteSize.AddBytes(double)", file="ByteSize.cs"];
m0_87 [label="return this + FromBytes(value);", span="224-224", cluster="Humanizer.Bytes.ByteSize.AddBytes(double)", file="ByteSize.cs"];
m0_88 [label="Exit Humanizer.Bytes.ByteSize.AddBytes(double)", span="222-222", cluster="Humanizer.Bytes.ByteSize.AddBytes(double)", file="ByteSize.cs"];
m0_175 [label="Entry char.IsDigit(char)", span="0-0", cluster="char.IsDigit(char)", file="ByteSize.cs"];
m0_92 [label="Entry Humanizer.Bytes.ByteSize.AddMegabytes(double)", span="232-232", cluster="Humanizer.Bytes.ByteSize.AddMegabytes(double)", file="ByteSize.cs"];
m0_93 [label="return this + FromMegabytes(value);", span="234-234", cluster="Humanizer.Bytes.ByteSize.AddMegabytes(double)", file="ByteSize.cs"];
m0_94 [label="Exit Humanizer.Bytes.ByteSize.AddMegabytes(double)", span="232-232", cluster="Humanizer.Bytes.ByteSize.AddMegabytes(double)", file="ByteSize.cs"];
m0_80 [label="Entry Humanizer.Bytes.ByteSize.Add(Humanizer.Bytes.ByteSize)", span="212-212", cluster="Humanizer.Bytes.ByteSize.Add(Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_81 [label="return new ByteSize(Bits + bs.Bits);", span="214-214", cluster="Humanizer.Bytes.ByteSize.Add(Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_82 [label="Exit Humanizer.Bytes.ByteSize.Add(Humanizer.Bytes.ByteSize)", span="212-212", cluster="Humanizer.Bytes.ByteSize.Add(Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_0 [label="Entry Humanizer.Bytes.ByteSize.ByteSize(double)", span="102-102", cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="ByteSize.cs"];
m0_1 [label="Bits = (long)Math.Ceiling(byteSize * BitsInByte)", span="106-106", cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="ByteSize.cs"];
m0_2 [label="Bytes = byteSize", span="108-108", cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="ByteSize.cs"];
m0_3 [label="Kilobytes = byteSize / BytesInKilobyte", span="109-109", cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="ByteSize.cs"];
m0_4 [label="Megabytes = byteSize / BytesInMegabyte", span="110-110", cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="ByteSize.cs"];
m0_5 [label="Gigabytes = byteSize / BytesInGigabyte", span="111-111", cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="ByteSize.cs"];
m0_6 [label="Terabytes = byteSize / BytesInTerabyte", span="112-112", cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="ByteSize.cs"];
m0_7 [label="Exit Humanizer.Bytes.ByteSize.ByteSize(double)", span="102-102", cluster="Humanizer.Bytes.ByteSize.ByteSize(double)", file="ByteSize.cs"];
m0_18 [label="Entry Humanizer.Bytes.ByteSize.FromMegabytes(double)", span="130-130", cluster="Humanizer.Bytes.ByteSize.FromMegabytes(double)", file="ByteSize.cs"];
m0_19 [label="return new ByteSize(value * BytesInMegabyte);", span="132-132", cluster="Humanizer.Bytes.ByteSize.FromMegabytes(double)", file="ByteSize.cs"];
m0_20 [label="Exit Humanizer.Bytes.ByteSize.FromMegabytes(double)", span="130-130", cluster="Humanizer.Bytes.ByteSize.FromMegabytes(double)", file="ByteSize.cs"];
m0_134 [label="Entry Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", span="302-302", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_135 [label="string.IsNullOrWhiteSpace(s)", span="305-305", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_138 [label="s = s.TrimStart()", span="312-312", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_136 [label="throw new ArgumentNullException(''s'', ''String is null or whitespace'');", span="306-306", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_137 [label="result = new ByteSize()", span="309-309", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_139 [label="int num", span="314-314", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_142 [label="num < s.Length", span="318-318", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_143 [label="!(char.IsDigit(s[num]) || s[num] == '.')", span="319-319", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_149 [label="string numberPart = s.Substring(0, lastNumber).Trim()", span="331-331", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_150 [label="string sizePart = s.Substring(lastNumber, s.Length - lastNumber).Trim()", span="332-332", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_140 [label="var found = false", span="315-315", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_141 [label="num = 0", span="318-318", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_146 [label="found == false", span="325-325", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_145 [label="num++", span="318-318", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_148 [label="int lastNumber = num", span="328-328", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_144 [label="found = true", span="321-321", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_147 [label="return false;", span="326-326", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_152 [label="!double.TryParse(numberPart, out number)", span="336-336", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_151 [label="double number", span="335-335", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_154 [label="sizePart.ToUpper()", span="340-340", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_156 [label="sizePart == BitSymbol", span="343-343", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_153 [label="return false;", span="337-337", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_157 [label="number % 1 != 0", span="345-345", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_159 [label="result = FromBits((long)number)", span="348-348", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_160 [label="result = FromBytes(number)", span="352-352", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_162 [label="result = FromKilobytes(number)", span="357-357", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_164 [label="result = FromMegabytes(number)", span="361-361", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_166 [label="result = FromGigabytes(number)", span="365-365", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_168 [label="result = FromTerabytes(number)", span="369-369", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_155 [label=ByteSymbol, span="342-342", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_161 [label=KilobyteSymbol, span="356-356", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_163 [label=MegabyteSymbol, span="360-360", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_165 [label=GigabyteSymbol, span="364-364", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_167 [label=TerabyteSymbol, span="368-368", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_158 [label="return false;", span="346-346", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_169 [label="return true;", span="373-373", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_170 [label="Exit Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", span="302-302", cluster="Humanizer.Bytes.ByteSize.TryParse(string, out Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_12 [label="Entry Humanizer.Bytes.ByteSize.FromBytes(double)", span="120-120", cluster="Humanizer.Bytes.ByteSize.FromBytes(double)", file="ByteSize.cs"];
m0_13 [label="return new ByteSize(value);", span="122-122", cluster="Humanizer.Bytes.ByteSize.FromBytes(double)", file="ByteSize.cs"];
m0_14 [label="Exit Humanizer.Bytes.ByteSize.FromBytes(double)", span="120-120", cluster="Humanizer.Bytes.ByteSize.FromBytes(double)", file="ByteSize.cs"];
m0_51 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="ByteSize.cs"];
m0_31 [label="Entry Humanizer.Bytes.ByteSize.ToString(string)", span="156-156", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs"];
m0_32 [label="!format.Contains(''#'') && !format.Contains(''0'')", span="158-158", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs"];
m0_33 [label="format = ''#.## '' + format", span="159-159", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs"];
m0_34 [label="Func<string, bool> has = s => format.IndexOf(s, StringComparison.CurrentCultureIgnoreCase) != -1", span="161-161", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs"];
m0_35 [label="Func<double, string> output = n => n.ToString(format)", span="162-162", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs"];
m0_44 [label="format.IndexOf(ByteSymbol, StringComparison.Ordinal) != -1", span="174-174", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs"];
m0_46 [label="format.IndexOf(BitSymbol, StringComparison.Ordinal) != -1", span="177-177", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs"];
m0_48 [label="return string.Format(''{0} {1}'', LargestWholeNumberValue.ToString(format), LargestWholeNumberSymbol);", span="180-180", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs"];
m0_36 [label="has(TerabyteSymbol)", span="164-164", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs"];
m0_38 [label="has(GigabyteSymbol)", span="166-166", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs"];
m0_40 [label="has(MegabyteSymbol)", span="168-168", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs"];
m0_42 [label="has(KilobyteSymbol)", span="170-170", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs"];
m0_37 [label="return output(Terabytes);", span="165-165", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs"];
m0_39 [label="return output(Gigabytes);", span="167-167", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs"];
m0_41 [label="return output(Megabytes);", span="169-169", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs"];
m0_43 [label="return output(Kilobytes);", span="171-171", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs"];
m0_45 [label="return output(Bytes);", span="175-175", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs"];
m0_47 [label="return output(Bits);", span="178-178", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs"];
m0_49 [label="Exit Humanizer.Bytes.ByteSize.ToString(string)", span="156-156", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ByteSize.cs"];
m0_69 [label="Entry Humanizer.Bytes.ByteSize.Equals(Humanizer.Bytes.ByteSize)", span="197-197", cluster="Humanizer.Bytes.ByteSize.Equals(Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_70 [label="return Bits == value.Bits;", span="199-199", cluster="Humanizer.Bytes.ByteSize.Equals(Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_71 [label="Exit Humanizer.Bytes.ByteSize.Equals(Humanizer.Bytes.ByteSize)", span="197-197", cluster="Humanizer.Bytes.ByteSize.Equals(Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_101 [label="Entry Humanizer.Bytes.ByteSize.Subtract(Humanizer.Bytes.ByteSize)", span="247-247", cluster="Humanizer.Bytes.ByteSize.Subtract(Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_102 [label="return new ByteSize(Bits - bs.Bits);", span="249-249", cluster="Humanizer.Bytes.ByteSize.Subtract(Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_103 [label="Exit Humanizer.Bytes.ByteSize.Subtract(Humanizer.Bytes.ByteSize)", span="247-247", cluster="Humanizer.Bytes.ByteSize.Subtract(Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_110 [label="Entry Humanizer.Bytes.ByteSize.operator -(Humanizer.Bytes.ByteSize)", span="262-262", cluster="Humanizer.Bytes.ByteSize.operator -(Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_111 [label="return new ByteSize(-b.Bits);", span="264-264", cluster="Humanizer.Bytes.ByteSize.operator -(Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_112 [label="Exit Humanizer.Bytes.ByteSize.operator -(Humanizer.Bytes.ByteSize)", span="262-262", cluster="Humanizer.Bytes.ByteSize.operator -(Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_174 [label="Entry string.TrimStart(params char[])", span="0-0", cluster="string.TrimStart(params char[])", file="ByteSize.cs"];
m0_95 [label="Entry Humanizer.Bytes.ByteSize.AddGigabytes(double)", span="237-237", cluster="Humanizer.Bytes.ByteSize.AddGigabytes(double)", file="ByteSize.cs"];
m0_96 [label="return this + FromGigabytes(value);", span="239-239", cluster="Humanizer.Bytes.ByteSize.AddGigabytes(double)", file="ByteSize.cs"];
m0_97 [label="Exit Humanizer.Bytes.ByteSize.AddGigabytes(double)", span="237-237", cluster="Humanizer.Bytes.ByteSize.AddGigabytes(double)", file="ByteSize.cs"];
m0_180 [label="Entry Humanizer.Bytes.ByteSize.Parse(string)", span="376-376", cluster="Humanizer.Bytes.ByteSize.Parse(string)", file="ByteSize.cs"];
m0_181 [label="ByteSize result", span="378-378", cluster="Humanizer.Bytes.ByteSize.Parse(string)", file="ByteSize.cs"];
m0_182 [label="TryParse(s, out result)", span="380-380", cluster="Humanizer.Bytes.ByteSize.Parse(string)", file="ByteSize.cs"];
m0_183 [label="return result;", span="381-381", cluster="Humanizer.Bytes.ByteSize.Parse(string)", file="ByteSize.cs"];
m0_184 [label="throw new FormatException(''Value is not in the correct format'');", span="383-383", cluster="Humanizer.Bytes.ByteSize.Parse(string)", file="ByteSize.cs"];
m0_185 [label="Exit Humanizer.Bytes.ByteSize.Parse(string)", span="376-376", cluster="Humanizer.Bytes.ByteSize.Parse(string)", file="ByteSize.cs"];
m0_179 [label="Entry string.ToUpper()", span="0-0", cluster="string.ToUpper()", file="ByteSize.cs"];
m0_176 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="ByteSize.cs"];
m0_76 [label="Entry Humanizer.Bytes.ByteSize.CompareTo(Humanizer.Bytes.ByteSize)", span="207-207", cluster="Humanizer.Bytes.ByteSize.CompareTo(Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_77 [label="return Bits.CompareTo(other.Bits);", span="209-209", cluster="Humanizer.Bytes.ByteSize.CompareTo(Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_78 [label="Exit Humanizer.Bytes.ByteSize.CompareTo(Humanizer.Bytes.ByteSize)", span="207-207", cluster="Humanizer.Bytes.ByteSize.CompareTo(Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_75 [label="Entry long.GetHashCode()", span="0-0", cluster="long.GetHashCode()", file="ByteSize.cs"];
m0_128 [label="Entry Humanizer.Bytes.ByteSize.operator >(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="292-292", cluster="Humanizer.Bytes.ByteSize.operator >(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_129 [label="return b1.Bits > b2.Bits;", span="294-294", cluster="Humanizer.Bytes.ByteSize.operator >(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_130 [label="Exit Humanizer.Bytes.ByteSize.operator >(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="292-292", cluster="Humanizer.Bytes.ByteSize.operator >(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_24 [label="Entry Humanizer.Bytes.ByteSize.FromTerabytes(double)", span="140-140", cluster="Humanizer.Bytes.ByteSize.FromTerabytes(double)", file="ByteSize.cs"];
m0_25 [label="return new ByteSize(value * BytesInTerabyte);", span="142-142", cluster="Humanizer.Bytes.ByteSize.FromTerabytes(double)", file="ByteSize.cs"];
m0_26 [label="Exit Humanizer.Bytes.ByteSize.FromTerabytes(double)", span="140-140", cluster="Humanizer.Bytes.ByteSize.FromTerabytes(double)", file="ByteSize.cs"];
m0_186 [label="Entry System.FormatException.FormatException(string)", span="0-0", cluster="System.FormatException.FormatException(string)", file="ByteSize.cs"];
m0_178 [label="Entry double.TryParse(string, out double)", span="0-0", cluster="double.TryParse(string, out double)", file="ByteSize.cs"];
m0_21 [label="Entry Humanizer.Bytes.ByteSize.FromGigabytes(double)", span="135-135", cluster="Humanizer.Bytes.ByteSize.FromGigabytes(double)", file="ByteSize.cs"];
m0_22 [label="return new ByteSize(value * BytesInGigabyte);", span="137-137", cluster="Humanizer.Bytes.ByteSize.FromGigabytes(double)", file="ByteSize.cs"];
m0_23 [label="Exit Humanizer.Bytes.ByteSize.FromGigabytes(double)", span="135-135", cluster="Humanizer.Bytes.ByteSize.FromGigabytes(double)", file="ByteSize.cs"];
m0_15 [label="Entry Humanizer.Bytes.ByteSize.FromKilobytes(double)", span="125-125", cluster="Humanizer.Bytes.ByteSize.FromKilobytes(double)", file="ByteSize.cs"];
m0_16 [label="return new ByteSize(value * BytesInKilobyte);", span="127-127", cluster="Humanizer.Bytes.ByteSize.FromKilobytes(double)", file="ByteSize.cs"];
m0_17 [label="Exit Humanizer.Bytes.ByteSize.FromKilobytes(double)", span="125-125", cluster="Humanizer.Bytes.ByteSize.FromKilobytes(double)", file="ByteSize.cs"];
m0_57 [label="Entry lambda expression", span="162-162", cluster="lambda expression", file="ByteSize.cs"];
m0_55 [label="format.IndexOf(s, StringComparison.CurrentCultureIgnoreCase) != -1", span="161-161", cluster="lambda expression", file="ByteSize.cs"];
m0_58 [label="n.ToString(format)", span="162-162", cluster="lambda expression", file="ByteSize.cs"];
m0_54 [label="Entry lambda expression", span="161-161", cluster="lambda expression", file="ByteSize.cs"];
m0_56 [label="Exit lambda expression", span="161-161", cluster="lambda expression", file="ByteSize.cs"];
m0_59 [label="Exit lambda expression", span="162-162", cluster="lambda expression", file="ByteSize.cs"];
m0_98 [label="Entry Humanizer.Bytes.ByteSize.AddTerabytes(double)", span="242-242", cluster="Humanizer.Bytes.ByteSize.AddTerabytes(double)", file="ByteSize.cs"];
m0_99 [label="return this + FromTerabytes(value);", span="244-244", cluster="Humanizer.Bytes.ByteSize.AddTerabytes(double)", file="ByteSize.cs"];
m0_100 [label="Exit Humanizer.Bytes.ByteSize.AddTerabytes(double)", span="242-242", cluster="Humanizer.Bytes.ByteSize.AddTerabytes(double)", file="ByteSize.cs"];
m0_52 [label="Entry string.IndexOf(string, System.StringComparison)", span="0-0", cluster="string.IndexOf(string, System.StringComparison)", file="ByteSize.cs"];
m0_72 [label="Entry Humanizer.Bytes.ByteSize.GetHashCode()", span="202-202", cluster="Humanizer.Bytes.ByteSize.GetHashCode()", file="ByteSize.cs"];
m0_73 [label="return Bits.GetHashCode();", span="204-204", cluster="Humanizer.Bytes.ByteSize.GetHashCode()", file="ByteSize.cs"];
m0_74 [label="Exit Humanizer.Bytes.ByteSize.GetHashCode()", span="202-202", cluster="Humanizer.Bytes.ByteSize.GetHashCode()", file="ByteSize.cs"];
m0_113 [label="Entry Humanizer.Bytes.ByteSize.operator --(Humanizer.Bytes.ByteSize)", span="267-267", cluster="Humanizer.Bytes.ByteSize.operator --(Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_114 [label="return new ByteSize(b.Bits--);", span="269-269", cluster="Humanizer.Bytes.ByteSize.operator --(Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_115 [label="Exit Humanizer.Bytes.ByteSize.operator --(Humanizer.Bytes.ByteSize)", span="267-267", cluster="Humanizer.Bytes.ByteSize.operator --(Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_131 [label="Entry Humanizer.Bytes.ByteSize.operator >=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="297-297", cluster="Humanizer.Bytes.ByteSize.operator >=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_132 [label="return b1.Bits >= b2.Bits;", span="299-299", cluster="Humanizer.Bytes.ByteSize.operator >=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_133 [label="Exit Humanizer.Bytes.ByteSize.operator >=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="297-297", cluster="Humanizer.Bytes.ByteSize.operator >=(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_116 [label="Entry Humanizer.Bytes.ByteSize.operator ==(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="272-272", cluster="Humanizer.Bytes.ByteSize.operator ==(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_117 [label="return b1.Bits == b2.Bits;", span="274-274", cluster="Humanizer.Bytes.ByteSize.operator ==(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_118 [label="Exit Humanizer.Bytes.ByteSize.operator ==(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="272-272", cluster="Humanizer.Bytes.ByteSize.operator ==(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_104 [label="Entry Humanizer.Bytes.ByteSize.operator +(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="252-252", cluster="Humanizer.Bytes.ByteSize.operator +(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_105 [label="return new ByteSize(b1.Bits + b2.Bits);", span="254-254", cluster="Humanizer.Bytes.ByteSize.operator +(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_106 [label="Exit Humanizer.Bytes.ByteSize.operator +(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", span="252-252", cluster="Humanizer.Bytes.ByteSize.operator +(Humanizer.Bytes.ByteSize, Humanizer.Bytes.ByteSize)", file="ByteSize.cs"];
m0_173 [label="Entry Humanizer.Bytes.ByteSize.ByteSize()", span="30-30", cluster="Humanizer.Bytes.ByteSize.ByteSize()", file="ByteSize.cs"];
m0_79 [label="Entry long.CompareTo(long)", span="0-0", cluster="long.CompareTo(long)", file="ByteSize.cs"];
m0_89 [label="Entry Humanizer.Bytes.ByteSize.AddKilobytes(double)", span="227-227", cluster="Humanizer.Bytes.ByteSize.AddKilobytes(double)", file="ByteSize.cs"];
m0_90 [label="return this + FromKilobytes(value);", span="229-229", cluster="Humanizer.Bytes.ByteSize.AddKilobytes(double)", file="ByteSize.cs"];
m0_91 [label="Exit Humanizer.Bytes.ByteSize.AddKilobytes(double)", span="227-227", cluster="Humanizer.Bytes.ByteSize.AddKilobytes(double)", file="ByteSize.cs"];
m0_53 [label="Entry double.ToString(string)", span="0-0", cluster="double.ToString(string)", file="ByteSize.cs"];
m0_8 [label="Entry System.Math.Ceiling(double)", span="0-0", cluster="System.Math.Ceiling(double)", file="ByteSize.cs"];
m0_187 [label="Humanizer.Bytes.ByteSize", span="", file="ByteSize.cs"];
m0_188 [label="ref Humanizer.Bytes.ByteSize", span="", file="ByteSize.cs"];
m0_189 [label="ref Humanizer.Bytes.ByteSize", span="", file="ByteSize.cs"];
m0_190 [label=string, span="", file="ByteSize.cs"];
m0_191 [label="ref Humanizer.Bytes.ByteSize", span="", file="ByteSize.cs"];
m0_192 [label="ref Humanizer.Bytes.ByteSize", span="", file="ByteSize.cs"];
m0_193 [label="ref Humanizer.Bytes.ByteSize", span="", file="ByteSize.cs"];
m0_194 [label="ref Humanizer.Bytes.ByteSize", span="", file="ByteSize.cs"];
m0_195 [label="ref Humanizer.Bytes.ByteSize", span="", file="ByteSize.cs"];
m0_196 [label="ref Humanizer.Bytes.ByteSize", span="", file="ByteSize.cs"];
m0_197 [label="ref Humanizer.Bytes.ByteSize", span="", file="ByteSize.cs"];
m1_23 [label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreLeftIntact()", span="84-84", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreLeftIntact()", file="Configurator.cs"];
m1_24 [label="Assert.Equal(\r\n                ''HTML'',\r\n                ''HTML''.Humanize())", span="86-88", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreLeftIntact()", file="Configurator.cs"];
m1_25 [label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreLeftIntact()", span="84-84", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.AcronymsAreLeftIntact()", file="Configurator.cs"];
m1_3 [label="Entry string.Humanize()", span="74-74", cluster="string.Humanize()", file="Configurator.cs"];
m1_0 [label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.PascalCaseInputStringIsTurnedIntoSentence()", span="32-32", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.PascalCaseInputStringIsTurnedIntoSentence()", file="Configurator.cs"];
m1_1 [label="Assert.Equal(\r\n                ''Pascal case input string is turned into sentence'',\r\n                ''PascalCaseInputStringIsTurnedIntoSentence''.Humanize())", span="34-36", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.PascalCaseInputStringIsTurnedIntoSentence()", file="Configurator.cs"];
m1_2 [label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.PascalCaseInputStringIsTurnedIntoSentence()", span="32-32", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.PascalCaseInputStringIsTurnedIntoSentence()", file="Configurator.cs"];
m1_8 [label="Entry lambda expression", span="18-18", cluster="lambda expression", file="Configurator.cs"];
m1_9 [label="new ArabicFormatter()", span="18-18", cluster="lambda expression", file="Configurator.cs", color=green, community=0];
m1_10 [label="Exit lambda expression", span="18-18", cluster="lambda expression", file="Configurator.cs"];
m1_30 [label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", span="100-100", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", file="Configurator.cs"];
m1_31 [label="Assert.Equal(\r\n                ''Can Return Title Case'',\r\n                ''Can_return_title_Case''.Humanize(LetterCasing.Title))", span="102-104", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", file="Configurator.cs"];
m1_32 [label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", span="100-100", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", file="Configurator.cs"];
m1_4 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="Configurator.cs"];
m1_36 [label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCase()", span="116-116", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCase()", file="Configurator.cs"];
m1_37 [label="Assert.Equal(\r\n                ''can return lower case'',\r\n                ''CanReturnLowerCase''.Humanize(LetterCasing.LowerCase))", span="118-120", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCase()", file="Configurator.cs"];
m1_38 [label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCase()", span="116-116", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCase()", file="Configurator.cs"];
m1_39 [label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", span="124-124", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", file="Configurator.cs"];
m1_40 [label="Assert.Equal(\r\n                ''lowercase'',\r\n                ''LOWERCASE''.Humanize(LetterCasing.LowerCase))", span="126-128", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", file="Configurator.cs"];
m1_41 [label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", span="124-124", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", file="Configurator.cs"];
m1_11 [label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", span="54-54", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", file="Configurator.cs"];
m1_26 [label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", span="92-92", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", file="Configurator.cs"];
m1_27 [label="Assert.Equal(\r\n                ''Can Return Title Case'',\r\n                ''CanReturnTitleCase''.Humanize(LetterCasing.Title))", span="94-96", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", file="Configurator.cs"];
m1_28 [label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", span="92-92", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", file="Configurator.cs"];
m1_14 [label="Exit lambda expression", span="19-19", cluster="lambda expression", file="Configurator.cs"];
m1_15 [label="Entry Humanizer.Localisation.Formatters.CzechSlovakPolishFormatter.CzechSlovakPolishFormatter()", span="2-2", cluster="Humanizer.Localisation.Formatters.CzechSlovakPolishFormatter.CzechSlovakPolishFormatter()", file="Configurator.cs"];
m1_16 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="Configurator.cs"];
m1_42 [label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoUpperCase()", span="132-132", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoUpperCase()", file="Configurator.cs"];
m1_43 [label="Assert.Equal(\r\n                ''CAN HUMANIZE INTO UPPER CASE'',\r\n                ''CanHumanizeIntoUpperCase''.Humanize(LetterCasing.AllCaps))", span="134-136", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoUpperCase()", file="Configurator.cs"];
m1_44 [label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoUpperCase()", span="132-132", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanHumanizeIntoUpperCase()", file="Configurator.cs"];
m1_33 [label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.TitleHumanizationHonorsAllCaps()", span="108-108", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.TitleHumanizationHonorsAllCaps()", file="Configurator.cs"];
m1_34 [label="Assert.Equal(\r\n                ''Title Humanization Honors ALLCAPS'',\r\n                ''Title_humanization_Honors_ALLCAPS''.Humanize(LetterCasing.Title))", span="110-112", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.TitleHumanizationHonorsAllCaps()", file="Configurator.cs"];
m1_35 [label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.TitleHumanizationHonorsAllCaps()", span="108-108", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.TitleHumanizationHonorsAllCaps()", file="Configurator.cs"];
m1_5 [label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", span="40-40", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", file="Configurator.cs"];
m1_6 [label="Assert.Equal(\r\n                ''When I use an input a here'',\r\n                ''WhenIUseAnInputAHere''.Humanize())", span="42-44", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", file="Configurator.cs"];
m1_7 [label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", span="40-40", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringContainsConsequtiveCaptialLetters_ThenTheyAreTurnedIntoOneLetterWords()", file="Configurator.cs"];
m1_29 [label="Entry string.Humanize(Humanizer.LetterCasing)", span="86-86", cluster="string.Humanize(Humanizer.LetterCasing)", file="Configurator.cs"];
m1_20 [label="new CzechSlovakPolishFormatter()", span="21-21", cluster="lambda expression", file="Configurator.cs"];
m1_21 [label="Exit lambda expression", span="21-21", cluster="lambda expression", file="Configurator.cs"];
m1_22 [label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", span="76-76", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", file="Configurator.cs"];
m1_19 [label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringPreservesCasing()", span="68-68", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringPreservesCasing()", file="Configurator.cs"];
m1_13 [label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", span="54-54", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", color=green, community=0, file="Configurator.cs"];
m1_12 [label="Assert.Equal(''Number is at the end 100'', ''NumberIsAtTheEnd100''.Humanize())", span="56-56", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", file="Configurator.cs"];
m1_17 [label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringPreservesCasing()", span="68-68", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringPreservesCasing()", file="Configurator.cs"];
m1_18 [label="Assert.Equal(\r\n                ''Underscored input String is turned INTO sentence'',\r\n                ''Underscored_input_String_is_turned_INTO_sentence''.Humanize())", span="70-72", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.UnderscoredInputStringPreservesCasing()", file="Configurator.cs"];
m1_45 [label="Entry Humanizer.Tests.Extensions.StringExtensionsTests.CanTurnIntoUpperCasewhenUsingUnderscores()", span="140-140", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanTurnIntoUpperCasewhenUsingUnderscores()", file="Configurator.cs"];
m1_46 [label="Assert.Equal(\r\n                ''CAN HUMANIZE INTO UPPER CASE'',\r\n                ''Can_Humanize_into_Upper_case''.Humanize(LetterCasing.AllCaps))", span="142-144", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanTurnIntoUpperCasewhenUsingUnderscores()", file="Configurator.cs"];
m1_47 [label="Exit Humanizer.Tests.Extensions.StringExtensionsTests.CanTurnIntoUpperCasewhenUsingUnderscores()", span="140-140", cluster="Humanizer.Tests.Extensions.StringExtensionsTests.CanTurnIntoUpperCasewhenUsingUnderscores()", file="Configurator.cs"];
m3_8 [label="Entry Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", span="50-50", cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_9 [label="Assert.Equal(plural, plural.Pluralize(Plurality.CouldBeEither))", span="52-52", cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_10 [label="Assert.Equal(plural, singular.Pluralize(Plurality.CouldBeEither))", span="53-53", cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_11 [label="Exit Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", span="50-50", cluster="Humanizer.Tests.InflectorTests.PluralizeWordsWithUnknownPlurality(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_34 [label="Entry string.Hyphenate()", span="292-292", cluster="string.Hyphenate()", file="CzechSlovakPolishFormatter.cs"];
m3_27 [label="Entry Humanizer.Tests.InflectorTests.Dasherize(string, string)", span="96-96", cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_28 [label="Assert.Equal(input.Dasherize(), expectedOutput)", span="98-98", cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_29 [label="Exit Humanizer.Tests.InflectorTests.Dasherize(string, string)", span="96-96", cluster="Humanizer.Tests.InflectorTests.Dasherize(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_16 [label="Entry Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord(string, string)", span="65-65", cluster="Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_17 [label="Assert.Equal(singular, singular.Singularize(Plurality.Singular))", span="67-67", cluster="Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_18 [label="Exit Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord(string, string)", span="65-65", cluster="Humanizer.Tests.InflectorTests.SingularizeAlreadySingularWord(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_39 [label="Entry Humanizer.Tests.InflectorTests.Camelize(string, string)", span="133-133", cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_40 [label="Assert.Equal(expectedOutput, input.Camelize())", span="135-135", cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_41 [label="Exit Humanizer.Tests.InflectorTests.Camelize(string, string)", span="133-133", cluster="Humanizer.Tests.InflectorTests.Camelize(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_47 [label="Entry Humanizer.Tests.PluralTestSource.GetEnumerator()", span="154-154", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_48 [label="yield return new object[] {''search'', ''searches''};", span="156-156", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_49 [label="yield return new object[] {''switch'', ''switches''};", span="157-157", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_50 [label="yield return new object[] {''fix'', ''fixes''};", span="158-158", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_51 [label="yield return new object[] {''box'', ''boxes''};", span="159-159", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_52 [label="yield return new object[] {''process'', ''processes''};", span="160-160", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_53 [label="yield return new object[] {''address'', ''addresses''};", span="161-161", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_54 [label="yield return new object[] {''case'', ''cases''};", span="162-162", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_55 [label="yield return new object[] {''stack'', ''stacks''};", span="163-163", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_56 [label="yield return new object[] {''wish'', ''wishes''};", span="164-164", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_57 [label="yield return new object[] {''fish'', ''fish''};", span="165-165", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_58 [label="yield return new object[] {''category'', ''categories''};", span="167-167", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_59 [label="yield return new object[] {''query'', ''queries''};", span="168-168", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_60 [label="yield return new object[] {''ability'', ''abilities''};", span="169-169", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_61 [label="yield return new object[] {''agency'', ''agencies''};", span="170-170", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_62 [label="yield return new object[] {''movie'', ''movies''};", span="171-171", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_63 [label="yield return new object[] {''archive'', ''archives''};", span="173-173", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_64 [label="yield return new object[] {''index'', ''indices''};", span="175-175", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_65 [label="yield return new object[] {''wife'', ''wives''};", span="177-177", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_66 [label="yield return new object[] {''safe'', ''saves''};", span="178-178", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_67 [label="yield return new object[] {''half'', ''halves''};", span="179-179", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_68 [label="yield return new object[] {''move'', ''moves''};", span="181-181", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_69 [label="yield return new object[] {''salesperson'', ''salespeople''};", span="183-183", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_70 [label="yield return new object[] {''person'', ''people''};", span="184-184", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_71 [label="yield return new object[] {''spokesman'', ''spokesmen''};", span="186-186", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_72 [label="yield return new object[] {''man'', ''men''};", span="187-187", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_73 [label="yield return new object[] {''woman'', ''women''};", span="188-188", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_74 [label="yield return new object[] {''basis'', ''bases''};", span="190-190", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_75 [label="yield return new object[] {''diagnosis'', ''diagnoses''};", span="191-191", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_76 [label="yield return new object[] {''datum'', ''data''};", span="193-193", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_77 [label="yield return new object[] {''medium'', ''media''};", span="194-194", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_78 [label="yield return new object[] {''analysis'', ''analyses''};", span="195-195", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_79 [label="yield return new object[] {''node_child'', ''node_children''};", span="197-197", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_80 [label="yield return new object[] {''child'', ''children''};", span="198-198", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_81 [label="yield return new object[] {''experience'', ''experiences''};", span="200-200", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_82 [label="yield return new object[] {''day'', ''days''};", span="201-201", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_83 [label="yield return new object[] {''comment'', ''comments''};", span="203-203", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_84 [label="yield return new object[] {''foobar'', ''foobars''};", span="204-204", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_85 [label="yield return new object[] {''newsletter'', ''newsletters''};", span="205-205", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_86 [label="yield return new object[] {''old_news'', ''old_news''};", span="207-207", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_87 [label="yield return new object[] {''news'', ''news''};", span="208-208", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_88 [label="yield return new object[] {''series'', ''series''};", span="210-210", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_89 [label="yield return new object[] {''species'', ''species''};", span="211-211", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_90 [label="yield return new object[] {''quiz'', ''quizzes''};", span="213-213", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_91 [label="yield return new object[] {''perspective'', ''perspectives''};", span="215-215", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_92 [label="yield return new object[] {''ox'', ''oxen''};", span="217-217", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_93 [label="yield return new object[] {''photo'', ''photos''};", span="218-218", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_94 [label="yield return new object[] {''buffalo'', ''buffaloes''};", span="219-219", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_95 [label="yield return new object[] {''tomato'', ''tomatoes''};", span="220-220", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_96 [label="yield return new object[] {''dwarf'', ''dwarves''};", span="221-221", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_97 [label="yield return new object[] {''elf'', ''elves''};", span="222-222", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_98 [label="yield return new object[] {''information'', ''information''};", span="223-223", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_99 [label="yield return new object[] {''equipment'', ''equipment''};", span="224-224", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_100 [label="yield return new object[] {''bus'', ''buses''};", span="225-225", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_101 [label="yield return new object[] {''status'', ''statuses''};", span="226-226", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_102 [label="yield return new object[] {''status_code'', ''status_codes''};", span="227-227", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_103 [label="yield return new object[] {''mouse'', ''mice''};", span="228-228", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_104 [label="yield return new object[] {''louse'', ''lice''};", span="230-230", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_105 [label="yield return new object[] {''house'', ''houses''};", span="231-231", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_106 [label="yield return new object[] {''octopus'', ''octopi''};", span="232-232", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_107 [label="yield return new object[] {''virus'', ''viri''};", span="233-233", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_108 [label="yield return new object[] {''alias'', ''aliases''};", span="234-234", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_109 [label="yield return new object[] {''portfolio'', ''portfolios''};", span="235-235", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_110 [label="yield return new object[] {''vertex'', ''vertices''};", span="237-237", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_111 [label="yield return new object[] {''matrix'', ''matrices''};", span="238-238", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_112 [label="yield return new object[] {''axis'', ''axes''};", span="240-240", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_113 [label="yield return new object[] {''testis'', ''testes''};", span="241-241", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_114 [label="yield return new object[] {''crisis'', ''crises''};", span="242-242", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_115 [label="yield return new object[] {''rice'', ''rice''};", span="244-244", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_116 [label="yield return new object[] {''shoe'', ''shoes''};", span="245-245", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_117 [label="yield return new object[] {''horse'', ''horses''};", span="247-247", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_118 [label="yield return new object[] {''prize'', ''prizes''};", span="248-248", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_119 [label="yield return new object[] {''edge'', ''edges''};", span="249-249", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_120 [label="yield return new object[] {''goose'', ''geese''};", span="252-252", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_121 [label="yield return new object[] {''deer'', ''deer''};", span="253-253", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_122 [label="yield return new object[] {''sheep'', ''sheep''};", span="254-254", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_123 [label="yield return new object[] {''wolf'', ''wolves''};", span="255-255", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_124 [label="yield return new object[] {''volcano'', ''volcanoes''};", span="256-256", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_125 [label="yield return new object[] {''aircraft'', ''aircraft''};", span="257-257", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_126 [label="yield return new object[] {''alumna'', ''alumnae''};", span="258-258", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_127 [label="yield return new object[] {''alumnus'', ''alumni''};", span="259-259", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_128 [label="yield return new object[] {''fungus'', ''fungi''};", span="260-260", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_129 [label="Exit Humanizer.Tests.PluralTestSource.GetEnumerator()", span="154-154", cluster="Humanizer.Tests.PluralTestSource.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_4 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="CzechSlovakPolishFormatter.cs"];
m3_19 [label="Entry Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", span="72-72", cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_20 [label="Assert.Equal(singular, singular.Singularize(Plurality.CouldBeEither))", span="74-74", cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_21 [label="Assert.Equal(singular, plural.Singularize(Plurality.CouldBeEither))", span="75-75", cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_22 [label="Exit Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", span="72-72", cluster="Humanizer.Tests.InflectorTests.SingularizeWordsWithUnknownSingularity(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_43 [label="Entry Humanizer.Tests.InflectorTests.Underscore(string, string)", span="146-146", cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_44 [label="Assert.Equal(expectedOuput, input.Underscore())", span="148-148", cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_45 [label="Exit Humanizer.Tests.InflectorTests.Underscore(string, string)", span="146-146", cluster="Humanizer.Tests.InflectorTests.Underscore(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_3 [label="Entry string.Pluralize(Humanizer.Plurality)", span="170-170", cluster="string.Pluralize(Humanizer.Plurality)", file="CzechSlovakPolishFormatter.cs"];
m3_38 [label="Entry string.Pascalize()", span="249-249", cluster="string.Pascalize()", file="CzechSlovakPolishFormatter.cs"];
m3_23 [label="Entry Humanizer.Tests.InflectorTests.Titleize(string, string)", span="86-86", cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_24 [label="Assert.Equal(expectedOuput, input.Titleize())", span="88-88", cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_25 [label="Exit Humanizer.Tests.InflectorTests.Titleize(string, string)", span="86-86", cluster="Humanizer.Tests.InflectorTests.Titleize(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_26 [label="Entry string.Titleize()", span="239-239", cluster="string.Titleize()", file="CzechSlovakPolishFormatter.cs"];
m3_0 [label="Entry Humanizer.Tests.InflectorTests.Pluralize(string, string)", span="36-36", cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_1 [label="Assert.Equal(plural, singular.Pluralize())", span="38-38", cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_2 [label="Exit Humanizer.Tests.InflectorTests.Pluralize(string, string)", span="36-36", cluster="Humanizer.Tests.InflectorTests.Pluralize(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_30 [label="Entry string.Dasherize()", span="282-282", cluster="string.Dasherize()", file="CzechSlovakPolishFormatter.cs"];
m3_12 [label="Entry Humanizer.Tests.InflectorTests.Singularize(string, string)", span="58-58", cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_13 [label="Assert.Equal(singular, plural.Singularize())", span="60-60", cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_14 [label="Exit Humanizer.Tests.InflectorTests.Singularize(string, string)", span="58-58", cluster="Humanizer.Tests.InflectorTests.Singularize(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_35 [label="Entry Humanizer.Tests.InflectorTests.Pascalize(string, string)", span="119-119", cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_36 [label="Assert.Equal(expectedOutput, input.Pascalize())", span="121-121", cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_37 [label="Exit Humanizer.Tests.InflectorTests.Pascalize(string, string)", span="119-119", cluster="Humanizer.Tests.InflectorTests.Pascalize(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_31 [label="Entry Humanizer.Tests.InflectorTests.Hyphenate(string, string)", span="106-106", cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_32 [label="Assert.Equal(input.Hyphenate(), expectedOutput)", span="108-108", cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_33 [label="Exit Humanizer.Tests.InflectorTests.Hyphenate(string, string)", span="106-106", cluster="Humanizer.Tests.InflectorTests.Hyphenate(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_130 [label="Entry Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", span="263-263", cluster="Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_131 [label="return GetEnumerator();", span="265-265", cluster="Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_132 [label="Exit Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", span="263-263", cluster="Humanizer.Tests.PluralTestSource.System.Collections.IEnumerable.GetEnumerator()", file="CzechSlovakPolishFormatter.cs"];
m3_42 [label="Entry string.Camelize()", span="259-259", cluster="string.Camelize()", file="CzechSlovakPolishFormatter.cs"];
m3_46 [label="Entry string.Underscore()", span="270-270", cluster="string.Underscore()", file="CzechSlovakPolishFormatter.cs"];
m3_5 [label="Entry Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord(string, string)", span="43-43", cluster="Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_6 [label="Assert.Equal(plural, plural.Pluralize(Plurality.Plural))", span="45-45", cluster="Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_7 [label="Exit Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord(string, string)", span="43-43", cluster="Humanizer.Tests.InflectorTests.PluralizeAlreadyPluralWord(string, string)", file="CzechSlovakPolishFormatter.cs"];
m3_15 [label="Entry string.Singularize(Humanizer.Plurality)", span="194-194", cluster="string.Singularize(Humanizer.Plurality)", file="CzechSlovakPolishFormatter.cs"];
m3_133 [label="Humanizer.Tests.PluralTestSource", span="", file="CzechSlovakPolishFormatter.cs"];
m4_0 [label="Entry Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string)", span="4-4", cluster="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string)", file="DateHumanizeTests.cs"];
m4_1 [label="return Convert(number, numberString, GrammaticalGender.Masculine);", span="6-6", cluster="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string)", color=red, community=0, file="DateHumanizeTests.cs"];
m4_2 [label="Exit Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string)", span="4-4", cluster="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string)", file="DateHumanizeTests.cs"];
m4_3 [label="Entry Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string, Humanizer.GrammaticalGender)", span="9-9", cluster="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string, Humanizer.GrammaticalGender)", file="DateHumanizeTests.cs"];
m4_4 [label="number == 0", span="12-12", cluster="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string, Humanizer.GrammaticalGender)", color=red, community=0, file="DateHumanizeTests.cs"];
m4_6 [label="gender == GrammaticalGender.Feminine", span="15-15", cluster="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string, Humanizer.GrammaticalGender)", color=red, community=0, file="DateHumanizeTests.cs"];
m4_7 [label="return numberString + ''ª'';", span="16-16", cluster="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string, Humanizer.GrammaticalGender)", color=red, community=0, file="DateHumanizeTests.cs"];
m4_8 [label="return numberString + ''º'';", span="18-18", cluster="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string, Humanizer.GrammaticalGender)", color=red, community=0, file="DateHumanizeTests.cs"];
m4_5 [label="return ''0'';", span="13-13", cluster="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string, Humanizer.GrammaticalGender)", color=red, community=0, file="DateHumanizeTests.cs"];
m4_9 [label="Exit Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string, Humanizer.GrammaticalGender)", span="9-9", cluster="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.Convert(int, string, Humanizer.GrammaticalGender)", file="DateHumanizeTests.cs"];
m4_10 [label="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer", span="", file="DateHumanizeTests.cs"];
m6_63 [label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0", cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="EnglishNumberToWordsConverter.cs"];
m6_67 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)", file="EnglishNumberToWordsConverter.cs"];
m6_15 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="EnglishNumberToWordsConverter.cs"];
m6_16 [label="Entry Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", span="38-38", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", file="EnglishNumberToWordsConverter.cs"];
m6_17 [label="number == 1", span="40-40", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_19 [label="number > 1 && number < 5", span="43-43", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_21 [label="var tens = number/10", span="46-46", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_23 [label="var unity = number%10", span="49-49", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_18 [label="return 0;", span="41-41", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_20 [label="return 1;", span="44-44", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_22 [label="tens > 1", span="47-47", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_26 [label="return 2;", span="54-54", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_24 [label="unity > 1 && unity < 5", span="50-50", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_25 [label="return 1;", span="51-51", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_27 [label="Exit Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", span="38-38", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", file="EnglishNumberToWordsConverter.cs"];
m6_61 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="EnglishNumberToWordsConverter.cs"];
m6_64 [label="Entry Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.ConvertToOrdinal(int)", span="110-110", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.ConvertToOrdinal(int)", file="EnglishNumberToWordsConverter.cs"];
m6_65 [label="return number.ToString(_culture);", span="112-112", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.ConvertToOrdinal(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_66 [label="Exit Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.ConvertToOrdinal(int)", span="110-110", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.ConvertToOrdinal(int)", file="EnglishNumberToWordsConverter.cs"];
m6_62 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="EnglishNumberToWordsConverter.cs"];
m6_28 [label="Entry Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", span="57-57", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", file="EnglishNumberToWordsConverter.cs"];
m6_29 [label="number == 0", span="59-59", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_32 [label="number < 0", span="64-64", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_34 [label="number = -number", span="67-67", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_35 [label="var milliard = number/1000000000", span="70-70", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_41 [label="number %= 1000000000", span="78-78", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_42 [label="var million = number/1000000", span="81-81", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_48 [label="number %= 1000000", span="89-89", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_49 [label="var thouthand = number/1000", span="92-92", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_55 [label="number %= 1000", span="100-100", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_56 [label="var units = number/1", span="103-103", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_30 [label="return ''zero'';", span="60-60", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_31 [label="var parts = new List<string>()", span="62-62", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_33 [label="parts.Add(''minus'')", span="66-66", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_38 [label="CollectPartsUnderThousand(parts, milliard)", span="74-74", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_40 [label="parts.Add(map[GetMappingIndex(milliard)])", span="77-77", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_45 [label="CollectPartsUnderThousand(parts, million)", span="85-85", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_47 [label="parts.Add(map[GetMappingIndex(million)])", span="88-88", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_52 [label="CollectPartsUnderThousand(parts, thouthand)", span="96-96", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_54 [label="parts.Add(thousand[GetMappingIndex(thouthand)])", span="99-99", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_58 [label="CollectPartsUnderThousand(parts, units)", span="105-105", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_59 [label="return string.Join('' '', parts);", span="107-107", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_36 [label="milliard > 0", span="71-71", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_37 [label="milliard > 1", span="73-73", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_39 [label="var map = new[] { ''miliard'', ''miliardy'', ''miliardów'' }", span="76-76", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_43 [label="million > 0", span="82-82", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_44 [label="million > 1", span="84-84", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_46 [label="var map = new[] { ''milion'', ''miliony'', ''milionów'' }", span="87-87", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_50 [label="thouthand > 0", span="93-93", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_51 [label="thouthand > 1", span="95-95", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_53 [label="var thousand = new[] { ''tysiąc'', ''tysiące'', ''tysięcy'' }", span="98-98", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_57 [label="units > 0", span="104-104", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_60 [label="Exit Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", span="57-57", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", file="EnglishNumberToWordsConverter.cs"];
m6_0 [label="Entry Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.PolishNumberToWordsConverter(System.Globalization.CultureInfo)", span="13-13", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.PolishNumberToWordsConverter(System.Globalization.CultureInfo)", file="EnglishNumberToWordsConverter.cs"];
m6_1 [label="_culture = culture", span="15-15", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.PolishNumberToWordsConverter(System.Globalization.CultureInfo)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_2 [label="Exit Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.PolishNumberToWordsConverter(System.Globalization.CultureInfo)", span="13-13", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.PolishNumberToWordsConverter(System.Globalization.CultureInfo)", file="EnglishNumberToWordsConverter.cs"];
m6_3 [label="Entry Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.CollectPartsUnderThousand(System.Collections.Generic.ICollection<string>, int)", span="18-18", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.CollectPartsUnderThousand(System.Collections.Generic.ICollection<string>, int)", file="EnglishNumberToWordsConverter.cs"];
m6_4 [label="var hundreds = number/100", span="20-20", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.CollectPartsUnderThousand(System.Collections.Generic.ICollection<string>, int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_6 [label="parts.Add(HundredsMap[hundreds])", span="23-23", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.CollectPartsUnderThousand(System.Collections.Generic.ICollection<string>, int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_7 [label="number = number%100", span="24-24", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.CollectPartsUnderThousand(System.Collections.Generic.ICollection<string>, int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_8 [label="var tens = number/10", span="27-27", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.CollectPartsUnderThousand(System.Collections.Generic.ICollection<string>, int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_10 [label="parts.Add(TensMap[tens])", span="30-30", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.CollectPartsUnderThousand(System.Collections.Generic.ICollection<string>, int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_11 [label="number = number%10", span="31-31", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.CollectPartsUnderThousand(System.Collections.Generic.ICollection<string>, int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_12 [label="number > 0", span="34-34", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.CollectPartsUnderThousand(System.Collections.Generic.ICollection<string>, int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_13 [label="parts.Add(UnitsMap[number])", span="35-35", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.CollectPartsUnderThousand(System.Collections.Generic.ICollection<string>, int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_5 [label="hundreds > 0", span="21-21", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.CollectPartsUnderThousand(System.Collections.Generic.ICollection<string>, int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_9 [label="tens > 1", span="28-28", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.CollectPartsUnderThousand(System.Collections.Generic.ICollection<string>, int)", color=red, community=0, file="EnglishNumberToWordsConverter.cs"];
m6_14 [label="Exit Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.CollectPartsUnderThousand(System.Collections.Generic.ICollection<string>, int)", span="18-18", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.CollectPartsUnderThousand(System.Collections.Generic.ICollection<string>, int)", file="EnglishNumberToWordsConverter.cs"];
m6_68 [label="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter", span="", file="EnglishNumberToWordsConverter.cs"];
m7_7 [label="Entry Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", span="39-39", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", file="IFormatter.cs"];
m7_8 [label="Assert.Equal(expected, word.ToQuantity(quatity, ShowQuantityAs.None))", span="41-41", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", file="IFormatter.cs"];
m7_9 [label="Exit Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", span="39-39", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", file="IFormatter.cs"];
m7_5 [label="Entry string.ToQuantity(int, Humanizer.ShowQuantityAs)", span="25-25", cluster="string.ToQuantity(int, Humanizer.ShowQuantityAs)", file="IFormatter.cs"];
m7_2 [label="Entry Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantity(string, int, string)", span="22-22", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantity(string, int, string)", file="IFormatter.cs"];
m7_3 [label="Assert.Equal(expected, word.ToQuantity(quatity))", span="24-24", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantity(string, int, string)", file="IFormatter.cs"];
m7_4 [label="Exit Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantity(string, int, string)", span="22-22", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantity(string, int, string)", file="IFormatter.cs"];
m7_6 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="IFormatter.cs"];
m7_0 [label="Entry Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityTests()", span="8-8", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityTests()", file="IFormatter.cs"];
m7_1 [label="Exit Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityTests()", span="8-8", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityTests()", file="IFormatter.cs"];
m7_10 [label="Entry Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityNumeric(string, int, string)", span="56-56", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityNumeric(string, int, string)", file="IFormatter.cs"];
m7_11 [label="Assert.Equal(expected, word.ToQuantity(quatity, ShowQuantityAs.Numeric))", span="59-59", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityNumeric(string, int, string)", file="IFormatter.cs"];
m7_12 [label="Exit Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityNumeric(string, int, string)", span="56-56", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityNumeric(string, int, string)", file="IFormatter.cs"];
m7_13 [label="Entry Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWords(string, int, string)", span="75-75", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWords(string, int, string)", file="IFormatter.cs"];
m7_14 [label="Assert.Equal(expected, word.ToQuantity(quatity, ShowQuantityAs.Words))", span="77-77", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWords(string, int, string)", file="IFormatter.cs"];
m7_15 [label="Exit Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWords(string, int, string)", span="75-75", cluster="Humanizer.Tests.Localisation.invariant.ToQuantityTests.ToQuantityWords(string, int, string)", file="IFormatter.cs"];
m9_10 [label="Entry Humanizer.Configuration.LocaliserRegistry<TLocaliser>.Register(string, TLocaliser)", span="54-54", cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.Register(string, TLocaliser)", file="INumberToWordsConverter.cs"];
m9_12 [label="Entry Humanizer.Localisation.Ordinalizers.SpanishOrdinalizer.SpanishOrdinalizer()", span="2-2", cluster="Humanizer.Localisation.Ordinalizers.SpanishOrdinalizer.SpanishOrdinalizer()", file="INumberToWordsConverter.cs"];
m9_16 [label="Entry Humanizer.Localisation.Ordinalizers.TurkishOrdinalizer.TurkishOrdinalizer()", span="7-7", cluster="Humanizer.Localisation.Ordinalizers.TurkishOrdinalizer.TurkishOrdinalizer()", file="INumberToWordsConverter.cs"];
m9_14 [label="Entry Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.BrazilianPortugueseOrdinalizer()", span="2-2", cluster="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer.BrazilianPortugueseOrdinalizer()", file="INumberToWordsConverter.cs"];
m9_11 [label="Entry Humanizer.Localisation.Ordinalizers.EnglishOrdinalizer.EnglishOrdinalizer()", span="2-2", cluster="Humanizer.Localisation.Ordinalizers.EnglishOrdinalizer.EnglishOrdinalizer()", file="INumberToWordsConverter.cs"];
m9_9 [label="Entry Humanizer.Localisation.Ordinalizers.GermanOrdinalizer.GermanOrdinalizer()", span="2-2", cluster="Humanizer.Localisation.Ordinalizers.GermanOrdinalizer.GermanOrdinalizer()", file="INumberToWordsConverter.cs"];
m9_0 [label="Entry Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", span="6-6", cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", file="INumberToWordsConverter.cs"];
m9_1 [label="Register(''de'', new GermanOrdinalizer())", span="8-8", cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", color=red, community=0, file="INumberToWordsConverter.cs"];
m9_2 [label="Register(''en'', new EnglishOrdinalizer())", span="9-9", cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", color=red, community=0, file="INumberToWordsConverter.cs"];
m9_3 [label="Register(''es'', new SpanishOrdinalizer())", span="10-10", cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", color=red, community=0, file="INumberToWordsConverter.cs"];
m9_4 [label="Register(''it'', new ItalianOrdinalizer())", span="11-11", cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", color=red, community=0, file="INumberToWordsConverter.cs"];
m9_5 [label="Register(''pt-BR'', new BrazilianPortugueseOrdinalizer())", span="12-12", cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", color=red, community=0, file="INumberToWordsConverter.cs"];
m9_6 [label="Register(''ru'', new RussianOrdinalizer())", span="13-13", cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", color=red, community=0, file="INumberToWordsConverter.cs"];
m9_7 [label="Register(''tr'', new TurkishOrdinalizer())", span="14-14", cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", color=red, community=0, file="INumberToWordsConverter.cs"];
m9_8 [label="Exit Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", span="6-6", cluster="Humanizer.Configuration.OrdinalizerRegistry.OrdinalizerRegistry()", file="INumberToWordsConverter.cs"];
m9_13 [label="Entry Humanizer.Localisation.Ordinalizers.ItalianOrdinalizer.ItalianOrdinalizer()", span="2-2", cluster="Humanizer.Localisation.Ordinalizers.ItalianOrdinalizer.ItalianOrdinalizer()", file="INumberToWordsConverter.cs"];
m9_15 [label="Entry Humanizer.Localisation.Ordinalizers.RussianOrdinalizer.RussianOrdinalizer()", span="2-2", cluster="Humanizer.Localisation.Ordinalizers.RussianOrdinalizer.RussianOrdinalizer()", file="INumberToWordsConverter.cs"];
m9_17 [label="Humanizer.Configuration.OrdinalizerRegistry", span="", file="INumberToWordsConverter.cs"];
m10_0 [label="Entry Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", span="34-34", cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="NumberToOrdinalWordsExtension.cs"];
m10_1 [label="now == null", span="36-36", cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs"];
m10_2 [label="now = DateTime.UtcNow", span="38-38", cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="NumberToOrdinalWordsExtension.cs", color=green, community=0];
m10_35 [label="Entry System.DateTime.ToLocalTime()", span="0-0", cluster="System.DateTime.ToLocalTime()", file="NumberToOrdinalWordsExtension.cs"];
m10_36 [label="Entry System.TimeSpan.TimeSpan(long)", span="0-0", cluster="System.TimeSpan.TimeSpan(long)", file="NumberToOrdinalWordsExtension.cs"];
m10_37 [label="Entry System.Math.Abs(double)", span="0-0", cluster="System.Math.Abs(double)", file="NumberToOrdinalWordsExtension.cs"];
m10_40 [label="Entry System.Convert.ToInt32(double)", span="0-0", cluster="System.Convert.ToInt32(double)", file="NumberToOrdinalWordsExtension.cs"];
m10_3 [label="int second = 1", span="40-40", cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="NumberToOrdinalWordsExtension.cs", color=green, community=0];
m10_4 [label="int minute = 60 * second", span="41-41", cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="NumberToOrdinalWordsExtension.cs", color=green, community=0];
m10_39 [label="Entry System.Math.Floor(double)", span="0-0", cluster="System.Math.Floor(double)", file="NumberToOrdinalWordsExtension.cs"];
m10_38 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="NumberToOrdinalWordsExtension.cs"];
m10_8 [label="var comparisonBase = now.Value", span="46-46", cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs"];
m10_7 [label="int month = 30 * day", span="44-44", cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs"];
m10_9 [label="!utcDate", span="47-47", cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs"];
m10_10 [label="comparisonBase = comparisonBase.ToLocalTime()", span="48-48", cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs"];
m10_11 [label="input > comparisonBase", span="50-50", cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs"];
m10_13 [label="var ts = new TimeSpan(comparisonBase.Ticks - input.Ticks)", span="53-53", cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs"];
m10_12 [label="return Resources.DateExtensions_FutureDate_not_yet;", span="51-51", cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs"];
m10_14 [label="double delta = Math.Abs(ts.TotalSeconds)", span="54-54", cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs"];
m10_5 [label="int hour = 60 * minute", span="42-42", cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs"];
m10_15 [label="delta < 1 * minute", span="56-56", cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs"];
m10_17 [label="delta < 2 * minute", span="59-59", cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs"];
m10_19 [label="delta < 45 * minute", span="62-62", cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs"];
m10_21 [label="delta < 90 * minute", span="65-65", cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs"];
m10_6 [label="int day = 24 * hour", span="43-43", cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs"];
m10_23 [label="delta < 24 * hour", span="68-68", cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs"];
m10_25 [label="delta < 48 * hour", span="71-71", cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs"];
m10_16 [label="return ts.Seconds == 1 ? Resources.DateExtensions_OneSecondAgo_one_second_ago : string.Format(Resources.DateExtensions_SecondsAgo__seconds_ago, ts.Seconds);", span="57-57", cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs"];
m10_18 [label="return Resources.DateExtensions_OneMinuteAgo_a_minute_ago;", span="60-60", cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs"];
m10_20 [label="return string.Format(Resources.DateExtensions_MinutesAgo__minutes_ago, ts.Minutes);", span="63-63", cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs"];
m10_22 [label="return Resources.DateExtensions_OneHourAgo_an_hour_ago;", span="66-66", cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs"];
m10_27 [label="delta < 30 * day", span="74-74", cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="NumberToOrdinalWordsExtension.cs"];
m10_24 [label="return string.Format(Resources.DateExtensions_HoursAgo__hours_ago, ts.Hours);", span="69-69", cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs"];
m10_26 [label="return Resources.DateExtensions_Yesterday_yesterday;", span="72-72", cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", color=green, community=0, file="NumberToOrdinalWordsExtension.cs"];
m10_29 [label="delta < 12 * month", span="77-77", cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="NumberToOrdinalWordsExtension.cs"];
m10_28 [label="return string.Format(Resources.DateExtensions_DaysAgo__days_ago, ts.Days);", span="75-75", cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="NumberToOrdinalWordsExtension.cs"];
m10_30 [label="int months = Convert.ToInt32(Math.Floor((double)ts.Days / 30))", span="79-79", cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="NumberToOrdinalWordsExtension.cs"];
m10_32 [label="int years = Convert.ToInt32(Math.Floor((double)ts.Days / 365))", span="83-83", cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="NumberToOrdinalWordsExtension.cs"];
m10_31 [label="return months <= 1 ? Resources.DateExtensions_OneMonthAgo_one_month_ago : string.Format(Resources.DateExtensions_MonthsAgo__months_ago, months);", span="80-80", cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="NumberToOrdinalWordsExtension.cs"];
m10_33 [label="return years <= 1 ? Resources.DateExtensions_OneYearAgo_one_year_ago : string.Format(Resources.DateExtensions_YearsAgo__years_ago, years);", span="84-84", cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="NumberToOrdinalWordsExtension.cs"];
m10_34 [label="Exit Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", span="34-34", cluster="Humanizer.DateExtensions.Humanize(System.DateTime, bool, System.DateTime?)", file="NumberToOrdinalWordsExtension.cs"];
m11_7 [label="Entry Humanizer.Localisation.NumberToWords.ArabicNumberToWordsConverter.ArabicNumberToWordsConverter()", span="4-4", cluster="Humanizer.Localisation.NumberToWords.ArabicNumberToWordsConverter.ArabicNumberToWordsConverter()", file="NumberToWordsExtension.cs"];
m11_15 [label="Entry Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(int)", span="12-12", cluster="Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(int)", file="NumberToWordsExtension.cs"];
m11_12 [label="Entry Humanizer.NumberToWordsExtension.ToWords(int)", span="25-25", cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs"];
m11_13 [label="return Converter.Convert(number);", span="27-27", cluster="Humanizer.NumberToWordsExtension.ToWords(int)", color=green, community=0, file="NumberToWordsExtension.cs"];
m11_14 [label="Exit Humanizer.NumberToWordsExtension.ToWords(int)", span="25-25", cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="NumberToWordsExtension.cs"];
m11_3 [label="Entry Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.EnglishNumberToWordsConverter()", span="5-5", cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.EnglishNumberToWordsConverter()", file="NumberToWordsExtension.cs"];
m11_11 [label="Entry Humanizer.Localisation.NumberToWords.FarsiNumberToWordsConverter.FarsiNumberToWordsConverter()", span="5-5", cluster="Humanizer.Localisation.NumberToWords.FarsiNumberToWordsConverter.FarsiNumberToWordsConverter()", file="NumberToWordsExtension.cs"];
m11_8 [label="Entry lambda expression", span="17-17", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m11_0 [label="Entry lambda expression", span="15-15", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m11_1 [label="new EnglishNumberToWordsConverter()", span="15-15", cluster="lambda expression", color=red, community=0, file="NumberToWordsExtension.cs"];
m11_2 [label="Exit lambda expression", span="15-15", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m11_4 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m11_5 [label="new ArabicNumberToWordsConverter()", span="16-16", cluster="lambda expression", color=red, community=0, file="NumberToWordsExtension.cs"];
m11_6 [label="Exit lambda expression", span="16-16", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m11_9 [label="new FarsiNumberToWordsConverter()", span="17-17", cluster="lambda expression", color=red, community=0, file="NumberToWordsExtension.cs"];
m11_10 [label="Exit lambda expression", span="17-17", cluster="lambda expression", file="NumberToWordsExtension.cs"];
m12_6 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="NumberToWordsTests.cs"];
m12_5 [label="Entry int.ToWords()", span="25-25", cluster="int.ToWords()", file="NumberToWordsTests.cs"];
m12_2 [label="Entry Humanizer.Tests.NumberToWordsTests.ToWords(int, string)", span="40-40", cluster="Humanizer.Tests.NumberToWordsTests.ToWords(int, string)", file="NumberToWordsTests.cs"];
m12_3 [label="Assert.Equal(expected, number.ToWords())", span="42-42", cluster="Humanizer.Tests.NumberToWordsTests.ToWords(int, string)", file="NumberToWordsTests.cs"];
m12_4 [label="Exit Humanizer.Tests.NumberToWordsTests.ToWords(int, string)", span="40-40", cluster="Humanizer.Tests.NumberToWordsTests.ToWords(int, string)", file="NumberToWordsTests.cs"];
m12_0 [label="Entry Humanizer.Tests.NumberToWordsTests.NumberToWordsTests()", span="7-7", cluster="Humanizer.Tests.NumberToWordsTests.NumberToWordsTests()", file="NumberToWordsTests.cs"];
m12_1 [label="Exit Humanizer.Tests.NumberToWordsTests.NumberToWordsTests()", span="7-7", cluster="Humanizer.Tests.NumberToWordsTests.NumberToWordsTests()", file="NumberToWordsTests.cs"];
m14_73 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="193-193", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs"];
m14_74 [label="var expectedResult = new[] { new SequenceOutOfRangeError(NameInfo.EmptyName) }", span="196-196", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs"];
m14_75 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMinConstraintAsValue(),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="199-203", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs"];
m14_76 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="206-206", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs"];
m14_77 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="193-193", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs"];
m14_9 [label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="RomanianFormatter.cs"];
m14_82 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue()", span="6-6", cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue()", file="RomanianFormatter.cs"];
m14_139 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", span="6-6", cluster="CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", file="RomanianFormatter.cs"];
m14_150 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceWithoutRange.FakeOptionsWithSequenceWithoutRange()", span="6-6", cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceWithoutRange.FakeOptionsWithSequenceWithoutRange()", file="RomanianFormatter.cs"];
m14_258 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", span="614-614", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="RomanianFormatter.cs"];
m14_259 [label="var expectedResult = new[] { new UnknownOptionError(''z'') }", span="617-617", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="RomanianFormatter.cs"];
m14_260 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-zx'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="620-624", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="RomanianFormatter.cs"];
m14_261 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="627-627", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="RomanianFormatter.cs"];
m14_262 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", span="614-614", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="RomanianFormatter.cs"];
m14_250 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", span="595-595", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="RomanianFormatter.cs"];
m14_251 [label="var expectedResult = new[] { new UnknownOptionError(''z'') }", span="598-598", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="RomanianFormatter.cs"];
m14_252 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-z'', ''-x'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="601-605", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="RomanianFormatter.cs"];
m14_253 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="608-608", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="RomanianFormatter.cs"];
m14_254 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", span="595-595", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="RomanianFormatter.cs"];
m14_299 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", span="717-717", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", file="RomanianFormatter.cs"];
m14_300 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithNullables(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="722-726", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", file="RomanianFormatter.cs"];
m14_301 [label="expected.ShouldBeEquivalentTo(result.Value.NullableInt)", span="729-729", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", file="RomanianFormatter.cs"];
m14_302 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", span="717-717", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", file="RomanianFormatter.cs"];
m14_19 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="RomanianFormatter.cs"];
m14_0 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", span="17-17", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="RomanianFormatter.cs"];
m14_1 [label="var fakeOptions = new FakeOptions()", span="20-20", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="RomanianFormatter.cs"];
m14_2 [label="var expectedResult = ParserResult.Create(\r\n                ParserResultType.Options,\r\n                fakeOptions, new Error[] { new HelpRequestedError() })", span="21-23", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="RomanianFormatter.cs"];
m14_3 [label="var result = InstanceBuilder.Build(\r\n                () => fakeOptions,\r\n                new[] { ''--help'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="26-30", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="RomanianFormatter.cs"];
m14_4 [label="Assert.True(expectedResult.Equals(result))", span="33-33", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="RomanianFormatter.cs"];
m14_5 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", span="17-17", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="RomanianFormatter.cs"];
m14_69 [label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20", cluster="CommandLine.NameInfo.NameInfo(string, string)", file="RomanianFormatter.cs"];
m14_118 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", span="294-294", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="RomanianFormatter.cs"];
m14_119 [label="var expectedResult = new[] { new BadFormatConversionError(new NameInfo('''', ''colors'')) }", span="297-297", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="RomanianFormatter.cs"];
m14_120 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithEnum(),\r\n                new[] { ''--colors'', ''Yellow'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="300-304", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="RomanianFormatter.cs"];
m14_121 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="307-307", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="RomanianFormatter.cs"];
m14_122 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", span="294-294", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="RomanianFormatter.cs"];
m14_314 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", span="758-758", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="RomanianFormatter.cs"];
m14_315 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithFSharpOption(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="763-767", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="RomanianFormatter.cs"];
m14_316 [label="expectedValue.ShouldBeEquivalentTo(result.Value.FileName.Value)", span="770-770", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="RomanianFormatter.cs"];
m14_317 [label="expectedSome.ShouldBeEquivalentTo(FSharpOption<string>.get_IsSome(result.Value.FileName))", span="771-771", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="RomanianFormatter.cs"];
m14_318 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", span="758-758", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="RomanianFormatter.cs"];
m14_338 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent.FakeOptionsWithScalarValueAndSequenceStringAdjacent()", span="6-6", cluster="CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent.FakeOptionsWithScalarValueAndSequenceStringAdjacent()", file="RomanianFormatter.cs"];
m14_99 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue()", span="6-6", cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue()", file="RomanianFormatter.cs"];
m14_151 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", span="384-384", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="RomanianFormatter.cs"];
m14_152 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndSeparator(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="389-393", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="RomanianFormatter.cs"];
m14_153 [label="expected.ShouldBeEquivalentTo(result.Value.LongSequence)", span="396-396", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="RomanianFormatter.cs"];
m14_154 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", span="384-384", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="RomanianFormatter.cs"];
m14_10 [label="Entry CommandLine.ParserResult<T>.Equals(CommandLine.ParserResult<T>)", span="87-87", cluster="CommandLine.ParserResult<T>.Equals(CommandLine.ParserResult<T>)", file="RomanianFormatter.cs"];
m14_172 [label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="33-33", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="RomanianFormatter.cs"];
m14_78 [label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="316-316", cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="RomanianFormatter.cs"];
m14_8 [label="Entry CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="100-100", cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="RomanianFormatter.cs"];
m14_197 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSets.FakeOptionsWithSets()", span="4-4", cluster="CommandLine.Tests.Fakes.FakeOptionsWithSets.FakeOptionsWithSets()", file="RomanianFormatter.cs"];
m14_270 [label="Entry string.Equals(string)", span="0-0", cluster="string.Equals(string)", file="RomanianFormatter.cs"];
m14_290 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="694-694", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs"];
m14_291 [label="var expectedResult = new[] { new SequenceOutOfRangeError(NameInfo.EmptyName) }", span="697-697", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs"];
m14_292 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceMinMaxEqual(),\r\n                new[] { ''one'', ''two'', ''this-is-too-much'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="700-704", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs"];
m14_293 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="707-707", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs"];
m14_294 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="694-694", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs"];
m14_39 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequence.FakeOptionsWithSequence()", span="6-6", cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequence.FakeOptionsWithSequence()", file="RomanianFormatter.cs"];
m14_266 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", span="635-635", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="RomanianFormatter.cs"];
m14_267 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="640-644", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="RomanianFormatter.cs"];
m14_268 [label="Assert.True(expected.Equals(result.Value.StringValue))", span="647-647", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="RomanianFormatter.cs"];
m14_269 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", span="635-635", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="RomanianFormatter.cs"];
m14_126 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", span="313-313", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="RomanianFormatter.cs"];
m14_127 [label="var expectedResult = new[] { new BadFormatConversionError(new NameInfo('''', ''colors'')) }", span="316-316", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="RomanianFormatter.cs"];
m14_128 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithEnum(),\r\n                new[] { ''--colors'', ''RED'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="319-323", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="RomanianFormatter.cs"];
m14_129 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="326-326", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="RomanianFormatter.cs"];
m14_130 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", span="313-313", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="RomanianFormatter.cs"];
m14_215 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", span="518-518", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="RomanianFormatter.cs"];
m14_216 [label="var expectedResult = new[]\r\n            {\r\n                new MissingRequiredOptionError(new NameInfo('''', ''ftpurl'')),\r\n                new MissingRequiredOptionError(new NameInfo('''', ''weburl''))\r\n            }", span="520-524", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="RomanianFormatter.cs"];
m14_217 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequiredAndSet(),\r\n                new[] {''''},\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="526-530", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="RomanianFormatter.cs"];
m14_218 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="533-533", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="RomanianFormatter.cs"];
m14_219 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", span="518-518", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="RomanianFormatter.cs"];
m14_203 [label="Entry CommandLine.Tests.Fakes.FakeOptionWithRequiredAndSet.FakeOptionWithRequiredAndSet()", span="4-4", cluster="CommandLine.Tests.Fakes.FakeOptionWithRequiredAndSet.FakeOptionWithRequiredAndSet()", file="RomanianFormatter.cs"];
m14_241 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", span="576-576", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="RomanianFormatter.cs"];
m14_242 [label="var expectedResult = new[] { new UnknownOptionError(''xyz'') }", span="579-579", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="RomanianFormatter.cs"];
m14_243 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''--stringvalue'', ''abc'', ''--xyz'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="582-586", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="RomanianFormatter.cs"];
m14_244 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="589-589", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="RomanianFormatter.cs"];
m14_245 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", span="576-576", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="RomanianFormatter.cs"];
m14_83 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", span="213-213", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs"];
m14_84 [label="var expectedResult = new[] { new SequenceOutOfRangeError(new NameInfo(''s'', ''string-seq'')) }", span="216-216", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs"];
m14_85 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMaxConstraint(),\r\n                new[] { ''--string-seq=one'', ''two'', ''three'', ''this-is-too-much'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="219-223", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs"];
m14_86 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="226-226", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs"];
m14_87 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", span="213-213", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs"];
m14_143 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", span="362-362", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="RomanianFormatter.cs"];
m14_144 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceWithoutRange(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="367-371", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="RomanianFormatter.cs"];
m14_145 [label="expected.ShouldBeEquivalentTo(result.Value.LongSequence)", span="374-374", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="RomanianFormatter.cs"];
m14_146 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", span="362-362", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="RomanianFormatter.cs"];
m14_159 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", span="406-406", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="RomanianFormatter.cs"];
m14_160 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndSeparator(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="411-415", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="RomanianFormatter.cs"];
m14_161 [label="expected.ShouldBeEquivalentTo(result.Value.StringSequence)", span="418-418", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="RomanianFormatter.cs"];
m14_162 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", span="406-406", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="RomanianFormatter.cs"];
m14_224 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="538-538", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="RomanianFormatter.cs"];
m14_225 [label="var expectedResult = new[] { new MissingRequiredOptionError(new NameInfo('''', ''str'')) }", span="541-541", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="RomanianFormatter.cs"];
m14_226 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequired(),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="544-548", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="RomanianFormatter.cs"];
m14_227 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="551-551", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="RomanianFormatter.cs"];
m14_228 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="538-538", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="RomanianFormatter.cs"];
m14_35 [label="Entry Unk.SequenceEqual", span="", cluster="Unk.SequenceEqual", file="RomanianFormatter.cs"];
m14_23 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", span="65-65", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="RomanianFormatter.cs"];
m14_24 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithDouble(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="70-74", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="RomanianFormatter.cs"];
m14_25 [label="Assert.Equal(expected, result.Value.DoubleValue)", span="77-77", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="RomanianFormatter.cs"];
m14_26 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", span="65-65", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="RomanianFormatter.cs"];
m14_68 [label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="261-261", cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="RomanianFormatter.cs"];
m14_109 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", span="275-275", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="RomanianFormatter.cs"];
m14_110 [label="var expectedResult = new[] { new BadFormatConversionError(new NameInfo('''', ''colors'')) }", span="278-278", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="RomanianFormatter.cs"];
m14_111 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithEnum(),\r\n                new[] { ''--colors'', ''3'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="281-285", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="RomanianFormatter.cs"];
m14_112 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="288-288", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="RomanianFormatter.cs"];
m14_113 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", span="275-275", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="RomanianFormatter.cs"];
m14_220 [label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="283-283", cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="RomanianFormatter.cs"];
m14_207 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", span="499-499", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="RomanianFormatter.cs"];
m14_208 [label="var expectedResult = new FakeOptionWithRequiredAndSet {\r\n                FtpUrl = ''str1'',\r\n                WebUrl = ''str2''\r\n            }", span="501-504", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="RomanianFormatter.cs"];
m14_209 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequiredAndSet(),\r\n                new[] { ''--ftpurl'', ''str1'', ''--weburl'', ''str2'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="506-510", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="RomanianFormatter.cs"];
m14_210 [label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="513-513", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="RomanianFormatter.cs"];
m14_211 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", span="499-499", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="RomanianFormatter.cs"];
m14_193 [label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="294-294", cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="RomanianFormatter.cs"];
m14_331 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", span="797-797", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", file="RomanianFormatter.cs"];
m14_332 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithScalarValueAndSequenceStringAdjacent(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="802-806", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", file="RomanianFormatter.cs"];
m14_333 [label="expected.ShouldBeEquivalentTo(result.Value)", span="809-809", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", file="RomanianFormatter.cs"];
m14_334 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", span="797-797", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent)", file="RomanianFormatter.cs"];
m14_6 [label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6", cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="RomanianFormatter.cs"];
m14_323 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithFSharpOption.FakeOptionsWithFSharpOption()", span="6-6", cluster="CommandLine.Tests.Fakes.FakeOptionsWithFSharpOption.FakeOptionsWithFSharpOption()", file="RomanianFormatter.cs"];
m14_274 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", span="653-653", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="RomanianFormatter.cs"];
m14_275 [label="var expectedResult = new[] { new MissingRequiredOptionError(NameInfo.EmptyName) }", span="656-656", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="RomanianFormatter.cs"];
m14_276 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithRequiredValue(),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="659-663", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="RomanianFormatter.cs"];
m14_277 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="666-666", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="RomanianFormatter.cs"];
m14_278 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", span="653-653", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="RomanianFormatter.cs"];
m14_187 [label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11", cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="RomanianFormatter.cs"];
m14_198 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", span="479-479", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="RomanianFormatter.cs"];
m14_199 [label="var expectedResult = new FakeOptionWithRequiredAndSet {\r\n                FtpUrl = ''str1'',\r\n                WebUrl = null\r\n            }", span="481-484", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="RomanianFormatter.cs"];
m14_200 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequiredAndSet(),\r\n                new[] { ''--ftpurl'', ''str1''},\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="486-490", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="RomanianFormatter.cs"];
m14_201 [label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="493-493", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="RomanianFormatter.cs"];
m14_202 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", span="479-479", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="RomanianFormatter.cs"];
m14_55 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", span="156-156", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="RomanianFormatter.cs"];
m14_56 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMaxConstraint(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="161-165", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="RomanianFormatter.cs"];
m14_57 [label="Assert.True(expected.SequenceEqual(result.Value.StringSequence))", span="168-168", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="RomanianFormatter.cs"];
m14_58 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", span="156-156", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="RomanianFormatter.cs"];
m14_31 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", span="89-89", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="RomanianFormatter.cs"];
m14_32 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequence(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="94-98", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="RomanianFormatter.cs"];
m14_33 [label="Assert.True(expected.SequenceEqual(result.Value.IntSequence))", span="101-101", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="RomanianFormatter.cs"];
m14_34 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", span="89-89", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="RomanianFormatter.cs"];
m14_47 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", span="134-134", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="RomanianFormatter.cs"];
m14_48 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMinConstraint(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="139-143", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="RomanianFormatter.cs"];
m14_49 [label="Assert.True(expected.SequenceEqual(result.Value.StringSequence))", span="146-146", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="RomanianFormatter.cs"];
m14_50 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", span="134-134", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="RomanianFormatter.cs"];
m14_91 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="232-232", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs"];
m14_92 [label="var expectedResult = new[] { new SequenceOutOfRangeError(NameInfo.EmptyName) }", span="235-235", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs"];
m14_93 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue(),\r\n                new[] { ''one'', ''two'', ''three'', ''this-is-too-much'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="238-242", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs"];
m14_94 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="245-245", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs"];
m14_95 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="232-232", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs"];
m14_114 [label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="305-305", cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", file="RomanianFormatter.cs"];
m14_158 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndSeparator.FakeOptionsWithSequenceAndSeparator()", span="6-6", cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndSeparator.FakeOptionsWithSequenceAndSeparator()", file="RomanianFormatter.cs"];
m14_282 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue.FakeOptionsWithRequiredValue()", span="4-4", cluster="CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue.FakeOptionsWithRequiredValue()", file="RomanianFormatter.cs"];
m14_335 [label="Entry lambda expression", span="803-803", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_13 [label=fakeOptions, span="27-27", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_12 [label="Entry lambda expression", span="27-27", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_14 [label="Exit lambda expression", span="27-27", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_20 [label="Entry lambda expression", span="48-48", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_21 [label="new FakeOptions()", span="48-48", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_22 [label="Exit lambda expression", span="48-48", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_27 [label="Entry lambda expression", span="71-71", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_28 [label="new FakeOptionsWithDouble()", span="71-71", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_29 [label="Exit lambda expression", span="71-71", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_36 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_37 [label="new FakeOptionsWithSequence()", span="95-95", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_38 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_44 [label="Entry lambda expression", span="117-117", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_45 [label="new FakeOptions()", span="117-117", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_46 [label="Exit lambda expression", span="117-117", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_51 [label="Entry lambda expression", span="140-140", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_52 [label="new FakeOptionsWithSequenceAndOnlyMinConstraint()", span="140-140", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_53 [label="Exit lambda expression", span="140-140", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_59 [label="Entry lambda expression", span="162-162", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_60 [label="new FakeOptionsWithSequenceAndOnlyMaxConstraint()", span="162-162", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_61 [label="Exit lambda expression", span="162-162", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_70 [label="Entry lambda expression", span="181-181", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_71 [label="new FakeOptionsWithSequenceAndOnlyMinConstraint()", span="181-181", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_72 [label="Exit lambda expression", span="181-181", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_79 [label="Entry lambda expression", span="200-200", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_80 [label="new FakeOptionsWithSequenceAndOnlyMinConstraintAsValue()", span="200-200", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_81 [label="Exit lambda expression", span="200-200", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_88 [label="Entry lambda expression", span="220-220", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_89 [label="new FakeOptionsWithSequenceAndOnlyMaxConstraint()", span="220-220", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_90 [label="Exit lambda expression", span="220-220", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_96 [label="Entry lambda expression", span="239-239", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_97 [label="new FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue()", span="239-239", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_98 [label="Exit lambda expression", span="239-239", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_105 [label="Entry lambda expression", span="263-263", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_106 [label="new FakeOptionsWithEnum()", span="263-263", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_107 [label="Exit lambda expression", span="263-263", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_115 [label="Entry lambda expression", span="282-282", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_116 [label="new FakeOptionsWithEnum()", span="282-282", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_117 [label="Exit lambda expression", span="282-282", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_123 [label="Entry lambda expression", span="301-301", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_124 [label="new FakeOptionsWithEnum()", span="301-301", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_125 [label="Exit lambda expression", span="301-301", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_131 [label="Entry lambda expression", span="320-320", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_132 [label="new FakeOptionsWithEnum()", span="320-320", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_133 [label="Exit lambda expression", span="320-320", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_140 [label="Entry lambda expression", span="345-345", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_141 [label="new FakeOptionsWithValues()", span="345-345", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_142 [label="Exit lambda expression", span="345-345", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_147 [label="Entry lambda expression", span="368-368", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_148 [label="new FakeOptionsWithSequenceWithoutRange()", span="368-368", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_149 [label="Exit lambda expression", span="368-368", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_155 [label="Entry lambda expression", span="390-390", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_156 [label="new FakeOptionsWithSequenceAndSeparator()", span="390-390", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_157 [label="Exit lambda expression", span="390-390", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_163 [label="Entry lambda expression", span="412-412", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_164 [label="new FakeOptionsWithSequenceAndSeparator()", span="412-412", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_165 [label="Exit lambda expression", span="412-412", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_173 [label="Entry lambda expression", span="441-441", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_176 [label="Entry lambda expression", span="442-444", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_174 [label="new FakeOptionsWithValues()", span="441-441", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_175 [label="Exit lambda expression", span="441-441", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_177 [label="Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)))", span="443-444", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_181 [label="Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))", span="444-444", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_185 [label="NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)", span="444-444", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_178 [label="Exit lambda expression", span="442-444", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_180 [label="Entry lambda expression", span="444-444", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_182 [label="Exit lambda expression", span="444-444", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_184 [label="Entry lambda expression", span="444-444", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_186 [label="Exit lambda expression", span="444-444", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_194 [label="Entry lambda expression", span="467-467", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_195 [label="new FakeOptionsWithSets()", span="467-467", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_196 [label="Exit lambda expression", span="467-467", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_204 [label="Entry lambda expression", span="487-487", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_205 [label="new FakeOptionWithRequiredAndSet()", span="487-487", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_206 [label="Exit lambda expression", span="487-487", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_212 [label="Entry lambda expression", span="507-507", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_213 [label="new FakeOptionWithRequiredAndSet()", span="507-507", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_214 [label="Exit lambda expression", span="507-507", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_221 [label="Entry lambda expression", span="527-527", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_222 [label="new FakeOptionWithRequiredAndSet()", span="527-527", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_223 [label="Exit lambda expression", span="527-527", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_229 [label="Entry lambda expression", span="545-545", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_230 [label="new FakeOptionWithRequired()", span="545-545", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_231 [label="Exit lambda expression", span="545-545", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_238 [label="Entry lambda expression", span="564-564", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_239 [label="new FakeOptions()", span="564-564", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_240 [label="Exit lambda expression", span="564-564", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_247 [label="Entry lambda expression", span="583-583", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_248 [label="new FakeOptions()", span="583-583", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_249 [label="Exit lambda expression", span="583-583", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_255 [label="Entry lambda expression", span="602-602", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_256 [label="new FakeOptions()", span="602-602", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_257 [label="Exit lambda expression", span="602-602", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_263 [label="Entry lambda expression", span="621-621", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_264 [label="new FakeOptions()", span="621-621", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_265 [label="Exit lambda expression", span="621-621", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_271 [label="Entry lambda expression", span="641-641", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_272 [label="new FakeOptions()", span="641-641", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_273 [label="Exit lambda expression", span="641-641", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_279 [label="Entry lambda expression", span="660-660", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_280 [label="new FakeOptionsWithRequiredValue()", span="660-660", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_281 [label="Exit lambda expression", span="660-660", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_287 [label="Entry lambda expression", span="682-682", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_288 [label="new FakeOptions()", span="682-682", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_289 [label="Exit lambda expression", span="682-682", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_295 [label="Entry lambda expression", span="701-701", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_296 [label="new FakeOptionsWithSequenceMinMaxEqual()", span="701-701", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_297 [label="Exit lambda expression", span="701-701", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_303 [label="Entry lambda expression", span="723-723", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_304 [label="new FakeOptionsWithNullables()", span="723-723", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_305 [label="Exit lambda expression", span="723-723", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_311 [label="Entry lambda expression", span="745-745", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_312 [label="new FakeOptionsWithNullables()", span="745-745", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_313 [label="Exit lambda expression", span="745-745", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_320 [label="Entry lambda expression", span="764-764", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_321 [label="new FakeOptionsWithFSharpOption()", span="764-764", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_322 [label="Exit lambda expression", span="764-764", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_328 [label="Entry lambda expression", span="784-784", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_329 [label="new FakeOptionsWithRequiredValue()", span="784-784", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_330 [label="Exit lambda expression", span="784-784", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_336 [label="new FakeOptionsWithScalarValueAndSequenceStringAdjacent()", span="803-803", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_337 [label="Exit lambda expression", span="803-803", cluster="lambda expression", file="RomanianFormatter.cs"];
m14_306 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithNullables.FakeOptionsWithNullables()", span="4-4", cluster="CommandLine.Tests.Fakes.FakeOptionsWithNullables.FakeOptionsWithNullables()", file="RomanianFormatter.cs"];
m14_324 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", span="778-778", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", file="RomanianFormatter.cs"];
m14_325 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithRequiredValue(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="783-787", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", file="RomanianFormatter.cs"];
m14_326 [label="expected.ShouldBeEquivalentTo(result.Value)", span="790-790", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", file="RomanianFormatter.cs"];
m14_327 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", span="778-778", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue)", file="RomanianFormatter.cs"];
m14_63 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", span="174-174", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="RomanianFormatter.cs"];
m14_64 [label="var expectedResult = new[] { new MissingValueOptionError(new NameInfo(''s'', ''string-seq'')) }", span="177-177", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="RomanianFormatter.cs"];
m14_65 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMinConstraint(),\r\n                new[] { ''-s'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="180-184", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="RomanianFormatter.cs"];
m14_66 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="187-187", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="RomanianFormatter.cs"];
m14_67 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", span="174-174", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="RomanianFormatter.cs"];
m14_100 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", span="257-257", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="RomanianFormatter.cs"];
m14_101 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithEnum(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="262-266", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="RomanianFormatter.cs"];
m14_102 [label="expected.ShouldBeEquivalentTo(result.Value.Colors)", span="269-269", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="RomanianFormatter.cs"];
m14_103 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", span="257-257", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="RomanianFormatter.cs"];
m14_298 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceMinMaxEqual.FakeOptionsWithSequenceMinMaxEqual()", span="9-9", cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceMinMaxEqual.FakeOptionsWithSequenceMinMaxEqual()", file="RomanianFormatter.cs"];
m14_40 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", span="111-111", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="RomanianFormatter.cs"];
m14_41 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="116-120", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="RomanianFormatter.cs"];
m14_42 [label="Assert.True(expected.SequenceEqual(result.Value.IntSequence))", span="123-123", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="RomanianFormatter.cs"];
m14_43 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", span="111-111", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="RomanianFormatter.cs"];
m14_232 [label="Entry CommandLine.Tests.Fakes.FakeOptionWithRequired.FakeOptionWithRequired()", span="4-4", cluster="CommandLine.Tests.Fakes.FakeOptionWithRequired.FakeOptionWithRequired()", file="RomanianFormatter.cs"];
m14_108 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithEnum.FakeOptionsWithEnum()", span="11-11", cluster="CommandLine.Tests.Fakes.FakeOptionsWithEnum.FakeOptionsWithEnum()", file="RomanianFormatter.cs"];
m14_246 [label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="272-272", cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="RomanianFormatter.cs"];
m14_319 [label="Entry Unk.get_IsSome", span="", cluster="Unk.get_IsSome", file="RomanianFormatter.cs"];
m14_7 [label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="338-338", cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="RomanianFormatter.cs"];
m14_104 [label="Entry Unk.ShouldBeEquivalentTo", span="", cluster="Unk.ShouldBeEquivalentTo", file="RomanianFormatter.cs"];
m14_183 [label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="RomanianFormatter.cs"];
m14_11 [label="Entry Unk.True", span="", cluster="Unk.True", file="RomanianFormatter.cs"];
m14_30 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithDouble.FakeOptionsWithDouble()", span="4-4", cluster="CommandLine.Tests.Fakes.FakeOptionsWithDouble.FakeOptionsWithDouble()", file="RomanianFormatter.cs"];
m14_15 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", span="42-42", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="RomanianFormatter.cs"];
m14_16 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="47-51", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="RomanianFormatter.cs"];
m14_17 [label="Assert.Equal(expected, result.Value.LongValue)", span="54-54", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="RomanianFormatter.cs"];
m14_18 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", span="42-42", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="RomanianFormatter.cs"];
m14_62 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraint.FakeOptionsWithSequenceAndOnlyMaxConstraint()", span="6-6", cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraint.FakeOptionsWithSequenceAndOnlyMaxConstraint()", file="RomanianFormatter.cs"];
m14_134 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="332-332", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="RomanianFormatter.cs"];
m14_135 [label="var expectedResult = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = string.Empty,\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''a'', ''b'', ''c'' },\r\n                    IntValue = 20\r\n                }", span="335-341", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="RomanianFormatter.cs"];
m14_136 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithValues(),\r\n                new[] { ''10'', ''a'', ''b'', ''c'', ''20'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="344-348", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="RomanianFormatter.cs"];
m14_137 [label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="351-351", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="RomanianFormatter.cs"];
m14_138 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="332-332", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="RomanianFormatter.cs"];
m14_233 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", span="557-557", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs"];
m14_234 [label="var expectedResult = new[] { new SequenceOutOfRangeError(new NameInfo(''i'', '''')) }", span="560-560", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs"];
m14_235 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new [] { ''-i'', ''10'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="563-567", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs"];
m14_236 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="570-570", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs"];
m14_237 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", span="557-557", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="RomanianFormatter.cs"];
m14_283 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", span="676-676", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="RomanianFormatter.cs"];
m14_284 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="681-685", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="RomanianFormatter.cs"];
m14_285 [label="expected.ShouldBeEquivalentTo(result.Value.StringValue)", span="688-688", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="RomanianFormatter.cs"];
m14_286 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", span="676-676", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="RomanianFormatter.cs"];
m14_307 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", span="739-739", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", file="RomanianFormatter.cs"];
m14_308 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithNullables(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="744-748", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", file="RomanianFormatter.cs"];
m14_309 [label="expected.ShouldBeEquivalentTo(result.Value.NullableLong)", span="751-751", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", file="RomanianFormatter.cs"];
m14_310 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", span="739-739", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", file="RomanianFormatter.cs"];
m14_188 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="456-456", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="RomanianFormatter.cs"];
m14_189 [label="var expectedResult = new[]\r\n                {\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''weburl'')),\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''ftpurl''))\r\n                }", span="459-463", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="RomanianFormatter.cs"];
m14_190 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSets(),\r\n                new[] { ''--weburl'', ''http://mywebsite.org/'', ''--ftpurl'', ''fpt://ftpsite.org/'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="466-470", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="RomanianFormatter.cs"];
m14_191 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="473-473", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="RomanianFormatter.cs"];
m14_192 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="456-456", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="RomanianFormatter.cs"];
m14_166 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="427-427", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="RomanianFormatter.cs"];
m14_167 [label="var expectedResult = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = ''str1'',\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''-a'', ''--bee'', ''-c'' },\r\n                    IntValue = 20\r\n                }", span="430-436", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="RomanianFormatter.cs"];
m14_168 [label="var arguments = new[] { ''--stringvalue'', ''str1'', ''--'', ''10'', ''-a'', ''--bee'', ''-c'', ''20'' }", span="437-437", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="RomanianFormatter.cs"];
m14_170 [label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="450-450", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="RomanianFormatter.cs"];
m14_169 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithValues(),\r\n                (a, optionSpecs) =>\r\n                    Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="440-447", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="RomanianFormatter.cs"];
m14_171 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="427-427", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="RomanianFormatter.cs"];
m14_54 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraint.FakeOptionsWithSequenceAndOnlyMinConstraint()", span="6-6", cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraint.FakeOptionsWithSequenceAndOnlyMinConstraint()", file="RomanianFormatter.cs"];
m14_179 [label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", span="31-31", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="RomanianFormatter.cs"];
m14_339 [label=fakeOptions, span="", file="RomanianFormatter.cs"];
m14_340 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span="", file="RomanianFormatter.cs"];
m15_0 [label="Entry Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", span="7-7", cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", file="RussianFormatter.cs"];
m15_1 [label="var mod100 = number%100", span="9-9", cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", file="RussianFormatter.cs"];
m15_3 [label="var mod10 = number%10", span="12-12", cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", file="RussianFormatter.cs"];
m15_5 [label="return resourceKey + SingularPostfix;", span="15-15", cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", file="RussianFormatter.cs"];
m15_7 [label="return resourceKey + PaucalPostfix;", span="18-18", cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", file="RussianFormatter.cs"];
m15_8 [label="return resourceKey;", span="21-21", cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", file="RussianFormatter.cs"];
m15_2 [label="mod100/10 != 1", span="10-10", cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", file="RussianFormatter.cs"];
m15_4 [label="mod10 == 1", span="14-14", cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", file="RussianFormatter.cs"];
m15_6 [label="mod10 > 1 && mod10 < 5", span="17-17", cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", file="RussianFormatter.cs"];
m15_9 [label="Exit Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", span="7-7", cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", file="RussianFormatter.cs"];
m17_5 [label="Entry string.ToQuantity(int, Humanizer.ShowQuantityAs)", span="25-25", cluster="string.ToQuantity(int, Humanizer.ShowQuantityAs)", file="ToQuantityTests.cs"];
m17_0 [label="Entry Humanizer.Tests.ToQuantityTests.ToQuantityTests()", span="7-7", cluster="Humanizer.Tests.ToQuantityTests.ToQuantityTests()", file="ToQuantityTests.cs"];
m17_1 [label="Exit Humanizer.Tests.ToQuantityTests.ToQuantityTests()", span="7-7", cluster="Humanizer.Tests.ToQuantityTests.ToQuantityTests()", file="ToQuantityTests.cs"];
m17_2 [label="Entry Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", span="24-24", cluster="Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", file="ToQuantityTests.cs"];
m17_3 [label="Assert.Equal(expected, word.ToQuantity(quatity))", span="26-26", cluster="Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", file="ToQuantityTests.cs"];
m17_4 [label="Exit Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", span="24-24", cluster="Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", file="ToQuantityTests.cs"];
m17_6 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ToQuantityTests.cs"];
m17_13 [label="Entry Humanizer.Tests.ToQuantityTests.ToQuantityWords(string, int, string)", span="77-77", cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWords(string, int, string)", file="ToQuantityTests.cs"];
m17_14 [label="Assert.Equal(expected, word.ToQuantity(quatity, ShowQuantityAs.Words))", span="79-79", cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWords(string, int, string)", file="ToQuantityTests.cs"];
m17_15 [label="Exit Humanizer.Tests.ToQuantityTests.ToQuantityWords(string, int, string)", span="77-77", cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWords(string, int, string)", file="ToQuantityTests.cs"];
m17_7 [label="Entry Humanizer.Tests.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", span="41-41", cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", file="ToQuantityTests.cs"];
m17_8 [label="Assert.Equal(expected, word.ToQuantity(quatity, ShowQuantityAs.None))", span="43-43", cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", file="ToQuantityTests.cs"];
m17_9 [label="Exit Humanizer.Tests.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", span="41-41", cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", file="ToQuantityTests.cs"];
m17_10 [label="Entry Humanizer.Tests.ToQuantityTests.ToQuantityNumeric(string, int, string)", span="58-58", cluster="Humanizer.Tests.ToQuantityTests.ToQuantityNumeric(string, int, string)", file="ToQuantityTests.cs"];
m17_11 [label="Assert.Equal(expected, word.ToQuantity(quatity, ShowQuantityAs.Numeric))", span="61-61", cluster="Humanizer.Tests.ToQuantityTests.ToQuantityNumeric(string, int, string)", file="ToQuantityTests.cs"];
m17_12 [label="Exit Humanizer.Tests.ToQuantityTests.ToQuantityNumeric(string, int, string)", span="58-58", cluster="Humanizer.Tests.ToQuantityTests.ToQuantityNumeric(string, int, string)", file="ToQuantityTests.cs"];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [key=1, style=dashed, color=darkseagreen4, label=string];
n0 -> n3  [key=1, style=dashed, color=darkseagreen4, label=int];
n0 -> n4  [key=1, style=dashed, color=darkseagreen4, label=string];
n0 -> n5  [key=1, style=dashed, color=darkseagreen4, label=string];
n0 -> n0  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetResourceKey"];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=0, style=solid];
n2 -> n6  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n3 -> n5  [key=0, style=solid];
n4 -> n6  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n6 -> n0  [key=0, style=bold, color=blue];
m0_107 -> m0_108  [key=0, style=solid];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_0  [key=2, style=dotted];
m0_108 -> m0_108  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_109 -> m0_107  [key=0, style=bold, color=blue];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_64  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_60 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_60 -> m0_62  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m0_60 -> m0_69  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_63  [key=0, style=solid];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_66  [key=0, style=solid];
m0_65 -> m0_67  [key=0, style=solid];
m0_62 -> m0_68  [key=0, style=solid];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_67  [key=1, style=dashed, color=darkseagreen4, label=other];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_69  [key=2, style=dotted];
m0_67 -> m0_191  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_66 -> m0_68  [key=0, style=solid];
m0_68 -> m0_60  [key=0, style=bold, color=blue];
m0_83 -> m0_84  [key=0, style=solid];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_0  [key=2, style=dotted];
m0_84 -> m0_196  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_85 -> m0_83  [key=0, style=bold, color=blue];
m0_119 -> m0_120  [key=0, style=solid];
m0_120 -> m0_121  [key=0, style=solid];
m0_120 -> m0_120  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_121 -> m0_119  [key=0, style=bold, color=blue];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_151  [key=3, color=darkorchid, style=bold, label="Parameter variable long value"];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_0  [key=2, style=dotted];
m0_11 -> m0_9  [key=0, style=bold, color=blue];
m0_125 -> m0_126  [key=0, style=solid];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_126  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_127 -> m0_125  [key=0, style=bold, color=blue];
m0_122 -> m0_123  [key=0, style=solid];
m0_123 -> m0_124  [key=0, style=solid];
m0_123 -> m0_123  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_124 -> m0_122  [key=0, style=bold, color=blue];
m0_27 -> m0_28  [key=0, style=solid];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_30  [key=2, style=dotted];
m0_28 -> m0_188  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_29 -> m0_27  [key=0, style=bold, color=blue];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_104  [key=3, color=darkorchid, style=bold, label="method methodReturn Humanizer.Bytes.ByteSize AddBytes"];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_12  [key=2, style=dotted];
m0_88 -> m0_86  [key=0, style=bold, color=blue];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_104  [key=3, color=darkorchid, style=bold, label="method methodReturn Humanizer.Bytes.ByteSize AddMegabytes"];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_18  [key=2, style=dotted];
m0_94 -> m0_92  [key=0, style=bold, color=blue];
m0_80 -> m0_81  [key=0, style=solid];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_0  [key=2, style=dotted];
m0_81 -> m0_195  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_81 -> m0_81  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_82 -> m0_80  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label=double];
m0_0 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label=double];
m0_0 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label=double];
m0_0 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label=double];
m0_0 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label=double];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_8  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_4  [key=0, style=solid];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_6 -> m0_7  [key=0, style=solid];
m0_7 -> m0_0  [key=0, style=bold, color=blue];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_92  [key=3, color=darkorchid, style=bold, label="Parameter variable double value"];
m0_18 -> m0_151  [key=3, color=darkorchid, style=bold, label="Parameter variable double value"];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_0  [key=2, style=dotted];
m0_20 -> m0_18  [key=0, style=bold, color=blue];
m0_134 -> m0_135  [key=0, style=solid];
m0_134 -> m0_138  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_134 -> m0_62  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryParse"];
m0_134 -> m0_169  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryParse"];
m0_134 -> m0_9  [key=3, color=darkorchid, style=bold, label="Parameter variable Humanizer.Bytes.ByteSize result"];
m0_134 -> m0_12  [key=3, color=darkorchid, style=bold, label="Parameter variable Humanizer.Bytes.ByteSize result"];
m0_134 -> m0_15  [key=3, color=darkorchid, style=bold, label="Parameter variable Humanizer.Bytes.ByteSize result"];
m0_134 -> m0_18  [key=3, color=darkorchid, style=bold, label="Parameter variable Humanizer.Bytes.ByteSize result"];
m0_134 -> m0_21  [key=3, color=darkorchid, style=bold, label="Parameter variable Humanizer.Bytes.ByteSize result"];
m0_134 -> m0_24  [key=3, color=darkorchid, style=bold, label="Parameter variable Humanizer.Bytes.ByteSize result"];
m0_134 -> m0_181  [key=3, color=darkorchid, style=bold, label="Parameter variable Humanizer.Bytes.ByteSize result"];
m0_134 -> m0_180  [key=3, color=darkorchid, style=bold, label="Parameter variable string s"];
m0_135 -> m0_136  [key=0, style=solid];
m0_135 -> m0_137  [key=0, style=solid];
m0_135 -> m0_171  [key=2, style=dotted];
m0_138 -> m0_139  [key=0, style=solid];
m0_138 -> m0_174  [key=2, style=dotted];
m0_138 -> m0_138  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_138 -> m0_142  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_138 -> m0_143  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_138 -> m0_149  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_138 -> m0_150  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_136 -> m0_170  [key=0, style=solid];
m0_136 -> m0_172  [key=2, style=dotted];
m0_137 -> m0_138  [key=0, style=solid];
m0_137 -> m0_173  [key=2, style=dotted];
m0_139 -> m0_140  [key=0, style=solid];
m0_142 -> m0_143  [key=0, style=solid];
m0_142 -> m0_146  [key=0, style=solid];
m0_143 -> m0_144  [key=0, style=solid];
m0_143 -> m0_145  [key=0, style=solid];
m0_143 -> m0_175  [key=2, style=dotted];
m0_149 -> m0_150  [key=0, style=solid];
m0_149 -> m0_176  [key=2, style=dotted];
m0_149 -> m0_177  [key=2, style=dotted];
m0_149 -> m0_152  [key=1, style=dashed, color=darkseagreen4, label=numberPart];
m0_150 -> m0_151  [key=0, style=solid];
m0_150 -> m0_176  [key=2, style=dotted];
m0_150 -> m0_177  [key=2, style=dotted];
m0_150 -> m0_154  [key=1, style=dashed, color=darkseagreen4, label=sizePart];
m0_150 -> m0_156  [key=1, style=dashed, color=darkseagreen4, label=sizePart];
m0_140 -> m0_141  [key=0, style=solid];
m0_140 -> m0_146  [key=1, style=dashed, color=darkseagreen4, label=found];
m0_140 -> m0_62  [key=3, color=darkorchid, style=bold, label="Local variable bool found"];
m0_141 -> m0_142  [key=0, style=solid];
m0_141 -> m0_143  [key=1, style=dashed, color=darkseagreen4, label=num];
m0_141 -> m0_145  [key=1, style=dashed, color=darkseagreen4, label=num];
m0_141 -> m0_148  [key=1, style=dashed, color=darkseagreen4, label=num];
m0_146 -> m0_147  [key=0, style=solid];
m0_146 -> m0_148  [key=0, style=solid];
m0_145 -> m0_142  [key=0, style=solid];
m0_145 -> m0_145  [key=1, style=dashed, color=darkseagreen4, label=num];
m0_145 -> m0_148  [key=1, style=dashed, color=darkseagreen4, label=num];
m0_148 -> m0_149  [key=0, style=solid];
m0_148 -> m0_150  [key=1, style=dashed, color=darkseagreen4, label=lastNumber];
m0_148 -> m0_139  [key=3, color=darkorchid, style=bold, label="Local variable int lastNumber"];
m0_144 -> m0_146  [key=0, style=solid];
m0_147 -> m0_170  [key=0, style=solid];
m0_152 -> m0_153  [key=0, style=solid];
m0_152 -> m0_154  [key=0, style=solid];
m0_152 -> m0_178  [key=2, style=dotted];
m0_152 -> m0_157  [key=1, style=dashed, color=darkseagreen4, label=number];
m0_152 -> m0_159  [key=1, style=dashed, color=darkseagreen4, label=number];
m0_152 -> m0_160  [key=1, style=dashed, color=darkseagreen4, label=number];
m0_152 -> m0_162  [key=1, style=dashed, color=darkseagreen4, label=number];
m0_152 -> m0_164  [key=1, style=dashed, color=darkseagreen4, label=number];
m0_152 -> m0_166  [key=1, style=dashed, color=darkseagreen4, label=number];
m0_152 -> m0_168  [key=1, style=dashed, color=darkseagreen4, label=number];
m0_151 -> m0_152  [key=0, style=solid];
m0_154 -> m0_155  [key=0, style=solid];
m0_154 -> m0_161  [key=0, style=solid];
m0_154 -> m0_163  [key=0, style=solid];
m0_154 -> m0_165  [key=0, style=solid];
m0_154 -> m0_167  [key=0, style=solid];
m0_154 -> m0_179  [key=2, style=dotted];
m0_156 -> m0_157  [key=0, style=solid];
m0_156 -> m0_160  [key=0, style=solid];
m0_153 -> m0_170  [key=0, style=solid];
m0_157 -> m0_158  [key=0, style=solid];
m0_157 -> m0_159  [key=0, style=solid];
m0_159 -> m0_169  [key=0, style=solid];
m0_159 -> m0_9  [key=2, style=dotted];
m0_160 -> m0_169  [key=0, style=solid];
m0_160 -> m0_12  [key=2, style=dotted];
m0_162 -> m0_169  [key=0, style=solid];
m0_162 -> m0_15  [key=2, style=dotted];
m0_164 -> m0_169  [key=0, style=solid];
m0_164 -> m0_18  [key=2, style=dotted];
m0_166 -> m0_169  [key=0, style=solid];
m0_166 -> m0_21  [key=2, style=dotted];
m0_168 -> m0_169  [key=0, style=solid];
m0_168 -> m0_24  [key=2, style=dotted];
m0_168 -> m0_170  [key=1, style=dashed, color=darkseagreen4, label="out Humanizer.Bytes.ByteSize"];
m0_155 -> m0_156  [key=0, style=solid];
m0_161 -> m0_162  [key=0, style=solid];
m0_163 -> m0_164  [key=0, style=solid];
m0_165 -> m0_166  [key=0, style=solid];
m0_167 -> m0_168  [key=0, style=solid];
m0_158 -> m0_170  [key=0, style=solid];
m0_169 -> m0_170  [key=0, style=solid];
m0_170 -> m0_134  [key=0, style=bold, color=blue];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_86  [key=3, color=darkorchid, style=bold, label="Parameter variable double value"];
m0_12 -> m0_151  [key=3, color=darkorchid, style=bold, label="Parameter variable double value"];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_0  [key=2, style=dotted];
m0_14 -> m0_12  [key=0, style=bold, color=blue];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_31 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_31 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_31 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_31 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_31 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_31 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_31 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_34  [key=0, style=solid];
m0_32 -> m0_50  [key=2, style=dotted];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_33 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_33 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_33 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_33 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_33 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_33 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_34 -> m0_36  [key=1, style=dashed, color=darkseagreen4, label=has];
m0_34 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label=has];
m0_34 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label=has];
m0_34 -> m0_42  [key=1, style=dashed, color=darkseagreen4, label=has];
m0_34 -> m0_34  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<string, bool> has"];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label=double];
m0_35 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label=output];
m0_35 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label=output];
m0_35 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label=output];
m0_35 -> m0_43  [key=1, style=dashed, color=darkseagreen4, label=output];
m0_35 -> m0_45  [key=1, style=dashed, color=darkseagreen4, label=output];
m0_35 -> m0_47  [key=1, style=dashed, color=darkseagreen4, label=output];
m0_35 -> m0_35  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<double, string> output"];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_46  [key=0, style=solid];
m0_44 -> m0_52  [key=2, style=dotted];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_48  [key=0, style=solid];
m0_46 -> m0_52  [key=2, style=dotted];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_53  [key=2, style=dotted];
m0_48 -> m0_30  [key=2, style=dotted];
m0_48 -> m0_189  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_38  [key=0, style=solid];
m0_36 -> m0_51  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_40  [key=0, style=solid];
m0_38 -> m0_51  [key=2, style=dotted];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_42  [key=0, style=solid];
m0_40 -> m0_51  [key=2, style=dotted];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_44  [key=0, style=solid];
m0_42 -> m0_51  [key=2, style=dotted];
m0_37 -> m0_49  [key=0, style=solid];
m0_37 -> m0_51  [key=2, style=dotted];
m0_37 -> m0_189  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_39 -> m0_49  [key=0, style=solid];
m0_39 -> m0_51  [key=2, style=dotted];
m0_39 -> m0_189  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_41 -> m0_49  [key=0, style=solid];
m0_41 -> m0_51  [key=2, style=dotted];
m0_41 -> m0_189  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_43 -> m0_49  [key=0, style=solid];
m0_43 -> m0_51  [key=2, style=dotted];
m0_43 -> m0_189  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_45 -> m0_49  [key=0, style=solid];
m0_45 -> m0_51  [key=2, style=dotted];
m0_45 -> m0_189  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_47 -> m0_49  [key=0, style=solid];
m0_47 -> m0_51  [key=2, style=dotted];
m0_47 -> m0_189  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_49 -> m0_31  [key=0, style=bold, color=blue];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_63  [key=3, color=darkorchid, style=bold, label="Parameter variable Humanizer.Bytes.ByteSize value"];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_192  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_70 -> m0_70  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_71 -> m0_69  [key=0, style=bold, color=blue];
m0_101 -> m0_102  [key=0, style=solid];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_0  [key=2, style=dotted];
m0_102 -> m0_197  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_102 -> m0_102  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_103 -> m0_101  [key=0, style=bold, color=blue];
m0_110 -> m0_111  [key=0, style=solid];
m0_111 -> m0_112  [key=0, style=solid];
m0_111 -> m0_0  [key=2, style=dotted];
m0_111 -> m0_111  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_112 -> m0_110  [key=0, style=bold, color=blue];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_104  [key=3, color=darkorchid, style=bold, label="method methodReturn Humanizer.Bytes.ByteSize AddGigabytes"];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_21  [key=2, style=dotted];
m0_97 -> m0_95  [key=0, style=bold, color=blue];
m0_180 -> m0_181  [key=0, style=solid];
m0_180 -> m0_182  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_181 -> m0_182  [key=0, style=solid];
m0_182 -> m0_183  [key=0, style=solid];
m0_182 -> m0_184  [key=0, style=solid];
m0_182 -> m0_134  [key=2, style=dotted];
m0_183 -> m0_185  [key=0, style=solid];
m0_184 -> m0_185  [key=0, style=solid];
m0_184 -> m0_186  [key=2, style=dotted];
m0_185 -> m0_180  [key=0, style=bold, color=blue];
m0_76 -> m0_77  [key=0, style=solid];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_79  [key=2, style=dotted];
m0_77 -> m0_194  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_77 -> m0_77  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_78 -> m0_76  [key=0, style=bold, color=blue];
m0_128 -> m0_129  [key=0, style=solid];
m0_129 -> m0_130  [key=0, style=solid];
m0_129 -> m0_129  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_130 -> m0_128  [key=0, style=bold, color=blue];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_98  [key=3, color=darkorchid, style=bold, label="Parameter variable double value"];
m0_24 -> m0_151  [key=3, color=darkorchid, style=bold, label="Parameter variable double value"];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_0  [key=2, style=dotted];
m0_26 -> m0_24  [key=0, style=bold, color=blue];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_95  [key=3, color=darkorchid, style=bold, label="Parameter variable double value"];
m0_21 -> m0_151  [key=3, color=darkorchid, style=bold, label="Parameter variable double value"];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_0  [key=2, style=dotted];
m0_23 -> m0_21  [key=0, style=bold, color=blue];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_89  [key=3, color=darkorchid, style=bold, label="Parameter variable double value"];
m0_15 -> m0_151  [key=3, color=darkorchid, style=bold, label="Parameter variable double value"];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_0  [key=2, style=dotted];
m0_17 -> m0_15  [key=0, style=bold, color=blue];
m0_57 -> m0_58  [key=0, style=solid];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_52  [key=2, style=dotted];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_53  [key=2, style=dotted];
m0_54 -> m0_55  [key=0, style=solid];
m0_56 -> m0_54  [key=0, style=bold, color=blue];
m0_59 -> m0_57  [key=0, style=bold, color=blue];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_104  [key=3, color=darkorchid, style=bold, label="method methodReturn Humanizer.Bytes.ByteSize AddTerabytes"];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_24  [key=2, style=dotted];
m0_100 -> m0_98  [key=0, style=bold, color=blue];
m0_72 -> m0_73  [key=0, style=solid];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_75  [key=2, style=dotted];
m0_73 -> m0_193  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_74 -> m0_72  [key=0, style=bold, color=blue];
m0_113 -> m0_114  [key=0, style=solid];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_0  [key=2, style=dotted];
m0_114 -> m0_114  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_115 -> m0_113  [key=0, style=bold, color=blue];
m0_131 -> m0_132  [key=0, style=solid];
m0_132 -> m0_133  [key=0, style=solid];
m0_132 -> m0_132  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_133 -> m0_131  [key=0, style=bold, color=blue];
m0_116 -> m0_117  [key=0, style=solid];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_117  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_118 -> m0_116  [key=0, style=bold, color=blue];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_12  [key=3, color=darkorchid, style=bold, label="Parameter variable Humanizer.Bytes.ByteSize b2"];
m0_104 -> m0_15  [key=3, color=darkorchid, style=bold, label="Parameter variable Humanizer.Bytes.ByteSize b2"];
m0_104 -> m0_18  [key=3, color=darkorchid, style=bold, label="Parameter variable Humanizer.Bytes.ByteSize b2"];
m0_104 -> m0_21  [key=3, color=darkorchid, style=bold, label="Parameter variable Humanizer.Bytes.ByteSize b2"];
m0_104 -> m0_24  [key=3, color=darkorchid, style=bold, label="Parameter variable Humanizer.Bytes.ByteSize b2"];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_0  [key=2, style=dotted];
m0_105 -> m0_105  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_106 -> m0_104  [key=0, style=bold, color=blue];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_104  [key=3, color=darkorchid, style=bold, label="method methodReturn Humanizer.Bytes.ByteSize AddKilobytes"];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_15  [key=2, style=dotted];
m0_91 -> m0_89  [key=0, style=bold, color=blue];
m0_187 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_187 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_187 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_187 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_187 -> m0_43  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_187 -> m0_45  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_187 -> m0_47  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_187 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_187 -> m0_67  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_187 -> m0_70  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_187 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_187 -> m0_77  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_187 -> m0_81  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_187 -> m0_84  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_187 -> m0_87  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_187 -> m0_90  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_187 -> m0_93  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_187 -> m0_96  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_187 -> m0_99  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_187 -> m0_102  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Bytes.ByteSize"];
m0_188 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label="ref Humanizer.Bytes.ByteSize"];
m0_189 -> m0_49  [key=1, style=dashed, color=darkseagreen4, label="ref Humanizer.Bytes.ByteSize"];
m0_190 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_190 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_191 -> m0_68  [key=1, style=dashed, color=darkseagreen4, label="ref Humanizer.Bytes.ByteSize"];
m0_192 -> m0_71  [key=1, style=dashed, color=darkseagreen4, label="ref Humanizer.Bytes.ByteSize"];
m0_193 -> m0_74  [key=1, style=dashed, color=darkseagreen4, label="ref Humanizer.Bytes.ByteSize"];
m0_194 -> m0_78  [key=1, style=dashed, color=darkseagreen4, label="ref Humanizer.Bytes.ByteSize"];
m0_195 -> m0_82  [key=1, style=dashed, color=darkseagreen4, label="ref Humanizer.Bytes.ByteSize"];
m0_196 -> m0_85  [key=1, style=dashed, color=darkseagreen4, label="ref Humanizer.Bytes.ByteSize"];
m0_197 -> m0_103  [key=1, style=dashed, color=darkseagreen4, label="ref Humanizer.Bytes.ByteSize"];
m1_23 -> m1_24  [key=0, style=solid];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_3  [key=2, style=dotted];
m1_24 -> m1_4  [key=2, style=dotted];
m1_25 -> m1_23  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_1 -> m1_4  [key=2, style=dotted];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m1_8 -> m1_9  [key=0, style=solid, color=green];
m1_9 -> m1_10  [key=0, style=solid, color=green];
m1_9 -> m1_3  [key=2, style=dotted];
m1_9 -> m1_4  [key=2, style=dotted];
m1_9 -> m1_11  [key=2, style=dotted, color=green];
m1_10 -> m1_8  [key=0, style=bold, color=blue];
m1_30 -> m1_31  [key=0, style=solid];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_29  [key=2, style=dotted];
m1_31 -> m1_4  [key=2, style=dotted];
m1_32 -> m1_30  [key=0, style=bold, color=blue];
m1_36 -> m1_37  [key=0, style=solid];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_29  [key=2, style=dotted];
m1_37 -> m1_4  [key=2, style=dotted];
m1_38 -> m1_36  [key=0, style=bold, color=blue];
m1_39 -> m1_40  [key=0, style=solid];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_29  [key=2, style=dotted];
m1_40 -> m1_4  [key=2, style=dotted];
m1_41 -> m1_39  [key=0, style=bold, color=blue];
m1_11 -> m1_12  [key=0, style=solid];
m1_26 -> m1_27  [key=0, style=solid];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_29  [key=2, style=dotted];
m1_27 -> m1_4  [key=2, style=dotted];
m1_28 -> m1_26  [key=0, style=bold, color=blue];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_12  [key=0, style=bold, color=blue];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_3  [key=2, style=dotted];
m1_15 -> m1_4  [key=2, style=dotted];
m1_16 -> m1_14  [key=0, style=bold, color=blue];
m1_16 -> m1_17  [key=0, style=solid];
m1_42 -> m1_43  [key=0, style=solid];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_29  [key=2, style=dotted];
m1_43 -> m1_4  [key=2, style=dotted];
m1_44 -> m1_42  [key=0, style=bold, color=blue];
m1_33 -> m1_34  [key=0, style=solid];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_29  [key=2, style=dotted];
m1_34 -> m1_4  [key=2, style=dotted];
m1_35 -> m1_33  [key=0, style=bold, color=blue];
m1_5 -> m1_6  [key=0, style=solid];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_3  [key=2, style=dotted];
m1_6 -> m1_4  [key=2, style=dotted];
m1_7 -> m1_5  [key=0, style=bold, color=blue];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_15  [key=2, style=dotted];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_3  [key=2, style=dotted];
m1_21 -> m1_4  [key=2, style=dotted];
m1_21 -> m1_19  [key=0, style=bold, color=blue];
m1_22 -> m1_20  [key=0, style=bold, color=blue];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_17  [key=0, style=bold, color=blue];
m1_13 -> m1_14  [key=0, style=solid, color=green];
m1_13 -> m1_15  [key=2, style=dotted, color=green];
m1_13 -> m1_11  [key=0, style=bold, color=blue];
m1_12 -> m1_13  [key=0, style=solid, color=green];
m1_12 -> m1_3  [key=2, style=dotted];
m1_12 -> m1_4  [key=2, style=dotted];
m1_17 -> m1_15  [key=2, style=dotted];
m1_17 -> m1_18  [key=0, style=solid];
m1_18 -> m1_16  [key=0, style=bold, color=blue];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_3  [key=2, style=dotted];
m1_18 -> m1_4  [key=2, style=dotted];
m1_45 -> m1_46  [key=0, style=solid];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_29  [key=2, style=dotted];
m1_46 -> m1_4  [key=2, style=dotted];
m1_47 -> m1_45  [key=0, style=bold, color=blue];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_10  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_3  [key=2, style=dotted];
m3_9 -> m3_4  [key=2, style=dotted];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_3  [key=2, style=dotted];
m3_10 -> m3_4  [key=2, style=dotted];
m3_11 -> m3_8  [key=0, style=bold, color=blue];
m3_27 -> m3_28  [key=0, style=solid];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_30  [key=2, style=dotted];
m3_28 -> m3_4  [key=2, style=dotted];
m3_29 -> m3_27  [key=0, style=bold, color=blue];
m3_16 -> m3_17  [key=0, style=solid];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_15  [key=2, style=dotted];
m3_17 -> m3_4  [key=2, style=dotted];
m3_18 -> m3_16  [key=0, style=bold, color=blue];
m3_39 -> m3_40  [key=0, style=solid];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_42  [key=2, style=dotted];
m3_40 -> m3_4  [key=2, style=dotted];
m3_41 -> m3_39  [key=0, style=bold, color=blue];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_49  [key=0, style=bold, color=crimson];
m3_47 -> m3_50  [key=0, style=bold, color=crimson];
m3_47 -> m3_51  [key=0, style=bold, color=crimson];
m3_47 -> m3_52  [key=0, style=bold, color=crimson];
m3_47 -> m3_53  [key=0, style=bold, color=crimson];
m3_47 -> m3_54  [key=0, style=bold, color=crimson];
m3_47 -> m3_55  [key=0, style=bold, color=crimson];
m3_47 -> m3_56  [key=0, style=bold, color=crimson];
m3_47 -> m3_57  [key=0, style=bold, color=crimson];
m3_47 -> m3_58  [key=0, style=bold, color=crimson];
m3_47 -> m3_59  [key=0, style=bold, color=crimson];
m3_47 -> m3_60  [key=0, style=bold, color=crimson];
m3_47 -> m3_61  [key=0, style=bold, color=crimson];
m3_47 -> m3_62  [key=0, style=bold, color=crimson];
m3_47 -> m3_63  [key=0, style=bold, color=crimson];
m3_47 -> m3_64  [key=0, style=bold, color=crimson];
m3_47 -> m3_65  [key=0, style=bold, color=crimson];
m3_47 -> m3_66  [key=0, style=bold, color=crimson];
m3_47 -> m3_67  [key=0, style=bold, color=crimson];
m3_47 -> m3_68  [key=0, style=bold, color=crimson];
m3_47 -> m3_69  [key=0, style=bold, color=crimson];
m3_47 -> m3_70  [key=0, style=bold, color=crimson];
m3_47 -> m3_71  [key=0, style=bold, color=crimson];
m3_47 -> m3_72  [key=0, style=bold, color=crimson];
m3_47 -> m3_73  [key=0, style=bold, color=crimson];
m3_47 -> m3_74  [key=0, style=bold, color=crimson];
m3_47 -> m3_75  [key=0, style=bold, color=crimson];
m3_47 -> m3_76  [key=0, style=bold, color=crimson];
m3_47 -> m3_77  [key=0, style=bold, color=crimson];
m3_47 -> m3_78  [key=0, style=bold, color=crimson];
m3_47 -> m3_79  [key=0, style=bold, color=crimson];
m3_47 -> m3_80  [key=0, style=bold, color=crimson];
m3_47 -> m3_81  [key=0, style=bold, color=crimson];
m3_47 -> m3_82  [key=0, style=bold, color=crimson];
m3_47 -> m3_83  [key=0, style=bold, color=crimson];
m3_47 -> m3_84  [key=0, style=bold, color=crimson];
m3_47 -> m3_85  [key=0, style=bold, color=crimson];
m3_47 -> m3_86  [key=0, style=bold, color=crimson];
m3_47 -> m3_87  [key=0, style=bold, color=crimson];
m3_47 -> m3_88  [key=0, style=bold, color=crimson];
m3_47 -> m3_89  [key=0, style=bold, color=crimson];
m3_47 -> m3_90  [key=0, style=bold, color=crimson];
m3_47 -> m3_91  [key=0, style=bold, color=crimson];
m3_47 -> m3_92  [key=0, style=bold, color=crimson];
m3_47 -> m3_93  [key=0, style=bold, color=crimson];
m3_47 -> m3_94  [key=0, style=bold, color=crimson];
m3_47 -> m3_95  [key=0, style=bold, color=crimson];
m3_47 -> m3_96  [key=0, style=bold, color=crimson];
m3_47 -> m3_97  [key=0, style=bold, color=crimson];
m3_47 -> m3_98  [key=0, style=bold, color=crimson];
m3_47 -> m3_99  [key=0, style=bold, color=crimson];
m3_47 -> m3_100  [key=0, style=bold, color=crimson];
m3_47 -> m3_101  [key=0, style=bold, color=crimson];
m3_47 -> m3_102  [key=0, style=bold, color=crimson];
m3_47 -> m3_103  [key=0, style=bold, color=crimson];
m3_47 -> m3_104  [key=0, style=bold, color=crimson];
m3_47 -> m3_105  [key=0, style=bold, color=crimson];
m3_47 -> m3_106  [key=0, style=bold, color=crimson];
m3_47 -> m3_107  [key=0, style=bold, color=crimson];
m3_47 -> m3_108  [key=0, style=bold, color=crimson];
m3_47 -> m3_109  [key=0, style=bold, color=crimson];
m3_47 -> m3_110  [key=0, style=bold, color=crimson];
m3_47 -> m3_111  [key=0, style=bold, color=crimson];
m3_47 -> m3_112  [key=0, style=bold, color=crimson];
m3_47 -> m3_113  [key=0, style=bold, color=crimson];
m3_47 -> m3_114  [key=0, style=bold, color=crimson];
m3_47 -> m3_115  [key=0, style=bold, color=crimson];
m3_47 -> m3_116  [key=0, style=bold, color=crimson];
m3_47 -> m3_117  [key=0, style=bold, color=crimson];
m3_47 -> m3_118  [key=0, style=bold, color=crimson];
m3_47 -> m3_119  [key=0, style=bold, color=crimson];
m3_47 -> m3_120  [key=0, style=bold, color=crimson];
m3_47 -> m3_121  [key=0, style=bold, color=crimson];
m3_47 -> m3_122  [key=0, style=bold, color=crimson];
m3_47 -> m3_123  [key=0, style=bold, color=crimson];
m3_47 -> m3_124  [key=0, style=bold, color=crimson];
m3_47 -> m3_125  [key=0, style=bold, color=crimson];
m3_47 -> m3_126  [key=0, style=bold, color=crimson];
m3_47 -> m3_127  [key=0, style=bold, color=crimson];
m3_47 -> m3_128  [key=0, style=bold, color=crimson];
m3_48 -> m3_49  [key=0, style=solid];
m3_49 -> m3_50  [key=0, style=solid];
m3_50 -> m3_51  [key=0, style=solid];
m3_51 -> m3_52  [key=0, style=solid];
m3_52 -> m3_53  [key=0, style=solid];
m3_53 -> m3_54  [key=0, style=solid];
m3_54 -> m3_55  [key=0, style=solid];
m3_55 -> m3_56  [key=0, style=solid];
m3_56 -> m3_57  [key=0, style=solid];
m3_57 -> m3_58  [key=0, style=solid];
m3_58 -> m3_59  [key=0, style=solid];
m3_59 -> m3_60  [key=0, style=solid];
m3_60 -> m3_61  [key=0, style=solid];
m3_61 -> m3_62  [key=0, style=solid];
m3_62 -> m3_63  [key=0, style=solid];
m3_63 -> m3_64  [key=0, style=solid];
m3_64 -> m3_65  [key=0, style=solid];
m3_65 -> m3_66  [key=0, style=solid];
m3_66 -> m3_67  [key=0, style=solid];
m3_67 -> m3_68  [key=0, style=solid];
m3_68 -> m3_69  [key=0, style=solid];
m3_69 -> m3_70  [key=0, style=solid];
m3_70 -> m3_71  [key=0, style=solid];
m3_71 -> m3_72  [key=0, style=solid];
m3_72 -> m3_73  [key=0, style=solid];
m3_73 -> m3_74  [key=0, style=solid];
m3_74 -> m3_75  [key=0, style=solid];
m3_75 -> m3_76  [key=0, style=solid];
m3_76 -> m3_77  [key=0, style=solid];
m3_77 -> m3_78  [key=0, style=solid];
m3_78 -> m3_79  [key=0, style=solid];
m3_79 -> m3_80  [key=0, style=solid];
m3_80 -> m3_81  [key=0, style=solid];
m3_81 -> m3_82  [key=0, style=solid];
m3_82 -> m3_83  [key=0, style=solid];
m3_83 -> m3_84  [key=0, style=solid];
m3_84 -> m3_85  [key=0, style=solid];
m3_85 -> m3_86  [key=0, style=solid];
m3_86 -> m3_87  [key=0, style=solid];
m3_87 -> m3_88  [key=0, style=solid];
m3_88 -> m3_89  [key=0, style=solid];
m3_89 -> m3_90  [key=0, style=solid];
m3_90 -> m3_91  [key=0, style=solid];
m3_91 -> m3_92  [key=0, style=solid];
m3_92 -> m3_93  [key=0, style=solid];
m3_93 -> m3_94  [key=0, style=solid];
m3_94 -> m3_95  [key=0, style=solid];
m3_95 -> m3_96  [key=0, style=solid];
m3_96 -> m3_97  [key=0, style=solid];
m3_97 -> m3_98  [key=0, style=solid];
m3_98 -> m3_99  [key=0, style=solid];
m3_99 -> m3_100  [key=0, style=solid];
m3_100 -> m3_101  [key=0, style=solid];
m3_101 -> m3_102  [key=0, style=solid];
m3_102 -> m3_103  [key=0, style=solid];
m3_103 -> m3_104  [key=0, style=solid];
m3_104 -> m3_105  [key=0, style=solid];
m3_105 -> m3_106  [key=0, style=solid];
m3_106 -> m3_107  [key=0, style=solid];
m3_107 -> m3_108  [key=0, style=solid];
m3_108 -> m3_109  [key=0, style=solid];
m3_109 -> m3_110  [key=0, style=solid];
m3_110 -> m3_111  [key=0, style=solid];
m3_111 -> m3_112  [key=0, style=solid];
m3_112 -> m3_113  [key=0, style=solid];
m3_113 -> m3_114  [key=0, style=solid];
m3_114 -> m3_115  [key=0, style=solid];
m3_115 -> m3_116  [key=0, style=solid];
m3_116 -> m3_117  [key=0, style=solid];
m3_117 -> m3_118  [key=0, style=solid];
m3_118 -> m3_119  [key=0, style=solid];
m3_119 -> m3_120  [key=0, style=solid];
m3_120 -> m3_121  [key=0, style=solid];
m3_121 -> m3_122  [key=0, style=solid];
m3_122 -> m3_123  [key=0, style=solid];
m3_123 -> m3_124  [key=0, style=solid];
m3_124 -> m3_125  [key=0, style=solid];
m3_125 -> m3_126  [key=0, style=solid];
m3_126 -> m3_127  [key=0, style=solid];
m3_127 -> m3_128  [key=0, style=solid];
m3_128 -> m3_129  [key=0, style=solid];
m3_129 -> m3_47  [key=0, style=bold, color=blue];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_21  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_15  [key=2, style=dotted];
m3_20 -> m3_4  [key=2, style=dotted];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_15  [key=2, style=dotted];
m3_21 -> m3_4  [key=2, style=dotted];
m3_22 -> m3_19  [key=0, style=bold, color=blue];
m3_43 -> m3_44  [key=0, style=solid];
m3_44 -> m3_45  [key=0, style=solid];
m3_44 -> m3_46  [key=2, style=dotted];
m3_44 -> m3_4  [key=2, style=dotted];
m3_45 -> m3_43  [key=0, style=bold, color=blue];
m3_23 -> m3_24  [key=0, style=solid];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_26  [key=2, style=dotted];
m3_24 -> m3_4  [key=2, style=dotted];
m3_25 -> m3_23  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=2, style=dotted];
m3_1 -> m3_4  [key=2, style=dotted];
m3_2 -> m3_0  [key=0, style=bold, color=blue];
m3_12 -> m3_13  [key=0, style=solid];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_15  [key=2, style=dotted];
m3_13 -> m3_4  [key=2, style=dotted];
m3_14 -> m3_12  [key=0, style=bold, color=blue];
m3_35 -> m3_36  [key=0, style=solid];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> m3_38  [key=2, style=dotted];
m3_36 -> m3_4  [key=2, style=dotted];
m3_37 -> m3_35  [key=0, style=bold, color=blue];
m3_31 -> m3_32  [key=0, style=solid];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_34  [key=2, style=dotted];
m3_32 -> m3_4  [key=2, style=dotted];
m3_33 -> m3_31  [key=0, style=bold, color=blue];
m3_130 -> m3_131  [key=0, style=solid];
m3_131 -> m3_132  [key=0, style=solid];
m3_131 -> m3_47  [key=2, style=dotted];
m3_132 -> m3_130  [key=0, style=bold, color=blue];
m3_5 -> m3_6  [key=0, style=solid];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_3  [key=2, style=dotted];
m3_6 -> m3_4  [key=2, style=dotted];
m3_7 -> m3_5  [key=0, style=bold, color=blue];
m3_133 -> m3_131  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.PluralTestSource"];
m4_0 -> m4_1  [key=0, style=solid, color=red];
m4_1 -> m4_2  [key=0, style=solid, color=red];
m4_1 -> m4_3  [key=2, style=dotted, color=red];
m4_2 -> m4_0  [key=0, style=bold, color=blue];
m4_3 -> m4_4  [key=0, style=solid, color=red];
m4_3 -> m4_6  [key=1, style=dashed, color=red, label="Humanizer.GrammaticalGender"];
m4_3 -> m4_7  [key=1, style=dashed, color=red, label=string];
m4_3 -> m4_8  [key=1, style=dashed, color=red, label=string];
m4_4 -> m4_5  [key=0, style=solid, color=red];
m4_4 -> m4_6  [key=0, style=solid, color=red];
m4_6 -> m4_7  [key=0, style=solid, color=red];
m4_6 -> m4_8  [key=0, style=solid, color=red];
m4_7 -> m4_9  [key=0, style=solid, color=red];
m4_8 -> m4_9  [key=0, style=solid, color=red];
m4_5 -> m4_9  [key=0, style=solid, color=red];
m4_9 -> m4_3  [key=0, style=bold, color=blue];
m4_10 -> m4_1  [key=1, style=dashed, color=red, label="Humanizer.Localisation.Ordinalizers.BrazilianPortugueseOrdinalizer"];
m6_16 -> m6_17  [key=0, style=solid, color=red];
m6_16 -> m6_19  [key=1, style=dashed, color=red, label=int];
m6_16 -> m6_21  [key=1, style=dashed, color=red, label=int];
m6_16 -> m6_23  [key=1, style=dashed, color=red, label=int];
m6_17 -> m6_18  [key=0, style=solid, color=red];
m6_17 -> m6_19  [key=0, style=solid, color=red];
m6_19 -> m6_20  [key=0, style=solid, color=red];
m6_19 -> m6_21  [key=0, style=solid, color=red];
m6_21 -> m6_22  [key=0, style=solid, color=red];
m6_23 -> m6_24  [key=0, style=solid, color=red];
m6_18 -> m6_27  [key=0, style=solid, color=red];
m6_20 -> m6_27  [key=0, style=solid, color=red];
m6_22 -> m6_23  [key=0, style=solid, color=red];
m6_22 -> m6_26  [key=0, style=solid, color=red];
m6_26 -> m6_27  [key=0, style=solid, color=red];
m6_24 -> m6_25  [key=0, style=solid, color=red];
m6_24 -> m6_26  [key=0, style=solid, color=red];
m6_25 -> m6_27  [key=0, style=solid, color=red];
m6_27 -> m6_16  [key=0, style=bold, color=blue];
m6_64 -> m6_65  [key=0, style=solid, color=red];
m6_65 -> m6_66  [key=0, style=solid, color=red];
m6_65 -> m6_67  [key=2, style=dotted, color=red];
m6_66 -> m6_64  [key=0, style=bold, color=blue];
m6_28 -> m6_29  [key=0, style=solid, color=red];
m6_28 -> m6_32  [key=1, style=dashed, color=red, label=int];
m6_28 -> m6_34  [key=1, style=dashed, color=red, label=int];
m6_28 -> m6_35  [key=1, style=dashed, color=red, label=int];
m6_28 -> m6_41  [key=1, style=dashed, color=red, label=int];
m6_28 -> m6_42  [key=1, style=dashed, color=red, label=int];
m6_28 -> m6_48  [key=1, style=dashed, color=red, label=int];
m6_28 -> m6_49  [key=1, style=dashed, color=red, label=int];
m6_28 -> m6_55  [key=1, style=dashed, color=red, label=int];
m6_28 -> m6_56  [key=1, style=dashed, color=red, label=int];
m6_29 -> m6_30  [key=0, style=solid, color=red];
m6_29 -> m6_31  [key=0, style=solid, color=red];
m6_32 -> m6_33  [key=0, style=solid, color=red];
m6_32 -> m6_35  [key=0, style=solid, color=red];
m6_34 -> m6_35  [key=0, style=solid, color=red];
m6_34 -> m6_34  [key=1, style=dashed, color=red, label=int];
m6_34 -> m6_41  [key=1, style=dashed, color=red, label=int];
m6_34 -> m6_42  [key=1, style=dashed, color=red, label=int];
m6_34 -> m6_48  [key=1, style=dashed, color=red, label=int];
m6_34 -> m6_49  [key=1, style=dashed, color=red, label=int];
m6_34 -> m6_55  [key=1, style=dashed, color=red, label=int];
m6_34 -> m6_56  [key=1, style=dashed, color=red, label=int];
m6_35 -> m6_36  [key=0, style=solid, color=red];
m6_35 -> m6_37  [key=1, style=dashed, color=red, label=milliard];
m6_35 -> m6_38  [key=1, style=dashed, color=red, label=milliard];
m6_35 -> m6_40  [key=1, style=dashed, color=red, label=milliard];
m6_41 -> m6_42  [key=0, style=solid, color=red];
m6_41 -> m6_41  [key=1, style=dashed, color=red, label=int];
m6_41 -> m6_48  [key=1, style=dashed, color=red, label=int];
m6_41 -> m6_49  [key=1, style=dashed, color=red, label=int];
m6_41 -> m6_55  [key=1, style=dashed, color=red, label=int];
m6_41 -> m6_56  [key=1, style=dashed, color=red, label=int];
m6_42 -> m6_43  [key=0, style=solid, color=red];
m6_42 -> m6_44  [key=1, style=dashed, color=red, label=million];
m6_42 -> m6_45  [key=1, style=dashed, color=red, label=million];
m6_42 -> m6_47  [key=1, style=dashed, color=red, label=million];
m6_48 -> m6_49  [key=0, style=solid, color=red];
m6_48 -> m6_48  [key=1, style=dashed, color=red, label=int];
m6_48 -> m6_55  [key=1, style=dashed, color=red, label=int];
m6_48 -> m6_56  [key=1, style=dashed, color=red, label=int];
m6_49 -> m6_50  [key=0, style=solid, color=red];
m6_49 -> m6_51  [key=1, style=dashed, color=red, label=thouthand];
m6_49 -> m6_52  [key=1, style=dashed, color=red, label=thouthand];
m6_49 -> m6_54  [key=1, style=dashed, color=red, label=thouthand];
m6_55 -> m6_56  [key=0, style=solid, color=red];
m6_55 -> m6_55  [key=1, style=dashed, color=red, label=int];
m6_56 -> m6_57  [key=0, style=solid, color=red];
m6_56 -> m6_58  [key=1, style=dashed, color=red, label=units];
m6_30 -> m6_60  [key=0, style=solid, color=red];
m6_31 -> m6_32  [key=0, style=solid, color=red];
m6_31 -> m6_61  [key=2, style=dotted, color=red];
m6_31 -> m6_33  [key=1, style=dashed, color=red, label=parts];
m6_31 -> m6_38  [key=1, style=dashed, color=red, label=parts];
m6_31 -> m6_40  [key=1, style=dashed, color=red, label=parts];
m6_31 -> m6_45  [key=1, style=dashed, color=red, label=parts];
m6_31 -> m6_47  [key=1, style=dashed, color=red, label=parts];
m6_31 -> m6_52  [key=1, style=dashed, color=red, label=parts];
m6_31 -> m6_54  [key=1, style=dashed, color=red, label=parts];
m6_31 -> m6_58  [key=1, style=dashed, color=red, label=parts];
m6_31 -> m6_59  [key=1, style=dashed, color=red, label=parts];
m6_33 -> m6_34  [key=0, style=solid, color=red];
m6_33 -> m6_62  [key=2, style=dotted, color=red];
m6_38 -> m6_39  [key=0, style=solid, color=red];
m6_38 -> m6_3  [key=2, style=dotted, color=red];
m6_40 -> m6_41  [key=0, style=solid, color=red];
m6_40 -> m6_16  [key=2, style=dotted, color=red];
m6_40 -> m6_62  [key=2, style=dotted, color=red];
m6_45 -> m6_46  [key=0, style=solid, color=red];
m6_45 -> m6_3  [key=2, style=dotted, color=red];
m6_47 -> m6_48  [key=0, style=solid, color=red];
m6_47 -> m6_16  [key=2, style=dotted, color=red];
m6_47 -> m6_62  [key=2, style=dotted, color=red];
m6_52 -> m6_53  [key=0, style=solid, color=red];
m6_52 -> m6_3  [key=2, style=dotted, color=red];
m6_54 -> m6_55  [key=0, style=solid, color=red];
m6_54 -> m6_16  [key=2, style=dotted, color=red];
m6_54 -> m6_62  [key=2, style=dotted, color=red];
m6_58 -> m6_59  [key=0, style=solid, color=red];
m6_58 -> m6_3  [key=2, style=dotted, color=red];
m6_59 -> m6_60  [key=0, style=solid, color=red];
m6_59 -> m6_63  [key=2, style=dotted, color=red];
m6_36 -> m6_37  [key=0, style=solid, color=red];
m6_36 -> m6_42  [key=0, style=solid, color=red];
m6_37 -> m6_38  [key=0, style=solid, color=red];
m6_37 -> m6_39  [key=0, style=solid, color=red];
m6_39 -> m6_40  [key=0, style=solid, color=red];
m6_43 -> m6_44  [key=0, style=solid, color=red];
m6_43 -> m6_49  [key=0, style=solid, color=red];
m6_44 -> m6_45  [key=0, style=solid, color=red];
m6_44 -> m6_46  [key=0, style=solid, color=red];
m6_46 -> m6_47  [key=0, style=solid, color=red];
m6_50 -> m6_51  [key=0, style=solid, color=red];
m6_50 -> m6_56  [key=0, style=solid, color=red];
m6_51 -> m6_52  [key=0, style=solid, color=red];
m6_51 -> m6_53  [key=0, style=solid, color=red];
m6_53 -> m6_54  [key=0, style=solid, color=red];
m6_57 -> m6_58  [key=0, style=solid, color=red];
m6_57 -> m6_59  [key=0, style=solid, color=red];
m6_60 -> m6_28  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid, color=red];
m6_1 -> m6_2  [key=0, style=solid, color=red];
m6_2 -> m6_0  [key=0, style=bold, color=blue];
m6_3 -> m6_4  [key=0, style=solid, color=red];
m6_3 -> m6_6  [key=1, style=dashed, color=red, label="System.Collections.Generic.ICollection<string>"];
m6_3 -> m6_7  [key=1, style=dashed, color=red, label=int];
m6_3 -> m6_8  [key=1, style=dashed, color=red, label=int];
m6_3 -> m6_10  [key=1, style=dashed, color=red, label="System.Collections.Generic.ICollection<string>"];
m6_3 -> m6_11  [key=1, style=dashed, color=red, label=int];
m6_3 -> m6_12  [key=1, style=dashed, color=red, label=int];
m6_3 -> m6_13  [key=1, style=dashed, color=red, label="System.Collections.Generic.ICollection<string>"];
m6_4 -> m6_5  [key=0, style=solid, color=red];
m6_4 -> m6_6  [key=1, style=dashed, color=red, label=hundreds];
m6_6 -> m6_7  [key=0, style=solid, color=red];
m6_6 -> m6_15  [key=2, style=dotted, color=red];
m6_7 -> m6_8  [key=0, style=solid, color=red];
m6_7 -> m6_7  [key=1, style=dashed, color=red, label=int];
m6_7 -> m6_11  [key=1, style=dashed, color=red, label=int];
m6_7 -> m6_12  [key=1, style=dashed, color=red, label=int];
m6_7 -> m6_13  [key=1, style=dashed, color=red, label=int];
m6_8 -> m6_9  [key=0, style=solid, color=red];
m6_8 -> m6_10  [key=1, style=dashed, color=red, label=tens];
m6_10 -> m6_11  [key=0, style=solid, color=red];
m6_10 -> m6_15  [key=2, style=dotted, color=red];
m6_11 -> m6_12  [key=0, style=solid, color=red];
m6_11 -> m6_11  [key=1, style=dashed, color=red, label=int];
m6_11 -> m6_13  [key=1, style=dashed, color=red, label=int];
m6_12 -> m6_13  [key=0, style=solid, color=red];
m6_12 -> m6_14  [key=0, style=solid, color=red];
m6_13 -> m6_14  [key=0, style=solid, color=red];
m6_13 -> m6_15  [key=2, style=dotted, color=red];
m6_5 -> m6_6  [key=0, style=solid, color=red];
m6_5 -> m6_8  [key=0, style=solid, color=red];
m6_9 -> m6_10  [key=0, style=solid, color=red];
m6_9 -> m6_12  [key=0, style=solid, color=red];
m6_14 -> m6_3  [key=0, style=bold, color=blue];
m6_68 -> m6_1  [key=1, style=dashed, color=red, label="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter"];
m6_68 -> m6_65  [key=1, style=dashed, color=red, label="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter"];
m7_7 -> m7_8  [key=0, style=solid];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_5  [key=2, style=dotted];
m7_8 -> m7_6  [key=2, style=dotted];
m7_9 -> m7_7  [key=0, style=bold, color=blue];
m7_2 -> m7_3  [key=0, style=solid];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_5  [key=2, style=dotted];
m7_3 -> m7_6  [key=2, style=dotted];
m7_4 -> m7_2  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_0  [key=0, style=bold, color=blue];
m7_10 -> m7_11  [key=0, style=solid];
m7_11 -> m7_12  [key=0, style=solid];
m7_11 -> m7_5  [key=2, style=dotted];
m7_11 -> m7_6  [key=2, style=dotted];
m7_12 -> m7_10  [key=0, style=bold, color=blue];
m7_13 -> m7_14  [key=0, style=solid];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> m7_5  [key=2, style=dotted];
m7_14 -> m7_6  [key=2, style=dotted];
m7_15 -> m7_13  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid, color=red];
m9_1 -> m9_2  [key=0, style=solid, color=red];
m9_1 -> m9_9  [key=2, style=dotted, color=red];
m9_1 -> m9_10  [key=2, style=dotted, color=red];
m9_2 -> m9_3  [key=0, style=solid, color=red];
m9_2 -> m9_11  [key=2, style=dotted, color=red];
m9_2 -> m9_10  [key=2, style=dotted, color=red];
m9_3 -> m9_4  [key=0, style=solid, color=red];
m9_3 -> m9_12  [key=2, style=dotted, color=red];
m9_3 -> m9_10  [key=2, style=dotted, color=red];
m9_4 -> m9_5  [key=0, style=solid, color=red];
m9_4 -> m9_13  [key=2, style=dotted, color=red];
m9_4 -> m9_10  [key=2, style=dotted, color=red];
m9_5 -> m9_6  [key=0, style=solid, color=red];
m9_5 -> m9_14  [key=2, style=dotted, color=red];
m9_5 -> m9_10  [key=2, style=dotted, color=red];
m9_6 -> m9_7  [key=0, style=solid, color=red];
m9_6 -> m9_15  [key=2, style=dotted, color=red];
m9_6 -> m9_10  [key=2, style=dotted, color=red];
m9_7 -> m9_8  [key=0, style=solid, color=red];
m9_7 -> m9_16  [key=2, style=dotted, color=red];
m9_7 -> m9_10  [key=2, style=dotted, color=red];
m9_8 -> m9_0  [key=0, style=bold, color=blue];
m9_17 -> m9_1  [key=1, style=dashed, color=red, label="Humanizer.Configuration.OrdinalizerRegistry"];
m9_17 -> m9_2  [key=1, style=dashed, color=red, label="Humanizer.Configuration.OrdinalizerRegistry"];
m9_17 -> m9_3  [key=1, style=dashed, color=red, label="Humanizer.Configuration.OrdinalizerRegistry"];
m9_17 -> m9_4  [key=1, style=dashed, color=red, label="Humanizer.Configuration.OrdinalizerRegistry"];
m9_17 -> m9_5  [key=1, style=dashed, color=red, label="Humanizer.Configuration.OrdinalizerRegistry"];
m9_17 -> m9_6  [key=1, style=dashed, color=red, label="Humanizer.Configuration.OrdinalizerRegistry"];
m9_17 -> m9_7  [key=1, style=dashed, color=red, label="Humanizer.Configuration.OrdinalizerRegistry"];
m10_0 -> m10_1  [key=0, style=solid, color=green];
m10_0 -> m10_8  [key=1, style=dashed, color=green, label="System.DateTime?"];
m10_0 -> m10_9  [key=1, style=dashed, color=green, label=bool];
m10_0 -> m10_11  [key=1, style=dashed, color=green, label="System.DateTime"];
m10_0 -> m10_13  [key=1, style=dashed, color=green, label="System.DateTime"];
m10_1 -> m10_2  [key=0, style=solid, color=green];
m10_1 -> m10_3  [key=2, style=dotted, color=red];
m10_1 -> m10_4  [key=2, style=dotted, color=red];
m10_2 -> m10_0  [key=0, style=bold, color=blue];
m10_2 -> m10_8  [key=1, style=dashed, color=green, label="System.DateTime?"];
m10_2 -> m10_3  [key=0, style=solid, color=green];
m10_3 -> m10_3  [key=3, color=green, style=bold, label="Local variable int second"];
m10_3 -> m10_4  [key=0, style=solid, color=green];
m10_4 -> m10_4  [key=3, color=green, style=bold, label="Local variable int minute"];
m10_4 -> m10_5  [key=0, style=solid, color=green];
m10_4 -> m10_15  [key=1, style=dashed, color=green, label=minute];
m10_4 -> m10_17  [key=1, style=dashed, color=green, label=minute];
m10_4 -> m10_19  [key=1, style=dashed, color=green, label=minute];
m10_4 -> m10_21  [key=1, style=dashed, color=green, label=minute];
m10_8 -> m10_9  [key=0, style=solid, color=green];
m10_8 -> m10_10  [key=1, style=dashed, color=green, label=comparisonBase];
m10_8 -> m10_11  [key=1, style=dashed, color=green, label=comparisonBase];
m10_8 -> m10_13  [key=1, style=dashed, color=green, label=comparisonBase];
m10_7 -> m10_8  [key=0, style=solid, color=green];
m10_7 -> m10_7  [key=3, color=green, style=bold, label="Local variable int month"];
m10_7 -> m10_29  [key=1, style=dashed, color=green, label=month];
m10_9 -> m10_10  [key=0, style=solid, color=green];
m10_9 -> m10_11  [key=0, style=solid, color=green];
m10_10 -> m10_11  [key=0, style=solid, color=green];
m10_10 -> m10_13  [key=1, style=dashed, color=green, label=comparisonBase];
m10_10 -> m10_10  [key=1, style=dashed, color=green, label=comparisonBase];
m10_10 -> m10_35  [key=2, style=dotted, color=green];
m10_11 -> m10_12  [key=0, style=solid, color=green];
m10_11 -> m10_13  [key=0, style=solid, color=green];
m10_13 -> m10_14  [key=0, style=solid, color=green];
m10_13 -> m10_36  [key=2, style=dotted, color=green];
m10_12 -> m10_34  [key=0, style=solid, color=green];
m10_14 -> m10_15  [key=0, style=solid, color=green];
m10_14 -> m10_17  [key=1, style=dashed, color=green, label=delta];
m10_14 -> m10_19  [key=1, style=dashed, color=green, label=delta];
m10_14 -> m10_21  [key=1, style=dashed, color=green, label=delta];
m10_14 -> m10_23  [key=1, style=dashed, color=green, label=delta];
m10_14 -> m10_25  [key=1, style=dashed, color=green, label=delta];
m10_14 -> m10_14  [key=1, style=dashed, color=green, label=ts];
m10_14 -> m10_37  [key=2, style=dotted, color=green];
m10_14 -> m10_16  [key=1, style=dashed, color=green, label=ts];
m10_14 -> m10_20  [key=1, style=dashed, color=green, label=ts];
m10_14 -> m10_24  [key=1, style=dashed, color=green, label=ts];
m10_14 -> m10_27  [key=1, style=dashed, color=green, label=delta];
m10_14 -> m10_28  [key=1, style=dashed, color=green, label=ts];
m10_14 -> m10_29  [key=1, style=dashed, color=green, label=delta];
m10_14 -> m10_30  [key=1, style=dashed, color=green, label=ts];
m10_14 -> m10_32  [key=1, style=dashed, color=green, label=ts];
m10_5 -> m10_5  [key=3, color=green, style=bold, label="Local variable int hour"];
m10_5 -> m10_6  [key=0, style=solid, color=green];
m10_5 -> m10_23  [key=1, style=dashed, color=green, label=hour];
m10_5 -> m10_25  [key=1, style=dashed, color=green, label=hour];
m10_15 -> m10_16  [key=0, style=solid, color=green];
m10_15 -> m10_17  [key=0, style=solid, color=green];
m10_17 -> m10_18  [key=0, style=solid, color=green];
m10_17 -> m10_19  [key=0, style=solid, color=green];
m10_19 -> m10_20  [key=0, style=solid, color=green];
m10_19 -> m10_21  [key=0, style=solid, color=green];
m10_21 -> m10_22  [key=0, style=solid, color=green];
m10_21 -> m10_23  [key=0, style=solid, color=green];
m10_6 -> m10_6  [key=3, color=green, style=bold, label="Local variable int day"];
m10_6 -> m10_7  [key=0, style=solid, color=green];
m10_6 -> m10_27  [key=1, style=dashed, color=green, label=day];
m10_23 -> m10_24  [key=0, style=solid, color=green];
m10_23 -> m10_25  [key=0, style=solid, color=green];
m10_25 -> m10_26  [key=0, style=solid, color=green];
m10_25 -> m10_27  [key=0, style=solid, color=green];
m10_16 -> m10_16  [key=1, style=dashed, color=green, label=ts];
m10_16 -> m10_34  [key=0, style=solid, color=green];
m10_16 -> m10_38  [key=2, style=dotted, color=green];
m10_16 -> m10_20  [key=1, style=dashed, color=green, label=ts];
m10_16 -> m10_24  [key=1, style=dashed, color=green, label=ts];
m10_16 -> m10_28  [key=1, style=dashed, color=green, label=ts];
m10_16 -> m10_30  [key=1, style=dashed, color=green, label=ts];
m10_16 -> m10_32  [key=1, style=dashed, color=green, label=ts];
m10_18 -> m10_34  [key=0, style=solid, color=green];
m10_20 -> m10_20  [key=1, style=dashed, color=green, label=ts];
m10_20 -> m10_34  [key=0, style=solid, color=green];
m10_20 -> m10_38  [key=2, style=dotted, color=green];
m10_20 -> m10_24  [key=1, style=dashed, color=green, label=ts];
m10_20 -> m10_28  [key=1, style=dashed, color=green, label=ts];
m10_20 -> m10_30  [key=1, style=dashed, color=green, label=ts];
m10_20 -> m10_32  [key=1, style=dashed, color=green, label=ts];
m10_22 -> m10_34  [key=0, style=solid, color=green];
m10_27 -> m10_28  [key=0, style=solid];
m10_27 -> m10_29  [key=0, style=solid];
m10_24 -> m10_24  [key=1, style=dashed, color=green, label=ts];
m10_24 -> m10_34  [key=0, style=solid, color=green];
m10_24 -> m10_38  [key=2, style=dotted, color=green];
m10_24 -> m10_28  [key=1, style=dashed, color=green, label=ts];
m10_24 -> m10_30  [key=1, style=dashed, color=green, label=ts];
m10_24 -> m10_32  [key=1, style=dashed, color=green, label=ts];
m10_26 -> m10_34  [key=0, style=solid, color=green];
m10_29 -> m10_30  [key=0, style=solid];
m10_29 -> m10_32  [key=0, style=solid];
m10_28 -> m10_34  [key=0, style=solid];
m10_28 -> m10_28  [key=1, style=dashed, color=darkseagreen4, label=ts];
m10_28 -> m10_38  [key=2, style=dotted];
m10_28 -> m10_30  [key=1, style=dashed, color=darkseagreen4, label=ts];
m10_28 -> m10_32  [key=1, style=dashed, color=darkseagreen4, label=ts];
m10_30 -> m10_30  [key=1, style=dashed, color=darkseagreen4, label=ts];
m10_30 -> m10_31  [key=0, style=solid];
m10_30 -> m10_39  [key=2, style=dotted];
m10_30 -> m10_40  [key=2, style=dotted];
m10_30 -> m10_32  [key=1, style=dashed, color=darkseagreen4, label=ts];
m10_32 -> m10_32  [key=1, style=dashed, color=darkseagreen4, label=ts];
m10_32 -> m10_33  [key=0, style=solid];
m10_32 -> m10_39  [key=2, style=dotted];
m10_32 -> m10_40  [key=2, style=dotted];
m10_31 -> m10_34  [key=0, style=solid];
m10_31 -> m10_38  [key=2, style=dotted];
m10_33 -> m10_34  [key=0, style=solid];
m10_33 -> m10_38  [key=2, style=dotted];
m10_34 -> m10_0  [key=0, style=bold, color=blue];
m11_12 -> m11_13  [key=0, style=solid, color=green];
m11_13 -> m11_14  [key=0, style=solid, color=green];
m11_13 -> m11_15  [key=2, style=dotted, color=green];
m11_14 -> m11_12  [key=0, style=bold, color=blue];
m11_8 -> m11_9  [key=0, style=solid, color=red];
m11_0 -> m11_1  [key=0, style=solid, color=red];
m11_1 -> m11_2  [key=0, style=solid, color=red];
m11_1 -> m11_3  [key=2, style=dotted, color=red];
m11_2 -> m11_0  [key=0, style=bold, color=blue];
m11_4 -> m11_5  [key=0, style=solid, color=red];
m11_5 -> m11_6  [key=0, style=solid, color=red];
m11_5 -> m11_7  [key=2, style=dotted, color=red];
m11_6 -> m11_4  [key=0, style=bold, color=blue];
m11_9 -> m11_10  [key=0, style=solid, color=red];
m11_9 -> m11_11  [key=2, style=dotted, color=red];
m11_10 -> m11_8  [key=0, style=bold, color=blue];
m12_2 -> m12_3  [key=0, style=solid];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_5  [key=2, style=dotted];
m12_3 -> m12_6  [key=2, style=dotted];
m12_4 -> m12_2  [key=0, style=bold, color=blue];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_0  [key=0, style=bold, color=blue];
m14_73 -> m14_74  [key=0, style=solid];
m14_74 -> m14_75  [key=0, style=solid];
m14_74 -> m14_78  [key=2, style=dotted];
m14_74 -> m14_76  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m14_75 -> m14_76  [key=0, style=solid];
m14_75 -> m14_9  [key=2, style=dotted];
m14_75 -> m14_79  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_76 -> m14_77  [key=0, style=solid];
m14_76 -> m14_35  [key=2, style=dotted];
m14_76 -> m14_11  [key=2, style=dotted];
m14_77 -> m14_73  [key=0, style=bold, color=blue];
m14_258 -> m14_259  [key=0, style=solid];
m14_259 -> m14_260  [key=0, style=solid];
m14_259 -> m14_246  [key=2, style=dotted];
m14_259 -> m14_261  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m14_260 -> m14_261  [key=0, style=solid];
m14_260 -> m14_9  [key=2, style=dotted];
m14_260 -> m14_263  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_261 -> m14_262  [key=0, style=solid];
m14_261 -> m14_35  [key=2, style=dotted];
m14_261 -> m14_11  [key=2, style=dotted];
m14_262 -> m14_258  [key=0, style=bold, color=blue];
m14_250 -> m14_251  [key=0, style=solid];
m14_251 -> m14_252  [key=0, style=solid];
m14_251 -> m14_246  [key=2, style=dotted];
m14_251 -> m14_253  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m14_252 -> m14_253  [key=0, style=solid];
m14_252 -> m14_9  [key=2, style=dotted];
m14_252 -> m14_255  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_253 -> m14_254  [key=0, style=solid];
m14_253 -> m14_35  [key=2, style=dotted];
m14_253 -> m14_11  [key=2, style=dotted];
m14_254 -> m14_250  [key=0, style=bold, color=blue];
m14_299 -> m14_300  [key=0, style=solid];
m14_299 -> m14_301  [key=1, style=dashed, color=darkseagreen4, label="int?"];
m14_300 -> m14_301  [key=0, style=solid];
m14_300 -> m14_9  [key=2, style=dotted];
m14_300 -> m14_303  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_301 -> m14_302  [key=0, style=solid];
m14_301 -> m14_104  [key=2, style=dotted];
m14_302 -> m14_299  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_6  [key=2, style=dotted];
m14_1 -> m14_3  [key=1, style=dashed, color=darkseagreen4, label=fakeOptions];
m14_1 -> m14_13  [key=1, style=dashed, color=darkseagreen4, label=fakeOptions];
m14_2 -> m14_3  [key=0, style=solid];
m14_2 -> m14_7  [key=2, style=dotted];
m14_2 -> m14_8  [key=2, style=dotted];
m14_2 -> m14_4  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m14_3 -> m14_4  [key=0, style=solid];
m14_3 -> m14_9  [key=2, style=dotted];
m14_3 -> m14_12  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_4 -> m14_5  [key=0, style=solid];
m14_4 -> m14_10  [key=2, style=dotted];
m14_4 -> m14_11  [key=2, style=dotted];
m14_5 -> m14_0  [key=0, style=bold, color=blue];
m14_118 -> m14_119  [key=0, style=solid];
m14_119 -> m14_120  [key=0, style=solid];
m14_119 -> m14_114  [key=2, style=dotted];
m14_119 -> m14_69  [key=2, style=dotted];
m14_119 -> m14_121  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m14_120 -> m14_121  [key=0, style=solid];
m14_120 -> m14_9  [key=2, style=dotted];
m14_120 -> m14_123  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_121 -> m14_122  [key=0, style=solid];
m14_121 -> m14_35  [key=2, style=dotted];
m14_121 -> m14_11  [key=2, style=dotted];
m14_122 -> m14_118  [key=0, style=bold, color=blue];
m14_314 -> m14_315  [key=0, style=solid];
m14_314 -> m14_316  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_314 -> m14_317  [key=1, style=dashed, color=darkseagreen4, label=bool];
m14_315 -> m14_316  [key=0, style=solid];
m14_315 -> m14_9  [key=2, style=dotted];
m14_315 -> m14_320  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_315 -> m14_317  [key=1, style=dashed, color=darkseagreen4, label=result];
m14_316 -> m14_317  [key=0, style=solid];
m14_316 -> m14_104  [key=2, style=dotted];
m14_317 -> m14_318  [key=0, style=solid];
m14_317 -> m14_319  [key=2, style=dotted];
m14_317 -> m14_104  [key=2, style=dotted];
m14_318 -> m14_314  [key=0, style=bold, color=blue];
m14_151 -> m14_152  [key=0, style=solid];
m14_151 -> m14_153  [key=1, style=dashed, color=darkseagreen4, label="long[]"];
m14_152 -> m14_153  [key=0, style=solid];
m14_152 -> m14_9  [key=2, style=dotted];
m14_152 -> m14_155  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_153 -> m14_154  [key=0, style=solid];
m14_153 -> m14_104  [key=2, style=dotted];
m14_154 -> m14_151  [key=0, style=bold, color=blue];
m14_290 -> m14_291  [key=0, style=solid];
m14_291 -> m14_292  [key=0, style=solid];
m14_291 -> m14_78  [key=2, style=dotted];
m14_291 -> m14_293  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m14_292 -> m14_293  [key=0, style=solid];
m14_292 -> m14_9  [key=2, style=dotted];
m14_292 -> m14_295  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_293 -> m14_294  [key=0, style=solid];
m14_293 -> m14_35  [key=2, style=dotted];
m14_293 -> m14_11  [key=2, style=dotted];
m14_294 -> m14_290  [key=0, style=bold, color=blue];
m14_266 -> m14_267  [key=0, style=solid];
m14_266 -> m14_268  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_267 -> m14_268  [key=0, style=solid];
m14_267 -> m14_9  [key=2, style=dotted];
m14_267 -> m14_271  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_268 -> m14_269  [key=0, style=solid];
m14_268 -> m14_270  [key=2, style=dotted];
m14_268 -> m14_11  [key=2, style=dotted];
m14_269 -> m14_266  [key=0, style=bold, color=blue];
m14_126 -> m14_127  [key=0, style=solid];
m14_127 -> m14_128  [key=0, style=solid];
m14_127 -> m14_114  [key=2, style=dotted];
m14_127 -> m14_69  [key=2, style=dotted];
m14_127 -> m14_129  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m14_128 -> m14_129  [key=0, style=solid];
m14_128 -> m14_9  [key=2, style=dotted];
m14_128 -> m14_131  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_129 -> m14_130  [key=0, style=solid];
m14_129 -> m14_35  [key=2, style=dotted];
m14_129 -> m14_11  [key=2, style=dotted];
m14_130 -> m14_126  [key=0, style=bold, color=blue];
m14_215 -> m14_216  [key=0, style=solid];
m14_216 -> m14_217  [key=0, style=solid];
m14_216 -> m14_220  [key=2, style=dotted];
m14_216 -> m14_69  [key=2, style=dotted];
m14_216 -> m14_218  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m14_217 -> m14_218  [key=0, style=solid];
m14_217 -> m14_9  [key=2, style=dotted];
m14_217 -> m14_221  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_218 -> m14_219  [key=0, style=solid];
m14_218 -> m14_35  [key=2, style=dotted];
m14_218 -> m14_11  [key=2, style=dotted];
m14_219 -> m14_215  [key=0, style=bold, color=blue];
m14_241 -> m14_242  [key=0, style=solid];
m14_242 -> m14_243  [key=0, style=solid];
m14_242 -> m14_246  [key=2, style=dotted];
m14_242 -> m14_244  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m14_243 -> m14_244  [key=0, style=solid];
m14_243 -> m14_9  [key=2, style=dotted];
m14_243 -> m14_247  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_244 -> m14_245  [key=0, style=solid];
m14_244 -> m14_35  [key=2, style=dotted];
m14_244 -> m14_11  [key=2, style=dotted];
m14_245 -> m14_241  [key=0, style=bold, color=blue];
m14_83 -> m14_84  [key=0, style=solid];
m14_84 -> m14_85  [key=0, style=solid];
m14_84 -> m14_78  [key=2, style=dotted];
m14_84 -> m14_69  [key=2, style=dotted];
m14_84 -> m14_86  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m14_85 -> m14_86  [key=0, style=solid];
m14_85 -> m14_9  [key=2, style=dotted];
m14_85 -> m14_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_86 -> m14_87  [key=0, style=solid];
m14_86 -> m14_35  [key=2, style=dotted];
m14_86 -> m14_11  [key=2, style=dotted];
m14_87 -> m14_83  [key=0, style=bold, color=blue];
m14_143 -> m14_144  [key=0, style=solid];
m14_143 -> m14_145  [key=1, style=dashed, color=darkseagreen4, label="long[]"];
m14_144 -> m14_145  [key=0, style=solid];
m14_144 -> m14_9  [key=2, style=dotted];
m14_144 -> m14_147  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_145 -> m14_146  [key=0, style=solid];
m14_145 -> m14_104  [key=2, style=dotted];
m14_146 -> m14_143  [key=0, style=bold, color=blue];
m14_159 -> m14_160  [key=0, style=solid];
m14_159 -> m14_161  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m14_160 -> m14_161  [key=0, style=solid];
m14_160 -> m14_9  [key=2, style=dotted];
m14_160 -> m14_163  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_161 -> m14_162  [key=0, style=solid];
m14_161 -> m14_104  [key=2, style=dotted];
m14_162 -> m14_159  [key=0, style=bold, color=blue];
m14_224 -> m14_225  [key=0, style=solid];
m14_225 -> m14_226  [key=0, style=solid];
m14_225 -> m14_220  [key=2, style=dotted];
m14_225 -> m14_69  [key=2, style=dotted];
m14_225 -> m14_227  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m14_226 -> m14_227  [key=0, style=solid];
m14_226 -> m14_9  [key=2, style=dotted];
m14_226 -> m14_229  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_227 -> m14_228  [key=0, style=solid];
m14_227 -> m14_35  [key=2, style=dotted];
m14_227 -> m14_11  [key=2, style=dotted];
m14_228 -> m14_224  [key=0, style=bold, color=blue];
m14_23 -> m14_24  [key=0, style=solid];
m14_23 -> m14_25  [key=1, style=dashed, color=darkseagreen4, label=double];
m14_24 -> m14_25  [key=0, style=solid];
m14_24 -> m14_9  [key=2, style=dotted];
m14_24 -> m14_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_25 -> m14_26  [key=0, style=solid];
m14_25 -> m14_19  [key=2, style=dotted];
m14_26 -> m14_23  [key=0, style=bold, color=blue];
m14_109 -> m14_110  [key=0, style=solid];
m14_110 -> m14_111  [key=0, style=solid];
m14_110 -> m14_114  [key=2, style=dotted];
m14_110 -> m14_69  [key=2, style=dotted];
m14_110 -> m14_112  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m14_111 -> m14_112  [key=0, style=solid];
m14_111 -> m14_9  [key=2, style=dotted];
m14_111 -> m14_115  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_112 -> m14_113  [key=0, style=solid];
m14_112 -> m14_35  [key=2, style=dotted];
m14_112 -> m14_11  [key=2, style=dotted];
m14_113 -> m14_109  [key=0, style=bold, color=blue];
m14_207 -> m14_208  [key=0, style=solid];
m14_208 -> m14_209  [key=0, style=solid];
m14_208 -> m14_203  [key=2, style=dotted];
m14_208 -> m14_210  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m14_209 -> m14_210  [key=0, style=solid];
m14_209 -> m14_9  [key=2, style=dotted];
m14_209 -> m14_212  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_210 -> m14_211  [key=0, style=solid];
m14_210 -> m14_104  [key=2, style=dotted];
m14_211 -> m14_207  [key=0, style=bold, color=blue];
m14_331 -> m14_332  [key=0, style=solid];
m14_331 -> m14_333  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Fakes.FakeOptionsWithScalarValueAndSequenceStringAdjacent"];
m14_332 -> m14_333  [key=0, style=solid];
m14_332 -> m14_9  [key=2, style=dotted];
m14_332 -> m14_335  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_333 -> m14_334  [key=0, style=solid];
m14_333 -> m14_104  [key=2, style=dotted];
m14_334 -> m14_331  [key=0, style=bold, color=blue];
m14_274 -> m14_275  [key=0, style=solid];
m14_275 -> m14_276  [key=0, style=solid];
m14_275 -> m14_220  [key=2, style=dotted];
m14_275 -> m14_277  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m14_276 -> m14_277  [key=0, style=solid];
m14_276 -> m14_9  [key=2, style=dotted];
m14_276 -> m14_279  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_277 -> m14_278  [key=0, style=solid];
m14_277 -> m14_35  [key=2, style=dotted];
m14_277 -> m14_11  [key=2, style=dotted];
m14_278 -> m14_274  [key=0, style=bold, color=blue];
m14_198 -> m14_199  [key=0, style=solid];
m14_199 -> m14_200  [key=0, style=solid];
m14_199 -> m14_203  [key=2, style=dotted];
m14_199 -> m14_201  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m14_200 -> m14_201  [key=0, style=solid];
m14_200 -> m14_9  [key=2, style=dotted];
m14_200 -> m14_204  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_201 -> m14_202  [key=0, style=solid];
m14_201 -> m14_104  [key=2, style=dotted];
m14_202 -> m14_198  [key=0, style=bold, color=blue];
m14_55 -> m14_56  [key=0, style=solid];
m14_55 -> m14_57  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m14_56 -> m14_57  [key=0, style=solid];
m14_56 -> m14_9  [key=2, style=dotted];
m14_56 -> m14_59  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_57 -> m14_58  [key=0, style=solid];
m14_57 -> m14_35  [key=2, style=dotted];
m14_57 -> m14_11  [key=2, style=dotted];
m14_58 -> m14_55  [key=0, style=bold, color=blue];
m14_31 -> m14_32  [key=0, style=solid];
m14_31 -> m14_33  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
m14_32 -> m14_33  [key=0, style=solid];
m14_32 -> m14_9  [key=2, style=dotted];
m14_32 -> m14_36  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_33 -> m14_34  [key=0, style=solid];
m14_33 -> m14_35  [key=2, style=dotted];
m14_33 -> m14_11  [key=2, style=dotted];
m14_34 -> m14_31  [key=0, style=bold, color=blue];
m14_47 -> m14_48  [key=0, style=solid];
m14_47 -> m14_49  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m14_48 -> m14_49  [key=0, style=solid];
m14_48 -> m14_9  [key=2, style=dotted];
m14_48 -> m14_51  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_49 -> m14_50  [key=0, style=solid];
m14_49 -> m14_35  [key=2, style=dotted];
m14_49 -> m14_11  [key=2, style=dotted];
m14_50 -> m14_47  [key=0, style=bold, color=blue];
m14_91 -> m14_92  [key=0, style=solid];
m14_92 -> m14_93  [key=0, style=solid];
m14_92 -> m14_78  [key=2, style=dotted];
m14_92 -> m14_94  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m14_93 -> m14_94  [key=0, style=solid];
m14_93 -> m14_9  [key=2, style=dotted];
m14_93 -> m14_96  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_94 -> m14_95  [key=0, style=solid];
m14_94 -> m14_35  [key=2, style=dotted];
m14_94 -> m14_11  [key=2, style=dotted];
m14_95 -> m14_91  [key=0, style=bold, color=blue];
m14_335 -> m14_336  [key=0, style=solid];
m14_13 -> m14_14  [key=0, style=solid];
m14_12 -> m14_13  [key=0, style=solid];
m14_14 -> m14_12  [key=0, style=bold, color=blue];
m14_20 -> m14_21  [key=0, style=solid];
m14_21 -> m14_22  [key=0, style=solid];
m14_21 -> m14_6  [key=2, style=dotted];
m14_22 -> m14_20  [key=0, style=bold, color=blue];
m14_27 -> m14_28  [key=0, style=solid];
m14_28 -> m14_29  [key=0, style=solid];
m14_28 -> m14_30  [key=2, style=dotted];
m14_29 -> m14_27  [key=0, style=bold, color=blue];
m14_36 -> m14_37  [key=0, style=solid];
m14_37 -> m14_38  [key=0, style=solid];
m14_37 -> m14_39  [key=2, style=dotted];
m14_38 -> m14_36  [key=0, style=bold, color=blue];
m14_44 -> m14_45  [key=0, style=solid];
m14_45 -> m14_46  [key=0, style=solid];
m14_45 -> m14_6  [key=2, style=dotted];
m14_46 -> m14_44  [key=0, style=bold, color=blue];
m14_51 -> m14_52  [key=0, style=solid];
m14_52 -> m14_53  [key=0, style=solid];
m14_52 -> m14_54  [key=2, style=dotted];
m14_53 -> m14_51  [key=0, style=bold, color=blue];
m14_59 -> m14_60  [key=0, style=solid];
m14_60 -> m14_61  [key=0, style=solid];
m14_60 -> m14_62  [key=2, style=dotted];
m14_61 -> m14_59  [key=0, style=bold, color=blue];
m14_70 -> m14_71  [key=0, style=solid];
m14_71 -> m14_72  [key=0, style=solid];
m14_71 -> m14_54  [key=2, style=dotted];
m14_72 -> m14_70  [key=0, style=bold, color=blue];
m14_79 -> m14_80  [key=0, style=solid];
m14_80 -> m14_81  [key=0, style=solid];
m14_80 -> m14_82  [key=2, style=dotted];
m14_81 -> m14_79  [key=0, style=bold, color=blue];
m14_88 -> m14_89  [key=0, style=solid];
m14_89 -> m14_90  [key=0, style=solid];
m14_89 -> m14_62  [key=2, style=dotted];
m14_90 -> m14_88  [key=0, style=bold, color=blue];
m14_96 -> m14_97  [key=0, style=solid];
m14_97 -> m14_98  [key=0, style=solid];
m14_97 -> m14_99  [key=2, style=dotted];
m14_98 -> m14_96  [key=0, style=bold, color=blue];
m14_105 -> m14_106  [key=0, style=solid];
m14_106 -> m14_107  [key=0, style=solid];
m14_106 -> m14_108  [key=2, style=dotted];
m14_107 -> m14_105  [key=0, style=bold, color=blue];
m14_115 -> m14_116  [key=0, style=solid];
m14_116 -> m14_117  [key=0, style=solid];
m14_116 -> m14_108  [key=2, style=dotted];
m14_117 -> m14_115  [key=0, style=bold, color=blue];
m14_123 -> m14_124  [key=0, style=solid];
m14_124 -> m14_125  [key=0, style=solid];
m14_124 -> m14_108  [key=2, style=dotted];
m14_125 -> m14_123  [key=0, style=bold, color=blue];
m14_131 -> m14_132  [key=0, style=solid];
m14_132 -> m14_133  [key=0, style=solid];
m14_132 -> m14_108  [key=2, style=dotted];
m14_133 -> m14_131  [key=0, style=bold, color=blue];
m14_140 -> m14_141  [key=0, style=solid];
m14_141 -> m14_142  [key=0, style=solid];
m14_141 -> m14_139  [key=2, style=dotted];
m14_142 -> m14_140  [key=0, style=bold, color=blue];
m14_147 -> m14_148  [key=0, style=solid];
m14_148 -> m14_149  [key=0, style=solid];
m14_148 -> m14_150  [key=2, style=dotted];
m14_149 -> m14_147  [key=0, style=bold, color=blue];
m14_155 -> m14_156  [key=0, style=solid];
m14_156 -> m14_157  [key=0, style=solid];
m14_156 -> m14_158  [key=2, style=dotted];
m14_157 -> m14_155  [key=0, style=bold, color=blue];
m14_163 -> m14_164  [key=0, style=solid];
m14_164 -> m14_165  [key=0, style=solid];
m14_164 -> m14_158  [key=2, style=dotted];
m14_165 -> m14_163  [key=0, style=bold, color=blue];
m14_173 -> m14_174  [key=0, style=solid];
m14_176 -> m14_177  [key=0, style=solid];
m14_176 -> m14_181  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m14_176 -> m14_185  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m14_174 -> m14_175  [key=0, style=solid];
m14_174 -> m14_139  [key=2, style=dotted];
m14_175 -> m14_173  [key=0, style=bold, color=blue];
m14_177 -> m14_178  [key=0, style=solid];
m14_177 -> m14_179  [key=2, style=dotted];
m14_177 -> m14_180  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_181 -> m14_182  [key=0, style=solid];
m14_181 -> m14_183  [key=2, style=dotted];
m14_181 -> m14_184  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_185 -> m14_186  [key=0, style=solid];
m14_185 -> m14_187  [key=2, style=dotted];
m14_178 -> m14_176  [key=0, style=bold, color=blue];
m14_180 -> m14_181  [key=0, style=solid];
m14_182 -> m14_180  [key=0, style=bold, color=blue];
m14_184 -> m14_185  [key=0, style=solid];
m14_186 -> m14_184  [key=0, style=bold, color=blue];
m14_194 -> m14_195  [key=0, style=solid];
m14_195 -> m14_196  [key=0, style=solid];
m14_195 -> m14_197  [key=2, style=dotted];
m14_196 -> m14_194  [key=0, style=bold, color=blue];
m14_204 -> m14_205  [key=0, style=solid];
m14_205 -> m14_206  [key=0, style=solid];
m14_205 -> m14_203  [key=2, style=dotted];
m14_206 -> m14_204  [key=0, style=bold, color=blue];
m14_212 -> m14_213  [key=0, style=solid];
m14_213 -> m14_214  [key=0, style=solid];
m14_213 -> m14_203  [key=2, style=dotted];
m14_214 -> m14_212  [key=0, style=bold, color=blue];
m14_221 -> m14_222  [key=0, style=solid];
m14_222 -> m14_223  [key=0, style=solid];
m14_222 -> m14_203  [key=2, style=dotted];
m14_223 -> m14_221  [key=0, style=bold, color=blue];
m14_229 -> m14_230  [key=0, style=solid];
m14_230 -> m14_231  [key=0, style=solid];
m14_230 -> m14_232  [key=2, style=dotted];
m14_231 -> m14_229  [key=0, style=bold, color=blue];
m14_238 -> m14_239  [key=0, style=solid];
m14_239 -> m14_240  [key=0, style=solid];
m14_239 -> m14_6  [key=2, style=dotted];
m14_240 -> m14_238  [key=0, style=bold, color=blue];
m14_247 -> m14_248  [key=0, style=solid];
m14_248 -> m14_249  [key=0, style=solid];
m14_248 -> m14_6  [key=2, style=dotted];
m14_249 -> m14_247  [key=0, style=bold, color=blue];
m14_255 -> m14_256  [key=0, style=solid];
m14_256 -> m14_257  [key=0, style=solid];
m14_256 -> m14_6  [key=2, style=dotted];
m14_257 -> m14_255  [key=0, style=bold, color=blue];
m14_263 -> m14_264  [key=0, style=solid];
m14_264 -> m14_265  [key=0, style=solid];
m14_264 -> m14_6  [key=2, style=dotted];
m14_265 -> m14_263  [key=0, style=bold, color=blue];
m14_271 -> m14_272  [key=0, style=solid];
m14_272 -> m14_273  [key=0, style=solid];
m14_272 -> m14_6  [key=2, style=dotted];
m14_273 -> m14_271  [key=0, style=bold, color=blue];
m14_279 -> m14_280  [key=0, style=solid];
m14_280 -> m14_281  [key=0, style=solid];
m14_280 -> m14_282  [key=2, style=dotted];
m14_281 -> m14_279  [key=0, style=bold, color=blue];
m14_287 -> m14_288  [key=0, style=solid];
m14_288 -> m14_289  [key=0, style=solid];
m14_288 -> m14_6  [key=2, style=dotted];
m14_289 -> m14_287  [key=0, style=bold, color=blue];
m14_295 -> m14_296  [key=0, style=solid];
m14_296 -> m14_297  [key=0, style=solid];
m14_296 -> m14_298  [key=2, style=dotted];
m14_297 -> m14_295  [key=0, style=bold, color=blue];
m14_303 -> m14_304  [key=0, style=solid];
m14_304 -> m14_305  [key=0, style=solid];
m14_304 -> m14_306  [key=2, style=dotted];
m14_305 -> m14_303  [key=0, style=bold, color=blue];
m14_311 -> m14_312  [key=0, style=solid];
m14_312 -> m14_313  [key=0, style=solid];
m14_312 -> m14_306  [key=2, style=dotted];
m14_313 -> m14_311  [key=0, style=bold, color=blue];
m14_320 -> m14_321  [key=0, style=solid];
m14_321 -> m14_322  [key=0, style=solid];
m14_321 -> m14_323  [key=2, style=dotted];
m14_322 -> m14_320  [key=0, style=bold, color=blue];
m14_328 -> m14_329  [key=0, style=solid];
m14_329 -> m14_330  [key=0, style=solid];
m14_329 -> m14_282  [key=2, style=dotted];
m14_330 -> m14_328  [key=0, style=bold, color=blue];
m14_336 -> m14_337  [key=0, style=solid];
m14_336 -> m14_338  [key=2, style=dotted];
m14_337 -> m14_335  [key=0, style=bold, color=blue];
m14_324 -> m14_325  [key=0, style=solid];
m14_324 -> m14_326  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Fakes.FakeOptionsWithRequiredValue"];
m14_325 -> m14_326  [key=0, style=solid];
m14_325 -> m14_9  [key=2, style=dotted];
m14_325 -> m14_328  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_326 -> m14_327  [key=0, style=solid];
m14_326 -> m14_104  [key=2, style=dotted];
m14_327 -> m14_324  [key=0, style=bold, color=blue];
m14_63 -> m14_64  [key=0, style=solid];
m14_64 -> m14_65  [key=0, style=solid];
m14_64 -> m14_68  [key=2, style=dotted];
m14_64 -> m14_69  [key=2, style=dotted];
m14_64 -> m14_66  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m14_65 -> m14_66  [key=0, style=solid];
m14_65 -> m14_9  [key=2, style=dotted];
m14_65 -> m14_70  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_66 -> m14_67  [key=0, style=solid];
m14_66 -> m14_35  [key=2, style=dotted];
m14_66 -> m14_11  [key=2, style=dotted];
m14_67 -> m14_63  [key=0, style=bold, color=blue];
m14_100 -> m14_101  [key=0, style=solid];
m14_100 -> m14_102  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Fakes.Colors"];
m14_101 -> m14_102  [key=0, style=solid];
m14_101 -> m14_9  [key=2, style=dotted];
m14_101 -> m14_105  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_102 -> m14_103  [key=0, style=solid];
m14_102 -> m14_104  [key=2, style=dotted];
m14_102 -> m14_102  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Fakes.Colors"];
m14_103 -> m14_100  [key=0, style=bold, color=blue];
m14_40 -> m14_41  [key=0, style=solid];
m14_40 -> m14_42  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
m14_41 -> m14_42  [key=0, style=solid];
m14_41 -> m14_9  [key=2, style=dotted];
m14_41 -> m14_44  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_42 -> m14_43  [key=0, style=solid];
m14_42 -> m14_35  [key=2, style=dotted];
m14_42 -> m14_11  [key=2, style=dotted];
m14_43 -> m14_40  [key=0, style=bold, color=blue];
m14_15 -> m14_16  [key=0, style=solid];
m14_15 -> m14_17  [key=1, style=dashed, color=darkseagreen4, label=long];
m14_16 -> m14_17  [key=0, style=solid];
m14_16 -> m14_9  [key=2, style=dotted];
m14_16 -> m14_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_17 -> m14_18  [key=0, style=solid];
m14_17 -> m14_19  [key=2, style=dotted];
m14_18 -> m14_15  [key=0, style=bold, color=blue];
m14_134 -> m14_135  [key=0, style=solid];
m14_135 -> m14_136  [key=0, style=solid];
m14_135 -> m14_139  [key=2, style=dotted];
m14_135 -> m14_137  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m14_136 -> m14_137  [key=0, style=solid];
m14_136 -> m14_9  [key=2, style=dotted];
m14_136 -> m14_140  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_137 -> m14_138  [key=0, style=solid];
m14_137 -> m14_104  [key=2, style=dotted];
m14_138 -> m14_134  [key=0, style=bold, color=blue];
m14_233 -> m14_234  [key=0, style=solid];
m14_234 -> m14_235  [key=0, style=solid];
m14_234 -> m14_78  [key=2, style=dotted];
m14_234 -> m14_69  [key=2, style=dotted];
m14_234 -> m14_236  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m14_235 -> m14_236  [key=0, style=solid];
m14_235 -> m14_9  [key=2, style=dotted];
m14_235 -> m14_238  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_236 -> m14_237  [key=0, style=solid];
m14_236 -> m14_35  [key=2, style=dotted];
m14_236 -> m14_11  [key=2, style=dotted];
m14_237 -> m14_233  [key=0, style=bold, color=blue];
m14_283 -> m14_284  [key=0, style=solid];
m14_283 -> m14_285  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_284 -> m14_285  [key=0, style=solid];
m14_284 -> m14_9  [key=2, style=dotted];
m14_284 -> m14_287  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_285 -> m14_286  [key=0, style=solid];
m14_285 -> m14_104  [key=2, style=dotted];
m14_286 -> m14_283  [key=0, style=bold, color=blue];
m14_307 -> m14_308  [key=0, style=solid];
m14_307 -> m14_309  [key=1, style=dashed, color=darkseagreen4, label="long?"];
m14_308 -> m14_309  [key=0, style=solid];
m14_308 -> m14_9  [key=2, style=dotted];
m14_308 -> m14_311  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_309 -> m14_310  [key=0, style=solid];
m14_309 -> m14_104  [key=2, style=dotted];
m14_310 -> m14_307  [key=0, style=bold, color=blue];
m14_188 -> m14_189  [key=0, style=solid];
m14_189 -> m14_190  [key=0, style=solid];
m14_189 -> m14_193  [key=2, style=dotted];
m14_189 -> m14_69  [key=2, style=dotted];
m14_189 -> m14_191  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m14_190 -> m14_191  [key=0, style=solid];
m14_190 -> m14_9  [key=2, style=dotted];
m14_190 -> m14_194  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_191 -> m14_192  [key=0, style=solid];
m14_191 -> m14_35  [key=2, style=dotted];
m14_191 -> m14_11  [key=2, style=dotted];
m14_192 -> m14_188  [key=0, style=bold, color=blue];
m14_166 -> m14_167  [key=0, style=solid];
m14_167 -> m14_168  [key=0, style=solid];
m14_167 -> m14_139  [key=2, style=dotted];
m14_167 -> m14_170  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m14_168 -> m14_169  [key=0, style=solid];
m14_170 -> m14_171  [key=0, style=solid];
m14_170 -> m14_104  [key=2, style=dotted];
m14_169 -> m14_170  [key=0, style=solid];
m14_169 -> m14_172  [key=2, style=dotted];
m14_169 -> m14_173  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_169 -> m14_176  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_171 -> m14_166  [key=0, style=bold, color=blue];
m14_339 -> m14_13  [key=1, style=dashed, color=darkseagreen4, label=fakeOptions];
m14_340 -> m14_181  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m14_340 -> m14_185  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m15_0 -> m15_1  [key=0, style=solid];
m15_0 -> m15_3  [key=1, style=dashed, color=darkseagreen4, label=int];
m15_0 -> m15_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_0 -> m15_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_0 -> m15_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_0 -> m15_0  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetResourceKey"];
m15_1 -> m15_2  [key=0, style=solid];
m15_3 -> m15_4  [key=0, style=solid];
m15_3 -> m15_6  [key=1, style=dashed, color=darkseagreen4, label=mod10];
m15_5 -> m15_9  [key=0, style=solid];
m15_7 -> m15_9  [key=0, style=solid];
m15_8 -> m15_9  [key=0, style=solid];
m15_2 -> m15_3  [key=0, style=solid];
m15_2 -> m15_8  [key=0, style=solid];
m15_4 -> m15_5  [key=0, style=solid];
m15_4 -> m15_6  [key=0, style=solid];
m15_6 -> m15_7  [key=0, style=solid];
m15_6 -> m15_8  [key=0, style=solid];
m15_9 -> m15_0  [key=0, style=bold, color=blue];
m17_0 -> m17_1  [key=0, style=solid];
m17_1 -> m17_0  [key=0, style=bold, color=blue];
m17_2 -> m17_3  [key=0, style=solid];
m17_3 -> m17_4  [key=0, style=solid];
m17_3 -> m17_5  [key=2, style=dotted];
m17_3 -> m17_6  [key=2, style=dotted];
m17_4 -> m17_2  [key=0, style=bold, color=blue];
m17_13 -> m17_14  [key=0, style=solid];
m17_14 -> m17_15  [key=0, style=solid];
m17_14 -> m17_5  [key=2, style=dotted];
m17_14 -> m17_6  [key=2, style=dotted];
m17_15 -> m17_13  [key=0, style=bold, color=blue];
m17_7 -> m17_8  [key=0, style=solid];
m17_8 -> m17_9  [key=0, style=solid];
m17_8 -> m17_5  [key=2, style=dotted];
m17_8 -> m17_6  [key=2, style=dotted];
m17_9 -> m17_7  [key=0, style=bold, color=blue];
m17_10 -> m17_11  [key=0, style=solid];
m17_11 -> m17_12  [key=0, style=solid];
m17_11 -> m17_5  [key=2, style=dotted];
m17_11 -> m17_6  [key=2, style=dotted];
m17_12 -> m17_10  [key=0, style=bold, color=blue];
}
