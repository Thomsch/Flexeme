digraph  {
d1 [cluster="Humanizer.Configuration.Configurator.EnumDescriptionPropertyNameFor(Type)", color=green, community=0, label="string result = _enumDescriptionPropertyNames.TryGetValue(type, out result) ? result : null", prediction=0, span="105-105"];
d0 [cluster="Humanizer.Configuration.Configurator.EnumDescriptionPropertyNameFor(Type)", label="Entry Humanizer.Configuration.Configurator.EnumDescriptionPropertyNameFor(Type)", span="103-103"];
d2 [cluster="Humanizer.Configuration.Configurator.EnumDescriptionPropertyNameFor(Type)", color=green, community=0, label="return result ?? DefaultEnumDescriptionPropertyName;", prediction=1, span="106-106"];
d4 [cluster="Unk.TryGetValue", label="Entry Unk.TryGetValue", span=""];
d3 [cluster="Humanizer.Configuration.Configurator.EnumDescriptionPropertyNameFor(Type)", label="Exit Humanizer.Configuration.Configurator.EnumDescriptionPropertyNameFor(Type)", span="103-103"];
m0_16 [cluster="string.Humanize()", file="EnumHumanizeExtensions.cs", label="Entry string.Humanize()", span="47-47"];
m0_25 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="EnumHumanizeExtensions.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m0_34 [cluster="string.ApplyCase(Humanizer.LetterCasing)", file="EnumHumanizeExtensions.cs", label="Entry string.ApplyCase(Humanizer.LetterCasing)", span="15-15"];
m0_13 [cluster="System.Enum.ToString()", file="EnumHumanizeExtensions.cs", label="Entry System.Enum.ToString()", span="0-0"];
m0_28 [cluster="Unk.GetValue", file="EnumHumanizeExtensions.cs", label="Entry Unk.GetValue", span=""];
m0_30 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum, Humanizer.LetterCasing)", file="EnumHumanizeExtensions.cs", label="Entry Humanizer.EnumHumanizeExtensions.Humanize(System.Enum, Humanizer.LetterCasing)", span="56-56"];
m0_31 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum, Humanizer.LetterCasing)", file="EnumHumanizeExtensions.cs", label="var humanizedEnum = Humanize(input)", span="58-58"];
m0_32 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum, Humanizer.LetterCasing)", file="EnumHumanizeExtensions.cs", label="return humanizedEnum.ApplyCase(casing);", span="60-60"];
m0_33 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum, Humanizer.LetterCasing)", file="EnumHumanizeExtensions.cs", label="Exit Humanizer.EnumHumanizeExtensions.Humanize(System.Enum, Humanizer.LetterCasing)", span="56-56"];
m0_14 [cluster="System.Type.GetMember(string)", file="EnumHumanizeExtensions.cs", label="Entry System.Type.GetMember(string)", span="0-0"];
m0_15 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="EnumHumanizeExtensions.cs", label="Entry Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", span="35-35"];
m0_17 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="EnumHumanizeExtensions.cs", label="var attrs = memberInfo.GetCustomAttributes(true)", span="37-37"];
m0_18 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="EnumHumanizeExtensions.cs", label=attrs, span="39-39"];
m0_19 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="EnumHumanizeExtensions.cs", label="var attrType = attr.GetType()", span="41-41"];
m0_23 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="EnumHumanizeExtensions.cs", label="return null;", span="47-47"];
m0_22 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="EnumHumanizeExtensions.cs", label="return descriptionProperty.GetValue(attr, null).ToString();", span="44-44"];
m0_21 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="EnumHumanizeExtensions.cs", label="descriptionProperty != null", span="43-43"];
m0_24 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="EnumHumanizeExtensions.cs", label="Exit Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", span="35-35"];
m0_26 [cluster="System.Type.GetProperties()", file="EnumHumanizeExtensions.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m0_12 [cluster="object.GetType()", file="EnumHumanizeExtensions.cs", label="Entry object.GetType()", span="0-0"];
m0_0 [cluster="lambda expression", file="EnumHumanizeExtensions.cs", label="Entry lambda expression", span="11-11"];
m0_2 [cluster="lambda expression", file="EnumHumanizeExtensions.cs", label="Exit lambda expression", span="11-11"];
m0_27 [cluster="Unk.FirstOrDefault", file="EnumHumanizeExtensions.cs", label="Entry Unk.FirstOrDefault", span=""];
m0_29 [cluster="Unk.ToString", file="EnumHumanizeExtensions.cs", label="Entry Unk.ToString", span=""];
m0_3 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="EnumHumanizeExtensions.cs", label="Entry Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", span="18-18"];
m0_4 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="EnumHumanizeExtensions.cs", label="Type type = input.GetType()", span="20-20"];
m0_6 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="EnumHumanizeExtensions.cs", label="memInfo.Length > 0", span="23-23"];
m0_8 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="EnumHumanizeExtensions.cs", label="customDescription != null", span="27-27"];
m0_9 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="EnumHumanizeExtensions.cs", label="return customDescription;", span="28-28"];
m0_11 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="EnumHumanizeExtensions.cs", label="Exit Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", span="18-18"];
m0_30 -> m0_32  [color=darkseagreen4, key=1, label="Humanizer.LetterCasing", style=dashed];
m0_18 -> m0_22  [color=darkseagreen4, key=1, label=attr, style=dashed];
}
