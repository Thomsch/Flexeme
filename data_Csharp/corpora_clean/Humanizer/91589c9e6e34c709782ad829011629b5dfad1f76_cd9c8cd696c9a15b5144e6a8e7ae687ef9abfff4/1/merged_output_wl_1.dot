digraph  {
n41 [label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>", span=""];
n42 [label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>", span=""];
n43 [label="System.StringComparer", span=""];
n44 [label="CommandLine.Core.SpecificationProperty", span=""];
n0 [cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>, System.StringComparer)", label="Entry CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>, System.StringComparer)", span="13-13"];
n1 [cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>, System.StringComparer)", label="var sequencesAndErrors = propertyTuples\r\n                .Select(pt =>\r\n                    options.SingleOrDefault(\r\n                            s =>\r\n                            s.Key.MatchName(((OptionSpecification)pt.Specification).ShortName, ((OptionSpecification)pt.Specification).LongName, comparer))\r\n                               .ToMaybe()\r\n                               .Return(sequence =>\r\n                                    converter(sequence.Value, pt.Property.PropertyType, pt.Specification.ConversionType.IsScalar())\r\n                                    .Return(converted =>\r\n                                            Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>()),\r\n                                            Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                                                pt,\r\n                                                Maybe.Just<Error>(new BadFormatConversionError(NameInfo.FromOptionSpecification((OptionSpecification)pt.Specification))))),\r\n                                Tuple.Create(pt, Maybe.Nothing<Error>()))\r\n                )", span="19-35"];
n8 [cluster="lambda expression", label="options.SingleOrDefault(\r\n                            s =>\r\n                            s.Key.MatchName(((OptionSpecification)pt.Specification).ShortName, ((OptionSpecification)pt.Specification).LongName, comparer))\r\n                               .ToMaybe()\r\n                               .Return(sequence =>\r\n                                    converter(sequence.Value, pt.Property.PropertyType, pt.Specification.ConversionType.IsScalar())\r\n                                    .Return(converted =>\r\n                                            Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>()),\r\n                                            Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                                                pt,\r\n                                                Maybe.Just<Error>(new BadFormatConversionError(NameInfo.FromOptionSpecification((OptionSpecification)pt.Specification))))),\r\n                                Tuple.Create(pt, Maybe.Nothing<Error>()))", span="21-34"];
n16 [cluster="lambda expression", label="s.Key.MatchName(((OptionSpecification)pt.Specification).ShortName, ((OptionSpecification)pt.Specification).LongName, comparer)", span="23-23"];
n20 [cluster="lambda expression", label="converter(sequence.Value, pt.Property.PropertyType, pt.Specification.ConversionType.IsScalar())\r\n                                    .Return(converted =>\r\n                                            Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>()),\r\n                                            Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                                                pt,\r\n                                                Maybe.Just<Error>(new BadFormatConversionError(NameInfo.FromOptionSpecification((OptionSpecification)pt.Specification)))))", span="26-33"];
n2 [cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>, System.StringComparer)", label="return StatePair.Create(\r\n                sequencesAndErrors.Select(se => se.Item1),\r\n                sequencesAndErrors.Select(se => se.Item2).OfType<Just<Error>>().Select(se => se.Value));", span="36-38"];
n4 [cluster="Unk.Select", label="Entry Unk.Select", span=""];
n7 [cluster="lambda expression", label="Entry lambda expression", span="20-34"];
n3 [cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>, System.StringComparer)", label="Exit CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>, System.StringComparer)", span="13-13"];
n5 [cluster="Unk.>", label="Entry Unk.>", span=""];
n6 [cluster="Unk.Create", label="Entry Unk.Create", span=""];
n32 [cluster="lambda expression", label="Entry lambda expression", span="37-37"];
n35 [cluster="lambda expression", label="Entry lambda expression", span="38-38"];
n38 [cluster="lambda expression", label="Entry lambda expression", span="38-38"];
n29 [cluster="lambda expression", label="Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>())", span="28-30"];
n9 [cluster="lambda expression", label="Exit lambda expression", span="20-34"];
n10 [cluster="Unk.SingleOrDefault", label="Entry Unk.SingleOrDefault", span=""];
n11 [cluster="Unk.ToMaybe", label="Entry Unk.ToMaybe", span=""];
n12 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66"];
n13 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
n14 [cluster="Unk.Return", label="Entry Unk.Return", span=""];
n15 [cluster="lambda expression", label="Entry lambda expression", span="22-23"];
n19 [cluster="lambda expression", label="Entry lambda expression", span="25-33"];
n17 [cluster="lambda expression", label="Exit lambda expression", span="22-23"];
n18 [cluster="string.MatchName(string, string, System.StringComparer)", label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8"];
n21 [cluster="lambda expression", label="Exit lambda expression", span="25-33"];
n22 [cluster="System.Type.IsScalar()", label="Entry System.Type.IsScalar()", span="33-33"];
n23 [cluster="Unk.converter", label="Entry Unk.converter", span=""];
n24 [cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="305-305"];
n25 [cluster="CommandLine.NameInfo.FromOptionSpecification(CommandLine.Core.OptionSpecification)", label="Entry CommandLine.NameInfo.FromOptionSpecification(CommandLine.Core.OptionSpecification)", span="60-60"];
n26 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71"];
n27 [cluster="CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", label="Entry CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="103-103"];
n28 [cluster="lambda expression", label="Entry lambda expression", span="27-30"];
n30 [cluster="lambda expression", label="Exit lambda expression", span="27-30"];
n31 [cluster="CommandLine.Core.SpecificationProperty.WithValue(CommandLine.Infrastructure.Maybe<object>)", label="Entry CommandLine.Core.SpecificationProperty.WithValue(CommandLine.Infrastructure.Maybe<object>)", span="18-18"];
n33 [cluster="lambda expression", label="se.Item1", span="37-37"];
n34 [cluster="lambda expression", label="Exit lambda expression", span="37-37"];
n36 [cluster="lambda expression", label="se.Item2", span="38-38"];
n37 [cluster="lambda expression", label="Exit lambda expression", span="38-38"];
n39 [cluster="lambda expression", label="se.Value", span="38-38"];
n40 [cluster="lambda expression", label="Exit lambda expression", span="38-38"];
d1 [cluster="Humanizer.Configuration.Configurator.EnumDescriptionPropertyNameFor(Type)", color=green, community=0, label="0: string result = _enumDescriptionPropertyNames.TryGetValue(type, out result) ? result : null", span="105-105"];
d0 [cluster="Humanizer.Configuration.Configurator.EnumDescriptionPropertyNameFor(Type)", label="Entry Humanizer.Configuration.Configurator.EnumDescriptionPropertyNameFor(Type)", span="103-103"];
d2 [cluster="Humanizer.Configuration.Configurator.EnumDescriptionPropertyNameFor(Type)", color=green, community=0, label="0: return result ?? DefaultEnumDescriptionPropertyName;", span="106-106"];
d4 [cluster="Unk.TryGetValue", label="Entry Unk.TryGetValue", span=""];
d3 [cluster="Humanizer.Configuration.Configurator.EnumDescriptionPropertyNameFor(Type)", label="Exit Humanizer.Configuration.Configurator.EnumDescriptionPropertyNameFor(Type)", span="103-103"];
m0_19 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="EnumHumanizeExtensions.cs", label="var attrType = attr.GetType()", span="41-41"];
m0_16 [cluster="string.Humanize()", file="EnumHumanizeExtensions.cs", label="Entry string.Humanize()", span="47-47"];
m0_25 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", color=green, community=0, file="EnumHumanizeExtensions.cs", label="0: descriptionProperty != null", span="45-45"];
m0_34 [cluster="string.ApplyCase(Humanizer.LetterCasing)", file="EnumHumanizeExtensions.cs", label="Entry string.ApplyCase(Humanizer.LetterCasing)", span="15-15"];
m0_17 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="EnumHumanizeExtensions.cs", label="var attrs = memberInfo.GetCustomAttributes(true)", span="37-37"];
m0_13 [cluster="System.Enum.ToString()", file="EnumHumanizeExtensions.cs", label="Entry System.Enum.ToString()", span="0-0"];
m0_28 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="EnumHumanizeExtensions.cs", label="Exit Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", span="37-37"];
m0_30 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum, Humanizer.LetterCasing)", file="EnumHumanizeExtensions.cs", label="Entry Humanizer.EnumHumanizeExtensions.Humanize(System.Enum, Humanizer.LetterCasing)", span="56-56"];
m0_31 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum, Humanizer.LetterCasing)", file="EnumHumanizeExtensions.cs", label="var humanizedEnum = Humanize(input)", span="58-58"];
m0_32 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum, Humanizer.LetterCasing)", file="EnumHumanizeExtensions.cs", label="return humanizedEnum.ApplyCase(casing);", span="60-60"];
m0_33 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum, Humanizer.LetterCasing)", file="EnumHumanizeExtensions.cs", label="Exit Humanizer.EnumHumanizeExtensions.Humanize(System.Enum, Humanizer.LetterCasing)", span="56-56"];
m0_14 [cluster="System.Type.GetMember(string)", file="EnumHumanizeExtensions.cs", label="Entry System.Type.GetMember(string)", span="0-0"];
m0_20 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", color=red, community=0, file="EnumHumanizeExtensions.cs", label="0: var descriptionProperty = attrType.GetProperties().FirstOrDefault(DescriptionProperty)", span="42-42"];
m0_15 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="EnumHumanizeExtensions.cs", label="Entry Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", span="35-35"];
m0_18 [cluster="Unk.GetCustomDescription", file="EnumHumanizeExtensions.cs", label="Entry Unk.GetCustomDescription", span=""];
m0_23 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="EnumHumanizeExtensions.cs", label="return null;", span="47-47"];
m0_22 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="EnumHumanizeExtensions.cs", label=attrs, span="41-41"];
m0_21 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="EnumHumanizeExtensions.cs", label="descriptionProperty != null", span="43-43"];
m0_24 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="EnumHumanizeExtensions.cs", label="var descriptionProperty = attrType.GetProperties().FirstOrDefault(DescriptionProperty)", span="44-44"];
m0_26 [cluster="System.Type.GetProperties()", color=green, community=0, file="EnumHumanizeExtensions.cs", label="0: Entry System.Type.GetProperties()", span="0-0"];
m0_12 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="EnumHumanizeExtensions.cs", label="return caseName.Humanize();", span="33-33"];
m0_0 [cluster="lambda expression", file="EnumHumanizeExtensions.cs", label="Entry lambda expression", span="11-11"];
m0_1 [cluster="lambda expression", color=red, community=0, file="EnumHumanizeExtensions.cs", label="0: p.Name == ''Description'' && p.PropertyType == typeof (string)", span="11-11"];
m0_2 [cluster="lambda expression", file="EnumHumanizeExtensions.cs", label="Exit lambda expression", span="11-11"];
m0_27 [cluster="Unk.FirstOrDefault", file="EnumHumanizeExtensions.cs", label="Entry Unk.FirstOrDefault", span=""];
m0_29 [cluster="Unk.ToString", file="EnumHumanizeExtensions.cs", label="Entry Unk.ToString", span=""];
m0_3 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="EnumHumanizeExtensions.cs", label="Entry Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", span="18-18"];
m0_4 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="EnumHumanizeExtensions.cs", label="Type type = input.GetType()", span="20-20"];
m0_5 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", color=red, community=0, file="EnumHumanizeExtensions.cs", label="0: var caseName = input.ToString()", span="21-21"];
m0_10 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", color=red, community=0, file="EnumHumanizeExtensions.cs", label="0: return input.ToString().Humanize();", span="31-31"];
m0_6 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", color=green, community=0, file="EnumHumanizeExtensions.cs", label="0: var memInfo = type.GetMember(caseName)", span="22-22"];
m0_7 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", color=red, community=0, file="EnumHumanizeExtensions.cs", label="0: var customDescription = GetCustomDescription(memInfo[0])", span="25-25"];
m0_8 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="EnumHumanizeExtensions.cs", label="var propertyName = Configurator.EnumDescriptionPropertyNameFor(type)", span="26-26"];
m0_9 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", color=green, community=0, file="EnumHumanizeExtensions.cs", label="0: var customDescription = GetCustomDescription(memInfo[0], propertyName)", span="27-27"];
m0_11 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="EnumHumanizeExtensions.cs", label="Exit Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", span="18-18"];
m1_8 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="EnumUnderTest.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="17-17"];
m1_14 [cluster="Unk.SequenceEqual", file="EnumUnderTest.cs", label="Entry Unk.SequenceEqual", span=""];
m1_9 [cluster="System.Collections.Generic.List<T>.List()", file="EnumUnderTest.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_6 [cluster="CommandLine.Core.Token.Name(string)", file="EnumUnderTest.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m1_11 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="EnumUnderTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m1_15 [cluster="Unk.True", file="EnumUnderTest.cs", label="Entry Unk.True", span=""];
m1_13 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", file="EnumUnderTest.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", span="44-44"];
m1_0 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="EnumUnderTest.cs", label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", span="13-13"];
m1_1 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="EnumUnderTest.cs", label="var expectedTokens = new[] { Token.Name(''i''), Token.Value(''10''), Token.Name(''string-seq''),\r\n                Token.Value(''aaa''), Token.Value(''bb''),  Token.Value(''cccc''), Token.Name(''switch''), }", span="16-17"];
m1_2 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="EnumUnderTest.cs", label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, -1, -1, ',', null, typeof(IEnumerable<string>), string.Empty, string.Empty, new List<string>())}", span="18-19"];
m1_4 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="EnumUnderTest.cs", label="Assert.True(expectedTokens.SequenceEqual(result.Value))", span="31-31"];
m1_3 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="EnumUnderTest.cs", label="var result =\r\n                Tokenizer.ExplodeOptionList(\r\n                    StatePair.Create(\r\n                        Enumerable.Empty<Token>().Concat(new[] { Token.Name(''i''), Token.Value(''10''),\r\n                            Token.Name(''string-seq''), Token.Value(''aaa,bb,cccc''), Token.Name(''switch'') }),\r\n                        Enumerable.Empty<Error>()),\r\n                        optionName => NameLookup.WithSeparator(optionName, specs, StringComparer.InvariantCulture))", span="22-28"];
m1_5 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="EnumUnderTest.cs", label="Exit CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", span="13-13"];
m1_12 [cluster="CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="EnumUnderTest.cs", label="Entry CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="58-58"];
m1_26 [cluster="lambda expression", file="EnumUnderTest.cs", label="Entry lambda expression", span="52-52"];
m1_17 [cluster="lambda expression", file="EnumUnderTest.cs", label="NameLookup.WithSeparator(optionName, specs, StringComparer.InvariantCulture)", span="28-28"];
m1_16 [cluster="lambda expression", file="EnumUnderTest.cs", label="Entry lambda expression", span="28-28"];
m1_18 [cluster="lambda expression", file="EnumUnderTest.cs", label="Exit lambda expression", span="28-28"];
m1_27 [cluster="lambda expression", file="EnumUnderTest.cs", label="NameLookup.WithSeparator(optionName, specs, StringComparer.InvariantCulture)", span="52-52"];
m1_28 [cluster="lambda expression", file="EnumUnderTest.cs", label="Exit lambda expression", span="52-52"];
m1_7 [cluster="CommandLine.Core.Token.Value(string)", file="EnumUnderTest.cs", label="Entry CommandLine.Core.Token.Value(string)", span="24-24"];
m1_20 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="EnumUnderTest.cs", label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", span="37-37"];
m1_21 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="EnumUnderTest.cs", label="var expectedTokens = new[] { Token.Name(''x''), Token.Name(''string-seq''),\r\n                Token.Value(''aaa''), Token.Value(''bb''),  Token.Value(''cccc''), Token.Name(''switch''), }", span="40-41"];
m1_22 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="EnumUnderTest.cs", label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, -1, -1, ',', null, typeof(IEnumerable<string>), string.Empty, string.Empty, new List<string>())}", span="42-43"];
m1_24 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="EnumUnderTest.cs", label="Assert.True(expectedTokens.SequenceEqual(result.Value))", span="55-55"];
m1_23 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="EnumUnderTest.cs", label="var result =\r\n                Tokenizer.ExplodeOptionList(\r\n                    StatePair.Create(\r\n                        Enumerable.Empty<Token>().Concat(new[] { Token.Name(''x''),\r\n                            Token.Name(''string-seq''), Token.Value(''aaa,bb,cccc''), Token.Name(''switch'') }),\r\n                        Enumerable.Empty<Error>()),\r\n                        optionName => NameLookup.WithSeparator(optionName, specs, StringComparer.InvariantCulture))", span="46-52"];
m1_25 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="EnumUnderTest.cs", label="Exit CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", span="37-37"];
m1_10 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="EnumUnderTest.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m1_19 [cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="EnumUnderTest.cs", label="Entry CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m1_29 [file="EnumUnderTest.cs", label=specs, span=""];
m1_30 [file="EnumUnderTest.cs", label=specs, span=""];
n41 -> n8  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>", style=dashed];
n42 -> n8  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>", style=dashed];
n42 -> n20  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>", style=dashed];
n43 -> n8  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
n43 -> n16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
n44 -> n16  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
n44 -> n20  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
n44 -> n29  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
n0 -> n1  [key=0, style=solid];
n0 -> n8  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>", style=dashed];
n0 -> n16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
n0 -> n20  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>", style=dashed];
n1 -> n2  [key=0, style=solid];
n1 -> n4  [key=2, style=dotted];
n1 -> n7  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n8 -> n9  [key=0, style=solid];
n8 -> n10  [key=2, style=dotted];
n8 -> n11  [key=2, style=dotted];
n8 -> n12  [key=2, style=dotted];
n8 -> n13  [key=2, style=dotted];
n8 -> n14  [key=2, style=dotted];
n8 -> n15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n8 -> n19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n16 -> n17  [key=0, style=solid];
n16 -> n18  [key=2, style=dotted];
n16 -> n16  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
n20 -> n21  [key=0, style=solid];
n20 -> n22  [key=2, style=dotted];
n20 -> n23  [key=2, style=dotted];
n20 -> n24  [key=2, style=dotted];
n20 -> n25  [key=2, style=dotted];
n20 -> n26  [key=2, style=dotted];
n20 -> n13  [key=2, style=dotted];
n20 -> n27  [key=2, style=dotted];
n20 -> n28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n2 -> n3  [key=0, style=solid];
n2 -> n4  [key=2, style=dotted];
n2 -> n5  [key=2, style=dotted];
n2 -> n6  [key=2, style=dotted];
n2 -> n32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n2 -> n35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n2 -> n38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n7 -> n8  [key=0, style=solid];
n7 -> n16  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
n7 -> n20  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
n7 -> n29  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
n3 -> n0  [color=blue, key=0, style=bold];
n32 -> n33  [key=0, style=solid];
n35 -> n36  [key=0, style=solid];
n38 -> n39  [key=0, style=solid];
n29 -> n30  [key=0, style=solid];
n29 -> n26  [key=2, style=dotted];
n29 -> n31  [key=2, style=dotted];
n29 -> n12  [key=2, style=dotted];
n29 -> n13  [key=2, style=dotted];
n9 -> n7  [color=blue, key=0, style=bold];
n15 -> n16  [key=0, style=solid];
n19 -> n20  [key=0, style=solid];
n17 -> n15  [color=blue, key=0, style=bold];
n21 -> n19  [color=blue, key=0, style=bold];
n28 -> n29  [key=0, style=solid];
n30 -> n28  [color=blue, key=0, style=bold];
n33 -> n34  [key=0, style=solid];
n34 -> n32  [color=blue, key=0, style=bold];
n36 -> n37  [key=0, style=solid];
n37 -> n35  [color=blue, key=0, style=bold];
n39 -> n40  [key=0, style=solid];
n40 -> n38  [color=blue, key=0, style=bold];
d1 -> d1  [color=green, key=1, label=result, style=dashed];
d1 -> d2  [color=green, key=0, style=solid];
d1 -> d4  [color=green, key=2, style=dotted];
d0 -> d1  [color=green, key=0, style=solid];
d2 -> d3  [color=green, key=0, style=solid];
d3 -> d0  [color=blue, key=0, style=bold];
m0_19 -> m0_20  [color=red, key=0, style=solid];
m0_19 -> m0_12  [key=2, style=dotted];
m0_19 -> m0_24  [key=0, style=solid];
m0_25 -> m0_26  [color=green, key=0, style=solid];
m0_25 -> m0_22  [color=green, key=0, style=solid];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_25  [key=2, style=dotted];
m0_17 -> m0_22  [key=0, style=solid];
m0_28 -> m0_20  [color=blue, key=0, style=bold];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_32  [color=darkseagreen4, key=1, label="Humanizer.LetterCasing", style=dashed];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_3  [key=2, style=dotted];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_34  [key=2, style=dotted];
m0_33 -> m0_30  [color=blue, key=0, style=bold];
m0_20 -> m0_17  [key=0, style=solid];
m0_20 -> m0_23  [color=darkorchid, key=3, label="method methodReturn string GetCustomDescription", style=bold];
m0_20 -> m0_21  [color=red, key=0, style=solid];
m0_20 -> m0_26  [color=red, key=2, style=dotted];
m0_20 -> m0_27  [color=red, key=2, style=dotted];
m0_20 -> m0_22  [color=red, key=1, label=descriptionProperty, style=dashed];
m0_15 -> m0_17  [key=0, style=solid];
m0_15 -> m0_16  [color=darkorchid, key=3, label="method methodReturn string GetCustomDescription", style=bold];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_23  [key=0, style=solid];
m0_18 -> m0_22  [color=darkseagreen4, key=1, label=attr, style=dashed];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_28  [key=0, style=solid];
m0_22 -> m0_24  [key=0, style=solid];
m0_22 -> m0_28  [key=2, style=dotted];
m0_22 -> m0_29  [key=2, style=dotted];
m0_22 -> m0_26  [color=green, key=1, label=attr, style=dashed];
m0_22 -> m0_19  [key=0, style=solid];
m0_22 -> m0_23  [key=0, style=solid];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_18  [key=0, style=solid];
m0_24 -> m0_15  [color=blue, key=0, style=bold];
m0_24 -> m0_26  [color=green, key=1, label=descriptionProperty, style=dashed];
m0_24 -> m0_25  [color=green, key=0, style=solid];
m0_24 -> m0_27  [key=2, style=dotted];
m0_26 -> m0_28  [color=green, key=0, style=solid];
m0_26 -> m0_29  [color=green, key=2, style=dotted];
m0_12 -> m0_11  [key=0, style=solid];
m0_12 -> m0_19  [key=2, style=dotted];
m0_0 -> m0_1  [color=red, key=0, style=solid];
m0_0 -> m0_0  [color=green, key=3, label="Field variable System.Func<System.Reflection.PropertyInfo, bool> StringTypedProperty", style=bold];
m0_1 -> m0_2  [color=red, key=0, style=solid];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_5  [color=darkseagreen4, key=1, label="System.Enum", style=dashed];
m0_3 -> m0_10  [color=red, key=1, label="System.Enum", style=dashed];
m0_3 -> m0_7  [color=red, key=3, label="method methodReturn string Humanize", style=bold];
m0_3 -> m0_30  [color=darkorchid, key=3, label="Parameter variable System.Enum input", style=bold];
m0_3 -> m0_9  [color=green, key=3, label="method methodReturn string Humanize", style=bold];
m0_4 -> m0_5  [color=red, key=0, style=solid];
m0_4 -> m0_12  [key=2, style=dotted];
m0_4 -> m0_6  [color=green, key=1, label=type, style=dashed];
m0_4 -> m0_8  [color=darkseagreen4, key=1, label=type, style=dashed];
m0_5 -> m0_6  [color=green, key=0, style=solid];
m0_5 -> m0_13  [color=red, key=2, style=dotted];
m0_5 -> m0_14  [color=red, key=2, style=dotted];
m0_5 -> m0_7  [color=red, key=1, label=memInfo, style=dashed];
m0_5 -> m0_12  [color=darkseagreen4, key=1, label=caseName, style=dashed];
m0_10 -> m0_11  [color=red, key=0, style=solid];
m0_10 -> m0_13  [color=red, key=2, style=dotted];
m0_10 -> m0_16  [color=red, key=2, style=dotted];
m0_6 -> m0_7  [color=red, key=0, style=solid];
m0_6 -> m0_10  [color=red, key=0, style=solid];
m0_6 -> m0_8  [key=0, style=solid];
m0_6 -> m0_12  [key=0, style=solid];
m0_6 -> m0_6  [color=green, key=0, style=solid];
m0_6 -> m0_14  [color=green, key=2, style=dotted];
m0_6 -> m0_9  [color=green, key=1, label=memInfo, style=dashed];
m0_7 -> m0_8  [color=red, key=0, style=solid];
m0_7 -> m0_15  [color=red, key=2, style=dotted];
m0_7 -> m0_9  [color=red, key=1, label=customDescription, style=dashed];
m0_8 -> m0_9  [color=green, key=0, style=solid];
m0_8 -> m0_10  [color=red, key=0, style=solid];
m0_8 -> m0_12  [key=0, style=solid];
m0_8 -> m0_17  [key=2, style=dotted];
m0_9 -> m0_11  [key=0, style=solid];
m0_9 -> m0_8  [color=green, key=0, style=solid];
m0_9 -> m0_18  [color=green, key=2, style=dotted];
m0_9 -> m0_9  [color=green, key=1, label=customDescription, style=dashed];
m0_11 -> m0_3  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_6  [key=2, style=dotted];
m1_1 -> m1_7  [key=2, style=dotted];
m1_1 -> m1_4  [color=darkseagreen4, key=1, label=expectedTokens, style=dashed];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_8  [key=2, style=dotted];
m1_2 -> m1_9  [key=2, style=dotted];
m1_2 -> m1_17  [color=darkseagreen4, key=1, label=specs, style=dashed];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_14  [key=2, style=dotted];
m1_4 -> m1_15  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_10  [key=2, style=dotted];
m1_3 -> m1_6  [key=2, style=dotted];
m1_3 -> m1_7  [key=2, style=dotted];
m1_3 -> m1_11  [key=2, style=dotted];
m1_3 -> m1_12  [key=2, style=dotted];
m1_3 -> m1_13  [key=2, style=dotted];
m1_3 -> m1_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_5 -> m1_0  [color=blue, key=0, style=bold];
m1_26 -> m1_27  [key=0, style=solid];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_19  [key=2, style=dotted];
m1_16 -> m1_17  [key=0, style=solid];
m1_18 -> m1_16  [color=blue, key=0, style=bold];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_19  [key=2, style=dotted];
m1_28 -> m1_26  [color=blue, key=0, style=bold];
m1_20 -> m1_21  [key=0, style=solid];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_6  [key=2, style=dotted];
m1_21 -> m1_7  [key=2, style=dotted];
m1_21 -> m1_24  [color=darkseagreen4, key=1, label=expectedTokens, style=dashed];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_8  [key=2, style=dotted];
m1_22 -> m1_9  [key=2, style=dotted];
m1_22 -> m1_27  [color=darkseagreen4, key=1, label=specs, style=dashed];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_14  [key=2, style=dotted];
m1_24 -> m1_15  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_10  [key=2, style=dotted];
m1_23 -> m1_6  [key=2, style=dotted];
m1_23 -> m1_7  [key=2, style=dotted];
m1_23 -> m1_11  [key=2, style=dotted];
m1_23 -> m1_12  [key=2, style=dotted];
m1_23 -> m1_13  [key=2, style=dotted];
m1_23 -> m1_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_25 -> m1_20  [color=blue, key=0, style=bold];
m1_29 -> m1_17  [color=darkseagreen4, key=1, label=specs, style=dashed];
m1_30 -> m1_27  [color=darkseagreen4, key=1, label=specs, style=dashed];
}
