digraph  {
n41 [label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>", span=""];
n42 [label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>", span=""];
n43 [label="System.StringComparer", span=""];
n44 [label="CommandLine.Core.SpecificationProperty", span=""];
n0 [label="Entry CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>, System.StringComparer)", span="13-13", cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>, System.StringComparer)"];
n1 [label="var sequencesAndErrors = propertyTuples\r\n                .Select(pt =>\r\n                    options.SingleOrDefault(\r\n                            s =>\r\n                            s.Key.MatchName(((OptionSpecification)pt.Specification).ShortName, ((OptionSpecification)pt.Specification).LongName, comparer))\r\n                               .ToMaybe()\r\n                               .Return(sequence =>\r\n                                    converter(sequence.Value, pt.Property.PropertyType, pt.Specification.ConversionType.IsScalar())\r\n                                    .Return(converted =>\r\n                                            Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>()),\r\n                                            Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                                                pt,\r\n                                                Maybe.Just<Error>(new BadFormatConversionError(NameInfo.FromOptionSpecification((OptionSpecification)pt.Specification))))),\r\n                                Tuple.Create(pt, Maybe.Nothing<Error>()))\r\n                )", span="19-35", cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>, System.StringComparer)"];
n8 [label="options.SingleOrDefault(\r\n                            s =>\r\n                            s.Key.MatchName(((OptionSpecification)pt.Specification).ShortName, ((OptionSpecification)pt.Specification).LongName, comparer))\r\n                               .ToMaybe()\r\n                               .Return(sequence =>\r\n                                    converter(sequence.Value, pt.Property.PropertyType, pt.Specification.ConversionType.IsScalar())\r\n                                    .Return(converted =>\r\n                                            Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>()),\r\n                                            Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                                                pt,\r\n                                                Maybe.Just<Error>(new BadFormatConversionError(NameInfo.FromOptionSpecification((OptionSpecification)pt.Specification))))),\r\n                                Tuple.Create(pt, Maybe.Nothing<Error>()))", span="21-34", cluster="lambda expression"];
n16 [label="s.Key.MatchName(((OptionSpecification)pt.Specification).ShortName, ((OptionSpecification)pt.Specification).LongName, comparer)", span="23-23", cluster="lambda expression"];
n20 [label="converter(sequence.Value, pt.Property.PropertyType, pt.Specification.ConversionType.IsScalar())\r\n                                    .Return(converted =>\r\n                                            Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>()),\r\n                                            Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                                                pt,\r\n                                                Maybe.Just<Error>(new BadFormatConversionError(NameInfo.FromOptionSpecification((OptionSpecification)pt.Specification)))))", span="26-33", cluster="lambda expression"];
n2 [label="return StatePair.Create(\r\n                sequencesAndErrors.Select(se => se.Item1),\r\n                sequencesAndErrors.Select(se => se.Item2).OfType<Just<Error>>().Select(se => se.Value));", span="36-38", cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>, System.StringComparer)"];
n4 [label="Entry Unk.Select", span="", cluster="Unk.Select"];
n7 [label="Entry lambda expression", span="20-34", cluster="lambda expression"];
n3 [label="Exit CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>, System.StringComparer)", span="13-13", cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>, System.StringComparer)"];
n5 [label="Entry Unk.>", span="", cluster="Unk.>"];
n6 [label="Entry Unk.Create", span="", cluster="Unk.Create"];
n32 [label="Entry lambda expression", span="37-37", cluster="lambda expression"];
n35 [label="Entry lambda expression", span="38-38", cluster="lambda expression"];
n38 [label="Entry lambda expression", span="38-38", cluster="lambda expression"];
n29 [label="Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>())", span="28-30", cluster="lambda expression"];
n9 [label="Exit lambda expression", span="20-34", cluster="lambda expression"];
n10 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault"];
n11 [label="Entry Unk.ToMaybe", span="", cluster="Unk.ToMaybe"];
n12 [label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66", cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()"];
n13 [label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0", cluster="System.Tuple.Create<T1, T2>(T1, T2)"];
n14 [label="Entry Unk.Return", span="", cluster="Unk.Return"];
n15 [label="Entry lambda expression", span="22-23", cluster="lambda expression"];
n19 [label="Entry lambda expression", span="25-33", cluster="lambda expression"];
n17 [label="Exit lambda expression", span="22-23", cluster="lambda expression"];
n18 [label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8", cluster="string.MatchName(string, string, System.StringComparer)"];
n21 [label="Exit lambda expression", span="25-33", cluster="lambda expression"];
n22 [label="Entry System.Type.IsScalar()", span="33-33", cluster="System.Type.IsScalar()"];
n23 [label="Entry Unk.converter", span="", cluster="Unk.converter"];
n24 [label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="305-305", cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)"];
n25 [label="Entry CommandLine.NameInfo.FromOptionSpecification(CommandLine.Core.OptionSpecification)", span="60-60", cluster="CommandLine.NameInfo.FromOptionSpecification(CommandLine.Core.OptionSpecification)"];
n26 [label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71", cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)"];
n27 [label="Entry CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="103-103", cluster="CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)"];
n28 [label="Entry lambda expression", span="27-30", cluster="lambda expression"];
n30 [label="Exit lambda expression", span="27-30", cluster="lambda expression"];
n31 [label="Entry CommandLine.Core.SpecificationProperty.WithValue(CommandLine.Infrastructure.Maybe<object>)", span="18-18", cluster="CommandLine.Core.SpecificationProperty.WithValue(CommandLine.Infrastructure.Maybe<object>)"];
n33 [label="se.Item1", span="37-37", cluster="lambda expression"];
n34 [label="Exit lambda expression", span="37-37", cluster="lambda expression"];
n36 [label="se.Item2", span="38-38", cluster="lambda expression"];
n37 [label="Exit lambda expression", span="38-38", cluster="lambda expression"];
n39 [label="se.Value", span="38-38", cluster="lambda expression"];
n40 [label="Exit lambda expression", span="38-38", cluster="lambda expression"];
d1 [label="string result = _enumDescriptionPropertyNames.TryGetValue(type, out result) ? result : null", span="105-105", cluster="Humanizer.Configuration.Configurator.EnumDescriptionPropertyNameFor(Type)", color=green, community=0];
d0 [label="Entry Humanizer.Configuration.Configurator.EnumDescriptionPropertyNameFor(Type)", span="103-103", cluster="Humanizer.Configuration.Configurator.EnumDescriptionPropertyNameFor(Type)"];
d2 [label="return result ?? DefaultEnumDescriptionPropertyName;", span="106-106", cluster="Humanizer.Configuration.Configurator.EnumDescriptionPropertyNameFor(Type)", color=green, community=0];
d4 [label="Entry Unk.TryGetValue", span="", cluster="Unk.TryGetValue"];
d3 [label="Exit Humanizer.Configuration.Configurator.EnumDescriptionPropertyNameFor(Type)", span="103-103", cluster="Humanizer.Configuration.Configurator.EnumDescriptionPropertyNameFor(Type)"];
m0_19 [label="var attrType = attr.GetType()", span="41-41", cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="EnumHumanizeExtensions.cs"];
m0_16 [label="Entry string.Humanize()", span="47-47", cluster="string.Humanize()", file="EnumHumanizeExtensions.cs"];
m0_25 [label="descriptionProperty != null", span="45-45", cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="EnumHumanizeExtensions.cs", color=green, community=0];
m0_34 [label="Entry string.ApplyCase(Humanizer.LetterCasing)", span="15-15", cluster="string.ApplyCase(Humanizer.LetterCasing)", file="EnumHumanizeExtensions.cs"];
m0_17 [label="var attrs = memberInfo.GetCustomAttributes(true)", span="37-37", cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="EnumHumanizeExtensions.cs"];
m0_13 [label="Entry System.Enum.ToString()", span="0-0", cluster="System.Enum.ToString()", file="EnumHumanizeExtensions.cs"];
m0_28 [label="Exit Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", span="37-37", cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="EnumHumanizeExtensions.cs"];
m0_30 [label="Entry Humanizer.EnumHumanizeExtensions.Humanize(System.Enum, Humanizer.LetterCasing)", span="56-56", cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum, Humanizer.LetterCasing)", file="EnumHumanizeExtensions.cs"];
m0_31 [label="var humanizedEnum = Humanize(input)", span="58-58", cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum, Humanizer.LetterCasing)", file="EnumHumanizeExtensions.cs"];
m0_32 [label="return humanizedEnum.ApplyCase(casing);", span="60-60", cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum, Humanizer.LetterCasing)", file="EnumHumanizeExtensions.cs"];
m0_33 [label="Exit Humanizer.EnumHumanizeExtensions.Humanize(System.Enum, Humanizer.LetterCasing)", span="56-56", cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum, Humanizer.LetterCasing)", file="EnumHumanizeExtensions.cs"];
m0_14 [label="Entry System.Type.GetMember(string)", span="0-0", cluster="System.Type.GetMember(string)", file="EnumHumanizeExtensions.cs"];
m0_20 [label="var descriptionProperty = attrType.GetProperties().FirstOrDefault(DescriptionProperty)", span="42-42", cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="EnumHumanizeExtensions.cs", color=red, community=0];
m0_15 [label="Entry Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", span="35-35", cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="EnumHumanizeExtensions.cs"];
m0_18 [label="Entry Unk.GetCustomDescription", span="", cluster="Unk.GetCustomDescription", file="EnumHumanizeExtensions.cs"];
m0_23 [label="return null;", span="47-47", cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="EnumHumanizeExtensions.cs"];
m0_22 [label=attrs, span="41-41", cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="EnumHumanizeExtensions.cs"];
m0_21 [label="descriptionProperty != null", span="43-43", cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="EnumHumanizeExtensions.cs"];
m0_24 [label="var descriptionProperty = attrType.GetProperties().FirstOrDefault(DescriptionProperty)", span="44-44", cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="EnumHumanizeExtensions.cs"];
m0_26 [label="Entry System.Type.GetProperties()", span="0-0", cluster="System.Type.GetProperties()", color=green, community=0, file="EnumHumanizeExtensions.cs"];
m0_12 [label="return caseName.Humanize();", span="33-33", cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="EnumHumanizeExtensions.cs"];
m0_0 [label="Entry lambda expression", span="11-11", cluster="lambda expression", file="EnumHumanizeExtensions.cs"];
m0_1 [label="p.Name == ''Description'' && p.PropertyType == typeof (string)", span="11-11", cluster="lambda expression", color=red, community=0, file="EnumHumanizeExtensions.cs"];
m0_2 [label="Exit lambda expression", span="11-11", cluster="lambda expression", file="EnumHumanizeExtensions.cs"];
m0_27 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="EnumHumanizeExtensions.cs"];
m0_29 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="EnumHumanizeExtensions.cs"];
m0_3 [label="Entry Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", span="18-18", cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="EnumHumanizeExtensions.cs"];
m0_4 [label="Type type = input.GetType()", span="20-20", cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="EnumHumanizeExtensions.cs"];
m0_5 [label="var caseName = input.ToString()", span="21-21", cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", color=red, community=0, file="EnumHumanizeExtensions.cs"];
m0_10 [label="return input.ToString().Humanize();", span="31-31", cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", color=red, community=0, file="EnumHumanizeExtensions.cs"];
m0_6 [label="var memInfo = type.GetMember(caseName)", span="22-22", cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="EnumHumanizeExtensions.cs", color=green, community=0];
m0_7 [label="var customDescription = GetCustomDescription(memInfo[0])", span="25-25", cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", color=red, community=0, file="EnumHumanizeExtensions.cs"];
m0_8 [label="var propertyName = Configurator.EnumDescriptionPropertyNameFor(type)", span="26-26", cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="EnumHumanizeExtensions.cs"];
m0_9 [label="var customDescription = GetCustomDescription(memInfo[0], propertyName)", span="27-27", cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="EnumHumanizeExtensions.cs", color=green, community=0];
m0_11 [label="Exit Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", span="18-18", cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="EnumHumanizeExtensions.cs"];
m1_8 [label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="17-17", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="EnumUnderTest.cs"];
m1_14 [label="Entry Unk.SequenceEqual", span="", cluster="Unk.SequenceEqual", file="EnumUnderTest.cs"];
m1_9 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="EnumUnderTest.cs"];
m1_6 [label="Entry CommandLine.Core.Token.Name(string)", span="19-19", cluster="CommandLine.Core.Token.Name(string)", file="EnumUnderTest.cs"];
m1_11 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="EnumUnderTest.cs"];
m1_15 [label="Entry Unk.True", span="", cluster="Unk.True", file="EnumUnderTest.cs"];
m1_13 [label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", span="44-44", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", file="EnumUnderTest.cs"];
m1_0 [label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", span="13-13", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="EnumUnderTest.cs"];
m1_1 [label="var expectedTokens = new[] { Token.Name(''i''), Token.Value(''10''), Token.Name(''string-seq''),\r\n                Token.Value(''aaa''), Token.Value(''bb''),  Token.Value(''cccc''), Token.Name(''switch''), }", span="16-17", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="EnumUnderTest.cs"];
m1_2 [label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, -1, -1, ',', null, typeof(IEnumerable<string>), string.Empty, string.Empty, new List<string>())}", span="18-19", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="EnumUnderTest.cs"];
m1_4 [label="Assert.True(expectedTokens.SequenceEqual(result.Value))", span="31-31", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="EnumUnderTest.cs"];
m1_3 [label="var result =\r\n                Tokenizer.ExplodeOptionList(\r\n                    StatePair.Create(\r\n                        Enumerable.Empty<Token>().Concat(new[] { Token.Name(''i''), Token.Value(''10''),\r\n                            Token.Name(''string-seq''), Token.Value(''aaa,bb,cccc''), Token.Name(''switch'') }),\r\n                        Enumerable.Empty<Error>()),\r\n                        optionName => NameLookup.WithSeparator(optionName, specs, StringComparer.InvariantCulture))", span="22-28", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="EnumUnderTest.cs"];
m1_5 [label="Exit CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", span="13-13", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="EnumUnderTest.cs"];
m1_12 [label="Entry CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="58-58", cluster="CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="EnumUnderTest.cs"];
m1_26 [label="Entry lambda expression", span="52-52", cluster="lambda expression", file="EnumUnderTest.cs"];
m1_17 [label="NameLookup.WithSeparator(optionName, specs, StringComparer.InvariantCulture)", span="28-28", cluster="lambda expression", file="EnumUnderTest.cs"];
m1_16 [label="Entry lambda expression", span="28-28", cluster="lambda expression", file="EnumUnderTest.cs"];
m1_18 [label="Exit lambda expression", span="28-28", cluster="lambda expression", file="EnumUnderTest.cs"];
m1_27 [label="NameLookup.WithSeparator(optionName, specs, StringComparer.InvariantCulture)", span="52-52", cluster="lambda expression", file="EnumUnderTest.cs"];
m1_28 [label="Exit lambda expression", span="52-52", cluster="lambda expression", file="EnumUnderTest.cs"];
m1_7 [label="Entry CommandLine.Core.Token.Value(string)", span="24-24", cluster="CommandLine.Core.Token.Value(string)", file="EnumUnderTest.cs"];
m1_20 [label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", span="37-37", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="EnumUnderTest.cs"];
m1_21 [label="var expectedTokens = new[] { Token.Name(''x''), Token.Name(''string-seq''),\r\n                Token.Value(''aaa''), Token.Value(''bb''),  Token.Value(''cccc''), Token.Name(''switch''), }", span="40-41", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="EnumUnderTest.cs"];
m1_22 [label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, -1, -1, ',', null, typeof(IEnumerable<string>), string.Empty, string.Empty, new List<string>())}", span="42-43", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="EnumUnderTest.cs"];
m1_24 [label="Assert.True(expectedTokens.SequenceEqual(result.Value))", span="55-55", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="EnumUnderTest.cs"];
m1_23 [label="var result =\r\n                Tokenizer.ExplodeOptionList(\r\n                    StatePair.Create(\r\n                        Enumerable.Empty<Token>().Concat(new[] { Token.Name(''x''),\r\n                            Token.Name(''string-seq''), Token.Value(''aaa,bb,cccc''), Token.Name(''switch'') }),\r\n                        Enumerable.Empty<Error>()),\r\n                        optionName => NameLookup.WithSeparator(optionName, specs, StringComparer.InvariantCulture))", span="46-52", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="EnumUnderTest.cs"];
m1_25 [label="Exit CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", span="37-37", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="EnumUnderTest.cs"];
m1_10 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="EnumUnderTest.cs"];
m1_19 [label="Entry CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16", cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="EnumUnderTest.cs"];
m1_29 [label=specs, span="", file="EnumUnderTest.cs"];
m1_30 [label=specs, span="", file="EnumUnderTest.cs"];
n41 -> n8  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>"];
n42 -> n8  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>"];
n42 -> n20  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>"];
n43 -> n8  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
n43 -> n16  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
n44 -> n16  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.SpecificationProperty"];
n44 -> n20  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.SpecificationProperty"];
n44 -> n29  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.SpecificationProperty"];
n0 -> n1  [key=0, style=solid];
n0 -> n8  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>"];
n0 -> n16  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
n0 -> n20  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>"];
n1 -> n2  [key=0, style=solid];
n1 -> n4  [key=2, style=dotted];
n1 -> n7  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n8 -> n9  [key=0, style=solid];
n8 -> n10  [key=2, style=dotted];
n8 -> n11  [key=2, style=dotted];
n8 -> n12  [key=2, style=dotted];
n8 -> n13  [key=2, style=dotted];
n8 -> n14  [key=2, style=dotted];
n8 -> n15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n8 -> n19  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n16 -> n17  [key=0, style=solid];
n16 -> n18  [key=2, style=dotted];
n16 -> n16  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
n20 -> n21  [key=0, style=solid];
n20 -> n22  [key=2, style=dotted];
n20 -> n23  [key=2, style=dotted];
n20 -> n24  [key=2, style=dotted];
n20 -> n25  [key=2, style=dotted];
n20 -> n26  [key=2, style=dotted];
n20 -> n13  [key=2, style=dotted];
n20 -> n27  [key=2, style=dotted];
n20 -> n28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n2 -> n3  [key=0, style=solid];
n2 -> n4  [key=2, style=dotted];
n2 -> n5  [key=2, style=dotted];
n2 -> n6  [key=2, style=dotted];
n2 -> n32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n2 -> n35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n2 -> n38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n7 -> n8  [key=0, style=solid];
n7 -> n16  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.SpecificationProperty"];
n7 -> n20  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.SpecificationProperty"];
n7 -> n29  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.SpecificationProperty"];
n3 -> n0  [key=0, style=bold, color=blue];
n32 -> n33  [key=0, style=solid];
n35 -> n36  [key=0, style=solid];
n38 -> n39  [key=0, style=solid];
n29 -> n30  [key=0, style=solid];
n29 -> n26  [key=2, style=dotted];
n29 -> n31  [key=2, style=dotted];
n29 -> n12  [key=2, style=dotted];
n29 -> n13  [key=2, style=dotted];
n9 -> n7  [key=0, style=bold, color=blue];
n15 -> n16  [key=0, style=solid];
n19 -> n20  [key=0, style=solid];
n17 -> n15  [key=0, style=bold, color=blue];
n21 -> n19  [key=0, style=bold, color=blue];
n28 -> n29  [key=0, style=solid];
n30 -> n28  [key=0, style=bold, color=blue];
n33 -> n34  [key=0, style=solid];
n34 -> n32  [key=0, style=bold, color=blue];
n36 -> n37  [key=0, style=solid];
n37 -> n35  [key=0, style=bold, color=blue];
n39 -> n40  [key=0, style=solid];
n40 -> n38  [key=0, style=bold, color=blue];
d1 -> d1  [key=1, style=dashed, color=green, label=result];
d1 -> d2  [key=0, style=solid, color=green];
d1 -> d4  [key=2, style=dotted, color=green];
d0 -> d1  [key=0, style=solid, color=green];
d2 -> d3  [key=0, style=solid, color=green];
d3 -> d0  [key=0, style=bold, color=blue];
m0_19 -> m0_20  [key=0, style=solid, color=red];
m0_19 -> m0_12  [key=2, style=dotted];
m0_19 -> m0_24  [key=0, style=solid];
m0_25 -> m0_26  [key=0, style=solid, color=green];
m0_25 -> m0_22  [key=0, style=solid, color=green];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_25  [key=2, style=dotted];
m0_17 -> m0_22  [key=0, style=solid];
m0_28 -> m0_20  [key=0, style=bold, color=blue];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.LetterCasing"];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_3  [key=2, style=dotted];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_34  [key=2, style=dotted];
m0_33 -> m0_30  [key=0, style=bold, color=blue];
m0_20 -> m0_17  [key=0, style=solid];
m0_20 -> m0_23  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetCustomDescription"];
m0_20 -> m0_21  [key=0, style=solid, color=red];
m0_20 -> m0_26  [key=2, style=dotted, color=red];
m0_20 -> m0_27  [key=2, style=dotted, color=red];
m0_20 -> m0_22  [key=1, style=dashed, color=red, label=descriptionProperty];
m0_15 -> m0_17  [key=0, style=solid];
m0_15 -> m0_16  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetCustomDescription"];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_23  [key=0, style=solid];
m0_18 -> m0_22  [key=1, style=dashed, color=darkseagreen4, label=attr];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_28  [key=0, style=solid];
m0_22 -> m0_24  [key=0, style=solid];
m0_22 -> m0_28  [key=2, style=dotted];
m0_22 -> m0_29  [key=2, style=dotted];
m0_22 -> m0_26  [key=1, style=dashed, color=green, label=attr];
m0_22 -> m0_19  [key=0, style=solid];
m0_22 -> m0_23  [key=0, style=solid];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_18  [key=0, style=solid];
m0_24 -> m0_15  [key=0, style=bold, color=blue];
m0_24 -> m0_26  [key=1, style=dashed, color=green, label=descriptionProperty];
m0_24 -> m0_25  [key=0, style=solid, color=green];
m0_24 -> m0_27  [key=2, style=dotted];
m0_26 -> m0_28  [key=0, style=solid, color=green];
m0_26 -> m0_29  [key=2, style=dotted, color=green];
m0_12 -> m0_11  [key=0, style=solid];
m0_12 -> m0_19  [key=2, style=dotted];
m0_0 -> m0_1  [key=0, style=solid, color=red];
m0_0 -> m0_0  [key=3, color=green, style=bold, label="Field variable System.Func<System.Reflection.PropertyInfo, bool> StringTypedProperty"];
m0_1 -> m0_2  [key=0, style=solid, color=red];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="System.Enum"];
m0_3 -> m0_10  [key=1, style=dashed, color=red, label="System.Enum"];
m0_3 -> m0_7  [key=3, color=red, style=bold, label="method methodReturn string Humanize"];
m0_3 -> m0_30  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Enum input"];
m0_3 -> m0_9  [key=3, color=green, style=bold, label="method methodReturn string Humanize"];
m0_4 -> m0_5  [key=0, style=solid, color=red];
m0_4 -> m0_12  [key=2, style=dotted];
m0_4 -> m0_6  [key=1, style=dashed, color=green, label=type];
m0_4 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label=type];
m0_5 -> m0_6  [key=0, style=solid, color=green];
m0_5 -> m0_13  [key=2, style=dotted, color=red];
m0_5 -> m0_14  [key=2, style=dotted, color=red];
m0_5 -> m0_7  [key=1, style=dashed, color=red, label=memInfo];
m0_5 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label=caseName];
m0_10 -> m0_11  [key=0, style=solid, color=red];
m0_10 -> m0_13  [key=2, style=dotted, color=red];
m0_10 -> m0_16  [key=2, style=dotted, color=red];
m0_6 -> m0_7  [key=0, style=solid, color=red];
m0_6 -> m0_10  [key=0, style=solid, color=red];
m0_6 -> m0_8  [key=0, style=solid];
m0_6 -> m0_12  [key=0, style=solid];
m0_6 -> m0_6  [key=0, style=solid, color=green];
m0_6 -> m0_14  [key=2, style=dotted, color=green];
m0_6 -> m0_9  [key=1, style=dashed, color=green, label=memInfo];
m0_7 -> m0_8  [key=0, style=solid, color=red];
m0_7 -> m0_15  [key=2, style=dotted, color=red];
m0_7 -> m0_9  [key=1, style=dashed, color=red, label=customDescription];
m0_8 -> m0_9  [key=0, style=solid, color=green];
m0_8 -> m0_10  [key=0, style=solid, color=red];
m0_8 -> m0_12  [key=0, style=solid];
m0_8 -> m0_17  [key=2, style=dotted];
m0_9 -> m0_11  [key=0, style=solid];
m0_9 -> m0_8  [key=0, style=solid, color=green];
m0_9 -> m0_18  [key=2, style=dotted, color=green];
m0_9 -> m0_9  [key=1, style=dashed, color=green, label=customDescription];
m0_11 -> m0_3  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_6  [key=2, style=dotted];
m1_1 -> m1_7  [key=2, style=dotted];
m1_1 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label=expectedTokens];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_8  [key=2, style=dotted];
m1_2 -> m1_9  [key=2, style=dotted];
m1_2 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label=specs];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_14  [key=2, style=dotted];
m1_4 -> m1_15  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_10  [key=2, style=dotted];
m1_3 -> m1_6  [key=2, style=dotted];
m1_3 -> m1_7  [key=2, style=dotted];
m1_3 -> m1_11  [key=2, style=dotted];
m1_3 -> m1_12  [key=2, style=dotted];
m1_3 -> m1_13  [key=2, style=dotted];
m1_3 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_5 -> m1_0  [key=0, style=bold, color=blue];
m1_26 -> m1_27  [key=0, style=solid];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_19  [key=2, style=dotted];
m1_16 -> m1_17  [key=0, style=solid];
m1_18 -> m1_16  [key=0, style=bold, color=blue];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_19  [key=2, style=dotted];
m1_28 -> m1_26  [key=0, style=bold, color=blue];
m1_20 -> m1_21  [key=0, style=solid];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_6  [key=2, style=dotted];
m1_21 -> m1_7  [key=2, style=dotted];
m1_21 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label=expectedTokens];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_8  [key=2, style=dotted];
m1_22 -> m1_9  [key=2, style=dotted];
m1_22 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label=specs];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_14  [key=2, style=dotted];
m1_24 -> m1_15  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_10  [key=2, style=dotted];
m1_23 -> m1_6  [key=2, style=dotted];
m1_23 -> m1_7  [key=2, style=dotted];
m1_23 -> m1_11  [key=2, style=dotted];
m1_23 -> m1_12  [key=2, style=dotted];
m1_23 -> m1_13  [key=2, style=dotted];
m1_23 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_25 -> m1_20  [key=0, style=bold, color=blue];
m1_29 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label=specs];
m1_30 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label=specs];
}
