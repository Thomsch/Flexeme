digraph  {
n0 [label="Entry Humanizer.On.January.The(int)", span="10-10", cluster="Humanizer.On.January.The(int)"];
n1 [label="return new DateTime(DateTime.Now.Year, 1, dayNumber);", span="12-12", cluster="Humanizer.On.January.The(int)"];
n2 [label="Exit Humanizer.On.January.The(int)", span="10-10", cluster="Humanizer.On.January.The(int)"];
n3 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)"];
n4 [label="Entry Humanizer.On.February.The(int)", span="173-173", cluster="Humanizer.On.February.The(int)"];
n5 [label="return new DateTime(DateTime.Now.Year, 2, dayNumber);", span="175-175", cluster="Humanizer.On.February.The(int)"];
n6 [label="Exit Humanizer.On.February.The(int)", span="173-173", cluster="Humanizer.On.February.The(int)"];
n7 [label="Entry Humanizer.On.March.The(int)", span="326-326", cluster="Humanizer.On.March.The(int)"];
n8 [label="return new DateTime(DateTime.Now.Year, 3, dayNumber);", span="328-328", cluster="Humanizer.On.March.The(int)"];
n9 [label="Exit Humanizer.On.March.The(int)", span="326-326", cluster="Humanizer.On.March.The(int)"];
n10 [label="Entry Humanizer.On.April.The(int)", span="489-489", cluster="Humanizer.On.April.The(int)"];
n11 [label="return new DateTime(DateTime.Now.Year, 4, dayNumber);", span="491-491", cluster="Humanizer.On.April.The(int)"];
n12 [label="Exit Humanizer.On.April.The(int)", span="489-489", cluster="Humanizer.On.April.The(int)"];
n13 [label="Entry Humanizer.On.May.The(int)", span="647-647", cluster="Humanizer.On.May.The(int)"];
n14 [label="return new DateTime(DateTime.Now.Year, 5, dayNumber);", span="649-649", cluster="Humanizer.On.May.The(int)"];
n15 [label="Exit Humanizer.On.May.The(int)", span="647-647", cluster="Humanizer.On.May.The(int)"];
n16 [label="Entry Humanizer.On.June.The(int)", span="810-810", cluster="Humanizer.On.June.The(int)"];
n17 [label="return new DateTime(DateTime.Now.Year, 6, dayNumber);", span="812-812", cluster="Humanizer.On.June.The(int)"];
n18 [label="Exit Humanizer.On.June.The(int)", span="810-810", cluster="Humanizer.On.June.The(int)"];
n19 [label="Entry Humanizer.On.July.The(int)", span="968-968", cluster="Humanizer.On.July.The(int)"];
n20 [label="return new DateTime(DateTime.Now.Year, 7, dayNumber);", span="970-970", cluster="Humanizer.On.July.The(int)"];
n21 [label="Exit Humanizer.On.July.The(int)", span="968-968", cluster="Humanizer.On.July.The(int)"];
n22 [label="Entry Humanizer.On.August.The(int)", span="1131-1131", cluster="Humanizer.On.August.The(int)"];
n23 [label="return new DateTime(DateTime.Now.Year, 8, dayNumber);", span="1133-1133", cluster="Humanizer.On.August.The(int)"];
n24 [label="Exit Humanizer.On.August.The(int)", span="1131-1131", cluster="Humanizer.On.August.The(int)"];
n25 [label="Entry Humanizer.On.September.The(int)", span="1294-1294", cluster="Humanizer.On.September.The(int)"];
n26 [label="return new DateTime(DateTime.Now.Year, 9, dayNumber);", span="1296-1296", cluster="Humanizer.On.September.The(int)"];
n27 [label="Exit Humanizer.On.September.The(int)", span="1294-1294", cluster="Humanizer.On.September.The(int)"];
n28 [label="Entry Humanizer.On.October.The(int)", span="1452-1452", cluster="Humanizer.On.October.The(int)"];
n29 [label="return new DateTime(DateTime.Now.Year, 10, dayNumber);", span="1454-1454", cluster="Humanizer.On.October.The(int)"];
n30 [label="Exit Humanizer.On.October.The(int)", span="1452-1452", cluster="Humanizer.On.October.The(int)"];
n31 [label="Entry Humanizer.On.November.The(int)", span="1615-1615", cluster="Humanizer.On.November.The(int)"];
n32 [label="return new DateTime(DateTime.Now.Year, 11, dayNumber);", span="1617-1617", cluster="Humanizer.On.November.The(int)"];
n33 [label="Exit Humanizer.On.November.The(int)", span="1615-1615", cluster="Humanizer.On.November.The(int)"];
n34 [label="Entry Humanizer.On.December.The(int)", span="1773-1773", cluster="Humanizer.On.December.The(int)"];
n35 [label="return new DateTime(DateTime.Now.Year, 12, dayNumber);", span="1775-1775", cluster="Humanizer.On.December.The(int)"];
n36 [label="Exit Humanizer.On.December.The(int)", span="1773-1773", cluster="Humanizer.On.December.The(int)"];
m0_32 [label="Entry Humanizer.TimeSpanHumanizeExtensions.CreateTimePartsWithNoTimeValue(string)", span="186-186", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTimePartsWithNoTimeValue(string)", file="ByteSizeExtensionsTests.cs"];
m0_34 [label="return enumTypeEnumerator.Reverse();", span="81-81", cluster="Humanizer.TimeSpanHumanizeExtensions.GetEnumTypesForTimeUnit()", file="ByteSizeExtensionsTests.cs"];
m0_33 [label="var enumTypeEnumerator = (IEnumerable<TimeUnit>)Enum.GetValues(typeof(TimeUnit))", span="80-80", cluster="Humanizer.TimeSpanHumanizeExtensions.GetEnumTypesForTimeUnit()", file="ByteSizeExtensionsTests.cs"];
m0_35 [label="Exit Humanizer.TimeSpanHumanizeExtensions.GetEnumTypesForTimeUnit()", span="78-78", cluster="Humanizer.TimeSpanHumanizeExtensions.GetEnumTypesForTimeUnit()", file="ByteSizeExtensionsTests.cs"];
m0_27 [label="Entry Humanizer.Bytes.ByteSize.FromKilobytes(double)", span="103-103", cluster="Humanizer.Bytes.ByteSize.FromKilobytes(double)", file="ByteSizeExtensionsTests.cs"];
m0_45 [label="Exit Humanizer.Tests.Bytes.FluentMethods.Bits()", span="64-64", cluster="Humanizer.Tests.Bytes.FluentMethods.Bits()", file="ByteSizeExtensionsTests.cs"];
m0_93 [label="return amountOfTimeUnits != 0\r\n                ? cultureFormatter.TimeSpanHumanize(timeUnitType, Math.Abs(amountOfTimeUnits))\r\n                : null;", span="181-183", cluster="Humanizer.TimeSpanHumanizeExtensions.BuildFormatTimePart(Humanizer.Localisation.Formatters.IFormatter, Humanizer.Localisation.TimeUnit, int)", file="ByteSizeExtensionsTests.cs"];
m0_94 [label="Exit Humanizer.TimeSpanHumanizeExtensions.BuildFormatTimePart(Humanizer.Localisation.Formatters.IFormatter, Humanizer.Localisation.TimeUnit, int)", span="178-178", cluster="Humanizer.TimeSpanHumanizeExtensions.BuildFormatTimePart(Humanizer.Localisation.Formatters.IFormatter, Humanizer.Localisation.TimeUnit, int)", file="ByteSizeExtensionsTests.cs"];
m0_11 [label="var cultureFormatter = Configurator.GetFormatter(culture)", span="55-55", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="ByteSizeExtensionsTests.cs"];
m0_0 [label="Entry Humanizer.Tests.Bytes.FluentMethods.Terabytes()", span="8-8", cluster="Humanizer.Tests.Bytes.FluentMethods.Terabytes()", file="ByteSizeExtensionsTests.cs"];
m0_1 [label="var size = (2.0).Terabytes()", span="10-10", cluster="Humanizer.Tests.Bytes.FluentMethods.Terabytes()", color=red, community=0, file="ByteSizeExtensionsTests.cs"];
m0_2 [label="Assert.Equal(ByteSize.FromTerabytes(2), size)", span="11-11", cluster="Humanizer.Tests.Bytes.FluentMethods.Terabytes()", file="ByteSizeExtensionsTests.cs", color=green, community=0];
m0_47 [label="TimeUnit.Millisecond", span="99-99", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_66 [label="Entry Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", span="147-147", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_81 [label=isTimeUnitToGetTheMaximumTimeUnit, span="149-149", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_82 [label="return timespan.Days;", span="151-151", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_83 [label="timespan.Days < _daysInAMonth", span="153-153", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_84 [label="var remainingDays = timespan.Days % _daysInAWeek", span="155-155", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_86 [label="return (int)((double)timespan.Days % _daysInAMonth);", span="158-158", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_85 [label="return remainingDays;", span="156-156", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_87 [label="Exit Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", span="147-147", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_101 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", file="ByteSizeExtensionsTests.cs"];
m0_37 [label="Entry Humanizer.Bytes.ByteSize.FromBytes(double)", span="98-98", cluster="Humanizer.Bytes.ByteSize.FromBytes(double)", file="ByteSizeExtensionsTests.cs"];
m0_3 [label="Entry Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, bool, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, string)", span="45-45", cluster="Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, bool, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, string)", file="ByteSizeExtensionsTests.cs"];
m0_6 [label="return ConcatenateTimeSpanParts(timeParts, culture, collectionSeparator);", span="50-50", cluster="Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, bool, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, string)", file="ByteSizeExtensionsTests.cs"];
m0_4 [label="var timeParts = CreateTheTimePartsWithUpperAndLowerLimits(timeSpan, culture, maxUnit, minUnit)", span="47-47", cluster="Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, bool, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, string)", file="ByteSizeExtensionsTests.cs"];
m0_36 [label="Entry double.Bytes()", span="35-35", cluster="double.Bytes()", file="ByteSizeExtensionsTests.cs"];
m0_9 [label="Assert.Equal(''2 TB'', humanized)", span="18-18", cluster="Humanizer.Tests.Bytes.FluentMethods.HumanizesTerabytes()", file="ByteSizeExtensionsTests.cs", color=green, community=0];
m0_105 [label="!countEmptyUnits", span="198-198", cluster="Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", file="ByteSizeExtensionsTests.cs"];
m0_106 [label="timeParts = timeParts.Where(x => x != null)", span="199-199", cluster="Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", file="ByteSizeExtensionsTests.cs"];
m0_107 [label="timeParts = timeParts.Take(precision)", span="200-200", cluster="Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", file="ByteSizeExtensionsTests.cs"];
m0_108 [label=countEmptyUnits, span="201-201", cluster="Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", file="ByteSizeExtensionsTests.cs"];
m0_109 [label="timeParts = timeParts.Where(x => x != null)", span="202-202", cluster="Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", file="ByteSizeExtensionsTests.cs"];
m0_110 [label="return timeParts;", span="204-204", cluster="Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", file="ByteSizeExtensionsTests.cs"];
m0_111 [label="Exit Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", span="196-196", cluster="Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", file="ByteSizeExtensionsTests.cs"];
m0_10 [label="Exit Humanizer.Tests.Bytes.FluentMethods.HumanizesTerabytes()", span="15-15", cluster="Humanizer.Tests.Bytes.FluentMethods.HumanizesTerabytes()", file="ByteSizeExtensionsTests.cs"];
m0_120 [label="collectionSeparator == null", span="209-209", cluster="Humanizer.TimeSpanHumanizeExtensions.ConcatenateTimeSpanParts(System.Collections.Generic.IEnumerable<string>, System.Globalization.CultureInfo, string)", file="ByteSizeExtensionsTests.cs"];
m0_121 [label="return Configurator.CollectionFormatters.ResolveForCulture(culture).Humanize(timeSpanParts);", span="211-211", cluster="Humanizer.TimeSpanHumanizeExtensions.ConcatenateTimeSpanParts(System.Collections.Generic.IEnumerable<string>, System.Globalization.CultureInfo, string)", file="ByteSizeExtensionsTests.cs"];
m0_122 [label="return string.Join(collectionSeparator, timeSpanParts);", span="214-214", cluster="Humanizer.TimeSpanHumanizeExtensions.ConcatenateTimeSpanParts(System.Collections.Generic.IEnumerable<string>, System.Globalization.CultureInfo, string)", file="ByteSizeExtensionsTests.cs"];
m0_123 [label="Exit Humanizer.TimeSpanHumanizeExtensions.ConcatenateTimeSpanParts(System.Collections.Generic.IEnumerable<string>, System.Globalization.CultureInfo, string)", span="207-207", cluster="Humanizer.TimeSpanHumanizeExtensions.ConcatenateTimeSpanParts(System.Collections.Generic.IEnumerable<string>, System.Globalization.CultureInfo, string)", file="ByteSizeExtensionsTests.cs"];
m0_18 [label="firstValueFound = true", span="66-66", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="ByteSizeExtensionsTests.cs", color=red, community=0];
m0_19 [label="timeParts.Add(timepart)", span="67-67", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", color=red, community=0, file="ByteSizeExtensionsTests.cs"];
m0_20 [label="IsContainingOnlyNullValue(timeParts)", span="70-70", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", color=red, community=0, file="ByteSizeExtensionsTests.cs"];
m0_21 [label="var noTimeValueCultureFarmated = cultureFormatter.TimeSpanHumanize_Zero()", span="72-72", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="ByteSizeExtensionsTests.cs", color=red, community=0];
m0_42 [label="return null;", span="92-92", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitPart(Humanizer.Localisation.TimeUnit, System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Formatters.IFormatter)", file="ByteSizeExtensionsTests.cs"];
m0_44 [label="Entry Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", span="95-95", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_43 [label="Exit Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitPart(Humanizer.Localisation.TimeUnit, System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Formatters.IFormatter)", span="84-84", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitPart(Humanizer.Localisation.TimeUnit, System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Formatters.IFormatter)", file="ByteSizeExtensionsTests.cs"];
m0_125 [label="Entry Humanizer.Localisation.CollectionFormatters.ICollectionFormatter.Humanize<T>(System.Collections.Generic.IEnumerable<T>)", span="14-14", cluster="Humanizer.Localisation.CollectionFormatters.ICollectionFormatter.Humanize<T>(System.Collections.Generic.IEnumerable<T>)", file="ByteSizeExtensionsTests.cs"];
m0_67 [label="Entry Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseWeeksAsInteger(System.TimeSpan, bool)", span="138-138", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseWeeksAsInteger(System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_77 [label="isTimeUnitToGetTheMaximumTimeUnit || timespan.Days < _daysInAMonth", span="140-140", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseWeeksAsInteger(System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_78 [label="return timespan.Days / _daysInAWeek;", span="142-142", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseWeeksAsInteger(System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_79 [label="return 0;", span="144-144", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseWeeksAsInteger(System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_80 [label="Exit Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseWeeksAsInteger(System.TimeSpan, bool)", span="138-138", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseWeeksAsInteger(System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_7 [label="Exit Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, bool, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, string)", span="45-45", cluster="Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, bool, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, string)", file="ByteSizeExtensionsTests.cs"];
m0_8 [label="Entry Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", span="53-53", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUpperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", color=green, community=0, file="ByteSizeExtensionsTests.cs"];
m0_48 [label="return GetNormalCaseTimeAsInteger(timespan.Milliseconds, timespan.TotalMilliseconds, isTimeUnitToGetTheMaximumTimeUnit);", span="100-100", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_50 [label="return GetNormalCaseTimeAsInteger(timespan.Seconds, timespan.TotalSeconds, isTimeUnitToGetTheMaximumTimeUnit);", span="102-102", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", color=green, community=0, file="ByteSizeExtensionsTests.cs"];
m0_49 [label="TimeUnit.Second", span="101-101", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_51 [label="TimeUnit.Minute", span="103-103", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_96 [label="Entry Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", span="42-42", cluster="Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", file="ByteSizeExtensionsTests.cs"];
m0_112 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="ByteSizeExtensionsTests.cs"];
m0_16 [label="Entry double.Gigabytes()", span="65-65", cluster="double.Gigabytes()", file="ByteSizeExtensionsTests.cs"];
m0_12 [label="Entry Humanizer.Tests.Bytes.FluentMethods.Gigabytes()", span="22-22", cluster="Humanizer.Tests.Bytes.FluentMethods.Gigabytes()", color=red, community=0, file="ByteSizeExtensionsTests.cs"];
m0_13 [label="var size = (2.0).Gigabytes()", span="24-24", cluster="Humanizer.Tests.Bytes.FluentMethods.Gigabytes()", color=red, community=0, file="ByteSizeExtensionsTests.cs"];
m0_17 [label="Entry Humanizer.Bytes.ByteSize.FromGigabytes(double)", span="113-113", cluster="Humanizer.Bytes.ByteSize.FromGigabytes(double)", file="ByteSizeExtensionsTests.cs"];
m0_14 [label="Assert.Equal(ByteSize.FromGigabytes(2), size)", span="25-25", cluster="Humanizer.Tests.Bytes.FluentMethods.Gigabytes()", file="ByteSizeExtensionsTests.cs"];
m0_15 [label="Exit Humanizer.Tests.Bytes.FluentMethods.Gigabytes()", span="22-22", cluster="Humanizer.Tests.Bytes.FluentMethods.Gigabytes()", color=red, community=0, file="ByteSizeExtensionsTests.cs"];
m0_23 [label="var size = (2.0).Kilobytes()", span="38-38", cluster="Humanizer.Tests.Bytes.FluentMethods.Kilobytes()", color=red, community=0, file="ByteSizeExtensionsTests.cs"];
m0_22 [label="Entry Humanizer.Tests.Bytes.FluentMethods.Kilobytes()", span="36-36", cluster="Humanizer.Tests.Bytes.FluentMethods.Kilobytes()", color=red, community=0, file="ByteSizeExtensionsTests.cs"];
m0_24 [label="Assert.Equal(ByteSize.FromKilobytes(2), size)", span="39-39", cluster="Humanizer.Tests.Bytes.FluentMethods.Kilobytes()", file="ByteSizeExtensionsTests.cs", color=green, community=0];
m0_95 [label="Entry System.Math.Abs(int)", span="0-0", cluster="System.Math.Abs(int)", file="ByteSizeExtensionsTests.cs"];
m0_126 [label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0", cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="ByteSizeExtensionsTests.cs"];
m0_113 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="ByteSizeExtensionsTests.cs"];
m0_124 [label="Entry Humanizer.Configuration.LocaliserRegistry<TLocaliser>.ResolveForCulture(System.Globalization.CultureInfo)", span="46-46", cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.ResolveForCulture(System.Globalization.CultureInfo)", file="ByteSizeExtensionsTests.cs"];
m0_5 [label="timeParts = SetPrecisionOfTimeSpan(timeParts, precision, countEmptyUnits)", span="48-48", cluster="Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, bool, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, string)", file="ByteSizeExtensionsTests.cs"];
m0_26 [label="Entry Humanizer.TimeSpanHumanizeExtensions.GetEnumTypesForTimeUnit()", span="78-78", cluster="Humanizer.TimeSpanHumanizeExtensions.GetEnumTypesForTimeUnit()", file="ByteSizeExtensionsTests.cs"];
m0_46 [label="Entry int.Bits()", span="25-25", cluster="int.Bits()", file="ByteSizeExtensionsTests.cs"];
m0_52 [label="return GetNormalCaseTimeAsInteger(timespan.Minutes, timespan.TotalMinutes, isTimeUnitToGetTheMaximumTimeUnit);", span="104-104", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_54 [label="return GetNormalCaseTimeAsInteger(timespan.Hours, timespan.TotalHours, isTimeUnitToGetTheMaximumTimeUnit);", span="106-106", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_56 [label="return GetSpecialCaseDaysAsInteger(timespan, isTimeUnitToGetTheMaximumTimeUnit);", span="108-108", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_58 [label="return GetSpecialCaseWeeksAsInteger(timespan, isTimeUnitToGetTheMaximumTimeUnit);", span="110-110", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_60 [label="return GetSpecialCaseMonthAsInteger(timespan, isTimeUnitToGetTheMaximumTimeUnit);", span="112-112", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_53 [label="TimeUnit.Hour", span="105-105", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_55 [label="TimeUnit.Day", span="107-107", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_57 [label="TimeUnit.Week", span="109-109", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_59 [label="TimeUnit.Month", span="111-111", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_61 [label="TimeUnit.Year", span="113-113", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_63 [label="return 0;", span="116-116", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_62 [label="return GetSpecialCaseYearAsInteger(timespan);", span="114-114", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_64 [label="Exit Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", span="95-95", cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_117 [label="Entry lambda expression", span="202-202", cluster="lambda expression", file="ByteSizeExtensionsTests.cs"];
m0_102 [label="Entry lambda expression", span="193-193", cluster="lambda expression", file="ByteSizeExtensionsTests.cs"];
m0_103 [label="x != null", span="193-193", cluster="lambda expression", file="ByteSizeExtensionsTests.cs"];
m0_104 [label="Exit lambda expression", span="193-193", cluster="lambda expression", file="ByteSizeExtensionsTests.cs"];
m0_114 [label="Entry lambda expression", span="199-199", cluster="lambda expression", file="ByteSizeExtensionsTests.cs"];
m0_115 [label="x != null", span="199-199", cluster="lambda expression", file="ByteSizeExtensionsTests.cs"];
m0_116 [label="Exit lambda expression", span="199-199", cluster="lambda expression", file="ByteSizeExtensionsTests.cs"];
m0_118 [label="x != null", span="202-202", cluster="lambda expression", file="ByteSizeExtensionsTests.cs"];
m0_119 [label="Exit lambda expression", span="202-202", cluster="lambda expression", file="ByteSizeExtensionsTests.cs"];
m0_97 [label="return new List<string>() { noTimeValue };", span="188-188", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTimePartsWithNoTimeValue(string)", file="ByteSizeExtensionsTests.cs"];
m0_98 [label="Exit Humanizer.TimeSpanHumanizeExtensions.CreateTimePartsWithNoTimeValue(string)", span="186-186", cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTimePartsWithNoTimeValue(string)", file="ByteSizeExtensionsTests.cs"];
m0_25 [label="Exit Humanizer.Tests.Bytes.FluentMethods.Kilobytes()", span="36-36", cluster="Humanizer.Tests.Bytes.FluentMethods.Kilobytes()", file="ByteSizeExtensionsTests.cs"];
m0_30 [label="Assert.Equal(''2 KB'', humanized)", span="46-46", cluster="Humanizer.Tests.Bytes.FluentMethods.HumanizesKilobytes()", file="ByteSizeExtensionsTests.cs", color=green, community=0];
m0_99 [label="return (timeParts.Count(x => x != null) == 0);", span="193-193", cluster="Humanizer.TimeSpanHumanizeExtensions.IsContainingOnlyNullValue(System.Collections.Generic.IEnumerable<string>)", file="ByteSizeExtensionsTests.cs"];
m0_100 [label="Exit Humanizer.TimeSpanHumanizeExtensions.IsContainingOnlyNullValue(System.Collections.Generic.IEnumerable<string>)", span="191-191", cluster="Humanizer.TimeSpanHumanizeExtensions.IsContainingOnlyNullValue(System.Collections.Generic.IEnumerable<string>)", file="ByteSizeExtensionsTests.cs"];
m0_68 [label="Entry Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseMonthAsInteger(System.TimeSpan, bool)", span="120-120", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseMonthAsInteger(System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_70 [label=isTimeUnitToGetTheMaximumTimeUnit, span="122-122", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseMonthAsInteger(System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_71 [label="return (int)((double)timespan.Days / _daysInAMonth);", span="124-124", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseMonthAsInteger(System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_72 [label="var remainingDays = (double)timespan.Days % _daysInAYear", span="128-128", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseMonthAsInteger(System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_73 [label="return (int)(remainingDays / _daysInAMonth);", span="129-129", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseMonthAsInteger(System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_74 [label="Exit Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseMonthAsInteger(System.TimeSpan, bool)", span="120-120", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseMonthAsInteger(System.TimeSpan, bool)", file="ByteSizeExtensionsTests.cs"];
m0_28 [label="Entry Humanizer.Tests.Bytes.FluentMethods.HumanizesKilobytes()", span="43-43", cluster="Humanizer.Tests.Bytes.FluentMethods.HumanizesKilobytes()", file="ByteSizeExtensionsTests.cs"];
m0_38 [label="Entry Humanizer.Tests.Bytes.FluentMethods.HumanizesBytes()", span="57-57", cluster="Humanizer.Tests.Bytes.FluentMethods.HumanizesBytes()", file="ByteSizeExtensionsTests.cs"];
m0_39 [label="var humanized = (2.0).Bytes().Humanize()", span="59-59", cluster="Humanizer.Tests.Bytes.FluentMethods.HumanizesBytes()", file="ByteSizeExtensionsTests.cs", color=green, community=0];
m0_40 [label="Assert.Equal(''2 B'', humanized)", span="60-60", cluster="Humanizer.Tests.Bytes.FluentMethods.HumanizesBytes()", file="ByteSizeExtensionsTests.cs", color=green, community=0];
m0_41 [label="Exit Humanizer.Tests.Bytes.FluentMethods.HumanizesBytes()", span="57-57", cluster="Humanizer.Tests.Bytes.FluentMethods.HumanizesBytes()", file="ByteSizeExtensionsTests.cs"];
m0_29 [label="var humanized = (2.0).Kilobytes().Humanize()", span="45-45", cluster="Humanizer.Tests.Bytes.FluentMethods.HumanizesKilobytes()", file="ByteSizeExtensionsTests.cs", color=green, community=0];
m0_31 [label="Exit Humanizer.Tests.Bytes.FluentMethods.HumanizesKilobytes()", span="43-43", cluster="Humanizer.Tests.Bytes.FluentMethods.HumanizesKilobytes()", file="ByteSizeExtensionsTests.cs"];
m0_69 [label="Entry Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseYearAsInteger(System.TimeSpan)", span="133-133", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseYearAsInteger(System.TimeSpan)", file="ByteSizeExtensionsTests.cs"];
m0_75 [label="return (int)((double)timespan.Days / _daysInAYear);", span="135-135", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseYearAsInteger(System.TimeSpan)", file="ByteSizeExtensionsTests.cs"];
m0_76 [label="Exit Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseYearAsInteger(System.TimeSpan)", span="133-133", cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseYearAsInteger(System.TimeSpan)", file="ByteSizeExtensionsTests.cs"];
m0_65 [label="Entry Humanizer.TimeSpanHumanizeExtensions.GetNormalCaseTimeAsInteger(int, double, bool)", span="161-161", cluster="Humanizer.TimeSpanHumanizeExtensions.GetNormalCaseTimeAsInteger(int, double, bool)", file="ByteSizeExtensionsTests.cs"];
m0_88 [label=isTimeUnitToGetTheMaximumTimeUnit, span="163-163", cluster="Humanizer.TimeSpanHumanizeExtensions.GetNormalCaseTimeAsInteger(int, double, bool)", file="ByteSizeExtensionsTests.cs"];
m0_89 [label="return (int)totalTimeNumberOfUnits;", span="167-167", cluster="Humanizer.TimeSpanHumanizeExtensions.GetNormalCaseTimeAsInteger(int, double, bool)", file="ByteSizeExtensionsTests.cs"];
m0_90 [label="return timeNumberOfUnits;", span="175-175", cluster="Humanizer.TimeSpanHumanizeExtensions.GetNormalCaseTimeAsInteger(int, double, bool)", file="ByteSizeExtensionsTests.cs"];
m0_92 [label="return 0;", span="172-172", cluster="Humanizer.TimeSpanHumanizeExtensions.GetNormalCaseTimeAsInteger(int, double, bool)", file="ByteSizeExtensionsTests.cs"];
m0_91 [label="Exit Humanizer.TimeSpanHumanizeExtensions.GetNormalCaseTimeAsInteger(int, double, bool)", span="161-161", cluster="Humanizer.TimeSpanHumanizeExtensions.GetNormalCaseTimeAsInteger(int, double, bool)", file="ByteSizeExtensionsTests.cs"];
m1_0 [label="Entry Humanizer.Tests.OrdinalizeTests.OrdinalizeString(string, string)", span="36-36", cluster="Humanizer.Tests.OrdinalizeTests.OrdinalizeString(string, string)", file="DateHumanizeTests.cs"];
m1_1 [label="Assert.Equal(number.Ordinalize(), ordinalized)", span="38-38", cluster="Humanizer.Tests.OrdinalizeTests.OrdinalizeString(string, string)", file="DateHumanizeTests.cs"];
m1_2 [label="Exit Humanizer.Tests.OrdinalizeTests.OrdinalizeString(string, string)", span="36-36", cluster="Humanizer.Tests.OrdinalizeTests.OrdinalizeString(string, string)", file="DateHumanizeTests.cs"];
m1_5 [label="Entry Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", span="70-70", cluster="Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", file="DateHumanizeTests.cs"];
m1_6 [label="Assert.Equal(number.Ordinalize(), ordinalized)", span="72-72", cluster="Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", file="DateHumanizeTests.cs"];
m1_7 [label="Exit Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", span="70-70", cluster="Humanizer.Tests.OrdinalizeTests.OrdanizeNumber(int, string)", file="DateHumanizeTests.cs"];
m1_4 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="DateHumanizeTests.cs"];
m1_8 [label="Entry int.Ordinalize()", span="25-25", cluster="int.Ordinalize()", file="DateHumanizeTests.cs"];
m1_3 [label="Entry string.Ordinalize()", span="15-15", cluster="string.Ordinalize()", file="DateHumanizeTests.cs"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=2, style=dotted];
n2 -> n0  [key=0, style=bold, color=blue];
n4 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n5 -> n3  [key=2, style=dotted];
n6 -> n4  [key=0, style=bold, color=blue];
n7 -> n8  [key=0, style=solid];
n8 -> n9  [key=0, style=solid];
n8 -> n3  [key=2, style=dotted];
n9 -> n7  [key=0, style=bold, color=blue];
n10 -> n11  [key=0, style=solid];
n11 -> n12  [key=0, style=solid];
n11 -> n3  [key=2, style=dotted];
n12 -> n10  [key=0, style=bold, color=blue];
n13 -> n14  [key=0, style=solid];
n14 -> n15  [key=0, style=solid];
n14 -> n3  [key=2, style=dotted];
n15 -> n13  [key=0, style=bold, color=blue];
n16 -> n17  [key=0, style=solid];
n17 -> n18  [key=0, style=solid];
n17 -> n3  [key=2, style=dotted];
n18 -> n16  [key=0, style=bold, color=blue];
n19 -> n20  [key=0, style=solid];
n20 -> n21  [key=0, style=solid];
n20 -> n3  [key=2, style=dotted];
n21 -> n19  [key=0, style=bold, color=blue];
n22 -> n23  [key=0, style=solid];
n23 -> n24  [key=0, style=solid];
n23 -> n3  [key=2, style=dotted];
n24 -> n22  [key=0, style=bold, color=blue];
n25 -> n26  [key=0, style=solid];
n26 -> n27  [key=0, style=solid];
n26 -> n3  [key=2, style=dotted];
n27 -> n25  [key=0, style=bold, color=blue];
n28 -> n29  [key=0, style=solid];
n29 -> n30  [key=0, style=solid];
n29 -> n3  [key=2, style=dotted];
n30 -> n28  [key=0, style=bold, color=blue];
n31 -> n32  [key=0, style=solid];
n32 -> n33  [key=0, style=solid];
n32 -> n3  [key=2, style=dotted];
n33 -> n31  [key=0, style=bold, color=blue];
n34 -> n35  [key=0, style=solid];
n35 -> n36  [key=0, style=solid];
n35 -> n3  [key=2, style=dotted];
n36 -> n34  [key=0, style=bold, color=blue];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_97  [key=0, style=solid];
m0_34 -> m0_6  [key=2, style=dotted];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_37  [key=2, style=dotted];
m0_33 -> m0_36  [key=2, style=dotted];
m0_33 -> m0_34  [key=0, style=solid];
m0_35 -> m0_32  [key=0, style=bold, color=blue];
m0_35 -> m0_26  [key=0, style=bold, color=blue];
m0_45 -> m0_93  [key=0, style=solid];
m0_45 -> m0_42  [key=0, style=bold, color=blue];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_95  [key=2, style=dotted];
m0_93 -> m0_96  [key=2, style=dotted];
m0_94 -> m0_45  [key=0, style=bold, color=blue];
m0_11 -> m0_12  [key=0, style=solid, color=red];
m0_11 -> m0_25  [key=2, style=dotted];
m0_11 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label=cultureFormatter];
m0_11 -> m0_21  [key=1, style=dashed, color=red, label=cultureFormatter];
m0_0 -> m0_1  [key=0, style=solid, color=red];
m0_1 -> m0_2  [key=0, style=solid, color=green];
m0_1 -> m0_3  [key=2, style=dotted, color=red];
m0_1 -> m0_4  [key=2, style=dotted];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_2 -> m0_3  [key=0, style=solid, color=green];
m0_2 -> m0_5  [key=2, style=dotted, color=green];
m0_2 -> m0_6  [key=2, style=dotted, color=green];
m0_47 -> m0_48  [key=0, style=solid];
m0_66 -> m0_81  [key=0, style=solid];
m0_66 -> m0_82  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_66 -> m0_83  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_83  [key=0, style=solid];
m0_82 -> m0_87  [key=0, style=solid];
m0_82 -> m0_82  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_82 -> m0_83  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_86  [key=0, style=solid];
m0_83 -> m0_83  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_84  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_84 -> m0_86  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_86  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_85 -> m0_87  [key=0, style=solid];
m0_87 -> m0_66  [key=0, style=bold, color=blue];
m0_3 -> m0_0  [key=0, style=bold, color=blue];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_3 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_10  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_8  [key=2, style=dotted];
m0_9 -> m0_105  [key=0, style=solid];
m0_9 -> m0_106  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_9 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_9 -> m0_108  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_9 -> m0_10  [key=0, style=solid, color=green];
m0_9 -> m0_6  [key=2, style=dotted, color=green];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_107  [key=0, style=solid];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_112  [key=2, style=dotted];
m0_106 -> m0_106  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_106 -> m0_114  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_113  [key=2, style=dotted];
m0_107 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_107 -> m0_109  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_107 -> m0_110  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_110  [key=0, style=solid];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_112  [key=2, style=dotted];
m0_109 -> m0_109  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_109 -> m0_117  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_110 -> m0_111  [key=0, style=solid];
m0_111 -> m0_9  [key=0, style=bold, color=blue];
m0_10 -> m0_120  [key=0, style=solid];
m0_10 -> m0_121  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_10 -> m0_122  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_10 -> m0_7  [key=0, style=bold, color=blue];
m0_120 -> m0_121  [key=0, style=solid];
m0_120 -> m0_122  [key=0, style=solid];
m0_121 -> m0_123  [key=0, style=solid];
m0_121 -> m0_124  [key=2, style=dotted];
m0_121 -> m0_125  [key=2, style=dotted];
m0_122 -> m0_123  [key=0, style=solid];
m0_122 -> m0_126  [key=2, style=dotted];
m0_123 -> m0_10  [key=0, style=bold, color=blue];
m0_18 -> m0_19  [key=0, style=solid, color=red];
m0_19 -> m0_20  [key=0, style=solid, color=green];
m0_19 -> m0_16  [key=2, style=dotted, color=green];
m0_19 -> m0_11  [key=2, style=dotted, color=green];
m0_19 -> m0_15  [key=0, style=solid, color=red];
m0_19 -> m0_29  [key=2, style=dotted, color=red];
m0_20 -> m0_21  [key=0, style=solid, color=red];
m0_20 -> m0_6  [key=2, style=dotted, color=green];
m0_20 -> m0_23  [key=0, style=solid, color=red];
m0_20 -> m0_30  [key=2, style=dotted, color=red];
m0_21 -> m0_18  [key=0, style=bold, color=blue];
m0_21 -> m0_22  [key=0, style=solid, color=red];
m0_21 -> m0_31  [key=2, style=dotted, color=red];
m0_42 -> m0_43  [key=0, style=solid];
m0_44 -> m0_6  [key=2, style=dotted];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_47  [key=2, style=dotted];
m0_44 -> m0_46  [key=0, style=solid];
m0_44 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_44 -> m0_50  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_44 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_44 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_44 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_44 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_44 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_46  [key=2, style=dotted];
m0_43 -> m0_28  [key=0, style=bold, color=blue];
m0_67 -> m0_77  [key=0, style=solid];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_79  [key=0, style=solid];
m0_77 -> m0_77  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_78 -> m0_80  [key=0, style=solid];
m0_78 -> m0_78  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_79 -> m0_80  [key=0, style=solid];
m0_80 -> m0_67  [key=0, style=bold, color=blue];
m0_7 -> m0_8  [key=0, style=solid, color=green];
m0_7 -> m0_3  [key=0, style=bold, color=blue];
m0_8 -> m0_9  [key=0, style=solid, color=green];
m0_8 -> m0_4  [key=2, style=dotted, color=green];
m0_8 -> m0_11  [key=2, style=dotted, color=green];
m0_8 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_64  [key=0, style=solid];
m0_48 -> m0_65  [key=2, style=dotted];
m0_48 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_48 -> m0_50  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_50 -> m0_51  [key=0, style=solid, color=green];
m0_50 -> m0_6  [key=2, style=dotted, color=green];
m0_50 -> m0_64  [key=0, style=solid];
m0_50 -> m0_65  [key=2, style=dotted];
m0_50 -> m0_50  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_50 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_49 -> m0_50  [key=0, style=solid, color=green];
m0_49 -> m0_11  [key=2, style=dotted];
m0_49 -> m0_46  [key=2, style=dotted];
m0_51 -> m0_48  [key=0, style=bold, color=blue];
m0_51 -> m0_52  [key=0, style=solid];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_28  [key=2, style=dotted];
m0_16 -> m0_19  [key=1, style=dashed, color=red, label=timepart];
m0_12 -> m0_13  [key=0, style=solid, color=red];
m0_12 -> m0_17  [key=1, style=dashed, color=red, label=firstValueFound];
m0_13 -> m0_14  [key=0, style=solid, color=red];
m0_13 -> m0_26  [key=2, style=dotted, color=red];
m0_13 -> m0_15  [key=1, style=dashed, color=red, label=timeUnitsEnumTypes];
m0_13 -> m0_16  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid, color=red];
m0_17 -> m0_15  [key=0, style=solid, color=red];
m0_14 -> m0_15  [key=0, style=solid, color=red];
m0_14 -> m0_27  [key=2, style=dotted];
m0_14 -> m0_19  [key=1, style=dashed, color=red, label=timeParts];
m0_14 -> m0_20  [key=1, style=dashed, color=red, label=timeParts];
m0_14 -> m0_23  [key=1, style=dashed, color=red, label=timeParts];
m0_14 -> m0_6  [key=2, style=dotted];
m0_14 -> m0_17  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid, color=red];
m0_15 -> m0_20  [key=0, style=solid, color=red];
m0_15 -> m0_12  [key=0, style=bold, color=blue];
m0_23 -> m0_24  [key=0, style=solid, color=green];
m0_23 -> m0_26  [key=2, style=dotted];
m0_22 -> m0_23  [key=0, style=solid, color=red];
m0_22 -> m0_32  [key=2, style=dotted, color=red];
m0_24 -> m0_8  [key=0, style=bold, color=blue];
m0_24 -> m0_25  [key=0, style=solid, color=green];
m0_24 -> m0_27  [key=2, style=dotted, color=green];
m0_24 -> m0_6  [key=2, style=dotted, color=green];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_9  [key=2, style=dotted];
m0_5 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label=timeParts];
m0_26 -> m0_33  [key=0, style=solid];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_49  [key=0, style=solid];
m0_46 -> m0_51  [key=0, style=solid];
m0_46 -> m0_53  [key=0, style=solid];
m0_46 -> m0_55  [key=0, style=solid];
m0_46 -> m0_57  [key=0, style=solid];
m0_46 -> m0_59  [key=0, style=solid];
m0_46 -> m0_61  [key=0, style=solid];
m0_46 -> m0_63  [key=0, style=solid];
m0_52 -> m0_64  [key=0, style=solid];
m0_52 -> m0_65  [key=2, style=dotted];
m0_52 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_52 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_54 -> m0_64  [key=0, style=solid];
m0_54 -> m0_65  [key=2, style=dotted];
m0_54 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_54 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_54 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_54 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_54 -> m0_62  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_56 -> m0_64  [key=0, style=solid];
m0_56 -> m0_66  [key=2, style=dotted];
m0_58 -> m0_64  [key=0, style=solid];
m0_58 -> m0_67  [key=2, style=dotted];
m0_60 -> m0_64  [key=0, style=solid];
m0_60 -> m0_68  [key=2, style=dotted];
m0_53 -> m0_54  [key=0, style=solid];
m0_55 -> m0_56  [key=0, style=solid];
m0_57 -> m0_58  [key=0, style=solid];
m0_59 -> m0_60  [key=0, style=solid];
m0_61 -> m0_62  [key=0, style=solid];
m0_63 -> m0_64  [key=0, style=solid];
m0_62 -> m0_64  [key=0, style=solid];
m0_62 -> m0_69  [key=2, style=dotted];
m0_64 -> m0_44  [key=0, style=bold, color=blue];
m0_117 -> m0_118  [key=0, style=solid];
m0_102 -> m0_103  [key=0, style=solid];
m0_103 -> m0_104  [key=0, style=solid];
m0_104 -> m0_102  [key=0, style=bold, color=blue];
m0_114 -> m0_115  [key=0, style=solid];
m0_115 -> m0_116  [key=0, style=solid];
m0_116 -> m0_114  [key=0, style=bold, color=blue];
m0_118 -> m0_119  [key=0, style=solid];
m0_119 -> m0_117  [key=0, style=bold, color=blue];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_27  [key=2, style=dotted];
m0_98 -> m0_32  [key=0, style=bold, color=blue];
m0_25 -> m0_22  [key=0, style=bold, color=blue];
m0_30 -> m0_99  [key=0, style=solid];
m0_30 -> m0_31  [key=0, style=solid, color=green];
m0_30 -> m0_6  [key=2, style=dotted, color=green];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_101  [key=2, style=dotted];
m0_99 -> m0_102  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_100 -> m0_30  [key=0, style=bold, color=blue];
m0_68 -> m0_70  [key=0, style=solid];
m0_68 -> m0_71  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_68 -> m0_72  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_72  [key=0, style=solid];
m0_71 -> m0_74  [key=0, style=solid];
m0_71 -> m0_71  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_72  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_73 -> m0_74  [key=0, style=solid];
m0_74 -> m0_68  [key=0, style=bold, color=blue];
m0_28 -> m0_38  [key=0, style=solid];
m0_28 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.TimeUnit"];
m0_28 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.TimeUnit"];
m0_28 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.TimeUnit"];
m0_28 -> m0_29  [key=0, style=solid, color=green];
m0_38 -> m0_39  [key=0, style=solid, color=green];
m0_38 -> m0_42  [key=0, style=solid];
m0_39 -> m0_40  [key=0, style=solid, color=green];
m0_39 -> m0_36  [key=2, style=dotted, color=green];
m0_39 -> m0_11  [key=2, style=dotted, color=green];
m0_40 -> m0_41  [key=0, style=solid, color=green];
m0_40 -> m0_44  [key=2, style=dotted];
m0_40 -> m0_6  [key=2, style=dotted, color=green];
m0_41 -> m0_43  [key=0, style=solid];
m0_41 -> m0_45  [key=2, style=dotted];
m0_41 -> m0_38  [key=0, style=bold, color=blue];
m0_29 -> m0_30  [key=0, style=solid, color=green];
m0_29 -> m0_26  [key=2, style=dotted, color=green];
m0_29 -> m0_11  [key=2, style=dotted, color=green];
m0_31 -> m0_28  [key=0, style=bold, color=blue];
m0_69 -> m0_75  [key=0, style=solid];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_75  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_76 -> m0_69  [key=0, style=bold, color=blue];
m0_65 -> m0_88  [key=0, style=solid];
m0_65 -> m0_89  [key=1, style=dashed, color=darkseagreen4, label=double];
m0_65 -> m0_90  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_90  [key=0, style=solid];
m0_89 -> m0_91  [key=0, style=solid];
m0_90 -> m0_91  [key=0, style=solid];
m0_92 -> m0_91  [key=0, style=solid];
m0_91 -> m0_65  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_1 -> m1_4  [key=2, style=dotted];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m1_5 -> m1_6  [key=0, style=solid];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_8  [key=2, style=dotted];
m1_6 -> m1_4  [key=2, style=dotted];
m1_7 -> m1_5  [key=0, style=bold, color=blue];
}
