digraph  {
m1_32 [cluster="System.Math.Abs(int)", file="CasingExtensions.cs", label="Entry System.Math.Abs(int)", span="0-0"];
m1_35 [cluster="System.Collections.Generic.List<T>.List()", file="CasingExtensions.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_49 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="CasingExtensions.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m1_37 [cluster="System.Collections.Generic.List<T>.ToArray()", file="CasingExtensions.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m1_36 [cluster="System.Collections.Generic.List<T>.Add(T)", file="CasingExtensions.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m1_39 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="Entry Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", span="110-110"];
m1_40 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="string towords", span="112-112"];
m1_41 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="!Ordinals.TryGetValue(number, out towords)", span="113-113"];
m1_42 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="towords = Convert(number)", span="114-114"];
m1_43 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="gender == GrammaticalGender.Feminine", span="116-116"];
m1_45 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="number % 10 == 1 || number % 10 == 3", span="118-118"];
m1_44 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="towords = towords.TrimEnd('o') + ''a''", span="117-117"];
m1_46 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="towords = towords.TrimEnd('o')", span="119-119"];
m1_47 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="return towords;", span="121-121"];
m1_48 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="Exit Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.ConvertToOrdinal(int, Humanizer.GrammaticalGender)", span="110-110"];
m1_38 [cluster="string.Join(string, params string[])", file="CasingExtensions.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m1_33 [cluster="Humanizer.Localisation.NumberToWords.GenderedNumberToWordsConverter.Convert(int)", file="CasingExtensions.cs", label="Entry Humanizer.Localisation.NumberToWords.GenderedNumberToWordsConverter.Convert(int)", span="16-16"];
m1_0 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="Entry Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", span="30-30"];
m1_1 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="number == 0", span="32-32"];
m1_3 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", color=red, community=0, file="CasingExtensions.cs", label="0: number < 0", span="35-35"];
m1_4 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", color=red, community=0, file="CasingExtensions.cs", label="0: return string.Format(''menos {0}'', Convert(Math.Abs(number)));", span="36-36"];
m1_6 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="(number / 1000000000) > 0", span="40-40"];
m1_7 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="parts.Add(number / 1000000000 == 1\r\n                    ? ''mil millones''\r\n                    : string.Format(''{0} mil millones'', Convert(number / 1000000000)))", span="42-44"];
m1_8 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="number %= 1000000000", span="46-46"];
m1_9 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="(number / 1000000) > 0", span="49-49"];
m1_10 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="parts.Add(number / 1000000 == 1\r\n                    ? ''un millÃ³n''\r\n                    : string.Format(''{0} millones'', Convert(number / 1000000)))", span="51-53"];
m1_11 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="number %= 1000000", span="55-55"];
m1_12 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="(number / 1000) > 0", span="58-58"];
m1_13 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="parts.Add(number / 1000 == 1\r\n                    ? ''mil''\r\n                    : string.Format(''{0} mil'', Convert(number / 1000, gender)))", span="60-62"];
m1_14 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="number %= 1000", span="64-64"];
m1_15 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="(number / 100) > 0", span="67-67"];
m1_16 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="parts.Add(number == 100 \r\n                    ? ''cien''\r\n                    : gender == GrammaticalGender.Feminine \r\n                        ? FeminineHundredsMap[(number / 100)]\r\n                        : HundredsMap[(number / 100)])", span="69-73"];
m1_17 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="number %= 100", span="74-74"];
m1_18 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="number > 0", span="77-77"];
m1_19 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="number < 30", span="79-79"];
m1_20 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="gender == GrammaticalGender.Feminine && (number == 1 || number == 21)", span="81-81"];
m1_21 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="parts.Add(number == 1 ? Feminine1 : Feminine21)", span="83-83"];
m1_22 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="parts.Add(UnitsMap[number])", span="87-87"];
m1_23 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="var lastPart = TensMap[number/10]", span="92-92"];
m1_24 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="int units = number%10", span="93-93"];
m1_25 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="units == 1 && gender == GrammaticalGender.Feminine", span="94-94"];
m1_28 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="lastPart += string.Format('' y {0}'', UnitsMap[number % 10])", span="100-100"];
m1_2 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="return ''cero'';", span="33-33"];
m1_5 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="var parts = new List<string>()", span="38-38"];
m1_29 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="parts.Add(lastPart)", span="103-103"];
m1_30 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="return string.Join('' '', parts.ToArray());", span="107-107"];
m1_26 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="lastPart += '' y una''", span="96-96"];
m1_27 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="units > 0", span="98-98"];
m1_31 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", file="CasingExtensions.cs", label="Exit Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", span="30-30"];
m1_50 [cluster="string.TrimEnd(params char[])", file="CasingExtensions.cs", label="Entry string.TrimEnd(params char[])", span="0-0"];
m1_34 [cluster="string.Format(string, object)", file="CasingExtensions.cs", label="Entry string.Format(string, object)", span="0-0"];
m1_51 [file="CasingExtensions.cs", label="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter", span=""];
m2_4 [cluster="lambda expression", file="Configurator.cs", label="Entry lambda expression", span="16-16"];
m2_0 [cluster="lambda expression", file="Configurator.cs", label="Entry lambda expression", span="15-15"];
m2_1 [cluster="lambda expression", file="Configurator.cs", label="new RomanianFormatter()", span="15-15"];
m2_2 [cluster="lambda expression", file="Configurator.cs", label="Exit lambda expression", span="15-15"];
m2_5 [cluster="lambda expression", color=green, community=0, file="Configurator.cs", label="0: new RussianFormatter()", span="16-16"];
m2_6 [cluster="lambda expression", file="Configurator.cs", label="Exit lambda expression", span="16-16"];
m2_3 [cluster="Humanizer.Localisation.RomanianFormatter.RomanianFormatter()", file="Configurator.cs", label="Entry Humanizer.Localisation.RomanianFormatter.RomanianFormatter()", span="2-2"];
m2_7 [cluster="Humanizer.Localisation.RussianFormatter.RussianFormatter()", file="Configurator.cs", label="Entry Humanizer.Localisation.RussianFormatter.RussianFormatter()", span="2-2"];
m4_30 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="InflectorExtensions.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m4_37 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="InflectorExtensions.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m4_28 [cluster="System.Collections.Generic.List<T>.List()", file="InflectorExtensions.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m4_31 [cluster="string.Trim()", file="InflectorExtensions.cs", label="Entry string.Trim()", span="0-0"];
m4_29 [cluster="System.Collections.Generic.List<T>.Add(T)", file="InflectorExtensions.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m4_0 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorExtensions.cs", label="Entry Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", span="15-15"];
m4_1 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorExtensions.cs", label="number < 0", span="17-17"];
m4_2 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorExtensions.cs", label="return string.Format(''miinus {0}'', Convert(-number));", span="18-18"];
m4_3 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorExtensions.cs", label="number == 0", span="20-20"];
m4_6 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorExtensions.cs", label="(number / 1000000000) > 0", span="25-25"];
m4_7 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorExtensions.cs", label="parts.Add(number / 1000000000 == 1\r\n                    ? ''miljardi ''\r\n                    : string.Format(''{0}miljardia '', Convert(number / 1000000000)))", span="27-29"];
m4_8 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorExtensions.cs", label="number %= 1000000000", span="31-31"];
m4_9 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorExtensions.cs", label="(number / 1000000) > 0", span="34-34"];
m4_10 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorExtensions.cs", label="parts.Add(number / 1000000 == 1\r\n                    ? ''miljoona ''\r\n                    : string.Format(''{0}miljoonaa '', Convert(number / 1000000)))", span="36-38"];
m4_11 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorExtensions.cs", label="number %= 1000000", span="40-40"];
m4_12 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorExtensions.cs", label="(number / 1000) > 0", span="43-43"];
m4_13 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorExtensions.cs", label="parts.Add(number / 1000 == 1\r\n                    ? ''tuhat ''\r\n                    : string.Format(''{0}tuhatta '', Convert(number / 1000)))", span="45-47"];
m4_14 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorExtensions.cs", label="number %= 1000", span="49-49"];
m4_15 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorExtensions.cs", label="(number / 100) > 0", span="52-52"];
m4_16 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorExtensions.cs", label="parts.Add(number / 100 == 1\r\n                    ? ''sata''\r\n                    : string.Format(''{0}sataa'', Convert(number / 100)))", span="54-56"];
m4_17 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorExtensions.cs", label="number %= 100", span="58-58"];
m4_18 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorExtensions.cs", label="number >= 20 && (number / 10) > 0", span="61-61"];
m4_19 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorExtensions.cs", label="parts.Add(string.Format(''{0}kymmentÃ¤'', Convert(number / 10)))", span="63-63"];
m4_20 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorExtensions.cs", label="number %= 10", span="64-64"];
m4_21 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorExtensions.cs", label="number > 10 && number < 20", span="66-66"];
m4_22 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorExtensions.cs", label="parts.Add(string.Format(''{0}toista'', UnitsMap[number % 10]))", span="67-67"];
m4_23 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorExtensions.cs", label="number > 0 && number <= 10", span="69-69"];
m4_24 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorExtensions.cs", label="parts.Add(UnitsMap[number])", span="70-70"];
m4_4 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorExtensions.cs", label="return UnitsMap[0];", span="21-21"];
m4_5 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorExtensions.cs", label="var parts = new List<string>()", span="23-23"];
m4_25 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorExtensions.cs", label="return string.Join('''', parts).Trim();", span="72-72"];
m4_26 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", file="InflectorExtensions.cs", label="Exit Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.Convert(int)", span="15-15"];
m4_63 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ConvertToOrdinal(int)", file="InflectorExtensions.cs", label="Entry Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ConvertToOrdinal(int)", span="130-130"];
m4_64 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ConvertToOrdinal(int)", file="InflectorExtensions.cs", label="return ToOrdinal(number, false);", span="132-132"];
m4_65 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ConvertToOrdinal(int)", file="InflectorExtensions.cs", label="Exit Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ConvertToOrdinal(int)", span="130-130"];
m4_32 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.GetOrdinalUnit(int, bool)", file="InflectorExtensions.cs", label="Entry Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.GetOrdinalUnit(int, bool)", span="75-75"];
m4_33 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.GetOrdinalUnit(int, bool)", file="InflectorExtensions.cs", label="useExceptions && OrdinalExceptions.ContainsKey(number)", span="77-77"];
m4_34 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.GetOrdinalUnit(int, bool)", file="InflectorExtensions.cs", label="return OrdinalExceptions[number];", span="79-79"];
m4_35 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.GetOrdinalUnit(int, bool)", file="InflectorExtensions.cs", label="return OrdinalUnitsMap[number];", span="82-82"];
m4_36 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.GetOrdinalUnit(int, bool)", file="InflectorExtensions.cs", label="Exit Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.GetOrdinalUnit(int, bool)", span="75-75"];
m4_27 [cluster="string.Format(string, object)", file="InflectorExtensions.cs", label="Entry string.Format(string, object)", span="0-0"];
m4_38 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorExtensions.cs", label="Entry Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", span="85-85"];
m4_39 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorExtensions.cs", label="number == 0", span="87-87"];
m4_42 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorExtensions.cs", label="(number / 1000000000) > 0", span="92-92"];
m4_43 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorExtensions.cs", label="parts.Add(string.Format(''{0}miljardis'', (number / 1000000000) == 1 ? '''' : ToOrdinal(number / 1000000000, true)))", span="94-94"];
m4_44 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorExtensions.cs", label="number %= 1000000000", span="95-95"];
m4_45 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorExtensions.cs", label="(number / 1000000) > 0", span="98-98"];
m4_46 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorExtensions.cs", label="parts.Add(string.Format(''{0}miljoonas'', (number / 1000000) == 1 ? '''' : ToOrdinal(number / 1000000, true)))", span="100-100"];
m4_47 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorExtensions.cs", label="number %= 1000000", span="101-101"];
m4_48 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorExtensions.cs", label="(number / 1000) > 0", span="104-104"];
m4_49 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorExtensions.cs", label="parts.Add(string.Format(''{0}tuhannes'', (number / 1000) == 1 ? '''' : ToOrdinal(number / 1000, true)))", span="106-106"];
m4_50 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorExtensions.cs", label="number %= 1000", span="107-107"];
m4_51 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorExtensions.cs", label="(number / 100) > 0", span="110-110"];
m4_52 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorExtensions.cs", label="parts.Add(string.Format(''{0}sadas'', (number / 100) == 1 ? '''' : ToOrdinal(number / 100, true)))", span="112-112"];
m4_53 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorExtensions.cs", label="number %= 100", span="113-113"];
m4_54 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorExtensions.cs", label="number >= 20 && (number / 10) > 0", span="116-116"];
m4_55 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorExtensions.cs", label="parts.Add(string.Format(''{0}kymmenes'', ToOrdinal(number / 10, true)))", span="118-118"];
m4_56 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorExtensions.cs", label="number %= 10", span="119-119"];
m4_57 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorExtensions.cs", label="number > 10 && number < 20", span="121-121"];
m4_58 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorExtensions.cs", label="parts.Add(string.Format(''{0}toista'', GetOrdinalUnit(number % 10, true)))", span="122-122"];
m4_59 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorExtensions.cs", label="number > 0 && number <= 10", span="124-124"];
m4_60 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorExtensions.cs", label="parts.Add(GetOrdinalUnit(number, useExceptions))", span="125-125"];
m4_40 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorExtensions.cs", label="return OrdinalUnitsMap[0];", span="88-88"];
m4_41 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorExtensions.cs", label="var parts = new List<string>()", span="90-90"];
m4_61 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorExtensions.cs", label="return string.Join('''', parts);", span="127-127"];
m4_62 [cluster="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", file="InflectorExtensions.cs", label="Exit Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter.ToOrdinal(int, bool)", span="85-85"];
m4_66 [file="InflectorExtensions.cs", label="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter", span=""];
m5_76 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="InflectorTests.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m5_48 [cluster="System.Type.IsPrimitiveEx()", file="InflectorTests.cs", label="Entry System.Type.IsPrimitiveEx()", span="201-201"];
m5_16 [cluster="Unk.Any", file="InflectorTests.cs", label="Entry Unk.Any", span=""];
m5_43 [cluster="System.Exception.RethrowWhenAbsentIn(System.Collections.Generic.IEnumerable<System.Type>)", file="InflectorTests.cs", label="Entry System.Exception.RethrowWhenAbsentIn(System.Collections.Generic.IEnumerable<System.Type>)", span="11-11"];
m5_91 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type, bool)", file="InflectorTests.cs", label="Entry CommandLine.Core.TypeConverter.ToEnum(string, System.Type, bool)", span="100-100"];
m5_92 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type, bool)", file="InflectorTests.cs", label="object parsedValue", span="102-102"];
m5_93 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type, bool)", file="InflectorTests.cs", label="parsedValue = Enum.Parse(conversionType, value, ignoreValueCase)", span="105-105"];
m5_96 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type, bool)", file="InflectorTests.cs", label="Enum.IsDefined(conversionType, parsedValue)", span="111-111"];
m5_94 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type, bool)", file="InflectorTests.cs", label=ArgumentException, span="107-107"];
m5_97 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type, bool)", file="InflectorTests.cs", label="return parsedValue;", span="113-113"];
m5_95 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type, bool)", file="InflectorTests.cs", label="throw new FormatException();", span="109-109"];
m5_98 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type, bool)", file="InflectorTests.cs", label="throw new FormatException();", span="115-115"];
m5_99 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type, bool)", file="InflectorTests.cs", label="Exit CommandLine.Core.TypeConverter.ToEnum(string, System.Type, bool)", span="100-100"];
m5_102 [cluster="System.Enum.IsDefined(System.Type, object)", file="InflectorTests.cs", label="Entry System.Enum.IsDefined(System.Type, object)", span="0-0"];
m5_17 [cluster="CSharpx.Maybe.Nothing<T>()", file="InflectorTests.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m5_49 [cluster="Unk.IsFSharpOptionType", file="InflectorTests.cs", label="Entry Unk.IsFSharpOptionType", span=""];
m5_100 [cluster="System.Enum.Parse(System.Type, string, bool)", file="InflectorTests.cs", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
m5_72 [cluster="System.Nullable.GetUnderlyingType(System.Type)", file="InflectorTests.cs", label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0"];
m5_12 [cluster="T.ToMaybe<T>()", file="InflectorTests.cs", label="Entry T.ToMaybe<T>()", span="249-249"];
m5_26 [cluster="Unk.MatchNothing", file="InflectorTests.cs", label="Entry Unk.MatchNothing", span=""];
m5_77 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", file="InflectorTests.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", span="17-17"];
m5_3 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="InflectorTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m5_36 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.ToMaybe<TSuccess, TMessage>()", file="InflectorTests.cs", label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.ToMaybe<TSuccess, TMessage>()", span="25-25"];
m5_34 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo, bool)", file="InflectorTests.cs", label="Entry CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo, bool)", span="49-49"];
m5_44 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo, bool)", file="InflectorTests.cs", label="Func<object> changeType = () =>\r\n            {\r\n                Func<object> safeChangeType = () =>\r\n                {\r\n                    var isFsOption = ReflectionHelper.IsFSharpOptionType(conversionType);\r\n\r\n                    Func<Type> getUnderlyingType =\r\n                        () =>\r\n                            isFsOption\r\n                                ? FSharpOptionHelper.GetUnderlyingType(conversionType)\r\n                                : Nullable.GetUnderlyingType(conversionType);\r\n\r\n                    var type = getUnderlyingType() ?? conversionType;\r\n\r\n                    Func<object> withValue =\r\n                        () =>\r\n                            isFsOption\r\n                                ? FSharpOptionHelper.Some(type, Convert.ChangeType(value, type, conversionCulture))\r\n                                : Convert.ChangeType(value, type, conversionCulture);\r\n\r\n                    Func<object> empty = () => isFsOption ? FSharpOptionHelper.None(type) : null;\r\n\r\n                    return (value == null) ? empty() : withValue();\r\n                };\r\n\r\n                return value.IsBooleanString()\r\n                    ? value.ToBoolean() : conversionType.GetTypeInfo().IsEnum\r\n                        ? value.ToEnum(conversionType, ignoreValueCase) : safeChangeType();\r\n            }", span="51-79"];
m5_45 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo, bool)", file="InflectorTests.cs", label="Func<object> makeType = () =>\r\n            {\r\n                try\r\n                {\r\n                    var ctor = conversionType.GetConstructor(new[] { typeof(string) });\r\n                    return ctor.Invoke(new object[] { value });\r\n                }\r\n                catch (Exception)\r\n                {\r\n                    throw new FormatException(''Destination conversion type must have a constructor that accepts a string.'');\r\n                }\r\n            }", span="81-92"];
m5_46 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo, bool)", file="InflectorTests.cs", label="return Result.Try(\r\n                conversionType.IsPrimitiveEx() || ReflectionHelper.IsFSharpOptionType(conversionType)\r\n                    ? changeType\r\n                    : makeType);", span="94-97"];
m5_47 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo, bool)", file="InflectorTests.cs", label="Exit CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo, bool)", span="49-49"];
m5_14 [cluster="CSharpx.Maybe<T>.FromJustOrFail<T>(System.Exception)", file="InflectorTests.cs", label="Entry CSharpx.Maybe<T>.FromJustOrFail<T>(System.Exception)", span="355-355"];
m5_13 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="InflectorTests.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m5_19 [cluster="CSharpx.Maybe.Just<T>(T)", file="InflectorTests.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124"];
m5_0 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo, bool)", file="InflectorTests.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo, bool)", span="17-17"];
m5_1 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo, bool)", file="InflectorTests.cs", label="return scalar\r\n                ? ChangeTypeScalar(values.Single(), conversionType, conversionCulture, ignoreValueCase)\r\n                : ChangeTypeSequence(values, conversionType, conversionCulture, ignoreValueCase);", span="19-21"];
m5_2 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo, bool)", file="InflectorTests.cs", label="Exit CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo, bool)", span="17-17"];
m5_90 [cluster="System.FormatException.FormatException(string)", file="InflectorTests.cs", label="Entry System.FormatException.FormatException(string)", span="0-0"];
m5_11 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="InflectorTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m5_101 [cluster="System.FormatException.FormatException()", file="InflectorTests.cs", label="Entry System.FormatException.FormatException()", span="0-0"];
m5_71 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", file="InflectorTests.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", span="11-11"];
m5_5 [cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo, bool)", file="InflectorTests.cs", label="Entry CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo, bool)", span="24-24"];
m5_6 [cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo, bool)", file="InflectorTests.cs", label="var type =\r\n                conversionType.GetGenericArguments()\r\n                              .SingleOrDefault()\r\n                              .ToMaybe()\r\n                              .FromJustOrFail(\r\n                                  new InvalidOperationException(''Non scalar properties should be sequence of type IEnumerable<T>.'')\r\n                    )", span="26-32"];
m5_7 [cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo, bool)", file="InflectorTests.cs", label="var converted = values.Select(value => ChangeTypeScalar(value, type, conversionCulture, ignoreValueCase))", span="34-34"];
m5_8 [cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo, bool)", file="InflectorTests.cs", label="return converted.Any(a => a.MatchNothing())\r\n                ? Maybe.Nothing<object>()\r\n                : Maybe.Just(converted.Select(c => ((Just<object>)c).Value).ToUntypedArray(type));", span="36-38"];
m5_9 [cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo, bool)", file="InflectorTests.cs", label="Exit CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo, bool)", span="24-24"];
m5_10 [cluster="System.Type.GetGenericArguments()", file="InflectorTests.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m5_42 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="InflectorTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m5_35 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Match<TSuccess, TMessage>(System.Action<TSuccess, System.Collections.Generic.IEnumerable<TMessage>>, System.Action<System.Collections.Generic.IEnumerable<TMessage>>)", file="InflectorTests.cs", label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Match<TSuccess, TMessage>(System.Action<TSuccess, System.Collections.Generic.IEnumerable<TMessage>>, System.Action<System.Collections.Generic.IEnumerable<TMessage>>)", span="495-495"];
m5_82 [cluster="lambda expression", file="InflectorTests.cs", label="Entry lambda expression", span="81-92"];
m5_21 [cluster="lambda expression", file="InflectorTests.cs", label="ChangeTypeScalar(value, type, conversionCulture, ignoreValueCase)", span="34-34"];
m5_20 [cluster="lambda expression", file="InflectorTests.cs", label="Entry lambda expression", span="34-34"];
m5_23 [cluster="lambda expression", file="InflectorTests.cs", label="Entry lambda expression", span="36-36"];
m5_27 [cluster="lambda expression", file="InflectorTests.cs", label="Entry lambda expression", span="38-38"];
m5_22 [cluster="lambda expression", file="InflectorTests.cs", label="Exit lambda expression", span="34-34"];
m5_24 [cluster="lambda expression", file="InflectorTests.cs", label="a.MatchNothing()", span="36-36"];
m5_25 [cluster="lambda expression", file="InflectorTests.cs", label="Exit lambda expression", span="36-36"];
m5_28 [cluster="lambda expression", file="InflectorTests.cs", label="((Just<object>)c).Value", span="38-38"];
m5_29 [cluster="lambda expression", file="InflectorTests.cs", label="Exit lambda expression", span="38-38"];
m5_37 [cluster="lambda expression", file="InflectorTests.cs", label="Entry lambda expression", span="44-44"];
m5_39 [cluster="lambda expression", file="InflectorTests.cs", label="Entry lambda expression", span="44-45"];
m5_38 [cluster="lambda expression", file="InflectorTests.cs", label="Exit lambda expression", span="44-44"];
m5_40 [cluster="lambda expression", file="InflectorTests.cs", label="e.First().RethrowWhenAbsentIn(\r\n                new[] { typeof(InvalidCastException), typeof(FormatException), typeof(OverflowException) })", span="44-45"];
m5_41 [cluster="lambda expression", file="InflectorTests.cs", label="Exit lambda expression", span="44-45"];
m5_52 [cluster="lambda expression", file="InflectorTests.cs", label="Func<object> safeChangeType = () =>\r\n                {\r\n                    var isFsOption = ReflectionHelper.IsFSharpOptionType(conversionType);\r\n\r\n                    Func<Type> getUnderlyingType =\r\n                        () =>\r\n                            isFsOption\r\n                                ? FSharpOptionHelper.GetUnderlyingType(conversionType)\r\n                                : Nullable.GetUnderlyingType(conversionType);\r\n\r\n                    var type = getUnderlyingType() ?? conversionType;\r\n\r\n                    Func<object> withValue =\r\n                        () =>\r\n                            isFsOption\r\n                                ? FSharpOptionHelper.Some(type, Convert.ChangeType(value, type, conversionCulture))\r\n                                : Convert.ChangeType(value, type, conversionCulture);\r\n\r\n                    Func<object> empty = () => isFsOption ? FSharpOptionHelper.None(type) : null;\r\n\r\n                    return (value == null) ? empty() : withValue();\r\n                }", span="53-74"];
m5_61 [cluster="lambda expression", file="InflectorTests.cs", label="var isFsOption = ReflectionHelper.IsFSharpOptionType(conversionType)", span="55-55"];
m5_62 [cluster="lambda expression", file="InflectorTests.cs", label="Func<Type> getUnderlyingType =\r\n                        () =>\r\n                            isFsOption\r\n                                ? FSharpOptionHelper.GetUnderlyingType(conversionType)\r\n                                : Nullable.GetUnderlyingType(conversionType)", span="57-61"];
m5_69 [cluster="lambda expression", file="InflectorTests.cs", label="isFsOption\r\n                                ? FSharpOptionHelper.GetUnderlyingType(conversionType)\r\n                                : Nullable.GetUnderlyingType(conversionType)", span="59-61"];
m5_63 [cluster="lambda expression", file="InflectorTests.cs", label="var type = getUnderlyingType() ?? conversionType", span="63-63"];
m5_64 [cluster="lambda expression", file="InflectorTests.cs", label="Func<object> withValue =\r\n                        () =>\r\n                            isFsOption\r\n                                ? FSharpOptionHelper.Some(type, Convert.ChangeType(value, type, conversionCulture))\r\n                                : Convert.ChangeType(value, type, conversionCulture)", span="65-69"];
m5_74 [cluster="lambda expression", file="InflectorTests.cs", label="isFsOption\r\n                                ? FSharpOptionHelper.Some(type, Convert.ChangeType(value, type, conversionCulture))\r\n                                : Convert.ChangeType(value, type, conversionCulture)", span="67-69"];
m5_66 [cluster="lambda expression", file="InflectorTests.cs", label="return (value == null) ? empty() : withValue();", span="73-73"];
m5_53 [cluster="lambda expression", file="InflectorTests.cs", label="return value.IsBooleanString()\r\n                    ? value.ToBoolean() : conversionType.GetTypeInfo().IsEnum\r\n                        ? value.ToEnum(conversionType, ignoreValueCase) : safeChangeType();", span="76-78"];
m5_83 [cluster="lambda expression", file="InflectorTests.cs", label="var ctor = conversionType.GetConstructor(new[] { typeof(string) })", span="85-85"];
m5_84 [cluster="lambda expression", file="InflectorTests.cs", label="return ctor.Invoke(new object[] { value });", span="86-86"];
m5_51 [cluster="lambda expression", file="InflectorTests.cs", label="Entry lambda expression", span="51-79"];
m5_54 [cluster="lambda expression", file="InflectorTests.cs", label="Exit lambda expression", span="51-79"];
m5_60 [cluster="lambda expression", file="InflectorTests.cs", label="Entry lambda expression", span="53-74"];
m5_65 [cluster="lambda expression", file="InflectorTests.cs", label="Func<object> empty = () => isFsOption ? FSharpOptionHelper.None(type) : null", span="71-71"];
m5_79 [cluster="lambda expression", file="InflectorTests.cs", label="isFsOption ? FSharpOptionHelper.None(type) : null", span="71-71"];
m5_67 [cluster="lambda expression", file="InflectorTests.cs", label="Exit lambda expression", span="53-74"];
m5_68 [cluster="lambda expression", file="InflectorTests.cs", label="Entry lambda expression", span="58-61"];
m5_70 [cluster="lambda expression", file="InflectorTests.cs", label="Exit lambda expression", span="58-61"];
m5_73 [cluster="lambda expression", file="InflectorTests.cs", label="Entry lambda expression", span="66-69"];
m5_75 [cluster="lambda expression", file="InflectorTests.cs", label="Exit lambda expression", span="66-69"];
m5_78 [cluster="lambda expression", file="InflectorTests.cs", label="Entry lambda expression", span="71-71"];
m5_80 [cluster="lambda expression", file="InflectorTests.cs", label="Exit lambda expression", span="71-71"];
m5_85 [cluster="lambda expression", file="InflectorTests.cs", label=Exception, span="88-88"];
m5_86 [cluster="lambda expression", file="InflectorTests.cs", label="throw new FormatException(''Destination conversion type must have a constructor that accepts a string.'');", span="90-90"];
m5_87 [cluster="lambda expression", file="InflectorTests.cs", label="Exit lambda expression", span="81-92"];
m5_57 [cluster="System.Type.GetTypeInfo()", file="InflectorTests.cs", label="Entry System.Type.GetTypeInfo()", span="218-218"];
m5_4 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo, bool)", file="InflectorTests.cs", label="Entry CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo, bool)", span="41-41"];
m5_30 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo, bool)", file="InflectorTests.cs", label="var result = ChangeTypeScalarImpl(value, conversionType, conversionCulture, ignoreValueCase)", span="43-43"];
m5_31 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo, bool)", file="InflectorTests.cs", label="result.Match((_,__) => { }, e => e.First().RethrowWhenAbsentIn(\r\n                new[] { typeof(InvalidCastException), typeof(FormatException), typeof(OverflowException) }))", span="44-45"];
m5_32 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo, bool)", file="InflectorTests.cs", label="return result.ToMaybe();", span="46-46"];
m5_33 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo, bool)", file="InflectorTests.cs", label="Exit CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo, bool)", span="41-41"];
m5_15 [cluster="Unk.Select", file="InflectorTests.cs", label="Entry Unk.Select", span=""];
m5_56 [cluster="string.ToBoolean()", file="InflectorTests.cs", label="Entry string.ToBoolean()", span="71-71"];
m5_50 [cluster="RailwaySharp.ErrorHandling.Result.Try<TSuccess>(System.Func<TSuccess>)", file="InflectorTests.cs", label="Entry RailwaySharp.ErrorHandling.Result.Try<TSuccess>(System.Func<TSuccess>)", span="210-210"];
m5_89 [cluster="System.Reflection.ConstructorInfo.Invoke(object[])", file="InflectorTests.cs", label="Entry System.Reflection.ConstructorInfo.Invoke(object[])", span="0-0"];
m5_55 [cluster="string.IsBooleanString()", file="InflectorTests.cs", label="Entry string.IsBooleanString()", span="65-65"];
m5_58 [cluster="string.ToEnum(System.Type, bool)", file="InflectorTests.cs", label="Entry string.ToEnum(System.Type, bool)", span="100-100"];
m5_88 [cluster="System.Type.GetConstructor(System.Type[])", file="InflectorTests.cs", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0"];
m5_18 [cluster="Unk.ToUntypedArray", file="InflectorTests.cs", label="Entry Unk.ToUntypedArray", span=""];
m5_81 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", file="InflectorTests.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", span="25-25"];
m5_59 [cluster="System.Func<TResult>.Invoke()", file="InflectorTests.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m5_103 [file="InflectorTests.cs", label="System.Globalization.CultureInfo", span=""];
m5_104 [file="InflectorTests.cs", label=bool, span=""];
m5_105 [file="InflectorTests.cs", label=type, span=""];
m5_106 [file="InflectorTests.cs", label=string, span=""];
m5_107 [file="InflectorTests.cs", label="System.Type", span=""];
m5_108 [file="InflectorTests.cs", label="System.Globalization.CultureInfo", span=""];
m5_109 [file="InflectorTests.cs", label=bool, span=""];
m5_110 [file="InflectorTests.cs", label=isFsOption, span=""];
m5_111 [file="InflectorTests.cs", label=type, span=""];
m6_0 [cluster="Humanizer.Tests.StringDehumanizeTests.PascalCaseSentence()", file="StringDehumanizeTests.cs", label="Entry Humanizer.Tests.StringDehumanizeTests.PascalCaseSentence()", span="7-7"];
m6_1 [cluster="Humanizer.Tests.StringDehumanizeTests.PascalCaseSentence()", color=green, community=0, file="StringDehumanizeTests.cs", label="0: Assert.Equal(\r\n                ''PascalCaseSentenceIsCamelized'',\r\n                ''Pascal case sentence is camelized''.Dehumanize())", span="9-11"];
m6_2 [cluster="Humanizer.Tests.StringDehumanizeTests.PascalCaseSentence()", file="StringDehumanizeTests.cs", label="Exit Humanizer.Tests.StringDehumanizeTests.PascalCaseSentence()", span="7-7"];
m6_11 [cluster="Humanizer.Tests.StringDehumanizeTests.LowerCaseSentence()", file="StringDehumanizeTests.cs", label="Entry Humanizer.Tests.StringDehumanizeTests.LowerCaseSentence()", span="31-31"];
m6_12 [cluster="Humanizer.Tests.StringDehumanizeTests.LowerCaseSentence()", color=red, community=1, file="StringDehumanizeTests.cs", label="0: Assert.Equal(\r\n                ''LowerCaseSentenceIsCamelized'',\r\n                ''lower case sentence is camelized''.Dehumanize())", span="33-35"];
m6_13 [cluster="Humanizer.Tests.StringDehumanizeTests.LowerCaseSentence()", file="StringDehumanizeTests.cs", label="Exit Humanizer.Tests.StringDehumanizeTests.LowerCaseSentence()", span="31-31"];
m6_5 [cluster="Humanizer.Tests.StringDehumanizeTests.TitleCaseSentence()", file="StringDehumanizeTests.cs", label="Entry Humanizer.Tests.StringDehumanizeTests.TitleCaseSentence()", span="15-15"];
m6_6 [cluster="Humanizer.Tests.StringDehumanizeTests.TitleCaseSentence()", color=red, community=1, file="StringDehumanizeTests.cs", label="0: Assert.Equal(\r\n                ''TitleCaseSentenceIsCamelized'',\r\n                ''Title Case Sentence Is Camelized''.Dehumanize())", span="17-19"];
m6_7 [cluster="Humanizer.Tests.StringDehumanizeTests.TitleCaseSentence()", file="StringDehumanizeTests.cs", label="Exit Humanizer.Tests.StringDehumanizeTests.TitleCaseSentence()", span="15-15"];
m6_4 [cluster="Unk.Equal", file="StringDehumanizeTests.cs", label="Entry Unk.Equal", span=""];
m6_3 [cluster="string.Dehumanize()", file="StringDehumanizeTests.cs", label="Entry string.Dehumanize()", span="11-11"];
m6_14 [cluster="Humanizer.Tests.StringDehumanizeTests.EmptySentence()", file="StringDehumanizeTests.cs", label="Entry Humanizer.Tests.StringDehumanizeTests.EmptySentence()", span="39-39"];
m6_15 [cluster="Humanizer.Tests.StringDehumanizeTests.EmptySentence()", color=red, community=1, file="StringDehumanizeTests.cs", label="0: Assert.Equal(\r\n                '''',\r\n                ''''.Dehumanize())", span="41-43"];
m6_16 [cluster="Humanizer.Tests.StringDehumanizeTests.EmptySentence()", file="StringDehumanizeTests.cs", label="Exit Humanizer.Tests.StringDehumanizeTests.EmptySentence()", span="39-39"];
m6_8 [cluster="Humanizer.Tests.StringDehumanizeTests.MixedCaseSentence()", file="StringDehumanizeTests.cs", label="Entry Humanizer.Tests.StringDehumanizeTests.MixedCaseSentence()", span="23-23"];
m6_9 [cluster="Humanizer.Tests.StringDehumanizeTests.MixedCaseSentence()", color=red, community=1, file="StringDehumanizeTests.cs", label="0: Assert.Equal(\r\n                ''MixedCaseSentenceIsCamelized'',\r\n                ''Mixed case sentence Is Camelized''.Dehumanize())", span="25-27"];
m6_10 [cluster="Humanizer.Tests.StringDehumanizeTests.MixedCaseSentence()", file="StringDehumanizeTests.cs", label="Exit Humanizer.Tests.StringDehumanizeTests.MixedCaseSentence()", span="23-23"];
m8_3 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=green, community=0, file="StringHumanizeTests.cs", label="0: var mod10 = number%10", span="12-12"];
m8_45 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", span="115-115"];
m8_46 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", color=red, community=1, file="StringHumanizeTests.cs", label="0: Assert.Equal(\r\n                ''Can Return Title Case'',\r\n                ''Can_return_title_Case''.Humanize(LetterCasing.Title))", span="117-119"];
m8_47 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWhenUsingUnderscores()", span="115-115"];
m8_54 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoSentenceCase()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoSentenceCase()", span="139-139"];
m8_55 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoSentenceCase()", color=red, community=1, file="StringHumanizeTests.cs", label="0: Assert.Equal(\r\n                ''Can return sentence case'',\r\n                ''CanReturnSentenceCase''.Humanize(LetterCasing.Sentence))", span="141-143"];
m8_56 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoSentenceCase()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoSentenceCase()", span="139-139"];
m8_38 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheStart()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheStart()", span="99-99"];
m8_39 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheStart()", color=red, community=1, file="StringHumanizeTests.cs", label="3: Assert.Equal(\r\n                ''1 HTML'',\r\n                ''1HTML''.Humanize())", span="101-103"];
m8_40 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheStart()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheStart()", span="99-99"];
m8_48 [cluster="Humanizer.Tests.StringHumanizeTests.TitleHumanizationHonorsAllCaps()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.TitleHumanizationHonorsAllCaps()", span="123-123"];
m8_49 [cluster="Humanizer.Tests.StringHumanizeTests.TitleHumanizationHonorsAllCaps()", color=red, community=1, file="StringHumanizeTests.cs", label="0: Assert.Equal(\r\n                ''Title Humanization Honors ALLCAPS'',\r\n                ''Title_humanization_Honors_ALLCAPS''.Humanize(LetterCasing.Title))", span="125-127"];
m8_50 [cluster="Humanizer.Tests.StringHumanizeTests.TitleHumanizationHonorsAllCaps()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.TitleHumanizationHonorsAllCaps()", span="123-123"];
m8_60 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", span="155-155"];
m8_61 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", color=red, community=1, file="StringHumanizeTests.cs", label="0: Assert.Equal(\r\n                ''lowercase'',\r\n                ''LOWERCASE''.Humanize(LetterCasing.LowerCase))", span="157-159"];
m8_62 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCaseEvenWhenUsingAllCaps()", span="155-155"];
m8_4 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", file="StringHumanizeTests.cs", label="mod10 == 1", span="14-14"];
m8_26 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheMiddle()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheMiddle()", span="67-67"];
m8_27 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheMiddle()", color=red, community=1, file="StringHumanizeTests.cs", label="3: Assert.Equal(\r\n                ''The HTML language'',\r\n                ''TheHTMLLanguage''.Humanize())", span="69-71"];
m8_28 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheMiddle()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheMiddle()", span="67-67"];
m8_51 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCase()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCase()", span="131-131"];
m8_52 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCase()", color=red, community=1, file="StringHumanizeTests.cs", label="0: Assert.Equal(\r\n                ''can return lower case'',\r\n                ''CanReturnLowerCase''.Humanize(LetterCasing.LowerCase))", span="133-135"];
m8_53 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCase()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoLowerCase()", span="131-131"];
m8_5 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=green, community=0, file="StringHumanizeTests.cs", label="1: return resourceKey + SingularPostfix;", span="15-15"];
m8_6 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=red, community=1, file="StringHumanizeTests.cs", label="1: mod10 > 1 && mod10 < 5", span="17-17"];
m8_7 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=green, community=0, file="StringHumanizeTests.cs", label="2: return resourceKey + PaucalPostfix;", span="18-18"];
m8_8 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=green, community=0, file="StringHumanizeTests.cs", label="0: return resourceKey;", span="21-21"];
m8_9 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=red, community=0, file="StringHumanizeTests.cs", label="1: Exit Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", span="7-7"];
m8_10 [cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringStartsWithANumber_ThenNumberIsDealtWithLikeAWord()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.WhenInputStringStartsWithANumber_ThenNumberIsDealtWithLikeAWord()", span="23-23"];
m8_14 [cluster="Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringIsTurnedIntoSentence()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringIsTurnedIntoSentence()", span="35-35"];
m8_15 [cluster="Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringIsTurnedIntoSentence()", color=red, community=1, file="StringHumanizeTests.cs", label="3: Assert.Equal(\r\n                ''Underscored input string is turned into sentence'',\r\n                ''Underscored_input_string_is_turned_into_sentence''.Humanize())", span="37-39"];
m8_16 [cluster="Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringIsTurnedIntoSentence()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringIsTurnedIntoSentence()", span="35-35"];
m8_20 [cluster="Humanizer.Tests.StringHumanizeTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", span="51-51"];
m8_21 [cluster="Humanizer.Tests.StringHumanizeTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", color=red, community=1, file="StringHumanizeTests.cs", label="3: Assert.Equal(\r\n                ''X is first word in the sentence'',\r\n                ''XIsFirstWordInTheSentence''.Humanize())", span="53-55"];
m8_22 [cluster="Humanizer.Tests.StringHumanizeTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.OneLetterWordInTheBeginningOfStringIsTurnedIntoAWord()", span="51-51"];
m8_23 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreLeftIntact()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.AcronymsAreLeftIntact()", span="59-59"];
m8_24 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreLeftIntact()", color=red, community=1, file="StringHumanizeTests.cs", label="3: Assert.Equal(\r\n                ''HTML'',\r\n                ''HTML''.Humanize())", span="61-63"];
m8_25 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreLeftIntact()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.AcronymsAreLeftIntact()", span="59-59"];
m8_66 [cluster="Humanizer.Tests.StringHumanizeTests.CanTurnIntoUpperCasewhenUsingUnderscores()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.CanTurnIntoUpperCasewhenUsingUnderscores()", span="171-171"];
m8_67 [cluster="Humanizer.Tests.StringHumanizeTests.CanTurnIntoUpperCasewhenUsingUnderscores()", color=red, community=1, file="StringHumanizeTests.cs", label="0: Assert.Equal(\r\n                ''CAN HUMANIZE INTO UPPER CASE'',\r\n                ''Can_Humanize_into_Upper_case''.Humanize(LetterCasing.AllCaps))", span="173-175"];
m8_68 [cluster="Humanizer.Tests.StringHumanizeTests.CanTurnIntoUpperCasewhenUsingUnderscores()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.CanTurnIntoUpperCasewhenUsingUnderscores()", span="171-171"];
m8_32 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheEnd()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheEnd()", span="83-83"];
m8_33 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheEnd()", color=red, community=1, file="StringHumanizeTests.cs", label="3: Assert.Equal(\r\n                ''The language is HTML'',\r\n                ''TheLanguageIsHTML''.Humanize())", span="85-87"];
m8_34 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheEnd()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheEnd()", span="83-83"];
m8_44 [cluster="string.Humanize(Humanizer.LetterCasing)", file="StringHumanizeTests.cs", label="Entry string.Humanize(Humanizer.LetterCasing)", span="60-60"];
m8_17 [cluster="Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringPreservesCasing()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringPreservesCasing()", span="43-43"];
m8_18 [cluster="Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringPreservesCasing()", color=red, community=1, file="StringHumanizeTests.cs", label="3: Assert.Equal(\r\n                ''Underscored input String is turned INTO sentence'',\r\n                ''Underscored_input_String_is_turned_INTO_sentence''.Humanize())", span="45-47"];
m8_19 [cluster="Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringPreservesCasing()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.UnderscoredInputStringPreservesCasing()", span="43-43"];
m8_63 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoUpperCase()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoUpperCase()", span="163-163"];
m8_64 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoUpperCase()", color=red, community=1, file="StringHumanizeTests.cs", label="0: Assert.Equal(\r\n                ''CAN HUMANIZE INTO UPPER CASE'',\r\n                ''CanHumanizeIntoUpperCase''.Humanize(LetterCasing.AllCaps))", span="165-167"];
m8_65 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoUpperCase()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoUpperCase()", span="163-163"];
m8_11 [cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", span="29-29"];
m8_12 [cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", color=red, community=0, file="StringHumanizeTests.cs", label="3: Assert.Equal(''Number is at the end 100'', ''NumberIsAtTheEnd100''.Humanize())", span="31-31"];
m8_13 [cluster="Humanizer.Tests.StringHumanizeTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.WhenInputStringEndWithANumber_ThenNumberIsDealtWithLikeAWord()", span="29-29"];
m8_35 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheEnd()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheEnd()", span="91-91"];
m8_36 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheEnd()", color=red, community=1, file="StringHumanizeTests.cs", label="3: Assert.Equal(\r\n                ''HTML 5'',\r\n                ''HTML5''.Humanize())", span="93-95"];
m8_37 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheEnd()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromNumbersInTheEnd()", span="91-91"];
m8_41 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", span="107-107"];
m8_42 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", color=red, community=1, file="StringHumanizeTests.cs", label="0: Assert.Equal(\r\n                ''Can Return Title Case'',\r\n                ''CanReturnTitleCase''.Humanize(LetterCasing.Title))", span="109-111"];
m8_43 [cluster="Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.CanHumanizeIntoTitleCaseWithoutUsingUnderscores()", span="107-107"];
m8_57 [cluster="Humanizer.Tests.StringHumanizeTests.SentenceCasingWorksOnEmptyStrings()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.SentenceCasingWorksOnEmptyStrings()", span="147-147"];
m8_58 [cluster="Humanizer.Tests.StringHumanizeTests.SentenceCasingWorksOnEmptyStrings()", color=red, community=1, file="StringHumanizeTests.cs", label="0: Assert.Equal(\r\n                '''',\r\n                ''''.Humanize(LetterCasing.Sentence))", span="149-151"];
m8_59 [cluster="Humanizer.Tests.StringHumanizeTests.SentenceCasingWorksOnEmptyStrings()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.SentenceCasingWorksOnEmptyStrings()", span="147-147"];
m8_29 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheStart()", file="StringHumanizeTests.cs", label="Entry Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheStart()", span="75-75"];
m8_30 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheStart()", color=red, community=1, file="StringHumanizeTests.cs", label="3: Assert.Equal(\r\n                ''HTML is the language'',\r\n                ''HTMLIsTheLanguage''.Humanize())", span="77-79"];
m8_31 [cluster="Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheStart()", file="StringHumanizeTests.cs", label="Exit Humanizer.Tests.StringHumanizeTests.AcronymsAreSeparatedFromOtherWordsInTheStart()", span="75-75"];
m8_0 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", file="StringHumanizeTests.cs", label="Entry Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", span="7-7"];
m8_1 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=green, community=0, file="StringHumanizeTests.cs", label="2: var mod100 = number%100", span="9-9"];
m8_2 [cluster="Humanizer.Localisation.Formatters.RussianFormatter.GetResourceKey(string, int)", color=green, community=0, file="StringHumanizeTests.cs", label="2: mod100/10 != 1", span="10-10"];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_41  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_39 -> m1_42  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_39 -> m1_43  [color=darkseagreen4, key=1, label="Humanizer.GrammaticalGender", style=dashed];
m1_39 -> m1_45  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_40 -> m1_41  [key=0, style=solid];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_43  [key=0, style=solid];
m1_41 -> m1_49  [key=2, style=dotted];
m1_41 -> m1_44  [color=darkseagreen4, key=1, label=towords, style=dashed];
m1_41 -> m1_46  [color=darkseagreen4, key=1, label=towords, style=dashed];
m1_41 -> m1_47  [color=darkseagreen4, key=1, label=towords, style=dashed];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_33  [key=2, style=dotted];
m1_42 -> m1_44  [color=darkseagreen4, key=1, label=towords, style=dashed];
m1_42 -> m1_46  [color=darkseagreen4, key=1, label=towords, style=dashed];
m1_42 -> m1_47  [color=darkseagreen4, key=1, label=towords, style=dashed];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_45  [key=0, style=solid];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_47  [key=0, style=solid];
m1_44 -> m1_47  [key=0, style=solid];
m1_44 -> m1_50  [key=2, style=dotted];
m1_44 -> m1_44  [color=darkseagreen4, key=1, label=towords, style=dashed];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_50  [key=2, style=dotted];
m1_46 -> m1_46  [color=darkseagreen4, key=1, label=towords, style=dashed];
m1_47 -> m1_48  [key=0, style=solid];
m1_48 -> m1_39  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_3  [color=red, key=1, label=int, style=dashed];
m1_0 -> m1_4  [color=red, key=1, label=int, style=dashed];
m1_0 -> m1_6  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_0 -> m1_7  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_0 -> m1_8  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_0 -> m1_9  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_0 -> m1_10  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_0 -> m1_11  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_0 -> m1_12  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_0 -> m1_13  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_0 -> m1_14  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_0 -> m1_15  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_0 -> m1_16  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_0 -> m1_17  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_0 -> m1_18  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_0 -> m1_19  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_0 -> m1_20  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_0 -> m1_21  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_0 -> m1_22  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_0 -> m1_23  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_0 -> m1_24  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_0 -> m1_25  [color=darkseagreen4, key=1, label="Humanizer.GrammaticalGender", style=dashed];
m1_0 -> m1_28  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [color=red, key=0, style=solid];
m1_3 -> m1_4  [color=red, key=0, style=solid];
m1_3 -> m1_5  [color=red, key=0, style=solid];
m1_4 -> m1_31  [color=red, key=0, style=solid];
m1_4 -> m1_32  [color=red, key=2, style=dotted];
m1_4 -> m1_33  [color=red, key=2, style=dotted];
m1_4 -> m1_34  [color=red, key=2, style=dotted];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_9  [key=0, style=solid];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_33  [key=2, style=dotted];
m1_7 -> m1_34  [key=2, style=dotted];
m1_7 -> m1_36  [key=2, style=dotted];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_8  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_8 -> m1_10  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_8 -> m1_11  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_8 -> m1_12  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_8 -> m1_13  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_8 -> m1_14  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_8 -> m1_15  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_8 -> m1_16  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_8 -> m1_17  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_8 -> m1_18  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_8 -> m1_19  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_8 -> m1_20  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_8 -> m1_21  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_8 -> m1_22  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_8 -> m1_23  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_8 -> m1_24  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_8 -> m1_28  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_12  [key=0, style=solid];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_33  [key=2, style=dotted];
m1_10 -> m1_34  [key=2, style=dotted];
m1_10 -> m1_36  [key=2, style=dotted];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_11  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_11 -> m1_13  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_11 -> m1_14  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_11 -> m1_15  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_11 -> m1_16  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_11 -> m1_17  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_11 -> m1_18  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_11 -> m1_19  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_11 -> m1_20  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_11 -> m1_21  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_11 -> m1_22  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_11 -> m1_23  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_11 -> m1_24  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_11 -> m1_28  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_15  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_0  [key=2, style=dotted];
m1_13 -> m1_34  [key=2, style=dotted];
m1_13 -> m1_36  [key=2, style=dotted];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_14  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_14 -> m1_16  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_14 -> m1_17  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_14 -> m1_18  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_14 -> m1_19  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_14 -> m1_20  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_14 -> m1_21  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_14 -> m1_22  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_14 -> m1_23  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_14 -> m1_24  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_14 -> m1_28  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_18  [key=0, style=solid];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_36  [key=2, style=dotted];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_17  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_17 -> m1_19  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_17 -> m1_20  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_17 -> m1_21  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_17 -> m1_22  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_17 -> m1_23  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_17 -> m1_24  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_17 -> m1_28  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_30  [key=0, style=solid];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_23  [key=0, style=solid];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_22  [key=0, style=solid];
m1_21 -> m1_30  [key=0, style=solid];
m1_21 -> m1_36  [key=2, style=dotted];
m1_22 -> m1_30  [key=0, style=solid];
m1_22 -> m1_36  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_26  [color=darkseagreen4, key=1, label=lastPart, style=dashed];
m1_23 -> m1_28  [color=darkseagreen4, key=1, label=lastPart, style=dashed];
m1_23 -> m1_29  [color=darkseagreen4, key=1, label=lastPart, style=dashed];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_27  [color=darkseagreen4, key=1, label=units, style=dashed];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_27  [key=0, style=solid];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_34  [key=2, style=dotted];
m1_28 -> m1_28  [color=darkseagreen4, key=1, label=lastPart, style=dashed];
m1_2 -> m1_31  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_35  [key=2, style=dotted];
m1_5 -> m1_7  [color=darkseagreen4, key=1, label=parts, style=dashed];
m1_5 -> m1_10  [color=darkseagreen4, key=1, label=parts, style=dashed];
m1_5 -> m1_13  [color=darkseagreen4, key=1, label=parts, style=dashed];
m1_5 -> m1_16  [color=darkseagreen4, key=1, label=parts, style=dashed];
m1_5 -> m1_21  [color=darkseagreen4, key=1, label=parts, style=dashed];
m1_5 -> m1_22  [color=darkseagreen4, key=1, label=parts, style=dashed];
m1_5 -> m1_29  [color=darkseagreen4, key=1, label=parts, style=dashed];
m1_5 -> m1_30  [color=darkseagreen4, key=1, label=parts, style=dashed];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_36  [key=2, style=dotted];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_37  [key=2, style=dotted];
m1_30 -> m1_38  [key=2, style=dotted];
m1_26 -> m1_29  [key=0, style=solid];
m1_26 -> m1_26  [color=darkseagreen4, key=1, label=lastPart, style=dashed];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_29  [key=0, style=solid];
m1_31 -> m1_0  [color=blue, key=0, style=bold];
m1_51 -> m1_4  [color=red, key=1, label="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter", style=dashed];
m1_51 -> m1_7  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter", style=dashed];
m1_51 -> m1_10  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter", style=dashed];
m1_51 -> m1_13  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter", style=dashed];
m1_51 -> m1_42  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter", style=dashed];
m2_4 -> m2_5  [color=green, key=0, style=solid];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_2 -> m2_0  [color=blue, key=0, style=bold];
m2_5 -> m2_6  [color=green, key=0, style=solid];
m2_5 -> m2_7  [color=green, key=2, style=dotted];
m2_6 -> m2_4  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_2  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_6  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_7  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_8  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_9  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_10  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_11  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_12  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_13  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_14  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_15  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_16  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_17  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_18  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_19  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_20  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_21  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_22  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_23  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_0 -> m4_24  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=0, style=solid];
m4_2 -> m4_26  [key=0, style=solid];
m4_2 -> m4_0  [key=2, style=dotted];
m4_2 -> m4_27  [key=2, style=dotted];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_5  [key=0, style=solid];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_9  [key=0, style=solid];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_0  [key=2, style=dotted];
m4_7 -> m4_27  [key=2, style=dotted];
m4_7 -> m4_29  [key=2, style=dotted];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_8  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_8 -> m4_10  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_8 -> m4_11  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_8 -> m4_12  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_8 -> m4_13  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_8 -> m4_14  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_8 -> m4_15  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_8 -> m4_16  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_8 -> m4_17  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_8 -> m4_18  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_8 -> m4_19  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_8 -> m4_20  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_8 -> m4_21  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_8 -> m4_22  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_8 -> m4_23  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_8 -> m4_24  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_12  [key=0, style=solid];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_0  [key=2, style=dotted];
m4_10 -> m4_27  [key=2, style=dotted];
m4_10 -> m4_29  [key=2, style=dotted];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_11  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_11 -> m4_13  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_11 -> m4_14  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_11 -> m4_15  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_11 -> m4_16  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_11 -> m4_17  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_11 -> m4_18  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_11 -> m4_19  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_11 -> m4_20  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_11 -> m4_21  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_11 -> m4_22  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_11 -> m4_23  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_11 -> m4_24  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_15  [key=0, style=solid];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_0  [key=2, style=dotted];
m4_13 -> m4_27  [key=2, style=dotted];
m4_13 -> m4_29  [key=2, style=dotted];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> m4_14  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_14 -> m4_16  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_14 -> m4_17  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_14 -> m4_18  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_14 -> m4_19  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_14 -> m4_20  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_14 -> m4_21  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_14 -> m4_22  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_14 -> m4_23  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_14 -> m4_24  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_18  [key=0, style=solid];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_0  [key=2, style=dotted];
m4_16 -> m4_27  [key=2, style=dotted];
m4_16 -> m4_29  [key=2, style=dotted];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_17  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_17 -> m4_19  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_17 -> m4_20  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_17 -> m4_21  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_17 -> m4_22  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_17 -> m4_23  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_17 -> m4_24  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_21  [key=0, style=solid];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_0  [key=2, style=dotted];
m4_19 -> m4_27  [key=2, style=dotted];
m4_19 -> m4_29  [key=2, style=dotted];
m4_20 -> m4_23  [key=0, style=solid];
m4_20 -> m4_20  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_20 -> m4_24  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_23  [key=0, style=solid];
m4_22 -> m4_23  [key=0, style=solid];
m4_22 -> m4_27  [key=2, style=dotted];
m4_22 -> m4_29  [key=2, style=dotted];
m4_23 -> m4_24  [key=0, style=solid];
m4_23 -> m4_25  [key=0, style=solid];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_29  [key=2, style=dotted];
m4_4 -> m4_26  [key=0, style=solid];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_28  [key=2, style=dotted];
m4_5 -> m4_7  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_5 -> m4_10  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_5 -> m4_13  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_5 -> m4_16  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_5 -> m4_19  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_5 -> m4_22  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_5 -> m4_24  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_5 -> m4_25  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_30  [key=2, style=dotted];
m4_25 -> m4_31  [key=2, style=dotted];
m4_26 -> m4_0  [color=blue, key=0, style=bold];
m4_63 -> m4_64  [key=0, style=solid];
m4_64 -> m4_65  [key=0, style=solid];
m4_64 -> m4_38  [key=2, style=dotted];
m4_64 -> m4_15  [color=darkorchid, key=3, label="Parameter variable string replacement", style=bold];
m4_64 -> m4_16  [color=darkorchid, key=3, label="Parameter variable string replacement", style=bold];
m4_64 -> m4_17  [color=darkorchid, key=3, label="Parameter variable string replacement", style=bold];
m4_64 -> m4_18  [color=darkorchid, key=3, label="Parameter variable string rule", style=bold];
m4_64 -> m4_19  [color=darkorchid, key=3, label="Parameter variable string rule", style=bold];
m4_64 -> m4_20  [color=darkorchid, key=3, label="Parameter variable string rule", style=bold];
m4_64 -> m4_21  [color=darkorchid, key=3, label="Parameter variable string replacement", style=bold];
m4_64 -> m4_22  [color=darkorchid, key=3, label="Parameter variable string replacement", style=bold];
m4_64 -> m4_23  [color=darkorchid, key=3, label="Parameter variable string rule", style=bold];
m4_64 -> m4_24  [color=darkorchid, key=3, label="Parameter variable string replacement", style=bold];
m4_64 -> m4_25  [color=darkorchid, key=3, label="Parameter variable string rule", style=bold];
m4_64 -> m4_14  [color=darkorchid, key=3, label="Parameter variable string replacement", style=bold];
m4_65 -> m4_63  [color=blue, key=0, style=bold];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_34  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_32 -> m4_35  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_35  [key=0, style=solid];
m4_33 -> m4_37  [key=2, style=dotted];
m4_34 -> m4_36  [key=0, style=solid];
m4_35 -> m4_36  [key=0, style=solid];
m4_36 -> m4_32  [color=blue, key=0, style=bold];
m4_38 -> m4_39  [key=0, style=solid];
m4_38 -> m4_42  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_38 -> m4_43  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_38 -> m4_44  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_38 -> m4_45  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_38 -> m4_46  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_38 -> m4_47  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_38 -> m4_48  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_38 -> m4_49  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_38 -> m4_50  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_38 -> m4_51  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_38 -> m4_52  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_38 -> m4_53  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_38 -> m4_54  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_38 -> m4_55  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_38 -> m4_56  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_38 -> m4_57  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_38 -> m4_58  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_38 -> m4_59  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_38 -> m4_60  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_41  [key=0, style=solid];
m4_42 -> m4_43  [key=0, style=solid];
m4_42 -> m4_45  [key=0, style=solid];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_38  [key=2, style=dotted];
m4_43 -> m4_27  [key=2, style=dotted];
m4_43 -> m4_29  [key=2, style=dotted];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_44  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_44 -> m4_46  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_44 -> m4_47  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_44 -> m4_48  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_44 -> m4_49  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_44 -> m4_50  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_44 -> m4_51  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_44 -> m4_52  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_44 -> m4_53  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_44 -> m4_54  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_44 -> m4_55  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_44 -> m4_56  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_44 -> m4_57  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_44 -> m4_58  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_44 -> m4_59  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_44 -> m4_60  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_45 -> m4_46  [key=0, style=solid];
m4_45 -> m4_48  [key=0, style=solid];
m4_46 -> m4_47  [key=0, style=solid];
m4_46 -> m4_38  [key=2, style=dotted];
m4_46 -> m4_27  [key=2, style=dotted];
m4_46 -> m4_29  [key=2, style=dotted];
m4_47 -> m4_48  [key=0, style=solid];
m4_47 -> m4_47  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_47 -> m4_49  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_47 -> m4_50  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_47 -> m4_51  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_47 -> m4_52  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_47 -> m4_53  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_47 -> m4_54  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_47 -> m4_55  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_47 -> m4_56  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_47 -> m4_57  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_47 -> m4_58  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_47 -> m4_59  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_47 -> m4_60  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_48 -> m4_49  [key=0, style=solid];
m4_48 -> m4_51  [key=0, style=solid];
m4_49 -> m4_50  [key=0, style=solid];
m4_49 -> m4_38  [key=2, style=dotted];
m4_49 -> m4_27  [key=2, style=dotted];
m4_49 -> m4_29  [key=2, style=dotted];
m4_50 -> m4_51  [key=0, style=solid];
m4_50 -> m4_50  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_50 -> m4_52  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_50 -> m4_53  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_50 -> m4_54  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_50 -> m4_55  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_50 -> m4_56  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_50 -> m4_57  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_50 -> m4_58  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_50 -> m4_59  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_50 -> m4_60  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_51 -> m4_52  [key=0, style=solid];
m4_51 -> m4_54  [key=0, style=solid];
m4_52 -> m4_53  [key=0, style=solid];
m4_52 -> m4_38  [key=2, style=dotted];
m4_52 -> m4_27  [key=2, style=dotted];
m4_52 -> m4_29  [key=2, style=dotted];
m4_53 -> m4_54  [key=0, style=solid];
m4_53 -> m4_53  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_53 -> m4_55  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_53 -> m4_56  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_53 -> m4_57  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_53 -> m4_58  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_53 -> m4_59  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_53 -> m4_60  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_54 -> m4_55  [key=0, style=solid];
m4_54 -> m4_57  [key=0, style=solid];
m4_54 -> m4_32  [color=darkorchid, key=3, label="Parameter variable string plural", style=bold];
m4_54 -> m4_33  [color=darkorchid, key=3, label="Parameter variable string plural", style=bold];
m4_54 -> m4_34  [color=darkorchid, key=3, label="Parameter variable string plural", style=bold];
m4_55 -> m4_56  [key=0, style=solid];
m4_55 -> m4_38  [key=2, style=dotted];
m4_55 -> m4_27  [key=2, style=dotted];
m4_55 -> m4_29  [key=2, style=dotted];
m4_56 -> m4_59  [key=0, style=solid];
m4_56 -> m4_56  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_56 -> m4_60  [color=darkseagreen4, key=1, label=int, style=dashed];
m4_57 -> m4_58  [key=0, style=solid];
m4_57 -> m4_59  [key=0, style=solid];
m4_58 -> m4_59  [key=0, style=solid];
m4_58 -> m4_32  [key=2, style=dotted];
m4_58 -> m4_27  [key=2, style=dotted];
m4_58 -> m4_29  [key=2, style=dotted];
m4_58 -> m4_35  [color=darkorchid, key=3, label="Parameter variable string word", style=bold];
m4_58 -> m4_38  [color=darkorchid, key=3, label="Parameter variable string word", style=bold];
m4_58 -> m4_39  [color=darkorchid, key=3, label="Parameter variable string word", style=bold];
m4_58 -> m4_40  [color=darkorchid, key=3, label="Parameter variable string word", style=bold];
m4_58 -> m4_41  [color=darkorchid, key=3, label="Parameter variable string word", style=bold];
m4_59 -> m4_60  [key=0, style=solid];
m4_59 -> m4_61  [key=0, style=solid];
m4_60 -> m4_61  [key=0, style=solid];
m4_60 -> m4_32  [key=2, style=dotted];
m4_60 -> m4_29  [key=2, style=dotted];
m4_40 -> m4_62  [key=0, style=solid];
m4_41 -> m4_42  [key=0, style=solid];
m4_41 -> m4_28  [key=2, style=dotted];
m4_41 -> m4_43  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_41 -> m4_46  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_41 -> m4_49  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_41 -> m4_52  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_41 -> m4_55  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_41 -> m4_58  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_41 -> m4_60  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_41 -> m4_61  [color=darkseagreen4, key=1, label=parts, style=dashed];
m4_61 -> m4_62  [key=0, style=solid];
m4_61 -> m4_30  [key=2, style=dotted];
m4_61 -> m4_8  [color=darkorchid, key=3, label="Parameter variable string replacement", style=bold];
m4_61 -> m4_9  [color=darkorchid, key=3, label="Parameter variable string replacement", style=bold];
m4_61 -> m4_10  [color=darkorchid, key=3, label="Parameter variable string replacement", style=bold];
m4_61 -> m4_11  [color=darkorchid, key=3, label="Parameter variable string replacement", style=bold];
m4_61 -> m4_12  [color=darkorchid, key=3, label="Parameter variable string rule", style=bold];
m4_61 -> m4_13  [color=darkorchid, key=3, label="Parameter variable string replacement", style=bold];
m4_62 -> m4_38  [color=blue, key=0, style=bold];
m4_66 -> m4_2  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter", style=dashed];
m4_66 -> m4_7  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter", style=dashed];
m4_66 -> m4_10  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter", style=dashed];
m4_66 -> m4_13  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter", style=dashed];
m4_66 -> m4_16  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter", style=dashed];
m4_66 -> m4_19  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter", style=dashed];
m4_66 -> m4_43  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter", style=dashed];
m4_66 -> m4_46  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter", style=dashed];
m4_66 -> m4_49  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter", style=dashed];
m4_66 -> m4_52  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter", style=dashed];
m4_66 -> m4_55  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter", style=dashed];
m4_66 -> m4_58  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter", style=dashed];
m4_66 -> m4_60  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter", style=dashed];
m4_66 -> m4_64  [color=darkseagreen4, key=1, label="Humanizer.Localisation.NumberToWords.FinnishNumberToWordsConverter", style=dashed];
m5_91 -> m5_92  [key=0, style=solid];
m5_91 -> m5_93  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_91 -> m5_96  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_92 -> m5_93  [key=0, style=solid];
m5_93 -> m5_94  [key=0, style=solid];
m5_93 -> m5_96  [key=0, style=solid];
m5_93 -> m5_100  [key=2, style=dotted];
m5_93 -> m5_97  [color=darkseagreen4, key=1, label=parsedValue, style=dashed];
m5_96 -> m5_97  [key=0, style=solid];
m5_96 -> m5_98  [key=0, style=solid];
m5_96 -> m5_102  [key=2, style=dotted];
m5_94 -> m5_95  [key=0, style=solid];
m5_97 -> m5_99  [key=0, style=solid];
m5_95 -> m5_99  [key=0, style=solid];
m5_95 -> m5_101  [key=2, style=dotted];
m5_98 -> m5_99  [key=0, style=solid];
m5_98 -> m5_101  [key=2, style=dotted];
m5_99 -> m5_91  [color=blue, key=0, style=bold];
m5_34 -> m5_44  [key=0, style=solid];
m5_34 -> m5_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_34 -> m5_61  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_34 -> m5_62  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_34 -> m5_69  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_34 -> m5_63  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_34 -> m5_64  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_34 -> m5_74  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_34 -> m5_66  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_34 -> m5_53  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_34 -> m5_45  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_34 -> m5_83  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_34 -> m5_84  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_34 -> m5_46  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_44 -> m5_45  [key=0, style=solid];
m5_44 -> m5_46  [color=darkseagreen4, key=1, label=changeType, style=dashed];
m5_45 -> m5_46  [key=0, style=solid];
m5_46 -> m5_47  [key=0, style=solid];
m5_46 -> m5_48  [key=2, style=dotted];
m5_46 -> m5_49  [key=2, style=dotted];
m5_46 -> m5_50  [key=2, style=dotted];
m5_47 -> m5_34  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=2, style=dotted];
m5_1 -> m5_4  [key=2, style=dotted];
m5_1 -> m5_5  [key=2, style=dotted];
m5_2 -> m5_0  [color=blue, key=0, style=bold];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_7  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m5_5 -> m5_21  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_10  [key=2, style=dotted];
m5_6 -> m5_11  [key=2, style=dotted];
m5_6 -> m5_12  [key=2, style=dotted];
m5_6 -> m5_13  [key=2, style=dotted];
m5_6 -> m5_14  [key=2, style=dotted];
m5_6 -> m5_21  [color=darkseagreen4, key=1, label=type, style=dashed];
m5_6 -> m5_8  [color=darkseagreen4, key=1, label=type, style=dashed];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_15  [key=2, style=dotted];
m5_7 -> m5_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_16  [key=2, style=dotted];
m5_8 -> m5_17  [key=2, style=dotted];
m5_8 -> m5_15  [key=2, style=dotted];
m5_8 -> m5_18  [key=2, style=dotted];
m5_8 -> m5_19  [key=2, style=dotted];
m5_8 -> m5_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_8 -> m5_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_9 -> m5_5  [color=blue, key=0, style=bold];
m5_82 -> m5_83  [key=0, style=solid];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_4  [key=2, style=dotted];
m5_20 -> m5_21  [key=0, style=solid];
m5_23 -> m5_24  [key=0, style=solid];
m5_27 -> m5_28  [key=0, style=solid];
m5_22 -> m5_20  [color=blue, key=0, style=bold];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_26  [key=2, style=dotted];
m5_25 -> m5_23  [color=blue, key=0, style=bold];
m5_28 -> m5_29  [key=0, style=solid];
m5_29 -> m5_27  [color=blue, key=0, style=bold];
m5_37 -> m5_38  [key=0, style=solid];
m5_39 -> m5_40  [key=0, style=solid];
m5_38 -> m5_37  [color=blue, key=0, style=bold];
m5_40 -> m5_41  [key=0, style=solid];
m5_40 -> m5_42  [key=2, style=dotted];
m5_40 -> m5_43  [key=2, style=dotted];
m5_41 -> m5_39  [color=blue, key=0, style=bold];
m5_52 -> m5_53  [key=0, style=solid];
m5_61 -> m5_62  [key=0, style=solid];
m5_61 -> m5_49  [key=2, style=dotted];
m5_61 -> m5_69  [color=darkseagreen4, key=1, label=isFsOption, style=dashed];
m5_61 -> m5_64  [color=darkseagreen4, key=1, label=isFsOption, style=dashed];
m5_61 -> m5_74  [color=darkseagreen4, key=1, label=isFsOption, style=dashed];
m5_61 -> m5_65  [color=darkseagreen4, key=1, label=isFsOption, style=dashed];
m5_61 -> m5_79  [color=darkseagreen4, key=1, label=isFsOption, style=dashed];
m5_62 -> m5_63  [key=0, style=solid];
m5_69 -> m5_70  [key=0, style=solid];
m5_69 -> m5_71  [key=2, style=dotted];
m5_69 -> m5_72  [key=2, style=dotted];
m5_63 -> m5_64  [key=0, style=solid];
m5_63 -> m5_59  [key=2, style=dotted];
m5_63 -> m5_74  [color=darkseagreen4, key=1, label=type, style=dashed];
m5_63 -> m5_65  [color=darkseagreen4, key=1, label=type, style=dashed];
m5_63 -> m5_79  [color=darkseagreen4, key=1, label=type, style=dashed];
m5_64 -> m5_65  [key=0, style=solid];
m5_64 -> m5_66  [color=darkseagreen4, key=1, label=withValue, style=dashed];
m5_74 -> m5_75  [key=0, style=solid];
m5_74 -> m5_76  [key=2, style=dotted];
m5_74 -> m5_77  [key=2, style=dotted];
m5_66 -> m5_67  [key=0, style=solid];
m5_66 -> m5_59  [key=2, style=dotted];
m5_53 -> m5_54  [key=0, style=solid];
m5_53 -> m5_55  [key=2, style=dotted];
m5_53 -> m5_56  [key=2, style=dotted];
m5_53 -> m5_57  [key=2, style=dotted];
m5_53 -> m5_58  [key=2, style=dotted];
m5_53 -> m5_59  [key=2, style=dotted];
m5_83 -> m5_84  [key=0, style=solid];
m5_83 -> m5_88  [key=2, style=dotted];
m5_84 -> m5_87  [key=0, style=solid];
m5_84 -> m5_89  [key=2, style=dotted];
m5_51 -> m5_52  [key=0, style=solid];
m5_54 -> m5_51  [color=blue, key=0, style=bold];
m5_60 -> m5_61  [key=0, style=solid];
m5_65 -> m5_66  [key=0, style=solid];
m5_79 -> m5_80  [key=0, style=solid];
m5_79 -> m5_81  [key=2, style=dotted];
m5_67 -> m5_60  [color=blue, key=0, style=bold];
m5_68 -> m5_69  [key=0, style=solid];
m5_70 -> m5_68  [color=blue, key=0, style=bold];
m5_73 -> m5_74  [key=0, style=solid];
m5_75 -> m5_73  [color=blue, key=0, style=bold];
m5_78 -> m5_79  [key=0, style=solid];
m5_80 -> m5_78  [color=blue, key=0, style=bold];
m5_85 -> m5_86  [key=0, style=solid];
m5_86 -> m5_87  [key=0, style=solid];
m5_86 -> m5_90  [key=2, style=dotted];
m5_87 -> m5_82  [color=blue, key=0, style=bold];
m5_4 -> m5_30  [key=0, style=solid];
m5_30 -> m5_31  [key=0, style=solid];
m5_30 -> m5_34  [key=2, style=dotted];
m5_30 -> m5_32  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_35  [key=2, style=dotted];
m5_31 -> m5_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_31 -> m5_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_36  [key=2, style=dotted];
m5_33 -> m5_4  [color=blue, key=0, style=bold];
m5_103 -> m5_21  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m5_104 -> m5_21  [color=darkseagreen4, key=1, label=bool, style=dashed];
m5_105 -> m5_21  [color=darkseagreen4, key=1, label=type, style=dashed];
m5_106 -> m5_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_106 -> m5_64  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_106 -> m5_74  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_106 -> m5_66  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_106 -> m5_53  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_106 -> m5_84  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_107 -> m5_52  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_107 -> m5_61  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_107 -> m5_62  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_107 -> m5_69  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_107 -> m5_63  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_107 -> m5_53  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_107 -> m5_83  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_108 -> m5_52  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m5_108 -> m5_64  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m5_108 -> m5_74  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m5_109 -> m5_53  [color=darkseagreen4, key=1, label=bool, style=dashed];
m5_110 -> m5_69  [color=darkseagreen4, key=1, label=isFsOption, style=dashed];
m5_110 -> m5_74  [color=darkseagreen4, key=1, label=isFsOption, style=dashed];
m5_110 -> m5_79  [color=darkseagreen4, key=1, label=isFsOption, style=dashed];
m5_111 -> m5_74  [color=darkseagreen4, key=1, label=type, style=dashed];
m5_111 -> m5_79  [color=darkseagreen4, key=1, label=type, style=dashed];
m6_0 -> m6_1  [color=green, key=0, style=solid];
m6_1 -> m6_2  [color=green, key=0, style=solid];
m6_1 -> m6_3  [color=green, key=2, style=dotted];
m6_1 -> m6_4  [color=green, key=2, style=dotted];
m6_2 -> m6_0  [color=blue, key=0, style=bold];
m6_11 -> m6_12  [color=red, key=0, style=solid];
m6_12 -> m6_13  [color=red, key=0, style=solid];
m6_12 -> m6_3  [color=red, key=2, style=dotted];
m6_12 -> m6_4  [color=red, key=2, style=dotted];
m6_13 -> m6_11  [color=blue, key=0, style=bold];
m6_5 -> m6_6  [color=red, key=0, style=solid];
m6_6 -> m6_7  [color=red, key=0, style=solid];
m6_6 -> m6_3  [color=red, key=2, style=dotted];
m6_6 -> m6_4  [color=red, key=2, style=dotted];
m6_7 -> m6_5  [color=blue, key=0, style=bold];
m6_14 -> m6_15  [color=red, key=0, style=solid];
m6_15 -> m6_16  [color=red, key=0, style=solid];
m6_15 -> m6_3  [color=red, key=2, style=dotted];
m6_15 -> m6_4  [color=red, key=2, style=dotted];
m6_16 -> m6_14  [color=blue, key=0, style=bold];
m6_8 -> m6_9  [color=red, key=0, style=solid];
m6_9 -> m6_10  [color=red, key=0, style=solid];
m6_9 -> m6_3  [color=red, key=2, style=dotted];
m6_9 -> m6_4  [color=red, key=2, style=dotted];
m6_10 -> m6_8  [color=blue, key=0, style=bold];
m8_3 -> m8_4  [color=green, key=0, style=solid];
m8_3 -> m8_6  [color=green, key=1, label=mod10, style=dashed];
m8_45 -> m8_46  [color=red, key=0, style=solid];
m8_46 -> m8_47  [color=red, key=0, style=solid];
m8_46 -> m8_44  [color=red, key=2, style=dotted];
m8_46 -> m8_4  [color=red, key=2, style=dotted];
m8_47 -> m8_45  [color=blue, key=0, style=bold];
m8_54 -> m8_55  [color=red, key=0, style=solid];
m8_55 -> m8_56  [color=red, key=0, style=solid];
m8_55 -> m8_44  [color=red, key=2, style=dotted];
m8_55 -> m8_4  [color=red, key=2, style=dotted];
m8_56 -> m8_54  [color=blue, key=0, style=bold];
m8_38 -> m8_39  [color=red, key=0, style=solid];
m8_39 -> m8_40  [color=red, key=0, style=solid];
m8_39 -> m8_3  [color=red, key=2, style=dotted];
m8_39 -> m8_4  [color=red, key=2, style=dotted];
m8_40 -> m8_38  [color=blue, key=0, style=bold];
m8_48 -> m8_49  [color=red, key=0, style=solid];
m8_49 -> m8_50  [color=red, key=0, style=solid];
m8_49 -> m8_44  [color=red, key=2, style=dotted];
m8_49 -> m8_4  [color=red, key=2, style=dotted];
m8_50 -> m8_48  [color=blue, key=0, style=bold];
m8_60 -> m8_61  [color=red, key=0, style=solid];
m8_61 -> m8_62  [color=red, key=0, style=solid];
m8_61 -> m8_44  [color=red, key=2, style=dotted];
m8_61 -> m8_4  [color=red, key=2, style=dotted];
m8_62 -> m8_60  [color=blue, key=0, style=bold];
m8_4 -> m8_5  [color=green, key=0, style=solid];
m8_4 -> m8_6  [key=0, style=solid];
m8_26 -> m8_27  [color=red, key=0, style=solid];
m8_27 -> m8_28  [color=red, key=0, style=solid];
m8_27 -> m8_3  [color=red, key=2, style=dotted];
m8_27 -> m8_4  [color=red, key=2, style=dotted];
m8_28 -> m8_26  [color=blue, key=0, style=bold];
m8_51 -> m8_52  [color=red, key=0, style=solid];
m8_52 -> m8_53  [color=red, key=0, style=solid];
m8_52 -> m8_44  [color=red, key=2, style=dotted];
m8_52 -> m8_4  [color=red, key=2, style=dotted];
m8_53 -> m8_51  [color=blue, key=0, style=bold];
m8_5 -> m8_6  [color=red, key=0, style=solid];
m8_5 -> m8_9  [color=green, key=0, style=solid];
m8_6 -> m8_7  [color=green, key=0, style=solid];
m8_6 -> m8_3  [color=red, key=2, style=dotted];
m8_6 -> m8_4  [color=red, key=2, style=dotted];
m8_6 -> m8_8  [color=green, key=0, style=solid];
m8_7 -> m8_5  [color=blue, key=0, style=bold];
m8_7 -> m8_9  [color=green, key=0, style=solid];
m8_8 -> m8_9  [color=green, key=0, style=solid];
m8_9 -> m8_10  [color=red, key=0, style=solid];
m8_9 -> m8_3  [color=red, key=2, style=dotted];
m8_9 -> m8_4  [color=red, key=2, style=dotted];
m8_9 -> m8_0  [color=blue, key=0, style=bold];
m8_10 -> m8_8  [color=blue, key=0, style=bold];
m8_14 -> m8_15  [color=red, key=0, style=solid];
m8_15 -> m8_16  [color=red, key=0, style=solid];
m8_15 -> m8_3  [color=red, key=2, style=dotted];
m8_15 -> m8_4  [color=red, key=2, style=dotted];
m8_16 -> m8_14  [color=blue, key=0, style=bold];
m8_20 -> m8_21  [color=red, key=0, style=solid];
m8_21 -> m8_22  [color=red, key=0, style=solid];
m8_21 -> m8_3  [color=red, key=2, style=dotted];
m8_21 -> m8_4  [color=red, key=2, style=dotted];
m8_22 -> m8_20  [color=blue, key=0, style=bold];
m8_23 -> m8_24  [color=red, key=0, style=solid];
m8_24 -> m8_25  [color=red, key=0, style=solid];
m8_24 -> m8_3  [color=red, key=2, style=dotted];
m8_24 -> m8_4  [color=red, key=2, style=dotted];
m8_25 -> m8_23  [color=blue, key=0, style=bold];
m8_66 -> m8_67  [color=red, key=0, style=solid];
m8_67 -> m8_68  [color=red, key=0, style=solid];
m8_67 -> m8_44  [color=red, key=2, style=dotted];
m8_67 -> m8_4  [color=red, key=2, style=dotted];
m8_68 -> m8_66  [color=blue, key=0, style=bold];
m8_32 -> m8_33  [color=red, key=0, style=solid];
m8_33 -> m8_34  [color=red, key=0, style=solid];
m8_33 -> m8_3  [color=red, key=2, style=dotted];
m8_33 -> m8_4  [color=red, key=2, style=dotted];
m8_34 -> m8_32  [color=blue, key=0, style=bold];
m8_17 -> m8_18  [color=red, key=0, style=solid];
m8_18 -> m8_19  [color=red, key=0, style=solid];
m8_18 -> m8_3  [color=red, key=2, style=dotted];
m8_18 -> m8_4  [color=red, key=2, style=dotted];
m8_19 -> m8_17  [color=blue, key=0, style=bold];
m8_63 -> m8_64  [color=red, key=0, style=solid];
m8_64 -> m8_65  [color=red, key=0, style=solid];
m8_64 -> m8_44  [color=red, key=2, style=dotted];
m8_64 -> m8_4  [color=red, key=2, style=dotted];
m8_65 -> m8_63  [color=blue, key=0, style=bold];
m8_11 -> m8_12  [color=red, key=0, style=solid];
m8_12 -> m8_13  [color=red, key=0, style=solid];
m8_12 -> m8_3  [color=red, key=2, style=dotted];
m8_12 -> m8_4  [color=red, key=2, style=dotted];
m8_13 -> m8_11  [color=blue, key=0, style=bold];
m8_35 -> m8_36  [color=red, key=0, style=solid];
m8_36 -> m8_37  [color=red, key=0, style=solid];
m8_36 -> m8_3  [color=red, key=2, style=dotted];
m8_36 -> m8_4  [color=red, key=2, style=dotted];
m8_37 -> m8_35  [color=blue, key=0, style=bold];
m8_41 -> m8_42  [color=red, key=0, style=solid];
m8_42 -> m8_43  [color=red, key=0, style=solid];
m8_42 -> m8_44  [color=red, key=2, style=dotted];
m8_42 -> m8_4  [color=red, key=2, style=dotted];
m8_43 -> m8_41  [color=blue, key=0, style=bold];
m8_57 -> m8_58  [color=red, key=0, style=solid];
m8_58 -> m8_59  [color=red, key=0, style=solid];
m8_58 -> m8_44  [color=red, key=2, style=dotted];
m8_58 -> m8_4  [color=red, key=2, style=dotted];
m8_59 -> m8_57  [color=blue, key=0, style=bold];
m8_29 -> m8_30  [color=red, key=0, style=solid];
m8_30 -> m8_31  [color=red, key=0, style=solid];
m8_30 -> m8_3  [color=red, key=2, style=dotted];
m8_30 -> m8_4  [color=red, key=2, style=dotted];
m8_31 -> m8_29  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [color=green, key=0, style=solid];
m8_0 -> m8_3  [color=green, key=1, label=int, style=dashed];
m8_0 -> m8_5  [color=green, key=1, label=string, style=dashed];
m8_0 -> m8_7  [color=green, key=1, label=string, style=dashed];
m8_0 -> m8_8  [color=green, key=1, label=string, style=dashed];
m8_0 -> m8_0  [color=darkorchid, key=3, label="method methodReturn string GetResourceKey", style=bold];
m8_1 -> m8_2  [color=green, key=0, style=solid];
m8_1 -> m8_3  [color=red, key=2, style=dotted];
m8_1 -> m8_4  [color=red, key=2, style=dotted];
m8_2 -> m8_0  [color=blue, key=0, style=bold];
m8_2 -> m8_3  [color=green, key=0, style=solid];
m8_2 -> m8_8  [color=green, key=0, style=solid];
}
