digraph  {
n13 [label="Humanizer.Configuration.CollectionFormatterRegistry", span=""];
n0 [cluster="Humanizer.Configuration.CollectionFormatterRegistry.CollectionFormatterRegistry()", label="Entry Humanizer.Configuration.CollectionFormatterRegistry.CollectionFormatterRegistry()", span="6-6"];
n1 [cluster="Humanizer.Configuration.CollectionFormatterRegistry.CollectionFormatterRegistry()", label="Register(''en'', new OxfordStyleCollectionFormatter(''and''))", span="9-9"];
n2 [cluster="Humanizer.Configuration.CollectionFormatterRegistry.CollectionFormatterRegistry()", label="Register(''it'', new DefaultCollectionFormatter(''e''))", span="10-10"];
n10 [cluster="Humanizer.Localisation.CollectionFormatters.OxfordStyleCollectionFormatter.OxfordStyleCollectionFormatter(string)", label="Entry Humanizer.Localisation.CollectionFormatters.OxfordStyleCollectionFormatter.OxfordStyleCollectionFormatter(string)", span="8-8"];
n11 [cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.Register(string, TLocaliser)", label="Entry Humanizer.Configuration.LocaliserRegistry<TLocaliser>.Register(string, TLocaliser)", span="54-54"];
n3 [cluster="Humanizer.Configuration.CollectionFormatterRegistry.CollectionFormatterRegistry()", label="Register(''de'', new DefaultCollectionFormatter(''und''))", span="11-11"];
n12 [cluster="Humanizer.Localisation.CollectionFormatters.DefaultCollectionFormatter.DefaultCollectionFormatter(string)", label="Entry Humanizer.Localisation.CollectionFormatters.DefaultCollectionFormatter.DefaultCollectionFormatter(string)", span="10-10"];
n4 [cluster="Humanizer.Configuration.CollectionFormatterRegistry.CollectionFormatterRegistry()", label="Register(''dk'', new DefaultCollectionFormatter(''og''))", span="12-12"];
n5 [cluster="Humanizer.Configuration.CollectionFormatterRegistry.CollectionFormatterRegistry()", label="Register(''nl'', new DefaultCollectionFormatter(''en''))", span="13-13"];
n6 [cluster="Humanizer.Configuration.CollectionFormatterRegistry.CollectionFormatterRegistry()", label="Register(''pt'', new DefaultCollectionFormatter(''e''))", span="14-14"];
n7 [cluster="Humanizer.Configuration.CollectionFormatterRegistry.CollectionFormatterRegistry()", label="Register(''nn'', new DefaultCollectionFormatter(''og''))", span="15-15"];
n8 [cluster="Humanizer.Configuration.CollectionFormatterRegistry.CollectionFormatterRegistry()", label="Register(''nb'', new DefaultCollectionFormatter(''og''))", span="16-16"];
n9 [cluster="Humanizer.Configuration.CollectionFormatterRegistry.CollectionFormatterRegistry()", label="Exit Humanizer.Configuration.CollectionFormatterRegistry.CollectionFormatterRegistry()", span="6-6"];
d7 [cluster="Humanizer.Configuration.CollectionFormatterRegistry.CollectionFormatterRegistry()", color=green, community=0, label="0: Register(''ro'', new DefaultCollectionFormatter(''și''))", span="15-15"];
d6 [cluster="Humanizer.Configuration.CollectionFormatterRegistry.CollectionFormatterRegistry()", label="Register(''pt'', new DefaultCollectionFormatter(''e''))", span="14-14"];
d8 [cluster="Humanizer.Configuration.CollectionFormatterRegistry.CollectionFormatterRegistry()", label="Register(''nn'', new DefaultCollectionFormatter(''og''))", span="16-16"];
m0_15 [cluster="Humanizer.Tests.Localisation.roRO.CollectionFormatterTests.MoreThanTwoItems()", file="CollectionFormatterTests.cs", label="Entry Humanizer.Tests.Localisation.roRO.CollectionFormatterTests.MoreThanTwoItems()", span="29-29"];
m0_16 [cluster="Humanizer.Tests.Localisation.roRO.CollectionFormatterTests.MoreThanTwoItems()", color=green, community=0, file="CollectionFormatterTests.cs", label="0: var collection = new List<int>(new int[] { 1, 2, 3 })", span="31-31"];
m0_17 [cluster="Humanizer.Tests.Localisation.roRO.CollectionFormatterTests.MoreThanTwoItems()", color=green, community=0, file="CollectionFormatterTests.cs", label="0: var humanized = ''1, 2 și 3''", span="32-32"];
m0_18 [cluster="Humanizer.Tests.Localisation.roRO.CollectionFormatterTests.MoreThanTwoItems()", color=green, community=0, file="CollectionFormatterTests.cs", label="0: Assert.Equal(humanized, collection.Humanize())", span="33-33"];
m0_19 [cluster="Humanizer.Tests.Localisation.roRO.CollectionFormatterTests.MoreThanTwoItems()", file="CollectionFormatterTests.cs", label="Exit Humanizer.Tests.Localisation.roRO.CollectionFormatterTests.MoreThanTwoItems()", span="29-29"];
m0_8 [cluster="System.Collections.Generic.IEnumerable<T>.Humanize<T>()", file="CollectionFormatterTests.cs", label="Entry System.Collections.Generic.IEnumerable<T>.Humanize<T>()", span="17-17"];
m0_9 [cluster="Unk.Equal", file="CollectionFormatterTests.cs", label="Entry Unk.Equal", span=""];
m0_7 [cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", file="CollectionFormatterTests.cs", label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m0_2 [cluster="Humanizer.Tests.Localisation.roRO.CollectionFormatterTests.OneItem()", file="CollectionFormatterTests.cs", label="Entry Humanizer.Tests.Localisation.roRO.CollectionFormatterTests.OneItem()", span="13-13"];
m0_3 [cluster="Humanizer.Tests.Localisation.roRO.CollectionFormatterTests.OneItem()", color=green, community=0, file="CollectionFormatterTests.cs", label="0: var collection = new List<int>(new int[] { 1 })", span="15-15"];
m0_4 [cluster="Humanizer.Tests.Localisation.roRO.CollectionFormatterTests.OneItem()", color=green, community=0, file="CollectionFormatterTests.cs", label="0: var humanized = ''1''", span="16-16"];
m0_5 [cluster="Humanizer.Tests.Localisation.roRO.CollectionFormatterTests.OneItem()", color=green, community=0, file="CollectionFormatterTests.cs", label="0: Assert.Equal(humanized, collection.Humanize())", span="17-17"];
m0_6 [cluster="Humanizer.Tests.Localisation.roRO.CollectionFormatterTests.OneItem()", file="CollectionFormatterTests.cs", label="Exit Humanizer.Tests.Localisation.roRO.CollectionFormatterTests.OneItem()", span="13-13"];
m0_10 [cluster="Humanizer.Tests.Localisation.roRO.CollectionFormatterTests.TwoItems()", file="CollectionFormatterTests.cs", label="Entry Humanizer.Tests.Localisation.roRO.CollectionFormatterTests.TwoItems()", span="21-21"];
m0_11 [cluster="Humanizer.Tests.Localisation.roRO.CollectionFormatterTests.TwoItems()", color=green, community=0, file="CollectionFormatterTests.cs", label="0: var collection = new List<int>(new int[] { 1, 2 })", span="23-23"];
m0_12 [cluster="Humanizer.Tests.Localisation.roRO.CollectionFormatterTests.TwoItems()", color=green, community=0, file="CollectionFormatterTests.cs", label="0: var humanized = ''1 și 2''", span="24-24"];
m0_13 [cluster="Humanizer.Tests.Localisation.roRO.CollectionFormatterTests.TwoItems()", color=green, community=0, file="CollectionFormatterTests.cs", label="0: Assert.Equal(humanized, collection.Humanize())", span="25-25"];
m0_14 [cluster="Humanizer.Tests.Localisation.roRO.CollectionFormatterTests.TwoItems()", file="CollectionFormatterTests.cs", label="Exit Humanizer.Tests.Localisation.roRO.CollectionFormatterTests.TwoItems()", span="21-21"];
m1_19 [cluster="string.ToQuantity(int, string, System.IFormatProvider)", file="ToQuantityTests.cs", label="Entry string.ToQuantity(int, string, System.IFormatProvider)", span="64-64"];
m1_24 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="ToQuantityTests.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m1_5 [cluster="string.ToQuantity(int, Humanizer.ShowQuantityAs)", file="ToQuantityTests.cs", label="Entry string.ToQuantity(int, Humanizer.ShowQuantityAs)", span="46-46"];
m1_0 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityTests()", file="ToQuantityTests.cs", label="Entry Humanizer.Tests.ToQuantityTests.ToQuantityTests()", span="8-8"];
m1_1 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityTests()", file="ToQuantityTests.cs", label="Exit Humanizer.Tests.ToQuantityTests.ToQuantityTests()", span="8-8"];
m1_2 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", file="ToQuantityTests.cs", label="Entry Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", span="25-25"];
m1_3 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", color=green, community=0, file="ToQuantityTests.cs", label="0: Assert.Equal(expected, word.ToQuantity(quatity))", span="27-27"];
m1_4 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", file="ToQuantityTests.cs", label="Exit Humanizer.Tests.ToQuantityTests.ToQuantity(string, int, string)", span="25-25"];
m1_6 [cluster="Unk.Equal", file="ToQuantityTests.cs", label="Entry Unk.Equal", span=""];
m1_13 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWords(string, int, string)", file="ToQuantityTests.cs", label="Entry Humanizer.Tests.ToQuantityTests.ToQuantityWords(string, int, string)", span="78-78"];
m1_14 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWords(string, int, string)", color=green, community=0, file="ToQuantityTests.cs", label="0: Assert.Equal(expected, word.ToQuantity(quatity, ShowQuantityAs.Words))", span="80-80"];
m1_15 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWords(string, int, string)", file="ToQuantityTests.cs", label="Exit Humanizer.Tests.ToQuantityTests.ToQuantityWords(string, int, string)", span="78-78"];
m1_16 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWordsWithCurrentCultureFormatting(string, int, string, string)", file="ToQuantityTests.cs", label="Entry Humanizer.Tests.ToQuantityTests.ToQuantityWordsWithCurrentCultureFormatting(string, int, string, string)", span="95-95"];
m1_17 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWordsWithCurrentCultureFormatting(string, int, string, string)", file="ToQuantityTests.cs", label="Assert.Equal(expected, word.ToQuantity(quantity, format))", span="97-97"];
m1_18 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWordsWithCurrentCultureFormatting(string, int, string, string)", file="ToQuantityTests.cs", label="Exit Humanizer.Tests.ToQuantityTests.ToQuantityWordsWithCurrentCultureFormatting(string, int, string, string)", span="95-95"];
m1_25 [cluster="System.StringComparer.Create(System.Globalization.CultureInfo, bool)", file="ToQuantityTests.cs", label="Entry System.StringComparer.Create(System.Globalization.CultureInfo, bool)", span="0-0"];
m1_20 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWordsWithCustomCultureFormatting(string, int, string, string, string)", file="ToQuantityTests.cs", label="Entry Humanizer.Tests.ToQuantityTests.ToQuantityWordsWithCustomCultureFormatting(string, int, string, string, string)", span="110-110"];
m1_21 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWordsWithCustomCultureFormatting(string, int, string, string, string)", file="ToQuantityTests.cs", label="var culture = new CultureInfo(cultureCode)", span="112-112"];
m1_22 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWordsWithCustomCultureFormatting(string, int, string, string, string)", file="ToQuantityTests.cs", label="Assert.Equal(expected, word.ToQuantity(quantity, format, culture), StringComparer.Create(culture, false))", span="113-113"];
m1_23 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWordsWithCustomCultureFormatting(string, int, string, string, string)", file="ToQuantityTests.cs", label="Exit Humanizer.Tests.ToQuantityTests.ToQuantityWordsWithCustomCultureFormatting(string, int, string, string, string)", span="110-110"];
m1_7 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", file="ToQuantityTests.cs", label="Entry Humanizer.Tests.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", span="42-42"];
m1_8 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", color=green, community=0, file="ToQuantityTests.cs", label="0: Assert.Equal(expected, word.ToQuantity(quatity, ShowQuantityAs.None))", span="44-44"];
m1_9 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", file="ToQuantityTests.cs", label="Exit Humanizer.Tests.ToQuantityTests.ToQuantityWithNoQuantity(string, int, string)", span="42-42"];
m1_10 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityNumeric(string, int, string)", file="ToQuantityTests.cs", label="Entry Humanizer.Tests.ToQuantityTests.ToQuantityNumeric(string, int, string)", span="59-59"];
m1_11 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityNumeric(string, int, string)", color=green, community=0, file="ToQuantityTests.cs", label="0: Assert.Equal(expected, word.ToQuantity(quatity, ShowQuantityAs.Numeric))", span="62-62"];
m1_12 [cluster="Humanizer.Tests.ToQuantityTests.ToQuantityNumeric(string, int, string)", file="ToQuantityTests.cs", label="Exit Humanizer.Tests.ToQuantityTests.ToQuantityNumeric(string, int, string)", span="59-59"];
n13 -> n1  [color=darkseagreen4, key=1, label="Humanizer.Configuration.CollectionFormatterRegistry", style=dashed];
n13 -> n2  [color=darkseagreen4, key=1, label="Humanizer.Configuration.CollectionFormatterRegistry", style=dashed];
n13 -> n3  [color=darkseagreen4, key=1, label="Humanizer.Configuration.CollectionFormatterRegistry", style=dashed];
n13 -> n4  [color=darkseagreen4, key=1, label="Humanizer.Configuration.CollectionFormatterRegistry", style=dashed];
n13 -> n5  [color=darkseagreen4, key=1, label="Humanizer.Configuration.CollectionFormatterRegistry", style=dashed];
n13 -> n6  [color=darkseagreen4, key=1, label="Humanizer.Configuration.CollectionFormatterRegistry", style=dashed];
n13 -> n7  [color=darkseagreen4, key=1, label="Humanizer.Configuration.CollectionFormatterRegistry", style=dashed];
n13 -> n8  [color=darkseagreen4, key=1, label="Humanizer.Configuration.CollectionFormatterRegistry", style=dashed];
n13 -> d7  [color=green, key=1, label="Humanizer.Configuration.CollectionFormatterRegistry", style=dashed];
n13 -> d6  [color=darkseagreen4, key=1, label="Humanizer.Configuration.CollectionFormatterRegistry", style=dashed];
n13 -> d8  [color=darkseagreen4, key=1, label="Humanizer.Configuration.CollectionFormatterRegistry", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n10  [key=2, style=dotted];
n1 -> n11  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n12  [key=2, style=dotted];
n2 -> n11  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n3 -> n12  [key=2, style=dotted];
n3 -> n11  [key=2, style=dotted];
n4 -> n5  [key=0, style=solid];
n4 -> n12  [key=2, style=dotted];
n4 -> n11  [key=2, style=dotted];
n5 -> n6  [key=0, style=solid];
n5 -> n12  [key=2, style=dotted];
n5 -> n11  [key=2, style=dotted];
n5 -> d6  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n6 -> n12  [key=2, style=dotted];
n6 -> n11  [key=2, style=dotted];
n7 -> n8  [key=0, style=solid];
n7 -> n12  [key=2, style=dotted];
n7 -> n11  [key=2, style=dotted];
n8 -> n9  [key=0, style=solid];
n8 -> n12  [key=2, style=dotted];
n8 -> n11  [key=2, style=dotted];
n9 -> n0  [color=blue, key=0, style=bold];
d7 -> d8  [color=green, key=0, style=solid];
d7 -> n12  [color=green, key=2, style=dotted];
d7 -> n11  [color=green, key=2, style=dotted];
d6 -> d7  [color=green, key=0, style=solid];
d6 -> n12  [key=2, style=dotted];
d6 -> n11  [key=2, style=dotted];
d8 -> n8  [key=0, style=solid];
d8 -> n12  [key=2, style=dotted];
d8 -> n11  [key=2, style=dotted];
m0_15 -> m0_16  [color=green, key=0, style=solid];
m0_16 -> m0_17  [color=green, key=0, style=solid];
m0_16 -> m0_7  [color=green, key=2, style=dotted];
m0_16 -> m0_18  [color=green, key=1, label=collection, style=dashed];
m0_17 -> m0_17  [color=green, key=3, label="Local variable string humanized", style=bold];
m0_17 -> m0_18  [color=green, key=0, style=solid];
m0_18 -> m0_19  [color=green, key=0, style=solid];
m0_18 -> m0_8  [color=green, key=2, style=dotted];
m0_18 -> m0_9  [color=green, key=2, style=dotted];
m0_19 -> m0_15  [color=blue, key=0, style=bold];
m0_2 -> m0_3  [color=green, key=0, style=solid];
m0_3 -> m0_4  [color=green, key=0, style=solid];
m0_3 -> m0_7  [color=green, key=2, style=dotted];
m0_3 -> m0_5  [color=green, key=1, label=collection, style=dashed];
m0_4 -> m0_4  [color=green, key=3, label="Local variable string humanized", style=bold];
m0_4 -> m0_5  [color=green, key=0, style=solid];
m0_5 -> m0_6  [color=green, key=0, style=solid];
m0_5 -> m0_8  [color=green, key=2, style=dotted];
m0_5 -> m0_9  [color=green, key=2, style=dotted];
m0_6 -> m0_2  [color=blue, key=0, style=bold];
m0_10 -> m0_11  [color=green, key=0, style=solid];
m0_11 -> m0_12  [color=green, key=0, style=solid];
m0_11 -> m0_7  [color=green, key=2, style=dotted];
m0_11 -> m0_13  [color=green, key=1, label=collection, style=dashed];
m0_12 -> m0_12  [color=green, key=3, label="Local variable string humanized", style=bold];
m0_12 -> m0_13  [color=green, key=0, style=solid];
m0_13 -> m0_14  [color=green, key=0, style=solid];
m0_13 -> m0_8  [color=green, key=2, style=dotted];
m0_13 -> m0_9  [color=green, key=2, style=dotted];
m0_14 -> m0_10  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [color=blue, key=0, style=bold];
m1_2 -> m1_3  [color=green, key=0, style=solid];
m1_3 -> m1_4  [color=green, key=0, style=solid];
m1_3 -> m1_5  [color=green, key=2, style=dotted];
m1_3 -> m1_6  [color=green, key=2, style=dotted];
m1_4 -> m1_2  [color=blue, key=0, style=bold];
m1_13 -> m1_14  [color=green, key=0, style=solid];
m1_14 -> m1_15  [color=green, key=0, style=solid];
m1_14 -> m1_5  [color=green, key=2, style=dotted];
m1_14 -> m1_6  [color=green, key=2, style=dotted];
m1_15 -> m1_13  [color=blue, key=0, style=bold];
m1_16 -> m1_17  [key=0, style=solid];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_19  [key=2, style=dotted];
m1_17 -> m1_6  [key=2, style=dotted];
m1_18 -> m1_16  [color=blue, key=0, style=bold];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_24  [key=2, style=dotted];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_19  [key=2, style=dotted];
m1_22 -> m1_25  [key=2, style=dotted];
m1_22 -> m1_6  [key=2, style=dotted];
m1_23 -> m1_20  [color=blue, key=0, style=bold];
m1_7 -> m1_8  [color=green, key=0, style=solid];
m1_8 -> m1_9  [color=green, key=0, style=solid];
m1_8 -> m1_5  [color=green, key=2, style=dotted];
m1_8 -> m1_6  [color=green, key=2, style=dotted];
m1_9 -> m1_7  [color=blue, key=0, style=bold];
m1_10 -> m1_11  [color=green, key=0, style=solid];
m1_11 -> m1_12  [color=green, key=0, style=solid];
m1_11 -> m1_5  [color=green, key=2, style=dotted];
m1_11 -> m1_6  [color=green, key=2, style=dotted];
m1_12 -> m1_10  [color=blue, key=0, style=bold];
}
