digraph  {
m4_11 [label="Entry Humanizer.Tests.TransformersTests.TransformToUpperCase(string, string)", span="42-42", cluster="Humanizer.Tests.TransformersTests.TransformToUpperCase(string, string)", file="EnumExtensions.cs"];
m4_12 [label="Assert.Equal(expectedOutput, input.Transform(To.UpperCase))", span="44-44", cluster="Humanizer.Tests.TransformersTests.TransformToUpperCase(string, string)", file="EnumExtensions.cs"];
m4_13 [label="Exit Humanizer.Tests.TransformersTests.TransformToUpperCase(string, string)", span="42-42", cluster="Humanizer.Tests.TransformersTests.TransformToUpperCase(string, string)", file="EnumExtensions.cs"];
m4_4 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="EnumExtensions.cs"];
m4_3 [label="Entry string.Transform(params Humanizer.IStringTransformer[])", span="15-15", cluster="string.Transform(params Humanizer.IStringTransformer[])", file="EnumExtensions.cs"];
m4_5 [label="Entry Humanizer.Tests.TransformersTests.TransformToLowerCase(string, string)", span="24-24", cluster="Humanizer.Tests.TransformersTests.TransformToLowerCase(string, string)", file="EnumExtensions.cs"];
m4_6 [label="Assert.Equal(expectedOutput, input.Transform(To.LowerCase))", span="26-26", cluster="Humanizer.Tests.TransformersTests.TransformToLowerCase(string, string)", file="EnumExtensions.cs"];
m4_7 [label="Exit Humanizer.Tests.TransformersTests.TransformToLowerCase(string, string)", span="24-24", cluster="Humanizer.Tests.TransformersTests.TransformToLowerCase(string, string)", file="EnumExtensions.cs"];
m4_0 [label="Entry Humanizer.Tests.TransformersTests.TransformToTitleCase(string, string)", span="14-14", cluster="Humanizer.Tests.TransformersTests.TransformToTitleCase(string, string)", file="EnumExtensions.cs"];
m4_1 [label="Assert.Equal(expectedOutput, input.Transform(To.TitleCase))", span="16-16", cluster="Humanizer.Tests.TransformersTests.TransformToTitleCase(string, string)", file="EnumExtensions.cs"];
m4_2 [label="Exit Humanizer.Tests.TransformersTests.TransformToTitleCase(string, string)", span="14-14", cluster="Humanizer.Tests.TransformersTests.TransformToTitleCase(string, string)", file="EnumExtensions.cs"];
m4_8 [label="Entry Humanizer.Tests.TransformersTests.TransformToSentenceCase(string, string)", span="33-33", cluster="Humanizer.Tests.TransformersTests.TransformToSentenceCase(string, string)", file="EnumExtensions.cs"];
m4_9 [label="Assert.Equal(expectedOutput, input.Transform(To.SentenceCase))", span="35-35", cluster="Humanizer.Tests.TransformersTests.TransformToSentenceCase(string, string)", file="EnumExtensions.cs"];
m4_10 [label="Exit Humanizer.Tests.TransformersTests.TransformToSentenceCase(string, string)", span="33-33", cluster="Humanizer.Tests.TransformersTests.TransformToSentenceCase(string, string)", file="EnumExtensions.cs"];
m5_8 [label="Entry Humanizer.Tests.Extensions.EnumExtensionsTests.CanApplyTitleCasingOnEnumHumanization()", span="30-30", cluster="Humanizer.Tests.Extensions.EnumExtensionsTests.CanApplyTitleCasingOnEnumHumanization()", file="EnumExtensionsTests.cs"];
m5_9 [label="Assert.Equal(\r\n                ''Member Without Description Attribute'', \r\n                EnumUnderTest.MemberWithoutDescriptionAttribute.Humanize(LetterCasing.Title))", span="32-34", cluster="Humanizer.Tests.Extensions.EnumExtensionsTests.CanApplyTitleCasingOnEnumHumanization()", color=red, community=0, file="EnumExtensionsTests.cs"];
m5_10 [label="Exit Humanizer.Tests.Extensions.EnumExtensionsTests.CanApplyTitleCasingOnEnumHumanization()", span="30-30", cluster="Humanizer.Tests.Extensions.EnumExtensionsTests.CanApplyTitleCasingOnEnumHumanization()", file="EnumExtensionsTests.cs"];
m5_0 [label="Entry Humanizer.Tests.Extensions.EnumExtensionsTests.HonorsDescriptionAttribute()", span="18-18", cluster="Humanizer.Tests.Extensions.EnumExtensionsTests.HonorsDescriptionAttribute()", file="EnumExtensionsTests.cs"];
m5_1 [label="Assert.Equal(CustomDescription, EnumUnderTest.MemberWithDescriptionAttribute.Humanize())", span="20-20", cluster="Humanizer.Tests.Extensions.EnumExtensionsTests.HonorsDescriptionAttribute()", color=red, community=0, file="EnumExtensionsTests.cs"];
m5_2 [label="Exit Humanizer.Tests.Extensions.EnumExtensionsTests.HonorsDescriptionAttribute()", span="18-18", cluster="Humanizer.Tests.Extensions.EnumExtensionsTests.HonorsDescriptionAttribute()", file="EnumExtensionsTests.cs"];
m5_18 [label="Entry System.Enum.ToString()", span="0-0", cluster="System.Enum.ToString()", file="EnumExtensionsTests.cs"];
m5_5 [label="Entry Humanizer.Tests.Extensions.EnumExtensionsTests.CanHumanizeMembersWithoutDescriptionAttribute()", span="24-24", cluster="Humanizer.Tests.Extensions.EnumExtensionsTests.CanHumanizeMembersWithoutDescriptionAttribute()", file="EnumExtensionsTests.cs"];
m5_6 [label="Assert.Equal(''Member without description attribute'', EnumUnderTest.MemberWithoutDescriptionAttribute.Humanize())", span="26-26", cluster="Humanizer.Tests.Extensions.EnumExtensionsTests.CanHumanizeMembersWithoutDescriptionAttribute()", color=red, community=0, file="EnumExtensionsTests.cs"];
m5_7 [label="Exit Humanizer.Tests.Extensions.EnumExtensionsTests.CanHumanizeMembersWithoutDescriptionAttribute()", span="24-24", cluster="Humanizer.Tests.Extensions.EnumExtensionsTests.CanHumanizeMembersWithoutDescriptionAttribute()", file="EnumExtensionsTests.cs"];
m5_15 [label="Entry Humanizer.Tests.Extensions.EnumExtensionsTests.AllCapitalMembersAreReturnedAsIs()", span="46-46", cluster="Humanizer.Tests.Extensions.EnumExtensionsTests.AllCapitalMembersAreReturnedAsIs()", file="EnumExtensionsTests.cs"];
m5_16 [label="Assert.Equal(EnumUnderTest.ALLCAPITALS.ToString(), EnumUnderTest.ALLCAPITALS.Humanize())", span="48-48", cluster="Humanizer.Tests.Extensions.EnumExtensionsTests.AllCapitalMembersAreReturnedAsIs()", file="EnumExtensionsTests.cs"];
m5_17 [label="Exit Humanizer.Tests.Extensions.EnumExtensionsTests.AllCapitalMembersAreReturnedAsIs()", span="46-46", cluster="Humanizer.Tests.Extensions.EnumExtensionsTests.AllCapitalMembersAreReturnedAsIs()", file="EnumExtensionsTests.cs"];
m5_4 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="EnumExtensionsTests.cs"];
m5_3 [label="Entry System.Enum.Humanize()", span="8-8", cluster="System.Enum.Humanize()", file="EnumExtensionsTests.cs"];
m5_11 [label="Entry System.Enum.Humanize(Humanizer.LetterCasing)", span="26-26", cluster="System.Enum.Humanize(Humanizer.LetterCasing)", file="EnumExtensionsTests.cs"];
m5_12 [label="Entry Humanizer.Tests.Extensions.EnumExtensionsTests.CanApplyLowerCaseCasingOnEnumHumanization()", span="38-38", cluster="Humanizer.Tests.Extensions.EnumExtensionsTests.CanApplyLowerCaseCasingOnEnumHumanization()", file="EnumExtensionsTests.cs"];
m5_13 [label="Assert.Equal(\r\n                ''member without description attribute'', \r\n                EnumUnderTest.MemberWithoutDescriptionAttribute.Humanize(LetterCasing.LowerCase))", span="40-42", cluster="Humanizer.Tests.Extensions.EnumExtensionsTests.CanApplyLowerCaseCasingOnEnumHumanization()", color=red, community=0, file="EnumExtensionsTests.cs"];
m5_14 [label="Exit Humanizer.Tests.Extensions.EnumExtensionsTests.CanApplyLowerCaseCasingOnEnumHumanization()", span="38-38", cluster="Humanizer.Tests.Extensions.EnumExtensionsTests.CanApplyLowerCaseCasingOnEnumHumanization()", file="EnumExtensionsTests.cs"];
m10_0 [label="Entry Humanizer.StringExentions.FormatWith(string, params object[])", span="15-15", cluster="Humanizer.StringExentions.FormatWith(string, params object[])", file="StringExtensions.cs"];
m10_1 [label="return String.Format(format, args);", span="17-17", cluster="Humanizer.StringExentions.FormatWith(string, params object[])", file="StringExtensions.cs"];
m10_2 [label="Exit Humanizer.StringExentions.FormatWith(string, params object[])", span="15-15", cluster="Humanizer.StringExentions.FormatWith(string, params object[])", file="StringExtensions.cs"];
m10_3 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="StringExtensions.cs"];
m4_11 -> m4_12  [key=0, style=solid];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_3  [key=2, style=dotted];
m4_12 -> m4_4  [key=2, style=dotted];
m4_13 -> m4_11  [key=0, style=bold, color=blue];
m4_5 -> m4_6  [key=0, style=solid];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_3  [key=2, style=dotted];
m4_6 -> m4_4  [key=2, style=dotted];
m4_7 -> m4_5  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=2, style=dotted];
m4_1 -> m4_4  [key=2, style=dotted];
m4_2 -> m4_0  [key=0, style=bold, color=blue];
m4_8 -> m4_9  [key=0, style=solid];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_3  [key=2, style=dotted];
m4_9 -> m4_4  [key=2, style=dotted];
m4_10 -> m4_8  [key=0, style=bold, color=blue];
m5_8 -> m5_9  [key=0, style=solid, color=red];
m5_9 -> m5_10  [key=0, style=solid, color=red];
m5_9 -> m5_11  [key=2, style=dotted, color=red];
m5_9 -> m5_4  [key=2, style=dotted, color=red];
m5_10 -> m5_8  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid, color=red];
m5_1 -> m5_2  [key=0, style=solid, color=red];
m5_1 -> m5_3  [key=2, style=dotted, color=red];
m5_1 -> m5_4  [key=2, style=dotted, color=red];
m5_2 -> m5_0  [key=0, style=bold, color=blue];
m5_5 -> m5_6  [key=0, style=solid, color=red];
m5_6 -> m5_7  [key=0, style=solid, color=red];
m5_6 -> m5_3  [key=2, style=dotted, color=red];
m5_6 -> m5_4  [key=2, style=dotted, color=red];
m5_7 -> m5_5  [key=0, style=bold, color=blue];
m5_15 -> m5_16  [key=0, style=solid];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_18  [key=2, style=dotted];
m5_16 -> m5_3  [key=2, style=dotted];
m5_16 -> m5_4  [key=2, style=dotted];
m5_17 -> m5_15  [key=0, style=bold, color=blue];
m5_12 -> m5_13  [key=0, style=solid, color=red];
m5_13 -> m5_14  [key=0, style=solid, color=red];
m5_13 -> m5_11  [key=2, style=dotted, color=red];
m5_13 -> m5_4  [key=2, style=dotted, color=red];
m5_14 -> m5_12  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_3  [key=2, style=dotted];
m10_2 -> m10_0  [key=0, style=bold, color=blue];
}
