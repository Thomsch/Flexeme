digraph  {
n0 [cluster="Humanizer.Tests.TruncatorTests.Truncate(string, int, string)", label="Entry Humanizer.Tests.TruncatorTests.Truncate(string, int, string)", span="14-14"];
n1 [cluster="Humanizer.Tests.TruncatorTests.Truncate(string, int, string)", label="Assert.Equal(expectedOutput, input.Truncate(length))", span="16-16"];
n2 [cluster="Humanizer.Tests.TruncatorTests.Truncate(string, int, string)", label="Exit Humanizer.Tests.TruncatorTests.Truncate(string, int, string)", span="14-14"];
n3 [cluster="string.Truncate(int)", label="Entry string.Truncate(int)", span="15-15"];
n4 [cluster="Unk.Equal", label="Entry Unk.Equal", span=""];
n5 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncator(string, int, string)", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncator(string, int, string)", span="26-26"];
n6 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncator(string, int, string)", label="Assert.Equal(expectedOutput, input.Truncate(length, Truncator.FixedLength))", span="28-28"];
n7 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncator(string, int, string)", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncator(string, int, string)", span="26-26"];
n8 [cluster="string.Truncate(int, Humanizer.ITruncator, Humanizer.TruncateFrom)", label="Entry string.Truncate(int, Humanizer.ITruncator, Humanizer.TruncateFrom)", span="28-28"];
n9 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", span="38-38"];
n10 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", label="Assert.Equal(expectedOutput, input.Truncate(length, Truncator.FixedNumberOfCharacters))", span="40-40"];
n11 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", span="38-38"];
n12 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncator(string, int, string)", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncator(string, int, string)", span="51-51"];
n13 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncator(string, int, string)", label="Assert.Equal(expectedOutput, input.Truncate(length, Truncator.FixedNumberOfWords))", span="53-53"];
n14 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncator(string, int, string)", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncator(string, int, string)", span="51-51"];
n15 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationString(string, int, string, string)", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithTruncationString(string, int, string, string)", span="65-65"];
n16 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationString(string, int, string, string)", label="Assert.Equal(expectedOutput, input.Truncate(length, truncationString))", span="67-67"];
n17 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationString(string, int, string, string)", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithTruncationString(string, int, string, string)", span="65-65"];
n18 [cluster="string.Truncate(int, string, Humanizer.TruncateFrom)", label="Entry string.Truncate(int, string, Humanizer.TruncateFrom)", span="41-41"];
n19 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncator(string, int, string, string)", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncator(string, int, string, string)", span="80-80"];
n20 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncator(string, int, string, string)", label="Assert.Equal(expectedOutput, input.Truncate(length, truncationString, Truncator.FixedLength))", span="82-82"];
n21 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncator(string, int, string, string)", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncator(string, int, string, string)", span="80-80"];
n22 [cluster="string.Truncate(int, string, Humanizer.ITruncator, Humanizer.TruncateFrom)", label="Entry string.Truncate(int, string, Humanizer.ITruncator, Humanizer.TruncateFrom)", span="55-55"];
n23 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncator(string, int, string, string)", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncator(string, int, string, string)", span="95-95"];
n24 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncator(string, int, string, string)", label="Assert.Equal(expectedOutput, input.Truncate(length, truncationString, Truncator.FixedNumberOfCharacters))", span="97-97"];
n25 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncator(string, int, string, string)", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncator(string, int, string, string)", span="95-95"];
n26 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)", span="110-110"];
n27 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)", label="Assert.Equal(expectedOutput, input.Truncate(length, truncationString, Truncator.FixedNumberOfWords))", span="112-112"];
n28 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)", span="110-110"];
n29 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncatorTruncateFromLeft(string, int, string)", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncatorTruncateFromLeft(string, int, string)", span="122-122"];
n30 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncatorTruncateFromLeft(string, int, string)", label="Assert.Equal(expectedOutput, input.Truncate(length, Truncator.FixedLength, TruncateFrom.Left))", span="124-124"];
n31 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncatorTruncateFromLeft(string, int, string)", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncatorTruncateFromLeft(string, int, string)", span="122-122"];
n32 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncatorTruncateFromLeft(string, int, string)", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncatorTruncateFromLeft(string, int, string)", span="135-135"];
n33 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncatorTruncateFromLeft(string, int, string)", label="Assert.Equal(expectedOutput, input.Truncate(length, Truncator.FixedNumberOfCharacters, TruncateFrom.Left))", span="137-137"];
n34 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncatorTruncateFromLeft(string, int, string)", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncatorTruncateFromLeft(string, int, string)", span="135-135"];
n35 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncatorTruncateFromLeft(string, int, string)", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncatorTruncateFromLeft(string, int, string)", span="149-149"];
n36 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncatorTruncateFromLeft(string, int, string)", label="Assert.Equal(expectedOutput, input.Truncate(length, Truncator.FixedNumberOfWords, TruncateFrom.Left))", span="151-151"];
n37 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncatorTruncateFromLeft(string, int, string)", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncatorTruncateFromLeft(string, int, string)", span="149-149"];
n38 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncatorTruncateFromLeft(string, int, string, string)", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncatorTruncateFromLeft(string, int, string, string)", span="164-164"];
n39 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncatorTruncateFromLeft(string, int, string, string)", label="Assert.Equal(expectedOutput, input.Truncate(length, truncationString, Truncator.FixedLength, TruncateFrom.Left))", span="166-166"];
n40 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncatorTruncateFromLeft(string, int, string, string)", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncatorTruncateFromLeft(string, int, string, string)", span="164-164"];
n41 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncatorTruncateFromLeft(string, int, string, string)", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncatorTruncateFromLeft(string, int, string, string)", span="179-179"];
n42 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncatorTruncateFromLeft(string, int, string, string)", label="Assert.Equal(expectedOutput, input.Truncate(length, truncationString, Truncator.FixedNumberOfCharacters, TruncateFrom.Left))", span="181-181"];
n43 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncatorTruncateFromLeft(string, int, string, string)", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncatorTruncateFromLeft(string, int, string, string)", span="179-179"];
n44 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncatorTruncateFromLeft(string, int, string, string)", label="Entry Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncatorTruncateFromLeft(string, int, string, string)", span="195-195"];
n45 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncatorTruncateFromLeft(string, int, string, string)", label="Assert.Equal(expectedOutput, input.Truncate(length, truncationString, Truncator.FixedNumberOfWords, TruncateFrom.Left))", span="197-197"];
n46 [cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncatorTruncateFromLeft(string, int, string, string)", label="Exit Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncatorTruncateFromLeft(string, int, string, string)", span="195-195"];
m0_216 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongBytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongBytes()", span="326-326"];
m0_218 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongBytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromBytes(size), size.Bytes())", span="329-329"];
m0_217 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongBytes()", file="ByteSizeExtensionsTests.cs", label="long size = 2", span="328-328"];
m0_219 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongBytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongBytes()", span="326-326"];
m0_210 [cluster="uint.Bytes()", file="ByteSizeExtensionsTests.cs", label="Entry uint.Bytes()", span="136-136"];
m0_205 [cluster="int.Bytes()", file="ByteSizeExtensionsTests.cs", label="Entry int.Bytes()", span="126-126"];
m0_68 [cluster="ushort.Gigabytes()", file="ByteSizeExtensionsTests.cs", label="Entry ushort.Gigabytes()", span="356-356"];
m0_254 [cluster="uint.Bits()", file="ByteSizeExtensionsTests.cs", label="Entry uint.Bits()", span="66-66"];
m0_58 [cluster="sbyte.Gigabytes()", file="ByteSizeExtensionsTests.cs", label="Entry sbyte.Gigabytes()", span="336-336"];
m0_88 [cluster="long.Gigabytes()", file="ByteSizeExtensionsTests.cs", label="Entry long.Gigabytes()", span="396-396"];
m0_112 [cluster="ushort.Megabytes()", file="ByteSizeExtensionsTests.cs", label="Entry ushort.Megabytes()", span="276-276"];
m0_74 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintGigabytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintGigabytes()", span="111-111"];
m0_76 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintGigabytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromGigabytes(size), size.Gigabytes())", span="114-114"];
m0_75 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintGigabytes()", file="ByteSizeExtensionsTests.cs", label="uint size = 2", span="113-113"];
m0_77 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintGigabytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintGigabytes()", span="111-111"];
m0_171 [cluster="double.Kilobytes()", file="ByteSizeExtensionsTests.cs", label="Entry double.Kilobytes()", span="226-226"];
m0_83 [cluster="double.Gigabytes()", file="ByteSizeExtensionsTests.cs", label="Entry double.Gigabytes()", span="386-386"];
m0_141 [cluster="byte.Kilobytes()", file="ByteSizeExtensionsTests.cs", label="Entry byte.Kilobytes()", span="166-166"];
m0_221 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBytes(double, string, string)", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBytes(double, string, string)", span="338-338"];
m0_222 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBytes(double, string, string)", color=green, community=0, file="ByteSizeExtensionsTests.cs", label="0: Assert.Equal(expectedValue, input.Bytes().Humanize(format))", span="340-340"];
m0_223 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBytes(double, string, string)", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBytes(double, string, string)", span="338-338"];
m0_103 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortMegabytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortMegabytes()", span="157-157"];
m0_105 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortMegabytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromMegabytes(size), size.Megabytes())", span="160-160"];
m0_104 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortMegabytes()", file="ByteSizeExtensionsTests.cs", label="short size = 2", span="159-159"];
m0_106 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortMegabytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortMegabytes()", span="157-157"];
m0_215 [cluster="double.Bytes()", file="ByteSizeExtensionsTests.cs", label="Entry double.Bytes()", span="146-146"];
m0_44 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesTerabytes(double, string, string)", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesTerabytes(double, string, string)", span="70-70"];
m0_45 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesTerabytes(double, string, string)", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(expectedValue, input.Terabytes().Humanize(format))", span="72-72"];
m0_46 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesTerabytes(double, string, string)", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesTerabytes(double, string, string)", span="70-70"];
m0_230 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBits()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBits()", span="351-351"];
m0_232 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBits()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromBits(size), size.Bits())", span="354-354"];
m0_231 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBits()", file="ByteSizeExtensionsTests.cs", label="sbyte size = 2", span="353-353"];
m0_233 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBits()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBits()", span="351-351"];
m0_151 [cluster="short.Kilobytes()", file="ByteSizeExtensionsTests.cs", label="Entry short.Kilobytes()", span="186-186"];
m0_249 [cluster="int.Bits()", file="ByteSizeExtensionsTests.cs", label="Entry int.Bits()", span="56-56"];
m0_102 [cluster="sbyte.Megabytes()", file="ByteSizeExtensionsTests.cs", label="Entry sbyte.Megabytes()", span="256-256"];
m0_191 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBytes()", span="291-291"];
m0_193 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromBytes(size), size.Bytes())", span="294-294"];
m0_192 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBytes()", file="ByteSizeExtensionsTests.cs", label="short size = 2", span="293-293"];
m0_194 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBytes()", span="291-291"];
m0_7 [cluster="byte.Terabytes()", file="ByteSizeExtensionsTests.cs", label="Entry byte.Terabytes()", span="406-406"];
m0_172 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongKilobytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongKilobytes()", span="259-259"];
m0_174 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongKilobytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromKilobytes(size), size.Kilobytes())", span="262-262"];
m0_173 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongKilobytes()", file="ByteSizeExtensionsTests.cs", label="long size = 2", span="261-261"];
m0_175 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongKilobytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongKilobytes()", span="259-259"];
m0_38 [cluster="double.Terabytes()", file="ByteSizeExtensionsTests.cs", label="Entry double.Terabytes()", span="466-466"];
m0_195 [cluster="short.Bytes()", file="ByteSizeExtensionsTests.cs", label="Entry short.Bytes()", span="106-106"];
m0_244 [cluster="ushort.Bits()", file="ByteSizeExtensionsTests.cs", label="Entry ushort.Bits()", span="46-46"];
m0_184 [cluster="Humanizer.Bytes.ByteSize.FromBytes(double)", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromBytes(double)", span="120-120"];
m0_39 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongTerabytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongTerabytes()", span="60-60"];
m0_41 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongTerabytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromTerabytes(size), size.Terabytes())", span="63-63"];
m0_40 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongTerabytes()", file="ByteSizeExtensionsTests.cs", label="long size = 2", span="62-62"];
m0_42 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongTerabytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongTerabytes()", span="60-60"];
m0_162 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintKilobytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintKilobytes()", span="245-245"];
m0_164 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintKilobytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromKilobytes(size), size.Kilobytes())", span="248-248"];
m0_163 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintKilobytes()", file="ByteSizeExtensionsTests.cs", label="uint size = 2", span="247-247"];
m0_165 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintKilobytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintKilobytes()", span="245-245"];
m0_123 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleMegabytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleMegabytes()", span="185-185"];
m0_125 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleMegabytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromMegabytes(size), size.Megabytes())", span="188-188"];
m0_124 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleMegabytes()", file="ByteSizeExtensionsTests.cs", label="double size = 2", span="187-187"];
m0_126 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleMegabytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleMegabytes()", span="185-185"];
m0_260 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBits(long, string, string)", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBits(long, string, string)", span="398-398"];
m0_261 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBits(long, string, string)", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(expectedValue, input.Bits().Humanize(format))", span="400-400"];
m0_262 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBits(long, string, string)", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBits(long, string, string)", span="398-398"];
m0_201 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBytes()", span="305-305"];
m0_203 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromBytes(size), size.Bytes())", span="308-308"];
m0_202 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBytes()", file="ByteSizeExtensionsTests.cs", label="int size = 2", span="307-307"];
m0_204 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBytes()", span="305-305"];
m0_47 [cluster="Humanizer.Bytes.ByteSize.Humanize(string)", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Bytes.ByteSize.Humanize(string)", span="487-487"];
m0_23 [cluster="ushort.Terabytes()", file="ByteSizeExtensionsTests.cs", label="Entry ushort.Terabytes()", span="436-436"];
m0_13 [cluster="sbyte.Terabytes()", file="ByteSizeExtensionsTests.cs", label="Entry sbyte.Terabytes()", span="416-416"];
m0_239 [cluster="short.Bits()", file="ByteSizeExtensionsTests.cs", label="Entry short.Bits()", span="36-36"];
m0_48 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteGigabytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteGigabytes()", span="76-76"];
m0_50 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteGigabytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromGigabytes(size), size.Gigabytes())", span="79-79"];
m0_49 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteGigabytes()", file="ByteSizeExtensionsTests.cs", label="byte size = 2", span="78-78"];
m0_51 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteGigabytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteGigabytes()", span="76-76"];
m0_156 [cluster="ushort.Kilobytes()", file="ByteSizeExtensionsTests.cs", label="Entry ushort.Kilobytes()", span="196-196"];
m0_108 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortMegabytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortMegabytes()", span="164-164"];
m0_110 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortMegabytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromMegabytes(size), size.Megabytes())", span="167-167"];
m0_109 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortMegabytes()", file="ByteSizeExtensionsTests.cs", label="ushort size = 2", span="166-166"];
m0_111 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortMegabytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortMegabytes()", span="164-164"];
m0_167 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleKilobytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleKilobytes()", span="252-252"];
m0_169 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleKilobytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromKilobytes(size), size.Kilobytes())", span="255-255"];
m0_168 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleKilobytes()", file="ByteSizeExtensionsTests.cs", label="double size = 2", span="254-254"];
m0_170 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleKilobytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleKilobytes()", span="252-252"];
m0_34 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleTerabytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleTerabytes()", span="53-53"];
m0_36 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleTerabytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromTerabytes(size), size.Terabytes())", span="56-56"];
m0_35 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleTerabytes()", file="ByteSizeExtensionsTests.cs", label="double size = 2", span="55-55"];
m0_37 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleTerabytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleTerabytes()", span="53-53"];
m0_118 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintMegabytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintMegabytes()", span="178-178"];
m0_120 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintMegabytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromMegabytes(size), size.Megabytes())", span="181-181"];
m0_119 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintMegabytes()", file="ByteSizeExtensionsTests.cs", label="uint size = 2", span="180-180"];
m0_121 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintMegabytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintMegabytes()", span="178-178"];
m0_127 [cluster="double.Megabytes()", file="ByteSizeExtensionsTests.cs", label="Entry double.Megabytes()", span="306-306"];
m0_69 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntGigabytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntGigabytes()", span="104-104"];
m0_71 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntGigabytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromGigabytes(size), size.Gigabytes())", span="107-107"];
m0_70 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntGigabytes()", file="ByteSizeExtensionsTests.cs", label="int size = 2", span="106-106"];
m0_72 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntGigabytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntGigabytes()", span="104-104"];
m0_24 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntTerabytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntTerabytes()", span="39-39"];
m0_26 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntTerabytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromTerabytes(size), size.Terabytes())", span="42-42"];
m0_25 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntTerabytes()", file="ByteSizeExtensionsTests.cs", label="int size = 2", span="41-41"];
m0_27 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntTerabytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntTerabytes()", span="39-39"];
m0_97 [cluster="byte.Megabytes()", file="ByteSizeExtensionsTests.cs", label="Entry byte.Megabytes()", span="246-246"];
m0_211 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleBytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleBytes()", span="319-319"];
m0_213 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleBytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromBytes(size), size.Bytes())", span="322-322"];
m0_212 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleBytes()", file="ByteSizeExtensionsTests.cs", label="double size = 2", span="321-321"];
m0_214 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleBytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleBytes()", span="319-319"];
m0_43 [cluster="long.Terabytes()", file="ByteSizeExtensionsTests.cs", label="Entry long.Terabytes()", span="476-476"];
m0_128 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongMegabytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongMegabytes()", span="192-192"];
m0_130 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongMegabytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromMegabytes(size), size.Megabytes())", span="195-195"];
m0_129 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongMegabytes()", file="ByteSizeExtensionsTests.cs", label="long size = 2", span="194-194"];
m0_131 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongMegabytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongMegabytes()", span="192-192"];
m0_200 [cluster="ushort.Bytes()", file="ByteSizeExtensionsTests.cs", label="Entry ushort.Bytes()", span="116-116"];
m0_117 [cluster="int.Megabytes()", file="ByteSizeExtensionsTests.cs", label="Entry int.Megabytes()", span="286-286"];
m0_96 [cluster="Humanizer.Bytes.ByteSize.FromMegabytes(double)", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromMegabytes(double)", span="130-130"];
m0_186 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBytes()", span="284-284"];
m0_188 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromBytes(size), size.Bytes())", span="287-287"];
m0_187 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBytes()", file="ByteSizeExtensionsTests.cs", label="sbyte size = 2", span="286-286"];
m0_189 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBytes()", span="284-284"];
m0_177 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesKilobytes(double, string, string)", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesKilobytes(double, string, string)", span="271-271"];
m0_178 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesKilobytes(double, string, string)", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(expectedValue, input.Kilobytes().Humanize(format))", span="273-273"];
m0_179 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesKilobytes(double, string, string)", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesKilobytes(double, string, string)", span="271-271"];
m0_92 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteMegabytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteMegabytes()", span="143-143"];
m0_94 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteMegabytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromMegabytes(size), size.Megabytes())", span="146-146"];
m0_93 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteMegabytes()", file="ByteSizeExtensionsTests.cs", label="byte size = 2", span="145-145"];
m0_95 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteMegabytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteMegabytes()", span="143-143"];
m0_206 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBytes()", span="312-312"];
m0_208 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromBytes(size), size.Bytes())", span="315-315"];
m0_207 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBytes()", file="ByteSizeExtensionsTests.cs", label="uint size = 2", span="314-314"];
m0_209 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBytes()", span="312-312"];
m0_240 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBits()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBits()", span="365-365"];
m0_242 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBits()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromBits(size), size.Bits())", span="368-368"];
m0_241 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBits()", file="ByteSizeExtensionsTests.cs", label="ushort size = 2", span="367-367"];
m0_243 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBits()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBits()", span="365-365"];
m0_185 [cluster="byte.Bytes()", file="ByteSizeExtensionsTests.cs", label="Entry byte.Bytes()", span="86-86"];
m0_136 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteKilobytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteKilobytes()", span="210-210"];
m0_138 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteKilobytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromKilobytes(size), size.Kilobytes())", span="213-213"];
m0_137 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteKilobytes()", file="ByteSizeExtensionsTests.cs", label="byte size = 2", span="212-212"];
m0_139 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteKilobytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteKilobytes()", span="210-210"];
m0_142 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteKilobytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteKilobytes()", span="217-217"];
m0_144 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteKilobytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromKilobytes(size), size.Kilobytes())", span="220-220"];
m0_143 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteKilobytes()", file="ByteSizeExtensionsTests.cs", label="sbyte size = 2", span="219-219"];
m0_145 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteKilobytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteKilobytes()", span="217-217"];
m0_255 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongBits()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongBits()", span="386-386"];
m0_257 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongBits()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromBits(size), size.Bits())", span="389-389"];
m0_256 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongBits()", file="ByteSizeExtensionsTests.cs", label="long size = 2", span="388-388"];
m0_258 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongBits()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongBits()", span="386-386"];
m0_54 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteGigabytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteGigabytes()", span="83-83"];
m0_56 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteGigabytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromGigabytes(size), size.Gigabytes())", span="86-86"];
m0_55 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteGigabytes()", file="ByteSizeExtensionsTests.cs", label="sbyte size = 2", span="85-85"];
m0_57 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteGigabytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteGigabytes()", span="83-83"];
m0_113 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntMegabytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntMegabytes()", span="171-171"];
m0_115 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntMegabytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromMegabytes(size), size.Megabytes())", span="174-174"];
m0_114 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntMegabytes()", file="ByteSizeExtensionsTests.cs", label="int size = 2", span="173-173"];
m0_116 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntMegabytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntMegabytes()", span="171-171"];
m0_152 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortKilobytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortKilobytes()", span="231-231"];
m0_154 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortKilobytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromKilobytes(size), size.Kilobytes())", span="234-234"];
m0_153 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortKilobytes()", file="ByteSizeExtensionsTests.cs", label="ushort size = 2", span="233-233"];
m0_155 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortKilobytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortKilobytes()", span="231-231"];
m0_146 [cluster="sbyte.Kilobytes()", file="ByteSizeExtensionsTests.cs", label="Entry sbyte.Kilobytes()", span="176-176"];
m0_245 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBits()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBits()", span="372-372"];
m0_247 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBits()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromBits(size), size.Bits())", span="375-375"];
m0_246 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBits()", file="ByteSizeExtensionsTests.cs", label="int size = 2", span="374-374"];
m0_248 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBits()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBits()", span="372-372"];
m0_59 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortGigabytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortGigabytes()", span="90-90"];
m0_61 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortGigabytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromGigabytes(size), size.Gigabytes())", span="93-93"];
m0_60 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortGigabytes()", file="ByteSizeExtensionsTests.cs", label="short size = 2", span="92-92"];
m0_62 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortGigabytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortGigabytes()", span="90-90"];
m0_84 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongGigabytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongGigabytes()", span="125-125"];
m0_86 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongGigabytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromGigabytes(size), size.Gigabytes())", span="128-128"];
m0_85 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongGigabytes()", file="ByteSizeExtensionsTests.cs", label="long size = 2", span="127-127"];
m0_87 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongGigabytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongGigabytes()", span="125-125"];
m0_107 [cluster="short.Megabytes()", file="ByteSizeExtensionsTests.cs", label="Entry short.Megabytes()", span="266-266"];
m0_166 [cluster="uint.Kilobytes()", file="ByteSizeExtensionsTests.cs", label="Entry uint.Kilobytes()", span="216-216"];
m0_64 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortGigabytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortGigabytes()", span="97-97"];
m0_66 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortGigabytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromGigabytes(size), size.Gigabytes())", span="100-100"];
m0_65 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortGigabytes()", file="ByteSizeExtensionsTests.cs", label="ushort size = 2", span="99-99"];
m0_67 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortGigabytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortGigabytes()", span="97-97"];
m0_133 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesMegabytes(double, string, string)", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesMegabytes(double, string, string)", span="204-204"];
m0_134 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesMegabytes(double, string, string)", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(expectedValue, input.Megabytes().Humanize(format))", span="206-206"];
m0_135 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesMegabytes(double, string, string)", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesMegabytes(double, string, string)", span="204-204"];
m0_63 [cluster="short.Gigabytes()", file="ByteSizeExtensionsTests.cs", label="Entry short.Gigabytes()", span="346-346"];
m0_259 [cluster="long.Bits()", file="ByteSizeExtensionsTests.cs", label="Entry long.Bits()", span="76-76"];
m0_79 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleGigabytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleGigabytes()", span="118-118"];
m0_81 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleGigabytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromGigabytes(size), size.Gigabytes())", span="121-121"];
m0_80 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleGigabytes()", file="ByteSizeExtensionsTests.cs", label="double size = 2", span="120-120"];
m0_82 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleGigabytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleGigabytes()", span="118-118"];
m0_224 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBits()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBits()", span="344-344"];
m0_226 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBits()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromBits(size), size.Bits())", span="347-347"];
m0_225 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBits()", file="ByteSizeExtensionsTests.cs", label="byte size = 2", span="346-346"];
m0_227 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBits()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBits()", span="344-344"];
m0_18 [cluster="short.Terabytes()", file="ByteSizeExtensionsTests.cs", label="Entry short.Terabytes()", span="426-426"];
m0_33 [cluster="uint.Terabytes()", file="ByteSizeExtensionsTests.cs", label="Entry uint.Terabytes()", span="456-456"];
m0_190 [cluster="sbyte.Bytes()", file="ByteSizeExtensionsTests.cs", label="Entry sbyte.Bytes()", span="96-96"];
m0_229 [cluster="byte.Bits()", file="ByteSizeExtensionsTests.cs", label="Entry byte.Bits()", span="16-16"];
m0_14 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortTerabytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortTerabytes()", span="25-25"];
m0_16 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortTerabytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromTerabytes(size), size.Terabytes())", span="28-28"];
m0_15 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortTerabytes()", file="ByteSizeExtensionsTests.cs", label="short size = 2", span="27-27"];
m0_17 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortTerabytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortTerabytes()", span="25-25"];
m0_228 [cluster="Humanizer.Bytes.ByteSize.FromBits(long)", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromBits(long)", span="115-115"];
m0_78 [cluster="uint.Gigabytes()", file="ByteSizeExtensionsTests.cs", label="Entry uint.Gigabytes()", span="376-376"];
m0_2 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteTerabytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteTerabytes()", span="11-11"];
m0_4 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteTerabytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromTerabytes(size), size.Terabytes())", span="14-14"];
m0_3 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteTerabytes()", file="ByteSizeExtensionsTests.cs", label="byte size = 2", span="13-13"];
m0_5 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteTerabytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteTerabytes()", span="11-11"];
m0_196 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBytes()", span="298-298"];
m0_198 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromBytes(size), size.Bytes())", span="301-301"];
m0_197 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBytes()", file="ByteSizeExtensionsTests.cs", label="ushort size = 2", span="300-300"];
m0_199 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBytes()", span="298-298"];
m0_53 [cluster="byte.Gigabytes()", file="ByteSizeExtensionsTests.cs", label="Entry byte.Gigabytes()", span="326-326"];
m0_157 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntKilobytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntKilobytes()", span="238-238"];
m0_159 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntKilobytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromKilobytes(size), size.Kilobytes())", span="241-241"];
m0_158 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntKilobytes()", file="ByteSizeExtensionsTests.cs", label="int size = 2", span="240-240"];
m0_160 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntKilobytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntKilobytes()", span="238-238"];
m0_9 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteTerabytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteTerabytes()", span="18-18"];
m0_11 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteTerabytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromTerabytes(size), size.Terabytes())", span="21-21"];
m0_10 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteTerabytes()", file="ByteSizeExtensionsTests.cs", label="sbyte size = 2", span="20-20"];
m0_12 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteTerabytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteTerabytes()", span="18-18"];
m0_19 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortTerabytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortTerabytes()", span="32-32"];
m0_21 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortTerabytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromTerabytes(size), size.Terabytes())", span="35-35"];
m0_20 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortTerabytes()", file="ByteSizeExtensionsTests.cs", label="ushort size = 2", span="34-34"];
m0_22 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortTerabytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortTerabytes()", span="32-32"];
m0_161 [cluster="int.Kilobytes()", file="ByteSizeExtensionsTests.cs", label="Entry int.Kilobytes()", span="206-206"];
m0_73 [cluster="int.Gigabytes()", file="ByteSizeExtensionsTests.cs", label="Entry int.Gigabytes()", span="366-366"];
m0_147 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortKilobytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortKilobytes()", span="224-224"];
m0_149 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortKilobytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromKilobytes(size), size.Kilobytes())", span="227-227"];
m0_148 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortKilobytes()", file="ByteSizeExtensionsTests.cs", label="short size = 2", span="226-226"];
m0_150 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortKilobytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortKilobytes()", span="224-224"];
m0_6 [cluster="Humanizer.Bytes.ByteSize.FromTerabytes(double)", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromTerabytes(double)", span="140-140"];
m0_89 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesGigabytes(double, string, string)", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesGigabytes(double, string, string)", span="137-137"];
m0_90 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesGigabytes(double, string, string)", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(expectedValue, input.Gigabytes().Humanize(format))", span="139-139"];
m0_91 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesGigabytes(double, string, string)", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesGigabytes(double, string, string)", span="137-137"];
m0_52 [cluster="Humanizer.Bytes.ByteSize.FromGigabytes(double)", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromGigabytes(double)", span="135-135"];
m0_98 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteMegabytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteMegabytes()", span="150-150"];
m0_100 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteMegabytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromMegabytes(size), size.Megabytes())", span="153-153"];
m0_99 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteMegabytes()", file="ByteSizeExtensionsTests.cs", label="sbyte size = 2", span="152-152"];
m0_101 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteMegabytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteMegabytes()", span="150-150"];
m0_140 [cluster="Humanizer.Bytes.ByteSize.FromKilobytes(double)", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Bytes.ByteSize.FromKilobytes(double)", span="125-125"];
m0_122 [cluster="uint.Megabytes()", file="ByteSizeExtensionsTests.cs", label="Entry uint.Megabytes()", span="296-296"];
m0_176 [cluster="long.Kilobytes()", file="ByteSizeExtensionsTests.cs", label="Entry long.Kilobytes()", span="236-236"];
m0_250 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBits()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBits()", span="379-379"];
m0_252 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBits()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromBits(size), size.Bits())", span="382-382"];
m0_251 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBits()", file="ByteSizeExtensionsTests.cs", label="uint size = 2", span="381-381"];
m0_253 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBits()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBits()", span="379-379"];
m0_132 [cluster="long.Megabytes()", file="ByteSizeExtensionsTests.cs", label="Entry long.Megabytes()", span="316-316"];
m0_29 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintTerabytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintTerabytes()", span="46-46"];
m0_31 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintTerabytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromTerabytes(size), size.Terabytes())", span="49-49"];
m0_30 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintTerabytes()", file="ByteSizeExtensionsTests.cs", label="uint size = 2", span="48-48"];
m0_32 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintTerabytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintTerabytes()", span="46-46"];
m0_180 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBytes()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBytes()", span="277-277"];
m0_182 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBytes()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromBytes(size), size.Bytes())", span="280-280"];
m0_181 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBytes()", file="ByteSizeExtensionsTests.cs", label="byte size = 2", span="279-279"];
m0_183 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBytes()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBytes()", span="277-277"];
m0_28 [cluster="int.Terabytes()", file="ByteSizeExtensionsTests.cs", label="Entry int.Terabytes()", span="446-446"];
m0_234 [cluster="sbyte.Bits()", file="ByteSizeExtensionsTests.cs", label="Entry sbyte.Bits()", span="26-26"];
m0_235 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBits()", file="ByteSizeExtensionsTests.cs", label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBits()", span="358-358"];
m0_237 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBits()", file="ByteSizeExtensionsTests.cs", label="Assert.Equal(ByteSize.FromBits(size), size.Bits())", span="361-361"];
m0_236 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBits()", file="ByteSizeExtensionsTests.cs", label="short size = 2", span="360-360"];
m0_238 [cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBits()", file="ByteSizeExtensionsTests.cs", label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBits()", span="358-358"];
m0_220 [cluster="long.Bytes()", file="ByteSizeExtensionsTests.cs", label="Entry long.Bytes()", span="156-156"];
m1_27 [cluster="System.Collections.Generic.List<T>.List()", file="TimeSpanHumanizeExtensions.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_47 [cluster="Humanizer.TimeSpanHumanizeExtensions.BuildFormatTimePart(Humanizer.Localisation.Formatters.IFormatter, Humanizer.Localisation.TimeUnit, int)", file="TimeSpanHumanizeExtensions.cs", label="Entry Humanizer.TimeSpanHumanizeExtensions.BuildFormatTimePart(Humanizer.Localisation.Formatters.IFormatter, Humanizer.Localisation.TimeUnit, int)", span="155-155"];
m1_81 [cluster="Humanizer.TimeSpanHumanizeExtensions.BuildFormatTimePart(Humanizer.Localisation.Formatters.IFormatter, Humanizer.Localisation.TimeUnit, int)", color=green, community=0, file="TimeSpanHumanizeExtensions.cs", label="0: return amountOfTimeUnits != 0\r\n                ? cultureFormatter.TimeSpanHumanize(timeUnitType, Math.Abs(amountOfTimeUnits))\r\n                : null;", span="158-160"];
m1_82 [cluster="Humanizer.TimeSpanHumanizeExtensions.BuildFormatTimePart(Humanizer.Localisation.Formatters.IFormatter, Humanizer.Localisation.TimeUnit, int)", file="TimeSpanHumanizeExtensions.cs", label="Exit Humanizer.TimeSpanHumanizeExtensions.BuildFormatTimePart(Humanizer.Localisation.Formatters.IFormatter, Humanizer.Localisation.TimeUnit, int)", span="155-155"];
m1_66 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", file="TimeSpanHumanizeExtensions.cs", label="Entry Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", span="129-129"];
m1_72 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", file="TimeSpanHumanizeExtensions.cs", label=isTimeUnitToGetTheMaximumTimeUnit, span="131-131"];
m1_73 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", file="TimeSpanHumanizeExtensions.cs", label="return timespan.Days;", span="133-133"];
m1_74 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", file="TimeSpanHumanizeExtensions.cs", label="return timespan.Days % _daysInAWeek;", span="135-135"];
m1_75 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", file="TimeSpanHumanizeExtensions.cs", label="Exit Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseDaysAsInteger(System.TimeSpan, bool)", span="129-129"];
m1_89 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", file="TimeSpanHumanizeExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", span="0-0"];
m1_39 [cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="TimeSpanHumanizeExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0"];
m1_37 [cluster="System.Enum.GetValues(System.Type)", file="TimeSpanHumanizeExtensions.cs", label="Entry System.Enum.GetValues(System.Type)", span="0-0"];
m1_0 [cluster="Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="TimeSpanHumanizeExtensions.cs", label="Entry Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", span="27-27"];
m1_1 [cluster="Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="TimeSpanHumanizeExtensions.cs", label="return Humanize(timeSpan, precision, false, culture, maxUnit, minUnit);", span="29-29"];
m1_2 [cluster="Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="TimeSpanHumanizeExtensions.cs", label="Exit Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", span="27-27"];
m1_9 [cluster="Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", file="TimeSpanHumanizeExtensions.cs", label="Entry Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", span="173-173"];
m1_93 [cluster="Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", file="TimeSpanHumanizeExtensions.cs", label="!countEmptyUnits", span="175-175"];
m1_94 [cluster="Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", file="TimeSpanHumanizeExtensions.cs", label="timeParts = timeParts.Where(x => x != null)", span="176-176"];
m1_95 [cluster="Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", file="TimeSpanHumanizeExtensions.cs", label="timeParts = timeParts.Take(precision)", span="177-177"];
m1_96 [cluster="Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", file="TimeSpanHumanizeExtensions.cs", label=countEmptyUnits, span="178-178"];
m1_98 [cluster="Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", file="TimeSpanHumanizeExtensions.cs", label="return timeParts;", span="181-181"];
m1_97 [cluster="Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", file="TimeSpanHumanizeExtensions.cs", label="timeParts = timeParts.Where(x => x != null)", span="179-179"];
m1_99 [cluster="Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", file="TimeSpanHumanizeExtensions.cs", label="Exit Humanizer.TimeSpanHumanizeExtensions.SetPrecisionOfTimeSpan(System.Collections.Generic.IEnumerable<string>, int, bool)", span="173-173"];
m1_3 [cluster="Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, bool, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="TimeSpanHumanizeExtensions.cs", label="Entry Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, bool, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", span="42-42"];
m1_4 [cluster="Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, bool, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="TimeSpanHumanizeExtensions.cs", label="IEnumerable<string> timeParts = CreateTheTimePartsWithUperAndLowerLimits(timeSpan, culture, maxUnit, minUnit)", span="44-44"];
m1_5 [cluster="Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, bool, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="TimeSpanHumanizeExtensions.cs", label="timeParts = SetPrecisionOfTimeSpan(timeParts, precision, countEmptyUnits)", span="45-45"];
m1_6 [cluster="Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, bool, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="TimeSpanHumanizeExtensions.cs", label="return ConcatenateTimeSpanParts(timeParts);", span="47-47"];
m1_7 [cluster="Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, bool, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="TimeSpanHumanizeExtensions.cs", label="Exit Humanizer.TimeSpanHumanizeExtensions.Humanize(System.TimeSpan, int, bool, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", span="42-42"];
m1_10 [cluster="Humanizer.TimeSpanHumanizeExtensions.ConcatenateTimeSpanParts(System.Collections.Generic.IEnumerable<string>)", file="TimeSpanHumanizeExtensions.cs", label="Entry Humanizer.TimeSpanHumanizeExtensions.ConcatenateTimeSpanParts(System.Collections.Generic.IEnumerable<string>)", span="184-184"];
m1_107 [cluster="Humanizer.TimeSpanHumanizeExtensions.ConcatenateTimeSpanParts(System.Collections.Generic.IEnumerable<string>)", file="TimeSpanHumanizeExtensions.cs", label="return string.Join('', '', timeSpanParts);", span="186-186"];
m1_108 [cluster="Humanizer.TimeSpanHumanizeExtensions.ConcatenateTimeSpanParts(System.Collections.Generic.IEnumerable<string>)", file="TimeSpanHumanizeExtensions.cs", label="Exit Humanizer.TimeSpanHumanizeExtensions.ConcatenateTimeSpanParts(System.Collections.Generic.IEnumerable<string>)", span="184-184"];
m1_67 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseWeeksAsInteger(System.TimeSpan, bool)", file="TimeSpanHumanizeExtensions.cs", label="Entry Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseWeeksAsInteger(System.TimeSpan, bool)", span="119-119"];
m1_68 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseWeeksAsInteger(System.TimeSpan, bool)", file="TimeSpanHumanizeExtensions.cs", label=isTimeUnitToGetTheMaximumTimeUnit, span="121-121"];
m1_69 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseWeeksAsInteger(System.TimeSpan, bool)", file="TimeSpanHumanizeExtensions.cs", label="return timespan.Days / _daysInAWeek;", span="123-123"];
m1_70 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseWeeksAsInteger(System.TimeSpan, bool)", file="TimeSpanHumanizeExtensions.cs", label="return 0;", span="126-126"];
m1_71 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseWeeksAsInteger(System.TimeSpan, bool)", file="TimeSpanHumanizeExtensions.cs", label="Exit Humanizer.TimeSpanHumanizeExtensions.GetSpecialCaseWeeksAsInteger(System.TimeSpan, bool)", span="119-119"];
m1_84 [cluster="Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", file="TimeSpanHumanizeExtensions.cs", label="Entry Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", span="36-36"];
m1_100 [cluster="Unk.Where", file="TimeSpanHumanizeExtensions.cs", label="Entry Unk.Where", span=""];
m1_8 [cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="TimeSpanHumanizeExtensions.cs", label="Entry Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", span="50-50"];
m1_16 [cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="TimeSpanHumanizeExtensions.cs", label="var timepart = GetTimeUnitPart(timeUnitType, timespan, culture, maxUnit, minUnit, cultureFormatter)", span="59-59"];
m1_15 [cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="TimeSpanHumanizeExtensions.cs", label=timeUnitsEnumTypes, span="57-57"];
m1_11 [cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="TimeSpanHumanizeExtensions.cs", label="var cultureFormatter = Configurator.GetFormatter(culture)", span="52-52"];
m1_17 [cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="TimeSpanHumanizeExtensions.cs", label="timepart != null || firstValueFound", span="61-61"];
m1_19 [cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="TimeSpanHumanizeExtensions.cs", label="timeParts.Add(timepart)", span="64-64"];
m1_13 [cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="TimeSpanHumanizeExtensions.cs", label="IEnumerable<TimeUnit> timeUnitsEnumTypes = GetEnumTypesForTimeUnit()", span="54-54"];
m1_14 [cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="TimeSpanHumanizeExtensions.cs", label="List<string> timeParts = new List<string>()", span="55-55"];
m1_20 [cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="TimeSpanHumanizeExtensions.cs", label="IsContainingOnlyNullValue(timeParts)", span="67-67"];
m1_12 [cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="TimeSpanHumanizeExtensions.cs", label="bool firstValueFound = false", span="53-53"];
m1_21 [cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="TimeSpanHumanizeExtensions.cs", label="string noTimeValueCultureFarmated = cultureFormatter.TimeSpanHumanize_Zero()", span="69-69"];
m1_18 [cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="TimeSpanHumanizeExtensions.cs", label="firstValueFound = true", span="63-63"];
m1_23 [cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="TimeSpanHumanizeExtensions.cs", label="return timeParts;", span="72-72"];
m1_22 [cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="TimeSpanHumanizeExtensions.cs", label="timeParts = CreateTimePartsWithNoTimeValue(noTimeValueCultureFarmated)", span="70-70"];
m1_24 [cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", file="TimeSpanHumanizeExtensions.cs", label="Exit Humanizer.TimeSpanHumanizeExtensions.CreateTheTimePartsWithUperAndLowerLimits(System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit)", span="50-50"];
m1_83 [cluster="System.Math.Abs(int)", file="TimeSpanHumanizeExtensions.cs", label="Entry System.Math.Abs(int)", span="0-0"];
m1_109 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="TimeSpanHumanizeExtensions.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m1_38 [cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="TimeSpanHumanizeExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0"];
m1_26 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetEnumTypesForTimeUnit()", file="TimeSpanHumanizeExtensions.cs", label="Entry Humanizer.TimeSpanHumanizeExtensions.GetEnumTypesForTimeUnit()", span="75-75"];
m1_33 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetEnumTypesForTimeUnit()", file="TimeSpanHumanizeExtensions.cs", label="IEnumerable<TimeUnit> enumTypeEnumerator = (IEnumerable<TimeUnit>)Enum.GetValues(typeof(TimeUnit))", span="77-77"];
m1_35 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetEnumTypesForTimeUnit()", file="TimeSpanHumanizeExtensions.cs", label="return enumTypeEnumerator.Reverse();", span="80-80"];
m1_34 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetEnumTypesForTimeUnit()", file="TimeSpanHumanizeExtensions.cs", label="enumTypeEnumerator = enumTypeEnumerator.Take(_lastTimeUnitTypeIndexImplemented + 1)", span="78-78"];
m1_36 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetEnumTypesForTimeUnit()", file="TimeSpanHumanizeExtensions.cs", label="Exit Humanizer.TimeSpanHumanizeExtensions.GetEnumTypesForTimeUnit()", span="75-75"];
m1_46 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="TimeSpanHumanizeExtensions.cs", label="Entry Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", span="94-94"];
m1_50 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="TimeSpanHumanizeExtensions.cs", label="return GetNormalCaseTimeAsInteger(timespan.Milliseconds, timespan.TotalMilliseconds, isTimeUnitToGetTheMaximumTimeUnit);", span="99-99"];
m1_52 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="TimeSpanHumanizeExtensions.cs", label="return GetNormalCaseTimeAsInteger(timespan.Seconds, timespan.TotalSeconds, isTimeUnitToGetTheMaximumTimeUnit);", span="101-101"];
m1_54 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="TimeSpanHumanizeExtensions.cs", label="return GetNormalCaseTimeAsInteger(timespan.Minutes, timespan.TotalMinutes, isTimeUnitToGetTheMaximumTimeUnit);", span="103-103"];
m1_56 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="TimeSpanHumanizeExtensions.cs", label="return GetNormalCaseTimeAsInteger(timespan.Hours, timespan.TotalHours, isTimeUnitToGetTheMaximumTimeUnit);", span="105-105"];
m1_63 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="TimeSpanHumanizeExtensions.cs", label="return 0;", span="115-115"];
m1_48 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="TimeSpanHumanizeExtensions.cs", label=timeUnitToGet, span="96-96"];
m1_58 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="TimeSpanHumanizeExtensions.cs", label="return GetSpecialCaseDaysAsInteger(timespan, isTimeUnitToGetTheMaximumTimeUnit);", span="107-107"];
m1_60 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="TimeSpanHumanizeExtensions.cs", label="return GetSpecialCaseWeeksAsInteger(timespan, isTimeUnitToGetTheMaximumTimeUnit);", span="109-109"];
m1_49 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="TimeSpanHumanizeExtensions.cs", label="TimeUnit.Millisecond", span="98-98"];
m1_51 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="TimeSpanHumanizeExtensions.cs", label="TimeUnit.Second", span="100-100"];
m1_53 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="TimeSpanHumanizeExtensions.cs", label="TimeUnit.Minute", span="102-102"];
m1_55 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="TimeSpanHumanizeExtensions.cs", label="TimeUnit.Hour", span="104-104"];
m1_62 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="TimeSpanHumanizeExtensions.cs", label="TimeUnit.Year", span="112-112"];
m1_57 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="TimeSpanHumanizeExtensions.cs", label="TimeUnit.Day", span="106-106"];
m1_59 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="TimeSpanHumanizeExtensions.cs", label="TimeUnit.Week", span="108-108"];
m1_61 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="TimeSpanHumanizeExtensions.cs", label="TimeUnit.Month", span="110-110"];
m1_64 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", file="TimeSpanHumanizeExtensions.cs", label="Exit Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitNumericalValue(Humanizer.Localisation.TimeUnit, System.TimeSpan, bool)", span="94-94"];
m1_104 [cluster="lambda expression", file="TimeSpanHumanizeExtensions.cs", label="Entry lambda expression", span="179-179"];
m1_90 [cluster="lambda expression", file="TimeSpanHumanizeExtensions.cs", label="Entry lambda expression", span="170-170"];
m1_101 [cluster="lambda expression", file="TimeSpanHumanizeExtensions.cs", label="Entry lambda expression", span="176-176"];
m1_92 [cluster="lambda expression", file="TimeSpanHumanizeExtensions.cs", label="Exit lambda expression", span="170-170"];
m1_91 [cluster="lambda expression", file="TimeSpanHumanizeExtensions.cs", label="x != null", span="170-170"];
m1_103 [cluster="lambda expression", file="TimeSpanHumanizeExtensions.cs", label="Exit lambda expression", span="176-176"];
m1_102 [cluster="lambda expression", file="TimeSpanHumanizeExtensions.cs", label="x != null", span="176-176"];
m1_105 [cluster="lambda expression", file="TimeSpanHumanizeExtensions.cs", label="x != null", span="179-179"];
m1_106 [cluster="lambda expression", file="TimeSpanHumanizeExtensions.cs", label="Exit lambda expression", span="179-179"];
m1_32 [cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTimePartsWithNoTimeValue(string)", file="TimeSpanHumanizeExtensions.cs", label="Entry Humanizer.TimeSpanHumanizeExtensions.CreateTimePartsWithNoTimeValue(string)", span="163-163"];
m1_85 [cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTimePartsWithNoTimeValue(string)", file="TimeSpanHumanizeExtensions.cs", label="return new List<string>() { noTimeValue };", span="165-165"];
m1_86 [cluster="Humanizer.TimeSpanHumanizeExtensions.CreateTimePartsWithNoTimeValue(string)", file="TimeSpanHumanizeExtensions.cs", label="Exit Humanizer.TimeSpanHumanizeExtensions.CreateTimePartsWithNoTimeValue(string)", span="163-163"];
m1_25 [cluster="Humanizer.Configuration.Configurator.GetFormatter(System.Globalization.CultureInfo)", file="TimeSpanHumanizeExtensions.cs", label="Entry Humanizer.Configuration.Configurator.GetFormatter(System.Globalization.CultureInfo)", span="66-66"];
m1_30 [cluster="Humanizer.TimeSpanHumanizeExtensions.IsContainingOnlyNullValue(System.Collections.Generic.IEnumerable<string>)", file="TimeSpanHumanizeExtensions.cs", label="Entry Humanizer.TimeSpanHumanizeExtensions.IsContainingOnlyNullValue(System.Collections.Generic.IEnumerable<string>)", span="168-168"];
m1_87 [cluster="Humanizer.TimeSpanHumanizeExtensions.IsContainingOnlyNullValue(System.Collections.Generic.IEnumerable<string>)", file="TimeSpanHumanizeExtensions.cs", label="return (timeParts.Count(x => x != null) == 0);", span="170-170"];
m1_88 [cluster="Humanizer.TimeSpanHumanizeExtensions.IsContainingOnlyNullValue(System.Collections.Generic.IEnumerable<string>)", file="TimeSpanHumanizeExtensions.cs", label="Exit Humanizer.TimeSpanHumanizeExtensions.IsContainingOnlyNullValue(System.Collections.Generic.IEnumerable<string>)", span="168-168"];
m1_28 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitPart(Humanizer.Localisation.TimeUnit, System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Formatters.IFormatter)", file="TimeSpanHumanizeExtensions.cs", label="Entry Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitPart(Humanizer.Localisation.TimeUnit, System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Formatters.IFormatter)", span="83-83"];
m1_43 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitPart(Humanizer.Localisation.TimeUnit, System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Formatters.IFormatter)", file="TimeSpanHumanizeExtensions.cs", label="return BuildFormatTimePart(cultureFormatter, timeUnitToGet, numberOfTimeUnits);", span="89-89"];
m1_42 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitPart(Humanizer.Localisation.TimeUnit, System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Formatters.IFormatter)", file="TimeSpanHumanizeExtensions.cs", label="var numberOfTimeUnits = GetTimeUnitNumericalValue(timeUnitToGet, timespan, isTimeUnitToGetTheMaximumTimeUnit)", span="88-88"];
m1_41 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitPart(Humanizer.Localisation.TimeUnit, System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Formatters.IFormatter)", file="TimeSpanHumanizeExtensions.cs", label="var isTimeUnitToGetTheMaximumTimeUnit = (timeUnitToGet == maximumTimeUnit)", span="87-87"];
m1_40 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitPart(Humanizer.Localisation.TimeUnit, System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Formatters.IFormatter)", file="TimeSpanHumanizeExtensions.cs", label="timeUnitToGet <= maximumTimeUnit && timeUnitToGet >= minimumTimeUnit", span="85-85"];
m1_44 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitPart(Humanizer.Localisation.TimeUnit, System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Formatters.IFormatter)", file="TimeSpanHumanizeExtensions.cs", label="return null;", span="91-91"];
m1_45 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitPart(Humanizer.Localisation.TimeUnit, System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Formatters.IFormatter)", file="TimeSpanHumanizeExtensions.cs", label="Exit Humanizer.TimeSpanHumanizeExtensions.GetTimeUnitPart(Humanizer.Localisation.TimeUnit, System.TimeSpan, System.Globalization.CultureInfo, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Formatters.IFormatter)", span="83-83"];
m1_29 [cluster="System.Collections.Generic.List<T>.Add(T)", file="TimeSpanHumanizeExtensions.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m1_31 [cluster="Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize_Zero()", file="TimeSpanHumanizeExtensions.cs", label="Entry Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize_Zero()", span="28-28"];
m1_65 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetNormalCaseTimeAsInteger(int, double, bool)", file="TimeSpanHumanizeExtensions.cs", label="Entry Humanizer.TimeSpanHumanizeExtensions.GetNormalCaseTimeAsInteger(int, double, bool)", span="138-138"];
m1_77 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetNormalCaseTimeAsInteger(int, double, bool)", color=green, community=0, file="TimeSpanHumanizeExtensions.cs", label="1: return (int)totalTimeNumberOfUnits;", span="144-144"];
m1_76 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetNormalCaseTimeAsInteger(int, double, bool)", file="TimeSpanHumanizeExtensions.cs", label=isTimeUnitToGetTheMaximumTimeUnit, span="140-140"];
m1_78 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetNormalCaseTimeAsInteger(int, double, bool)", file="TimeSpanHumanizeExtensions.cs", label="return timeNumberOfUnits;", span="152-152"];
m1_80 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetNormalCaseTimeAsInteger(int, double, bool)", file="TimeSpanHumanizeExtensions.cs", label="return 0;", span="149-149"];
m1_79 [cluster="Humanizer.TimeSpanHumanizeExtensions.GetNormalCaseTimeAsInteger(int, double, bool)", file="TimeSpanHumanizeExtensions.cs", label="Exit Humanizer.TimeSpanHumanizeExtensions.GetNormalCaseTimeAsInteger(int, double, bool)", span="138-138"];
m2_7 [cluster="Humanizer.Localisation.NumberToWords.ArabicNumberToWordsConverter.ArabicNumberToWordsConverter()", file="TimeSpanHumanizeTests.cs", label="Entry Humanizer.Localisation.NumberToWords.ArabicNumberToWordsConverter.ArabicNumberToWordsConverter()", span="4-4"];
m2_40 [cluster="Humanizer.NumberToWordsExtension.ToOrdinalWords(int)", file="TimeSpanHumanizeTests.cs", label="Entry Humanizer.NumberToWordsExtension.ToOrdinalWords(int)", span="52-52"];
m2_41 [cluster="Humanizer.NumberToWordsExtension.ToOrdinalWords(int)", file="TimeSpanHumanizeTests.cs", label="return Converter.ConvertToOrdinal(number);", span="54-54"];
m2_42 [cluster="Humanizer.NumberToWordsExtension.ToOrdinalWords(int)", file="TimeSpanHumanizeTests.cs", label="Exit Humanizer.NumberToWordsExtension.ToOrdinalWords(int)", span="52-52"];
m2_15 [cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.SpanishNumberToWordsConverter()", file="TimeSpanHumanizeTests.cs", label="Entry Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.SpanishNumberToWordsConverter()", span="5-5"];
m2_43 [cluster="Humanizer.Localisation.NumberToWords.INumberToWordsConverter.ConvertToOrdinal(int)", file="TimeSpanHumanizeTests.cs", label="Entry Humanizer.Localisation.NumberToWords.INumberToWordsConverter.ConvertToOrdinal(int)", span="29-29"];
m2_35 [cluster="Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(int)", file="TimeSpanHumanizeTests.cs", label="Entry Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(int)", span="12-12"];
m2_19 [cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.PolishNumberToWordsConverter()", file="TimeSpanHumanizeTests.cs", label="Entry Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.PolishNumberToWordsConverter()", span="6-6"];
m2_32 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="TimeSpanHumanizeTests.cs", label="Entry Humanizer.NumberToWordsExtension.ToWords(int)", span="29-29"];
m2_33 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="TimeSpanHumanizeTests.cs", label="return Converter.Convert(number);", span="31-31"];
m2_34 [cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="TimeSpanHumanizeTests.cs", label="Exit Humanizer.NumberToWordsExtension.ToWords(int)", span="29-29"];
m2_36 [cluster="Humanizer.NumberToWordsExtension.ToWords(int, Humanizer.GrammaticalGender)", file="TimeSpanHumanizeTests.cs", label="Entry Humanizer.NumberToWordsExtension.ToWords(int, Humanizer.GrammaticalGender)", span="42-42"];
m2_37 [cluster="Humanizer.NumberToWordsExtension.ToWords(int, Humanizer.GrammaticalGender)", file="TimeSpanHumanizeTests.cs", label="return Converter.Convert(number, gender);", span="44-44"];
m2_38 [cluster="Humanizer.NumberToWordsExtension.ToWords(int, Humanizer.GrammaticalGender)", file="TimeSpanHumanizeTests.cs", label="Exit Humanizer.NumberToWordsExtension.ToWords(int, Humanizer.GrammaticalGender)", span="42-42"];
m2_39 [cluster="Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", file="TimeSpanHumanizeTests.cs", label="Entry Humanizer.Localisation.NumberToWords.INumberToWordsConverter.Convert(int, Humanizer.GrammaticalGender)", span="22-22"];
m2_23 [cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.BrazilianPortugueseNumberToWordsConverter()", file="TimeSpanHumanizeTests.cs", label="Entry Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.BrazilianPortugueseNumberToWordsConverter()", span="5-5"];
m2_3 [cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.EnglishNumberToWordsConverter()", file="TimeSpanHumanizeTests.cs", label="Entry Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.EnglishNumberToWordsConverter()", span="5-5"];
m2_31 [cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.FrenchNumberToWordsConverter()", file="TimeSpanHumanizeTests.cs", label="Entry Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.FrenchNumberToWordsConverter()", span="5-5"];
m2_11 [cluster="Humanizer.Localisation.NumberToWords.FarsiNumberToWordsConverter.FarsiNumberToWordsConverter()", file="TimeSpanHumanizeTests.cs", label="Entry Humanizer.Localisation.NumberToWords.FarsiNumberToWordsConverter.FarsiNumberToWordsConverter()", span="5-5"];
m2_28 [cluster="lambda expression", file="TimeSpanHumanizeTests.cs", label="Entry lambda expression", span="21-21"];
m2_0 [cluster="lambda expression", file="TimeSpanHumanizeTests.cs", label="Entry lambda expression", span="14-14"];
m2_1 [cluster="lambda expression", file="TimeSpanHumanizeTests.cs", label="new EnglishNumberToWordsConverter()", span="14-14"];
m2_2 [cluster="lambda expression", file="TimeSpanHumanizeTests.cs", label="Exit lambda expression", span="14-14"];
m2_4 [cluster="lambda expression", file="TimeSpanHumanizeTests.cs", label="Entry lambda expression", span="15-15"];
m2_5 [cluster="lambda expression", file="TimeSpanHumanizeTests.cs", label="new ArabicNumberToWordsConverter()", span="15-15"];
m2_6 [cluster="lambda expression", file="TimeSpanHumanizeTests.cs", label="Exit lambda expression", span="15-15"];
m2_8 [cluster="lambda expression", file="TimeSpanHumanizeTests.cs", label="Entry lambda expression", span="16-16"];
m2_9 [cluster="lambda expression", file="TimeSpanHumanizeTests.cs", label="new FarsiNumberToWordsConverter()", span="16-16"];
m2_10 [cluster="lambda expression", file="TimeSpanHumanizeTests.cs", label="Exit lambda expression", span="16-16"];
m2_12 [cluster="lambda expression", file="TimeSpanHumanizeTests.cs", label="Entry lambda expression", span="17-17"];
m2_13 [cluster="lambda expression", file="TimeSpanHumanizeTests.cs", label="new SpanishNumberToWordsConverter()", span="17-17"];
m2_14 [cluster="lambda expression", file="TimeSpanHumanizeTests.cs", label="Exit lambda expression", span="17-17"];
m2_16 [cluster="lambda expression", file="TimeSpanHumanizeTests.cs", label="Entry lambda expression", span="18-18"];
m2_17 [cluster="lambda expression", file="TimeSpanHumanizeTests.cs", label="new PolishNumberToWordsConverter()", span="18-18"];
m2_18 [cluster="lambda expression", file="TimeSpanHumanizeTests.cs", label="Exit lambda expression", span="18-18"];
m2_20 [cluster="lambda expression", file="TimeSpanHumanizeTests.cs", label="Entry lambda expression", span="19-19"];
m2_21 [cluster="lambda expression", file="TimeSpanHumanizeTests.cs", label="new BrazilianPortugueseNumberToWordsConverter()", span="19-19"];
m2_22 [cluster="lambda expression", file="TimeSpanHumanizeTests.cs", label="Exit lambda expression", span="19-19"];
m2_24 [cluster="lambda expression", file="TimeSpanHumanizeTests.cs", label="Entry lambda expression", span="20-20"];
m2_25 [cluster="lambda expression", file="TimeSpanHumanizeTests.cs", label="new RussianNumberToWordsConverter()", span="20-20"];
m2_26 [cluster="lambda expression", file="TimeSpanHumanizeTests.cs", label="Exit lambda expression", span="20-20"];
m2_29 [cluster="lambda expression", file="TimeSpanHumanizeTests.cs", label="new FrenchNumberToWordsConverter()", span="21-21"];
m2_30 [cluster="lambda expression", file="TimeSpanHumanizeTests.cs", label="Exit lambda expression", span="21-21"];
m2_27 [cluster="Humanizer.Localisation.NumberToWords.RussianNumberToWordsConverter.RussianNumberToWordsConverter()", file="TimeSpanHumanizeTests.cs", label="Entry Humanizer.Localisation.NumberToWords.RussianNumberToWordsConverter.RussianNumberToWordsConverter()", span="5-5"];
m3_148 [cluster="Humanizer.InflectorExtensions.Camelize(string)", file="Vocabularies.cs", label="Entry Humanizer.InflectorExtensions.Camelize(string)", span="286-286"];
m3_149 [cluster="Humanizer.InflectorExtensions.Camelize(string)", file="Vocabularies.cs", label="string word = Pascalize(input)", span="288-288"];
m3_150 [cluster="Humanizer.InflectorExtensions.Camelize(string)", file="Vocabularies.cs", label="return word.Substring(0, 1).ToLower() + word.Substring(1);", span="289-289"];
m3_151 [cluster="Humanizer.InflectorExtensions.Camelize(string)", file="Vocabularies.cs", label="Exit Humanizer.InflectorExtensions.Camelize(string)", span="286-286"];
m3_75 [cluster="Humanizer.InflectorExtensions.Rule.Apply(string)", file="Vocabularies.cs", label="return null;", span="137-137"];
m3_79 [cluster="System.Text.RegularExpressions.Regex.Replace(string, string)", file="Vocabularies.cs", label="Entry System.Text.RegularExpressions.Regex.Replace(string, string)", span="0-0"];
m3_76 [cluster="Humanizer.InflectorExtensions.Rule.Apply(string)", file="Vocabularies.cs", label="return _regex.Replace(word, _replacement);", span="140-140"];
m3_153 [cluster="Humanizer.InflectorExtensions.Underscore(string)", file="Vocabularies.cs", label="Entry Humanizer.InflectorExtensions.Underscore(string)", span="297-297"];
m3_154 [cluster="Humanizer.InflectorExtensions.Underscore(string)", file="Vocabularies.cs", label="return Regex.Replace(\r\n                Regex.Replace(\r\n                    Regex.Replace(input, @''([A-Z]+)([A-Z][a-z])'', ''$1_$2''), @''([a-z\d])([A-Z])'', ''$1_$2''), @''[-\s]'', ''_'').ToLower();", span="299-301"];
m3_155 [cluster="Humanizer.InflectorExtensions.Underscore(string)", file="Vocabularies.cs", label="Exit Humanizer.InflectorExtensions.Underscore(string)", span="297-297"];
m3_73 [cluster="Humanizer.InflectorExtensions.Rule.Apply(string)", file="Vocabularies.cs", label="Entry Humanizer.InflectorExtensions.Rule.Apply(string)", span="133-133"];
m3_161 [cluster="Humanizer.InflectorExtensions.Hyphenate(string)", file="Vocabularies.cs", label="Entry Humanizer.InflectorExtensions.Hyphenate(string)", span="319-319"];
m3_162 [cluster="Humanizer.InflectorExtensions.Hyphenate(string)", file="Vocabularies.cs", label="return Dasherize(underscoredWord);", span="321-321"];
m3_163 [cluster="Humanizer.InflectorExtensions.Hyphenate(string)", file="Vocabularies.cs", label="Exit Humanizer.InflectorExtensions.Hyphenate(string)", span="319-319"];
m3_160 [cluster="string.Replace(char, char)", file="Vocabularies.cs", label="Entry string.Replace(char, char)", span="0-0"];
m3_156 [cluster="System.Text.RegularExpressions.Regex.Replace(string, string, string)", file="Vocabularies.cs", label="Entry System.Text.RegularExpressions.Regex.Replace(string, string, string)", span="0-0"];
m3_65 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''aircraft'')", span="95-95"];
m3_90 [cluster="Humanizer.InflectorExtensions.AddSingular(string, string)", file="Vocabularies.cs", label="Singulars.Add(new Rule(rule, replacement))", span="162-162"];
m3_91 [cluster="Humanizer.InflectorExtensions.AddSingular(string, string)", file="Vocabularies.cs", label="Exit Humanizer.InflectorExtensions.AddSingular(string, string)", span="160-160"];
m3_135 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="Vocabularies.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m3_140 [cluster="Humanizer.InflectorExtensions.Pascalize(string)", file="Vocabularies.cs", label="Entry Humanizer.InflectorExtensions.Pascalize(string)", span="276-276"];
m3_141 [cluster="Humanizer.InflectorExtensions.Pascalize(string)", file="Vocabularies.cs", label="return Regex.Replace(input, ''(?:^|_)(.)'', match => match.Groups[1].Value.ToUpper());", span="278-278"];
m3_142 [cluster="Humanizer.InflectorExtensions.Pascalize(string)", file="Vocabularies.cs", label="Exit Humanizer.InflectorExtensions.Pascalize(string)", span="276-276"];
m3_147 [cluster="string.ToUpper()", file="Vocabularies.cs", label="Entry string.ToUpper()", span="0-0"];
m3_152 [cluster="string.Substring(int, int)", file="Vocabularies.cs", label="Entry string.Substring(int, int)", span="0-0"];
m3_95 [cluster="string.Pluralize(bool)", file="Vocabularies.cs", label="Entry string.Pluralize(bool)", span="187-187"];
m3_106 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.IList<Humanizer.InflectorExtensions.Rule>, string)", file="Vocabularies.cs", label="Entry Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.IList<Humanizer.InflectorExtensions.Rule>, string)", span="237-237"];
m3_121 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.IList<Humanizer.InflectorExtensions.Rule>, string)", file="Vocabularies.cs", label="word == null", span="239-239"];
m3_123 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.IList<Humanizer.InflectorExtensions.Rule>, string)", file="Vocabularies.cs", label="IsUncountable(word)", span="242-242"];
m3_124 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.IList<Humanizer.InflectorExtensions.Rule>, string)", file="Vocabularies.cs", label="return word;", span="243-243"];
m3_125 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.IList<Humanizer.InflectorExtensions.Rule>, string)", file="Vocabularies.cs", label="var result = word", span="245-245"];
m3_126 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.IList<Humanizer.InflectorExtensions.Rule>, string)", file="Vocabularies.cs", label="int i = rules.Count - 1", span="246-246"];
m3_128 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.IList<Humanizer.InflectorExtensions.Rule>, string)", file="Vocabularies.cs", label="(result = rules[i].Apply(word)) != null", span="248-248"];
m3_122 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.IList<Humanizer.InflectorExtensions.Rule>, string)", file="Vocabularies.cs", label="return null;", span="240-240"];
m3_130 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.IList<Humanizer.InflectorExtensions.Rule>, string)", file="Vocabularies.cs", label="return result;", span="253-253"];
m3_127 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.IList<Humanizer.InflectorExtensions.Rule>, string)", file="Vocabularies.cs", label="i >= 0", span="246-246"];
m3_129 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.IList<Humanizer.InflectorExtensions.Rule>, string)", file="Vocabularies.cs", label="i--", span="246-246"];
m3_131 [cluster="Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.IList<Humanizer.InflectorExtensions.Rule>, string)", file="Vocabularies.cs", label="Exit Humanizer.InflectorExtensions.ApplyRules(System.Collections.Generic.IList<Humanizer.InflectorExtensions.Rule>, string)", span="237-237"];
m3_66 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''oz'')", span="96-96"];
m3_80 [cluster="Humanizer.InflectorExtensions.AddIrregular(string, string)", file="Vocabularies.cs", label="AddPlural(''('' + singular[0] + '')'' + singular.Substring(1) + ''$'', ''$1'' + plural.Substring(1))", span="146-146"];
m3_81 [cluster="Humanizer.InflectorExtensions.AddIrregular(string, string)", file="Vocabularies.cs", label="AddSingular(''('' + plural[0] + '')'' + plural.Substring(1) + ''$'', ''$1'' + singular.Substring(1))", span="147-147"];
m3_82 [cluster="Humanizer.InflectorExtensions.AddIrregular(string, string)", file="Vocabularies.cs", label="Exit Humanizer.InflectorExtensions.AddIrregular(string, string)", span="144-144"];
m3_96 [cluster="Humanizer.InflectorExtensions.Pluralize(string, bool)", file="Vocabularies.cs", label="Entry Humanizer.InflectorExtensions.Pluralize(string, bool)", span="187-187"];
m3_97 [cluster="Humanizer.InflectorExtensions.Pluralize(string, bool)", file="Vocabularies.cs", label="var result = ApplyRules(Plurals, word)", span="189-189"];
m3_98 [cluster="Humanizer.InflectorExtensions.Pluralize(string, bool)", file="Vocabularies.cs", label=inputIsKnownToBeSingular, span="191-191"];
m3_100 [cluster="Humanizer.InflectorExtensions.Pluralize(string, bool)", file="Vocabularies.cs", label="var asSingular = ApplyRules(Singulars, word)", span="194-194"];
m3_102 [cluster="Humanizer.InflectorExtensions.Pluralize(string, bool)", file="Vocabularies.cs", label="asSingular != null && asSingular != word && asSingular + ''s'' != word && asSingularAsPlural == word && result != word", span="196-196"];
m3_103 [cluster="Humanizer.InflectorExtensions.Pluralize(string, bool)", file="Vocabularies.cs", label="return word;", span="197-197"];
m3_99 [cluster="Humanizer.InflectorExtensions.Pluralize(string, bool)", file="Vocabularies.cs", label="return result;", span="192-192"];
m3_104 [cluster="Humanizer.InflectorExtensions.Pluralize(string, bool)", file="Vocabularies.cs", label="return result;", span="199-199"];
m3_101 [cluster="Humanizer.InflectorExtensions.Pluralize(string, bool)", file="Vocabularies.cs", label="var asSingularAsPlural = ApplyRules(Plurals, asSingular)", span="195-195"];
m3_105 [cluster="Humanizer.InflectorExtensions.Pluralize(string, bool)", file="Vocabularies.cs", label="Exit Humanizer.InflectorExtensions.Pluralize(string, bool)", span="187-187"];
m3_0 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="Entry Humanizer.Inflections.Vocabularies.BuildDefault()", span="25-25"];
m3_1 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default = new Vocabulary()", span="27-27"];
m3_2 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddPlural(''$'', ''s'')", span="29-29"];
m3_3 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=green, community=0, file="Vocabularies.cs", label="0: _default.AddPlural(''s$'', ''s'')", span="30-30"];
m3_4 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddPlural(''(ax|test)is$'', ''$1es'')", span="31-31"];
m3_5 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", color=green, community=0, file="Vocabularies.cs", label="0: _default.AddPlural(''(octop|vir|alumn|fung)us$'', ''$1i'')", span="32-32"];
m3_6 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddPlural(''(alias|status)$'', ''$1es'')", span="33-33"];
m3_7 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddPlural(''(bu)s$'', ''$1ses'')", span="34-34"];
m3_8 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddPlural(''(buffal|tomat|volcan)o$'', ''$1oes'')", span="35-35"];
m3_9 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddPlural(''([ti])um$'', ''$1a'')", span="36-36"];
m3_10 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddPlural(''sis$'', ''ses'')", span="37-37"];
m3_11 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddPlural(''(?:([^f])fe|([lr])f)$'', ''$1$2ves'')", span="38-38"];
m3_12 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddPlural(''(hive)$'', ''$1s'')", span="39-39"];
m3_13 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddPlural(''([^aeiouy]|qu)y$'', ''$1ies'')", span="40-40"];
m3_14 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddPlural(''(x|ch|ss|sh)$'', ''$1es'')", span="41-41"];
m3_15 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddPlural(''(matr|vert|ind)ix|ex$'', ''$1ices'')", span="42-42"];
m3_16 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddPlural(''([m|l])ouse$'', ''$1ice'')", span="43-43"];
m3_17 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddPlural(''^(ox)$'', ''$1en'')", span="44-44"];
m3_18 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddPlural(''(quiz)$'', ''$1zes'')", span="45-45"];
m3_19 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddPlural(''(campus)$'', ''$1es'')", span="46-46"];
m3_20 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddPlural(''^is$'', ''are'')", span="47-47"];
m3_21 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''s$'', '''')", span="49-49"];
m3_22 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''(n)ews$'', ''$1ews'')", span="50-50"];
m3_23 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''([ti])a$'', ''$1um'')", span="51-51"];
m3_24 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$'', ''$1$2sis'')", span="52-52"];
m3_25 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''(^analy)ses$'', ''$1sis'')", span="53-53"];
m3_26 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''([^f])ves$'', ''$1fe'')", span="54-54"];
m3_27 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''(hive)s$'', ''$1'')", span="55-55"];
m3_28 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''(tive)s$'', ''$1'')", span="56-56"];
m3_29 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''([lr])ves$'', ''$1f'')", span="57-57"];
m3_30 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''([^aeiouy]|qu)ies$'', ''$1y'')", span="58-58"];
m3_31 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''(s)eries$'', ''$1eries'')", span="59-59"];
m3_32 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''(m)ovies$'', ''$1ovie'')", span="60-60"];
m3_33 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''(x|ch|ss|sh)es$'', ''$1'')", span="61-61"];
m3_34 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''([m|l])ice$'', ''$1ouse'')", span="62-62"];
m3_35 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''(bus)es$'', ''$1'')", span="63-63"];
m3_36 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''(o)es$'', ''$1'')", span="64-64"];
m3_37 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''(shoe)s$'', ''$1'')", span="65-65"];
m3_38 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''(cris|ax|test)es$'', ''$1is'')", span="66-66"];
m3_39 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''(octop|vir|alumn|fung)i$'', ''$1us'')", span="67-67"];
m3_40 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''(alias|status)es$'', ''$1'')", span="68-68"];
m3_41 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''^(ox)en'', ''$1'')", span="69-69"];
m3_42 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''(vert|ind)ices$'', ''$1ex'')", span="70-70"];
m3_43 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''(matr)ices$'', ''$1ix'')", span="71-71"];
m3_44 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''(quiz)zes$'', ''$1'')", span="72-72"];
m3_45 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''(campus)es$'', ''$1'')", span="73-73"];
m3_46 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddSingular(''^are$'', ''is'')", span="74-74"];
m3_47 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddIrregular(''person'', ''people'')", span="76-76"];
m3_48 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddIrregular(''man'', ''men'')", span="77-77"];
m3_49 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddIrregular(''child'', ''children'')", span="78-78"];
m3_50 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddIrregular(''sex'', ''sexes'')", span="79-79"];
m3_51 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddIrregular(''move'', ''moves'')", span="80-80"];
m3_52 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddIrregular(''goose'', ''geese'')", span="81-81"];
m3_53 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddIrregular(''alumna'', ''alumnae'')", span="82-82"];
m3_54 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddIrregular(''criterion'', ''criteria'')", span="83-83"];
m3_55 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddIrregular(''wave'', ''waves'')", span="84-84"];
m3_56 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''equipment'')", span="86-86"];
m3_57 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''information'')", span="87-87"];
m3_58 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''rice'')", span="88-88"];
m3_59 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''money'')", span="89-89"];
m3_60 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''species'')", span="90-90"];
m3_61 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''series'')", span="91-91"];
m3_62 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''fish'')", span="92-92"];
m3_63 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''sheep'')", span="93-93"];
m3_74 [cluster="Humanizer.InflectorExtensions.Rule.Apply(string)", file="Vocabularies.cs", label="!_regex.IsMatch(word)", span="135-135"];
m3_72 [cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", file="Vocabularies.cs", label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", span="0-0"];
m3_67 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''tsp'')", span="97-97"];
m3_84 [cluster="Humanizer.InflectorExtensions.AddUncountable(string)", file="Vocabularies.cs", label="Uncountables.Add(word.ToLower())", span="152-152"];
m3_85 [cluster="Humanizer.InflectorExtensions.AddUncountable(string)", file="Vocabularies.cs", label="Exit Humanizer.InflectorExtensions.AddUncountable(string)", span="150-150"];
m3_110 [cluster="string.Singularize(bool)", file="Vocabularies.cs", label="Entry string.Singularize(bool)", span="220-220"];
m3_139 [cluster="string.Humanize(Humanizer.LetterCasing)", file="Vocabularies.cs", label="Entry string.Humanize(Humanizer.LetterCasing)", span="67-67"];
m3_157 [cluster="Humanizer.InflectorExtensions.Dasherize(string)", file="Vocabularies.cs", label="Entry Humanizer.InflectorExtensions.Dasherize(string)", span="309-309"];
m3_158 [cluster="Humanizer.InflectorExtensions.Dasherize(string)", file="Vocabularies.cs", label="return underscoredWord.Replace('_', '-');", span="311-311"];
m3_159 [cluster="Humanizer.InflectorExtensions.Dasherize(string)", file="Vocabularies.cs", label="Exit Humanizer.InflectorExtensions.Dasherize(string)", span="309-309"];
m3_143 [cluster="System.Text.RegularExpressions.Regex.Replace(string, string, System.Text.RegularExpressions.MatchEvaluator)", file="Vocabularies.cs", label="Entry System.Text.RegularExpressions.Regex.Replace(string, string, System.Text.RegularExpressions.MatchEvaluator)", span="0-0"];
m3_68 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''tbsp'')", span="98-98"];
m3_69 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''ml'')", span="99-99"];
m3_70 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="_default.AddUncountable(''l'')", span="100-100"];
m3_71 [cluster="Humanizer.Inflections.Vocabularies.BuildDefault()", file="Vocabularies.cs", label="Exit Humanizer.Inflections.Vocabularies.BuildDefault()", span="25-25"];
m3_144 [cluster="lambda expression", file="Vocabularies.cs", label="Entry lambda expression", span="278-278"];
m3_145 [cluster="lambda expression", file="Vocabularies.cs", label="match.Groups[1].Value.ToUpper()", span="278-278"];
m3_146 [cluster="lambda expression", file="Vocabularies.cs", label="Exit lambda expression", span="278-278"];
m3_77 [cluster="Humanizer.InflectorExtensions.Rule.Apply(string)", file="Vocabularies.cs", label="Exit Humanizer.InflectorExtensions.Rule.Apply(string)", span="133-133"];
m3_92 [cluster="Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", file="Vocabularies.cs", label="Entry Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", span="176-176"];
m3_93 [cluster="Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", file="Vocabularies.cs", label="return plurality == Plurality.Plural ? word : word.Pluralize(inputIsKnownToBeSingular: false);", span="178-178"];
m3_94 [cluster="Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", file="Vocabularies.cs", label="Exit Humanizer.InflectorExtensions.Pluralize(string, Humanizer.Plurality)", span="176-176"];
m3_78 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string)", file="Vocabularies.cs", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string)", span="0-0"];
m3_136 [cluster="Humanizer.InflectorExtensions.Titleize(string)", file="Vocabularies.cs", label="Entry Humanizer.InflectorExtensions.Titleize(string)", span="266-266"];
m3_137 [cluster="Humanizer.InflectorExtensions.Titleize(string)", file="Vocabularies.cs", label="return input.Humanize(LetterCasing.Title);", span="268-268"];
m3_138 [cluster="Humanizer.InflectorExtensions.Titleize(string)", file="Vocabularies.cs", label="Exit Humanizer.InflectorExtensions.Titleize(string)", span="266-266"];
m3_87 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Vocabularies.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m3_111 [cluster="Humanizer.InflectorExtensions.Singularize(string, bool)", file="Vocabularies.cs", label="Entry Humanizer.InflectorExtensions.Singularize(string, bool)", span="220-220"];
m3_112 [cluster="Humanizer.InflectorExtensions.Singularize(string, bool)", file="Vocabularies.cs", label="var result = ApplyRules(Singulars, word)", span="223-223"];
m3_113 [cluster="Humanizer.InflectorExtensions.Singularize(string, bool)", file="Vocabularies.cs", label=inputIsKnownToBePlural, span="225-225"];
m3_115 [cluster="Humanizer.InflectorExtensions.Singularize(string, bool)", file="Vocabularies.cs", label="var asPlural = ApplyRules(Plurals, word)", span="229-229"];
m3_117 [cluster="Humanizer.InflectorExtensions.Singularize(string, bool)", file="Vocabularies.cs", label="asPlural != word && word + ''s'' != asPlural && asPluralAsSingular == word && result != word", span="231-231"];
m3_118 [cluster="Humanizer.InflectorExtensions.Singularize(string, bool)", file="Vocabularies.cs", label="return word;", span="232-232"];
m3_119 [cluster="Humanizer.InflectorExtensions.Singularize(string, bool)", file="Vocabularies.cs", label="return result ?? word;", span="234-234"];
m3_114 [cluster="Humanizer.InflectorExtensions.Singularize(string, bool)", file="Vocabularies.cs", label="return result;", span="226-226"];
m3_116 [cluster="Humanizer.InflectorExtensions.Singularize(string, bool)", file="Vocabularies.cs", label="var asPluralAsSingular = ApplyRules(Singulars, asPlural)", span="230-230"];
m3_120 [cluster="Humanizer.InflectorExtensions.Singularize(string, bool)", file="Vocabularies.cs", label="Exit Humanizer.InflectorExtensions.Singularize(string, bool)", span="220-220"];
m3_132 [cluster="Humanizer.InflectorExtensions.IsUncountable(string)", file="Vocabularies.cs", label="Entry Humanizer.InflectorExtensions.IsUncountable(string)", span="256-256"];
m3_133 [cluster="Humanizer.InflectorExtensions.IsUncountable(string)", file="Vocabularies.cs", label="return Uncountables.Contains(word.ToLower());", span="258-258"];
m3_134 [cluster="Humanizer.InflectorExtensions.IsUncountable(string)", file="Vocabularies.cs", label="Exit Humanizer.InflectorExtensions.IsUncountable(string)", span="256-256"];
m3_64 [cluster="Humanizer.InflectorExtensions.AddPlural(string, string)", file="Vocabularies.cs", label="Entry Humanizer.InflectorExtensions.AddPlural(string, string)", span="155-155"];
m3_88 [cluster="Humanizer.InflectorExtensions.AddPlural(string, string)", file="Vocabularies.cs", label="Plurals.Add(new Rule(rule, replacement))", span="157-157"];
m3_89 [cluster="Humanizer.InflectorExtensions.AddPlural(string, string)", file="Vocabularies.cs", label="Exit Humanizer.InflectorExtensions.AddPlural(string, string)", span="155-155"];
m3_86 [cluster="string.ToLower()", file="Vocabularies.cs", label="Entry string.ToLower()", span="0-0"];
m3_107 [cluster="Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", file="Vocabularies.cs", label="Entry Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", span="209-209"];
m3_108 [cluster="Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", file="Vocabularies.cs", label="return plurality == Plurality.Singular ? word : word.Singularize(inputIsKnownToBePlural: false);", span="211-211"];
m3_109 [cluster="Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", file="Vocabularies.cs", label="Exit Humanizer.InflectorExtensions.Singularize(string, Humanizer.Plurality)", span="209-209"];
m3_83 [cluster="string.Substring(int)", file="Vocabularies.cs", label="Entry string.Substring(int)", span="0-0"];
m3_164 [file="Vocabularies.cs", label="Humanizer.InflectorExtensions.Rule", span=""];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=2, style=dotted];
n1 -> n4  [key=2, style=dotted];
n2 -> n0  [color=blue, key=0, style=bold];
n5 -> n6  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n6 -> n8  [key=2, style=dotted];
n6 -> n4  [key=2, style=dotted];
n7 -> n5  [color=blue, key=0, style=bold];
n9 -> n10  [key=0, style=solid];
n10 -> n11  [key=0, style=solid];
n10 -> n8  [key=2, style=dotted];
n10 -> n4  [key=2, style=dotted];
n11 -> n9  [color=blue, key=0, style=bold];
n12 -> n13  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n13 -> n8  [key=2, style=dotted];
n13 -> n4  [key=2, style=dotted];
n14 -> n12  [color=blue, key=0, style=bold];
n15 -> n16  [key=0, style=solid];
n16 -> n17  [key=0, style=solid];
n16 -> n18  [key=2, style=dotted];
n16 -> n4  [key=2, style=dotted];
n17 -> n15  [color=blue, key=0, style=bold];
n19 -> n20  [key=0, style=solid];
n20 -> n21  [key=0, style=solid];
n20 -> n22  [key=2, style=dotted];
n20 -> n4  [key=2, style=dotted];
n21 -> n19  [color=blue, key=0, style=bold];
n23 -> n24  [key=0, style=solid];
n24 -> n25  [key=0, style=solid];
n24 -> n22  [key=2, style=dotted];
n24 -> n4  [key=2, style=dotted];
n25 -> n23  [color=blue, key=0, style=bold];
n26 -> n27  [key=0, style=solid];
n27 -> n28  [key=0, style=solid];
n27 -> n22  [key=2, style=dotted];
n27 -> n4  [key=2, style=dotted];
n28 -> n26  [color=blue, key=0, style=bold];
n29 -> n30  [key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n30 -> n8  [key=2, style=dotted];
n30 -> n4  [key=2, style=dotted];
n31 -> n29  [color=blue, key=0, style=bold];
n32 -> n33  [key=0, style=solid];
n33 -> n34  [key=0, style=solid];
n33 -> n8  [key=2, style=dotted];
n33 -> n4  [key=2, style=dotted];
n34 -> n32  [color=blue, key=0, style=bold];
n35 -> n36  [key=0, style=solid];
n36 -> n37  [key=0, style=solid];
n36 -> n8  [key=2, style=dotted];
n36 -> n4  [key=2, style=dotted];
n37 -> n35  [color=blue, key=0, style=bold];
n38 -> n39  [key=0, style=solid];
n39 -> n40  [key=0, style=solid];
n39 -> n22  [key=2, style=dotted];
n39 -> n4  [key=2, style=dotted];
n40 -> n38  [color=blue, key=0, style=bold];
n41 -> n42  [key=0, style=solid];
n42 -> n43  [key=0, style=solid];
n42 -> n22  [key=2, style=dotted];
n42 -> n4  [key=2, style=dotted];
n43 -> n41  [color=blue, key=0, style=bold];
n44 -> n45  [key=0, style=solid];
n45 -> n46  [key=0, style=solid];
n45 -> n22  [key=2, style=dotted];
n45 -> n4  [key=2, style=dotted];
n46 -> n44  [color=blue, key=0, style=bold];
m0_216 -> m0_217  [key=0, style=solid];
m0_218 -> n4  [key=2, style=dotted];
m0_218 -> m0_219  [key=0, style=solid];
m0_218 -> m0_184  [key=2, style=dotted];
m0_218 -> m0_220  [key=2, style=dotted];
m0_217 -> m0_218  [key=0, style=solid];
m0_217 -> m0_3  [color=darkorchid, key=3, label="Local variable long size", style=bold];
m0_219 -> m0_216  [color=blue, key=0, style=bold];
m0_74 -> m0_75  [key=0, style=solid];
m0_76 -> n4  [key=2, style=dotted];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_52  [key=2, style=dotted];
m0_76 -> m0_78  [key=2, style=dotted];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_3  [color=darkorchid, key=3, label="Local variable uint size", style=bold];
m0_77 -> m0_74  [color=blue, key=0, style=bold];
m0_221 -> m0_222  [color=green, key=0, style=solid];
m0_222 -> m0_223  [color=green, key=0, style=solid];
m0_222 -> m0_215  [color=green, key=2, style=dotted];
m0_222 -> m0_47  [color=green, key=2, style=dotted];
m0_222 -> n4  [color=green, key=2, style=dotted];
m0_223 -> m0_221  [color=blue, key=0, style=bold];
m0_103 -> m0_104  [key=0, style=solid];
m0_105 -> n4  [key=2, style=dotted];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_96  [key=2, style=dotted];
m0_105 -> m0_107  [key=2, style=dotted];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_3  [color=darkorchid, key=3, label="Local variable short size", style=bold];
m0_106 -> m0_103  [color=blue, key=0, style=bold];
m0_44 -> m0_45  [key=0, style=solid];
m0_45 -> m0_47  [key=2, style=dotted];
m0_45 -> n4  [key=2, style=dotted];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_38  [key=2, style=dotted];
m0_46 -> m0_44  [color=blue, key=0, style=bold];
m0_230 -> m0_231  [key=0, style=solid];
m0_232 -> n4  [key=2, style=dotted];
m0_232 -> m0_233  [key=0, style=solid];
m0_232 -> m0_228  [key=2, style=dotted];
m0_232 -> m0_234  [key=2, style=dotted];
m0_231 -> m0_232  [key=0, style=solid];
m0_231 -> m0_3  [color=darkorchid, key=3, label="Local variable sbyte size", style=bold];
m0_233 -> m0_230  [color=blue, key=0, style=bold];
m0_191 -> m0_192  [key=0, style=solid];
m0_193 -> n4  [key=2, style=dotted];
m0_193 -> m0_194  [key=0, style=solid];
m0_193 -> m0_184  [key=2, style=dotted];
m0_193 -> m0_195  [key=2, style=dotted];
m0_192 -> m0_193  [key=0, style=solid];
m0_192 -> m0_3  [color=darkorchid, key=3, label="Local variable short size", style=bold];
m0_194 -> m0_191  [color=blue, key=0, style=bold];
m0_172 -> m0_173  [key=0, style=solid];
m0_174 -> n4  [key=2, style=dotted];
m0_174 -> m0_175  [key=0, style=solid];
m0_174 -> m0_140  [key=2, style=dotted];
m0_174 -> m0_176  [key=2, style=dotted];
m0_173 -> m0_174  [key=0, style=solid];
m0_173 -> m0_3  [color=darkorchid, key=3, label="Local variable long size", style=bold];
m0_175 -> m0_172  [color=blue, key=0, style=bold];
m0_39 -> m0_40  [key=0, style=solid];
m0_41 -> n4  [key=2, style=dotted];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_6  [key=2, style=dotted];
m0_41 -> m0_43  [key=2, style=dotted];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_3  [color=darkorchid, key=3, label="Local variable long size", style=bold];
m0_42 -> m0_39  [color=blue, key=0, style=bold];
m0_162 -> m0_163  [key=0, style=solid];
m0_164 -> n4  [key=2, style=dotted];
m0_164 -> m0_165  [key=0, style=solid];
m0_164 -> m0_140  [key=2, style=dotted];
m0_164 -> m0_166  [key=2, style=dotted];
m0_163 -> m0_164  [key=0, style=solid];
m0_163 -> m0_3  [color=darkorchid, key=3, label="Local variable uint size", style=bold];
m0_165 -> m0_162  [color=blue, key=0, style=bold];
m0_123 -> m0_124  [key=0, style=solid];
m0_125 -> n4  [key=2, style=dotted];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_96  [key=2, style=dotted];
m0_125 -> m0_127  [key=2, style=dotted];
m0_124 -> m0_125  [key=0, style=solid];
m0_124 -> m0_3  [color=darkorchid, key=3, label="Local variable double size", style=bold];
m0_126 -> m0_123  [color=blue, key=0, style=bold];
m0_260 -> m0_261  [key=0, style=solid];
m0_261 -> m0_47  [key=2, style=dotted];
m0_261 -> n4  [key=2, style=dotted];
m0_261 -> m0_262  [key=0, style=solid];
m0_261 -> m0_259  [key=2, style=dotted];
m0_262 -> m0_260  [color=blue, key=0, style=bold];
m0_201 -> m0_202  [key=0, style=solid];
m0_203 -> n4  [key=2, style=dotted];
m0_203 -> m0_204  [key=0, style=solid];
m0_203 -> m0_184  [key=2, style=dotted];
m0_203 -> m0_205  [key=2, style=dotted];
m0_202 -> m0_203  [key=0, style=solid];
m0_202 -> m0_3  [color=darkorchid, key=3, label="Local variable int size", style=bold];
m0_204 -> m0_201  [color=blue, key=0, style=bold];
m0_48 -> m0_49  [key=0, style=solid];
m0_50 -> n4  [key=2, style=dotted];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_52  [key=2, style=dotted];
m0_50 -> m0_53  [key=2, style=dotted];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_3  [color=darkorchid, key=3, label="Local variable byte size", style=bold];
m0_51 -> m0_48  [color=blue, key=0, style=bold];
m0_108 -> m0_109  [key=0, style=solid];
m0_110 -> n4  [key=2, style=dotted];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_96  [key=2, style=dotted];
m0_110 -> m0_112  [key=2, style=dotted];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_3  [color=darkorchid, key=3, label="Local variable ushort size", style=bold];
m0_111 -> m0_108  [color=blue, key=0, style=bold];
m0_167 -> m0_168  [key=0, style=solid];
m0_169 -> n4  [key=2, style=dotted];
m0_169 -> m0_170  [key=0, style=solid];
m0_169 -> m0_140  [key=2, style=dotted];
m0_169 -> m0_171  [key=2, style=dotted];
m0_168 -> m0_169  [key=0, style=solid];
m0_168 -> m0_3  [color=darkorchid, key=3, label="Local variable double size", style=bold];
m0_170 -> m0_167  [color=blue, key=0, style=bold];
m0_34 -> m0_35  [key=0, style=solid];
m0_36 -> n4  [key=2, style=dotted];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_6  [key=2, style=dotted];
m0_36 -> m0_38  [key=2, style=dotted];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_3  [color=darkorchid, key=3, label="Local variable double size", style=bold];
m0_37 -> m0_34  [color=blue, key=0, style=bold];
m0_118 -> m0_119  [key=0, style=solid];
m0_120 -> n4  [key=2, style=dotted];
m0_120 -> m0_121  [key=0, style=solid];
m0_120 -> m0_96  [key=2, style=dotted];
m0_120 -> m0_122  [key=2, style=dotted];
m0_119 -> m0_120  [key=0, style=solid];
m0_119 -> m0_3  [color=darkorchid, key=3, label="Local variable uint size", style=bold];
m0_121 -> m0_118  [color=blue, key=0, style=bold];
m0_69 -> m0_70  [key=0, style=solid];
m0_71 -> n4  [key=2, style=dotted];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_52  [key=2, style=dotted];
m0_71 -> m0_73  [key=2, style=dotted];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_3  [color=darkorchid, key=3, label="Local variable int size", style=bold];
m0_72 -> m0_69  [color=blue, key=0, style=bold];
m0_24 -> m0_25  [key=0, style=solid];
m0_26 -> n4  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_6  [key=2, style=dotted];
m0_26 -> m0_28  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_3  [color=darkorchid, key=3, label="Local variable int size", style=bold];
m0_27 -> m0_24  [color=blue, key=0, style=bold];
m0_211 -> m0_212  [key=0, style=solid];
m0_213 -> m0_215  [key=2, style=dotted];
m0_213 -> n4  [key=2, style=dotted];
m0_213 -> m0_214  [key=0, style=solid];
m0_213 -> m0_184  [key=2, style=dotted];
m0_212 -> m0_213  [key=0, style=solid];
m0_212 -> m0_3  [color=darkorchid, key=3, label="Local variable double size", style=bold];
m0_214 -> m0_211  [color=blue, key=0, style=bold];
m0_128 -> m0_129  [key=0, style=solid];
m0_130 -> n4  [key=2, style=dotted];
m0_130 -> m0_131  [key=0, style=solid];
m0_130 -> m0_96  [key=2, style=dotted];
m0_130 -> m0_132  [key=2, style=dotted];
m0_129 -> m0_130  [key=0, style=solid];
m0_129 -> m0_3  [color=darkorchid, key=3, label="Local variable long size", style=bold];
m0_131 -> m0_128  [color=blue, key=0, style=bold];
m0_117 -> m0_3  [color=darkorchid, key=3, label="Local variable sbyte size", style=bold];
m0_186 -> m0_187  [key=0, style=solid];
m0_188 -> n4  [key=2, style=dotted];
m0_188 -> m0_189  [key=0, style=solid];
m0_188 -> m0_184  [key=2, style=dotted];
m0_188 -> m0_190  [key=2, style=dotted];
m0_187 -> m0_188  [key=0, style=solid];
m0_189 -> m0_186  [color=blue, key=0, style=bold];
m0_177 -> m0_178  [key=0, style=solid];
m0_178 -> m0_47  [key=2, style=dotted];
m0_178 -> n4  [key=2, style=dotted];
m0_178 -> m0_179  [key=0, style=solid];
m0_178 -> m0_171  [key=2, style=dotted];
m0_179 -> m0_177  [color=blue, key=0, style=bold];
m0_92 -> m0_93  [key=0, style=solid];
m0_94 -> n4  [key=2, style=dotted];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_96  [key=2, style=dotted];
m0_94 -> m0_97  [key=2, style=dotted];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_3  [color=darkorchid, key=3, label="Local variable byte size", style=bold];
m0_95 -> m0_92  [color=blue, key=0, style=bold];
m0_206 -> m0_207  [key=0, style=solid];
m0_208 -> n4  [key=2, style=dotted];
m0_208 -> m0_209  [key=0, style=solid];
m0_208 -> m0_184  [key=2, style=dotted];
m0_208 -> m0_210  [key=2, style=dotted];
m0_207 -> m0_208  [key=0, style=solid];
m0_207 -> m0_3  [color=darkorchid, key=3, label="Local variable uint size", style=bold];
m0_209 -> m0_206  [color=blue, key=0, style=bold];
m0_240 -> m0_241  [key=0, style=solid];
m0_242 -> n4  [key=2, style=dotted];
m0_242 -> m0_243  [key=0, style=solid];
m0_242 -> m0_228  [key=2, style=dotted];
m0_242 -> m0_244  [key=2, style=dotted];
m0_241 -> m0_242  [key=0, style=solid];
m0_241 -> m0_3  [color=darkorchid, key=3, label="Local variable ushort size", style=bold];
m0_243 -> m0_240  [color=blue, key=0, style=bold];
m0_136 -> m0_137  [key=0, style=solid];
m0_138 -> n4  [key=2, style=dotted];
m0_138 -> m0_139  [key=0, style=solid];
m0_138 -> m0_140  [key=2, style=dotted];
m0_138 -> m0_141  [key=2, style=dotted];
m0_137 -> m0_138  [key=0, style=solid];
m0_137 -> m0_3  [color=darkorchid, key=3, label="Local variable byte size", style=bold];
m0_139 -> m0_136  [color=blue, key=0, style=bold];
m0_142 -> m0_143  [key=0, style=solid];
m0_144 -> n4  [key=2, style=dotted];
m0_144 -> m0_145  [key=0, style=solid];
m0_144 -> m0_140  [key=2, style=dotted];
m0_144 -> m0_146  [key=2, style=dotted];
m0_143 -> m0_144  [key=0, style=solid];
m0_143 -> m0_3  [color=darkorchid, key=3, label="Local variable sbyte size", style=bold];
m0_145 -> m0_142  [color=blue, key=0, style=bold];
m0_255 -> m0_256  [key=0, style=solid];
m0_257 -> n4  [key=2, style=dotted];
m0_257 -> m0_258  [key=0, style=solid];
m0_257 -> m0_228  [key=2, style=dotted];
m0_257 -> m0_259  [key=2, style=dotted];
m0_256 -> m0_257  [key=0, style=solid];
m0_256 -> m0_3  [color=darkorchid, key=3, label="Local variable long size", style=bold];
m0_258 -> m0_255  [color=blue, key=0, style=bold];
m0_54 -> m0_55  [key=0, style=solid];
m0_56 -> n4  [key=2, style=dotted];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_52  [key=2, style=dotted];
m0_56 -> m0_58  [key=2, style=dotted];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_3  [color=darkorchid, key=3, label="Local variable sbyte size", style=bold];
m0_57 -> m0_54  [color=blue, key=0, style=bold];
m0_113 -> m0_114  [key=0, style=solid];
m0_115 -> n4  [key=2, style=dotted];
m0_115 -> m0_116  [key=0, style=solid];
m0_115 -> m0_96  [key=2, style=dotted];
m0_115 -> m0_117  [key=2, style=dotted];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_3  [color=darkorchid, key=3, label="Local variable int size", style=bold];
m0_116 -> m0_113  [color=blue, key=0, style=bold];
m0_152 -> m0_153  [key=0, style=solid];
m0_154 -> n4  [key=2, style=dotted];
m0_154 -> m0_155  [key=0, style=solid];
m0_154 -> m0_140  [key=2, style=dotted];
m0_154 -> m0_156  [key=2, style=dotted];
m0_153 -> m0_154  [key=0, style=solid];
m0_153 -> m0_3  [color=darkorchid, key=3, label="Local variable ushort size", style=bold];
m0_155 -> m0_152  [color=blue, key=0, style=bold];
m0_245 -> m0_246  [key=0, style=solid];
m0_247 -> n4  [key=2, style=dotted];
m0_247 -> m0_248  [key=0, style=solid];
m0_247 -> m0_228  [key=2, style=dotted];
m0_247 -> m0_249  [key=2, style=dotted];
m0_246 -> m0_247  [key=0, style=solid];
m0_246 -> m0_3  [color=darkorchid, key=3, label="Local variable int size", style=bold];
m0_248 -> m0_245  [color=blue, key=0, style=bold];
m0_59 -> m0_60  [key=0, style=solid];
m0_61 -> n4  [key=2, style=dotted];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_52  [key=2, style=dotted];
m0_61 -> m0_63  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_3  [color=darkorchid, key=3, label="Local variable short size", style=bold];
m0_62 -> m0_59  [color=blue, key=0, style=bold];
m0_84 -> m0_85  [key=0, style=solid];
m0_86 -> n4  [key=2, style=dotted];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_52  [key=2, style=dotted];
m0_86 -> m0_88  [key=2, style=dotted];
m0_85 -> m0_86  [key=0, style=solid];
m0_85 -> m0_3  [color=darkorchid, key=3, label="Local variable long size", style=bold];
m0_87 -> m0_84  [color=blue, key=0, style=bold];
m0_64 -> m0_65  [key=0, style=solid];
m0_66 -> n4  [key=2, style=dotted];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_52  [key=2, style=dotted];
m0_66 -> m0_68  [key=2, style=dotted];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_3  [color=darkorchid, key=3, label="Local variable ushort size", style=bold];
m0_67 -> m0_64  [color=blue, key=0, style=bold];
m0_133 -> m0_134  [key=0, style=solid];
m0_134 -> m0_47  [key=2, style=dotted];
m0_134 -> n4  [key=2, style=dotted];
m0_134 -> m0_135  [key=0, style=solid];
m0_134 -> m0_127  [key=2, style=dotted];
m0_135 -> m0_133  [color=blue, key=0, style=bold];
m0_63 -> m0_3  [color=darkorchid, key=3, label="Local variable byte size", style=bold];
m0_79 -> m0_80  [key=0, style=solid];
m0_81 -> n4  [key=2, style=dotted];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_52  [key=2, style=dotted];
m0_81 -> m0_83  [key=2, style=dotted];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_3  [color=darkorchid, key=3, label="Local variable double size", style=bold];
m0_82 -> m0_79  [color=blue, key=0, style=bold];
m0_224 -> m0_225  [key=0, style=solid];
m0_226 -> n4  [key=2, style=dotted];
m0_226 -> m0_227  [key=0, style=solid];
m0_226 -> m0_228  [key=2, style=dotted];
m0_226 -> m0_229  [key=2, style=dotted];
m0_225 -> m0_226  [key=0, style=solid];
m0_227 -> m0_224  [color=blue, key=0, style=bold];
m0_14 -> m0_15  [key=0, style=solid];
m0_16 -> n4  [key=2, style=dotted];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_6  [key=2, style=dotted];
m0_16 -> m0_18  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_3  [color=darkorchid, key=3, label="Local variable short size", style=bold];
m0_17 -> m0_14  [color=blue, key=0, style=bold];
m0_2 -> m0_3  [key=0, style=solid];
m0_4 -> n4  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_6  [key=2, style=dotted];
m0_4 -> m0_7  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_3  [color=darkorchid, key=3, label="Local variable byte size", style=bold];
m0_5 -> m0_2  [color=blue, key=0, style=bold];
m0_196 -> m0_197  [key=0, style=solid];
m0_198 -> n4  [key=2, style=dotted];
m0_198 -> m0_199  [key=0, style=solid];
m0_198 -> m0_184  [key=2, style=dotted];
m0_198 -> m0_200  [key=2, style=dotted];
m0_197 -> m0_198  [key=0, style=solid];
m0_197 -> m0_3  [color=darkorchid, key=3, label="Local variable ushort size", style=bold];
m0_199 -> m0_196  [color=blue, key=0, style=bold];
m0_157 -> m0_158  [key=0, style=solid];
m0_159 -> n4  [key=2, style=dotted];
m0_159 -> m0_160  [key=0, style=solid];
m0_159 -> m0_140  [key=2, style=dotted];
m0_159 -> m0_161  [key=2, style=dotted];
m0_158 -> m0_159  [key=0, style=solid];
m0_158 -> m0_3  [color=darkorchid, key=3, label="Local variable int size", style=bold];
m0_160 -> m0_157  [color=blue, key=0, style=bold];
m0_9 -> m0_10  [key=0, style=solid];
m0_11 -> n4  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_6  [key=2, style=dotted];
m0_11 -> m0_13  [key=2, style=dotted];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_3  [color=darkorchid, key=3, label="Local variable sbyte size", style=bold];
m0_12 -> m0_9  [color=blue, key=0, style=bold];
m0_19 -> m0_20  [key=0, style=solid];
m0_21 -> n4  [key=2, style=dotted];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_6  [key=2, style=dotted];
m0_21 -> m0_23  [key=2, style=dotted];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_3  [color=darkorchid, key=3, label="Local variable ushort size", style=bold];
m0_22 -> m0_19  [color=blue, key=0, style=bold];
m0_147 -> m0_148  [key=0, style=solid];
m0_149 -> n4  [key=2, style=dotted];
m0_149 -> m0_150  [key=0, style=solid];
m0_149 -> m0_140  [key=2, style=dotted];
m0_149 -> m0_151  [key=2, style=dotted];
m0_148 -> m0_149  [key=0, style=solid];
m0_148 -> m0_3  [color=darkorchid, key=3, label="Local variable short size", style=bold];
m0_150 -> m0_147  [color=blue, key=0, style=bold];
m0_89 -> m0_90  [key=0, style=solid];
m0_90 -> m0_47  [key=2, style=dotted];
m0_90 -> n4  [key=2, style=dotted];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_83  [key=2, style=dotted];
m0_91 -> m0_89  [color=blue, key=0, style=bold];
m0_98 -> m0_99  [key=0, style=solid];
m0_100 -> n4  [key=2, style=dotted];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_96  [key=2, style=dotted];
m0_100 -> m0_102  [key=2, style=dotted];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_3  [color=darkorchid, key=3, label="Local variable sbyte size", style=bold];
m0_101 -> m0_98  [color=blue, key=0, style=bold];
m0_250 -> m0_251  [key=0, style=solid];
m0_252 -> n4  [key=2, style=dotted];
m0_252 -> m0_253  [key=0, style=solid];
m0_252 -> m0_228  [key=2, style=dotted];
m0_252 -> m0_254  [key=2, style=dotted];
m0_251 -> m0_252  [key=0, style=solid];
m0_251 -> m0_3  [color=darkorchid, key=3, label="Local variable uint size", style=bold];
m0_253 -> m0_250  [color=blue, key=0, style=bold];
m0_29 -> m0_30  [key=0, style=solid];
m0_31 -> n4  [key=2, style=dotted];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_6  [key=2, style=dotted];
m0_31 -> m0_33  [key=2, style=dotted];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_3  [color=darkorchid, key=3, label="Local variable uint size", style=bold];
m0_32 -> m0_29  [color=blue, key=0, style=bold];
m0_180 -> m0_181  [key=0, style=solid];
m0_182 -> n4  [key=2, style=dotted];
m0_182 -> m0_183  [key=0, style=solid];
m0_182 -> m0_184  [key=2, style=dotted];
m0_182 -> m0_185  [key=2, style=dotted];
m0_181 -> m0_182  [key=0, style=solid];
m0_181 -> m0_3  [color=darkorchid, key=3, label="Local variable byte size", style=bold];
m0_183 -> m0_180  [color=blue, key=0, style=bold];
m0_235 -> m0_236  [key=0, style=solid];
m0_237 -> n4  [key=2, style=dotted];
m0_237 -> m0_238  [key=0, style=solid];
m0_237 -> m0_228  [key=2, style=dotted];
m0_237 -> m0_239  [key=2, style=dotted];
m0_236 -> m0_237  [key=0, style=solid];
m0_236 -> m0_3  [color=darkorchid, key=3, label="Local variable short size", style=bold];
m0_238 -> m0_235  [color=blue, key=0, style=bold];
m1_47 -> m1_81  [color=green, key=0, style=solid];
m1_47 -> m1_28  [color=darkorchid, key=3, label="Parameter variable Humanizer.Localisation.TimeUnit timeUnitType", style=bold];
m1_47 -> m1_42  [color=darkorchid, key=3, label="Parameter variable int amountOfTimeUnits", style=bold];
m1_81 -> m1_82  [color=green, key=0, style=solid];
m1_81 -> m1_83  [color=green, key=2, style=dotted];
m1_81 -> m1_84  [color=green, key=2, style=dotted];
m1_82 -> m1_47  [color=blue, key=0, style=bold];
m1_66 -> m1_46  [color=darkorchid, key=3, label="Parameter variable bool isTimeUnitToGetTheMaximumTimeUnit", style=bold];
m1_66 -> m1_72  [key=0, style=solid];
m1_66 -> m1_73  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m1_66 -> m1_74  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_74  [key=0, style=solid];
m1_73 -> m1_75  [key=0, style=solid];
m1_73 -> m1_73  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m1_73 -> m1_74  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_74  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m1_75 -> m1_66  [color=blue, key=0, style=bold];
m1_0 -> m1_3  [color=darkorchid, key=3, label="method methodReturn string Humanize", style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_1 -> m1_2  [key=0, style=solid];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m1_9 -> m1_4  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<string> timeParts", style=bold];
m1_9 -> m1_3  [color=darkorchid, key=3, label="Parameter variable bool countEmptyUnits", style=bold];
m1_9 -> m1_9  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<string> SetPrecisionOfTimeSpan", style=bold];
m1_9 -> m1_93  [key=0, style=solid];
m1_9 -> m1_94  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_9 -> m1_95  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_9 -> m1_96  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_93 -> m1_94  [key=0, style=solid];
m1_93 -> m1_95  [key=0, style=solid];
m1_94 -> m1_94  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_100  [key=2, style=dotted];
m1_94 -> m1_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_95 -> m1_95  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_95 -> m1_96  [key=0, style=solid];
m1_95 -> m1_38  [key=2, style=dotted];
m1_95 -> m1_97  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_95 -> m1_98  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_98  [key=0, style=solid];
m1_98 -> m1_99  [key=0, style=solid];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_100  [key=2, style=dotted];
m1_97 -> m1_97  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_97 -> m1_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_99 -> m1_9  [color=blue, key=0, style=bold];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_5  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_3 -> m1_0  [color=darkorchid, key=3, label="Parameter variable Humanizer.Localisation.TimeUnit minUnit", style=bold];
m1_3 -> m1_1  [color=darkorchid, key=3, label="Parameter variable bool countEmptyUnits", style=bold];
m1_3 -> m1_10  [color=darkorchid, key=3, label="method methodReturn string Humanize", style=bold];
m1_4 -> m1_8  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_9  [color=darkorchid, key=3, label="Local variable System.Collections.Generic.IEnumerable<string> timeParts", style=bold];
m1_5 -> m1_9  [key=2, style=dotted];
m1_5 -> m1_5  [color=darkseagreen4, key=1, label=timeParts, style=dashed];
m1_5 -> m1_6  [key=0, style=solid];
m1_6 -> m1_10  [key=2, style=dotted];
m1_6 -> m1_7  [key=0, style=solid];
m1_7 -> m1_3  [color=blue, key=0, style=bold];
m1_10 -> m1_4  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<string> timeSpanParts", style=bold];
m1_10 -> m1_107  [key=0, style=solid];
m1_107 -> m1_108  [key=0, style=solid];
m1_107 -> m1_109  [key=2, style=dotted];
m1_108 -> m1_10  [color=blue, key=0, style=bold];
m1_67 -> m1_46  [color=darkorchid, key=3, label="Parameter variable bool isTimeUnitToGetTheMaximumTimeUnit", style=bold];
m1_67 -> m1_63  [color=darkorchid, key=3, label="method methodReturn int GetSpecialCaseWeeksAsInteger", style=bold];
m1_67 -> m1_68  [key=0, style=solid];
m1_67 -> m1_69  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_70  [key=0, style=solid];
m1_69 -> m1_71  [key=0, style=solid];
m1_69 -> m1_69  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m1_70 -> m1_71  [key=0, style=solid];
m1_71 -> m1_67  [color=blue, key=0, style=bold];
m1_8 -> m1_16  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m1_8 -> m1_11  [key=0, style=solid];
m1_8 -> m1_3  [color=darkorchid, key=3, label="Parameter variable Humanizer.Localisation.TimeUnit minUnit", style=bold];
m1_8 -> m1_14  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<string> CreateTheTimePartsWithUperAndLowerLimits", style=bold];
m1_16 -> m1_28  [key=2, style=dotted];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_19  [color=darkseagreen4, key=1, label=timepart, style=dashed];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_20  [key=0, style=solid];
m1_11 -> m1_16  [color=darkseagreen4, key=1, label=cultureFormatter, style=dashed];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_25  [key=2, style=dotted];
m1_11 -> m1_21  [color=darkseagreen4, key=1, label=cultureFormatter, style=dashed];
m1_17 -> m1_15  [key=0, style=solid];
m1_17 -> m1_18  [key=0, style=solid];
m1_19 -> m1_15  [key=0, style=solid];
m1_19 -> m1_29  [key=2, style=dotted];
m1_13 -> m1_15  [color=darkseagreen4, key=1, label=timeUnitsEnumTypes, style=dashed];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_26  [key=2, style=dotted];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_19  [color=darkseagreen4, key=1, label=timeParts, style=dashed];
m1_14 -> m1_27  [key=2, style=dotted];
m1_14 -> m1_20  [color=darkseagreen4, key=1, label=timeParts, style=dashed];
m1_14 -> m1_23  [color=darkseagreen4, key=1, label=timeParts, style=dashed];
m1_14 -> m1_32  [color=darkorchid, key=3, label="Local variable System.Collections.Generic.List<string> timeParts", style=bold];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_23  [key=0, style=solid];
m1_20 -> m1_30  [key=2, style=dotted];
m1_12 -> m1_17  [color=darkseagreen4, key=1, label=firstValueFound, style=dashed];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_1  [color=darkorchid, key=3, label="Local variable bool firstValueFound", style=bold];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_31  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_23 -> m1_24  [key=0, style=solid];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_32  [key=2, style=dotted];
m1_24 -> m1_8  [color=blue, key=0, style=bold];
m1_26 -> m1_33  [key=0, style=solid];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_37  [key=2, style=dotted];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_39  [key=2, style=dotted];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_34  [color=darkseagreen4, key=1, label=enumTypeEnumerator, style=dashed];
m1_34 -> m1_38  [key=2, style=dotted];
m1_36 -> m1_26  [color=blue, key=0, style=bold];
m1_46 -> m1_65  [color=darkorchid, key=3, label="method methodReturn int GetTimeUnitNumericalValue", style=bold];
m1_46 -> m1_48  [key=0, style=solid];
m1_46 -> m1_50  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m1_46 -> m1_52  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_46 -> m1_54  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_46 -> m1_56  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_46 -> m1_58  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_46 -> m1_60  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_46 -> m1_28  [color=darkorchid, key=3, label="Parameter variable System.TimeSpan timespan", style=bold];
m1_46 -> m1_41  [color=darkorchid, key=3, label="Parameter variable bool isTimeUnitToGetTheMaximumTimeUnit", style=bold];
m1_46 -> m1_66  [color=darkorchid, key=3, label="method methodReturn int GetTimeUnitNumericalValue", style=bold];
m1_46 -> m1_67  [color=darkorchid, key=3, label="method methodReturn int GetTimeUnitNumericalValue", style=bold];
m1_46 -> m1_63  [color=darkorchid, key=3, label="method methodReturn int GetTimeUnitNumericalValue", style=bold];
m1_50 -> m1_65  [key=2, style=dotted];
m1_50 -> m1_50  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m1_50 -> m1_64  [key=0, style=solid];
m1_50 -> m1_52  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m1_52 -> m1_65  [key=2, style=dotted];
m1_52 -> m1_52  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m1_52 -> m1_64  [key=0, style=solid];
m1_52 -> m1_54  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m1_54 -> m1_65  [key=2, style=dotted];
m1_54 -> m1_54  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m1_54 -> m1_64  [key=0, style=solid];
m1_54 -> m1_56  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m1_56 -> m1_65  [key=2, style=dotted];
m1_56 -> m1_56  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m1_56 -> m1_64  [key=0, style=solid];
m1_56 -> m1_58  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m1_56 -> m1_60  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m1_63 -> m1_64  [key=0, style=solid];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_51  [key=0, style=solid];
m1_48 -> m1_53  [key=0, style=solid];
m1_48 -> m1_55  [key=0, style=solid];
m1_48 -> m1_57  [key=0, style=solid];
m1_48 -> m1_59  [key=0, style=solid];
m1_48 -> m1_61  [key=0, style=solid];
m1_58 -> m1_64  [key=0, style=solid];
m1_58 -> m1_66  [key=2, style=dotted];
m1_60 -> m1_64  [key=0, style=solid];
m1_60 -> m1_67  [key=2, style=dotted];
m1_49 -> m1_50  [key=0, style=solid];
m1_51 -> m1_52  [key=0, style=solid];
m1_53 -> m1_54  [key=0, style=solid];
m1_55 -> m1_56  [key=0, style=solid];
m1_62 -> m1_63  [key=0, style=solid];
m1_57 -> m1_58  [key=0, style=solid];
m1_59 -> m1_60  [key=0, style=solid];
m1_61 -> m1_62  [key=0, style=solid];
m1_64 -> m1_46  [color=blue, key=0, style=bold];
m1_104 -> m1_105  [key=0, style=solid];
m1_90 -> m1_91  [key=0, style=solid];
m1_101 -> m1_102  [key=0, style=solid];
m1_92 -> m1_90  [color=blue, key=0, style=bold];
m1_91 -> m1_92  [key=0, style=solid];
m1_103 -> m1_101  [color=blue, key=0, style=bold];
m1_102 -> m1_103  [key=0, style=solid];
m1_105 -> m1_106  [key=0, style=solid];
m1_106 -> m1_104  [color=blue, key=0, style=bold];
m1_32 -> m1_21  [color=darkorchid, key=3, label="Parameter variable string noTimeValue", style=bold];
m1_32 -> m1_85  [key=0, style=solid];
m1_85 -> m1_27  [key=2, style=dotted];
m1_85 -> m1_86  [key=0, style=solid];
m1_86 -> m1_32  [color=blue, key=0, style=bold];
m1_30 -> m1_14  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<string> timeParts", style=bold];
m1_30 -> m1_87  [key=0, style=solid];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_89  [key=2, style=dotted];
m1_87 -> m1_90  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_88 -> m1_30  [color=blue, key=0, style=bold];
m1_28 -> m1_47  [color=darkorchid, key=3, label="method methodReturn string GetTimeUnitPart", style=bold];
m1_28 -> m1_40  [key=0, style=solid];
m1_28 -> m1_41  [color=darkseagreen4, key=1, label="Humanizer.Localisation.TimeUnit", style=dashed];
m1_28 -> m1_42  [color=darkseagreen4, key=1, label="Humanizer.Localisation.TimeUnit", style=dashed];
m1_28 -> m1_43  [color=darkseagreen4, key=1, label="Humanizer.Localisation.TimeUnit", style=dashed];
m1_28 -> m1_15  [color=darkorchid, key=3, label="Parameter variable Humanizer.Localisation.TimeUnit timeUnitToGet", style=bold];
m1_28 -> m1_8  [color=darkorchid, key=3, label="Parameter variable Humanizer.Localisation.TimeUnit minimumTimeUnit", style=bold];
m1_28 -> m1_11  [color=darkorchid, key=3, label="Parameter variable Humanizer.Localisation.Formatters.IFormatter cultureFormatter", style=bold];
m1_28 -> m1_44  [color=darkorchid, key=3, label="method methodReturn string GetTimeUnitPart", style=bold];
m1_43 -> m1_47  [key=2, style=dotted];
m1_43 -> m1_45  [key=0, style=solid];
m1_42 -> m1_46  [key=2, style=dotted];
m1_42 -> m1_43  [key=0, style=solid];
m1_41 -> m1_42  [key=0, style=solid];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_44  [key=0, style=solid];
m1_44 -> m1_45  [key=0, style=solid];
m1_45 -> m1_28  [color=blue, key=0, style=bold];
m1_65 -> m1_77  [color=green, key=1, label=double, style=dashed];
m1_65 -> m1_65  [color=darkorchid, key=3, label="method methodReturn int GetNormalCaseTimeAsInteger", style=bold];
m1_65 -> m1_76  [key=0, style=solid];
m1_65 -> m1_78  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_65 -> m1_46  [color=darkorchid, key=3, label="Parameter variable bool isTimeUnitToGetTheMaximumTimeUnit", style=bold];
m1_65 -> m1_63  [color=darkorchid, key=3, label="method methodReturn int GetNormalCaseTimeAsInteger", style=bold];
m1_77 -> m1_79  [color=green, key=0, style=solid];
m1_76 -> m1_77  [color=green, key=0, style=solid];
m1_76 -> m1_78  [key=0, style=solid];
m1_78 -> m1_79  [key=0, style=solid];
m1_80 -> m1_79  [key=0, style=solid];
m1_79 -> m1_65  [color=blue, key=0, style=bold];
m2_40 -> m2_41  [key=0, style=solid];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_43  [key=2, style=dotted];
m2_42 -> m2_40  [color=blue, key=0, style=bold];
m2_32 -> m2_33  [key=0, style=solid];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_35  [key=2, style=dotted];
m2_34 -> m2_32  [color=blue, key=0, style=bold];
m2_36 -> m2_37  [key=0, style=solid];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_39  [key=2, style=dotted];
m2_38 -> m2_36  [color=blue, key=0, style=bold];
m2_28 -> m2_29  [key=0, style=solid];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_2 -> m2_0  [color=blue, key=0, style=bold];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_7  [key=2, style=dotted];
m2_6 -> m2_4  [color=blue, key=0, style=bold];
m2_8 -> m2_9  [key=0, style=solid];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_11  [key=2, style=dotted];
m2_10 -> m2_8  [color=blue, key=0, style=bold];
m2_12 -> m2_13  [key=0, style=solid];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_15  [key=2, style=dotted];
m2_14 -> m2_12  [color=blue, key=0, style=bold];
m2_16 -> m2_17  [key=0, style=solid];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_19  [key=2, style=dotted];
m2_18 -> m2_16  [color=blue, key=0, style=bold];
m2_20 -> m2_21  [key=0, style=solid];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_23  [key=2, style=dotted];
m2_22 -> m2_20  [color=blue, key=0, style=bold];
m2_24 -> m2_25  [key=0, style=solid];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_27  [key=2, style=dotted];
m2_26 -> m2_24  [color=blue, key=0, style=bold];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_31  [key=2, style=dotted];
m2_30 -> m2_28  [color=blue, key=0, style=bold];
m3_148 -> m3_149  [key=0, style=solid];
m3_149 -> m3_150  [key=0, style=solid];
m3_149 -> m3_140  [key=2, style=dotted];
m3_150 -> m3_151  [key=0, style=solid];
m3_150 -> m3_152  [key=2, style=dotted];
m3_150 -> m3_86  [key=2, style=dotted];
m3_150 -> m3_83  [key=2, style=dotted];
m3_151 -> m3_148  [color=blue, key=0, style=bold];
m3_75 -> m3_77  [key=0, style=solid];
m3_76 -> m3_77  [key=0, style=solid];
m3_76 -> m3_79  [key=2, style=dotted];
m3_153 -> m3_154  [key=0, style=solid];
m3_154 -> m3_155  [key=0, style=solid];
m3_154 -> m3_156  [key=2, style=dotted];
m3_154 -> m3_86  [key=2, style=dotted];
m3_155 -> m3_153  [color=blue, key=0, style=bold];
m3_73 -> m3_74  [key=0, style=solid];
m3_73 -> m3_76  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_161 -> m3_162  [key=0, style=solid];
m3_162 -> m3_163  [key=0, style=solid];
m3_162 -> m3_157  [key=2, style=dotted];
m3_163 -> m3_161  [color=blue, key=0, style=bold];
m3_65 -> m3_90  [key=0, style=solid];
m3_65 -> m3_76  [key=2, style=dotted];
m3_65 -> m3_66  [key=0, style=solid];
m3_90 -> m3_91  [key=0, style=solid];
m3_90 -> m3_68  [key=2, style=dotted];
m3_90 -> m3_87  [key=2, style=dotted];
m3_91 -> m3_65  [color=blue, key=0, style=bold];
m3_140 -> m3_141  [key=0, style=solid];
m3_141 -> m3_142  [key=0, style=solid];
m3_141 -> m3_143  [key=2, style=dotted];
m3_141 -> m3_144  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_142 -> m3_140  [color=blue, key=0, style=bold];
m3_106 -> m3_121  [key=0, style=solid];
m3_106 -> m3_123  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_106 -> m3_124  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_106 -> m3_125  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_106 -> m3_126  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<Humanizer.InflectorExtensions.Rule>", style=dashed];
m3_106 -> m3_128  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<Humanizer.InflectorExtensions.Rule>", style=dashed];
m3_121 -> m3_122  [key=0, style=solid];
m3_121 -> m3_123  [key=0, style=solid];
m3_123 -> m3_124  [key=0, style=solid];
m3_123 -> m3_125  [key=0, style=solid];
m3_123 -> m3_132  [key=2, style=dotted];
m3_124 -> m3_131  [key=0, style=solid];
m3_125 -> m3_126  [key=0, style=solid];
m3_125 -> m3_130  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_126 -> m3_127  [key=0, style=solid];
m3_126 -> m3_128  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_126 -> m3_129  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_128 -> m3_129  [key=0, style=solid];
m3_128 -> m3_130  [key=0, style=solid];
m3_128 -> m3_73  [key=2, style=dotted];
m3_122 -> m3_131  [key=0, style=solid];
m3_130 -> m3_131  [key=0, style=solid];
m3_127 -> m3_128  [key=0, style=solid];
m3_127 -> m3_130  [key=0, style=solid];
m3_129 -> m3_127  [key=0, style=solid];
m3_129 -> m3_129  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_131 -> m3_106  [color=blue, key=0, style=bold];
m3_66 -> m3_80  [key=0, style=solid];
m3_66 -> m3_81  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_66 -> m3_76  [key=2, style=dotted];
m3_66 -> m3_67  [key=0, style=solid];
m3_80 -> m3_81  [key=0, style=solid];
m3_80 -> m3_83  [key=2, style=dotted];
m3_80 -> m3_64  [key=2, style=dotted];
m3_81 -> m3_82  [key=0, style=solid];
m3_81 -> m3_83  [key=2, style=dotted];
m3_81 -> m3_65  [key=2, style=dotted];
m3_82 -> m3_66  [color=blue, key=0, style=bold];
m3_96 -> m3_97  [key=0, style=solid];
m3_96 -> m3_98  [color=darkseagreen4, key=1, label=bool, style=dashed];
m3_96 -> m3_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_96 -> m3_102  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_96 -> m3_103  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_97 -> m3_98  [key=0, style=solid];
m3_97 -> m3_106  [key=2, style=dotted];
m3_97 -> m3_99  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_97 -> m3_102  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_97 -> m3_104  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_98 -> m3_99  [key=0, style=solid];
m3_98 -> m3_100  [key=0, style=solid];
m3_100 -> m3_101  [key=0, style=solid];
m3_100 -> m3_106  [key=2, style=dotted];
m3_100 -> m3_102  [color=darkseagreen4, key=1, label=asSingular, style=dashed];
m3_102 -> m3_103  [key=0, style=solid];
m3_102 -> m3_104  [key=0, style=solid];
m3_103 -> m3_105  [key=0, style=solid];
m3_99 -> m3_105  [key=0, style=solid];
m3_104 -> m3_105  [key=0, style=solid];
m3_101 -> m3_102  [key=0, style=solid];
m3_101 -> m3_106  [key=2, style=dotted];
m3_105 -> m3_96  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_64  [key=2, style=dotted];
m3_1 -> m3_72  [key=2, style=dotted];
m3_2 -> m3_3  [color=green, key=0, style=solid];
m3_2 -> m3_64  [key=2, style=dotted];
m3_2 -> m3_73  [key=2, style=dotted];
m3_3 -> m3_4  [color=green, key=0, style=solid];
m3_3 -> m3_64  [key=2, style=dotted];
m3_3 -> m3_73  [color=green, key=2, style=dotted];
m3_4 -> m3_5  [color=green, key=0, style=solid];
m3_4 -> m3_64  [key=2, style=dotted];
m3_4 -> m3_73  [key=2, style=dotted];
m3_5 -> m3_6  [color=green, key=0, style=solid];
m3_5 -> m3_64  [key=2, style=dotted];
m3_5 -> m3_73  [color=green, key=2, style=dotted];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_64  [key=2, style=dotted];
m3_6 -> m3_73  [key=2, style=dotted];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_64  [key=2, style=dotted];
m3_7 -> m3_73  [key=2, style=dotted];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_64  [key=2, style=dotted];
m3_8 -> m3_73  [key=2, style=dotted];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_64  [key=2, style=dotted];
m3_9 -> m3_73  [key=2, style=dotted];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_64  [key=2, style=dotted];
m3_10 -> m3_73  [key=2, style=dotted];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_64  [key=2, style=dotted];
m3_11 -> m3_73  [key=2, style=dotted];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_64  [key=2, style=dotted];
m3_12 -> m3_73  [key=2, style=dotted];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_64  [key=2, style=dotted];
m3_13 -> m3_73  [key=2, style=dotted];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_64  [key=2, style=dotted];
m3_14 -> m3_73  [key=2, style=dotted];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_64  [key=2, style=dotted];
m3_15 -> m3_73  [key=2, style=dotted];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_64  [key=2, style=dotted];
m3_16 -> m3_73  [key=2, style=dotted];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_64  [key=2, style=dotted];
m3_17 -> m3_73  [key=2, style=dotted];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_64  [key=2, style=dotted];
m3_18 -> m3_73  [key=2, style=dotted];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_65  [key=2, style=dotted];
m3_19 -> m3_73  [key=2, style=dotted];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_65  [key=2, style=dotted];
m3_20 -> m3_73  [key=2, style=dotted];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_65  [key=2, style=dotted];
m3_21 -> m3_74  [key=2, style=dotted];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_65  [key=2, style=dotted];
m3_22 -> m3_74  [key=2, style=dotted];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_65  [key=2, style=dotted];
m3_23 -> m3_74  [key=2, style=dotted];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_65  [key=2, style=dotted];
m3_24 -> m3_74  [key=2, style=dotted];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_65  [key=2, style=dotted];
m3_25 -> m3_74  [key=2, style=dotted];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_65  [key=2, style=dotted];
m3_26 -> m3_74  [key=2, style=dotted];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_65  [key=2, style=dotted];
m3_27 -> m3_74  [key=2, style=dotted];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_65  [key=2, style=dotted];
m3_28 -> m3_74  [key=2, style=dotted];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_65  [key=2, style=dotted];
m3_29 -> m3_74  [key=2, style=dotted];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_65  [key=2, style=dotted];
m3_30 -> m3_74  [key=2, style=dotted];
m3_31 -> m3_32  [key=0, style=solid];
m3_31 -> m3_65  [key=2, style=dotted];
m3_31 -> m3_74  [key=2, style=dotted];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_65  [key=2, style=dotted];
m3_32 -> m3_74  [key=2, style=dotted];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_65  [key=2, style=dotted];
m3_33 -> m3_74  [key=2, style=dotted];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_65  [key=2, style=dotted];
m3_34 -> m3_74  [key=2, style=dotted];
m3_35 -> m3_36  [key=0, style=solid];
m3_35 -> m3_65  [key=2, style=dotted];
m3_35 -> m3_74  [key=2, style=dotted];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> m3_65  [key=2, style=dotted];
m3_36 -> m3_74  [key=2, style=dotted];
m3_37 -> m3_38  [key=0, style=solid];
m3_37 -> m3_65  [key=2, style=dotted];
m3_37 -> m3_74  [key=2, style=dotted];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_65  [key=2, style=dotted];
m3_38 -> m3_74  [key=2, style=dotted];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_65  [key=2, style=dotted];
m3_39 -> m3_74  [key=2, style=dotted];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_65  [key=2, style=dotted];
m3_40 -> m3_74  [key=2, style=dotted];
m3_41 -> m3_42  [key=0, style=solid];
m3_41 -> m3_65  [key=2, style=dotted];
m3_41 -> m3_74  [key=2, style=dotted];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_65  [key=2, style=dotted];
m3_42 -> m3_74  [key=2, style=dotted];
m3_43 -> m3_44  [key=0, style=solid];
m3_43 -> m3_65  [key=2, style=dotted];
m3_43 -> m3_74  [key=2, style=dotted];
m3_44 -> m3_45  [key=0, style=solid];
m3_44 -> m3_66  [key=2, style=dotted];
m3_44 -> m3_74  [key=2, style=dotted];
m3_45 -> m3_46  [key=0, style=solid];
m3_45 -> m3_66  [key=2, style=dotted];
m3_45 -> m3_74  [key=2, style=dotted];
m3_46 -> m3_47  [key=0, style=solid];
m3_46 -> m3_66  [key=2, style=dotted];
m3_46 -> m3_74  [key=2, style=dotted];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_66  [key=2, style=dotted];
m3_47 -> m3_75  [key=2, style=dotted];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_66  [key=2, style=dotted];
m3_48 -> m3_75  [key=2, style=dotted];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_66  [key=2, style=dotted];
m3_49 -> m3_75  [key=2, style=dotted];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_66  [key=2, style=dotted];
m3_50 -> m3_75  [key=2, style=dotted];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> m3_66  [key=2, style=dotted];
m3_51 -> m3_75  [key=2, style=dotted];
m3_52 -> m3_53  [key=0, style=solid];
m3_52 -> m3_66  [key=2, style=dotted];
m3_52 -> m3_75  [key=2, style=dotted];
m3_53 -> m3_54  [key=0, style=solid];
m3_53 -> m3_67  [key=2, style=dotted];
m3_53 -> m3_75  [key=2, style=dotted];
m3_54 -> m3_55  [key=0, style=solid];
m3_54 -> m3_67  [key=2, style=dotted];
m3_54 -> m3_75  [key=2, style=dotted];
m3_55 -> m3_56  [key=0, style=solid];
m3_55 -> m3_67  [key=2, style=dotted];
m3_55 -> m3_75  [key=2, style=dotted];
m3_56 -> m3_57  [key=0, style=solid];
m3_56 -> m3_67  [key=2, style=dotted];
m3_56 -> m3_76  [key=2, style=dotted];
m3_57 -> m3_58  [key=0, style=solid];
m3_57 -> m3_67  [key=2, style=dotted];
m3_57 -> m3_76  [key=2, style=dotted];
m3_58 -> m3_59  [key=0, style=solid];
m3_58 -> m3_67  [key=2, style=dotted];
m3_58 -> m3_76  [key=2, style=dotted];
m3_59 -> m3_60  [key=0, style=solid];
m3_59 -> m3_67  [key=2, style=dotted];
m3_59 -> m3_76  [key=2, style=dotted];
m3_60 -> m3_61  [key=0, style=solid];
m3_60 -> m3_67  [key=2, style=dotted];
m3_60 -> m3_76  [key=2, style=dotted];
m3_61 -> m3_62  [key=0, style=solid];
m3_61 -> m3_67  [key=2, style=dotted];
m3_61 -> m3_76  [key=2, style=dotted];
m3_62 -> m3_63  [key=0, style=solid];
m3_62 -> m3_67  [key=2, style=dotted];
m3_62 -> m3_76  [key=2, style=dotted];
m3_63 -> m3_0  [color=blue, key=0, style=bold];
m3_63 -> m3_76  [key=2, style=dotted];
m3_63 -> m3_64  [key=0, style=solid];
m3_74 -> m3_75  [key=0, style=solid];
m3_74 -> m3_76  [key=0, style=solid];
m3_74 -> m3_78  [key=2, style=dotted];
m3_67 -> m3_84  [key=0, style=solid];
m3_67 -> m3_76  [key=2, style=dotted];
m3_67 -> m3_68  [key=0, style=solid];
m3_84 -> m3_85  [key=0, style=solid];
m3_84 -> m3_86  [key=2, style=dotted];
m3_84 -> m3_87  [key=2, style=dotted];
m3_85 -> m3_67  [color=blue, key=0, style=bold];
m3_157 -> m3_158  [key=0, style=solid];
m3_158 -> m3_159  [key=0, style=solid];
m3_158 -> m3_160  [key=2, style=dotted];
m3_159 -> m3_157  [color=blue, key=0, style=bold];
m3_68 -> m3_69  [key=0, style=solid];
m3_68 -> m3_70  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_68 -> m3_76  [key=2, style=dotted];
m3_69 -> m3_70  [key=0, style=solid];
m3_69 -> m3_72  [key=2, style=dotted];
m3_69 -> m3_76  [key=2, style=dotted];
m3_70 -> m3_71  [key=0, style=solid];
m3_70 -> m3_76  [key=2, style=dotted];
m3_71 -> m3_68  [color=blue, key=0, style=bold];
m3_71 -> m3_0  [color=blue, key=0, style=bold];
m3_144 -> m3_145  [key=0, style=solid];
m3_145 -> m3_146  [key=0, style=solid];
m3_145 -> m3_147  [key=2, style=dotted];
m3_146 -> m3_144  [color=blue, key=0, style=bold];
m3_77 -> m3_73  [color=blue, key=0, style=bold];
m3_92 -> m3_93  [key=0, style=solid];
m3_93 -> m3_94  [key=0, style=solid];
m3_93 -> m3_95  [key=2, style=dotted];
m3_94 -> m3_92  [color=blue, key=0, style=bold];
m3_136 -> m3_137  [key=0, style=solid];
m3_137 -> m3_138  [key=0, style=solid];
m3_137 -> m3_139  [key=2, style=dotted];
m3_138 -> m3_136  [color=blue, key=0, style=bold];
m3_111 -> m3_112  [key=0, style=solid];
m3_111 -> m3_113  [color=darkseagreen4, key=1, label=bool, style=dashed];
m3_111 -> m3_115  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_111 -> m3_117  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_111 -> m3_118  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_111 -> m3_119  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_112 -> m3_113  [key=0, style=solid];
m3_112 -> m3_106  [key=2, style=dotted];
m3_112 -> m3_114  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_112 -> m3_117  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_112 -> m3_119  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_113 -> m3_114  [key=0, style=solid];
m3_113 -> m3_115  [key=0, style=solid];
m3_115 -> m3_116  [key=0, style=solid];
m3_115 -> m3_106  [key=2, style=dotted];
m3_115 -> m3_117  [color=darkseagreen4, key=1, label=asPlural, style=dashed];
m3_117 -> m3_118  [key=0, style=solid];
m3_117 -> m3_119  [key=0, style=solid];
m3_118 -> m3_120  [key=0, style=solid];
m3_119 -> m3_120  [key=0, style=solid];
m3_114 -> m3_120  [key=0, style=solid];
m3_116 -> m3_117  [key=0, style=solid];
m3_116 -> m3_106  [key=2, style=dotted];
m3_120 -> m3_111  [color=blue, key=0, style=bold];
m3_132 -> m3_133  [key=0, style=solid];
m3_133 -> m3_134  [key=0, style=solid];
m3_133 -> m3_86  [key=2, style=dotted];
m3_133 -> m3_135  [key=2, style=dotted];
m3_134 -> m3_132  [color=blue, key=0, style=bold];
m3_64 -> m3_76  [key=2, style=dotted];
m3_64 -> m3_65  [key=0, style=solid];
m3_64 -> m3_88  [key=0, style=solid];
m3_88 -> m3_89  [key=0, style=solid];
m3_88 -> m3_68  [key=2, style=dotted];
m3_88 -> m3_87  [key=2, style=dotted];
m3_89 -> m3_64  [color=blue, key=0, style=bold];
m3_107 -> m3_108  [key=0, style=solid];
m3_108 -> m3_109  [key=0, style=solid];
m3_108 -> m3_110  [key=2, style=dotted];
m3_109 -> m3_107  [color=blue, key=0, style=bold];
m3_164 -> m3_69  [color=darkseagreen4, key=1, label="Humanizer.InflectorExtensions.Rule", style=dashed];
m3_164 -> m3_70  [color=darkseagreen4, key=1, label="Humanizer.InflectorExtensions.Rule", style=dashed];
m3_164 -> m3_74  [color=darkseagreen4, key=1, label="Humanizer.InflectorExtensions.Rule", style=dashed];
m3_164 -> m3_76  [color=darkseagreen4, key=1, label="Humanizer.InflectorExtensions.Rule", style=dashed];
}
