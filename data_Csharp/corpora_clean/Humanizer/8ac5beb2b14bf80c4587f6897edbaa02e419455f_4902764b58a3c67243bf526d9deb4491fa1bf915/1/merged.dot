digraph  {
n0 [label="Entry Humanizer.Tests.TruncatorTests.Truncate(string, int, string)", span="14-14", cluster="Humanizer.Tests.TruncatorTests.Truncate(string, int, string)"];
n1 [label="Assert.Equal(expectedOutput, input.Truncate(length))", span="16-16", cluster="Humanizer.Tests.TruncatorTests.Truncate(string, int, string)"];
n2 [label="Exit Humanizer.Tests.TruncatorTests.Truncate(string, int, string)", span="14-14", cluster="Humanizer.Tests.TruncatorTests.Truncate(string, int, string)"];
n3 [label="Entry string.Truncate(int)", span="15-15", cluster="string.Truncate(int)"];
n4 [label="Entry Unk.Equal", span="", cluster="Unk.Equal"];
n5 [label="Entry Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncator(string, int, string)", span="26-26", cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncator(string, int, string)"];
n6 [label="Assert.Equal(expectedOutput, input.Truncate(length, Truncator.FixedLength))", span="28-28", cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncator(string, int, string)", color=red, community=0];
n7 [label="Exit Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncator(string, int, string)", span="26-26", cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedLengthTruncator(string, int, string)"];
n8 [label="Entry string.Truncate(int, Humanizer.ITruncator)", span="27-27", cluster="string.Truncate(int, Humanizer.ITruncator)"];
n9 [label="Entry Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", span="38-38", cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)"];
n10 [label="Assert.Equal(expectedOutput, input.Truncate(length, Truncator.FixedNumberOfCharacters))", span="40-40", cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)"];
n11 [label="Exit Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)", span="38-38", cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfCharactersTruncator(string, int, string)"];
n12 [label="Entry Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncator(string, int, string)", span="51-51", cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncator(string, int, string)"];
n13 [label="Assert.Equal(expectedOutput, input.Truncate(length, Truncator.FixedNumberOfWords))", span="53-53", cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncator(string, int, string)"];
n14 [label="Exit Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncator(string, int, string)", span="51-51", cluster="Humanizer.Tests.TruncatorTests.TruncateWithFixedNumberOfWordsTruncator(string, int, string)"];
n15 [label="Entry Humanizer.Tests.TruncatorTests.TruncateWithTruncationString(string, int, string, string)", span="65-65", cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationString(string, int, string, string)"];
n16 [label="Assert.Equal(expectedOutput, input.Truncate(length, truncationString))", span="67-67", cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationString(string, int, string, string)"];
n17 [label="Exit Humanizer.Tests.TruncatorTests.TruncateWithTruncationString(string, int, string, string)", span="65-65", cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationString(string, int, string, string)"];
n18 [label="Entry string.Truncate(int, string)", span="39-39", cluster="string.Truncate(int, string)"];
n19 [label="Entry Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncator(string, int, string, string)", span="80-80", cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncator(string, int, string, string)"];
n20 [label="Assert.Equal(expectedOutput, input.Truncate(length, truncationString, Truncator.FixedLength))", span="82-82", cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncator(string, int, string, string)"];
n21 [label="Exit Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncator(string, int, string, string)", span="80-80", cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedLengthTruncator(string, int, string, string)"];
n22 [label="Entry string.Truncate(int, string, Humanizer.ITruncator)", span="52-52", cluster="string.Truncate(int, string, Humanizer.ITruncator)"];
n23 [label="Entry Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncator(string, int, string, string)", span="95-95", cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncator(string, int, string, string)"];
n24 [label="Assert.Equal(expectedOutput, input.Truncate(length, truncationString, Truncator.FixedNumberOfCharacters))", span="97-97", cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncator(string, int, string, string)"];
n25 [label="Exit Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncator(string, int, string, string)", span="95-95", cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfCharactersTruncator(string, int, string, string)"];
n26 [label="Entry Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)", span="110-110", cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)"];
n27 [label="Assert.Equal(expectedOutput, input.Truncate(length, truncationString, Truncator.FixedNumberOfWords))", span="112-112", cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)"];
n28 [label="Exit Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)", span="110-110", cluster="Humanizer.Tests.TruncatorTests.TruncateWithTruncationStringAndFixedNumberOfWordsTruncator(string, int, string, string)"];
d4 [label="Assert.Equal(ByteSize.FromTerabytes(size), size.Terabytes())", span="14-14", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteTerabytes()", color=green, community=0];
d3 [label="byte size = 2", span="13-13", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteTerabytes()"];
d5 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteTerabytes()", span="11-11", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteTerabytes()"];
d6 [label="Entry Humanizer.Bytes.ByteSize.FromTerabytes(double)", span="140-140", cluster="Humanizer.Bytes.ByteSize.FromTerabytes(double)"];
d7 [label="Entry byte.Terabytes()", span="365-365", cluster="byte.Terabytes()"];
d8 [label="Entry Unk.Equal", span="", cluster="Unk.Equal"];
d11 [label="Assert.Equal(ByteSize.FromTerabytes(size), size.Terabytes())", span="21-21", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteTerabytes()", color=green, community=0];
d10 [label="sbyte size = 2", span="20-20", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteTerabytes()"];
d12 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteTerabytes()", span="18-18", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteTerabytes()"];
d13 [label="Entry sbyte.Terabytes()", span="375-375", cluster="sbyte.Terabytes()"];
d16 [label="Assert.Equal(ByteSize.FromTerabytes(size), size.Terabytes())", span="28-28", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortTerabytes()", color=green, community=0];
d15 [label="short size = 2", span="27-27", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortTerabytes()"];
d17 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortTerabytes()", span="25-25", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortTerabytes()"];
d18 [label="Entry short.Terabytes()", span="385-385", cluster="short.Terabytes()"];
d21 [label="Assert.Equal(ByteSize.FromTerabytes(size), size.Terabytes())", span="35-35", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortTerabytes()", color=green, community=0];
d20 [label="ushort size = 2", span="34-34", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortTerabytes()"];
d22 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortTerabytes()", span="32-32", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortTerabytes()"];
d23 [label="Entry ushort.Terabytes()", span="395-395", cluster="ushort.Terabytes()"];
d26 [label="Assert.Equal(ByteSize.FromTerabytes(size), size.Terabytes())", span="42-42", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntTerabytes()", color=green, community=0];
d25 [label="int size = 2", span="41-41", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntTerabytes()"];
d27 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntTerabytes()", span="39-39", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntTerabytes()"];
d28 [label="Entry int.Terabytes()", span="405-405", cluster="int.Terabytes()"];
d31 [label="Assert.Equal(ByteSize.FromTerabytes(size), size.Terabytes())", span="49-49", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintTerabytes()", color=green, community=0];
d30 [label="uint size = 2", span="48-48", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintTerabytes()"];
d32 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintTerabytes()", span="46-46", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintTerabytes()"];
d33 [label="Entry uint.Terabytes()", span="415-415", cluster="uint.Terabytes()"];
d36 [label="Assert.Equal(ByteSize.FromTerabytes(size), size.Terabytes())", span="56-56", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleTerabytes()", color=green, community=0];
d35 [label="double size = 2", span="55-55", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleTerabytes()"];
d37 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleTerabytes()", span="53-53", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleTerabytes()"];
d38 [label="Entry double.Terabytes()", span="425-425", cluster="double.Terabytes()"];
d45 [label="Assert.Equal(ByteSize.FromGigabytes(size), size.Gigabytes())", span="72-72", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteGigabytes()", color=green, community=0];
d44 [label="byte size = 2", span="71-71", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteGigabytes()"];
d46 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteGigabytes()", span="69-69", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteGigabytes()"];
d47 [label="Entry Humanizer.Bytes.ByteSize.FromGigabytes(double)", span="135-135", cluster="Humanizer.Bytes.ByteSize.FromGigabytes(double)"];
d48 [label="Entry byte.Gigabytes()", span="295-295", cluster="byte.Gigabytes()"];
d51 [label="Assert.Equal(ByteSize.FromGigabytes(size), size.Gigabytes())", span="79-79", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteGigabytes()", color=green, community=0];
d50 [label="sbyte size = 2", span="78-78", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteGigabytes()"];
d52 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteGigabytes()", span="76-76", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteGigabytes()"];
d53 [label="Entry sbyte.Gigabytes()", span="305-305", cluster="sbyte.Gigabytes()"];
d56 [label="Assert.Equal(ByteSize.FromGigabytes(size), size.Gigabytes())", span="86-86", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortGigabytes()", color=green, community=0];
d55 [label="short size = 2", span="85-85", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortGigabytes()"];
d57 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortGigabytes()", span="83-83", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortGigabytes()"];
d58 [label="Entry short.Gigabytes()", span="315-315", cluster="short.Gigabytes()"];
d61 [label="Assert.Equal(ByteSize.FromGigabytes(size), size.Gigabytes())", span="93-93", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortGigabytes()", color=green, community=0];
d60 [label="ushort size = 2", span="92-92", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortGigabytes()"];
d62 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortGigabytes()", span="90-90", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortGigabytes()"];
d63 [label="Entry ushort.Gigabytes()", span="325-325", cluster="ushort.Gigabytes()"];
d66 [label="Assert.Equal(ByteSize.FromGigabytes(size), size.Gigabytes())", span="100-100", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntGigabytes()", color=green, community=0];
d65 [label="int size = 2", span="99-99", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntGigabytes()"];
d67 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntGigabytes()", span="97-97", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntGigabytes()"];
d68 [label="Entry int.Gigabytes()", span="335-335", cluster="int.Gigabytes()"];
d71 [label="Assert.Equal(ByteSize.FromGigabytes(size), size.Gigabytes())", span="107-107", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintGigabytes()", color=green, community=0];
d70 [label="uint size = 2", span="106-106", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintGigabytes()"];
d72 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintGigabytes()", span="104-104", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintGigabytes()"];
d73 [label="Entry uint.Gigabytes()", span="345-345", cluster="uint.Gigabytes()"];
d76 [label="Assert.Equal(ByteSize.FromGigabytes(size), size.Gigabytes())", span="114-114", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleGigabytes()", color=green, community=0];
d75 [label="double size = 2", span="113-113", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleGigabytes()"];
d77 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleGigabytes()", span="111-111", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleGigabytes()"];
d78 [label="Entry double.Gigabytes()", span="355-355", cluster="double.Gigabytes()"];
d84 [label="Assert.Equal(ByteSize.FromMegabytes(size), size.Megabytes())", span="130-130", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteMegabytes()", color=green, community=0];
d83 [label="byte size = 2", span="129-129", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteMegabytes()"];
d85 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteMegabytes()", span="127-127", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteMegabytes()"];
d86 [label="Entry Humanizer.Bytes.ByteSize.FromMegabytes(double)", span="130-130", cluster="Humanizer.Bytes.ByteSize.FromMegabytes(double)"];
d87 [label="Entry byte.Megabytes()", span="225-225", cluster="byte.Megabytes()"];
d90 [label="Assert.Equal(ByteSize.FromMegabytes(size), size.Megabytes())", span="137-137", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteMegabytes()", color=green, community=0];
d89 [label="sbyte size = 2", span="136-136", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteMegabytes()"];
d91 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteMegabytes()", span="134-134", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteMegabytes()"];
d92 [label="Entry sbyte.Megabytes()", span="235-235", cluster="sbyte.Megabytes()"];
d95 [label="Assert.Equal(ByteSize.FromMegabytes(size), size.Megabytes())", span="144-144", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortMegabytes()", color=green, community=0];
d94 [label="short size = 2", span="143-143", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortMegabytes()"];
d96 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortMegabytes()", span="141-141", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortMegabytes()"];
d97 [label="Entry short.Megabytes()", span="245-245", cluster="short.Megabytes()"];
d100 [label="Assert.Equal(ByteSize.FromMegabytes(size), size.Megabytes())", span="151-151", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortMegabytes()", color=green, community=0];
d99 [label="ushort size = 2", span="150-150", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortMegabytes()"];
d101 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortMegabytes()", span="148-148", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortMegabytes()"];
d102 [label="Entry ushort.Megabytes()", span="255-255", cluster="ushort.Megabytes()"];
d105 [label="Assert.Equal(ByteSize.FromMegabytes(size), size.Megabytes())", span="158-158", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntMegabytes()", color=green, community=0];
d104 [label="int size = 2", span="157-157", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntMegabytes()"];
d106 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntMegabytes()", span="155-155", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntMegabytes()"];
d107 [label="Entry int.Megabytes()", span="265-265", cluster="int.Megabytes()"];
d110 [label="Assert.Equal(ByteSize.FromMegabytes(size), size.Megabytes())", span="165-165", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintMegabytes()", color=green, community=0];
d109 [label="uint size = 2", span="164-164", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintMegabytes()"];
d111 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintMegabytes()", span="162-162", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintMegabytes()"];
d112 [label="Entry uint.Megabytes()", span="275-275", cluster="uint.Megabytes()"];
d115 [label="Assert.Equal(ByteSize.FromMegabytes(size), size.Megabytes())", span="172-172", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleMegabytes()", color=green, community=0];
d114 [label="double size = 2", span="171-171", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleMegabytes()"];
d116 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleMegabytes()", span="169-169", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleMegabytes()"];
d117 [label="Entry double.Megabytes()", span="285-285", cluster="double.Megabytes()"];
d123 [label="Assert.Equal(ByteSize.FromKilobytes(size), size.Kilobytes())", span="188-188", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteKilobytes()", color=green, community=0];
d122 [label="byte size = 2", span="187-187", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteKilobytes()"];
d124 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteKilobytes()", span="185-185", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteKilobytes()"];
d125 [label="Entry Humanizer.Bytes.ByteSize.FromKilobytes(double)", span="125-125", cluster="Humanizer.Bytes.ByteSize.FromKilobytes(double)"];
d126 [label="Entry byte.Kilobytes()", span="155-155", cluster="byte.Kilobytes()"];
d129 [label="Assert.Equal(ByteSize.FromKilobytes(size), size.Kilobytes())", span="195-195", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteKilobytes()", color=green, community=0];
d128 [label="sbyte size = 2", span="194-194", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteKilobytes()"];
d130 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteKilobytes()", span="192-192", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteKilobytes()"];
d131 [label="Entry sbyte.Kilobytes()", span="165-165", cluster="sbyte.Kilobytes()"];
d134 [label="Assert.Equal(ByteSize.FromKilobytes(size), size.Kilobytes())", span="202-202", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortKilobytes()", color=green, community=0];
d133 [label="short size = 2", span="201-201", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortKilobytes()"];
d135 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortKilobytes()", span="199-199", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortKilobytes()"];
d136 [label="Entry short.Kilobytes()", span="175-175", cluster="short.Kilobytes()"];
d139 [label="Assert.Equal(ByteSize.FromKilobytes(size), size.Kilobytes())", span="209-209", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortKilobytes()", color=green, community=0];
d138 [label="ushort size = 2", span="208-208", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortKilobytes()"];
d140 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortKilobytes()", span="206-206", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortKilobytes()"];
d141 [label="Entry ushort.Kilobytes()", span="185-185", cluster="ushort.Kilobytes()"];
d144 [label="Assert.Equal(ByteSize.FromKilobytes(size), size.Kilobytes())", span="216-216", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntKilobytes()", color=green, community=0];
d143 [label="int size = 2", span="215-215", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntKilobytes()"];
d145 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntKilobytes()", span="213-213", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntKilobytes()"];
d146 [label="Entry int.Kilobytes()", span="195-195", cluster="int.Kilobytes()"];
d149 [label="Assert.Equal(ByteSize.FromKilobytes(size), size.Kilobytes())", span="223-223", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintKilobytes()", color=green, community=0];
d148 [label="uint size = 2", span="222-222", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintKilobytes()"];
d150 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintKilobytes()", span="220-220", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintKilobytes()"];
d151 [label="Entry uint.Kilobytes()", span="205-205", cluster="uint.Kilobytes()"];
d154 [label="Assert.Equal(ByteSize.FromKilobytes(size), size.Kilobytes())", span="230-230", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleKilobytes()", color=green, community=0];
d153 [label="double size = 2", span="229-229", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleKilobytes()"];
d155 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleKilobytes()", span="227-227", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleKilobytes()"];
d156 [label="Entry double.Kilobytes()", span="215-215", cluster="double.Kilobytes()"];
d162 [label="Assert.Equal(ByteSize.FromBytes(size), size.Bytes())", span="246-246", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBytes()", color=green, community=0];
d161 [label="byte size = 2", span="245-245", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBytes()"];
d163 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBytes()", span="243-243", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBytes()"];
d164 [label="Entry Humanizer.Bytes.ByteSize.FromBytes(double)", span="120-120", cluster="Humanizer.Bytes.ByteSize.FromBytes(double)"];
d165 [label="Entry byte.Bytes()", span="85-85", cluster="byte.Bytes()"];
d168 [label="Assert.Equal(ByteSize.FromBytes(size), size.Bytes())", span="253-253", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBytes()", color=green, community=0];
d167 [label="sbyte size = 2", span="252-252", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBytes()"];
d169 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBytes()", span="250-250", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBytes()"];
d170 [label="Entry sbyte.Bytes()", span="95-95", cluster="sbyte.Bytes()"];
d173 [label="Assert.Equal(ByteSize.FromBytes(size), size.Bytes())", span="260-260", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBytes()", color=green, community=0];
d172 [label="short size = 2", span="259-259", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBytes()"];
d174 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBytes()", span="257-257", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBytes()"];
d175 [label="Entry short.Bytes()", span="105-105", cluster="short.Bytes()"];
d178 [label="Assert.Equal(ByteSize.FromBytes(size), size.Bytes())", span="267-267", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBytes()", color=green, community=0];
d177 [label="ushort size = 2", span="266-266", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBytes()"];
d179 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBytes()", span="264-264", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBytes()"];
d180 [label="Entry ushort.Bytes()", span="115-115", cluster="ushort.Bytes()"];
d183 [label="Assert.Equal(ByteSize.FromBytes(size), size.Bytes())", span="274-274", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBytes()", color=green, community=0];
d182 [label="int size = 2", span="273-273", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBytes()"];
d184 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBytes()", span="271-271", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBytes()"];
d185 [label="Entry int.Bytes()", span="125-125", cluster="int.Bytes()"];
d188 [label="Assert.Equal(ByteSize.FromBytes(size), size.Bytes())", span="281-281", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBytes()", color=green, community=0];
d187 [label="uint size = 2", span="280-280", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBytes()"];
d189 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBytes()", span="278-278", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBytes()"];
d190 [label="Entry uint.Bytes()", span="135-135", cluster="uint.Bytes()"];
d193 [label="Assert.Equal(ByteSize.FromBytes(size), size.Bytes())", span="288-288", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleBytes()", color=green, community=0];
d192 [label="double size = 2", span="287-287", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleBytes()"];
d194 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleBytes()", span="285-285", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleBytes()"];
d195 [label="Entry double.Bytes()", span="145-145", cluster="double.Bytes()"];
d201 [label="Assert.Equal(ByteSize.FromBits(size), size.Bits())", span="304-304", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBits()", color=green, community=0];
d200 [label="byte size = 2", span="303-303", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBits()"];
d202 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBits()", span="301-301", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBits()"];
d203 [label="Entry Humanizer.Bytes.ByteSize.FromBits(long)", span="115-115", cluster="Humanizer.Bytes.ByteSize.FromBits(long)"];
d204 [label="Entry byte.Bits()", span="15-15", cluster="byte.Bits()"];
d207 [label="Assert.Equal(ByteSize.FromBits(size), size.Bits())", span="311-311", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBits()", color=green, community=0];
d206 [label="sbyte size = 2", span="310-310", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBits()"];
d208 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBits()", span="308-308", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBits()"];
d209 [label="Entry sbyte.Bits()", span="25-25", cluster="sbyte.Bits()"];
d212 [label="Assert.Equal(ByteSize.FromBits(size), size.Bits())", span="318-318", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBits()", color=green, community=0];
d211 [label="short size = 2", span="317-317", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBits()"];
d213 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBits()", span="315-315", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBits()"];
d214 [label="Entry short.Bits()", span="35-35", cluster="short.Bits()"];
d217 [label="Assert.Equal(ByteSize.FromBits(size), size.Bits())", span="325-325", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBits()", color=green, community=0];
d216 [label="ushort size = 2", span="324-324", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBits()"];
d218 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBits()", span="322-322", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBits()"];
d219 [label="Entry ushort.Bits()", span="45-45", cluster="ushort.Bits()"];
d222 [label="Assert.Equal(ByteSize.FromBits(size), size.Bits())", span="332-332", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBits()", color=green, community=0];
d221 [label="int size = 2", span="331-331", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBits()"];
d223 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBits()", span="329-329", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBits()"];
d224 [label="Entry int.Bits()", span="55-55", cluster="int.Bits()"];
d227 [label="Assert.Equal(ByteSize.FromBits(size), size.Bits())", span="339-339", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBits()", color=green, community=0];
d226 [label="uint size = 2", span="338-338", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBits()"];
d228 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBits()", span="336-336", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBits()"];
d229 [label="Entry uint.Bits()", span="65-65", cluster="uint.Bits()"];
d232 [label="Assert.Equal(ByteSize.FromBits(size), size.Bits())", span="346-346", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongBits()", color=green, community=0];
d231 [label="long size = 2", span="345-345", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongBits()"];
d233 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongBits()", span="343-343", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongBits()"];
d234 [label="Entry long.Bits()", span="75-75", cluster="long.Bits()"];
d2 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteTerabytes()", span="11-11", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteTerabytes()"];
d40 [label="Assert.Equal(expectedValue, input.Terabytes().Humanize(format))", span="65-65", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesTerabytes(double, string, string)"];
d80 [label="Assert.Equal(expectedValue, input.Gigabytes().Humanize(format))", span="123-123", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesGigabytes(double, string, string)"];
d119 [label="Assert.Equal(expectedValue, input.Megabytes().Humanize(format))", span="181-181", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesMegabytes(double, string, string)"];
d158 [label="Assert.Equal(expectedValue, input.Kilobytes().Humanize(format))", span="239-239", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesKilobytes(double, string, string)"];
d197 [label="Assert.Equal(expectedValue, input.Bytes().Humanize(format))", span="297-297", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBytes(double, string, string)"];
d236 [label="Assert.Equal(expectedValue, input.Bits().Humanize(format))", span="355-355", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBits(long, string, string)"];
d9 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteTerabytes()", span="18-18", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteTerabytes()"];
d14 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortTerabytes()", span="25-25", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortTerabytes()"];
d19 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortTerabytes()", span="32-32", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortTerabytes()"];
d24 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntTerabytes()", span="39-39", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntTerabytes()"];
d29 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintTerabytes()", span="46-46", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintTerabytes()"];
d34 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleTerabytes()", span="53-53", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleTerabytes()"];
d43 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteGigabytes()", span="69-69", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteGigabytes()"];
d49 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteGigabytes()", span="76-76", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteGigabytes()"];
d54 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortGigabytes()", span="83-83", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortGigabytes()"];
d59 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortGigabytes()", span="90-90", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortGigabytes()"];
d64 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntGigabytes()", span="97-97", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntGigabytes()"];
d69 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintGigabytes()", span="104-104", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintGigabytes()"];
d74 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleGigabytes()", span="111-111", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleGigabytes()"];
d82 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteMegabytes()", span="127-127", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteMegabytes()"];
d88 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteMegabytes()", span="134-134", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteMegabytes()"];
d93 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortMegabytes()", span="141-141", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortMegabytes()"];
d98 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortMegabytes()", span="148-148", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortMegabytes()"];
d103 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntMegabytes()", span="155-155", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntMegabytes()"];
d108 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintMegabytes()", span="162-162", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintMegabytes()"];
d113 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleMegabytes()", span="169-169", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleMegabytes()"];
d121 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteKilobytes()", span="185-185", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteKilobytes()"];
d127 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteKilobytes()", span="192-192", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteKilobytes()"];
d132 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortKilobytes()", span="199-199", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortKilobytes()"];
d137 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortKilobytes()", span="206-206", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortKilobytes()"];
d142 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntKilobytes()", span="213-213", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntKilobytes()"];
d147 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintKilobytes()", span="220-220", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintKilobytes()"];
d152 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleKilobytes()", span="227-227", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleKilobytes()"];
d160 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBytes()", span="243-243", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBytes()"];
d166 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBytes()", span="250-250", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBytes()"];
d171 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBytes()", span="257-257", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBytes()"];
d176 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBytes()", span="264-264", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBytes()"];
d181 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBytes()", span="271-271", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBytes()"];
d186 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBytes()", span="278-278", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBytes()"];
d191 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleBytes()", span="285-285", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.DoubleBytes()"];
d199 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBits()", span="301-301", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ByteBits()"];
d205 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBits()", span="308-308", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.SbyteBits()"];
d210 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBits()", span="315-315", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.ShortBits()"];
d215 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBits()", span="322-322", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UshortBits()"];
d220 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBits()", span="329-329", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.IntBits()"];
d225 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBits()", span="336-336", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.UintBits()"];
d230 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongBits()", span="343-343", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.LongBits()"];
d39 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesTerabytes(double, string, string)", span="63-63", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesTerabytes(double, string, string)"];
d41 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesTerabytes(double, string, string)", span="63-63", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesTerabytes(double, string, string)"];
d42 [label="Entry Humanizer.Bytes.ByteSize.Humanize(string)", span="436-436", cluster="Humanizer.Bytes.ByteSize.Humanize(string)"];
d79 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesGigabytes(double, string, string)", span="121-121", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesGigabytes(double, string, string)"];
d81 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesGigabytes(double, string, string)", span="121-121", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesGigabytes(double, string, string)"];
d118 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesMegabytes(double, string, string)", span="179-179", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesMegabytes(double, string, string)"];
d120 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesMegabytes(double, string, string)", span="179-179", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesMegabytes(double, string, string)"];
d157 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesKilobytes(double, string, string)", span="237-237", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesKilobytes(double, string, string)"];
d159 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesKilobytes(double, string, string)", span="237-237", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesKilobytes(double, string, string)"];
d196 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBytes(double, string, string)", span="295-295", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBytes(double, string, string)"];
d198 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBytes(double, string, string)", span="295-295", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBytes(double, string, string)"];
d235 [label="Entry Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBits(long, string, string)", span="353-353", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBits(long, string, string)"];
d237 [label="Exit Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBits(long, string, string)", span="353-353", cluster="Humanizer.Tests.Bytes.ByteSizeExtensionsTests.HumanizesBits(long, string, string)"];
m0_6 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="DateHumanize.cs"];
m0_16 [label="Entry Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo)", span="30-30", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo)", file="DateHumanize.cs"];
m0_17 [label="precision.HasValue", span="32-32", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo)", file="DateHumanize.cs", color=green, community=0];
m0_18 [label="Configurator.DateTimeHumanizeStrategy = new PrecisionDateTimeHumanizeStrategy(precision.Value)", span="33-33", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo)", file="DateHumanize.cs", color=green, community=0];
m0_21 [label="unit = Math.Abs(unit)", span="38-38", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo)", file="DateHumanize.cs"];
m0_22 [label="tense == Tense.Past", span="40-40", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo)", file="DateHumanize.cs"];
m0_24 [label=timeUnit, span="43-43", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo)", file="DateHumanize.cs"];
m0_39 [label="VerifyWithCurrentDate(expectedString, deltaFromNow, culture)", span="68-68", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo)", color=red, community=0, file="DateHumanize.cs"];
m0_40 [label="VerifyWithDateInjection(expectedString, deltaFromNow, culture)", span="69-69", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo)", color=red, community=0, file="DateHumanize.cs"];
m0_19 [label="Configurator.DateTimeHumanizeStrategy = new DefaultDateTimeHumanizeStrategy()", span="35-35", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo)", file="DateHumanize.cs"];
m0_20 [label="var deltaFromNow = new TimeSpan()", span="37-37", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo)", file="DateHumanize.cs"];
m0_23 [label="unit = -unit", span="41-41", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo)", file="DateHumanize.cs"];
m0_26 [label="deltaFromNow = TimeSpan.FromMilliseconds(unit)", span="46-46", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo)", file="DateHumanize.cs"];
m0_28 [label="deltaFromNow = TimeSpan.FromSeconds(unit)", span="49-49", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo)", file="DateHumanize.cs"];
m0_30 [label="deltaFromNow = TimeSpan.FromMinutes(unit)", span="52-52", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo)", file="DateHumanize.cs"];
m0_32 [label="deltaFromNow = TimeSpan.FromHours(unit)", span="55-55", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo)", file="DateHumanize.cs"];
m0_34 [label="deltaFromNow = TimeSpan.FromDays(unit)", span="58-58", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo)", file="DateHumanize.cs"];
m0_36 [label="deltaFromNow = TimeSpan.FromDays(unit*31)", span="61-61", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo)", file="DateHumanize.cs"];
m0_38 [label="deltaFromNow = TimeSpan.FromDays(unit*366)", span="64-64", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo)", file="DateHumanize.cs"];
m0_25 [label="TimeUnit.Millisecond", span="45-45", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo)", file="DateHumanize.cs"];
m0_27 [label="TimeUnit.Second", span="48-48", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo)", file="DateHumanize.cs"];
m0_29 [label="TimeUnit.Minute", span="51-51", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo)", file="DateHumanize.cs"];
m0_31 [label="TimeUnit.Hour", span="54-54", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo)", file="DateHumanize.cs"];
m0_33 [label="TimeUnit.Day", span="57-57", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo)", file="DateHumanize.cs"];
m0_35 [label="TimeUnit.Month", span="60-60", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo)", file="DateHumanize.cs"];
m0_37 [label="TimeUnit.Year", span="63-63", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo)", file="DateHumanize.cs"];
m0_41 [label="Exit Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo)", span="30-30", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo)", file="DateHumanize.cs"];
m0_45 [label="Entry System.Math.Abs(int)", span="0-0", cluster="System.Math.Abs(int)", file="DateHumanize.cs"];
m0_9 [label="Entry Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan, System.Globalization.CultureInfo)", span="21-21", cluster="Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan, System.Globalization.CultureInfo)", file="DateHumanize.cs"];
m0_10 [label="var utcNow = new DateTime(2013, 6, 20, 9, 58, 22, DateTimeKind.Utc)", span="23-23", cluster="Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan, System.Globalization.CultureInfo)", file="DateHumanize.cs"];
m0_12 [label="Assert.Equal(expectedString, utcNow.Add(deltaFromNow).Humanize(utcDate: true, dateToCompareAgainst: utcNow, culture: culture))", span="26-26", cluster="Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan, System.Globalization.CultureInfo)", color=red, community=0, file="DateHumanize.cs"];
m0_13 [label="Assert.Equal(expectedString, now.Add(deltaFromNow).Humanize(false, now, culture: culture))", span="27-27", cluster="Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan, System.Globalization.CultureInfo)", color=red, community=0, file="DateHumanize.cs"];
m0_11 [label="var now = new DateTime(2013, 6, 20, 11, 58, 22, DateTimeKind.Local)", span="24-24", cluster="Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan, System.Globalization.CultureInfo)", file="DateHumanize.cs"];
m0_14 [label="Exit Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan, System.Globalization.CultureInfo)", span="21-21", cluster="Humanizer.Tests.DateHumanize.VerifyWithDateInjection(string, System.TimeSpan, System.Globalization.CultureInfo)", file="DateHumanize.cs"];
m0_43 [label="Entry Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy()", span="10-10", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy()", file="DateHumanize.cs"];
m0_44 [label="Entry System.TimeSpan.TimeSpan()", span="0-0", cluster="System.TimeSpan.TimeSpan()", file="DateHumanize.cs"];
m0_48 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="DateHumanize.cs"];
m0_46 [label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0", cluster="System.TimeSpan.FromMilliseconds(double)", file="DateHumanize.cs"];
m0_47 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="DateHumanize.cs"];
m0_0 [label="Entry Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan, System.Globalization.CultureInfo)", span="11-11", cluster="Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan, System.Globalization.CultureInfo)", file="DateHumanize.cs"];
m0_1 [label="var utcNow = DateTime.UtcNow", span="13-13", cluster="Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan, System.Globalization.CultureInfo)", file="DateHumanize.cs"];
m0_3 [label="Assert.Equal(expectedString, utcNow.Add(deltaFromNow).Humanize(utcDate: true, dateToCompareAgainst: utcNow, culture: culture))", span="17-17", cluster="Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan, System.Globalization.CultureInfo)", color=green, community=0, file="DateHumanize.cs"];
m0_4 [label="Assert.Equal(expectedString, localNow.Add(deltaFromNow).Humanize(utcDate: false, dateToCompareAgainst: localNow, culture: culture))", span="18-18", cluster="Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan, System.Globalization.CultureInfo)", color=red, community=0, file="DateHumanize.cs"];
m0_2 [label="var localNow = DateTime.Now", span="14-14", cluster="Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan, System.Globalization.CultureInfo)", file="DateHumanize.cs"];
m0_5 [label="Exit Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan, System.Globalization.CultureInfo)", span="11-11", cluster="Humanizer.Tests.DateHumanize.VerifyWithCurrentDate(string, System.TimeSpan, System.Globalization.CultureInfo)", file="DateHumanize.cs"];
m0_7 [label="Entry System.DateTime.Humanize(bool, System.DateTime?, System.Globalization.CultureInfo)", span="19-19", cluster="System.DateTime.Humanize(bool, System.DateTime?, System.Globalization.CultureInfo)", file="DateHumanize.cs"];
m0_15 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="DateHumanize.cs"];
m0_49 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="DateHumanize.cs"];
m0_50 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="DateHumanize.cs"];
m0_42 [label="Entry Humanizer.DateTimeHumanizeStrategy.PrecisionDateTimeHumanizeStrategy.PrecisionDateTimeHumanizeStrategy(double)", span="18-18", cluster="Humanizer.DateTimeHumanizeStrategy.PrecisionDateTimeHumanizeStrategy.PrecisionDateTimeHumanizeStrategy(double)", file="DateHumanize.cs"];
m1_5 [label="Entry Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo)", span="30-30", cluster="Humanizer.Tests.DateHumanize.Verify(string, int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, double?, System.Globalization.CultureInfo)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_0 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.DateHumanizeDefaultStrategyTests()", span="9-9", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.DateHumanizeDefaultStrategyTests()", file="DateHumanizeDefaultStrategyTests.cs"];
m1_1 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.DateHumanizeDefaultStrategyTests()", span="9-9", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.DateHumanizeDefaultStrategyTests()", file="DateHumanizeDefaultStrategyTests.cs"];
m1_15 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursAgo(int, string)", span="65-65", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursAgo(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_16 [label="DateHumanize.Verify(expected, hours, TimeUnit.Hour, Tense.Past)", span="67-67", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursAgo(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_17 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursAgo(int, string)", span="65-65", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursAgo(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_12 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.MinutesFromNow(int, string)", span="55-55", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MinutesFromNow(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_13 [label="DateHumanize.Verify(expected, minutes, TimeUnit.Minute, Tense.Future)", span="57-57", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MinutesFromNow(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_14 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.MinutesFromNow(int, string)", span="55-55", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MinutesFromNow(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_33 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.YearsAgo(int, string)", span="123-123", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.YearsAgo(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_34 [label="DateHumanize.Verify(expected, years, TimeUnit.Year, Tense.Past)", span="125-125", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.YearsAgo(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_35 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.YearsAgo(int, string)", span="123-123", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.YearsAgo(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_9 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.MinutesAgo(int, string)", span="43-43", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MinutesAgo(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_10 [label="DateHumanize.Verify(expected, minutes, TimeUnit.Minute, Tense.Past)", span="45-45", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MinutesAgo(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_11 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.MinutesAgo(int, string)", span="43-43", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MinutesAgo(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_36 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.YearsFromNow(int, string)", span="131-131", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.YearsFromNow(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_37 [label="DateHumanize.Verify(expected, years, TimeUnit.Year, Tense.Future)", span="133-133", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.YearsFromNow(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_38 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.YearsFromNow(int, string)", span="131-131", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.YearsFromNow(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_42 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.CanSpecifyCultureExplicitly(int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, string, string)", span="146-146", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.CanSpecifyCultureExplicitly(int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, string, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_43 [label="DateHumanize.Verify(expected, unit, timeUnit, tense, culture: new CultureInfo(culture))", span="148-148", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.CanSpecifyCultureExplicitly(int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, string, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_44 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.CanSpecifyCultureExplicitly(int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, string, string)", span="146-146", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.CanSpecifyCultureExplicitly(int, Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, string, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_2 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsAgo(int, string)", span="19-19", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsAgo(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_3 [label="DateHumanize.Verify(expected, seconds, TimeUnit.Second, Tense.Past)", span="21-21", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsAgo(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_4 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsAgo(int, string)", span="19-19", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsAgo(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_21 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.DaysAgo(int, string)", span="85-85", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.DaysAgo(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_22 [label="DateHumanize.Verify(expected, days, TimeUnit.Day, Tense.Past)", span="87-87", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.DaysAgo(int, string)", file="DateHumanizeDefaultStrategyTests.cs", color=green, community=0];
m1_23 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.DaysAgo(int, string)", span="85-85", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.DaysAgo(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_30 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.MonthsFromNow(int, string)", span="115-115", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MonthsFromNow(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_31 [label="DateHumanize.Verify(expected, months, TimeUnit.Month, Tense.Future)", span="117-117", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MonthsFromNow(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_32 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.MonthsFromNow(int, string)", span="115-115", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MonthsFromNow(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_27 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.MonthsAgo(int, string)", span="105-105", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MonthsAgo(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_28 [label="DateHumanize.Verify(expected, months, TimeUnit.Month, Tense.Past)", span="107-107", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MonthsAgo(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_29 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.MonthsAgo(int, string)", span="105-105", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.MonthsAgo(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_39 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.Now()", span="137-137", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.Now()", file="DateHumanizeDefaultStrategyTests.cs"];
m1_40 [label="DateHumanize.Verify(''now'', 0, TimeUnit.Year, Tense.Future)", span="139-139", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.Now()", file="DateHumanizeDefaultStrategyTests.cs"];
m1_41 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.Now()", span="137-137", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.Now()", file="DateHumanizeDefaultStrategyTests.cs"];
m1_6 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsFromNow(int, string)", span="29-29", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsFromNow(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_7 [label="DateHumanize.Verify(expected, seconds, TimeUnit.Second, Tense.Future)", span="31-31", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsFromNow(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_8 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsFromNow(int, string)", span="29-29", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.SecondsFromNow(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_18 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursFromNow(int, string)", span="75-75", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursFromNow(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_19 [label="DateHumanize.Verify(expected, hours, TimeUnit.Hour, Tense.Future)", span="77-77", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursFromNow(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_20 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursFromNow(int, string)", span="75-75", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.HoursFromNow(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_45 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_24 [label="Entry Humanizer.Tests.DateHumanizeDefaultStrategyTests.DaysFromNow(int, string)", span="95-95", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.DaysFromNow(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_25 [label="DateHumanize.Verify(expected, days, TimeUnit.Day, Tense.Future)", span="97-97", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.DaysFromNow(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m1_26 [label="Exit Humanizer.Tests.DateHumanizeDefaultStrategyTests.DaysFromNow(int, string)", span="95-95", cluster="Humanizer.Tests.DateHumanizeDefaultStrategyTests.DaysFromNow(int, string)", file="DateHumanizeDefaultStrategyTests.cs"];
m2_32 [label="Entry System.TimeSpan.TimeSpan(long)", span="0-0", cluster="System.TimeSpan.TimeSpan(long)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_0 [label="Entry Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", span="20-20", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_1 [label="var tense = input > comparisonBase ? Tense.Future : Tense.Past", span="22-22", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_2 [label="var ts = new TimeSpan(Math.Abs(comparisonBase.Ticks - input.Ticks))", span="23-23", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_3 [label="var formatter = Configurator.GetFormatter(culture)", span="25-25", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_21 [label="comparisonBase.Date.AddMonths(tense == Tense.Future ? 1 : -1) == input.Date", span="53-53", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_5 [label="return formatter.DateHumanize(TimeUnit.Millisecond, tense, 0);", span="28-28", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_7 [label="return formatter.DateHumanize(TimeUnit.Second, tense, ts.Seconds);", span="31-31", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_9 [label="return formatter.DateHumanize(TimeUnit.Minute, tense, 1);", span="34-34", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_11 [label="return formatter.DateHumanize(TimeUnit.Minute, tense, ts.Minutes);", span="37-37", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_13 [label="return formatter.DateHumanize(TimeUnit.Hour, tense, 1);", span="40-40", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_15 [label="return formatter.DateHumanize(TimeUnit.Hour, tense, ts.Hours);", span="43-43", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_17 [label="return formatter.DateHumanize(TimeUnit.Day, tense, 1);", span="46-46", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", color=red, community=0, file="DefaultDateTimeHumanizeStrategy.cs"];
m2_19 [label="return formatter.DateHumanize(TimeUnit.Day, tense, ts.Days);", span="49-49", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_22 [label="return formatter.DateHumanize(TimeUnit.Month, tense, 1);", span="54-54", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_23 [label="return formatter.DateHumanize(TimeUnit.Day, tense, ts.Days);", span="55-55", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_26 [label="return formatter.DateHumanize(TimeUnit.Month, tense, months);", span="61-61", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_30 [label="return formatter.DateHumanize(TimeUnit.Year, tense, years);", span="67-67", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_4 [label="ts.TotalMilliseconds < 500", span="27-27", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_6 [label="ts.TotalSeconds < 60", span="30-30", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_8 [label="ts.TotalSeconds < 120", span="33-33", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_10 [label="ts.TotalMinutes < 60", span="36-36", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_12 [label="ts.TotalMinutes < 90", span="39-39", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_14 [label="ts.TotalHours < 24", span="42-42", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_16 [label="ts.TotalHours < 48", span="45-45", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_18 [label="ts.TotalDays < 28", span="48-48", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_20 [label="ts.TotalDays >= 28 && ts.TotalDays < 30", span="51-51", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_24 [label="ts.TotalDays < 345", span="58-58", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_25 [label="int months = Convert.ToInt32(Math.Floor(ts.TotalDays / 29.5))", span="60-60", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_27 [label="int years = Convert.ToInt32(Math.Floor(ts.TotalDays / 365))", span="64-64", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_28 [label="years == 0", span="65-65", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_29 [label="years = 1", span="65-65", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_31 [label="Exit Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", span="20-20", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime, System.Globalization.CultureInfo)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_34 [label="Entry Humanizer.Configuration.Configurator.GetFormatter(System.Globalization.CultureInfo)", span="66-66", cluster="Humanizer.Configuration.Configurator.GetFormatter(System.Globalization.CultureInfo)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_33 [label="Entry System.Math.Abs(long)", span="0-0", cluster="System.Math.Abs(long)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_38 [label="Entry System.Convert.ToInt32(double)", span="0-0", cluster="System.Convert.ToInt32(double)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_35 [label="Entry Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="22-22", cluster="Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_37 [label="Entry System.Math.Floor(double)", span="0-0", cluster="System.Math.Floor(double)", file="DefaultDateTimeHumanizeStrategy.cs"];
m2_36 [label="Entry System.DateTime.AddMonths(int)", span="0-0", cluster="System.DateTime.AddMonths(int)", file="DefaultDateTimeHumanizeStrategy.cs"];
m3_16 [label="Entry Humanizer.Configuration.LocaliserRegistry<TLocaliser>.Register(string, TLocaliser)", span="54-54", cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.Register(string, TLocaliser)", file="NumberToWordsConverterRegistry.cs"];
m3_17 [label="Entry Humanizer.Localisation.NumberToWords.ArabicNumberToWordsConverter.ArabicNumberToWordsConverter()", span="6-6", cluster="Humanizer.Localisation.NumberToWords.ArabicNumberToWordsConverter.ArabicNumberToWordsConverter()", file="NumberToWordsConverterRegistry.cs"];
m3_19 [label="Entry Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.SpanishNumberToWordsConverter()", span="5-5", cluster="Humanizer.Localisation.NumberToWords.SpanishNumberToWordsConverter.SpanishNumberToWordsConverter()", file="NumberToWordsConverterRegistry.cs"];
m3_30 [label="Entry Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.DefaultNumberToWordsConverter(System.Globalization.CultureInfo)", span="12-12", cluster="Humanizer.Localisation.NumberToWords.DefaultNumberToWordsConverter.DefaultNumberToWordsConverter(System.Globalization.CultureInfo)", file="NumberToWordsConverterRegistry.cs"];
m3_26 [label="Entry Humanizer.Localisation.NumberToWords.BanglaNumberToWordsConverter.BanglaNumberToWordsConverter()", span="4-4", cluster="Humanizer.Localisation.NumberToWords.BanglaNumberToWordsConverter.BanglaNumberToWordsConverter()", file="NumberToWordsConverterRegistry.cs"];
m3_24 [label="Entry Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.DutchNumberToWordsConverter()", span="11-11", cluster="Humanizer.Localisation.NumberToWords.DutchNumberToWordsConverter.DutchNumberToWordsConverter()", file="NumberToWordsConverterRegistry.cs"];
m3_20 [label="Entry Humanizer.Configuration.LocaliserRegistry<TLocaliser>.Register(string, System.Func<System.Globalization.CultureInfo, TLocaliser>)", span="62-62", cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.Register(string, System.Func<System.Globalization.CultureInfo, TLocaliser>)", file="NumberToWordsConverterRegistry.cs"];
m3_15 [label="Entry Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.EnglishNumberToWordsConverter()", span="5-5", cluster="Humanizer.Localisation.NumberToWords.EnglishNumberToWordsConverter.EnglishNumberToWordsConverter()", file="NumberToWordsConverterRegistry.cs"];
m3_21 [label="Entry Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.BrazilianPortugueseNumberToWordsConverter()", span="5-5", cluster="Humanizer.Localisation.NumberToWords.BrazilianPortugueseNumberToWordsConverter.BrazilianPortugueseNumberToWordsConverter()", file="NumberToWordsConverterRegistry.cs"];
m3_0 [label="Entry Humanizer.Configuration.NumberToWordsConverterRegistry.NumberToWordsConverterRegistry()", span="6-6", cluster="Humanizer.Configuration.NumberToWordsConverterRegistry.NumberToWordsConverterRegistry()", file="NumberToWordsConverterRegistry.cs"];
m3_1 [label="Register(''en'', new EnglishNumberToWordsConverter())", span="8-8", cluster="Humanizer.Configuration.NumberToWordsConverterRegistry.NumberToWordsConverterRegistry()", file="NumberToWordsConverterRegistry.cs"];
m3_2 [label="Register(''ar'', new ArabicNumberToWordsConverter())", span="9-9", cluster="Humanizer.Configuration.NumberToWordsConverterRegistry.NumberToWordsConverterRegistry()", file="NumberToWordsConverterRegistry.cs"];
m3_3 [label="Register(''fa'', new FarsiNumberToWordsConverter())", span="10-10", cluster="Humanizer.Configuration.NumberToWordsConverterRegistry.NumberToWordsConverterRegistry()", file="NumberToWordsConverterRegistry.cs"];
m3_4 [label="Register(''es'', new SpanishNumberToWordsConverter())", span="11-11", cluster="Humanizer.Configuration.NumberToWordsConverterRegistry.NumberToWordsConverterRegistry()", file="NumberToWordsConverterRegistry.cs"];
m3_5 [label="Register(''pl'', (culture) => new PolishNumberToWordsConverter(culture))", span="12-12", cluster="Humanizer.Configuration.NumberToWordsConverterRegistry.NumberToWordsConverterRegistry()", file="NumberToWordsConverterRegistry.cs"];
m3_6 [label="Register(''pt-BR'', new BrazilianPortugueseNumberToWordsConverter())", span="13-13", cluster="Humanizer.Configuration.NumberToWordsConverterRegistry.NumberToWordsConverterRegistry()", file="NumberToWordsConverterRegistry.cs"];
m3_7 [label="Register(''ru'', new RussianNumberToWordsConverter())", span="14-14", cluster="Humanizer.Configuration.NumberToWordsConverterRegistry.NumberToWordsConverterRegistry()", file="NumberToWordsConverterRegistry.cs"];
m3_8 [label="Register(''fr'', new FrenchNumberToWordsConverter())", span="15-15", cluster="Humanizer.Configuration.NumberToWordsConverterRegistry.NumberToWordsConverterRegistry()", file="NumberToWordsConverterRegistry.cs"];
m3_9 [label="Register(''nl'', new DutchNumberToWordsConverter())", span="16-16", cluster="Humanizer.Configuration.NumberToWordsConverterRegistry.NumberToWordsConverterRegistry()", file="NumberToWordsConverterRegistry.cs"];
m3_10 [label="Register(''he'', (culture) => new HebrewNumberToWordsConverter(culture))", span="17-17", cluster="Humanizer.Configuration.NumberToWordsConverterRegistry.NumberToWordsConverterRegistry()", file="NumberToWordsConverterRegistry.cs"];
m3_11 [label="Register(''sl'', (culture) => new SlovenianNumberToWordsConverter(culture))", span="18-18", cluster="Humanizer.Configuration.NumberToWordsConverterRegistry.NumberToWordsConverterRegistry()", file="NumberToWordsConverterRegistry.cs"];
m3_12 [label="Register(''de'', new GermanNumberToWordsConverter())", span="19-19", cluster="Humanizer.Configuration.NumberToWordsConverterRegistry.NumberToWordsConverterRegistry()", file="NumberToWordsConverterRegistry.cs"];
m3_13 [label="Register(''bn-BD'', new BanglaNumberToWordsConverter())", span="20-20", cluster="Humanizer.Configuration.NumberToWordsConverterRegistry.NumberToWordsConverterRegistry()", file="NumberToWordsConverterRegistry.cs"];
m3_14 [label="Exit Humanizer.Configuration.NumberToWordsConverterRegistry.NumberToWordsConverterRegistry()", span="6-6", cluster="Humanizer.Configuration.NumberToWordsConverterRegistry.NumberToWordsConverterRegistry()", file="NumberToWordsConverterRegistry.cs"];
m3_18 [label="Entry Humanizer.Localisation.NumberToWords.FarsiNumberToWordsConverter.FarsiNumberToWordsConverter()", span="5-5", cluster="Humanizer.Localisation.NumberToWords.FarsiNumberToWordsConverter.FarsiNumberToWordsConverter()", file="NumberToWordsConverterRegistry.cs"];
m3_23 [label="Entry Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.FrenchNumberToWordsConverter()", span="5-5", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.FrenchNumberToWordsConverter()", file="NumberToWordsConverterRegistry.cs"];
m3_38 [label="Entry Humanizer.Localisation.NumberToWords.HebrewNumberToWordsConverter.HebrewNumberToWordsConverter(System.Globalization.CultureInfo)", span="34-34", cluster="Humanizer.Localisation.NumberToWords.HebrewNumberToWordsConverter.HebrewNumberToWordsConverter(System.Globalization.CultureInfo)", file="NumberToWordsConverterRegistry.cs"];
m3_27 [label="Entry lambda expression", span="6-6", cluster="lambda expression", file="NumberToWordsConverterRegistry.cs"];
m3_31 [label="Entry lambda expression", span="12-12", cluster="lambda expression", file="NumberToWordsConverterRegistry.cs"];
m3_35 [label="Entry lambda expression", span="17-17", cluster="lambda expression", file="NumberToWordsConverterRegistry.cs"];
m3_39 [label="Entry lambda expression", span="18-18", cluster="lambda expression", file="NumberToWordsConverterRegistry.cs"];
m3_28 [label="new DefaultNumberToWordsConverter(culture)", span="6-6", cluster="lambda expression", file="NumberToWordsConverterRegistry.cs"];
m3_29 [label="Exit lambda expression", span="6-6", cluster="lambda expression", file="NumberToWordsConverterRegistry.cs"];
m3_32 [label="new PolishNumberToWordsConverter(culture)", span="12-12", cluster="lambda expression", file="NumberToWordsConverterRegistry.cs"];
m3_33 [label="Exit lambda expression", span="12-12", cluster="lambda expression", file="NumberToWordsConverterRegistry.cs"];
m3_36 [label="new HebrewNumberToWordsConverter(culture)", span="17-17", cluster="lambda expression", file="NumberToWordsConverterRegistry.cs"];
m3_37 [label="Exit lambda expression", span="17-17", cluster="lambda expression", file="NumberToWordsConverterRegistry.cs"];
m3_40 [label="new SlovenianNumberToWordsConverter(culture)", span="18-18", cluster="lambda expression", file="NumberToWordsConverterRegistry.cs"];
m3_41 [label="Exit lambda expression", span="18-18", cluster="lambda expression", file="NumberToWordsConverterRegistry.cs"];
m3_34 [label="Entry Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.PolishNumberToWordsConverter(System.Globalization.CultureInfo)", span="13-13", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.PolishNumberToWordsConverter(System.Globalization.CultureInfo)", file="NumberToWordsConverterRegistry.cs"];
m3_42 [label="Entry Humanizer.Localisation.NumberToWords.SlovenianNumberToWordsConverter.SlovenianNumberToWordsConverter(System.Globalization.CultureInfo)", span="12-12", cluster="Humanizer.Localisation.NumberToWords.SlovenianNumberToWordsConverter.SlovenianNumberToWordsConverter(System.Globalization.CultureInfo)", file="NumberToWordsConverterRegistry.cs"];
m3_22 [label="Entry Humanizer.Localisation.NumberToWords.RussianNumberToWordsConverter.RussianNumberToWordsConverter()", span="6-6", cluster="Humanizer.Localisation.NumberToWords.RussianNumberToWordsConverter.RussianNumberToWordsConverter()", file="NumberToWordsConverterRegistry.cs"];
m3_25 [label="Entry Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.GermanNumberToWordsConverter()", span="5-5", cluster="Humanizer.Localisation.NumberToWords.GermanNumberToWordsConverter.GermanNumberToWordsConverter()", file="NumberToWordsConverterRegistry.cs"];
m3_43 [label="Humanizer.Configuration.NumberToWordsConverterRegistry", span="", file="NumberToWordsConverterRegistry.cs"];
m5_2 [label="Entry Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="10-10", cluster="Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", file="OrdinalizerRegistry.cs"];
m5_3 [label="Exit Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="10-10", cluster="Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", file="OrdinalizerRegistry.cs"];
m5_0 [label="Entry Humanizer.Localisation.Formatters.IFormatter.DateHumanize_Now()", span="9-9", cluster="Humanizer.Localisation.Formatters.IFormatter.DateHumanize_Now()", file="OrdinalizerRegistry.cs"];
m5_1 [label="Exit Humanizer.Localisation.Formatters.IFormatter.DateHumanize_Now()", span="9-9", cluster="Humanizer.Localisation.Formatters.IFormatter.DateHumanize_Now()", file="OrdinalizerRegistry.cs"];
m5_6 [label="Entry Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", span="13-13", cluster="Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", file="OrdinalizerRegistry.cs"];
m5_7 [label="Exit Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", span="13-13", cluster="Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", file="OrdinalizerRegistry.cs"];
m5_4 [label="Entry Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize_Zero()", span="12-12", cluster="Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize_Zero()", file="OrdinalizerRegistry.cs"];
m5_5 [label="Exit Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize_Zero()", span="12-12", cluster="Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize_Zero()", file="OrdinalizerRegistry.cs"];
m6_0 [label="Entry Humanizer.StringExentions.FormatWith(string, params object[])", span="15-15", cluster="Humanizer.StringExentions.FormatWith(string, params object[])", file="StringExentions.cs"];
m6_1 [label="return String.Format(format, args);", span="17-17", cluster="Humanizer.StringExentions.FormatWith(string, params object[])", file="StringExentions.cs"];
m6_2 [label="Exit Humanizer.StringExentions.FormatWith(string, params object[])", span="15-15", cluster="Humanizer.StringExentions.FormatWith(string, params object[])", file="StringExentions.cs"];
m6_3 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="StringExentions.cs"];
m7_11 [label="Entry Unk.>", span="", cluster="Unk.>", file="StringExtensionsTests.cs"];
m7_5 [label="Entry Humanizer.Tests.StringExtensionsTests.CanFormatStringWithMoreArguments()", span="17-17", cluster="Humanizer.Tests.StringExtensionsTests.CanFormatStringWithMoreArguments()", file="StringExtensionsTests.cs"];
m7_6 [label="Assert.Equal(Expected, Format.FormatWith(1, 2, 3, 4, 5))", span="19-19", cluster="Humanizer.Tests.StringExtensionsTests.CanFormatStringWithMoreArguments()", file="StringExtensionsTests.cs"];
m7_7 [label="Exit Humanizer.Tests.StringExtensionsTests.CanFormatStringWithMoreArguments()", span="17-17", cluster="Humanizer.Tests.StringExtensionsTests.CanFormatStringWithMoreArguments()", file="StringExtensionsTests.cs"];
m7_15 [label="Entry Humanizer.Tests.StringExtensionsTests.FormatCannotBeNull()", span="29-29", cluster="Humanizer.Tests.StringExtensionsTests.FormatCannotBeNull()", file="StringExtensionsTests.cs"];
m7_16 [label="string format = null", span="31-31", cluster="Humanizer.Tests.StringExtensionsTests.FormatCannotBeNull()", file="StringExtensionsTests.cs"];
m7_17 [label="Assert.Throws<ArgumentNullException>(() => format.FormatWith(1, 2))", span="32-32", cluster="Humanizer.Tests.StringExtensionsTests.FormatCannotBeNull()", file="StringExtensionsTests.cs"];
m7_18 [label="Exit Humanizer.Tests.StringExtensionsTests.FormatCannotBeNull()", span="29-29", cluster="Humanizer.Tests.StringExtensionsTests.FormatCannotBeNull()", file="StringExtensionsTests.cs"];
m7_0 [label="Entry Humanizer.Tests.StringExtensionsTests.CanFormatStringWithExactNumberOfArguments()", span="11-11", cluster="Humanizer.Tests.StringExtensionsTests.CanFormatStringWithExactNumberOfArguments()", file="StringExtensionsTests.cs"];
m7_1 [label="Assert.Equal(Expected, Format.FormatWith(1, 2, 3))", span="13-13", cluster="Humanizer.Tests.StringExtensionsTests.CanFormatStringWithExactNumberOfArguments()", file="StringExtensionsTests.cs"];
m7_2 [label="Exit Humanizer.Tests.StringExtensionsTests.CanFormatStringWithExactNumberOfArguments()", span="11-11", cluster="Humanizer.Tests.StringExtensionsTests.CanFormatStringWithExactNumberOfArguments()", file="StringExtensionsTests.cs"];
m7_3 [label="Entry string.FormatWith(params object[])", span="15-15", cluster="string.FormatWith(params object[])", file="StringExtensionsTests.cs"];
m7_8 [label="Entry Humanizer.Tests.StringExtensionsTests.CannotFormatStringWithLessArguments()", span="23-23", cluster="Humanizer.Tests.StringExtensionsTests.CannotFormatStringWithLessArguments()", file="StringExtensionsTests.cs"];
m7_9 [label="Assert.Throws<FormatException>(() => Format.FormatWith(1, 2))", span="25-25", cluster="Humanizer.Tests.StringExtensionsTests.CannotFormatStringWithLessArguments()", file="StringExtensionsTests.cs"];
m7_10 [label="Exit Humanizer.Tests.StringExtensionsTests.CannotFormatStringWithLessArguments()", span="23-23", cluster="Humanizer.Tests.StringExtensionsTests.CannotFormatStringWithLessArguments()", file="StringExtensionsTests.cs"];
m7_19 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="StringExtensionsTests.cs"];
m7_12 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="StringExtensionsTests.cs"];
m7_13 [label="Format.FormatWith(1, 2)", span="25-25", cluster="lambda expression", file="StringExtensionsTests.cs"];
m7_14 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="StringExtensionsTests.cs"];
m7_20 [label="format.FormatWith(1, 2)", span="32-32", cluster="lambda expression", file="StringExtensionsTests.cs"];
m7_21 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="StringExtensionsTests.cs"];
m7_22 [label=format, span="", file="StringExtensionsTests.cs"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=2, style=dotted];
n1 -> n4  [key=2, style=dotted];
n2 -> n0  [key=0, style=bold, color=blue];
n5 -> n6  [key=0, style=solid, color=red];
n6 -> n7  [key=0, style=solid, color=red];
n6 -> n8  [key=2, style=dotted, color=red];
n6 -> n4  [key=2, style=dotted, color=red];
n7 -> n5  [key=0, style=bold, color=blue];
n9 -> n10  [key=0, style=solid];
n10 -> n11  [key=0, style=solid];
n10 -> n8  [key=2, style=dotted];
n10 -> n4  [key=2, style=dotted];
n11 -> n9  [key=0, style=bold, color=blue];
n12 -> n13  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n13 -> n8  [key=2, style=dotted];
n13 -> n4  [key=2, style=dotted];
n14 -> n12  [key=0, style=bold, color=blue];
n15 -> n16  [key=0, style=solid];
n16 -> n17  [key=0, style=solid];
n16 -> n18  [key=2, style=dotted];
n16 -> n4  [key=2, style=dotted];
n17 -> n15  [key=0, style=bold, color=blue];
n19 -> n20  [key=0, style=solid];
n20 -> n21  [key=0, style=solid];
n20 -> n22  [key=2, style=dotted];
n20 -> n4  [key=2, style=dotted];
n21 -> n19  [key=0, style=bold, color=blue];
n23 -> n24  [key=0, style=solid];
n24 -> n25  [key=0, style=solid];
n24 -> n22  [key=2, style=dotted];
n24 -> n4  [key=2, style=dotted];
n25 -> n23  [key=0, style=bold, color=blue];
n26 -> n27  [key=0, style=solid];
n27 -> n28  [key=0, style=solid];
n27 -> n22  [key=2, style=dotted];
n27 -> n4  [key=2, style=dotted];
n28 -> n26  [key=0, style=bold, color=blue];
d4 -> d5  [key=0, style=solid, color=green];
d4 -> d6  [key=2, style=dotted, color=green];
d4 -> d7  [key=2, style=dotted, color=green];
d4 -> d8  [key=2, style=dotted, color=green];
d3 -> d4  [key=0, style=solid, color=green];
d3 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable byte size"];
d5 -> d2  [key=0, style=bold, color=blue];
d11 -> d12  [key=0, style=solid, color=green];
d11 -> d6  [key=2, style=dotted, color=green];
d11 -> d13  [key=2, style=dotted, color=green];
d11 -> d8  [key=2, style=dotted, color=green];
d10 -> d11  [key=0, style=solid, color=green];
d10 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable sbyte size"];
d12 -> d9  [key=0, style=bold, color=blue];
d16 -> d17  [key=0, style=solid, color=green];
d16 -> d6  [key=2, style=dotted, color=green];
d16 -> d18  [key=2, style=dotted, color=green];
d16 -> d8  [key=2, style=dotted, color=green];
d15 -> d16  [key=0, style=solid, color=green];
d15 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable short size"];
d17 -> d14  [key=0, style=bold, color=blue];
d21 -> d22  [key=0, style=solid, color=green];
d21 -> d6  [key=2, style=dotted, color=green];
d21 -> d23  [key=2, style=dotted, color=green];
d21 -> d8  [key=2, style=dotted, color=green];
d20 -> d21  [key=0, style=solid, color=green];
d20 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable ushort size"];
d22 -> d19  [key=0, style=bold, color=blue];
d26 -> d27  [key=0, style=solid, color=green];
d26 -> d6  [key=2, style=dotted, color=green];
d26 -> d28  [key=2, style=dotted, color=green];
d26 -> d8  [key=2, style=dotted, color=green];
d25 -> d26  [key=0, style=solid, color=green];
d25 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable int size"];
d27 -> d24  [key=0, style=bold, color=blue];
d31 -> d32  [key=0, style=solid, color=green];
d31 -> d6  [key=2, style=dotted, color=green];
d31 -> d33  [key=2, style=dotted, color=green];
d31 -> d8  [key=2, style=dotted, color=green];
d30 -> d31  [key=0, style=solid, color=green];
d30 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable uint size"];
d32 -> d29  [key=0, style=bold, color=blue];
d36 -> d37  [key=0, style=solid, color=green];
d36 -> d6  [key=2, style=dotted, color=green];
d36 -> d38  [key=2, style=dotted, color=green];
d36 -> d8  [key=2, style=dotted, color=green];
d35 -> d36  [key=0, style=solid, color=green];
d35 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable double size"];
d37 -> d34  [key=0, style=bold, color=blue];
d45 -> d46  [key=0, style=solid, color=green];
d45 -> d47  [key=2, style=dotted, color=green];
d45 -> d48  [key=2, style=dotted, color=green];
d45 -> d8  [key=2, style=dotted, color=green];
d44 -> d45  [key=0, style=solid, color=green];
d44 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable byte size"];
d46 -> d43  [key=0, style=bold, color=blue];
d51 -> d52  [key=0, style=solid, color=green];
d51 -> d47  [key=2, style=dotted, color=green];
d51 -> d53  [key=2, style=dotted, color=green];
d51 -> d8  [key=2, style=dotted, color=green];
d50 -> d51  [key=0, style=solid, color=green];
d50 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable sbyte size"];
d52 -> d49  [key=0, style=bold, color=blue];
d56 -> d57  [key=0, style=solid, color=green];
d56 -> d47  [key=2, style=dotted, color=green];
d56 -> d58  [key=2, style=dotted, color=green];
d56 -> d8  [key=2, style=dotted, color=green];
d55 -> d56  [key=0, style=solid, color=green];
d55 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable short size"];
d57 -> d54  [key=0, style=bold, color=blue];
d61 -> d62  [key=0, style=solid, color=green];
d61 -> d47  [key=2, style=dotted, color=green];
d61 -> d63  [key=2, style=dotted, color=green];
d61 -> d8  [key=2, style=dotted, color=green];
d60 -> d61  [key=0, style=solid, color=green];
d60 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable ushort size"];
d62 -> d59  [key=0, style=bold, color=blue];
d66 -> d67  [key=0, style=solid, color=green];
d66 -> d47  [key=2, style=dotted, color=green];
d66 -> d68  [key=2, style=dotted, color=green];
d66 -> d8  [key=2, style=dotted, color=green];
d65 -> d66  [key=0, style=solid, color=green];
d65 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable int size"];
d67 -> d64  [key=0, style=bold, color=blue];
d71 -> d72  [key=0, style=solid, color=green];
d71 -> d47  [key=2, style=dotted, color=green];
d71 -> d73  [key=2, style=dotted, color=green];
d71 -> d8  [key=2, style=dotted, color=green];
d70 -> d71  [key=0, style=solid, color=green];
d70 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable uint size"];
d72 -> d69  [key=0, style=bold, color=blue];
d73 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable long size"];
d76 -> d77  [key=0, style=solid, color=green];
d76 -> d47  [key=2, style=dotted, color=green];
d76 -> d78  [key=2, style=dotted, color=green];
d76 -> d8  [key=2, style=dotted, color=green];
d75 -> d76  [key=0, style=solid, color=green];
d75 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable double size"];
d77 -> d74  [key=0, style=bold, color=blue];
d84 -> d85  [key=0, style=solid, color=green];
d84 -> d86  [key=2, style=dotted, color=green];
d84 -> d87  [key=2, style=dotted, color=green];
d84 -> d8  [key=2, style=dotted, color=green];
d83 -> d84  [key=0, style=solid, color=green];
d83 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable byte size"];
d85 -> d82  [key=0, style=bold, color=blue];
d90 -> d91  [key=0, style=solid, color=green];
d90 -> d86  [key=2, style=dotted, color=green];
d90 -> d92  [key=2, style=dotted, color=green];
d90 -> d8  [key=2, style=dotted, color=green];
d89 -> d90  [key=0, style=solid, color=green];
d89 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable sbyte size"];
d91 -> d88  [key=0, style=bold, color=blue];
d95 -> d96  [key=0, style=solid, color=green];
d95 -> d86  [key=2, style=dotted, color=green];
d95 -> d97  [key=2, style=dotted, color=green];
d95 -> d8  [key=2, style=dotted, color=green];
d94 -> d95  [key=0, style=solid, color=green];
d94 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable short size"];
d96 -> d93  [key=0, style=bold, color=blue];
d97 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable byte size"];
d100 -> d101  [key=0, style=solid, color=green];
d100 -> d86  [key=2, style=dotted, color=green];
d100 -> d102  [key=2, style=dotted, color=green];
d100 -> d8  [key=2, style=dotted, color=green];
d99 -> d100  [key=0, style=solid, color=green];
d99 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable ushort size"];
d101 -> d98  [key=0, style=bold, color=blue];
d105 -> d106  [key=0, style=solid, color=green];
d105 -> d86  [key=2, style=dotted, color=green];
d105 -> d107  [key=2, style=dotted, color=green];
d105 -> d8  [key=2, style=dotted, color=green];
d104 -> d105  [key=0, style=solid, color=green];
d104 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable int size"];
d106 -> d103  [key=0, style=bold, color=blue];
d110 -> d111  [key=0, style=solid, color=green];
d110 -> d86  [key=2, style=dotted, color=green];
d110 -> d112  [key=2, style=dotted, color=green];
d110 -> d8  [key=2, style=dotted, color=green];
d109 -> d110  [key=0, style=solid, color=green];
d109 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable uint size"];
d111 -> d108  [key=0, style=bold, color=blue];
d115 -> d116  [key=0, style=solid, color=green];
d115 -> d86  [key=2, style=dotted, color=green];
d115 -> d117  [key=2, style=dotted, color=green];
d115 -> d8  [key=2, style=dotted, color=green];
d114 -> d115  [key=0, style=solid, color=green];
d114 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable double size"];
d116 -> d113  [key=0, style=bold, color=blue];
d123 -> d124  [key=0, style=solid, color=green];
d123 -> d125  [key=2, style=dotted, color=green];
d123 -> d126  [key=2, style=dotted, color=green];
d123 -> d8  [key=2, style=dotted, color=green];
d122 -> d123  [key=0, style=solid, color=green];
d122 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable byte size"];
d124 -> d121  [key=0, style=bold, color=blue];
d129 -> d130  [key=0, style=solid, color=green];
d129 -> d125  [key=2, style=dotted, color=green];
d129 -> d131  [key=2, style=dotted, color=green];
d129 -> d8  [key=2, style=dotted, color=green];
d128 -> d129  [key=0, style=solid, color=green];
d128 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable sbyte size"];
d130 -> d127  [key=0, style=bold, color=blue];
d134 -> d135  [key=0, style=solid, color=green];
d134 -> d125  [key=2, style=dotted, color=green];
d134 -> d136  [key=2, style=dotted, color=green];
d134 -> d8  [key=2, style=dotted, color=green];
d133 -> d134  [key=0, style=solid, color=green];
d133 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable short size"];
d135 -> d132  [key=0, style=bold, color=blue];
d139 -> d140  [key=0, style=solid, color=green];
d139 -> d125  [key=2, style=dotted, color=green];
d139 -> d141  [key=2, style=dotted, color=green];
d139 -> d8  [key=2, style=dotted, color=green];
d138 -> d139  [key=0, style=solid, color=green];
d138 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable ushort size"];
d140 -> d137  [key=0, style=bold, color=blue];
d144 -> d145  [key=0, style=solid, color=green];
d144 -> d125  [key=2, style=dotted, color=green];
d144 -> d146  [key=2, style=dotted, color=green];
d144 -> d8  [key=2, style=dotted, color=green];
d143 -> d144  [key=0, style=solid, color=green];
d143 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable int size"];
d145 -> d142  [key=0, style=bold, color=blue];
d149 -> d150  [key=0, style=solid, color=green];
d149 -> d125  [key=2, style=dotted, color=green];
d149 -> d151  [key=2, style=dotted, color=green];
d149 -> d8  [key=2, style=dotted, color=green];
d148 -> d149  [key=0, style=solid, color=green];
d148 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable uint size"];
d150 -> d147  [key=0, style=bold, color=blue];
d154 -> d155  [key=0, style=solid, color=green];
d154 -> d125  [key=2, style=dotted, color=green];
d154 -> d156  [key=2, style=dotted, color=green];
d154 -> d8  [key=2, style=dotted, color=green];
d153 -> d154  [key=0, style=solid, color=green];
d153 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable double size"];
d155 -> d152  [key=0, style=bold, color=blue];
d162 -> d163  [key=0, style=solid, color=green];
d162 -> d164  [key=2, style=dotted, color=green];
d162 -> d165  [key=2, style=dotted, color=green];
d162 -> d8  [key=2, style=dotted, color=green];
d161 -> d162  [key=0, style=solid, color=green];
d163 -> d160  [key=0, style=bold, color=blue];
d168 -> d169  [key=0, style=solid, color=green];
d168 -> d164  [key=2, style=dotted, color=green];
d168 -> d170  [key=2, style=dotted, color=green];
d168 -> d8  [key=2, style=dotted, color=green];
d167 -> d168  [key=0, style=solid, color=green];
d167 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable sbyte size"];
d169 -> d166  [key=0, style=bold, color=blue];
d173 -> d174  [key=0, style=solid, color=green];
d173 -> d164  [key=2, style=dotted, color=green];
d173 -> d175  [key=2, style=dotted, color=green];
d173 -> d8  [key=2, style=dotted, color=green];
d172 -> d173  [key=0, style=solid, color=green];
d172 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable short size"];
d174 -> d171  [key=0, style=bold, color=blue];
d178 -> d179  [key=0, style=solid, color=green];
d178 -> d164  [key=2, style=dotted, color=green];
d178 -> d180  [key=2, style=dotted, color=green];
d178 -> d8  [key=2, style=dotted, color=green];
d177 -> d178  [key=0, style=solid, color=green];
d177 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable ushort size"];
d179 -> d176  [key=0, style=bold, color=blue];
d183 -> d184  [key=0, style=solid, color=green];
d183 -> d164  [key=2, style=dotted, color=green];
d183 -> d185  [key=2, style=dotted, color=green];
d183 -> d8  [key=2, style=dotted, color=green];
d182 -> d183  [key=0, style=solid, color=green];
d182 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable int size"];
d184 -> d181  [key=0, style=bold, color=blue];
d188 -> d189  [key=0, style=solid, color=green];
d188 -> d164  [key=2, style=dotted, color=green];
d188 -> d190  [key=2, style=dotted, color=green];
d188 -> d8  [key=2, style=dotted, color=green];
d187 -> d188  [key=0, style=solid, color=green];
d187 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable uint size"];
d189 -> d186  [key=0, style=bold, color=blue];
d193 -> d194  [key=0, style=solid, color=green];
d193 -> d164  [key=2, style=dotted, color=green];
d193 -> d195  [key=2, style=dotted, color=green];
d193 -> d8  [key=2, style=dotted, color=green];
d192 -> d193  [key=0, style=solid, color=green];
d192 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable double size"];
d194 -> d191  [key=0, style=bold, color=blue];
d201 -> d202  [key=0, style=solid, color=green];
d201 -> d203  [key=2, style=dotted, color=green];
d201 -> d204  [key=2, style=dotted, color=green];
d201 -> d8  [key=2, style=dotted, color=green];
d200 -> d201  [key=0, style=solid, color=green];
d200 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable byte size"];
d202 -> d199  [key=0, style=bold, color=blue];
d207 -> d208  [key=0, style=solid, color=green];
d207 -> d203  [key=2, style=dotted, color=green];
d207 -> d209  [key=2, style=dotted, color=green];
d207 -> d8  [key=2, style=dotted, color=green];
d206 -> d207  [key=0, style=solid, color=green];
d206 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable sbyte size"];
d208 -> d205  [key=0, style=bold, color=blue];
d212 -> d213  [key=0, style=solid, color=green];
d212 -> d203  [key=2, style=dotted, color=green];
d212 -> d214  [key=2, style=dotted, color=green];
d212 -> d8  [key=2, style=dotted, color=green];
d211 -> d212  [key=0, style=solid, color=green];
d211 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable short size"];
d213 -> d210  [key=0, style=bold, color=blue];
d217 -> d218  [key=0, style=solid, color=green];
d217 -> d203  [key=2, style=dotted, color=green];
d217 -> d219  [key=2, style=dotted, color=green];
d217 -> d8  [key=2, style=dotted, color=green];
d216 -> d217  [key=0, style=solid, color=green];
d216 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable ushort size"];
d218 -> d215  [key=0, style=bold, color=blue];
d222 -> d223  [key=0, style=solid, color=green];
d222 -> d203  [key=2, style=dotted, color=green];
d222 -> d224  [key=2, style=dotted, color=green];
d222 -> d8  [key=2, style=dotted, color=green];
d221 -> d222  [key=0, style=solid, color=green];
d221 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable int size"];
d223 -> d220  [key=0, style=bold, color=blue];
d227 -> d228  [key=0, style=solid, color=green];
d227 -> d203  [key=2, style=dotted, color=green];
d227 -> d229  [key=2, style=dotted, color=green];
d227 -> d8  [key=2, style=dotted, color=green];
d226 -> d227  [key=0, style=solid, color=green];
d226 -> d3  [key=3, color=darkorchid, style=bold, label="Local variable uint size"];
d228 -> d225  [key=0, style=bold, color=blue];
d232 -> d233  [key=0, style=solid, color=green];
d232 -> d203  [key=2, style=dotted, color=green];
d232 -> d234  [key=2, style=dotted, color=green];
d232 -> d8  [key=2, style=dotted, color=green];
d231 -> d232  [key=0, style=solid, color=green];
d233 -> d230  [key=0, style=bold, color=blue];
d2 -> d3  [key=0, style=solid];
d40 -> d8  [key=2, style=dotted];
d40 -> d38  [key=2, style=dotted];
d40 -> d41  [key=0, style=solid];
d40 -> d42  [key=2, style=dotted];
d80 -> d8  [key=2, style=dotted];
d80 -> d78  [key=2, style=dotted];
d80 -> d81  [key=0, style=solid];
d80 -> d42  [key=2, style=dotted];
d119 -> d8  [key=2, style=dotted];
d119 -> d117  [key=2, style=dotted];
d119 -> d120  [key=0, style=solid];
d119 -> d42  [key=2, style=dotted];
d158 -> d8  [key=2, style=dotted];
d158 -> d156  [key=2, style=dotted];
d158 -> d159  [key=0, style=solid];
d158 -> d42  [key=2, style=dotted];
d197 -> d8  [key=2, style=dotted];
d197 -> d195  [key=2, style=dotted];
d197 -> d198  [key=0, style=solid];
d197 -> d42  [key=2, style=dotted];
d236 -> d8  [key=2, style=dotted];
d236 -> d234  [key=2, style=dotted];
d236 -> d237  [key=0, style=solid];
d236 -> d42  [key=2, style=dotted];
d9 -> d10  [key=0, style=solid];
d14 -> d15  [key=0, style=solid];
d19 -> d20  [key=0, style=solid];
d24 -> d25  [key=0, style=solid];
d29 -> d30  [key=0, style=solid];
d34 -> d35  [key=0, style=solid];
d43 -> d44  [key=0, style=solid];
d49 -> d50  [key=0, style=solid];
d54 -> d55  [key=0, style=solid];
d59 -> d60  [key=0, style=solid];
d64 -> d65  [key=0, style=solid];
d69 -> d70  [key=0, style=solid];
d74 -> d75  [key=0, style=solid];
d82 -> d83  [key=0, style=solid];
d88 -> d89  [key=0, style=solid];
d93 -> d94  [key=0, style=solid];
d98 -> d99  [key=0, style=solid];
d103 -> d104  [key=0, style=solid];
d108 -> d109  [key=0, style=solid];
d113 -> d114  [key=0, style=solid];
d121 -> d122  [key=0, style=solid];
d127 -> d128  [key=0, style=solid];
d132 -> d133  [key=0, style=solid];
d137 -> d138  [key=0, style=solid];
d142 -> d143  [key=0, style=solid];
d147 -> d148  [key=0, style=solid];
d152 -> d153  [key=0, style=solid];
d160 -> d161  [key=0, style=solid];
d166 -> d167  [key=0, style=solid];
d171 -> d172  [key=0, style=solid];
d176 -> d177  [key=0, style=solid];
d181 -> d182  [key=0, style=solid];
d186 -> d187  [key=0, style=solid];
d191 -> d192  [key=0, style=solid];
d199 -> d200  [key=0, style=solid];
d205 -> d206  [key=0, style=solid];
d210 -> d211  [key=0, style=solid];
d215 -> d216  [key=0, style=solid];
d220 -> d221  [key=0, style=solid];
d225 -> d226  [key=0, style=solid];
d230 -> d231  [key=0, style=solid];
d39 -> d40  [key=0, style=solid];
d41 -> d39  [key=0, style=bold, color=blue];
d79 -> d80  [key=0, style=solid];
d81 -> d79  [key=0, style=bold, color=blue];
d118 -> d119  [key=0, style=solid];
d120 -> d118  [key=0, style=bold, color=blue];
d157 -> d158  [key=0, style=solid];
d159 -> d157  [key=0, style=bold, color=blue];
d196 -> d197  [key=0, style=solid];
d198 -> d196  [key=0, style=bold, color=blue];
d235 -> d236  [key=0, style=solid];
d237 -> d235  [key=0, style=bold, color=blue];
m0_16 -> m0_17  [key=0, style=solid, color=green];
m0_16 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label="double?"];
m0_16 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_16 -> m0_22  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.Tense"];
m0_16 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.TimeUnit"];
m0_16 -> m0_39  [key=1, style=dashed, color=red, label=string];
m0_16 -> m0_40  [key=1, style=dashed, color=red, label=string];
m0_17 -> m0_18  [key=0, style=solid, color=green];
m0_17 -> m0_19  [key=0, style=solid, color=green];
m0_18 -> m0_20  [key=0, style=solid, color=green];
m0_18 -> m0_42  [key=2, style=dotted, color=green];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_45  [key=2, style=dotted];
m0_21 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_21 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_21 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_21 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_21 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_21 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_21 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_21 -> m0_36  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_21 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_24  [key=0, style=solid];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_27  [key=0, style=solid];
m0_24 -> m0_29  [key=0, style=solid];
m0_24 -> m0_31  [key=0, style=solid];
m0_24 -> m0_33  [key=0, style=solid];
m0_24 -> m0_35  [key=0, style=solid];
m0_24 -> m0_37  [key=0, style=solid];
m0_39 -> m0_40  [key=0, style=solid, color=red];
m0_39 -> m0_0  [key=2, style=dotted, color=red];
m0_40 -> m0_41  [key=0, style=solid, color=red];
m0_40 -> m0_9  [key=2, style=dotted, color=red];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_43  [key=2, style=dotted];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_44  [key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_23 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_23 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_23 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_23 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_23 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_23 -> m0_36  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_23 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_26 -> m0_39  [key=0, style=solid, color=red];
m0_26 -> m0_46  [key=2, style=dotted];
m0_28 -> m0_39  [key=0, style=solid, color=red];
m0_28 -> m0_47  [key=2, style=dotted];
m0_30 -> m0_39  [key=0, style=solid, color=red];
m0_30 -> m0_48  [key=2, style=dotted];
m0_32 -> m0_39  [key=0, style=solid, color=red];
m0_32 -> m0_49  [key=2, style=dotted];
m0_34 -> m0_39  [key=0, style=solid, color=red];
m0_34 -> m0_50  [key=2, style=dotted];
m0_36 -> m0_39  [key=0, style=solid, color=red];
m0_36 -> m0_50  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid, color=red];
m0_38 -> m0_50  [key=2, style=dotted];
m0_38 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label=deltaFromNow];
m0_25 -> m0_26  [key=0, style=solid];
m0_27 -> m0_28  [key=0, style=solid];
m0_29 -> m0_30  [key=0, style=solid];
m0_31 -> m0_32  [key=0, style=solid];
m0_33 -> m0_34  [key=0, style=solid];
m0_35 -> m0_36  [key=0, style=solid];
m0_37 -> m0_38  [key=0, style=solid];
m0_41 -> m0_16  [key=0, style=bold, color=blue];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_12  [key=1, style=dashed, color=red, label=string];
m0_9 -> m0_13  [key=1, style=dashed, color=red, label=string];
m0_9 -> m0_16  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Globalization.CultureInfo culture"];
m0_9 -> m0_20  [key=3, color=darkorchid, style=bold, label="Parameter variable System.TimeSpan deltaFromNow"];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_15  [key=2, style=dotted];
m0_10 -> m0_12  [key=1, style=dashed, color=red, label=utcNow];
m0_12 -> m0_13  [key=0, style=solid, color=red];
m0_12 -> m0_6  [key=2, style=dotted, color=red];
m0_12 -> m0_7  [key=2, style=dotted, color=red];
m0_12 -> d8  [key=2, style=dotted, color=red];
m0_13 -> m0_14  [key=0, style=solid, color=red];
m0_13 -> m0_6  [key=2, style=dotted, color=red];
m0_13 -> m0_7  [key=2, style=dotted, color=red];
m0_13 -> d8  [key=2, style=dotted, color=red];
m0_11 -> m0_12  [key=0, style=solid, color=red];
m0_11 -> m0_15  [key=2, style=dotted];
m0_11 -> m0_13  [key=1, style=dashed, color=red, label=now];
m0_14 -> m0_9  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_3  [key=1, style=dashed, color=green, label=string];
m0_0 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_0 -> m0_16  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Globalization.CultureInfo culture"];
m0_0 -> m0_20  [key=3, color=darkorchid, style=bold, label="Parameter variable System.TimeSpan deltaFromNow"];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=1, style=dashed, color=green, label=utcNow];
m0_3 -> m0_4  [key=0, style=solid, color=green];
m0_3 -> m0_6  [key=2, style=dotted, color=green];
m0_3 -> m0_7  [key=2, style=dotted, color=green];
m0_3 -> d8  [key=2, style=dotted, color=green];
m0_4 -> m0_5  [key=0, style=solid, color=red];
m0_4 -> m0_6  [key=2, style=dotted, color=red];
m0_4 -> m0_7  [key=2, style=dotted, color=red];
m0_4 -> d8  [key=2, style=dotted, color=red];
m0_2 -> m0_3  [key=0, style=solid, color=green];
m0_2 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label=localNow];
m0_5 -> m0_0  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [key=0, style=bold, color=blue];
m1_15 -> m1_16  [key=0, style=solid];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_5  [key=2, style=dotted];
m1_17 -> m1_15  [key=0, style=bold, color=blue];
m1_12 -> m1_13  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_5  [key=2, style=dotted];
m1_14 -> m1_12  [key=0, style=bold, color=blue];
m1_33 -> m1_34  [key=0, style=solid];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_5  [key=2, style=dotted];
m1_35 -> m1_33  [key=0, style=bold, color=blue];
m1_9 -> m1_10  [key=0, style=solid];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_5  [key=2, style=dotted];
m1_11 -> m1_9  [key=0, style=bold, color=blue];
m1_36 -> m1_37  [key=0, style=solid];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_5  [key=2, style=dotted];
m1_38 -> m1_36  [key=0, style=bold, color=blue];
m1_42 -> m1_43  [key=0, style=solid];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_45  [key=2, style=dotted];
m1_43 -> m1_5  [key=2, style=dotted];
m1_44 -> m1_42  [key=0, style=bold, color=blue];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_5  [key=2, style=dotted];
m1_4 -> m1_2  [key=0, style=bold, color=blue];
m1_21 -> m1_22  [key=0, style=solid, color=green];
m1_22 -> m1_23  [key=0, style=solid, color=green];
m1_22 -> m1_5  [key=2, style=dotted, color=green];
m1_23 -> m1_21  [key=0, style=bold, color=blue];
m1_30 -> m1_31  [key=0, style=solid];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_5  [key=2, style=dotted];
m1_32 -> m1_30  [key=0, style=bold, color=blue];
m1_27 -> m1_28  [key=0, style=solid];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_5  [key=2, style=dotted];
m1_29 -> m1_27  [key=0, style=bold, color=blue];
m1_39 -> m1_40  [key=0, style=solid];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_5  [key=2, style=dotted];
m1_41 -> m1_39  [key=0, style=bold, color=blue];
m1_6 -> m1_7  [key=0, style=solid];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_5  [key=2, style=dotted];
m1_8 -> m1_6  [key=0, style=bold, color=blue];
m1_18 -> m1_19  [key=0, style=solid];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_5  [key=2, style=dotted];
m1_20 -> m1_18  [key=0, style=bold, color=blue];
m1_24 -> m1_25  [key=0, style=solid];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_5  [key=2, style=dotted];
m1_26 -> m1_24  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m2_0 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m2_0 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label=tense];
m2_1 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label=tense];
m2_1 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label=tense];
m2_1 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label=tense];
m2_1 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label=tense];
m2_1 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label=tense];
m2_1 -> m2_17  [key=1, style=dashed, color=red, label=tense];
m2_1 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label=tense];
m2_1 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label=tense];
m2_1 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label=tense];
m2_1 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label=tense];
m2_1 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label=tense];
m2_1 -> m2_30  [key=1, style=dashed, color=darkseagreen4, label=tense];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_32  [key=2, style=dotted];
m2_2 -> m2_33  [key=2, style=dotted];
m2_2 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_34  [key=2, style=dotted];
m2_3 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label=formatter];
m2_3 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label=formatter];
m2_3 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label=formatter];
m2_3 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label=formatter];
m2_3 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label=formatter];
m2_3 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label=formatter];
m2_3 -> m2_17  [key=1, style=dashed, color=red, label=formatter];
m2_3 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label=formatter];
m2_3 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label=formatter];
m2_3 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label=formatter];
m2_3 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label=formatter];
m2_3 -> m2_30  [key=1, style=dashed, color=darkseagreen4, label=formatter];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_23  [key=0, style=solid];
m2_21 -> m2_36  [key=2, style=dotted];
m2_5 -> m2_31  [key=0, style=solid];
m2_5 -> m2_35  [key=2, style=dotted];
m2_7 -> m2_31  [key=0, style=solid];
m2_7 -> m2_35  [key=2, style=dotted];
m2_7 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_7 -> m2_8  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_9 -> m2_31  [key=0, style=solid];
m2_9 -> m2_35  [key=2, style=dotted];
m2_11 -> m2_31  [key=0, style=solid];
m2_11 -> m2_35  [key=2, style=dotted];
m2_11 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_11 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_13 -> m2_31  [key=0, style=solid];
m2_13 -> m2_35  [key=2, style=dotted];
m2_15 -> m2_31  [key=0, style=solid];
m2_15 -> m2_35  [key=2, style=dotted];
m2_15 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_15 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_17 -> m2_31  [key=0, style=solid, color=red];
m2_17 -> m2_35  [key=2, style=dotted, color=red];
m2_19 -> m2_31  [key=0, style=solid];
m2_19 -> m2_35  [key=2, style=dotted];
m2_19 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_19 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_22 -> m2_31  [key=0, style=solid];
m2_22 -> m2_35  [key=2, style=dotted];
m2_23 -> m2_31  [key=0, style=solid];
m2_23 -> m2_35  [key=2, style=dotted];
m2_23 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_23 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_26 -> m2_31  [key=0, style=solid];
m2_26 -> m2_35  [key=2, style=dotted];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_35  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_6  [key=0, style=solid];
m2_4 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_8  [key=0, style=solid];
m2_6 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_10  [key=0, style=solid];
m2_8 -> m2_8  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_12  [key=0, style=solid];
m2_10 -> m2_10  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_14  [key=0, style=solid];
m2_12 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_16  [key=0, style=solid];
m2_14 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_16 -> m2_17  [key=0, style=solid, color=red];
m2_16 -> m2_18  [key=0, style=solid];
m2_16 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_20  [key=0, style=solid];
m2_18 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_24  [key=0, style=solid];
m2_20 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_20 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_27  [key=0, style=solid];
m2_24 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_37  [key=2, style=dotted];
m2_25 -> m2_38  [key=2, style=dotted];
m2_25 -> m2_25  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_25 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_37  [key=2, style=dotted];
m2_27 -> m2_38  [key=2, style=dotted];
m2_27 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label=ts];
m2_27 -> m2_30  [key=1, style=dashed, color=darkseagreen4, label=years];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_30  [key=0, style=solid];
m2_29 -> m2_30  [key=0, style=solid];
m2_31 -> m2_0  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_15  [key=2, style=dotted];
m3_1 -> m3_16  [key=2, style=dotted];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_17  [key=2, style=dotted];
m3_2 -> m3_16  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_18  [key=2, style=dotted];
m3_3 -> m3_16  [key=2, style=dotted];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_19  [key=2, style=dotted];
m3_4 -> m3_16  [key=2, style=dotted];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_20  [key=2, style=dotted];
m3_5 -> m3_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_21  [key=2, style=dotted];
m3_6 -> m3_16  [key=2, style=dotted];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_22  [key=2, style=dotted];
m3_7 -> m3_16  [key=2, style=dotted];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_23  [key=2, style=dotted];
m3_8 -> m3_16  [key=2, style=dotted];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_24  [key=2, style=dotted];
m3_9 -> m3_16  [key=2, style=dotted];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_20  [key=2, style=dotted];
m3_10 -> m3_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_20  [key=2, style=dotted];
m3_11 -> m3_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_25  [key=2, style=dotted];
m3_12 -> m3_16  [key=2, style=dotted];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_26  [key=2, style=dotted];
m3_13 -> m3_16  [key=2, style=dotted];
m3_14 -> m3_0  [key=0, style=bold, color=blue];
m3_27 -> m3_28  [key=0, style=solid];
m3_31 -> m3_32  [key=0, style=solid];
m3_35 -> m3_36  [key=0, style=solid];
m3_39 -> m3_40  [key=0, style=solid];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_30  [key=2, style=dotted];
m3_29 -> m3_27  [key=0, style=bold, color=blue];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_34  [key=2, style=dotted];
m3_33 -> m3_31  [key=0, style=bold, color=blue];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> m3_38  [key=2, style=dotted];
m3_37 -> m3_35  [key=0, style=bold, color=blue];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_42  [key=2, style=dotted];
m3_41 -> m3_39  [key=0, style=bold, color=blue];
m3_43 -> m3_1  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.NumberToWordsConverterRegistry"];
m3_43 -> m3_2  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.NumberToWordsConverterRegistry"];
m3_43 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.NumberToWordsConverterRegistry"];
m3_43 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.NumberToWordsConverterRegistry"];
m3_43 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.NumberToWordsConverterRegistry"];
m3_43 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.NumberToWordsConverterRegistry"];
m3_43 -> m3_7  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.NumberToWordsConverterRegistry"];
m3_43 -> m3_8  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.NumberToWordsConverterRegistry"];
m3_43 -> m3_9  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.NumberToWordsConverterRegistry"];
m3_43 -> m3_10  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.NumberToWordsConverterRegistry"];
m3_43 -> m3_11  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.NumberToWordsConverterRegistry"];
m3_43 -> m3_12  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.NumberToWordsConverterRegistry"];
m3_43 -> m3_13  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.NumberToWordsConverterRegistry"];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_2  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_0  [key=0, style=bold, color=blue];
m5_6 -> m5_7  [key=0, style=solid];
m5_7 -> m5_6  [key=0, style=bold, color=blue];
m5_4 -> m5_5  [key=0, style=solid];
m5_5 -> m5_4  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=2, style=dotted];
m6_2 -> m6_0  [key=0, style=bold, color=blue];
m7_5 -> m7_6  [key=0, style=solid];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_3  [key=2, style=dotted];
m7_6 -> d8  [key=2, style=dotted];
m7_7 -> m7_5  [key=0, style=bold, color=blue];
m7_15 -> m7_16  [key=0, style=solid];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_20  [key=1, style=dashed, color=darkseagreen4, label=format];
m7_16 -> m7_16  [key=3, color=darkorchid, style=bold, label="Local variable string format"];
m7_17 -> m7_18  [key=0, style=solid];
m7_17 -> m7_11  [key=2, style=dotted];
m7_17 -> m7_19  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_18 -> m7_15  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_3  [key=2, style=dotted];
m7_1 -> d8  [key=2, style=dotted];
m7_2 -> m7_0  [key=0, style=bold, color=blue];
m7_8 -> m7_9  [key=0, style=solid];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_11  [key=2, style=dotted];
m7_9 -> m7_12  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_10 -> m7_8  [key=0, style=bold, color=blue];
m7_19 -> m7_20  [key=0, style=solid];
m7_12 -> m7_13  [key=0, style=solid];
m7_13 -> m7_14  [key=0, style=solid];
m7_13 -> m7_3  [key=2, style=dotted];
m7_14 -> m7_12  [key=0, style=bold, color=blue];
m7_20 -> m7_21  [key=0, style=solid];
m7_20 -> m7_3  [key=2, style=dotted];
m7_21 -> m7_19  [key=0, style=bold, color=blue];
m7_22 -> m7_20  [key=1, style=dashed, color=darkseagreen4, label=format];
}
