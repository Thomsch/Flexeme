digraph  {
n53 [label="Hangfire.Server.DelayedJobScheduler", span=""];
n0 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler()", label="Entry Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler()", span="81-81"];
n1 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler()", label="Exit Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler()", span="81-81"];
n2 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan)", label="Entry Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan)", span="91-91"];
n3 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan)", label="Exit Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan)", span="91-91"];
n4 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", label="Entry Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", span="104-104"];
n5 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", label="stateChanger == null", span="106-106"];
n6 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", label="throw new ArgumentNullException(nameof(stateChanger));", span="106-106"];
n7 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", label="_stateChanger = stateChanger", span="108-108"];
n8 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", label="_pollingDelay = pollingDelay", span="109-109"];
n9 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", label="Exit Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", span="104-104"];
n10 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n11 [cluster="Unk.nameof", label="Entry Unk.nameof", span=""];
n12 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", label="Entry Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="113-113"];
n13 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", label="context == null", span="115-115"];
n14 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", label="throw new ArgumentNullException(nameof(context));", span="115-115"];
n16 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", label="EnqueueNextScheduledJob(context)", span="119-119"];
n18 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", label="context.IsShutdownRequested", span="123-123"];
n21 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", label="context.Wait(_pollingDelay)", span="134-134"];
n15 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", label="var jobsEnqueued = 0", span="117-117"];
n17 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", label="jobsEnqueued++", span="121-121"];
n19 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", label="jobsEnqueued != 0", span="129-129"];
n20 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", label="Logger.Info($''{jobsEnqueued} scheduled job(s) enqueued.'')", span="131-131"];
n23 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", label="Entry Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", span="143-143"];
n24 [cluster="Hangfire.Logging.ILog.Info(string)", label="Entry Hangfire.Logging.ILog.Info(string)", span="204-204"];
n22 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", label="Exit Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="113-113"];
n25 [cluster="Hangfire.Server.BackgroundProcessContext.Wait(System.TimeSpan)", label="Entry Hangfire.Server.BackgroundProcessContext.Wait(System.TimeSpan)", span="54-54"];
n26 [cluster="Hangfire.Server.DelayedJobScheduler.ToString()", label="Entry Hangfire.Server.DelayedJobScheduler.ToString()", span="138-138"];
n27 [cluster="Hangfire.Server.DelayedJobScheduler.ToString()", label="return GetType().Name;", span="140-140"];
n28 [cluster="Hangfire.Server.DelayedJobScheduler.ToString()", label="Exit Hangfire.Server.DelayedJobScheduler.ToString()", span="138-138"];
n29 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
n30 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, label="0: var connection = context.Storage.GetConnection()", span="145-145"];
n36 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", label="var appliedState = _stateChanger.ChangeState(new StateChangeContext(\r\n                    context.Storage,\r\n                    connection,\r\n                    jobId,\r\n                    new EnqueuedState { Reason = $''Triggered by {ToString()}'' }, \r\n                    ScheduledState.StateName))", span="159-164"];
n31 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, label="0: connection.AcquireDistributedLock(''locks:schedulepoller'', DefaultLockTimeout)", span="146-146"];
n43 [cluster="Hangfire.JobStorage.GetConnection()", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
n33 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", label="var jobId = connection.GetFirstByLowestScoreFromSet(''schedule'', 0, timestamp)", span="151-151"];
n38 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", label="var transaction = connection.CreateWriteTransaction()", span="171-171"];
n32 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", label="var timestamp = JobHelper.ToTimestamp(DateTime.UtcNow)", span="148-148"];
n44 [cluster="Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", label="Entry Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", span="28-28"];
n45 [cluster="Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", label="Entry Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", span="57-57"];
n34 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", label="jobId == null", span="153-153"];
n46 [cluster="Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", label="Entry Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="57-57"];
n39 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", label="transaction.RemoveFromSet(''schedule'', jobId)", span="173-173"];
n35 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", label="return false;", span="156-156"];
n37 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", label="appliedState == null", span="166-166"];
n47 [cluster="Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, params string[])", label="Entry Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, params string[])", span="35-35"];
n48 [cluster="Hangfire.States.EnqueuedState.EnqueuedState()", label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="87-87"];
n49 [cluster="Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", label="Entry Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="25-25"];
n41 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", label="return true;", span="178-178"];
n50 [cluster="Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", label="Entry Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", span="27-27"];
n40 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", label="transaction.Commit()", span="174-174"];
n51 [cluster="Hangfire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", label="Entry Hangfire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="43-43"];
n52 [cluster="Hangfire.Storage.IWriteOnlyTransaction.Commit()", label="Entry Hangfire.Storage.IWriteOnlyTransaction.Commit()", span="54-54"];
n42 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", label="Exit Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", span="143-143"];
d30 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, label="0: var connection = context.Storage.GetConnection()", span="146-146"];
d31 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", label="IDisposable distributedLock", span="148-148"];
d32 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", label="distributedLock = connection.AcquireDistributedLock(''locks:schedulepoller'', DefaultLockTimeout)", span="152-152"];
d33 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", label="var appliedState = _stateChanger.ChangeState(new StateChangeContext(\r\n                    context.Storage,\r\n                    connection,\r\n                    jobId,\r\n                    new EnqueuedState { Reason = $''Triggered by {ToString()}'' }, \r\n                    ScheduledState.StateName))", span="155-160"];
d36 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", label="var jobId = connection.GetFirstByLowestScoreFromSet(''schedule'', 0, timestamp)", span="167-167"];
d39 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, label="0: var appliedState = _stateChanger.ChangeState(new StateChangeContext(\r\n                        context.Storage,\r\n                        connection,\r\n                        jobId,\r\n                        new EnqueuedState { Reason = $''Triggered by {ToString()}'' },\r\n                        ScheduledState.StateName))", span="175-180"];
d41 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, label="0: var transaction = connection.CreateWriteTransaction()", span="187-187"];
d37 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", label="jobId == null", span="169-169"];
d40 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, label="0: appliedState == null", span="182-182"];
d42 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, label="0: transaction.RemoveFromSet(''schedule'', jobId)", span="189-189"];
d43 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, label="0: transaction.Commit()", span="190-190"];
d44 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", label="return true;", span="194-194"];
d34 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", label=distributedLock, span="162-162"];
d48 [cluster="StateChangeContext.cstr", label="Entry StateChangeContext.cstr", span=""];
m0_29 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="new ServerComponentRunner(_component.Object)", span="43-43"];
m0_179 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Component_ReturnsUnderlyingComponent()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Component_ReturnsUnderlyingComponent()", span="228-228"];
m0_180 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Component_ReturnsUnderlyingComponent()", file="DelayedJobSchedulerFacts.cs", label="var runner = CreateRunner()", span="230-230"];
m0_181 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Component_ReturnsUnderlyingComponent()", file="DelayedJobSchedulerFacts.cs", label="Assert.Same(_component.Object, runner.Component)", span="232-232"];
m0_182 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Component_ReturnsUnderlyingComponent()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Component_ReturnsUnderlyingComponent()", span="228-228"];
m0_40 [cluster="HangFire.Server.ServerComponentRunner.Dispose()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.Server.ServerComponentRunner.Dispose()", span="84-84"];
m0_183 [cluster="Unk.Same", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.Same", span=""];
m0_38 [cluster="Unk.IsNotNull", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.IsNotNull", span=""];
m0_41 [cluster="Unk.Verify", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.Verify", span=""];
m0_11 [cluster="System.DateTime.AddDays(double)", file="DelayedJobSchedulerFacts.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m0_39 [cluster="System.Threading.Thread.Sleep(System.TimeSpan)", file="DelayedJobSchedulerFacts.cs", label="Entry System.Threading.Thread.Sleep(System.TimeSpan)", span="0-0"];
m0_51 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", span="81-81"];
m0_52 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", file="DelayedJobSchedulerFacts.cs", label="var fetchedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId), ''Fetched'')", span="83-84"];
m0_55 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", span="90-90"];
m0_54 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", span="81-81"];
m0_53 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", file="DelayedJobSchedulerFacts.cs", label="Assert.IsNotNull(fetchedTimestamp)", span="86-86"];
m0_56 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", file="DelayedJobSchedulerFacts.cs", label="var fetchedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId), ''Fetched'')", span="92-93"];
m0_131 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalled_AfterStop()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalled_AfterStop()", span="163-163"];
m0_132 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalled_AfterStop()", file="DelayedJobSchedulerFacts.cs", label="var runner = CreateRunner()", span="165-165"];
m0_134 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalled_AfterStop()", file="DelayedJobSchedulerFacts.cs", label="runner.Stop()", span="167-167"];
m0_133 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalled_AfterStop()", file="DelayedJobSchedulerFacts.cs", label="runner.Start()", span="166-166"];
m0_135 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalled_AfterStop()", file="DelayedJobSchedulerFacts.cs", label="Assert.DoesNotThrow(runner.Dispose)", span="169-169"];
m0_136 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalled_AfterStop()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalled_AfterStop()", span="163-163"];
m0_15 [cluster="HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent)", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent)", span="36-36"];
m0_0 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", span="13-13"];
m0_1 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="DelayedJobSchedulerFacts.cs", label="DateTime time", span="15-15"];
m0_2 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="DelayedJobSchedulerFacts.cs", label="timeAgo.Equals(''millisecond'')", span="16-16"];
m0_3 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="DelayedJobSchedulerFacts.cs", label="time = DateTime.UtcNow.AddMilliseconds(-1)", span="16-16"];
m0_23 [cluster="ServerComponentRunner.cstr", file="DelayedJobSchedulerFacts.cs", label="Entry ServerComponentRunner.cstr", span=""];
m0_16 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="32-32"];
m0_17 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="DelayedJobSchedulerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerComponentRunner(_component.Object, null))", span="34-35"];
m0_18 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(''options'', exception.ParamName)", span="37-37"];
m0_20 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="35-35"];
m0_22 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="35-35"];
m0_19 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="32-32"];
m0_21 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="new ServerComponentRunner(_component.Object, null)", span="35-35"];
m0_24 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_UsesDefaultOptions_IfTheyWereNoProvided()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_UsesDefaultOptions_IfTheyWereNoProvided()", span="41-41"];
m0_13 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="new ServerComponentRunner(null)", span="26-26"];
m0_27 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.WhenTimedOutJobsHandlerRuns()", file="DelayedJobSchedulerFacts.cs", label="watcher.FindAndRequeueTimedOutJobs()", span="44-44"];
m0_137 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", span="173-173"];
m0_138 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="DelayedJobSchedulerFacts.cs", label="_options.MaxRetryAttempts = 0", span="176-176"];
m0_140 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="DelayedJobSchedulerFacts.cs", label="var runner = new ServerComponentRunner(component, _options)", span="179-179"];
m0_143 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="DelayedJobSchedulerFacts.cs", label="runner.Dispose()", span="185-185"];
m0_139 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="DelayedJobSchedulerFacts.cs", label="var component = new DisposableComponent()", span="178-178"];
m0_141 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="DelayedJobSchedulerFacts.cs", label="runner.Start()", span="181-181"];
m0_142 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="DelayedJobSchedulerFacts.cs", label="Thread.Sleep(100)", span="182-182"];
m0_144 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="DelayedJobSchedulerFacts.cs", label="Thread.Sleep(500)", span="186-186"];
m0_145 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="DelayedJobSchedulerFacts.cs", label="Assert.True(component.Disposed)", span="189-189"];
m0_146 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_ShouldDisposeDisposableComponent()", span="173-173"];
m0_100 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", span="121-121"];
m0_102 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="DelayedJobSchedulerFacts.cs", label="var runner = CreateRunner()", span="126-126"];
m0_103 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="DelayedJobSchedulerFacts.cs", label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>()))\r\n                .Callback(() => { timesExecuted++; Thread.Yield(); })", span="127-128"];
m0_105 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="DelayedJobSchedulerFacts.cs", label="runner.Stop()", span="131-131"];
m0_106 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="DelayedJobSchedulerFacts.cs", label="Thread.Sleep(TimeSpan.FromMilliseconds(100))", span="132-132"];
m0_109 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="DelayedJobSchedulerFacts.cs", label="Thread.Sleep(TimeSpan.FromMilliseconds(100))", span="137-137"];
m0_101 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="DelayedJobSchedulerFacts.cs", label="int timesExecuted = 0", span="124-124"];
m0_104 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="DelayedJobSchedulerFacts.cs", label="runner.Start()", span="130-130"];
m0_108 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="DelayedJobSchedulerFacts.cs", label="runner.Start()", span="136-136"];
m0_107 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="DelayedJobSchedulerFacts.cs", label="timesExecuted = 0", span="133-133"];
m0_110 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="DelayedJobSchedulerFacts.cs", label="Assert.True(timesExecuted > 0)", span="140-140"];
m0_111 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_CanRestartStoppedComponent()", span="121-121"];
m0_149 [cluster="System.Threading.Thread.Sleep(int)", file="DelayedJobSchedulerFacts.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m0_9 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenComponentIsNull()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenComponentIsNull()", span="23-23"];
m0_37 [cluster="Unk.GetValueFromHash", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.GetValueFromHash", span=""];
m0_200 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.CreateRunner()", file="DelayedJobSchedulerFacts.cs", label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>()))\r\n                .Callback(() => Thread.Yield())", span="262-263"];
m0_201 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.CreateRunner()", file="DelayedJobSchedulerFacts.cs", label="return new ServerComponentRunner(_component.Object, _options);", span="264-264"];
m0_202 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.CreateRunner()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.CreateRunner()", span="260-260"];
m0_10 [cluster="System.DateTime.AddMilliseconds(double)", file="DelayedJobSchedulerFacts.cs", label="Entry System.DateTime.AddMilliseconds(double)", span="0-0"];
m0_192 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.WaitingComponent.WaitingComponent()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.WaitingComponent.WaitingComponent()", span="248-248"];
m0_83 [cluster="HangFire.Server.ServerComponentRunner.Stop()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.Server.ServerComponentRunner.Stop()", span="70-70"];
m0_7 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenComponentIsNull()", file="DelayedJobSchedulerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerComponentRunner(null))", span="25-26"];
m0_4 [cluster="Mock<IServerComponent>.cstr", file="DelayedJobSchedulerFacts.cs", label="Entry Mock<IServerComponent>.cstr", span=""];
m0_6 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenComponentIsNull()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenComponentIsNull()", span="23-23"];
m0_5 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="24-24"];
m0_8 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_ThrowsAnException_WhenComponentIsNull()", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(''component'', exception.ParamName)", span="28-28"];
m0_165 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", span="213-213"];
m0_166 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", file="DelayedJobSchedulerFacts.cs", label="var runner = CreateRunner()", span="215-215"];
m0_167 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", file="DelayedJobSchedulerFacts.cs", label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Throws<InvalidOperationException>()", span="216-216"];
m0_171 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", file="DelayedJobSchedulerFacts.cs", label="_component.Verify(x => x.Execute(\r\n                It.IsAny<CancellationToken>()),\r\n                Times.AtLeast(2))", span="222-224"];
m0_170 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", file="DelayedJobSchedulerFacts.cs", label="runner.Dispose()", span="220-220"];
m0_168 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", file="DelayedJobSchedulerFacts.cs", label="runner.Start()", span="217-217"];
m0_169 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", file="DelayedJobSchedulerFacts.cs", label="Thread.Sleep(5000)", span="219-219"];
m0_172 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldBeExecutedSeveralTimes_Automatically()", span="213-213"];
m0_120 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_CanBeCalledMultipleTimesInARow()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_CanBeCalledMultipleTimesInARow()", span="144-144"];
m0_121 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_CanBeCalledMultipleTimesInARow()", file="DelayedJobSchedulerFacts.cs", label="var runner = CreateRunner()", span="146-146"];
m0_123 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_CanBeCalledMultipleTimesInARow()", file="DelayedJobSchedulerFacts.cs", label="runner.Stop()", span="148-148"];
m0_122 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_CanBeCalledMultipleTimesInARow()", file="DelayedJobSchedulerFacts.cs", label="runner.Start()", span="147-147"];
m0_124 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_CanBeCalledMultipleTimesInARow()", file="DelayedJobSchedulerFacts.cs", label="Assert.DoesNotThrow(runner.Stop)", span="150-150"];
m0_125 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_CanBeCalledMultipleTimesInARow()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_CanBeCalledMultipleTimesInARow()", span="144-144"];
m0_62 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_OnDisposedObject_ThrowsAnException()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_OnDisposedObject_ThrowsAnException()", span="80-80"];
m0_63 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_OnDisposedObject_ThrowsAnException()", file="DelayedJobSchedulerFacts.cs", label="var runner = CreateRunner()", span="82-82"];
m0_64 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_OnDisposedObject_ThrowsAnException()", file="DelayedJobSchedulerFacts.cs", label="runner.Dispose()", span="83-83"];
m0_65 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_OnDisposedObject_ThrowsAnException()", file="DelayedJobSchedulerFacts.cs", label="Assert.Throws<ObjectDisposedException>(() => runner.Start())", span="85-85"];
m0_66 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_OnDisposedObject_ThrowsAnException()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Start_OnDisposedObject_ThrowsAnException()", span="80-80"];
m0_50 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalledMultipleTimes()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_CanBeCalledMultipleTimes()", span="58-58"];
m0_92 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_OnDisposedObject_ThrowsAnException()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_OnDisposedObject_ThrowsAnException()", span="112-112"];
m0_93 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_OnDisposedObject_ThrowsAnException()", color=green, community=0, file="DelayedJobSchedulerFacts.cs", label="0: var runner = CreateRunner()", span="114-114"];
m0_94 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_OnDisposedObject_ThrowsAnException()", color=green, community=0, file="DelayedJobSchedulerFacts.cs", label="0: runner.Dispose()", span="115-115"];
m0_95 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_OnDisposedObject_ThrowsAnException()", color=green, community=0, file="DelayedJobSchedulerFacts.cs", label="0: Assert.Throws<ObjectDisposedException>(() => runner.Stop())", span="117-117"];
m0_96 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_OnDisposedObject_ThrowsAnException()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_OnDisposedObject_ThrowsAnException()", span="112-112"];
m0_12 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="26-26"];
m0_25 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_UsesDefaultOptions_IfTheyWereNoProvided()", file="DelayedJobSchedulerFacts.cs", label="Assert.DoesNotThrow(() => new ServerComponentRunner(_component.Object))", span="43-43"];
m0_26 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_UsesDefaultOptions_IfTheyWereNoProvided()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Ctor_UsesDefaultOptions_IfTheyWereNoProvided()", span="41-41"];
m0_28 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="43-43"];
m0_184 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.OperationCanceledException_DoesNotCauseAutomaticRetry()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.OperationCanceledException_DoesNotCauseAutomaticRetry()", span="236-236"];
m0_190 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.OperationCanceledException_DoesNotCauseAutomaticRetry()", file="DelayedJobSchedulerFacts.cs", label="Assert.Equal(1, component.CalledTimes)", span="245-245"];
m0_186 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.OperationCanceledException_DoesNotCauseAutomaticRetry()", file="DelayedJobSchedulerFacts.cs", label="var runner = new ServerComponentRunner(component, _options)", span="239-239"];
m0_189 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.OperationCanceledException_DoesNotCauseAutomaticRetry()", file="DelayedJobSchedulerFacts.cs", label="runner.Dispose()", span="243-243"];
m0_185 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.OperationCanceledException_DoesNotCauseAutomaticRetry()", file="DelayedJobSchedulerFacts.cs", label="var component = new WaitingComponent()", span="238-238"];
m0_187 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.OperationCanceledException_DoesNotCauseAutomaticRetry()", file="DelayedJobSchedulerFacts.cs", label="runner.Start()", span="240-240"];
m0_188 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.OperationCanceledException_DoesNotCauseAutomaticRetry()", file="DelayedJobSchedulerFacts.cs", label="Thread.Sleep(500)", span="242-242"];
m0_191 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.OperationCanceledException_DoesNotCauseAutomaticRetry()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.OperationCanceledException_DoesNotCauseAutomaticRetry()", span="236-236"];
m0_126 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_StopsExecutionAutomatically()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_StopsExecutionAutomatically()", span="154-154"];
m0_127 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_StopsExecutionAutomatically()", file="DelayedJobSchedulerFacts.cs", label="var runner = CreateRunner()", span="156-156"];
m0_128 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_StopsExecutionAutomatically()", file="DelayedJobSchedulerFacts.cs", label="runner.Start()", span="157-157"];
m0_129 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_StopsExecutionAutomatically()", file="DelayedJobSchedulerFacts.cs", label="Assert.DoesNotThrow(runner.Dispose)", span="159-159"];
m0_130 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_StopsExecutionAutomatically()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Dispose_StopsExecutionAutomatically()", span="154-154"];
m0_81 [cluster="Unk.Setup", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.Setup", span=""];
m0_57 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", file="DelayedJobSchedulerFacts.cs", label="Assert.IsNull(fetchedTimestamp)", span="95-95"];
m0_31 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", span="48-48"];
m0_32 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="DelayedJobSchedulerFacts.cs", label="var checkedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Checked'')", span="50-52"];
m0_35 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="DelayedJobSchedulerFacts.cs", label="Assert.IsTrue(date > DateTime.UtcNow.AddMinutes(-1))", span="57-57"];
m0_34 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="DelayedJobSchedulerFacts.cs", label="var date = JobHelper.FromStringTimestamp(checkedTimestamp)", span="55-55"];
m0_33 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="DelayedJobSchedulerFacts.cs", label="Assert.IsNotNull(checkedTimestamp)", span="54-54"];
m0_36 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", span="48-48"];
m0_46 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", span="71-71"];
m0_47 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", file="DelayedJobSchedulerFacts.cs", label="var checkedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Checked'')", span="73-75"];
m0_48 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", file="DelayedJobSchedulerFacts.cs", label="Assert.IsNull(checkedTimestamp)", span="77-77"];
m0_49 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", span="71-71"];
m0_148 [cluster="HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", span="41-41"];
m0_58 [cluster="Unk.AtLeast", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.AtLeast", span=""];
m0_91 [cluster="System.Threading.Thread.Yield()", file="DelayedJobSchedulerFacts.cs", label="Entry System.Threading.Thread.Yield()", span="0-0"];
m0_67 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="85-85"];
m0_98 [cluster="lambda expression", color=green, community=0, file="DelayedJobSchedulerFacts.cs", label="0: runner.Stop()", span="117-117"];
m0_97 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="117-117"];
m0_99 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="117-117"];
m0_43 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", file="DelayedJobSchedulerFacts.cs", label="var checkedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Checked'')", span="63-65"];
m0_60 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.Execute(It.IsNotNull<CancellationToken>())", span="75-75"];
m0_85 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="95-95"];
m0_114 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="127-127"];
m0_160 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="199-199"];
m0_163 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="208-208"];
m0_174 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="216-216"];
m0_177 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.Execute(\r\n                It.IsAny<CancellationToken>())", span="222-223"];
m0_204 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="262-262"];
m0_30 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", span="44-44"];
m0_42 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", span="61-61"];
m0_59 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="75-75"];
m0_68 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="runner.Start()", span="85-85"];
m0_84 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="95-95"];
m0_87 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="96-96"];
m0_88 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="timesExecuted++", span="96-96"];
m0_113 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="127-127"];
m0_116 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="128-128"];
m0_117 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="timesExecuted++", span="128-128"];
m0_159 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="199-199"];
m0_162 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="208-208"];
m0_173 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="216-216"];
m0_176 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="222-223"];
m0_203 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="262-262"];
m0_206 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Entry lambda expression", span="263-263"];
m0_44 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", file="DelayedJobSchedulerFacts.cs", label="Assert.IsNotNull(checkedTimestamp)", span="67-67"];
m0_61 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="75-75"];
m0_86 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="95-95"];
m0_115 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="127-127"];
m0_161 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="199-199"];
m0_164 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="208-208"];
m0_175 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="216-216"];
m0_178 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="222-223"];
m0_205 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="262-262"];
m0_69 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="85-85"];
m0_90 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="96-96"];
m0_89 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Thread.Yield()", span="96-96"];
m0_119 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="128-128"];
m0_118 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Thread.Yield()", span="128-128"];
m0_208 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Exit lambda expression", span="263-263"];
m0_207 [cluster="lambda expression", file="DelayedJobSchedulerFacts.cs", label="Thread.Yield()", span="263-263"];
m0_14 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m0_209 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.Execute(System.Threading.CancellationToken)", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.Execute(System.Threading.CancellationToken)", span="271-271"];
m0_210 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.Execute(System.Threading.CancellationToken)", file="DelayedJobSchedulerFacts.cs", label="Thread.Yield()", span="273-273"];
m0_211 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.Execute(System.Threading.CancellationToken)", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.Execute(System.Threading.CancellationToken)", span="271-271"];
m0_147 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.DisposableComponent()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.DisposableComponent.DisposableComponent()", span="267-267"];
m0_45 [cluster="Unk.Execute", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.Execute", span=""];
m0_112 [cluster="Unk.True", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.True", span=""];
m0_70 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", span="89-89"];
m0_79 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", color=green, community=0, file="DelayedJobSchedulerFacts.cs", label="0: Assert.Equal(0, timesExecuted)", span="108-108"];
m0_77 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="DelayedJobSchedulerFacts.cs", label="timesExecuted = 0", span="103-103"];
m0_78 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="DelayedJobSchedulerFacts.cs", label="Thread.Sleep(TimeSpan.FromMilliseconds(100))", span="105-105"];
m0_76 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="DelayedJobSchedulerFacts.cs", label="Thread.Sleep(TimeSpan.FromMilliseconds(100))", span="102-102"];
m0_72 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="DelayedJobSchedulerFacts.cs", label="var runner = CreateRunner()", span="94-94"];
m0_73 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="DelayedJobSchedulerFacts.cs", label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>()))\r\n                .Callback(() => { timesExecuted++; Thread.Yield(); })", span="95-96"];
m0_75 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="DelayedJobSchedulerFacts.cs", label="runner.Stop()", span="101-101"];
m0_71 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="DelayedJobSchedulerFacts.cs", label="int timesExecuted = 0", span="92-92"];
m0_74 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="DelayedJobSchedulerFacts.cs", label="runner.Start()", span="98-98"];
m0_80 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.Stop_LeadsToStoppedComponentExecution()", span="89-89"];
m0_82 [cluster="Unk.Callback", file="DelayedJobSchedulerFacts.cs", label="Entry Unk.Callback", span=""];
m0_150 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", file="DelayedJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", span="193-193"];
m0_151 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", file="DelayedJobSchedulerFacts.cs", label="_options.MaxRetryAttempts = 0", span="196-196"];
m0_152 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", file="DelayedJobSchedulerFacts.cs", label="var runner = CreateRunner()", span="198-198"];
m0_153 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", file="DelayedJobSchedulerFacts.cs", label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Throws<InvalidOperationException>()", span="199-199"];
m0_157 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", file="DelayedJobSchedulerFacts.cs", label="_component.Verify(\r\n                x => x.Execute(It.IsAny<CancellationToken>()),\r\n                Times.Once)", span="207-209"];
m0_156 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", file="DelayedJobSchedulerFacts.cs", label="runner.Dispose()", span="205-205"];
m0_154 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", file="DelayedJobSchedulerFacts.cs", label="runner.Start()", span="201-201"];
m0_155 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", file="DelayedJobSchedulerFacts.cs", label="Thread.Sleep(500)", span="202-202"];
m0_158 [cluster="HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", file="DelayedJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerFacts.FailingComponent_ShouldNotBeRetried_IfMaxRetryAttemptsIsZero()", span="193-193"];
m0_215 [file="DelayedJobSchedulerFacts.cs", label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", span=""];
m0_218 [file="DelayedJobSchedulerFacts.cs", label=runner, span=""];
m0_216 [file="DelayedJobSchedulerFacts.cs", label=runner, span=""];
m0_217 [file="DelayedJobSchedulerFacts.cs", label=timesExecuted, span=""];
m0_219 [file="DelayedJobSchedulerFacts.cs", label=timesExecuted, span=""];
m1_0 [cluster="Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", file="DistributedLockTimeoutException.cs", label="Entry Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", span="6-6"];
m1_1 [cluster="Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", file="DistributedLockTimeoutException.cs", label="Exit Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", span="6-6"];
m2_72 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", file="ExpirationManager.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", span="103-103"];
m2_73 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", file="ExpirationManager.cs", label="_stateData.Name = ''NotProcessing''", span="105-105"];
m2_74 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", file="ExpirationManager.cs", label="var token = CreateToken()", span="106-106"];
m2_75 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", file="ExpirationManager.cs", label="Assert.Throws<JobAbortedException>(\r\n                () => token.ThrowIfCancellationRequested())", span="108-109"];
m2_76 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", file="ExpirationManager.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", span="103-103"];
m2_15 [cluster="Unk.GetStateData", file="ExpirationManager.cs", label="Entry Unk.GetStateData", span=""];
m2_21 [cluster="Unk.Equal", file="ExpirationManager.cs", label="Entry Unk.Equal", span=""];
m2_6 [cluster="Hangfire.Storage.StateData.StateData()", file="ExpirationManager.cs", label="Entry Hangfire.Storage.StateData.StateData()", span="21-21"];
m2_50 [cluster="Unk.DoesNotThrow", file="ExpirationManager.cs", label="Entry Unk.DoesNotThrow", span=""];
m2_56 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="ExpirationManager.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m2_20 [cluster="Unk.>", file="ExpirationManager.cs", label="Entry Unk.>", span=""];
m2_51 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="ExpirationManager.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", span="84-84"];
m2_52 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", color=red, community=0, file="ExpirationManager.cs", label="0: _cts.Cancel()", span="86-86"];
m2_53 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", color=red, community=0, file="ExpirationManager.cs", label="0: var token = CreateToken()", span="87-87"];
m2_54 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", color=red, community=0, file="ExpirationManager.cs", label="0: Assert.Throws<OperationCanceledException>(\r\n                () => token.ThrowIfCancellationRequested())", span="89-90"];
m2_55 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="ExpirationManager.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", span="84-84"];
m2_16 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ExpirationManager.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="37-37"];
m2_17 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ExpirationManager.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerJobCancellationToken(\r\n                    null, JobId, WorkerId, _cts.Token))", span="39-41"];
m2_18 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ExpirationManager.cs", label="Assert.Equal(''connection'', exception.ParamName)", span="43-43"];
m2_19 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ExpirationManager.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="37-37"];
m2_26 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", file="ExpirationManager.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", span="47-47"];
m2_27 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", file="ExpirationManager.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerJobCancellationToken(\r\n                    _connection.Object, null, WorkerId, _cts.Token))", span="49-51"];
m2_28 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", file="ExpirationManager.cs", label="Assert.Equal(''jobId'', exception.ParamName)", span="53-53"];
m2_29 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", file="ExpirationManager.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", span="47-47"];
m2_7 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ExpirationManager.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m2_9 [cluster="Unk.Setup", file="ExpirationManager.cs", label="Entry Unk.Setup", span=""];
m2_61 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="ExpirationManager.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", span="94-94"];
m2_62 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="ExpirationManager.cs", label="_connection.Setup(x => x.GetStateData(It.IsAny<string>())).Returns((StateData)null)", span="96-96"];
m2_63 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="ExpirationManager.cs", label="var token = CreateToken()", span="97-97"];
m2_64 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="ExpirationManager.cs", label="Assert.Throws<JobAbortedException>(() => token.ThrowIfCancellationRequested())", span="99-99"];
m2_65 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="ExpirationManager.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", span="94-94"];
m2_34 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenWorkerIdIsNull()", file="ExpirationManager.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenWorkerIdIsNull()", span="59-59"];
m2_35 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenWorkerIdIsNull()", file="ExpirationManager.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerJobCancellationToken(\r\n                    _connection.Object, JobId, null, _cts.Token))", span="61-63"];
m2_36 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenWorkerIdIsNull()", file="ExpirationManager.cs", label="Assert.Equal(''workerId'', exception.ParamName)", span="65-65"];
m2_37 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenWorkerIdIsNull()", file="ExpirationManager.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenWorkerIdIsNull()", span="59-59"];
m2_11 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="ExpirationManager.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m2_0 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="ExpirationManager.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", span="19-19"];
m2_1 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="ExpirationManager.cs", label="_stateData = new StateData\r\n            {\r\n                Name = ProcessingState.StateName,\r\n                Data = new Dictionary<string, string>\r\n                {\r\n                    { ''WorkerId'', WorkerId },\r\n                }\r\n            }", span="21-28"];
m2_2 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="ExpirationManager.cs", label="_connection = new Mock<IStorageConnection>()", span="30-30"];
m2_3 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="ExpirationManager.cs", label="_connection.Setup(x => x.GetStateData(JobId)).Returns(_stateData)", span="31-31"];
m2_4 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="ExpirationManager.cs", label="_cts = new CancellationTokenSource()", span="33-33"];
m2_5 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="ExpirationManager.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", span="19-19"];
m2_85 [cluster="lambda expression", file="ExpirationManager.cs", label="Entry lambda expression", span="119-119"];
m2_12 [cluster="lambda expression", file="ExpirationManager.cs", label="Entry lambda expression", span="31-31"];
m2_13 [cluster="lambda expression", file="ExpirationManager.cs", label="x.GetStateData(JobId)", span="31-31"];
m2_14 [cluster="lambda expression", file="ExpirationManager.cs", label="Exit lambda expression", span="31-31"];
m2_22 [cluster="lambda expression", file="ExpirationManager.cs", label="Entry lambda expression", span="40-41"];
m2_23 [cluster="lambda expression", file="ExpirationManager.cs", label="new ServerJobCancellationToken(\r\n                    null, JobId, WorkerId, _cts.Token)", span="40-41"];
m2_24 [cluster="lambda expression", file="ExpirationManager.cs", label="Exit lambda expression", span="40-41"];
m2_30 [cluster="lambda expression", file="ExpirationManager.cs", label="Entry lambda expression", span="50-51"];
m2_31 [cluster="lambda expression", file="ExpirationManager.cs", label="new ServerJobCancellationToken(\r\n                    _connection.Object, null, WorkerId, _cts.Token)", span="50-51"];
m2_32 [cluster="lambda expression", file="ExpirationManager.cs", label="Exit lambda expression", span="50-51"];
m2_38 [cluster="lambda expression", file="ExpirationManager.cs", label="Entry lambda expression", span="62-63"];
m2_39 [cluster="lambda expression", file="ExpirationManager.cs", label="new ServerJobCancellationToken(\r\n                    _connection.Object, JobId, null, _cts.Token)", span="62-63"];
m2_40 [cluster="lambda expression", file="ExpirationManager.cs", label="Exit lambda expression", span="62-63"];
m2_58 [cluster="lambda expression", file="ExpirationManager.cs", label="token.ThrowIfCancellationRequested()", span="90-90"];
m2_57 [cluster="lambda expression", file="ExpirationManager.cs", label="Entry lambda expression", span="90-90"];
m2_59 [cluster="lambda expression", file="ExpirationManager.cs", label="Exit lambda expression", span="90-90"];
m2_66 [cluster="lambda expression", file="ExpirationManager.cs", label="Entry lambda expression", span="96-96"];
m2_70 [cluster="lambda expression", file="ExpirationManager.cs", label="token.ThrowIfCancellationRequested()", span="99-99"];
m2_69 [cluster="lambda expression", file="ExpirationManager.cs", label="Entry lambda expression", span="99-99"];
m2_67 [cluster="lambda expression", file="ExpirationManager.cs", label="x.GetStateData(It.IsAny<string>())", span="96-96"];
m2_68 [cluster="lambda expression", file="ExpirationManager.cs", label="Exit lambda expression", span="96-96"];
m2_71 [cluster="lambda expression", file="ExpirationManager.cs", label="Exit lambda expression", span="99-99"];
m2_78 [cluster="lambda expression", file="ExpirationManager.cs", label="token.ThrowIfCancellationRequested()", span="109-109"];
m2_77 [cluster="lambda expression", file="ExpirationManager.cs", label="Entry lambda expression", span="109-109"];
m2_79 [cluster="lambda expression", file="ExpirationManager.cs", label="Exit lambda expression", span="109-109"];
m2_86 [cluster="lambda expression", file="ExpirationManager.cs", label="token.ThrowIfCancellationRequested()", span="119-119"];
m2_87 [cluster="lambda expression", file="ExpirationManager.cs", label="Exit lambda expression", span="119-119"];
m2_80 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="ExpirationManager.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", span="113-113"];
m2_81 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="ExpirationManager.cs", label="_stateData.Data[''WorkerId''] = ''999''", span="115-115"];
m2_82 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="ExpirationManager.cs", label="var token = CreateToken()", span="116-116"];
m2_83 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="ExpirationManager.cs", label="Assert.Throws<JobAbortedException>(\r\n                () => token.ThrowIfCancellationRequested())", span="118-119"];
m2_84 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="ExpirationManager.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", span="113-113"];
m2_33 [cluster="ServerJobCancellationToken.cstr", file="ExpirationManager.cs", label="Entry ServerJobCancellationToken.cstr", span=""];
m2_41 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", file="ExpirationManager.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", span="69-69"];
m2_42 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", color=red, community=0, file="ExpirationManager.cs", label="0: var token = CreateToken()", span="71-71"];
m2_43 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", file="ExpirationManager.cs", label="Assert.Equal(_cts.Token, token.ShutdownToken)", span="72-72"];
m2_44 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", file="ExpirationManager.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", span="69-69"];
m2_60 [cluster="Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", file="ExpirationManager.cs", label="Entry Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", span="24-24"];
m2_25 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="ExpirationManager.cs", label="Entry Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", span="31-31"];
m2_45 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", file="ExpirationManager.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", span="122-122"];
m2_88 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", file="ExpirationManager.cs", label="return new ServerJobCancellationToken(_connection.Object, JobId, WorkerId, _cts.Token);", span="124-124"];
m2_89 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", file="ExpirationManager.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", span="122-122"];
m2_46 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", file="ExpirationManager.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", span="76-76"];
m2_47 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", color=red, community=0, file="ExpirationManager.cs", label="0: var token = CreateToken()", span="78-78"];
m2_48 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", color=red, community=0, file="ExpirationManager.cs", label="0: Assert.DoesNotThrow(token.ThrowIfCancellationRequested)", span="80-80"];
m2_49 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", file="ExpirationManager.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", span="76-76"];
m2_10 [cluster="Unk.Returns", file="ExpirationManager.cs", label="Entry Unk.Returns", span=""];
m2_8 [cluster="Mock<IStorageConnection>.cstr", file="ExpirationManager.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m2_90 [file="ExpirationManager.cs", label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", span=""];
m2_91 [file="ExpirationManager.cs", label=token, span=""];
m2_92 [file="ExpirationManager.cs", label=token, span=""];
m2_93 [file="ExpirationManager.cs", label=token, span=""];
m2_94 [file="ExpirationManager.cs", label=token, span=""];
m3_34 [cluster="Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", span="28-28"];
m3_74 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="RecurringJobScheduler.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="45-45"];
m3_89 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m3_33 [cluster="Hangfire.JobStorage.GetConnection()", file="RecurringJobScheduler.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m3_106 [cluster="System.DateTime.AddSeconds(double)", file="RecurringJobScheduler.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m3_40 [cluster="Hangfire.Server.RecurringJobScheduler.ToString()", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.RecurringJobScheduler.ToString()", span="150-150"];
m3_41 [cluster="Hangfire.Server.RecurringJobScheduler.ToString()", file="RecurringJobScheduler.cs", label="return GetType().Name;", span="152-152"];
m3_42 [cluster="Hangfire.Server.RecurringJobScheduler.ToString()", file="RecurringJobScheduler.cs", label="Exit Hangfire.Server.RecurringJobScheduler.ToString()", span="150-150"];
m3_83 [cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="RecurringJobScheduler.cs", label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="87-87"];
m3_90 [cluster="Hangfire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="61-61"];
m3_43 [cluster="object.GetType()", file="RecurringJobScheduler.cs", label="Entry object.GetType()", span="0-0"];
m3_92 [cluster="string.Equals(string)", file="RecurringJobScheduler.cs", label="Entry string.Equals(string)", span="0-0"];
m3_0 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", span="78-78"];
m3_1 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", file="RecurringJobScheduler.cs", label="Exit Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", span="78-78"];
m3_38 [cluster="Hangfire.Logging.ILog.WarnException(string, System.Exception)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Logging.ILog.WarnException(string, System.Exception)", span="280-280"];
m3_77 [cluster="System.TimeZoneInfo.FindSystemTimeZoneById(string)", file="RecurringJobScheduler.cs", label="Entry System.TimeZoneInfo.FindSystemTimeZoneById(string)", span="0-0"];
m3_82 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m3_85 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", span="37-37"];
m3_16 [cluster="Unk.nameof", file="RecurringJobScheduler.cs", label="Entry Unk.nameof", span=""];
m3_32 [cluster="Hangfire.Server.IThrottler.Throttle(System.Threading.CancellationToken)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.IThrottler.Throttle(System.Threading.CancellationToken)", span="22-22"];
m3_2 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", span="90-90"];
m3_3 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", file="RecurringJobScheduler.cs", label="Exit Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", span="90-90"];
m3_79 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m3_88 [cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68"];
m3_81 [cluster="Hangfire.Server.IScheduleInstant.GetNextInstants(System.DateTime)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.IScheduleInstant.GetNextInstants(System.DateTime)", span="25-25"];
m3_73 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m3_37 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", span="155-155"];
m3_44 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="var serializedJob = JobHelper.FromJson<InvocationData>(recurringJob[''Job''])", span="161-161"];
m3_46 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="var cron = recurringJob[''Cron'']", span="163-163"];
m3_48 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="var timeZone = recurringJob.ContainsKey(''TimeZoneId'')\r\n                    ? TimeZoneInfo.FindSystemTimeZoneById(recurringJob[''TimeZoneId''])\r\n                    : TimeZoneInfo.Utc", span="168-170"];
m3_51 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="var lastInstant = GetLastInstant(recurringJob, nowInstant)", span="175-175"];
m3_54 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="recurringJob.ContainsKey(''Queue'') && !String.IsNullOrEmpty(recurringJob[''Queue''])", span="180-180"];
m3_55 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="state.Queue = recurringJob[''Queue'']", span="182-182"];
m3_56 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="var context = new CreateContext(storage, connection, job, state)", span="185-185"];
m3_57 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="context.Parameters[''RecurringJobId''] = recurringJobId", span="186-186"];
m3_61 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="Logger.Debug($''Recurring job '{recurringJobId}' execution at '{nowInstant.NowInstant}' has been canceled.'')", span="193-193"];
m3_64 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="!recurringJob.ContainsKey(''CreatedAt'')", span="201-201"];
m3_67 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="connection.SetRangeInHash(\r\n                    $''recurring-job:{recurringJobId}'',\r\n                    changedFields)", span="208-210"];
m3_71 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="Logger.ErrorException(\r\n                    $''Recurring job '{recurringJobId}' was not triggered: {ex.Message}.'',\r\n                    ex)", span="222-224"];
m3_45 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="var job = serializedJob.Deserialize()", span="162-162"];
m3_47 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="var cronSchedule = CrontabSchedule.Parse(cron)", span="164-164"];
m3_49 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="var nowInstant = _instantFactory(cronSchedule, timeZone)", span="172-172"];
m3_50 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="var changedFields = new Dictionary<string, string>()", span="173-173"];
m3_52 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="nowInstant.GetNextInstants(lastInstant).Any()", span="177-177"];
m3_62 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="changedFields.Add(''LastExecution'', JobHelper.SerializeDateTime(nowInstant.NowInstant))", span="196-196"];
m3_65 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="changedFields.Add(''CreatedAt'', JobHelper.SerializeDateTime(nowInstant.NowInstant))", span="203-203"];
m3_66 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="changedFields.Add(''NextExecution'', nowInstant.NextInstant.HasValue ? JobHelper.SerializeDateTime(nowInstant.NextInstant.Value) : null)", span="206-206"];
m3_63 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="changedFields.Add(''LastJobId'', jobId ?? String.Empty)", span="197-197"];
m3_53 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="var state = new EnqueuedState { Reason = ''Triggered by recurring job scheduler'' }", span="179-179"];
m3_58 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="var backgroundJob = _factory.Create(context)", span="188-188"];
m3_59 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="var jobId = backgroundJob?.Id", span="189-189"];
m3_60 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="String.IsNullOrEmpty(jobId)", span="191-191"];
m3_68 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label=Exception, span="216-216"];
m3_69 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="!ex.GetType().Name.Equals(''TimeZoneNotFoundException'')", span="219-219"];
m3_70 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="throw;", span="219-219"];
m3_72 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RecurringJobScheduler.cs", label="Exit Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", span="155-155"];
m3_84 [cluster="string.IsNullOrEmpty(string)", file="RecurringJobScheduler.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m3_4 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", span="95-95"];
m3_5 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="factory == null", span="100-100"];
m3_6 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="throw new ArgumentNullException(nameof(factory));", span="100-100"];
m3_7 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="instantFactory == null", span="101-101"];
m3_8 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="throw new ArgumentNullException(nameof(instantFactory));", span="101-101"];
m3_9 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="throttler == null", span="102-102"];
m3_10 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="throw new ArgumentNullException(nameof(throttler));", span="102-102"];
m3_11 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="_factory = factory", span="104-104"];
m3_12 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="_instantFactory = instantFactory", span="105-105"];
m3_13 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="_throttler = throttler", span="106-106"];
m3_14 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RecurringJobScheduler.cs", label="Exit Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", span="95-95"];
m3_105 [cluster="Hangfire.Common.JobHelper.DeserializeDateTime(string)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Common.JobHelper.DeserializeDateTime(string)", span="73-73"];
m3_17 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="110-110"];
m3_18 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="context == null", span="112-112"];
m3_19 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="throw new ArgumentNullException(nameof(context));", span="112-112"];
m3_20 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="_throttler.Throttle(context.CancellationToken)", span="114-114"];
m3_21 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="RecurringJobScheduler.cs", label="0: var connection = context.Storage.GetConnection()", span="116-116"];
m3_27 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="TryScheduleJob(context.Storage, connection, recurringJobId, recurringJob)", span="133-133"];
m3_30 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="_throttler.Delay(context.CancellationToken)", span="146-146"];
m3_22 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="RecurringJobScheduler.cs", label="0: connection.AcquireDistributedLock(''recurring-jobs:lock'', LockTimeout)", span="117-117"];
m3_23 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="var recurringJobIds = connection.GetAllItemsFromSet(''recurring-jobs'')", span="119-119"];
m3_25 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="var recurringJob = connection.GetAllEntriesFromHash(\r\n                        $''recurring-job:{recurringJobId}'')", span="123-124"];
m3_24 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label=recurringJobIds, span="121-121"];
m3_29 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="Logger.WarnException(\r\n                            $''Recurring job '{recurringJobId}' can not be scheduled due to job load exception.'',\r\n                            ex)", span="137-139"];
m3_26 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="recurringJob == null", span="126-126"];
m3_28 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label=JobLoadException, span="135-135"];
m3_31 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="Exit Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="110-110"];
m3_39 [cluster="Hangfire.Server.IThrottler.Delay(System.Threading.CancellationToken)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.IThrottler.Delay(System.Threading.CancellationToken)", span="23-23"];
m3_91 [cluster="System.Exception.GetType()", file="RecurringJobScheduler.cs", label="Entry System.Exception.GetType()", span="0-0"];
m3_87 [cluster="Hangfire.Logging.ILog.Debug(string)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Logging.ILog.Debug(string)", span="116-116"];
m3_35 [cluster="Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", span="55-55"];
m3_36 [cluster="Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64"];
m3_93 [cluster="Hangfire.Logging.ILog.ErrorException(string, System.Exception)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Logging.ILog.ErrorException(string, System.Exception)", span="161-161"];
m3_76 [cluster="System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m3_75 [cluster="NCrontab.CrontabSchedule.Parse(string)", file="RecurringJobScheduler.cs", label="Entry NCrontab.CrontabSchedule.Parse(string)", span="93-93"];
m3_78 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="RecurringJobScheduler.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m3_80 [cluster="Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", span="229-229"];
m3_94 [cluster="Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", file="RecurringJobScheduler.cs", label="DateTime lastInstant", span="231-231"];
m3_95 [cluster="Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", file="RecurringJobScheduler.cs", label="recurringJob.ContainsKey(''LastExecution'')", span="233-233"];
m3_96 [cluster="Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", file="RecurringJobScheduler.cs", label="lastInstant = JobHelper.DeserializeDateTime(recurringJob[''LastExecution''])", span="235-235"];
m3_97 [cluster="Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", file="RecurringJobScheduler.cs", label="recurringJob.ContainsKey(''CreatedAt'')", span="237-237"];
m3_98 [cluster="Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", file="RecurringJobScheduler.cs", label="lastInstant = JobHelper.DeserializeDateTime(recurringJob[''CreatedAt''])", span="239-239"];
m3_99 [cluster="Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", file="RecurringJobScheduler.cs", label="recurringJob.ContainsKey(''NextExecution'')", span="241-241"];
m3_100 [cluster="Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", file="RecurringJobScheduler.cs", label="lastInstant = JobHelper.DeserializeDateTime(recurringJob[''NextExecution''])", span="243-243"];
m3_102 [cluster="Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", file="RecurringJobScheduler.cs", label="lastInstant = instant.NowInstant.AddSeconds(-1)", span="248-248"];
m3_101 [cluster="Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", file="RecurringJobScheduler.cs", label="lastInstant = lastInstant.AddSeconds(-1)", span="244-244"];
m3_103 [cluster="Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", file="RecurringJobScheduler.cs", label="return lastInstant;", span="251-251"];
m3_104 [cluster="Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", file="RecurringJobScheduler.cs", label="Exit Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", span="229-229"];
m3_86 [cluster="Hangfire.Client.IBackgroundJobFactory.Create(Hangfire.Client.CreateContext)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Client.IBackgroundJobFactory.Create(Hangfire.Client.CreateContext)", span="31-31"];
m3_107 [file="RecurringJobScheduler.cs", label="Hangfire.Server.RecurringJobScheduler", span=""];
m4_7 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", color=green, community=0, file="StorageConnectionExtensions.cs", label="0: _jobId = jobId", span="41-41"];
m4_19 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.JobStorageConnection, int, int)", file="StorageConnectionExtensions.cs", label="var ids = connection.GetRangeFromSet(''recurring-jobs'', startingFrom, endingAt)", span="51-51"];
m4_21 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.JobStorageConnection, int, int)", color=green, community=0, file="StorageConnectionExtensions.cs", label="0: Exit Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.JobStorageConnection, int, int)", span="44-44"];
m4_22 [cluster="Hangfire.Storage.JobStorageConnection.GetRangeFromSet(string, int, int)", color=green, community=0, file="StorageConnectionExtensions.cs", label="1: Entry Hangfire.Storage.JobStorageConnection.GetRangeFromSet(string, int, int)", span="58-58"];
m4_24 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", color=green, community=0, file="StorageConnectionExtensions.cs", label="2: Entry Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", span="55-55"];
m4_26 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", color=green, community=0, file="StorageConnectionExtensions.cs", label="0: throw new ArgumentNullException(nameof(connection));", span="57-57"];
m4_28 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", color=green, community=0, file="StorageConnectionExtensions.cs", label="0: return GetRecurringJobDtos(connection, ids);", span="60-60"];
m4_23 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobDtos(Hangfire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<string>)", color=green, community=0, file="StorageConnectionExtensions.cs", label="0: Entry Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobDtos(Hangfire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<string>)", span="63-63"];
m4_25 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", color=green, community=0, file="StorageConnectionExtensions.cs", label="0: connection == null", span="57-57"];
m4_27 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", color=green, community=0, file="StorageConnectionExtensions.cs", label="0: var ids = connection.GetAllItemsFromSet(''recurring-jobs'')", span="59-59"];
m4_29 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", color=green, community=0, file="StorageConnectionExtensions.cs", label="0: Exit Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", span="55-55"];
m4_30 [cluster="Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", file="StorageConnectionExtensions.cs", label="Entry Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", span="55-55"];
m4_31 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobDtos(Hangfire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<string>)", file="StorageConnectionExtensions.cs", label="var result = new List<RecurringJobDto>()", span="65-65"];
m4_68 [cluster="Hangfire.Storage.IStorageConnection.GetStateData(string)", file="StorageConnectionExtensions.cs", label="Entry Hangfire.Storage.IStorageConnection.GetStateData(string)", span="45-45"];
m4_13 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobCount(Hangfire.Storage.JobStorageConnection)", file="StorageConnectionExtensions.cs", label="return connection.GetSetCount(''recurring-jobs'');", span="41-41"];
m4_14 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobCount(Hangfire.Storage.JobStorageConnection)", color=green, community=0, file="StorageConnectionExtensions.cs", label="0: Exit Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobCount(Hangfire.Storage.JobStorageConnection)", span="38-38"];
m4_15 [cluster="Hangfire.Storage.JobStorageConnection.GetSetCount(string)", color=green, community=0, file="StorageConnectionExtensions.cs", label="0: Entry Hangfire.Storage.JobStorageConnection.GetSetCount(string)", span="53-53"];
m4_16 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.JobStorageConnection, int, int)", color=green, community=0, file="StorageConnectionExtensions.cs", label="1: Entry Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.JobStorageConnection, int, int)", span="44-44"];
m4_17 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.JobStorageConnection, int, int)", file="StorageConnectionExtensions.cs", label="connection == null", span="49-49"];
m4_9 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", color=green, community=0, file="StorageConnectionExtensions.cs", label="0: _connection = connection", span="43-43"];
m4_59 [cluster="System.Collections.Generic.List<T>.List()", file="StorageConnectionExtensions.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m4_64 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="StorageConnectionExtensions.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="45-45"];
m4_0 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="StorageConnectionExtensions.cs", label="Entry Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", span="31-31"];
m4_1 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="StorageConnectionExtensions.cs", label="jobId == null", span="37-37"];
m4_2 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="StorageConnectionExtensions.cs", label="throw new ArgumentNullException(''jobId'');", span="37-37"];
m4_3 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", color=green, community=0, file="StorageConnectionExtensions.cs", label="0: workerId == null", span="38-38"];
m4_4 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", color=green, community=0, file="StorageConnectionExtensions.cs", label="0: throw new ArgumentNullException(''workerId'');", span="38-38"];
m4_5 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", color=green, community=0, file="StorageConnectionExtensions.cs", label="0: connection == null", span="39-39"];
m4_6 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", color=green, community=0, file="StorageConnectionExtensions.cs", label="0: throw new ArgumentNullException(''connection'');", span="39-39"];
m4_67 [cluster="string.IsNullOrWhiteSpace(string)", file="StorageConnectionExtensions.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m4_32 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobDtos(Hangfire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<string>)", file="StorageConnectionExtensions.cs", label=ids, span="66-66"];
m4_33 [cluster="string.Equals(string, System.StringComparison)", file="StorageConnectionExtensions.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m4_45 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobDtos(Hangfire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<string>)", file="StorageConnectionExtensions.cs", label="var stateData = connection.GetStateData(dto.LastJobId)", span="101-101"];
m4_35 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobDtos(Hangfire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<string>)", file="StorageConnectionExtensions.cs", label="Hangfire.Server.ServerJobCancellationToken", span=""];
m4_56 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobDtos(Hangfire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<string>)", file="StorageConnectionExtensions.cs", label="result.Add(dto)", span="128-128"];
m4_57 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobDtos(Hangfire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<string>)", file="StorageConnectionExtensions.cs", label="return result;", span="131-131"];
m4_36 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobDtos(Hangfire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<string>)", file="StorageConnectionExtensions.cs", label="var dto = new RecurringJobDto\r\n                {\r\n                    Id = id,\r\n                    Cron = hash[''Cron'']\r\n                }", span="76-80"];
m4_34 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="StorageConnectionExtensions.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m4_37 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobDtos(Hangfire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<string>)", file="StorageConnectionExtensions.cs", label="var invocationData = JobHelper.FromJson<InvocationData>(hash[''Job''])", span="84-84"];
m4_41 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobDtos(Hangfire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<string>)", file="StorageConnectionExtensions.cs", label="hash.ContainsKey(''NextExecution'')", span="92-92"];
m4_42 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobDtos(Hangfire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<string>)", file="StorageConnectionExtensions.cs", label="dto.NextExecution = JobHelper.DeserializeDateTime(hash[''NextExecution''])", span="94-94"];
m4_43 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobDtos(Hangfire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<string>)", file="StorageConnectionExtensions.cs", label="hash.ContainsKey(''LastJobId'') && !string.IsNullOrWhiteSpace(hash[''LastJobId''])", span="97-97"];
m4_44 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobDtos(Hangfire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<string>)", file="StorageConnectionExtensions.cs", label="dto.LastJobId = hash[''LastJobId'']", span="99-99"];
m4_48 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobDtos(Hangfire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<string>)", file="StorageConnectionExtensions.cs", label="hash.ContainsKey(''Queue'')", span="108-108"];
m4_49 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobDtos(Hangfire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<string>)", file="StorageConnectionExtensions.cs", label="dto.Queue = hash[''Queue'']", span="110-110"];
m4_50 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobDtos(Hangfire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<string>)", file="StorageConnectionExtensions.cs", label="hash.ContainsKey(''LastExecution'')", span="113-113"];
m4_51 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobDtos(Hangfire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<string>)", file="StorageConnectionExtensions.cs", label="dto.LastExecution = JobHelper.DeserializeDateTime(hash[''LastExecution''])", span="115-115"];
m4_52 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobDtos(Hangfire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<string>)", file="StorageConnectionExtensions.cs", label="hash.ContainsKey(''TimeZoneId'')", span="118-118"];
m4_53 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobDtos(Hangfire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<string>)", file="StorageConnectionExtensions.cs", label="dto.TimeZoneId = hash[''TimeZoneId'']", span="120-120"];
m4_54 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobDtos(Hangfire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<string>)", file="StorageConnectionExtensions.cs", label="hash.ContainsKey(''CreatedAt'')", span="123-123"];
m4_55 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobDtos(Hangfire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<string>)", file="StorageConnectionExtensions.cs", label="dto.CreatedAt = JobHelper.DeserializeDateTime(hash[''CreatedAt''])", span="125-125"];
m4_38 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobDtos(Hangfire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<string>)", file="StorageConnectionExtensions.cs", label="dto.Job = invocationData.Deserialize()", span="85-85"];
m4_40 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobDtos(Hangfire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<string>)", file="StorageConnectionExtensions.cs", label="dto.LoadException = ex", span="89-89"];
m4_47 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobDtos(Hangfire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<string>)", file="StorageConnectionExtensions.cs", label="dto.LastJobState = stateData.Name", span="104-104"];
m4_39 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobDtos(Hangfire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<string>)", file="StorageConnectionExtensions.cs", label=JobLoadException, span="87-87"];
m4_46 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobDtos(Hangfire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<string>)", file="StorageConnectionExtensions.cs", label="stateData != null", span="102-102"];
m4_58 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobDtos(Hangfire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<string>)", file="StorageConnectionExtensions.cs", label="Exit Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobDtos(Hangfire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<string>)", span="63-63"];
m4_65 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="StorageConnectionExtensions.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m4_8 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", color=green, community=0, file="StorageConnectionExtensions.cs", label="0: _workerId = workerId", span="42-42"];
m4_18 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.JobStorageConnection, int, int)", file="StorageConnectionExtensions.cs", label="throw new ArgumentNullException(nameof(connection));", span="49-49"];
m4_63 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="StorageConnectionExtensions.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m4_10 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", color=green, community=0, file="StorageConnectionExtensions.cs", label="0: _shutdownToken = shutdownToken", span="44-44"];
m4_11 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", file="StorageConnectionExtensions.cs", label="Exit Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(Hangfire.Storage.IStorageConnection, string, string, System.Threading.CancellationToken)", span="31-31"];
m4_12 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobCount(Hangfire.Storage.JobStorageConnection)", file="StorageConnectionExtensions.cs", label="throw new ArgumentNullException(nameof(connection));", span="40-40"];
m4_66 [cluster="Hangfire.Common.JobHelper.DeserializeDateTime(string)", file="StorageConnectionExtensions.cs", label="Entry Hangfire.Common.JobHelper.DeserializeDateTime(string)", span="73-73"];
m4_61 [cluster="Hangfire.Storage.RecurringJobDto.RecurringJobDto()", file="StorageConnectionExtensions.cs", label="Entry Hangfire.Storage.RecurringJobDto.RecurringJobDto()", span="21-21"];
m4_20 [cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.JobStorageConnection, int, int)", file="StorageConnectionExtensions.cs", label="return GetRecurringJobDtos(connection, ids);", span="52-52"];
m4_62 [cluster="System.Collections.Generic.List<T>.Add(T)", file="StorageConnectionExtensions.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m4_60 [cluster="Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="StorageConnectionExtensions.cs", label="Entry Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64"];
n53 -> n7  [color=darkseagreen4, key=1, label="Hangfire.Server.DelayedJobScheduler", style=dashed];
n53 -> n8  [color=darkseagreen4, key=1, label="Hangfire.Server.DelayedJobScheduler", style=dashed];
n53 -> n16  [color=darkseagreen4, key=1, label="Hangfire.Server.DelayedJobScheduler", style=dashed];
n53 -> n21  [color=darkseagreen4, key=1, label="Hangfire.Server.DelayedJobScheduler", style=dashed];
n53 -> n27  [color=darkseagreen4, key=1, label="Hangfire.Server.DelayedJobScheduler", style=dashed];
n53 -> n36  [color=darkseagreen4, key=1, label="Hangfire.Server.DelayedJobScheduler", style=dashed];
n53 -> d39  [color=green, key=1, label="Hangfire.Server.DelayedJobScheduler", style=dashed];
n53 -> d33  [color=darkseagreen4, key=1, label="Hangfire.Server.DelayedJobScheduler", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [color=blue, key=0, style=bold];
n2 -> n3  [key=0, style=solid];
n3 -> n2  [color=blue, key=0, style=bold];
n4 -> n5  [key=0, style=solid];
n4 -> n6  [color=darkseagreen4, key=1, label="Hangfire.States.IBackgroundJobStateChanger", style=dashed];
n4 -> n7  [color=darkseagreen4, key=1, label="Hangfire.States.IBackgroundJobStateChanger", style=dashed];
n4 -> n8  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
n5 -> n6  [key=0, style=solid];
n5 -> n7  [key=0, style=solid];
n6 -> n9  [key=0, style=solid];
n6 -> n10  [key=2, style=dotted];
n6 -> n11  [key=2, style=dotted];
n7 -> n8  [key=0, style=solid];
n8 -> n9  [key=0, style=solid];
n9 -> n4  [color=blue, key=0, style=bold];
n12 -> n13  [key=0, style=solid];
n12 -> n14  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
n12 -> n16  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
n12 -> n18  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
n12 -> n21  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
n13 -> n14  [key=0, style=solid];
n13 -> n15  [key=0, style=solid];
n14 -> n22  [key=0, style=solid];
n14 -> n10  [key=2, style=dotted];
n14 -> n11  [key=2, style=dotted];
n16 -> n17  [key=0, style=solid];
n16 -> n19  [key=0, style=solid];
n16 -> n23  [key=2, style=dotted];
n18 -> n16  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n21 -> n22  [key=0, style=solid];
n21 -> n25  [key=2, style=dotted];
n15 -> n16  [key=0, style=solid];
n15 -> n17  [color=darkseagreen4, key=1, label=jobsEnqueued, style=dashed];
n15 -> n19  [color=darkseagreen4, key=1, label=jobsEnqueued, style=dashed];
n15 -> n20  [color=darkseagreen4, key=1, label=jobsEnqueued, style=dashed];
n15 -> n15  [color=darkorchid, key=3, label="Local variable int jobsEnqueued", style=bold];
n17 -> n18  [key=0, style=solid];
n17 -> n17  [color=darkseagreen4, key=1, label=jobsEnqueued, style=dashed];
n17 -> n19  [color=darkseagreen4, key=1, label=jobsEnqueued, style=dashed];
n17 -> n20  [color=darkseagreen4, key=1, label=jobsEnqueued, style=dashed];
n19 -> n20  [key=0, style=solid];
n19 -> n21  [key=0, style=solid];
n20 -> n21  [key=0, style=solid];
n20 -> n24  [key=2, style=dotted];
n23 -> n30  [color=red, key=0, style=solid];
n23 -> n36  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
n23 -> n12  [color=darkorchid, key=3, label="Parameter variable Hangfire.Server.BackgroundProcessContext context", style=bold];
n23 -> n35  [color=darkorchid, key=3, label="method methodReturn bool EnqueueNextScheduledJob", style=bold];
n23 -> n41  [color=darkorchid, key=3, label="method methodReturn bool EnqueueNextScheduledJob", style=bold];
n23 -> d30  [color=green, key=0, style=solid];
n23 -> d39  [color=green, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
n23 -> d33  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
n23 -> d44  [color=darkorchid, key=3, label="method methodReturn bool EnqueueNextScheduledJob", style=bold];
n22 -> n12  [color=blue, key=0, style=bold];
n26 -> n27  [key=0, style=solid];
n27 -> n28  [key=0, style=solid];
n27 -> n29  [key=2, style=dotted];
n28 -> n26  [color=blue, key=0, style=bold];
n30 -> n31  [color=red, key=0, style=solid];
n30 -> n43  [color=red, key=2, style=dotted];
n30 -> n33  [color=red, key=1, label=connection, style=dashed];
n30 -> n36  [color=red, key=1, label=connection, style=dashed];
n30 -> n38  [color=red, key=1, label=connection, style=dashed];
n36 -> n37  [key=0, style=solid];
n36 -> n47  [key=2, style=dotted];
n36 -> n48  [key=2, style=dotted];
n36 -> n26  [key=2, style=dotted];
n36 -> n49  [key=2, style=dotted];
n31 -> n32  [color=red, key=0, style=solid];
n31 -> n44  [color=red, key=2, style=dotted];
n33 -> n34  [key=0, style=solid];
n33 -> n46  [key=2, style=dotted];
n33 -> n36  [color=darkseagreen4, key=1, label=jobId, style=dashed];
n33 -> n39  [color=darkseagreen4, key=1, label=jobId, style=dashed];
n38 -> n39  [key=0, style=solid];
n38 -> n50  [key=2, style=dotted];
n38 -> n40  [color=darkseagreen4, key=1, label=transaction, style=dashed];
n32 -> n33  [key=0, style=solid];
n32 -> n45  [key=2, style=dotted];
n32 -> d36  [key=0, style=solid];
n34 -> n35  [key=0, style=solid];
n34 -> n36  [key=0, style=solid];
n39 -> n40  [key=0, style=solid];
n39 -> n51  [key=2, style=dotted];
n35 -> n42  [key=0, style=solid];
n37 -> n38  [key=0, style=solid];
n37 -> n41  [key=0, style=solid];
n41 -> n42  [key=0, style=solid];
n40 -> n41  [key=0, style=solid];
n40 -> n52  [key=2, style=dotted];
n42 -> n23  [color=blue, key=0, style=bold];
d30 -> d31  [color=green, key=0, style=solid];
d30 -> n43  [color=green, key=2, style=dotted];
d30 -> d32  [color=green, key=1, label=connection, style=dashed];
d30 -> d33  [color=green, key=1, label=connection, style=dashed];
d30 -> d36  [color=green, key=1, label=connection, style=dashed];
d30 -> d39  [color=green, key=1, label=connection, style=dashed];
d30 -> d41  [color=green, key=1, label=connection, style=dashed];
d31 -> d32  [key=0, style=solid];
d32 -> d33  [key=0, style=solid];
d32 -> n44  [key=2, style=dotted];
d32 -> d34  [color=darkseagreen4, key=1, label=distributedLock, style=dashed];
d33 -> d34  [key=0, style=solid];
d33 -> d48  [key=2, style=dotted];
d33 -> n48  [key=2, style=dotted];
d33 -> n26  [key=2, style=dotted];
d33 -> n49  [key=2, style=dotted];
d36 -> d39  [color=green, key=1, label=jobId, style=dashed];
d36 -> d42  [color=green, key=1, label=jobId, style=dashed];
d36 -> d37  [key=0, style=solid];
d36 -> n46  [key=2, style=dotted];
d39 -> d40  [color=green, key=0, style=solid];
d39 -> n47  [color=green, key=2, style=dotted];
d39 -> n48  [color=green, key=2, style=dotted];
d39 -> n26  [color=green, key=2, style=dotted];
d39 -> n49  [color=green, key=2, style=dotted];
d41 -> d42  [color=green, key=0, style=solid];
d41 -> n50  [color=green, key=2, style=dotted];
d41 -> d43  [color=green, key=1, label=transaction, style=dashed];
d37 -> d39  [color=green, key=0, style=solid];
d37 -> n35  [key=0, style=solid];
d40 -> d41  [color=green, key=0, style=solid];
d40 -> d44  [color=green, key=0, style=solid];
d42 -> d43  [color=green, key=0, style=solid];
d42 -> n51  [color=green, key=2, style=dotted];
d43 -> d44  [color=green, key=0, style=solid];
d43 -> n52  [color=green, key=2, style=dotted];
d44 -> n42  [key=0, style=solid];
d34 -> n32  [key=0, style=solid];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_23  [key=2, style=dotted];
m0_179 -> m0_180  [key=0, style=solid];
m0_180 -> m0_37  [key=2, style=dotted];
m0_180 -> m0_181  [key=0, style=solid];
m0_181 -> m0_182  [key=0, style=solid];
m0_181 -> m0_183  [key=2, style=dotted];
m0_182 -> m0_179  [color=blue, key=0, style=bold];
m0_51 -> m0_52  [key=0, style=solid];
m0_52 -> m0_37  [key=2, style=dotted];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_13  [key=2, style=dotted];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_58  [key=2, style=dotted];
m0_55 -> m0_41  [key=2, style=dotted];
m0_55 -> m0_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_54 -> m0_38  [key=2, style=dotted];
m0_54 -> m0_39  [key=2, style=dotted];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_51  [color=blue, key=0, style=bold];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_57  [key=2, style=dotted];
m0_53 -> m0_38  [key=2, style=dotted];
m0_56 -> m0_51  [color=blue, key=0, style=bold];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_13  [key=2, style=dotted];
m0_56 -> m0_37  [key=2, style=dotted];
m0_131 -> m0_132  [key=0, style=solid];
m0_132 -> m0_37  [key=2, style=dotted];
m0_132 -> m0_133  [key=0, style=solid];
m0_132 -> m0_134  [color=darkseagreen4, key=1, label=runner, style=dashed];
m0_132 -> m0_135  [color=darkseagreen4, key=1, label=runner, style=dashed];
m0_134 -> m0_83  [key=2, style=dotted];
m0_134 -> m0_135  [key=0, style=solid];
m0_133 -> m0_134  [key=0, style=solid];
m0_133 -> m0_57  [key=2, style=dotted];
m0_135 -> m0_27  [key=2, style=dotted];
m0_135 -> m0_136  [key=0, style=solid];
m0_136 -> m0_131  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_0 -> m0_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_0 -> m0_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_1 -> m0_1  [color=darkorchid, key=3, label="Field variable string JobId", style=bold];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_4  [key=2, style=dotted];
m0_1 -> m0_7  [color=darkseagreen4, key=1, label=time, style=dashed];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_5  [key=2, style=dotted];
m0_2 -> m0_4  [key=0, style=solid];
m0_2 -> m0_9  [key=2, style=dotted];
m0_3 -> m0_0  [color=blue, key=0, style=bold];
m0_3 -> m0_7  [key=0, style=solid];
m0_3 -> m0_10  [key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_13  [key=2, style=dotted];
m0_23 -> m0_14  [key=2, style=dotted];
m0_23 -> m0_15  [key=2, style=dotted];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_16 -> m0_20  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_16 -> m0_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_23  [color=darkseagreen4, key=1, label=time, style=dashed];
m0_17 -> m0_10  [key=2, style=dotted];
m0_17 -> m0_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_20  [key=0, style=solid];
m0_18 -> m0_9  [key=2, style=dotted];
m0_18 -> m0_11  [key=2, style=dotted];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_22  [key=0, style=solid];
m0_20 -> m0_9  [key=2, style=dotted];
m0_22 -> m0_24  [key=0, style=solid];
m0_22 -> m0_12  [key=2, style=dotted];
m0_22 -> m0_13  [key=2, style=dotted];
m0_22 -> m0_20  [color=blue, key=0, style=bold];
m0_19 -> m0_23  [key=0, style=solid];
m0_19 -> m0_10  [key=2, style=dotted];
m0_19 -> m0_16  [color=blue, key=0, style=bold];
m0_21 -> m0_23  [key=0, style=solid];
m0_21 -> m0_11  [key=2, style=dotted];
m0_21 -> m0_22  [key=0, style=solid];
m0_24 -> m0_16  [color=blue, key=0, style=bold];
m0_24 -> m0_25  [key=0, style=solid];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_15  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_30  [key=2, style=dotted];
m0_137 -> m0_138  [key=0, style=solid];
m0_138 -> m0_139  [key=0, style=solid];
m0_140 -> m0_141  [key=0, style=solid];
m0_140 -> m0_148  [key=2, style=dotted];
m0_140 -> m0_143  [color=darkseagreen4, key=1, label=runner, style=dashed];
m0_143 -> m0_40  [key=2, style=dotted];
m0_143 -> m0_144  [key=0, style=solid];
m0_139 -> m0_140  [key=0, style=solid];
m0_139 -> m0_147  [key=2, style=dotted];
m0_139 -> m0_145  [color=darkseagreen4, key=1, label=component, style=dashed];
m0_141 -> m0_142  [key=0, style=solid];
m0_141 -> m0_57  [key=2, style=dotted];
m0_142 -> m0_143  [key=0, style=solid];
m0_142 -> m0_149  [key=2, style=dotted];
m0_144 -> m0_145  [key=0, style=solid];
m0_144 -> m0_149  [key=2, style=dotted];
m0_145 -> m0_146  [key=0, style=solid];
m0_145 -> m0_112  [key=2, style=dotted];
m0_146 -> m0_137  [color=blue, key=0, style=bold];
m0_100 -> m0_101  [key=0, style=solid];
m0_102 -> m0_37  [key=2, style=dotted];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_104  [color=darkseagreen4, key=1, label=runner, style=dashed];
m0_102 -> m0_105  [color=darkseagreen4, key=1, label=runner, style=dashed];
m0_102 -> m0_108  [color=darkseagreen4, key=1, label=runner, style=dashed];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_81  [key=2, style=dotted];
m0_103 -> m0_82  [key=2, style=dotted];
m0_103 -> m0_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_103 -> m0_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_103 -> m0_117  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m0_105 -> m0_83  [key=2, style=dotted];
m0_105 -> m0_106  [key=0, style=solid];
m0_106 -> m0_38  [key=2, style=dotted];
m0_106 -> m0_39  [key=2, style=dotted];
m0_106 -> m0_107  [key=0, style=solid];
m0_109 -> m0_38  [key=2, style=dotted];
m0_109 -> m0_39  [key=2, style=dotted];
m0_109 -> m0_110  [key=0, style=solid];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_103  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_57  [key=2, style=dotted];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_57  [key=2, style=dotted];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_110  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_112  [key=2, style=dotted];
m0_111 -> m0_100  [color=blue, key=0, style=bold];
m0_9 -> m0_6  [color=blue, key=0, style=bold];
m0_37 -> m0_200  [key=0, style=solid];
m0_200 -> m0_201  [key=0, style=solid];
m0_200 -> m0_81  [key=2, style=dotted];
m0_200 -> m0_82  [key=2, style=dotted];
m0_200 -> m0_203  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_200 -> m0_206  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_201 -> m0_202  [key=0, style=solid];
m0_201 -> m0_23  [key=2, style=dotted];
m0_202 -> m0_37  [color=blue, key=0, style=bold];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_13  [key=2, style=dotted];
m0_7 -> m0_14  [key=2, style=dotted];
m0_7 -> m0_15  [key=2, style=dotted];
m0_7 -> m0_10  [key=2, style=dotted];
m0_7 -> m0_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_6  [key=0, style=solid];
m0_4 -> m0_9  [key=2, style=dotted];
m0_6 -> m0_8  [key=0, style=solid];
m0_6 -> m0_12  [key=2, style=dotted];
m0_6 -> m0_13  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_5 -> m0_7  [key=0, style=solid];
m0_5 -> m0_11  [key=2, style=dotted];
m0_8 -> m0_0  [color=blue, key=0, style=bold];
m0_8 -> m0_11  [key=2, style=dotted];
m0_8 -> m0_9  [key=0, style=solid];
m0_165 -> m0_166  [key=0, style=solid];
m0_166 -> m0_37  [key=2, style=dotted];
m0_166 -> m0_167  [key=0, style=solid];
m0_166 -> m0_168  [color=darkseagreen4, key=1, label=runner, style=dashed];
m0_166 -> m0_170  [color=darkseagreen4, key=1, label=runner, style=dashed];
m0_167 -> m0_10  [key=2, style=dotted];
m0_167 -> m0_168  [key=0, style=solid];
m0_167 -> m0_81  [key=2, style=dotted];
m0_167 -> m0_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_171 -> m0_172  [key=0, style=solid];
m0_171 -> m0_58  [key=2, style=dotted];
m0_171 -> m0_41  [key=2, style=dotted];
m0_171 -> m0_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_170 -> m0_40  [key=2, style=dotted];
m0_170 -> m0_171  [key=0, style=solid];
m0_168 -> m0_169  [key=0, style=solid];
m0_168 -> m0_57  [key=2, style=dotted];
m0_169 -> m0_170  [key=0, style=solid];
m0_169 -> m0_149  [key=2, style=dotted];
m0_172 -> m0_165  [color=blue, key=0, style=bold];
m0_120 -> m0_121  [key=0, style=solid];
m0_121 -> m0_37  [key=2, style=dotted];
m0_121 -> m0_122  [key=0, style=solid];
m0_121 -> m0_123  [color=darkseagreen4, key=1, label=runner, style=dashed];
m0_121 -> m0_124  [color=darkseagreen4, key=1, label=runner, style=dashed];
m0_123 -> m0_83  [key=2, style=dotted];
m0_123 -> m0_124  [key=0, style=solid];
m0_122 -> m0_123  [key=0, style=solid];
m0_122 -> m0_57  [key=2, style=dotted];
m0_124 -> m0_27  [key=2, style=dotted];
m0_124 -> m0_125  [key=0, style=solid];
m0_125 -> m0_120  [color=blue, key=0, style=bold];
m0_62 -> m0_63  [key=0, style=solid];
m0_63 -> m0_37  [key=2, style=dotted];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_65  [color=darkseagreen4, key=1, label=runner, style=dashed];
m0_63 -> m0_68  [color=darkseagreen4, key=1, label=runner, style=dashed];
m0_64 -> m0_40  [key=2, style=dotted];
m0_64 -> m0_65  [key=0, style=solid];
m0_65 -> m0_10  [key=2, style=dotted];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_66 -> m0_62  [color=blue, key=0, style=bold];
m0_50 -> m0_46  [color=blue, key=0, style=bold];
m0_92 -> m0_93  [color=green, key=0, style=solid];
m0_93 -> m0_94  [color=green, key=0, style=solid];
m0_93 -> m0_37  [color=green, key=2, style=dotted];
m0_93 -> m0_95  [color=green, key=1, label=runner, style=dashed];
m0_93 -> m0_98  [color=green, key=1, label=runner, style=dashed];
m0_94 -> m0_95  [color=green, key=0, style=solid];
m0_94 -> m0_40  [color=green, key=2, style=dotted];
m0_95 -> m0_96  [color=green, key=0, style=solid];
m0_95 -> m0_10  [color=green, key=2, style=dotted];
m0_95 -> m0_97  [color=green, key=1, label="lambda expression", style=dashed];
m0_96 -> m0_92  [color=blue, key=0, style=bold];
m0_12 -> m0_13  [key=0, style=solid];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_27  [key=2, style=dotted];
m0_25 -> m0_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_29  [key=2, style=dotted];
m0_26 -> m0_24  [color=blue, key=0, style=bold];
m0_28 -> m0_25  [color=blue, key=0, style=bold];
m0_28 -> m0_29  [key=0, style=solid];
m0_184 -> m0_185  [key=0, style=solid];
m0_190 -> m0_11  [key=2, style=dotted];
m0_190 -> m0_191  [key=0, style=solid];
m0_186 -> m0_187  [key=0, style=solid];
m0_186 -> m0_148  [key=2, style=dotted];
m0_186 -> m0_189  [color=darkseagreen4, key=1, label=runner, style=dashed];
m0_189 -> m0_40  [key=2, style=dotted];
m0_189 -> m0_190  [key=0, style=solid];
m0_185 -> m0_190  [color=darkseagreen4, key=1, label=component, style=dashed];
m0_185 -> m0_186  [key=0, style=solid];
m0_185 -> m0_192  [key=2, style=dotted];
m0_187 -> m0_188  [key=0, style=solid];
m0_187 -> m0_57  [key=2, style=dotted];
m0_188 -> m0_189  [key=0, style=solid];
m0_188 -> m0_149  [key=2, style=dotted];
m0_191 -> m0_184  [color=blue, key=0, style=bold];
m0_126 -> m0_127  [key=0, style=solid];
m0_127 -> m0_37  [key=2, style=dotted];
m0_127 -> m0_128  [key=0, style=solid];
m0_127 -> m0_129  [color=darkseagreen4, key=1, label=runner, style=dashed];
m0_128 -> m0_129  [key=0, style=solid];
m0_128 -> m0_57  [key=2, style=dotted];
m0_129 -> m0_27  [key=2, style=dotted];
m0_129 -> m0_130  [key=0, style=solid];
m0_130 -> m0_126  [color=blue, key=0, style=bold];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_50  [key=2, style=dotted];
m0_31 -> m0_32  [key=0, style=solid];
m0_32 -> m0_37  [key=2, style=dotted];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_34  [color=darkseagreen4, key=1, label=checkedTimestamp, style=dashed];
m0_32 -> m0_13  [key=2, style=dotted];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_41  [key=2, style=dotted];
m0_35 -> m0_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_35 -> m0_40  [key=2, style=dotted];
m0_34 -> m0_40  [key=2, style=dotted];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_39  [key=2, style=dotted];
m0_33 -> m0_38  [key=2, style=dotted];
m0_33 -> m0_39  [key=2, style=dotted];
m0_33 -> m0_34  [key=0, style=solid];
m0_36 -> m0_31  [color=blue, key=0, style=bold];
m0_46 -> m0_47  [key=0, style=solid];
m0_47 -> m0_37  [key=2, style=dotted];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_49  [color=darkseagreen4, key=1, label=runner, style=dashed];
m0_47 -> m0_13  [key=2, style=dotted];
m0_48 -> m0_40  [key=2, style=dotted];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_50  [key=2, style=dotted];
m0_49 -> m0_27  [key=2, style=dotted];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_46  [color=blue, key=0, style=bold];
m0_58 -> m0_55  [color=blue, key=0, style=bold];
m0_67 -> m0_68  [key=0, style=solid];
m0_98 -> m0_99  [color=green, key=0, style=solid];
m0_98 -> m0_83  [color=green, key=2, style=dotted];
m0_97 -> m0_98  [color=green, key=0, style=solid];
m0_99 -> m0_97  [color=blue, key=0, style=bold];
m0_43 -> m0_10  [key=2, style=dotted];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_45  [key=2, style=dotted];
m0_43 -> m0_13  [key=2, style=dotted];
m0_43 -> m0_37  [key=2, style=dotted];
m0_60 -> m0_10  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_45  [key=2, style=dotted];
m0_85 -> m0_10  [key=2, style=dotted];
m0_85 -> m0_86  [key=0, style=solid];
m0_85 -> m0_45  [key=2, style=dotted];
m0_114 -> m0_10  [key=2, style=dotted];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_45  [key=2, style=dotted];
m0_160 -> m0_10  [key=2, style=dotted];
m0_160 -> m0_161  [key=0, style=solid];
m0_160 -> m0_45  [key=2, style=dotted];
m0_163 -> m0_10  [key=2, style=dotted];
m0_163 -> m0_164  [key=0, style=solid];
m0_163 -> m0_45  [key=2, style=dotted];
m0_174 -> m0_10  [key=2, style=dotted];
m0_174 -> m0_175  [key=0, style=solid];
m0_174 -> m0_45  [key=2, style=dotted];
m0_177 -> m0_10  [key=2, style=dotted];
m0_177 -> m0_178  [key=0, style=solid];
m0_177 -> m0_45  [key=2, style=dotted];
m0_204 -> m0_10  [key=2, style=dotted];
m0_204 -> m0_205  [key=0, style=solid];
m0_204 -> m0_45  [key=2, style=dotted];
m0_30 -> m0_28  [color=blue, key=0, style=bold];
m0_42 -> m0_43  [key=0, style=solid];
m0_59 -> m0_60  [key=0, style=solid];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_57  [key=2, style=dotted];
m0_84 -> m0_85  [key=0, style=solid];
m0_87 -> m0_88  [key=0, style=solid];
m0_88 -> m0_88  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m0_88 -> m0_89  [key=0, style=solid];
m0_113 -> m0_114  [key=0, style=solid];
m0_116 -> m0_117  [key=0, style=solid];
m0_117 -> m0_117  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m0_117 -> m0_118  [key=0, style=solid];
m0_159 -> m0_160  [key=0, style=solid];
m0_162 -> m0_163  [key=0, style=solid];
m0_173 -> m0_174  [key=0, style=solid];
m0_176 -> m0_177  [key=0, style=solid];
m0_203 -> m0_204  [key=0, style=solid];
m0_206 -> m0_207  [key=0, style=solid];
m0_44 -> m0_42  [color=blue, key=0, style=bold];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_38  [key=2, style=dotted];
m0_61 -> m0_59  [color=blue, key=0, style=bold];
m0_86 -> m0_84  [color=blue, key=0, style=bold];
m0_115 -> m0_113  [color=blue, key=0, style=bold];
m0_161 -> m0_159  [color=blue, key=0, style=bold];
m0_164 -> m0_162  [color=blue, key=0, style=bold];
m0_175 -> m0_173  [color=blue, key=0, style=bold];
m0_178 -> m0_176  [color=blue, key=0, style=bold];
m0_205 -> m0_203  [color=blue, key=0, style=bold];
m0_69 -> m0_67  [color=blue, key=0, style=bold];
m0_90 -> m0_87  [color=blue, key=0, style=bold];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_91  [key=2, style=dotted];
m0_119 -> m0_116  [color=blue, key=0, style=bold];
m0_118 -> m0_119  [key=0, style=solid];
m0_118 -> m0_91  [key=2, style=dotted];
m0_208 -> m0_206  [color=blue, key=0, style=bold];
m0_207 -> m0_208  [key=0, style=solid];
m0_207 -> m0_91  [key=2, style=dotted];
m0_14 -> m0_12  [color=blue, key=0, style=bold];
m0_209 -> m0_210  [key=0, style=solid];
m0_210 -> m0_91  [key=2, style=dotted];
m0_210 -> m0_211  [key=0, style=solid];
m0_211 -> m0_209  [color=blue, key=0, style=bold];
m0_45 -> m0_42  [color=blue, key=0, style=bold];
m0_70 -> m0_71  [key=0, style=solid];
m0_79 -> m0_80  [color=green, key=0, style=solid];
m0_79 -> m0_11  [color=green, key=2, style=dotted];
m0_77 -> m0_79  [color=green, key=1, label=timesExecuted, style=dashed];
m0_77 -> m0_78  [key=0, style=solid];
m0_78 -> m0_79  [color=green, key=0, style=solid];
m0_78 -> m0_38  [key=2, style=dotted];
m0_78 -> m0_39  [key=2, style=dotted];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_38  [key=2, style=dotted];
m0_76 -> m0_39  [key=2, style=dotted];
m0_72 -> m0_37  [key=2, style=dotted];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_74  [color=darkseagreen4, key=1, label=runner, style=dashed];
m0_72 -> m0_75  [color=darkseagreen4, key=1, label=runner, style=dashed];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_81  [key=2, style=dotted];
m0_73 -> m0_82  [key=2, style=dotted];
m0_73 -> m0_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_73 -> m0_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_73 -> m0_88  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m0_75 -> m0_83  [key=2, style=dotted];
m0_75 -> m0_76  [key=0, style=solid];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_73  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_57  [key=2, style=dotted];
m0_80 -> m0_70  [color=blue, key=0, style=bold];
m0_150 -> m0_151  [key=0, style=solid];
m0_151 -> m0_152  [key=0, style=solid];
m0_152 -> m0_37  [key=2, style=dotted];
m0_152 -> m0_153  [key=0, style=solid];
m0_152 -> m0_154  [color=darkseagreen4, key=1, label=runner, style=dashed];
m0_152 -> m0_156  [color=darkseagreen4, key=1, label=runner, style=dashed];
m0_153 -> m0_10  [key=2, style=dotted];
m0_153 -> m0_154  [key=0, style=solid];
m0_153 -> m0_81  [key=2, style=dotted];
m0_153 -> m0_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_157 -> m0_158  [key=0, style=solid];
m0_157 -> m0_41  [key=2, style=dotted];
m0_157 -> m0_162  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_156 -> m0_40  [key=2, style=dotted];
m0_156 -> m0_157  [key=0, style=solid];
m0_154 -> m0_155  [key=0, style=solid];
m0_154 -> m0_57  [key=2, style=dotted];
m0_155 -> m0_156  [key=0, style=solid];
m0_155 -> m0_149  [key=2, style=dotted];
m0_158 -> m0_150  [color=blue, key=0, style=bold];
m0_215 -> m0_93  [color=green, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m0_215 -> m0_1  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m0_215 -> m0_2  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m0_215 -> m0_17  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m0_215 -> m0_21  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m0_215 -> m0_25  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m0_215 -> m0_29  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m0_215 -> m0_32  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m0_215 -> m0_35  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m0_215 -> m0_47  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m0_215 -> m0_52  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m0_215 -> m0_55  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m0_215 -> m0_63  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m0_215 -> m0_72  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m0_215 -> m0_73  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m0_215 -> m0_102  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m0_215 -> m0_103  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m0_215 -> m0_121  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m0_215 -> m0_127  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m0_215 -> m0_132  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m0_215 -> m0_138  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m0_215 -> m0_140  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m0_215 -> m0_151  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m0_215 -> m0_152  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m0_215 -> m0_153  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m0_215 -> m0_157  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m0_215 -> m0_166  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m0_215 -> m0_167  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m0_215 -> m0_171  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m0_215 -> m0_180  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m0_215 -> m0_181  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m0_215 -> m0_186  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m0_215 -> m0_200  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m0_215 -> m0_201  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.ServerComponentRunnerFacts", style=dashed];
m0_218 -> m0_98  [color=green, key=1, label=runner, style=dashed];
m0_216 -> m0_68  [color=darkseagreen4, key=1, label=runner, style=dashed];
m0_217 -> m0_88  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m0_219 -> m0_117  [color=darkseagreen4, key=1, label=timesExecuted, style=dashed];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [color=blue, key=0, style=bold];
m2_72 -> m2_73  [key=0, style=solid];
m2_72 -> m2_35  [color=darkorchid, key=3, label="Parameter variable string table", style=bold];
m2_73 -> m2_74  [key=0, style=solid];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_45  [key=2, style=dotted];
m2_74 -> m2_78  [color=darkseagreen4, key=1, label=token, style=dashed];
m2_75 -> m2_76  [key=0, style=solid];
m2_75 -> m2_20  [key=2, style=dotted];
m2_75 -> m2_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_76 -> m2_72  [color=blue, key=0, style=bold];
m2_51 -> m2_52  [color=red, key=0, style=solid];
m2_52 -> m2_53  [color=red, key=0, style=solid];
m2_52 -> m2_56  [color=red, key=2, style=dotted];
m2_53 -> m2_54  [color=red, key=0, style=solid];
m2_53 -> m2_45  [color=red, key=2, style=dotted];
m2_53 -> m2_58  [color=red, key=1, label=token, style=dashed];
m2_54 -> m2_55  [color=red, key=0, style=solid];
m2_54 -> m2_20  [color=red, key=2, style=dotted];
m2_54 -> m2_57  [color=red, key=1, label="lambda expression", style=dashed];
m2_55 -> m2_51  [color=blue, key=0, style=bold];
m2_16 -> m2_17  [key=0, style=solid];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_20  [key=2, style=dotted];
m2_17 -> m2_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_17 -> m2_17  [color=darkorchid, key=3, label="Field variable int NumberOfRecordsInSinglePass", style=bold];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_21  [key=2, style=dotted];
m2_19 -> m2_16  [color=blue, key=0, style=bold];
m2_26 -> m2_27  [key=0, style=solid];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_20  [key=2, style=dotted];
m2_27 -> m2_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_21  [key=2, style=dotted];
m2_29 -> m2_26  [color=blue, key=0, style=bold];
m2_61 -> m2_62  [key=0, style=solid];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_9  [key=2, style=dotted];
m2_62 -> m2_10  [key=2, style=dotted];
m2_62 -> m2_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_63 -> m2_64  [key=0, style=solid];
m2_63 -> m2_45  [key=2, style=dotted];
m2_63 -> m2_70  [color=darkseagreen4, key=1, label=token, style=dashed];
m2_64 -> m2_65  [key=0, style=solid];
m2_64 -> m2_20  [key=2, style=dotted];
m2_64 -> m2_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_65 -> m2_61  [color=blue, key=0, style=bold];
m2_34 -> m2_35  [key=0, style=solid];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_20  [key=2, style=dotted];
m2_35 -> m2_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_21  [key=2, style=dotted];
m2_37 -> m2_34  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_6  [key=2, style=dotted];
m2_1 -> m2_7  [key=2, style=dotted];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_8  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_9  [key=2, style=dotted];
m2_3 -> m2_10  [key=2, style=dotted];
m2_3 -> m2_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_3 -> m2_3  [color=darkorchid, key=3, label="Field variable string DistributedLockKey", style=bold];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_11  [key=2, style=dotted];
m2_5 -> m2_0  [color=blue, key=0, style=bold];
m2_85 -> m2_86  [key=0, style=solid];
m2_12 -> m2_13  [key=0, style=solid];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_15  [key=2, style=dotted];
m2_14 -> m2_12  [color=blue, key=0, style=bold];
m2_22 -> m2_23  [key=0, style=solid];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_25  [key=2, style=dotted];
m2_24 -> m2_22  [color=blue, key=0, style=bold];
m2_30 -> m2_31  [key=0, style=solid];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_33  [key=2, style=dotted];
m2_32 -> m2_30  [color=blue, key=0, style=bold];
m2_38 -> m2_39  [key=0, style=solid];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_33  [key=2, style=dotted];
m2_40 -> m2_38  [color=blue, key=0, style=bold];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_60  [key=2, style=dotted];
m2_57 -> m2_58  [key=0, style=solid];
m2_59 -> m2_57  [color=blue, key=0, style=bold];
m2_66 -> m2_67  [key=0, style=solid];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_60  [key=2, style=dotted];
m2_69 -> m2_70  [key=0, style=solid];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_20  [key=2, style=dotted];
m2_67 -> m2_15  [key=2, style=dotted];
m2_68 -> m2_66  [color=blue, key=0, style=bold];
m2_71 -> m2_69  [color=blue, key=0, style=bold];
m2_78 -> m2_79  [key=0, style=solid];
m2_78 -> m2_60  [key=2, style=dotted];
m2_77 -> m2_78  [key=0, style=solid];
m2_79 -> m2_77  [color=blue, key=0, style=bold];
m2_86 -> m2_87  [key=0, style=solid];
m2_86 -> m2_60  [key=2, style=dotted];
m2_87 -> m2_85  [color=blue, key=0, style=bold];
m2_80 -> m2_81  [key=0, style=solid];
m2_81 -> m2_82  [key=0, style=solid];
m2_82 -> m2_83  [key=0, style=solid];
m2_82 -> m2_45  [key=2, style=dotted];
m2_82 -> m2_86  [color=darkseagreen4, key=1, label=token, style=dashed];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_20  [key=2, style=dotted];
m2_83 -> m2_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_84 -> m2_80  [color=blue, key=0, style=bold];
m2_41 -> m2_42  [color=red, key=0, style=solid];
m2_42 -> m2_43  [color=red, key=0, style=solid];
m2_42 -> m2_45  [color=red, key=2, style=dotted];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_21  [key=2, style=dotted];
m2_44 -> m2_41  [color=blue, key=0, style=bold];
m2_45 -> m2_88  [key=0, style=solid];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_33  [key=2, style=dotted];
m2_89 -> m2_45  [color=blue, key=0, style=bold];
m2_46 -> m2_47  [color=red, key=0, style=solid];
m2_47 -> m2_48  [color=red, key=0, style=solid];
m2_47 -> m2_45  [color=red, key=2, style=dotted];
m2_48 -> m2_49  [color=red, key=0, style=solid];
m2_48 -> m2_50  [color=red, key=2, style=dotted];
m2_49 -> m2_46  [color=blue, key=0, style=bold];
m2_90 -> m2_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m2_90 -> m2_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m2_90 -> m2_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m2_90 -> m2_4  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m2_90 -> m2_17  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m2_90 -> m2_23  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m2_90 -> m2_27  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m2_90 -> m2_31  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m2_90 -> m2_35  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m2_90 -> m2_39  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m2_90 -> m2_42  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m2_90 -> m2_43  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m2_90 -> m2_47  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m2_90 -> m2_52  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m2_90 -> m2_53  [color=red, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m2_90 -> m2_62  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m2_90 -> m2_63  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m2_90 -> m2_73  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m2_90 -> m2_74  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m2_90 -> m2_81  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m2_90 -> m2_82  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m2_90 -> m2_88  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m2_91 -> m2_58  [color=darkseagreen4, key=1, label=token, style=dashed];
m2_92 -> m2_70  [color=darkseagreen4, key=1, label=token, style=dashed];
m2_93 -> m2_78  [color=darkseagreen4, key=1, label=token, style=dashed];
m2_94 -> m2_86  [color=darkseagreen4, key=1, label=token, style=dashed];
m3_40 -> m3_41  [key=0, style=solid];
m3_41 -> m3_42  [key=0, style=solid];
m3_41 -> m3_43  [key=2, style=dotted];
m3_42 -> m3_40  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_0  [color=blue, key=0, style=bold];
m3_2 -> m3_3  [key=0, style=solid];
m3_3 -> m3_2  [color=blue, key=0, style=bold];
m3_37 -> m3_44  [key=0, style=solid];
m3_37 -> m3_46  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m3_37 -> m3_48  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m3_37 -> m3_51  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m3_37 -> m3_54  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m3_37 -> m3_55  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m3_37 -> m3_56  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m3_37 -> m3_57  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_37 -> m3_61  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_37 -> m3_64  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m3_37 -> m3_67  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m3_37 -> m3_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_44 -> m3_45  [key=0, style=solid];
m3_44 -> m3_73  [key=2, style=dotted];
m3_46 -> m3_47  [key=0, style=solid];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_76  [key=2, style=dotted];
m3_48 -> m3_77  [key=2, style=dotted];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> m3_80  [key=2, style=dotted];
m3_54 -> m3_55  [key=0, style=solid];
m3_54 -> m3_56  [key=0, style=solid];
m3_54 -> m3_76  [key=2, style=dotted];
m3_54 -> m3_84  [key=2, style=dotted];
m3_55 -> m3_56  [key=0, style=solid];
m3_56 -> m3_57  [key=0, style=solid];
m3_56 -> m3_85  [key=2, style=dotted];
m3_56 -> m3_58  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_57 -> m3_58  [key=0, style=solid];
m3_61 -> m3_62  [key=0, style=solid];
m3_61 -> m3_87  [key=2, style=dotted];
m3_64 -> m3_65  [key=0, style=solid];
m3_64 -> m3_66  [key=0, style=solid];
m3_64 -> m3_76  [key=2, style=dotted];
m3_67 -> m3_68  [key=0, style=solid];
m3_67 -> m3_72  [key=0, style=solid];
m3_67 -> m3_90  [key=2, style=dotted];
m3_71 -> m3_72  [key=0, style=solid];
m3_71 -> m3_93  [key=2, style=dotted];
m3_45 -> m3_46  [key=0, style=solid];
m3_45 -> m3_74  [key=2, style=dotted];
m3_45 -> m3_56  [color=darkseagreen4, key=1, label=job, style=dashed];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_75  [key=2, style=dotted];
m3_47 -> m3_49  [color=darkseagreen4, key=1, label=cronSchedule, style=dashed];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_78  [key=2, style=dotted];
m3_49 -> m3_51  [color=darkseagreen4, key=1, label=nowInstant, style=dashed];
m3_49 -> m3_52  [color=darkseagreen4, key=1, label=nowInstant, style=dashed];
m3_49 -> m3_61  [color=darkseagreen4, key=1, label=nowInstant, style=dashed];
m3_49 -> m3_62  [color=darkseagreen4, key=1, label=nowInstant, style=dashed];
m3_49 -> m3_65  [color=darkseagreen4, key=1, label=nowInstant, style=dashed];
m3_49 -> m3_66  [color=darkseagreen4, key=1, label=nowInstant, style=dashed];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_79  [key=2, style=dotted];
m3_50 -> m3_62  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m3_50 -> m3_63  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m3_50 -> m3_65  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m3_50 -> m3_66  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m3_50 -> m3_67  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m3_52 -> m3_53  [key=0, style=solid];
m3_52 -> m3_64  [key=0, style=solid];
m3_52 -> m3_81  [key=2, style=dotted];
m3_52 -> m3_82  [key=2, style=dotted];
m3_62 -> m3_63  [key=0, style=solid];
m3_62 -> m3_88  [key=2, style=dotted];
m3_62 -> m3_89  [key=2, style=dotted];
m3_65 -> m3_66  [key=0, style=solid];
m3_65 -> m3_88  [key=2, style=dotted];
m3_65 -> m3_89  [key=2, style=dotted];
m3_66 -> m3_67  [key=0, style=solid];
m3_66 -> m3_88  [key=2, style=dotted];
m3_66 -> m3_89  [key=2, style=dotted];
m3_63 -> m3_64  [key=0, style=solid];
m3_63 -> m3_89  [key=2, style=dotted];
m3_53 -> m3_54  [key=0, style=solid];
m3_53 -> m3_83  [key=2, style=dotted];
m3_53 -> m3_55  [color=darkseagreen4, key=1, label=state, style=dashed];
m3_53 -> m3_56  [color=darkseagreen4, key=1, label=state, style=dashed];
m3_58 -> m3_59  [key=0, style=solid];
m3_58 -> m3_86  [key=2, style=dotted];
m3_59 -> m3_60  [key=0, style=solid];
m3_59 -> m3_63  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m3_60 -> m3_61  [key=0, style=solid];
m3_60 -> m3_62  [key=0, style=solid];
m3_60 -> m3_84  [key=2, style=dotted];
m3_68 -> m3_69  [key=0, style=solid];
m3_69 -> m3_70  [key=0, style=solid];
m3_69 -> m3_71  [key=0, style=solid];
m3_69 -> m3_91  [key=2, style=dotted];
m3_69 -> m3_92  [key=2, style=dotted];
m3_70 -> m3_72  [key=0, style=solid];
m3_72 -> m3_37  [color=blue, key=0, style=bold];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_6  [color=darkseagreen4, key=1, label="Hangfire.Client.IBackgroundJobFactory", style=dashed];
m3_4 -> m3_7  [color=darkseagreen4, key=1, label="System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>", style=dashed];
m3_4 -> m3_8  [color=darkseagreen4, key=1, label="System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>", style=dashed];
m3_4 -> m3_9  [color=darkseagreen4, key=1, label="Hangfire.Server.IThrottler", style=dashed];
m3_4 -> m3_10  [color=darkseagreen4, key=1, label="Hangfire.Server.IThrottler", style=dashed];
m3_4 -> m3_11  [color=darkseagreen4, key=1, label="Hangfire.Client.IBackgroundJobFactory", style=dashed];
m3_4 -> m3_12  [color=darkseagreen4, key=1, label="System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>", style=dashed];
m3_4 -> m3_13  [color=darkseagreen4, key=1, label="Hangfire.Server.IThrottler", style=dashed];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_7  [key=0, style=solid];
m3_6 -> m3_14  [key=0, style=solid];
m3_6 -> n10  [key=2, style=dotted];
m3_6 -> m3_16  [key=2, style=dotted];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_9  [key=0, style=solid];
m3_8 -> m3_14  [key=0, style=solid];
m3_8 -> n10  [key=2, style=dotted];
m3_8 -> m3_16  [key=2, style=dotted];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_11  [key=0, style=solid];
m3_10 -> m3_14  [key=0, style=solid];
m3_10 -> n10  [key=2, style=dotted];
m3_10 -> m3_16  [key=2, style=dotted];
m3_11 -> m3_12  [key=0, style=solid];
m3_12 -> m3_13  [key=0, style=solid];
m3_13 -> m3_14  [key=0, style=solid];
m3_14 -> m3_4  [color=blue, key=0, style=bold];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_19  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m3_17 -> m3_20  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m3_17 -> m3_21  [color=red, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m3_17 -> m3_27  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m3_17 -> m3_30  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_20  [key=0, style=solid];
m3_19 -> m3_31  [key=0, style=solid];
m3_19 -> n10  [key=2, style=dotted];
m3_19 -> m3_16  [key=2, style=dotted];
m3_20 -> m3_21  [color=red, key=0, style=solid];
m3_20 -> m3_32  [key=2, style=dotted];
m3_21 -> m3_22  [color=red, key=0, style=solid];
m3_21 -> m3_33  [color=red, key=2, style=dotted];
m3_21 -> m3_23  [color=red, key=1, label=connection, style=dashed];
m3_21 -> m3_25  [color=red, key=1, label=connection, style=dashed];
m3_21 -> m3_27  [color=red, key=1, label=connection, style=dashed];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_24  [key=0, style=solid];
m3_27 -> m3_37  [key=2, style=dotted];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_39  [key=2, style=dotted];
m3_22 -> m3_23  [color=red, key=0, style=solid];
m3_22 -> m3_34  [color=red, key=2, style=dotted];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_35  [key=2, style=dotted];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_36  [key=2, style=dotted];
m3_25 -> m3_27  [color=darkseagreen4, key=1, label=recurringJob, style=dashed];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_30  [key=0, style=solid];
m3_24 -> m3_27  [color=darkseagreen4, key=1, label=recurringJobId, style=dashed];
m3_24 -> m3_29  [color=darkseagreen4, key=1, label=recurringJobId, style=dashed];
m3_29 -> m3_24  [key=0, style=solid];
m3_29 -> m3_38  [key=2, style=dotted];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_24  [key=0, style=solid];
m3_28 -> m3_29  [key=0, style=solid];
m3_31 -> m3_17  [color=blue, key=0, style=bold];
m3_80 -> m3_94  [key=0, style=solid];
m3_80 -> m3_95  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m3_80 -> m3_96  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m3_80 -> m3_97  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m3_80 -> m3_98  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m3_80 -> m3_99  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m3_80 -> m3_100  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m3_80 -> m3_102  [color=darkseagreen4, key=1, label="Hangfire.Server.IScheduleInstant", style=dashed];
m3_80 -> m3_49  [color=darkorchid, key=3, label="Parameter variable Hangfire.Server.IScheduleInstant instant", style=bold];
m3_94 -> m3_95  [key=0, style=solid];
m3_95 -> m3_96  [key=0, style=solid];
m3_95 -> m3_97  [key=0, style=solid];
m3_95 -> m3_76  [key=2, style=dotted];
m3_96 -> m3_103  [key=0, style=solid];
m3_96 -> m3_105  [key=2, style=dotted];
m3_97 -> m3_98  [key=0, style=solid];
m3_97 -> m3_99  [key=0, style=solid];
m3_97 -> m3_76  [key=2, style=dotted];
m3_98 -> m3_103  [key=0, style=solid];
m3_98 -> m3_105  [key=2, style=dotted];
m3_99 -> m3_100  [key=0, style=solid];
m3_99 -> m3_102  [key=0, style=solid];
m3_99 -> m3_76  [key=2, style=dotted];
m3_100 -> m3_101  [key=0, style=solid];
m3_100 -> m3_105  [key=2, style=dotted];
m3_102 -> m3_103  [key=0, style=solid];
m3_102 -> m3_106  [key=2, style=dotted];
m3_101 -> m3_103  [key=0, style=solid];
m3_101 -> m3_106  [key=2, style=dotted];
m3_101 -> m3_101  [color=darkseagreen4, key=1, label=lastInstant, style=dashed];
m3_103 -> m3_104  [key=0, style=solid];
m3_104 -> m3_80  [color=blue, key=0, style=bold];
m3_107 -> m3_11  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m3_107 -> m3_12  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m3_107 -> m3_13  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m3_107 -> m3_20  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m3_107 -> m3_27  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m3_107 -> m3_30  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m3_107 -> m3_41  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m3_107 -> m3_49  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m3_107 -> m3_58  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m4_7 -> m4_8  [color=green, key=0, style=solid];
m4_19 -> m4_21  [color=green, key=0, style=solid];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_22  [key=2, style=dotted];
m4_21 -> m4_22  [color=green, key=0, style=solid];
m4_21 -> m4_68  [color=green, key=2, style=dotted];
m4_21 -> m4_24  [color=green, key=1, label=state, style=dashed];
m4_21 -> m4_26  [color=green, key=1, label=state, style=dashed];
m4_21 -> m4_28  [color=green, key=1, label=state, style=dashed];
m4_21 -> m4_16  [color=blue, key=0, style=bold];
m4_22 -> m4_23  [color=green, key=0, style=solid];
m4_22 -> m4_24  [color=green, key=0, style=solid];
m4_24 -> m4_25  [color=green, key=0, style=solid];
m4_24 -> m4_26  [color=green, key=0, style=solid];
m4_24 -> m4_33  [color=green, key=2, style=dotted];
m4_24 -> m4_27  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m4_24 -> m4_28  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m4_24 -> m4_23  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.List<Hangfire.Storage.RecurringJobDto> GetRecurringJobs", style=bold];
m4_26 -> m4_27  [color=green, key=0, style=solid];
m4_26 -> m4_28  [color=green, key=0, style=solid];
m4_26 -> m4_34  [color=green, key=2, style=dotted];
m4_26 -> m4_29  [key=0, style=solid];
m4_26 -> m4_7  [key=2, style=dotted];
m4_26 -> m4_8  [key=2, style=dotted];
m4_28 -> m4_29  [color=green, key=0, style=solid];
m4_28 -> m4_30  [color=green, key=0, style=solid];
m4_28 -> m4_33  [color=green, key=2, style=dotted];
m4_28 -> m4_23  [key=2, style=dotted];
m4_23 -> m4_31  [color=green, key=0, style=solid];
m4_23 -> m4_32  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m4_23 -> m4_33  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m4_23 -> m4_45  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m4_23 -> m4_64  [color=darkorchid, key=3, label="Parameter variable Hangfire.Storage.IStorageConnection connection", style=bold];
m4_23 -> m4_24  [color=darkorchid, key=3, label="Parameter variable Hangfire.Storage.IStorageConnection connection", style=bold];
m4_23 -> m4_19  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<string> ids", style=bold];
m4_23 -> m4_27  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<string> ids", style=bold];
m4_25 -> m4_31  [color=green, key=0, style=solid];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_27  [key=0, style=solid];
m4_27 -> m4_31  [color=green, key=0, style=solid];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_30  [key=2, style=dotted];
m4_29 -> m4_31  [color=green, key=0, style=solid];
m4_29 -> m4_24  [color=blue, key=0, style=bold];
m4_30 -> m4_31  [key=0, style=solid];
m4_31 -> m4_19  [color=blue, key=0, style=bold];
m4_31 -> m4_32  [key=0, style=solid];
m4_31 -> m4_59  [key=2, style=dotted];
m4_31 -> m4_35  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_31 -> m4_56  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_31 -> m4_57  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_13 -> m4_14  [color=green, key=0, style=solid];
m4_13 -> m4_15  [key=2, style=dotted];
m4_14 -> m4_15  [color=green, key=0, style=solid];
m4_14 -> m4_18  [color=green, key=2, style=dotted];
m4_14 -> m4_10  [color=blue, key=0, style=bold];
m4_15 -> m4_16  [color=green, key=0, style=solid];
m4_15 -> m4_17  [color=green, key=0, style=solid];
m4_15 -> m4_19  [color=green, key=2, style=dotted];
m4_16 -> m4_17  [color=green, key=0, style=solid];
m4_16 -> m4_20  [color=green, key=2, style=dotted];
m4_16 -> m4_18  [color=darkseagreen4, key=1, label="Hangfire.Storage.JobStorageConnection", style=dashed];
m4_16 -> m4_19  [color=darkseagreen4, key=1, label="Hangfire.Storage.JobStorageConnection", style=dashed];
m4_16 -> m4_23  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.List<Hangfire.Storage.RecurringJobDto> GetRecurringJobs", style=bold];
m4_17 -> m4_13  [color=blue, key=0, style=bold];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_19  [key=0, style=solid];
m4_9 -> m4_10  [color=green, key=0, style=solid];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_2  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m4_0 -> m4_3  [color=green, key=1, label=string, style=dashed];
m4_0 -> m4_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_0 -> m4_5  [color=green, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m4_0 -> m4_7  [color=green, key=1, label=string, style=dashed];
m4_0 -> m4_8  [color=green, key=1, label=string, style=dashed];
m4_0 -> m4_9  [color=green, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m4_0 -> m4_10  [color=green, key=1, label="System.Threading.CancellationToken", style=dashed];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [color=green, key=0, style=solid];
m4_2 -> m4_6  [key=0, style=solid];
m4_2 -> m4_7  [key=2, style=dotted];
m4_2 -> m4_8  [key=2, style=dotted];
m4_2 -> m4_11  [key=0, style=solid];
m4_2 -> n10  [key=2, style=dotted];
m4_3 -> m4_4  [color=green, key=0, style=solid];
m4_3 -> m4_5  [color=green, key=0, style=solid];
m4_4 -> m4_6  [key=0, style=solid];
m4_4 -> m4_7  [key=2, style=dotted];
m4_4 -> m4_8  [key=2, style=dotted];
m4_4 -> m4_11  [color=green, key=0, style=solid];
m4_4 -> n10  [color=green, key=2, style=dotted];
m4_5 -> m4_6  [color=green, key=0, style=solid];
m4_5 -> m4_9  [key=2, style=dotted];
m4_5 -> m4_7  [color=green, key=0, style=solid];
m4_6 -> m4_0  [color=blue, key=0, style=bold];
m4_6 -> m4_11  [color=green, key=0, style=solid];
m4_6 -> n10  [color=green, key=2, style=dotted];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_57  [key=0, style=solid];
m4_32 -> m4_35  [color=darkseagreen4, key=1, label=id, style=dashed];
m4_32 -> m4_36  [color=darkseagreen4, key=1, label=id, style=dashed];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_60  [key=2, style=dotted];
m4_33 -> m4_36  [color=darkseagreen4, key=1, label=hash, style=dashed];
m4_33 -> m4_37  [color=darkseagreen4, key=1, label=hash, style=dashed];
m4_33 -> m4_41  [color=darkseagreen4, key=1, label=hash, style=dashed];
m4_33 -> m4_42  [color=darkseagreen4, key=1, label=hash, style=dashed];
m4_33 -> m4_43  [color=darkseagreen4, key=1, label=hash, style=dashed];
m4_33 -> m4_44  [color=darkseagreen4, key=1, label=hash, style=dashed];
m4_33 -> m4_48  [color=darkseagreen4, key=1, label=hash, style=dashed];
m4_33 -> m4_49  [color=darkseagreen4, key=1, label=hash, style=dashed];
m4_33 -> m4_50  [color=darkseagreen4, key=1, label=hash, style=dashed];
m4_33 -> m4_51  [color=darkseagreen4, key=1, label=hash, style=dashed];
m4_33 -> m4_52  [color=darkseagreen4, key=1, label=hash, style=dashed];
m4_33 -> m4_53  [color=darkseagreen4, key=1, label=hash, style=dashed];
m4_33 -> m4_54  [color=darkseagreen4, key=1, label=hash, style=dashed];
m4_33 -> m4_55  [color=darkseagreen4, key=1, label=hash, style=dashed];
m4_45 -> m4_46  [key=0, style=solid];
m4_45 -> m4_68  [key=2, style=dotted];
m4_45 -> m4_47  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m4_35 -> m4_32  [key=0, style=solid];
m4_35 -> m4_61  [key=2, style=dotted];
m4_35 -> m4_62  [key=2, style=dotted];
m4_35 -> m4_7  [color=green, key=1, label="Hangfire.Server.ServerJobCancellationToken", style=dashed];
m4_35 -> m4_8  [color=green, key=1, label="Hangfire.Server.ServerJobCancellationToken", style=dashed];
m4_35 -> m4_9  [color=green, key=1, label="Hangfire.Server.ServerJobCancellationToken", style=dashed];
m4_35 -> m4_10  [color=green, key=1, label="Hangfire.Server.ServerJobCancellationToken", style=dashed];
m4_35 -> m4_14  [color=green, key=1, label="Hangfire.Server.ServerJobCancellationToken", style=dashed];
m4_35 -> m4_15  [color=green, key=1, label="Hangfire.Server.ServerJobCancellationToken", style=dashed];
m4_35 -> m4_21  [color=green, key=1, label="Hangfire.Server.ServerJobCancellationToken", style=dashed];
m4_35 -> m4_28  [color=green, key=1, label="Hangfire.Server.ServerJobCancellationToken", style=dashed];
m4_56 -> m4_32  [key=0, style=solid];
m4_56 -> m4_62  [key=2, style=dotted];
m4_57 -> m4_58  [key=0, style=solid];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_61  [key=2, style=dotted];
m4_36 -> m4_38  [color=darkseagreen4, key=1, label=dto, style=dashed];
m4_36 -> m4_40  [color=darkseagreen4, key=1, label=dto, style=dashed];
m4_36 -> m4_42  [color=darkseagreen4, key=1, label=dto, style=dashed];
m4_36 -> m4_44  [color=darkseagreen4, key=1, label=dto, style=dashed];
m4_36 -> m4_45  [color=darkseagreen4, key=1, label=dto, style=dashed];
m4_36 -> m4_47  [color=darkseagreen4, key=1, label=dto, style=dashed];
m4_36 -> m4_49  [color=darkseagreen4, key=1, label=dto, style=dashed];
m4_36 -> m4_51  [color=darkseagreen4, key=1, label=dto, style=dashed];
m4_36 -> m4_53  [color=darkseagreen4, key=1, label=dto, style=dashed];
m4_36 -> m4_55  [color=darkseagreen4, key=1, label=dto, style=dashed];
m4_36 -> m4_56  [color=darkseagreen4, key=1, label=dto, style=dashed];
m4_34 -> m4_35  [key=0, style=solid];
m4_34 -> m4_36  [key=0, style=solid];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_63  [key=2, style=dotted];
m4_41 -> m4_42  [key=0, style=solid];
m4_41 -> m4_43  [key=0, style=solid];
m4_41 -> m4_65  [key=2, style=dotted];
m4_42 -> m4_43  [key=0, style=solid];
m4_42 -> m4_66  [key=2, style=dotted];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_48  [key=0, style=solid];
m4_43 -> m4_65  [key=2, style=dotted];
m4_43 -> m4_67  [key=2, style=dotted];
m4_44 -> m4_45  [key=0, style=solid];
m4_48 -> m4_49  [key=0, style=solid];
m4_48 -> m4_50  [key=0, style=solid];
m4_48 -> m4_65  [key=2, style=dotted];
m4_49 -> m4_50  [key=0, style=solid];
m4_50 -> m4_51  [key=0, style=solid];
m4_50 -> m4_52  [key=0, style=solid];
m4_50 -> m4_65  [key=2, style=dotted];
m4_51 -> m4_52  [key=0, style=solid];
m4_51 -> m4_66  [key=2, style=dotted];
m4_52 -> m4_53  [key=0, style=solid];
m4_52 -> m4_54  [key=0, style=solid];
m4_52 -> m4_65  [key=2, style=dotted];
m4_53 -> m4_54  [key=0, style=solid];
m4_54 -> m4_55  [key=0, style=solid];
m4_54 -> m4_56  [key=0, style=solid];
m4_54 -> m4_65  [key=2, style=dotted];
m4_55 -> m4_56  [key=0, style=solid];
m4_55 -> m4_66  [key=2, style=dotted];
m4_38 -> m4_39  [key=0, style=solid];
m4_38 -> m4_41  [key=0, style=solid];
m4_38 -> m4_64  [key=2, style=dotted];
m4_40 -> m4_41  [key=0, style=solid];
m4_47 -> m4_48  [key=0, style=solid];
m4_39 -> m4_40  [key=0, style=solid];
m4_46 -> m4_47  [key=0, style=solid];
m4_46 -> m4_48  [key=0, style=solid];
m4_58 -> m4_23  [color=blue, key=0, style=bold];
m4_8 -> m4_9  [color=green, key=0, style=solid];
m4_18 -> m4_21  [key=0, style=solid];
m4_18 -> m4_7  [key=2, style=dotted];
m4_18 -> m4_8  [key=2, style=dotted];
m4_10 -> m4_11  [color=green, key=0, style=solid];
m4_10 -> m4_12  [color=darkseagreen4, key=1, label="Hangfire.Storage.JobStorageConnection", style=dashed];
m4_10 -> m4_13  [color=darkseagreen4, key=1, label="Hangfire.Storage.JobStorageConnection", style=dashed];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_13  [key=0, style=solid];
m4_11 -> m4_0  [color=blue, key=0, style=bold];
m4_12 -> m4_14  [key=0, style=solid];
m4_12 -> m4_7  [key=2, style=dotted];
m4_12 -> m4_8  [key=2, style=dotted];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_23  [key=2, style=dotted];
}
