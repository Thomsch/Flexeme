digraph  {
n0 [label="Entry HangFire.States.EnqueuedState.GetProperties(HangFire.Common.JobMethod)", span="32-32", cluster="HangFire.States.EnqueuedState.GetProperties(HangFire.Common.JobMethod)"];
n1 [label="var queue = GetQueue(data)", span="34-34", cluster="HangFire.States.EnqueuedState.GetProperties(HangFire.Common.JobMethod)"];
n2 [label="return new Dictionary<string, string>\r\n                {\r\n                    { ''EnqueuedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''Queue'', queue }\r\n                };", span="36-40", cluster="HangFire.States.EnqueuedState.GetProperties(HangFire.Common.JobMethod)"];
n4 [label="Entry HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", span="43-43", cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)"];
n3 [label="Exit HangFire.States.EnqueuedState.GetProperties(HangFire.Common.JobMethod)", span="32-32", cluster="HangFire.States.EnqueuedState.GetProperties(HangFire.Common.JobMethod)"];
n5 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()"];
n6 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)"];
n7 [label="method == null", span="45-45", cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)"];
n10 [label="!method.OldFormat", span="49-49", cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)"];
n11 [label="attribute = method.Method\r\n                    .GetCustomAttributes(true)\r\n                    .OfType<QueueAttribute>()\r\n                    .FirstOrDefault()", span="51-54", cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)"];
n13 [label="attribute = method.Type\r\n                    .GetCustomAttributes(true)\r\n                    .OfType<QueueAttribute>()\r\n                    .FirstOrDefault()", span="59-62", cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)"];
n8 [label="throw new ArgumentNullException(''method'');", span="45-45", cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)"];
n9 [label="QueueAttribute attribute = null", span="47-47", cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)"];
n12 [label="attribute == null", span="57-57", cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)"];
n14 [label="var queueName = attribute != null\r\n                ? !String.IsNullOrEmpty(attribute.Name) ? attribute.Name : DefaultQueue\r\n                : DefaultQueue", span="65-67", cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)"];
n19 [label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0", cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)"];
n20 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()"];
n21 [label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()"];
n15 [label="ValidateQueueName(queueName)", span="68-68", cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)"];
n22 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)"];
n16 [label="return queueName;", span="70-70", cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)"];
n23 [label="Entry HangFire.States.EnqueuedState.ValidateQueueName(string)", span="73-73", cluster="HangFire.States.EnqueuedState.ValidateQueueName(string)"];
n17 [label="Exit HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)", span="43-43", cluster="HangFire.States.EnqueuedState.GetQueue(HangFire.Common.JobMethod)"];
n18 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
n24 [label="String.IsNullOrWhiteSpace(queue)", span="75-75", cluster="HangFire.States.EnqueuedState.ValidateQueueName(string)"];
n26 [label="!Regex.IsMatch(queue, @''^[a-z0-9_]+$'')", span="80-80", cluster="HangFire.States.EnqueuedState.ValidateQueueName(string)"];
n27 [label="throw new InvalidOperationException(String.Format(\r\n                    ''The queue name must consist of lowercase letters, digits and underscore characters only. Given: '{0}''', queue));", span="82-83", cluster="HangFire.States.EnqueuedState.ValidateQueueName(string)"];
n25 [label="throw new ArgumentNullException(''queue'');", span="77-77", cluster="HangFire.States.EnqueuedState.ValidateQueueName(string)"];
n29 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)"];
n28 [label="Exit HangFire.States.EnqueuedState.ValidateQueueName(string)", span="73-73", cluster="HangFire.States.EnqueuedState.ValidateQueueName(string)"];
n30 [label="Entry System.Text.RegularExpressions.Regex.IsMatch(string, string)", span="0-0", cluster="System.Text.RegularExpressions.Regex.IsMatch(string, string)"];
n31 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)"];
n32 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)"];
n33 [label="Entry HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="89-89", cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)"];
n34 [label="var queue = GetQueue(context.JobMethod)", span="92-92", cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)"];
n35 [label="context.Transaction.Queues.Enqueue(queue, context.JobId)", span="94-94", cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", color=red, community=0];
n36 [label="Exit HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="89-89", cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)"];
n37 [label="Entry HangFire.Storage.IWriteOnlyPersistentQueue.Enqueue(string, string)", span="4-4", cluster="HangFire.Storage.IWriteOnlyPersistentQueue.Enqueue(string, string)"];
n38 [label="Entry HangFire.States.EnqueuedStateExtensions.GetQueue(HangFire.Common.JobMethod)", span="106-106", cluster="HangFire.States.EnqueuedStateExtensions.GetQueue(HangFire.Common.JobMethod)"];
n39 [label="method == null", span="108-108", cluster="HangFire.States.EnqueuedStateExtensions.GetQueue(HangFire.Common.JobMethod)"];
n41 [label="return EnqueuedState.GetQueue(method);", span="109-109", cluster="HangFire.States.EnqueuedStateExtensions.GetQueue(HangFire.Common.JobMethod)"];
n40 [label="return null;", span="108-108", cluster="HangFire.States.EnqueuedStateExtensions.GetQueue(HangFire.Common.JobMethod)"];
n42 [label="Exit HangFire.States.EnqueuedStateExtensions.GetQueue(HangFire.Common.JobMethod)", span="106-106", cluster="HangFire.States.EnqueuedStateExtensions.GetQueue(HangFire.Common.JobMethod)"];
m0_5 [label="Entry HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="18-18", cluster="HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="FailedStateHandler.cs"];
m0_6 [label="context.Transaction.Sets.Remove(''failed'', context.JobId)", span="20-20", cluster="HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", color=red, community=0, file="FailedStateHandler.cs"];
m0_7 [label="Exit HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="18-18", cluster="HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="FailedStateHandler.cs"];
m0_8 [label="Entry HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", span="6-6", cluster="HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", file="FailedStateHandler.cs"];
m0_0 [label="Entry HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="10-10", cluster="HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="FailedStateHandler.cs"];
m0_1 [label="context.Transaction.Sets.Add(\r\n                ''failed'',\r\n                context.JobId,\r\n                JobHelper.ToTimestamp(DateTime.UtcNow))", span="12-15", cluster="HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", color=red, community=1, file="FailedStateHandler.cs"];
m0_2 [label="Exit HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="10-10", cluster="HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="FailedStateHandler.cs"];
m0_3 [label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="35-35", cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="FailedStateHandler.cs"];
m0_4 [label="Entry HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string, double)", span="5-5", cluster="HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string, double)", file="FailedStateHandler.cs"];
m2_0 [label="Entry HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", span="4-4", cluster="HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", file="IPersistentSet.cs"];
m2_1 [label="Exit HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", span="4-4", cluster="HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", file="IPersistentSet.cs"];
m3_2 [label="Entry HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="9-9", cluster="HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="IStorageConnection.cs"];
m3_3 [label="Exit HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="9-9", cluster="HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="IStorageConnection.cs"];
m3_6 [label="Entry HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="17-17", cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="IStorageConnection.cs"];
m3_7 [label="Exit HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="17-17", cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="IStorageConnection.cs"];
m3_0 [label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="8-8", cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="IStorageConnection.cs"];
m3_1 [label="Exit HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="8-8", cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="IStorageConnection.cs"];
m3_12 [label="Entry HangFire.Storage.IStorageConnection.Heartbeat(string)", span="25-25", cluster="HangFire.Storage.IStorageConnection.Heartbeat(string)", file="IStorageConnection.cs"];
m3_13 [label="Exit HangFire.Storage.IStorageConnection.Heartbeat(string)", span="25-25", cluster="HangFire.Storage.IStorageConnection.Heartbeat(string)", file="IStorageConnection.cs"];
m3_8 [label="Entry HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="23-23", cluster="HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="IStorageConnection.cs"];
m3_9 [label="Exit HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="23-23", cluster="HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="IStorageConnection.cs"];
m3_4 [label="Entry HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="11-11", cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="IStorageConnection.cs"];
m3_5 [label="Exit HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="11-11", cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="IStorageConnection.cs"];
m3_10 [label="Entry HangFire.Storage.IStorageConnection.RemoveServer(string)", span="24-24", cluster="HangFire.Storage.IStorageConnection.RemoveServer(string)", file="IStorageConnection.cs"];
m3_11 [label="Exit HangFire.Storage.IStorageConnection.RemoveServer(string)", span="24-24", cluster="HangFire.Storage.IStorageConnection.RemoveServer(string)", file="IStorageConnection.cs"];
m3_14 [label="Entry HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="26-26", cluster="HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="IStorageConnection.cs"];
m3_15 [label="Exit HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="26-26", cluster="HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="IStorageConnection.cs"];
m4_100 [label="Entry Mock<T>.cstr", span="", cluster="Mock<T>.cstr", file="IWriteOnlyPersistentCounter.cs"];
m4_8 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="IWriteOnlyPersistentCounter.cs"];
m4_17 [label="Entry Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="29-29", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="IWriteOnlyPersistentCounter.cs"];
m4_18 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundProcessServer(null, _processes, _properties))", span="31-32", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="IWriteOnlyPersistentCounter.cs"];
m4_19 [label="Assert.Equal(''storage'', exception.ParamName)", span="34-34", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="IWriteOnlyPersistentCounter.cs"];
m4_20 [label="Exit Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="29-29", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="IWriteOnlyPersistentCounter.cs"];
m4_48 [label="Entry Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.CreateServer()", span="84-84", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.CreateServer()", file="IWriteOnlyPersistentCounter.cs"];
m4_94 [label="return new BackgroundProcessServer(_storage.Object, _processes, _properties);", span="86-86", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.CreateServer()", file="IWriteOnlyPersistentCounter.cs"];
m4_95 [label="Exit Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.CreateServer()", span="84-84", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.CreateServer()", file="IWriteOnlyPersistentCounter.cs"];
m4_22 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="IWriteOnlyPersistentCounter.cs"];
m4_10 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="IWriteOnlyPersistentCounter.cs"];
m4_0 [label="Entry Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.BackgroundProcessServerFacts()", span="18-18", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.BackgroundProcessServerFacts()", file="IWriteOnlyPersistentCounter.cs"];
m4_1 [label="_storage = new Mock<JobStorage>()", span="20-20", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.BackgroundProcessServerFacts()", file="IWriteOnlyPersistentCounter.cs"];
m4_2 [label="_processes = new List<IServerProcess>()", span="21-21", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.BackgroundProcessServerFacts()", file="IWriteOnlyPersistentCounter.cs"];
m4_3 [label="_properties = new Dictionary<string, object> { { ''Queues'', _queues } }", span="22-22", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.BackgroundProcessServerFacts()", file="IWriteOnlyPersistentCounter.cs"];
m4_4 [label="_connection = new Mock<IStorageConnection>()", span="24-24", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.BackgroundProcessServerFacts()", file="IWriteOnlyPersistentCounter.cs"];
m4_5 [label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="25-25", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.BackgroundProcessServerFacts()", file="IWriteOnlyPersistentCounter.cs"];
m4_6 [label="Exit Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.BackgroundProcessServerFacts()", span="18-18", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.BackgroundProcessServerFacts()", file="IWriteOnlyPersistentCounter.cs"];
m4_49 [label="Entry System.Threading.Thread.Sleep(int)", span="0-0", cluster="System.Threading.Thread.Sleep(int)", file="IWriteOnlyPersistentCounter.cs"];
m4_21 [label="Entry Unk.>", span="", cluster="Unk.>", file="IWriteOnlyPersistentCounter.cs"];
m4_34 [label="Entry BackgroundProcessServer.cstr", span="", cluster="BackgroundProcessServer.cstr", file="IWriteOnlyPersistentCounter.cs"];
m4_72 [label="Entry Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.CreateProcessMock<T>()", span="89-89", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.CreateProcessMock<T>()", file="IWriteOnlyPersistentCounter.cs"];
m4_96 [label="var mock = new Mock<T>()", span="92-92", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.CreateProcessMock<T>()", file="IWriteOnlyPersistentCounter.cs"];
m4_97 [label="_processes.Add(mock.Object)", span="93-93", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.CreateProcessMock<T>()", file="IWriteOnlyPersistentCounter.cs"];
m4_98 [label="return mock;", span="95-95", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.CreateProcessMock<T>()", file="IWriteOnlyPersistentCounter.cs"];
m4_99 [label="Exit Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.CreateProcessMock<T>()", span="89-89", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.CreateProcessMock<T>()", file="IWriteOnlyPersistentCounter.cs"];
m4_62 [label="Entry Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Execute_StartsAllTheComponents_InLoop_AndWaitsForThem()", span="68-68", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Execute_StartsAllTheComponents_InLoop_AndWaitsForThem()", file="IWriteOnlyPersistentCounter.cs"];
m4_63 [label="var component1 = CreateProcessMock<IServerComponent>()", span="71-71", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Execute_StartsAllTheComponents_InLoop_AndWaitsForThem()", file="IWriteOnlyPersistentCounter.cs"];
m4_64 [label="component1.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Callback(() => Thread.Sleep(10))", span="72-72", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Execute_StartsAllTheComponents_InLoop_AndWaitsForThem()", file="IWriteOnlyPersistentCounter.cs"];
m4_69 [label="component1.Verify(x => x.Execute(It.IsAny<CancellationToken>()), Times.AtLeast(5))", span="80-80", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Execute_StartsAllTheComponents_InLoop_AndWaitsForThem()", file="IWriteOnlyPersistentCounter.cs"];
m4_65 [label="var component2 = CreateProcessMock<IBackgroundProcess>()", span="73-73", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Execute_StartsAllTheComponents_InLoop_AndWaitsForThem()", file="IWriteOnlyPersistentCounter.cs"];
m4_66 [label="component2.Setup(x => x.Execute(It.IsAny<BackgroundProcessContext>())).Callback(() => Thread.Sleep(10))", span="74-74", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Execute_StartsAllTheComponents_InLoop_AndWaitsForThem()", file="IWriteOnlyPersistentCounter.cs"];
m4_70 [label="component2.Verify(x => x.Execute(It.IsNotNull<BackgroundProcessContext>()), Times.AtLeast(5))", span="81-81", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Execute_StartsAllTheComponents_InLoop_AndWaitsForThem()", file="IWriteOnlyPersistentCounter.cs"];
m4_67 [label="CreateServer()", span="77-77", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Execute_StartsAllTheComponents_InLoop_AndWaitsForThem()", file="IWriteOnlyPersistentCounter.cs"];
m4_68 [label="Thread.Sleep(100)", span="77-77", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Execute_StartsAllTheComponents_InLoop_AndWaitsForThem()", file="IWriteOnlyPersistentCounter.cs"];
m4_71 [label="Exit Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Execute_StartsAllTheComponents_InLoop_AndWaitsForThem()", span="68-68", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Execute_StartsAllTheComponents_InLoop_AndWaitsForThem()", file="IWriteOnlyPersistentCounter.cs"];
m4_16 [label="Entry Unk.GetConnection", span="", cluster="Unk.GetConnection", file="IWriteOnlyPersistentCounter.cs"];
m4_35 [label="Entry Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenPropertiesArgumentIsNull()", span="47-47", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenPropertiesArgumentIsNull()", file="IWriteOnlyPersistentCounter.cs"];
m4_36 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundProcessServer(_storage.Object, _processes, null))", span="49-50", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenPropertiesArgumentIsNull()", file="IWriteOnlyPersistentCounter.cs"];
m4_37 [label="Assert.Equal(''properties'', exception.ParamName)", span="52-52", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenPropertiesArgumentIsNull()", file="IWriteOnlyPersistentCounter.cs"];
m4_38 [label="Exit Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenPropertiesArgumentIsNull()", span="47-47", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenPropertiesArgumentIsNull()", file="IWriteOnlyPersistentCounter.cs"];
m4_101 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="IWriteOnlyPersistentCounter.cs"];
m4_11 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="IWriteOnlyPersistentCounter.cs"];
m4_54 [label="Entry Unk.AnnounceServer", span="", cluster="Unk.AnnounceServer", file="IWriteOnlyPersistentCounter.cs"];
m4_91 [label="Entry lambda expression", span="81-81", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_13 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_14 [label="x.GetConnection()", span="25-25", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_15 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_23 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_24 [label="new BackgroundProcessServer(null, _processes, _properties)", span="32-32", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_25 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_31 [label="Entry lambda expression", span="41-41", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_32 [label="new BackgroundProcessServer(_storage.Object, null, _properties)", span="41-41", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_33 [label="Exit lambda expression", span="41-41", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_39 [label="Entry lambda expression", span="50-50", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_40 [label="new BackgroundProcessServer(_storage.Object, _processes, null)", span="50-50", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_41 [label="Exit lambda expression", span="50-50", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_51 [label="Entry lambda expression", span="60-62", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_58 [label="Entry lambda expression", span="64-64", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_52 [label="x.AnnounceServer(\r\n                It.IsNotNull<string>(),\r\n                It.Is<ServerContext>(y => y.Queues == _queues))", span="60-62", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_53 [label="Exit lambda expression", span="60-62", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_55 [label="Entry lambda expression", span="62-62", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_56 [label="y.Queues == _queues", span="62-62", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_57 [label="Exit lambda expression", span="62-62", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_59 [label="x.RemoveServer(It.IsNotNull<string>())", span="64-64", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_60 [label="Exit lambda expression", span="64-64", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_75 [label="Entry lambda expression", span="72-72", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_79 [label="Entry lambda expression", span="72-72", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_82 [label="Entry lambda expression", span="74-74", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_85 [label="Entry lambda expression", span="74-74", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_88 [label="Entry lambda expression", span="80-80", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_76 [label="x.Execute(It.IsAny<CancellationToken>())", span="72-72", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_77 [label="Exit lambda expression", span="72-72", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_80 [label="Thread.Sleep(10)", span="72-72", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_81 [label="Exit lambda expression", span="72-72", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_83 [label="x.Execute(It.IsAny<BackgroundProcessContext>())", span="74-74", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_84 [label="Exit lambda expression", span="74-74", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_86 [label="Thread.Sleep(10)", span="74-74", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_87 [label="Exit lambda expression", span="74-74", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_89 [label="x.Execute(It.IsAny<CancellationToken>())", span="80-80", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_90 [label="Exit lambda expression", span="80-80", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_92 [label="x.Execute(It.IsNotNull<BackgroundProcessContext>())", span="81-81", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_93 [label="Exit lambda expression", span="81-81", cluster="lambda expression", file="IWriteOnlyPersistentCounter.cs"];
m4_50 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="IWriteOnlyPersistentCounter.cs"];
m4_74 [label="Entry Unk.AtLeast", span="", cluster="Unk.AtLeast", file="IWriteOnlyPersistentCounter.cs"];
m4_61 [label="Entry Unk.RemoveServer", span="", cluster="Unk.RemoveServer", file="IWriteOnlyPersistentCounter.cs"];
m4_78 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="IWriteOnlyPersistentCounter.cs"];
m4_73 [label="Entry Unk.Callback", span="", cluster="Unk.Callback", file="IWriteOnlyPersistentCounter.cs"];
m4_12 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="IWriteOnlyPersistentCounter.cs"];
m4_42 [label="Entry Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_AnnouncesTheServer_AndRemovesIt()", span="56-56", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_AnnouncesTheServer_AndRemovesIt()", file="IWriteOnlyPersistentCounter.cs"];
m4_43 [label="CreateServer()", span="58-58", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_AnnouncesTheServer_AndRemovesIt()", file="IWriteOnlyPersistentCounter.cs"];
m4_44 [label="Thread.Sleep(50)", span="58-58", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_AnnouncesTheServer_AndRemovesIt()", file="IWriteOnlyPersistentCounter.cs"];
m4_45 [label="_connection.Verify(x => x.AnnounceServer(\r\n                It.IsNotNull<string>(),\r\n                It.Is<ServerContext>(y => y.Queues == _queues)))", span="60-62", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_AnnouncesTheServer_AndRemovesIt()", file="IWriteOnlyPersistentCounter.cs"];
m4_46 [label="_connection.Verify(x => x.RemoveServer(It.IsNotNull<string>()))", span="64-64", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_AnnouncesTheServer_AndRemovesIt()", file="IWriteOnlyPersistentCounter.cs"];
m4_47 [label="Exit Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_AnnouncesTheServer_AndRemovesIt()", span="56-56", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_AnnouncesTheServer_AndRemovesIt()", file="IWriteOnlyPersistentCounter.cs"];
m4_27 [label="Entry Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenProcessesArgumentIsNull()", span="38-38", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenProcessesArgumentIsNull()", file="IWriteOnlyPersistentCounter.cs"];
m4_28 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundProcessServer(_storage.Object, null, _properties))", span="40-41", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenProcessesArgumentIsNull()", file="IWriteOnlyPersistentCounter.cs"];
m4_29 [label="Assert.Equal(''processes'', exception.ParamName)", span="43-43", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenProcessesArgumentIsNull()", file="IWriteOnlyPersistentCounter.cs"];
m4_30 [label="Exit Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenProcessesArgumentIsNull()", span="38-38", cluster="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts.Ctor_ThrowsAnException_WhenProcessesArgumentIsNull()", file="IWriteOnlyPersistentCounter.cs"];
m4_7 [label="Entry Mock<JobStorage>.cstr", span="", cluster="Mock<JobStorage>.cstr", file="IWriteOnlyPersistentCounter.cs"];
m4_26 [label="Entry Hangfire.Server.BackgroundProcessServer.BackgroundProcessServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerProcess>, System.Collections.Generic.IDictionary<string, object>)", span="38-38", cluster="Hangfire.Server.BackgroundProcessServer.BackgroundProcessServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerProcess>, System.Collections.Generic.IDictionary<string, object>)", file="IWriteOnlyPersistentCounter.cs"];
m4_102 [label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts", span="", file="IWriteOnlyPersistentCounter.cs"];
m5_0 [label="Entry HangFire.Storage.IWriteOnlyPersistentJob.Expire(string, System.TimeSpan)", span="7-7", cluster="HangFire.Storage.IWriteOnlyPersistentJob.Expire(string, System.TimeSpan)", file="IWriteOnlyPersistentJob.cs"];
m5_1 [label="Exit HangFire.Storage.IWriteOnlyPersistentJob.Expire(string, System.TimeSpan)", span="7-7", cluster="HangFire.Storage.IWriteOnlyPersistentJob.Expire(string, System.TimeSpan)", file="IWriteOnlyPersistentJob.cs"];
m5_2 [label="Entry HangFire.Storage.IWriteOnlyPersistentJob.Persist(string)", span="8-8", cluster="HangFire.Storage.IWriteOnlyPersistentJob.Persist(string)", file="IWriteOnlyPersistentJob.cs"];
m5_3 [label="Exit HangFire.Storage.IWriteOnlyPersistentJob.Persist(string)", span="8-8", cluster="HangFire.Storage.IWriteOnlyPersistentJob.Persist(string)", file="IWriteOnlyPersistentJob.cs"];
m5_6 [label="Entry HangFire.Storage.IWriteOnlyPersistentJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", span="12-12", cluster="HangFire.Storage.IWriteOnlyPersistentJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="IWriteOnlyPersistentJob.cs"];
m5_7 [label="Exit HangFire.Storage.IWriteOnlyPersistentJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", span="12-12", cluster="HangFire.Storage.IWriteOnlyPersistentJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="IWriteOnlyPersistentJob.cs"];
m5_4 [label="Entry HangFire.Storage.IWriteOnlyPersistentJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", span="10-10", cluster="HangFire.Storage.IWriteOnlyPersistentJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="IWriteOnlyPersistentJob.cs"];
m5_5 [label="Exit HangFire.Storage.IWriteOnlyPersistentJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", span="10-10", cluster="HangFire.Storage.IWriteOnlyPersistentJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="IWriteOnlyPersistentJob.cs"];
m6_0 [label="Entry HangFire.Storage.IWriteOnlyPersistentList.AddToLeft(string, string)", span="4-4", cluster="HangFire.Storage.IWriteOnlyPersistentList.AddToLeft(string, string)", file="IWriteOnlyPersistentList.cs"];
m6_1 [label="Exit HangFire.Storage.IWriteOnlyPersistentList.AddToLeft(string, string)", span="4-4", cluster="HangFire.Storage.IWriteOnlyPersistentList.AddToLeft(string, string)", file="IWriteOnlyPersistentList.cs"];
m6_2 [label="Entry HangFire.Storage.IWriteOnlyPersistentList.Remove(string, string)", span="5-5", cluster="HangFire.Storage.IWriteOnlyPersistentList.Remove(string, string)", file="IWriteOnlyPersistentList.cs"];
m6_3 [label="Exit HangFire.Storage.IWriteOnlyPersistentList.Remove(string, string)", span="5-5", cluster="HangFire.Storage.IWriteOnlyPersistentList.Remove(string, string)", file="IWriteOnlyPersistentList.cs"];
m6_4 [label="Entry HangFire.Storage.IWriteOnlyPersistentList.Trim(string, int, int)", span="7-7", cluster="HangFire.Storage.IWriteOnlyPersistentList.Trim(string, int, int)", file="IWriteOnlyPersistentList.cs"];
m6_5 [label="Exit HangFire.Storage.IWriteOnlyPersistentList.Trim(string, int, int)", span="7-7", cluster="HangFire.Storage.IWriteOnlyPersistentList.Trim(string, int, int)", file="IWriteOnlyPersistentList.cs"];
m7_1 [label="Exit HangFire.Storage.IWriteOnlyPersistentQueue.Enqueue(string, string)", span="4-4", cluster="HangFire.Storage.IWriteOnlyPersistentQueue.Enqueue(string, string)", file="IWriteOnlyPersistentQueue.cs"];
m8_2 [label="Entry HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string, double)", span="5-5", cluster="HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string, double)", file="IWriteOnlyPersistentSet.cs"];
m8_3 [label="Exit HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string, double)", span="5-5", cluster="HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string, double)", file="IWriteOnlyPersistentSet.cs"];
m8_0 [label="Entry HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string)", span="4-4", cluster="HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string)", file="IWriteOnlyPersistentSet.cs"];
m8_1 [label="Exit HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string)", span="4-4", cluster="HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string)", file="IWriteOnlyPersistentSet.cs"];
m8_4 [label="Entry HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", span="6-6", cluster="HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", file="IWriteOnlyPersistentSet.cs"];
m8_5 [label="Exit HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", span="6-6", cluster="HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", file="IWriteOnlyPersistentSet.cs"];
m9_4 [label="Entry HangFire.Storage.IWriteOnlyPersistentValue.ExpireIn(string, System.TimeSpan)", span="9-9", cluster="HangFire.Storage.IWriteOnlyPersistentValue.ExpireIn(string, System.TimeSpan)", file="IWriteOnlyPersistentValue.cs"];
m9_5 [label="Exit HangFire.Storage.IWriteOnlyPersistentValue.ExpireIn(string, System.TimeSpan)", span="9-9", cluster="HangFire.Storage.IWriteOnlyPersistentValue.ExpireIn(string, System.TimeSpan)", file="IWriteOnlyPersistentValue.cs"];
m9_2 [label="Entry HangFire.Storage.IWriteOnlyPersistentValue.Decrement(string)", span="7-7", cluster="HangFire.Storage.IWriteOnlyPersistentValue.Decrement(string)", file="IWriteOnlyPersistentValue.cs"];
m9_3 [label="Exit HangFire.Storage.IWriteOnlyPersistentValue.Decrement(string)", span="7-7", cluster="HangFire.Storage.IWriteOnlyPersistentValue.Decrement(string)", file="IWriteOnlyPersistentValue.cs"];
m9_0 [label="Entry HangFire.Storage.IWriteOnlyPersistentValue.Increment(string)", span="6-6", cluster="HangFire.Storage.IWriteOnlyPersistentValue.Increment(string)", file="IWriteOnlyPersistentValue.cs"];
m9_1 [label="Exit HangFire.Storage.IWriteOnlyPersistentValue.Increment(string)", span="6-6", cluster="HangFire.Storage.IWriteOnlyPersistentValue.Increment(string)", file="IWriteOnlyPersistentValue.cs"];
m10_11 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="IWriteOnlyTransaction.cs"];
m10_4 [label="Entry HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="32-32", cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="IWriteOnlyTransaction.cs"];
m10_20 [label="Entry System.DateTime.AddMinutes(double)", span="0-0", cluster="System.DateTime.AddMinutes(double)", file="IWriteOnlyTransaction.cs"];
m10_6 [label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", span="18-18", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="IWriteOnlyTransaction.cs"];
m10_7 [label="var date = new DateTime(2012, 12, 12)", span="20-20", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", color=green, community=0, file="IWriteOnlyTransaction.cs"];
m10_8 [label="var state = new ScheduledState(date)", span="21-21", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", color=green, community=0, file="IWriteOnlyTransaction.cs"];
m10_9 [label="Assert.Equal(date, state.EnqueueAt)", span="22-22", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", color=green, community=0, file="IWriteOnlyTransaction.cs"];
m10_10 [label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", span="18-18", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="IWriteOnlyTransaction.cs"];
m10_0 [label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="13-13", cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="IWriteOnlyTransaction.cs"];
m10_1 [label="Exit HangFire.Storage.IWriteOnlyTransaction.Commit()", span="13-13", cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", color=green, community=0, file="IWriteOnlyTransaction.cs"];
m10_2 [label="Assert.Equal(ScheduledState.StateName, state.Name)", span="14-14", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", color=green, community=0, file="IWriteOnlyTransaction.cs"];
m10_3 [label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", span="11-11", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", file="IWriteOnlyTransaction.cs"];
m10_21 [label="Entry Unk.True", span="", cluster="Unk.True", file="IWriteOnlyTransaction.cs"];
m10_35 [label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", span="53-53", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", file="IWriteOnlyTransaction.cs"];
m10_36 [label="var state = new ScheduledState(DateTime.UtcNow)", span="55-55", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", file="IWriteOnlyTransaction.cs"];
m10_37 [label="Assert.False(state.IgnoreJobLoadException)", span="56-56", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", file="IWriteOnlyTransaction.cs"];
m10_38 [label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", span="53-53", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", file="IWriteOnlyTransaction.cs"];
m10_17 [label="Entry HangFire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="27-27", cluster="HangFire.States.ScheduledState.ScheduledState(System.TimeSpan)", file="IWriteOnlyTransaction.cs"];
m10_34 [label="Entry Unk.False", span="", cluster="Unk.False", file="IWriteOnlyTransaction.cs"];
m10_5 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="IWriteOnlyTransaction.cs"];
m10_28 [label="Entry HangFire.States.ScheduledState.SerializeData()", span="46-46", cluster="HangFire.States.ScheduledState.SerializeData()", file="IWriteOnlyTransaction.cs"];
m10_30 [label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", span="45-45", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", file="IWriteOnlyTransaction.cs"];
m10_31 [label="var state = new ScheduledState(DateTime.UtcNow)", span="47-47", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", file="IWriteOnlyTransaction.cs"];
m10_32 [label="Assert.False(state.IsFinal)", span="49-49", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", file="IWriteOnlyTransaction.cs"];
m10_33 [label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", span="45-45", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", file="IWriteOnlyTransaction.cs"];
m10_18 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="IWriteOnlyTransaction.cs"];
m10_22 [label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", span="34-34", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="IWriteOnlyTransaction.cs"];
m10_23 [label="var state = new ScheduledState(new DateTime(2012, 12, 12))", span="36-36", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", color=green, community=0, file="IWriteOnlyTransaction.cs"];
m10_24 [label="var data = state.SerializeData()", span="38-38", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="IWriteOnlyTransaction.cs"];
m10_25 [label="Assert.Equal(JobHelper.SerializeDateTime(state.EnqueueAt), data[''EnqueueAt''])", span="40-40", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="IWriteOnlyTransaction.cs"];
m10_26 [label="Assert.Equal(JobHelper.SerializeDateTime(state.ScheduledAt), data[''ScheduledAt''])", span="41-41", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="IWriteOnlyTransaction.cs"];
m10_27 [label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", span="34-34", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="IWriteOnlyTransaction.cs"];
m10_12 [label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", span="26-26", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", file="IWriteOnlyTransaction.cs"];
m10_13 [label="var state = new ScheduledState(TimeSpan.FromDays(1))", span="28-28", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", color=green, community=0, file="IWriteOnlyTransaction.cs"];
m10_14 [label="Assert.True(DateTime.UtcNow.AddDays(1).AddMinutes(-1) < state.EnqueueAt)", span="29-29", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", color=green, community=0, file="IWriteOnlyTransaction.cs"];
m10_15 [label="Assert.True(state.EnqueueAt < DateTime.UtcNow.AddDays(1).AddMinutes(1))", span="30-30", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", color=green, community=0, file="IWriteOnlyTransaction.cs"];
m10_16 [label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", span="26-26", cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", file="IWriteOnlyTransaction.cs"];
m10_19 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="IWriteOnlyTransaction.cs"];
m10_29 [label="Entry HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="IWriteOnlyTransaction.cs"];
m12_86 [label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76", cluster="HangFire.Web.RazorPage.Write(object)", file="JobDetailsPage1.generated.cs"];
m12_82 [label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", span="34-34", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", file="JobDetailsPage1.generated.cs"];
m12_95 [label="Entry HangFire.Web.JobHistoryRenderer.Render(string, System.Collections.Generic.IDictionary<string, string>)", span="74-74", cluster="HangFire.Web.JobHistoryRenderer.Render(string, System.Collections.Generic.IDictionary<string, string>)", file="JobDetailsPage1.generated.cs"];
m12_81 [label="Entry HangFire.Storage.Monitoring.IMonitoringApi.JobDetails(string)", span="9-9", cluster="HangFire.Storage.Monitoring.IMonitoringApi.JobDetails(string)", file="JobDetailsPage1.generated.cs"];
m12_92 [label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="51-51", cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="JobDetailsPage1.generated.cs"];
m12_93 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JobDetailsPage1.generated.cs"];
m12_78 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="JobDetailsPage1.generated.cs"];
m12_0 [label="Entry HangFire.Web.Pages.JobDetailsPage.Execute()", span="69-69", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_1 [label="WriteLiteral(''\r\n'')", span="73-73", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_2 [label="JobDetailsDto job", span="88-88", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_3 [label="var monitor = JobStorage.Current.GetMonitoringApi()", span="89-89", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_4 [label="job = monitor.JobDetails(JobId.ToString())", span="91-91", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_5 [label="string title = null", span="94-94", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_6 [label="job != null && job.Method != null", span="96-96", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_7 [label="title = HtmlHelper.DisplayMethod(job.Method)", span="98-98", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_11 [label="job == null", span="114-114", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_17 [label="job.CreatedAt.HasValue", span="149-149", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_19 [label="Write(JobHelper.ToStringTimestamp(job.CreatedAt.Value))", span="161-161", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_21 [label="job.Method != null", span="179-179", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_23 [label="Write(JobMethodCallRenderer.Render(job.Method, job.Arguments, job.OldFormatArguments))", span="190-190", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_26 [label="job.Properties.Count > 0", span="210-210", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_28 [label="job.Properties", span="221-221", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_37 [label="job.History.Count > 0", span="277-277", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_40 [label="job.History", span="289-289", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_8 [label="title = title ?? ''Job''", span="101-101", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_9 [label="Layout = new LayoutPage { Title = title, Subtitle = HtmlHelper.JobId(JobId.ToString(), false).ToString() }", span="103-103", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_10 [label="WriteLiteral(''\r\n'')", span="109-109", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_12 [label="WriteLiteral(''    '')", span="120-120", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_16 [label="WriteLiteral(''    <div class=\''job-snippet\''>\r\n        <div class=\''job-snippet-code\''>\r\n'')", span="144-144", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_13 [label="WriteLiteral('' The job with id \''')", span="122-122", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_14 [label="Write(JobId)", span="127-127", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_15 [label="WriteLiteral(''\' was expired or was not existed on the server.\r\n'')", span="132-132", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_18 [label="WriteLiteral(''                <div class=\''pull-right job-creation-date\''>\r\n                    C'' +\r\n''reated\r\n                    <span data-moment=\'''')", span="155-156", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_20 [label="WriteLiteral(''\''></span>\r\n                </div>\r\n'')", span="166-166", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_22 [label="WriteLiteral(''                <pre><code>'')", span="185-185", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_25 [label="WriteLiteral(''            <div class=\''clearfix\''></div>\r\n        </div>\r\n\r\n'')", span="205-205", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_24 [label="WriteLiteral(''</code></pre>\r\n'')", span="195-195", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_27 [label="WriteLiteral(''            <div class=\''job-snippet-properties\''>\r\n                <dl>\r\n'')", span="216-216", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_36 [label="WriteLiteral(''    </div>\r\n'')", span="271-271", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_29 [label="WriteLiteral(''                        <dt>'')", span="227-227", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_35 [label="WriteLiteral(''                </dl>\r\n            </div>\r\n'')", span="261-261", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_30 [label="Write(property.Key)", span="232-232", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_31 [label="WriteLiteral(''</dt>\r\n'')", span="237-237", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_33 [label="Write(property.Value)", span="246-246", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_32 [label="WriteLiteral(''                        <dd><pre>'')", span="241-241", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_34 [label="WriteLiteral(''</pre></dd>\r\n'')", span="251-251", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_38 [label="WriteLiteral(''        <h3>History</h3>\r\n'')", span="283-283", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_39 [label="var index = 0", span="288-288", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_42 [label="index == 0", span="295-295", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_45 [label="Write(index == 0 ? ''job-history-current'' : null)", span="311-311", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_76 [label="index++", span="488-488", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_41 [label="var background = JobHistoryRenderer.BackgroundStateColors.ContainsKey(entry[''State''])\r\n               ? JobHistoryRenderer.BackgroundStateColors[entry[''State'']]\r\n               : null", span="291-293", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", color=red, community=2, file="JobDetailsPage1.generated.cs"];
m12_43 [label="background = JobHistoryRenderer.ForegroundStateColors.ContainsKey(entry[''State''])\r\n                    ? JobHistoryRenderer.ForegroundStateColors[entry[''State'']]\r\n                    : null", span="297-299", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", color=red, community=2, file="JobDetailsPage1.generated.cs"];
m12_49 [label="Write(entry[''CreatedAt''])", span="331-331", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", color=red, community=0, file="JobDetailsPage1.generated.cs"];
m12_51 [label="Write(JobHelper.FromStringTimestamp(entry[''CreatedAt'']))", span="341-341", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", color=red, community=0, file="JobDetailsPage1.generated.cs"];
m12_53 [label="Write(entry[''State''])", span="352-352", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", color=red, community=0, file="JobDetailsPage1.generated.cs"];
m12_55 [label="entry.ContainsKey(''Reason'')", span="362-362", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", color=red, community=0, file="JobDetailsPage1.generated.cs"];
m12_57 [label="Write(entry[''Reason''])", span="373-373", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", color=red, community=0, file="JobDetailsPage1.generated.cs"];
m12_60 [label="JobHistoryRenderer.Exists(entry[''State''])", span="393-393", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", color=red, community=0, file="JobDetailsPage1.generated.cs"];
m12_61 [label="var rendered = JobHistoryRenderer.Render(entry[''State''], entry)", span="395-395", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", color=red, community=0, file="JobDetailsPage1.generated.cs"];
m12_67 [label="entry.Where(x => x.Key != ''State'' && x.Key != ''Date'' && x.Key != ''Reason'')", span="432-432", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", color=red, community=0, file="JobDetailsPage1.generated.cs"];
m12_47 [label="Write(background != null ? String.Format(''background-color: {0};'', background) : null)", span="321-321", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_44 [label="WriteLiteral(''            <div class=\''job-history '')", span="306-306", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_46 [label="WriteLiteral(''\''>\r\n                <div class=\''job-history-heading\'' style=\'''')", span="316-316", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_48 [label="WriteLiteral(''\''>\r\n                    <span class=\''pull-right\'' data-moment=\'''')", span="326-326", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_50 [label="WriteLiteral(''\''>'')", span="336-336", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_52 [label="WriteLiteral(''</span>\r\n                    <h4 class=\''job-history-title\''>\r\n                    '' +\r\n''    '')", span="346-347", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_54 [label="WriteLiteral(''\r\n\r\n'')", span="357-357", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_56 [label="WriteLiteral(''                            <small>'')", span="368-368", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_59 [label="WriteLiteral(''                    </h4>\r\n                </div>\r\n\r\n'')", span="388-388", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_58 [label="WriteLiteral(''</small>\r\n'')", span="378-378", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_66 [label="WriteLiteral(''                    <div class=\''job-history-body\''>\r\n                        <dl c'' +\r\n''lass=\''dl-horizontal\''>\r\n'')", span="426-427", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_62 [label="rendered != null", span="396-396", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_64 [label="Write(rendered)", span="408-408", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_63 [label="WriteLiteral(''                        <div class=\''job-history-body\''>\r\n                         '' +\r\n''   '')", span="402-403", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_75 [label="WriteLiteral(''            </div>\r\n'')", span="482-482", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_65 [label="WriteLiteral(''\r\n                        </div>\r\n'')", span="413-413", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_68 [label="WriteLiteral(''                                <dt>'')", span="438-438", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_74 [label="WriteLiteral(''                        </dl>\r\n                    </div>\r\n'')", span="472-472", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_69 [label="Write(item.Key)", span="443-443", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_72 [label="Write(item.Value)", span="457-457", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_70 [label="WriteLiteral('':</dt>\r\n'')", span="448-448", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_71 [label="WriteLiteral(''                                <dd>'')", span="452-452", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_73 [label="WriteLiteral(''</dd>\r\n'')", span="462-462", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_77 [label="Exit HangFire.Web.Pages.JobDetailsPage.Execute()", span="69-69", cluster="HangFire.Web.Pages.JobDetailsPage.Execute()", file="JobDetailsPage1.generated.cs"];
m12_94 [label="Entry HangFire.Web.JobHistoryRenderer.Exists(string)", span="69-69", cluster="HangFire.Web.JobHistoryRenderer.Exists(string)", file="JobDetailsPage1.generated.cs"];
m12_96 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="JobDetailsPage1.generated.cs"];
m12_85 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="JobDetailsPage1.generated.cs"];
m12_90 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="JobDetailsPage1.generated.cs"];
m12_97 [label="Entry lambda expression", span="432-432", cluster="lambda expression", file="JobDetailsPage1.generated.cs"];
m12_98 [label="x.Key != ''State'' && x.Key != ''Date'' && x.Key != ''Reason''", span="432-432", cluster="lambda expression", color=red, community=0, file="JobDetailsPage1.generated.cs"];
m12_99 [label="Exit lambda expression", span="432-432", cluster="lambda expression", file="JobDetailsPage1.generated.cs"];
m12_88 [label="Entry HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>)", span="28-28", cluster="HangFire.Web.JobMethodCallRenderer.Render(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>)", file="JobDetailsPage1.generated.cs"];
m12_87 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="JobDetailsPage1.generated.cs"];
m12_80 [label="Entry string.ToString()", span="0-0", cluster="string.ToString()", file="JobDetailsPage1.generated.cs"];
m12_89 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="JobDetailsPage1.generated.cs"];
m12_84 [label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="55-55", cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="JobDetailsPage1.generated.cs"];
m12_79 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="43-43", cluster="HangFire.JobStorage.GetMonitoringApi()", file="JobDetailsPage1.generated.cs"];
m12_83 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="JobDetailsPage1.generated.cs"];
m12_100 [label="HangFire.Web.Pages.JobDetailsPage", span="", file="JobDetailsPage1.generated.cs"];
m14_37 [label="Entry HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", span="10-10", cluster="HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", file="JobMethod.cs"];
m14_38 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="JobMethod.cs"];
m14_41 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="JobMethod.cs"];
m14_26 [label="Entry HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="113-113", cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="JobMethod.cs"];
m14_27 [label="return In(delay, typeof(TJob), args);", span="116-116", cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="JobMethod.cs"];
m14_28 [label="Exit HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="113-113", cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="JobMethod.cs"];
m14_3 [label="Entry HangFire.Perform.Async<TJob>(object)", span="40-40", cluster="HangFire.Perform.Async<TJob>(object)", file="JobMethod.cs"];
m14_4 [label="return Async(typeof(TJob), args);", span="43-43", cluster="HangFire.Perform.Async<TJob>(object)", file="JobMethod.cs"];
m14_5 [label="Exit HangFire.Perform.Async<TJob>(object)", span="40-40", cluster="HangFire.Perform.Async<TJob>(object)", file="JobMethod.cs"];
m14_19 [label="Entry HangFire.JobHelper.GetQueue(System.Type)", span="23-23", cluster="HangFire.JobHelper.GetQueue(System.Type)", file="JobMethod.cs"];
m14_21 [label="Entry HangFire.Perform.GenerateId()", span="157-157", cluster="HangFire.Perform.GenerateId()", file="JobMethod.cs"];
m14_39 [label="return Guid.NewGuid().ToString();", span="159-159", cluster="HangFire.Perform.GenerateId()", file="JobMethod.cs"];
m14_40 [label="Exit HangFire.Perform.GenerateId()", span="157-157", cluster="HangFire.Perform.GenerateId()", file="JobMethod.cs"];
m14_6 [label="Entry HangFire.Perform.Async(System.Type, object)", span="71-71", cluster="HangFire.Perform.Async(System.Type, object)", file="JobMethod.cs"];
m14_10 [label="type == null", span="73-73", cluster="HangFire.Perform.Async(System.Type, object)", file="JobMethod.cs"];
m14_13 [label="var queue = JobHelper.GetQueue(type)", span="80-80", cluster="HangFire.Perform.Async(System.Type, object)", file="JobMethod.cs"];
m14_15 [label="return client.CreateJob(GenerateId(), type, enqueuedState, args);", span="83-83", cluster="HangFire.Perform.Async(System.Type, object)", file="JobMethod.cs"];
m14_11 [label="throw new ArgumentNullException(''type'');", span="75-75", cluster="HangFire.Perform.Async(System.Type, object)", file="JobMethod.cs"];
m14_12 [label="var client = new JobClient(RedisFactory.PooledManager)", span="78-78", cluster="HangFire.Perform.Async(System.Type, object)", file="JobMethod.cs"];
m14_14 [label="var enqueuedState = new EnqueuedState(''Enqueued by the Сlient'', queue)", span="81-81", cluster="HangFire.Perform.Async(System.Type, object)", file="JobMethod.cs"];
m14_16 [label="Exit HangFire.Perform.Async(System.Type, object)", span="71-71", cluster="HangFire.Perform.Async(System.Type, object)", file="JobMethod.cs"];
m14_30 [label="Entry HangFire.Perform.In(System.TimeSpan, System.Type)", span="128-128", cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="JobMethod.cs"];
m14_31 [label="return In(delay, type, null);", span="130-130", cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="JobMethod.cs"];
m14_32 [label="Exit HangFire.Perform.In(System.TimeSpan, System.Type)", span="128-128", cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="JobMethod.cs"];
m14_0 [label="Entry HangFire.Perform.Async<TJob>()", span="24-24", cluster="HangFire.Perform.Async<TJob>()", file="JobMethod.cs"];
m14_1 [label="return Async<TJob>(null);", span="27-27", cluster="HangFire.Perform.Async<TJob>()", file="JobMethod.cs"];
m14_2 [label="Exit HangFire.Perform.Async<TJob>()", span="24-24", cluster="HangFire.Perform.Async<TJob>()", file="JobMethod.cs"];
m14_7 [label="Entry HangFire.Perform.Async(System.Type)", span="55-55", cluster="HangFire.Perform.Async(System.Type)", file="JobMethod.cs"];
m14_8 [label="return Async(type, null);", span="57-57", cluster="HangFire.Perform.Async(System.Type)", file="JobMethod.cs"];
m14_9 [label="Exit HangFire.Perform.Async(System.Type)", span="55-55", cluster="HangFire.Perform.Async(System.Type)", file="JobMethod.cs"];
m14_18 [label="Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager)", span="13-13", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)", file="JobMethod.cs"];
m14_20 [label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string)", span="10-10", cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="JobMethod.cs"];
m14_22 [label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="27-27", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="JobMethod.cs"];
m14_29 [label="Entry HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="144-144", cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="JobMethod.cs"];
m14_33 [label="var client = new JobClient(RedisFactory.BasicManager)", span="146-146", cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="JobMethod.cs"];
m14_34 [label="var scheduledState = new ScheduledState(''Scheduled by the Client'', DateTime.UtcNow.Add(delay))", span="148-148", cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="JobMethod.cs"];
m14_35 [label="return client.CreateJob(GenerateId(), type, scheduledState, args);", span="149-149", cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="JobMethod.cs"];
m14_36 [label="Exit HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="144-144", cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="JobMethod.cs"];
m14_42 [label="Entry System.Guid.ToString()", span="0-0", cluster="System.Guid.ToString()", file="JobMethod.cs"];
m14_23 [label="Entry HangFire.Perform.In<TJob>(System.TimeSpan)", span="96-96", cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="JobMethod.cs"];
m14_24 [label="return In<TJob>(delay, null);", span="99-99", cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="JobMethod.cs"];
m14_25 [label="Exit HangFire.Perform.In<TJob>(System.TimeSpan)", span="96-96", cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="JobMethod.cs"];
m16_0 [label="Entry HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="22-22", cluster="HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="JobStateHandler.cs"];
m16_1 [label="Exit HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="22-22", cluster="HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="JobStateHandler.cs"];
m16_2 [label="Entry HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="27-27", cluster="HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="JobStateHandler.cs"];
m16_3 [label="Exit HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="27-27", cluster="HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="JobStateHandler.cs"];
m17_16 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="PerformContext.cs"];
m17_20 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="PerformContext.cs"];
m17_25 [label="Entry HangFire.Storage.IPersistentJob.GetParameter(string, string)", span="8-8", cluster="HangFire.Storage.IPersistentJob.GetParameter(string, string)", file="PerformContext.cs"];
m17_17 [label="Entry HangFire.Server.Performing.PerformContext.SetJobParameter(string, object)", span="64-64", cluster="HangFire.Server.Performing.PerformContext.SetJobParameter(string, object)", file="PerformContext.cs"];
m17_18 [label="Connection.Jobs.SetParameter(JobId, name, JobHelper.ToJson(value))", span="66-66", cluster="HangFire.Server.Performing.PerformContext.SetJobParameter(string, object)", color=red, community=0, file="PerformContext.cs"];
m17_19 [label="Exit HangFire.Server.Performing.PerformContext.SetJobParameter(string, object)", span="64-64", cluster="HangFire.Server.Performing.PerformContext.SetJobParameter(string, object)", file="PerformContext.cs"];
m17_26 [label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="28-28", cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="PerformContext.cs"];
m17_3 [label="Entry HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", span="35-35", cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs"];
m17_4 [label="connection == null", span="42-42", cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs"];
m17_6 [label="jobId == null", span="43-43", cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs"];
m17_8 [label="jobMethod == null", span="44-44", cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs"];
m17_10 [label="Connection = connection", span="46-46", cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs"];
m17_11 [label="JobId = jobId", span="47-47", cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs"];
m17_12 [label="JobMethod = jobMethod", span="48-48", cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs"];
m17_5 [label="throw new ArgumentNullException(''connection'');", span="42-42", cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs"];
m17_7 [label="throw new ArgumentNullException(''jobId'');", span="43-43", cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs"];
m17_9 [label="throw new ArgumentNullException(''jobMethod'');", span="44-44", cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs"];
m17_13 [label="Items = new Dictionary<string, object>()", span="49-49", cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs"];
m17_14 [label="Exit HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", span="35-35", cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="PerformContext.cs"];
m17_0 [label="Entry HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.Performing.PerformContext)", span="29-29", cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.Performing.PerformContext)", file="PerformContext.cs"];
m17_1 [label="Items = context.Items", span="32-32", cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.Performing.PerformContext)", file="PerformContext.cs"];
m17_2 [label="Exit HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.Performing.PerformContext)", span="29-29", cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.Performing.PerformContext)", file="PerformContext.cs"];
m17_21 [label="Entry HangFire.Storage.IPersistentJob.SetParameter(string, string, string)", span="7-7", cluster="HangFire.Storage.IPersistentJob.SetParameter(string, string, string)", file="PerformContext.cs"];
m17_22 [label="Entry HangFire.Server.Performing.PerformContext.GetJobParameter<T>(string)", span="69-69", cluster="HangFire.Server.Performing.PerformContext.GetJobParameter<T>(string)", file="PerformContext.cs"];
m17_23 [label="return JobHelper.FromJson<T>(Connection.Jobs.GetParameter(JobId, name));", span="71-71", cluster="HangFire.Server.Performing.PerformContext.GetJobParameter<T>(string)", color=red, community=0, file="PerformContext.cs"];
m17_24 [label="Exit HangFire.Server.Performing.PerformContext.GetJobParameter<T>(string)", span="69-69", cluster="HangFire.Server.Performing.PerformContext.GetJobParameter<T>(string)", file="PerformContext.cs"];
m17_27 [label="HangFire.Server.Performing.PerformContext", span="", file="PerformContext.cs"];
m18_0 [label="Entry HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="10-10", cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateHandler.cs"];
m18_1 [label="context.Transaction.Sets.Add(\r\n                ''processing'',\r\n                context.JobId,\r\n                JobHelper.ToTimestamp(DateTime.UtcNow))", span="12-15", cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", color=red, community=1, file="ProcessingStateHandler.cs"];
m18_2 [label="Exit HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="10-10", cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="ProcessingStateHandler.cs"];
m18_4 [label="Entry HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string, double)", span="5-5", cluster="HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string, double)", file="ProcessingStateHandler.cs"];
m18_5 [label="Entry HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="18-18", cluster="HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="ProcessingStateHandler.cs"];
m18_6 [label="context.Transaction.Sets.Remove(''processing'', context.JobId)", span="20-20", cluster="HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", color=red, community=0, file="ProcessingStateHandler.cs"];
m18_7 [label="Exit HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="18-18", cluster="HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="ProcessingStateHandler.cs"];
m18_3 [label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="35-35", cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="ProcessingStateHandler.cs"];
m18_8 [label="Entry HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", span="6-6", cluster="HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", file="ProcessingStateHandler.cs"];
m19_8 [label="Entry HangFire.Redis.RedisConnection.Dispose()", span="24-24", cluster="HangFire.Redis.RedisConnection.Dispose()", file="RedisConnection.cs"];
m19_9 [label="_redis.Dispose()", span="26-26", cluster="HangFire.Redis.RedisConnection.Dispose()", file="RedisConnection.cs"];
m19_10 [label="Exit HangFire.Redis.RedisConnection.Dispose()", span="24-24", cluster="HangFire.Redis.RedisConnection.Dispose()", file="RedisConnection.cs"];
m19_73 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)", file="RedisConnection.cs"];
m19_132 [label="Entry Unk.FromNullableStringTimestamp", span="", cluster="Unk.FromNullableStringTimestamp", file="RedisConnection.cs"];
m19_20 [label="Entry HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", span="17-17", cluster="HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", file="RedisConnection.cs"];
m19_51 [label="Entry Unk.SetRangeInHash", span="", cluster="Unk.SetRangeInHash", file="RedisConnection.cs"];
m19_17 [label="Entry HangFire.Redis.RedisConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="34-34", cluster="HangFire.Redis.RedisConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs"];
m19_18 [label="return new RedisJobFetcher(_redis, queueNames, TimeSpan.FromSeconds(1));", span="36-36", cluster="HangFire.Redis.RedisConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs"];
m19_19 [label="Exit HangFire.Redis.RedisConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="34-34", cluster="HangFire.Redis.RedisConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs"];
m19_26 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="RedisConnection.cs"];
m19_6 [label="Entry HangFire.Redis.DataTypes.RedisJob.RedisJob(IRedisClient)", span="12-12", cluster="HangFire.Redis.DataTypes.RedisJob.RedisJob(IRedisClient)", file="RedisConnection.cs"];
m19_131 [label="Entry Unk.FromStringTimestamp", span="", cluster="Unk.FromStringTimestamp", file="RedisConnection.cs"];
m19_99 [label="Entry HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="137-137", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m19_100 [label="var serverNames = _redis.GetAllItemsFromSet(RedisStorage.Prefix + ''servers'')", span="139-139", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m19_111 [label="utcNow > maxTime.Add(timeOut)", span="170-170", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m19_101 [label="var heartbeats = new Dictionary<string, Tuple<DateTime, DateTime?>>()", span="140-140", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m19_104 [label=serverNames, span="146-146", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m19_102 [label="var utcNow = DateTime.UtcNow", span="142-142", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m19_106 [label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat''),\r\n                        x => heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1]))))", span="150-158", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m19_109 [label=heartbeats, span="165-165", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m19_103 [label="var pipeline = _redis.CreatePipeline()", span="144-144", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m19_107 [label="pipeline.Flush()", span="161-161", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m19_105 [label="var name = serverName", span="148-148", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m19_108 [label="var removedServerCount = 0", span="164-164", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m19_113 [label="removedServerCount++", span="173-173", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m19_114 [label="return removedServerCount;", span="177-177", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m19_110 [label="var maxTime = new DateTime(\r\n                    Math.Max(heartbeat.Value.Item1.Ticks, (heartbeat.Value.Item2 ?? DateTime.MinValue).Ticks))", span="167-168", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m19_112 [label="RemoveServer(_redis, heartbeat.Key)", span="172-172", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m19_115 [label="Exit HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="137-137", cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs"];
m19_98 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", file="RedisConnection.cs"];
m19_68 [label="Entry Unk.AddItemToSet", span="", cluster="Unk.AddItemToSet", file="RedisConnection.cs"];
m19_148 [label="Entry Unk.RemoveEntryFromHash", span="", cluster="Unk.RemoveEntryFromHash", file="RedisConnection.cs"];
m19_96 [label="_redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                ''Heartbeat'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="131-134", cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="RedisConnection.cs"];
m19_95 [label="Entry HangFire.Redis.RedisConnection.Heartbeat(string)", span="129-129", cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="RedisConnection.cs"];
m19_97 [label="Exit HangFire.Redis.RedisConnection.Heartbeat(string)", span="129-129", cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="RedisConnection.cs"];
m19_94 [label="Entry Unk.RemoveEntry", span="", cluster="Unk.RemoveEntry", file="RedisConnection.cs"];
m19_84 [label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId)))", span="121-123", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", color=green, community=0, file="RedisConnection.cs"];
m19_81 [label="Entry HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="113-113", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs"];
m19_82 [label="var transaction = redis.CreateTransaction()", span="115-115", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs", color=green, community=0];
m19_83 [label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId))", span="117-119", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs", color=green, community=0];
m19_85 [label="transaction.Commit()", span="125-125", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs", color=green, community=0];
m19_86 [label="Exit HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="113-113", cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs"];
m19_12 [label="Entry HangFire.Redis.RedisConnection.CreateWriteTransaction()", span="29-29", cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="RedisConnection.cs"];
m19_13 [label="return new RedisWriteOnlyTransaction(_redis.CreateTransaction());", span="31-31", cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="RedisConnection.cs"];
m19_14 [label="Exit HangFire.Redis.RedisConnection.CreateWriteTransaction()", span="29-29", cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="RedisConnection.cs"];
m19_7 [label="Entry HangFire.Redis.DataTypes.RedisSet.RedisSet(IRedisClient)", span="11-11", cluster="HangFire.Redis.DataTypes.RedisSet.RedisSet(IRedisClient)", file="RedisConnection.cs"];
m19_21 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="RedisConnection.cs"];
m19_55 [label="Entry Unk.ExpireEntryIn", span="", cluster="Unk.ExpireEntryIn", file="RedisConnection.cs"];
m19_42 [label="Entry System.Guid.ToString()", span="0-0", cluster="System.Guid.ToString()", file="RedisConnection.cs"];
m19_118 [label="Entry Unk.Flush", span="", cluster="Unk.Flush", file="RedisConnection.cs"];
m19_15 [label="Entry RedisWriteOnlyTransaction.cstr", span="", cluster="RedisWriteOnlyTransaction.cstr", file="RedisConnection.cs"];
m19_133 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="RedisConnection.cs"];
m19_121 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="RedisConnection.cs"];
m19_72 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RedisConnection.cs"];
m19_130 [label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0", cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="RedisConnection.cs"];
m19_138 [label="transaction.QueueCommand(x => x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    ''Checked''))", span="195-197", cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisConnection.cs"];
m19_134 [label="Entry HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", span="180-180", cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisConnection.cs"];
m19_135 [label="var transaction = redis.CreateTransaction()", span="185-185", cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisConnection.cs"];
m19_136 [label="transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                    String.Format(RedisStorage.Prefix + ''queue:{0}:dequeued'', queue),\r\n                    jobId,\r\n                    -1))", span="187-190", cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisConnection.cs"];
m19_137 [label="transaction.QueueCommand(x => x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    ''Fetched''))", span="192-194", cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisConnection.cs"];
m19_139 [label="transaction.Commit()", span="199-199", cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisConnection.cs"];
m19_140 [label="Exit HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", span="180-180", cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisConnection.cs"];
m19_77 [label="Entry Unk.AddItemToList", span="", cluster="Unk.AddItemToList", file="RedisConnection.cs"];
m19_11 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="RedisConnection.cs"];
m19_56 [label="Entry HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="81-81", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs"];
m19_57 [label="var transaction = _redis.CreateTransaction()", span="83-83", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs", color=green, community=0];
m19_58 [label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId))", span="85-86", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs", color=green, community=0];
m19_59 [label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', workerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        }))", span="88-94", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs", color=green, community=0];
m19_60 [label=queues, span="96-96", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs", color=green, community=0];
m19_62 [label="transaction.QueueCommand(x => x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1))", span="99-101", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs", color=green, community=0];
m19_63 [label="transaction.Commit()", span="104-104", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs", color=green, community=0];
m19_61 [label="var queue1 = queue", span="98-98", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs", color=green, community=0];
m19_64 [label="Exit HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="81-81", cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="RedisConnection.cs"];
m19_90 [label="Entry Unk.RemoveItemFromSet", span="", cluster="Unk.RemoveItemFromSet", file="RedisConnection.cs"];
m19_119 [label="Entry System.DateTime.DateTime(long)", span="0-0", cluster="System.DateTime.DateTime(long)", file="RedisConnection.cs"];
m19_78 [label="Entry HangFire.Redis.RedisConnection.RemoveServer(string)", span="108-108", cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="RedisConnection.cs"];
m19_79 [label="RemoveServer(_redis, serverId)", span="110-110", cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="RedisConnection.cs", color=green, community=0];
m19_80 [label="Exit HangFire.Redis.RedisConnection.RemoveServer(string)", span="108-108", cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="RedisConnection.cs"];
m19_37 [label="transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn))", span="70-72", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs"];
m19_28 [label="Entry HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="50-50", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs"];
m19_29 [label="var jobId = Guid.NewGuid().ToString()", span="56-56", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs"];
m19_30 [label="parameters.Add(''Type'', invocationData.Type)", span="58-58", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs"];
m19_31 [label="parameters.Add(''Method'', invocationData.Method)", span="59-59", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs"];
m19_32 [label="parameters.Add(''ParameterTypes'', invocationData.ParameterTypes)", span="60-60", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs"];
m19_33 [label="parameters.Add(''Arguments'', JobHelper.ToJson(arguments))", span="61-61", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs"];
m19_34 [label="parameters.Add(''CreatedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="62-62", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs"];
m19_36 [label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    parameters))", span="66-68", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs"];
m19_39 [label="return jobId;", span="78-78", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs", color=green, community=0];
m19_35 [label="var transaction = _redis.CreateTransaction()", span="64-64", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs"];
m19_38 [label="transaction.Commit()", span="75-75", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs"];
m19_40 [label="Exit HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="50-50", cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="RedisConnection.cs"];
m19_120 [label="Entry System.Math.Max(long, long)", span="0-0", cluster="System.Math.Max(long, long)", file="RedisConnection.cs"];
m19_92 [label="x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId))", span="121-123", cluster="lambda expression", color=green, community=0, file="RedisConnection.cs"];
m19_49 [label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    parameters)", span="66-68", cluster="lambda expression", file="RedisConnection.cs"];
m19_53 [label="x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn)", span="70-72", cluster="lambda expression", file="RedisConnection.cs"];
m19_48 [label="Entry lambda expression", span="66-68", cluster="lambda expression", file="RedisConnection.cs"];
m19_52 [label="Entry lambda expression", span="70-72", cluster="lambda expression", file="RedisConnection.cs"];
m19_50 [label="Exit lambda expression", span="66-68", cluster="lambda expression", file="RedisConnection.cs"];
m19_54 [label="Exit lambda expression", span="70-72", cluster="lambda expression", file="RedisConnection.cs"];
m19_66 [label="x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId)", span="85-86", cluster="lambda expression", file="RedisConnection.cs", color=green, community=0];
m19_70 [label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', workerCount.ToString(CultureInfo.InvariantCulture) },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        })", span="88-94", cluster="lambda expression", file="RedisConnection.cs", color=green, community=0];
m19_75 [label="x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1)", span="99-101", cluster="lambda expression", file="RedisConnection.cs", color=green, community=0];
m19_65 [label="Entry lambda expression", span="85-86", cluster="lambda expression", file="RedisConnection.cs"];
m19_69 [label="Entry lambda expression", span="88-94", cluster="lambda expression", file="RedisConnection.cs"];
m19_74 [label="Entry lambda expression", span="99-101", cluster="lambda expression", file="RedisConnection.cs"];
m19_67 [label="Exit lambda expression", span="85-86", cluster="lambda expression", file="RedisConnection.cs"];
m19_71 [label="Exit lambda expression", span="88-94", cluster="lambda expression", file="RedisConnection.cs"];
m19_76 [label="Exit lambda expression", span="99-101", cluster="lambda expression", file="RedisConnection.cs"];
m19_88 [label="x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId)", span="117-119", cluster="lambda expression", file="RedisConnection.cs", color=green, community=0];
m19_87 [label="Entry lambda expression", span="117-119", cluster="lambda expression", file="RedisConnection.cs"];
m19_91 [label="Entry lambda expression", span="121-123", cluster="lambda expression", file="RedisConnection.cs"];
m19_89 [label="Exit lambda expression", span="117-119", cluster="lambda expression", file="RedisConnection.cs"];
m19_93 [label="Exit lambda expression", span="121-123", cluster="lambda expression", file="RedisConnection.cs"];
m19_128 [label="heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1])))", span="154-158", cluster="lambda expression", file="RedisConnection.cs"];
m19_123 [label="x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat'')", span="151-153", cluster="lambda expression", file="RedisConnection.cs"];
m19_122 [label="Entry lambda expression", span="151-153", cluster="lambda expression", file="RedisConnection.cs"];
m19_127 [label="Entry lambda expression", span="154-158", cluster="lambda expression", file="RedisConnection.cs"];
m19_124 [label="Exit lambda expression", span="151-153", cluster="lambda expression", file="RedisConnection.cs"];
m19_129 [label="Exit lambda expression", span="154-158", cluster="lambda expression", file="RedisConnection.cs"];
m19_142 [label="x.RemoveItemFromList(\r\n                    String.Format(RedisStorage.Prefix + ''queue:{0}:dequeued'', queue),\r\n                    jobId,\r\n                    -1)", span="187-190", cluster="lambda expression", file="RedisConnection.cs"];
m19_146 [label="x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    ''Fetched'')", span="192-194", cluster="lambda expression", file="RedisConnection.cs"];
m19_150 [label="x.RemoveEntryFromHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    ''Checked'')", span="195-197", cluster="lambda expression", file="RedisConnection.cs"];
m19_141 [label="Entry lambda expression", span="187-190", cluster="lambda expression", file="RedisConnection.cs"];
m19_145 [label="Entry lambda expression", span="192-194", cluster="lambda expression", file="RedisConnection.cs"];
m19_149 [label="Entry lambda expression", span="195-197", cluster="lambda expression", file="RedisConnection.cs"];
m19_143 [label="Exit lambda expression", span="187-190", cluster="lambda expression", file="RedisConnection.cs"];
m19_147 [label="Exit lambda expression", span="192-194", cluster="lambda expression", file="RedisConnection.cs"];
m19_151 [label="Exit lambda expression", span="195-197", cluster="lambda expression", file="RedisConnection.cs"];
m19_45 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="RedisConnection.cs"];
m19_22 [label="Entry HangFire.Redis.RedisConnection.AcquireJobLock(string)", span="39-39", cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", file="RedisConnection.cs"];
m19_23 [label="return _redis.AcquireLock(\r\n                RedisStorage.Prefix + String.Format(''job:{0}:state-lock'', jobId),\r\n                TimeSpan.FromMinutes(1));", span="41-43", cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", file="RedisConnection.cs"];
m19_24 [label="Exit HangFire.Redis.RedisConnection.AcquireJobLock(string)", span="39-39", cluster="HangFire.Redis.RedisConnection.AcquireJobLock(string)", file="RedisConnection.cs"];
m19_117 [label="Entry Unk.CreatePipeline", span="", cluster="Unk.CreatePipeline", file="RedisConnection.cs"];
m19_144 [label="Entry Unk.RemoveItemFromList", span="", cluster="Unk.RemoveItemFromList", file="RedisConnection.cs"];
m19_41 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="RedisConnection.cs"];
m19_44 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="RedisConnection.cs"];
m19_47 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="RedisConnection.cs"];
m19_116 [label="Entry Unk.GetAllItemsFromSet", span="", cluster="Unk.GetAllItemsFromSet", file="RedisConnection.cs"];
m19_126 [label="Entry Unk.GetValuesFromHash", span="", cluster="Unk.GetValuesFromHash", file="RedisConnection.cs"];
m19_125 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="RedisConnection.cs"];
m19_46 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="RedisConnection.cs"];
m19_0 [label="Entry HangFire.Redis.RedisConnection.RedisConnection(HangFire.Redis.RedisStorage, IRedisClient)", span="15-15", cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.Redis.RedisStorage, IRedisClient)", file="RedisConnection.cs"];
m19_1 [label="_redis = redis", span="17-17", cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.Redis.RedisStorage, IRedisClient)", file="RedisConnection.cs"];
m19_2 [label="Jobs = new RedisJob(redis)", span="19-19", cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.Redis.RedisStorage, IRedisClient)", color=red, community=0, file="RedisConnection.cs"];
m19_3 [label="Sets = new RedisSet(redis)", span="20-20", cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.Redis.RedisStorage, IRedisClient)", color=red, community=0, file="RedisConnection.cs"];
m19_4 [label="Storage = storage", span="21-21", cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.Redis.RedisStorage, IRedisClient)", file="RedisConnection.cs", color=green, community=0];
m19_5 [label="Exit HangFire.Redis.RedisConnection.RedisConnection(HangFire.Redis.RedisStorage, IRedisClient)", span="15-15", cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.Redis.RedisStorage, IRedisClient)", file="RedisConnection.cs"];
m19_43 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="RedisConnection.cs"];
m19_27 [label="Entry Unk.AcquireLock", span="", cluster="Unk.AcquireLock", file="RedisConnection.cs"];
m19_16 [label="Entry Unk.CreateTransaction", span="", cluster="Unk.CreateTransaction", file="RedisConnection.cs"];
m19_152 [label="HangFire.Redis.RedisConnection", span="", file="RedisConnection.cs"];
m19_153 [label="System.Collections.Generic.IDictionary<string, string>", span="", file="RedisConnection.cs"];
m19_154 [label=jobId, span="", file="RedisConnection.cs"];
m19_155 [label="System.TimeSpan", span="", file="RedisConnection.cs"];
m19_156 [label=string, span="", file="RedisConnection.cs"];
m19_157 [label=int, span="", file="RedisConnection.cs"];
m19_158 [label=queue1, span="", file="RedisConnection.cs"];
m19_159 [label=string, span="", file="RedisConnection.cs"];
m19_160 [label=name, span="", file="RedisConnection.cs"];
m19_161 [label=heartbeats, span="", file="RedisConnection.cs"];
m19_162 [label=string, span="", file="RedisConnection.cs"];
m19_163 [label=string, span="", file="RedisConnection.cs"];
m20_22 [label="_redis.SetEntryInHash(\r\n                String.Format(Prefix + ''job:{0}'', id),\r\n                name,\r\n                value)", span="47-50", cluster="HangFire.Redis.DataTypes.RedisJob.SetParameter(string, string, string)", color=red, community=2, file="RedisJob.cs"];
m20_21 [label="Entry HangFire.Redis.DataTypes.RedisJob.SetParameter(string, string, string)", span="45-45", cluster="HangFire.Redis.DataTypes.RedisJob.SetParameter(string, string, string)", file="RedisJob.cs"];
m20_23 [label="Exit HangFire.Redis.DataTypes.RedisJob.SetParameter(string, string, string)", span="45-45", cluster="HangFire.Redis.DataTypes.RedisJob.SetParameter(string, string, string)", file="RedisJob.cs"];
m20_28 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="RedisJob.cs"];
m20_32 [label="Entry HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", span="180-180", cluster="HangFire.Redis.RedisConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisJob.cs"];
m20_20 [label="Entry HangFire.Storage.StateAndInvocationData.StateAndInvocationData()", span="2-2", cluster="HangFire.Storage.StateAndInvocationData.StateAndInvocationData()", file="RedisJob.cs"];
m20_17 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="RedisJob.cs"];
m20_0 [label="Entry HangFire.Redis.DataTypes.RedisJob.RedisJob(IRedisClient)", span="12-12", cluster="HangFire.Redis.DataTypes.RedisJob.RedisJob(IRedisClient)", file="RedisJob.cs"];
m20_1 [label="_redis = redis", span="14-14", cluster="HangFire.Redis.DataTypes.RedisJob.RedisJob(IRedisClient)", color=red, community=0, file="RedisJob.cs"];
m20_2 [label="Exit HangFire.Redis.DataTypes.RedisJob.RedisJob(IRedisClient)", span="12-12", cluster="HangFire.Redis.DataTypes.RedisJob.RedisJob(IRedisClient)", file="RedisJob.cs"];
m20_29 [label="Entry HangFire.Redis.DataTypes.RedisJob.Complete(HangFire.Server.JobPayload)", span="60-60", cluster="HangFire.Redis.DataTypes.RedisJob.Complete(HangFire.Server.JobPayload)", file="RedisJob.cs"];
m20_30 [label="RedisConnection.RemoveFromDequeuedList(_redis, payload.Queue, payload.Id)", span="62-62", cluster="HangFire.Redis.DataTypes.RedisJob.Complete(HangFire.Server.JobPayload)", color=red, community=0, file="RedisJob.cs"];
m20_31 [label="Exit HangFire.Redis.DataTypes.RedisJob.Complete(HangFire.Server.JobPayload)", span="60-60", cluster="HangFire.Redis.DataTypes.RedisJob.Complete(HangFire.Server.JobPayload)", file="RedisJob.cs"];
m20_19 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="RedisJob.cs"];
m20_24 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", file="RedisJob.cs"];
m20_25 [label="Entry HangFire.Redis.DataTypes.RedisJob.GetParameter(string, string)", span="53-53", cluster="HangFire.Redis.DataTypes.RedisJob.GetParameter(string, string)", file="RedisJob.cs"];
m20_26 [label="return _redis.GetValueFromHash(\r\n                String.Format(Prefix + ''job:{0}'', id),\r\n                name);", span="55-57", cluster="HangFire.Redis.DataTypes.RedisJob.GetParameter(string, string)", color=red, community=2, file="RedisJob.cs"];
m20_27 [label="Exit HangFire.Redis.DataTypes.RedisJob.GetParameter(string, string)", span="53-53", cluster="HangFire.Redis.DataTypes.RedisJob.GetParameter(string, string)", file="RedisJob.cs"];
m20_3 [label="Entry HangFire.Redis.DataTypes.RedisJob.GetStateAndInvocationData(string)", span="17-17", cluster="HangFire.Redis.DataTypes.RedisJob.GetStateAndInvocationData(string)", file="RedisJob.cs"];
m20_4 [label="var jobData = _redis.GetAllEntriesFromHash(\r\n                String.Format(''hangfire:job:{0}'', id))", span="19-20", cluster="HangFire.Redis.DataTypes.RedisJob.GetStateAndInvocationData(string)", color=red, community=2, file="RedisJob.cs"];
m20_5 [label="jobData.Count == 0", span="22-22", cluster="HangFire.Redis.DataTypes.RedisJob.GetStateAndInvocationData(string)", color=red, community=0, file="RedisJob.cs"];
m20_8 [label="jobData.ContainsKey(''Type'')", span="25-25", cluster="HangFire.Redis.DataTypes.RedisJob.GetStateAndInvocationData(string)", color=red, community=0, file="RedisJob.cs"];
m20_9 [label="invocationData.Type = jobData[''Type'']", span="27-27", cluster="HangFire.Redis.DataTypes.RedisJob.GetStateAndInvocationData(string)", color=red, community=0, file="RedisJob.cs"];
m20_10 [label="jobData.ContainsKey(''Method'')", span="29-29", cluster="HangFire.Redis.DataTypes.RedisJob.GetStateAndInvocationData(string)", color=red, community=0, file="RedisJob.cs"];
m20_11 [label="invocationData.Method = jobData[''Method'']", span="31-31", cluster="HangFire.Redis.DataTypes.RedisJob.GetStateAndInvocationData(string)", color=red, community=0, file="RedisJob.cs"];
m20_12 [label="jobData.ContainsKey(''ParameterTypes'')", span="33-33", cluster="HangFire.Redis.DataTypes.RedisJob.GetStateAndInvocationData(string)", color=red, community=0, file="RedisJob.cs"];
m20_13 [label="invocationData.ParameterTypes = jobData[''ParameterTypes'']", span="35-35", cluster="HangFire.Redis.DataTypes.RedisJob.GetStateAndInvocationData(string)", color=red, community=0, file="RedisJob.cs"];
m20_14 [label="return new StateAndInvocationData\r\n            {\r\n                InvocationData = invocationData,\r\n                State = jobData.ContainsKey(''State'') ? jobData[''State''] : null,\r\n            };", span="38-42", cluster="HangFire.Redis.DataTypes.RedisJob.GetStateAndInvocationData(string)", color=red, community=2, file="RedisJob.cs"];
m20_6 [label="return null;", span="22-22", cluster="HangFire.Redis.DataTypes.RedisJob.GetStateAndInvocationData(string)", color=red, community=0, file="RedisJob.cs"];
m20_7 [label="var invocationData = new InvocationData()", span="24-24", cluster="HangFire.Redis.DataTypes.RedisJob.GetStateAndInvocationData(string)", color=red, community=0, file="RedisJob.cs"];
m20_15 [label="Exit HangFire.Redis.DataTypes.RedisJob.GetStateAndInvocationData(string)", span="17-17", cluster="HangFire.Redis.DataTypes.RedisJob.GetStateAndInvocationData(string)", file="RedisJob.cs"];
m20_18 [label="Entry HangFire.Storage.InvocationData.InvocationData()", span="2-2", cluster="HangFire.Storage.InvocationData.InvocationData()", file="RedisJob.cs"];
m20_33 [label="HangFire.Redis.DataTypes.RedisJob", span="", file="RedisJob.cs"];
m22_0 [label="Entry HangFire.Redis.DataTypes.RedisSet.RedisSet(IRedisClient)", span="11-11", cluster="HangFire.Redis.DataTypes.RedisSet.RedisSet(IRedisClient)", file="RedisSet.cs"];
m22_1 [label="_redis = redis", span="13-13", cluster="HangFire.Redis.DataTypes.RedisSet.RedisSet(IRedisClient)", color=red, community=0, file="RedisSet.cs"];
m22_2 [label="Exit HangFire.Redis.DataTypes.RedisSet.RedisSet(IRedisClient)", span="11-11", cluster="HangFire.Redis.DataTypes.RedisSet.RedisSet(IRedisClient)", file="RedisSet.cs"];
m22_6 [label="Entry Unk.GetRangeFromSortedSetByLowestScore", span="", cluster="Unk.GetRangeFromSortedSetByLowestScore", file="RedisSet.cs"];
m22_3 [label="Entry HangFire.Redis.DataTypes.RedisSet.GetFirstByLowestScore(string, long, long)", span="16-16", cluster="HangFire.Redis.DataTypes.RedisSet.GetFirstByLowestScore(string, long, long)", file="RedisSet.cs"];
m22_4 [label="return _redis.GetRangeFromSortedSetByLowestScore(\r\n                Prefix + key, fromScore, toScore, 0, 1)\r\n                .FirstOrDefault();", span="18-20", cluster="HangFire.Redis.DataTypes.RedisSet.GetFirstByLowestScore(string, long, long)", color=red, community=2, file="RedisSet.cs"];
m22_5 [label="Exit HangFire.Redis.DataTypes.RedisSet.GetFirstByLowestScore(string, long, long)", span="16-16", cluster="HangFire.Redis.DataTypes.RedisSet.GetFirstByLowestScore(string, long, long)", file="RedisSet.cs"];
m22_7 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="RedisSet.cs"];
m22_8 [label="HangFire.Redis.DataTypes.RedisSet", span="", file="RedisSet.cs"];
m24_6 [label="Entry Mock<IBackgroundProcess>.cstr", span="", cluster="Mock<IBackgroundProcess>.cstr", file="RedisWriteOnlyJob.cs"];
m24_7 [label="Entry Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", span="11-11", cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="RedisWriteOnlyJob.cs"];
m24_22 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="RedisWriteOnlyJob.cs"];
m24_21 [label="Entry Unk.CreateProcess", span="", cluster="Unk.CreateProcess", file="RedisWriteOnlyJob.cs"];
m24_16 [label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerProcess()", span="28-28", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerProcess()", file="RedisWriteOnlyJob.cs"];
m24_17 [label="var process = CreateProcess(_innerComponent.Object)", span="30-30", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerProcess()", color=red, community=0, file="RedisWriteOnlyJob.cs"];
m24_18 [label="var result = process.InnerProcess", span="31-31", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerProcess()", color=red, community=0, file="RedisWriteOnlyJob.cs"];
m24_19 [label="Assert.Same(_innerComponent.Object, result)", span="32-32", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerProcess()", color=red, community=0, file="RedisWriteOnlyJob.cs"];
m24_20 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerProcess()", span="28-28", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InnerComponent_ReturnsTheInnerProcess()", file="RedisWriteOnlyJob.cs"];
m24_32 [label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0", cluster="System.TimeSpan.FromMilliseconds(double)", file="RedisWriteOnlyJob.cs"];
m24_90 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="RedisWriteOnlyJob.cs"];
m24_91 [label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateProcess(Hangfire.Server.ILongRunningProcess)", span="91-91", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateProcess(Hangfire.Server.ILongRunningProcess)", file="RedisWriteOnlyJob.cs"];
m24_92 [label="return new InfiniteLoopProcess(process);", span="93-93", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateProcess(Hangfire.Server.ILongRunningProcess)", file="RedisWriteOnlyJob.cs"];
m24_93 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateProcess(Hangfire.Server.ILongRunningProcess)", span="91-91", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateProcess(Hangfire.Server.ILongRunningProcess)", file="RedisWriteOnlyJob.cs"];
m24_76 [label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel()", file="RedisWriteOnlyJob.cs"];
m24_23 [label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAComponent_UntilCancellationToken_IsCanceled()", span="36-36", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAComponent_UntilCancellationToken_IsCanceled()", file="RedisWriteOnlyJob.cs"];
m24_24 [label="_innerComponent.Setup(x => x.Execute(It.IsAny<CancellationToken>()))\r\n                  .Callback(() => { Thread.Sleep(5); })", span="39-40", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAComponent_UntilCancellationToken_IsCanceled()", color=red, community=0, file="RedisWriteOnlyJob.cs"];
m24_25 [label="var process = CreateProcess(_innerComponent.Object)", span="42-42", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAComponent_UntilCancellationToken_IsCanceled()", color=red, community=0, file="RedisWriteOnlyJob.cs"];
m24_26 [label="_context.CancellationTokenSource.CancelAfter(TimeSpan.FromMilliseconds(100))", span="43-43", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAComponent_UntilCancellationToken_IsCanceled()", color=red, community=0, file="RedisWriteOnlyJob.cs"];
m24_27 [label="Assert.Throws<OperationCanceledException>(() => process.Execute(_context.Object))", span="46-46", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAComponent_UntilCancellationToken_IsCanceled()", color=red, community=0, file="RedisWriteOnlyJob.cs"];
m24_28 [label="_innerComponent.Verify(x => x.Execute(_context.CancellationTokenSource.Token), Times.AtLeast(5))", span="49-49", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAComponent_UntilCancellationToken_IsCanceled()", color=red, community=0, file="RedisWriteOnlyJob.cs"];
m24_29 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAComponent_UntilCancellationToken_IsCanceled()", span="36-36", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAComponent_UntilCancellationToken_IsCanceled()", file="RedisWriteOnlyJob.cs"];
m24_43 [label="Entry System.Threading.Thread.Sleep(int)", span="0-0", cluster="System.Threading.Thread.Sleep(int)", file="RedisWriteOnlyJob.cs"];
m24_8 [label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", span="22-22", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", file="RedisWriteOnlyJob.cs"];
m24_9 [label="Assert.Throws<ArgumentNullException>(() => new InfiniteLoopProcess(null))", span="24-24", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", color=red, community=0, file="RedisWriteOnlyJob.cs"];
m24_10 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", span="22-22", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Ctor_ThrowsAnException_WhenInnerComponentIsNull()", file="RedisWriteOnlyJob.cs"];
m24_11 [label="Entry Unk.>", span="", cluster="Unk.>", file="RedisWriteOnlyJob.cs"];
m24_88 [label="Entry Hangfire.Server.InfiniteLoopProcess.ToString()", span="41-41", cluster="Hangfire.Server.InfiniteLoopProcess.ToString()", file="RedisWriteOnlyJob.cs"];
m24_15 [label="Entry Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", span="24-24", cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", file="RedisWriteOnlyJob.cs"];
m24_47 [label="Entry Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="32-32", cluster="Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="RedisWriteOnlyJob.cs"];
m24_0 [label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", span="14-14", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="RedisWriteOnlyJob.cs"];
m24_1 [label="_innerComponent = new Mock<IServerComponent>()", span="16-16", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", color=red, community=0, file="RedisWriteOnlyJob.cs"];
m24_2 [label="_innerProcess = new Mock<IBackgroundProcess>()", span="17-17", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", color=red, community=0, file="RedisWriteOnlyJob.cs"];
m24_3 [label="_context = new BackgroundProcessContextMock()", span="18-18", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", color=red, community=0, file="RedisWriteOnlyJob.cs"];
m24_4 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", span="14-14", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="RedisWriteOnlyJob.cs"];
m24_89 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="RedisWriteOnlyJob.cs"];
m24_51 [label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAProcess_UntilCancellationToken_IsCanceled()", span="53-53", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAProcess_UntilCancellationToken_IsCanceled()", file="RedisWriteOnlyJob.cs"];
m24_52 [label="_innerProcess.Setup(x => x.Execute(It.IsAny<BackgroundProcessContext>()))\r\n                  .Callback(() => { Thread.Sleep(5); })", span="56-57", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAProcess_UntilCancellationToken_IsCanceled()", color=red, community=0, file="RedisWriteOnlyJob.cs"];
m24_53 [label="var process = CreateProcess(_innerProcess.Object)", span="59-59", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAProcess_UntilCancellationToken_IsCanceled()", color=red, community=0, file="RedisWriteOnlyJob.cs"];
m24_54 [label="_context.CancellationTokenSource.CancelAfter(TimeSpan.FromMilliseconds(100))", span="60-60", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAProcess_UntilCancellationToken_IsCanceled()", color=red, community=0, file="RedisWriteOnlyJob.cs"];
m24_55 [label="Assert.Throws<OperationCanceledException>(() => process.Execute(_context.Object))", span="63-63", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAProcess_UntilCancellationToken_IsCanceled()", color=red, community=0, file="RedisWriteOnlyJob.cs"];
m24_56 [label="_innerProcess.Verify(x => x.Execute(_context.Object), Times.AtLeast(5))", span="66-66", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAProcess_UntilCancellationToken_IsCanceled()", color=red, community=0, file="RedisWriteOnlyJob.cs"];
m24_57 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAProcess_UntilCancellationToken_IsCanceled()", span="53-53", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_OfAProcess_UntilCancellationToken_IsCanceled()", file="RedisWriteOnlyJob.cs"];
m24_30 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="RedisWriteOnlyJob.cs"];
m24_5 [label="Entry Mock<IServerComponent>.cstr", span="", cluster="Mock<IServerComponent>.cstr", file="RedisWriteOnlyJob.cs"];
m24_80 [label="Entry lambda expression", span="80-80", cluster="lambda expression", file="RedisWriteOnlyJob.cs"];
m24_12 [label="Entry lambda expression", span="24-24", cluster="lambda expression", file="RedisWriteOnlyJob.cs"];
m24_13 [label="new InfiniteLoopProcess(null)", span="24-24", cluster="lambda expression", color=red, community=0, file="RedisWriteOnlyJob.cs"];
m24_14 [label="Exit lambda expression", span="24-24", cluster="lambda expression", file="RedisWriteOnlyJob.cs"];
m24_36 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="RedisWriteOnlyJob.cs"];
m24_40 [label="Entry lambda expression", span="40-40", cluster="lambda expression", file="RedisWriteOnlyJob.cs"];
m24_45 [label="process.Execute(_context.Object)", span="46-46", cluster="lambda expression", color=red, community=0, file="RedisWriteOnlyJob.cs"];
m24_44 [label="Entry lambda expression", span="46-46", cluster="lambda expression", file="RedisWriteOnlyJob.cs"];
m24_48 [label="Entry lambda expression", span="49-49", cluster="lambda expression", file="RedisWriteOnlyJob.cs"];
m24_37 [label="x.Execute(It.IsAny<CancellationToken>())", span="39-39", cluster="lambda expression", color=red, community=0, file="RedisWriteOnlyJob.cs"];
m24_38 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="RedisWriteOnlyJob.cs"];
m24_41 [label="Thread.Sleep(5)", span="40-40", cluster="lambda expression", color=red, community=0, file="RedisWriteOnlyJob.cs"];
m24_42 [label="Exit lambda expression", span="40-40", cluster="lambda expression", file="RedisWriteOnlyJob.cs"];
m24_46 [label="Exit lambda expression", span="46-46", cluster="lambda expression", file="RedisWriteOnlyJob.cs"];
m24_49 [label="x.Execute(_context.CancellationTokenSource.Token)", span="49-49", cluster="lambda expression", color=red, community=0, file="RedisWriteOnlyJob.cs"];
m24_50 [label="Exit lambda expression", span="49-49", cluster="lambda expression", file="RedisWriteOnlyJob.cs"];
m24_58 [label="Entry lambda expression", span="56-56", cluster="lambda expression", file="RedisWriteOnlyJob.cs"];
m24_61 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="RedisWriteOnlyJob.cs"];
m24_65 [label="process.Execute(_context.Object)", span="63-63", cluster="lambda expression", color=red, community=0, file="RedisWriteOnlyJob.cs"];
m24_64 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="RedisWriteOnlyJob.cs"];
m24_67 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="RedisWriteOnlyJob.cs"];
m24_59 [label="x.Execute(It.IsAny<BackgroundProcessContext>())", span="56-56", cluster="lambda expression", color=red, community=0, file="RedisWriteOnlyJob.cs"];
m24_60 [label="Exit lambda expression", span="56-56", cluster="lambda expression", file="RedisWriteOnlyJob.cs"];
m24_62 [label="Thread.Sleep(5)", span="57-57", cluster="lambda expression", color=red, community=0, file="RedisWriteOnlyJob.cs"];
m24_63 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="RedisWriteOnlyJob.cs"];
m24_66 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="RedisWriteOnlyJob.cs"];
m24_68 [label="x.Execute(_context.Object)", span="66-66", cluster="lambda expression", color=red, community=0, file="RedisWriteOnlyJob.cs"];
m24_69 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="RedisWriteOnlyJob.cs"];
m24_78 [label="process.Execute(_context.Object)", span="77-77", cluster="lambda expression", file="RedisWriteOnlyJob.cs"];
m24_77 [label="Entry lambda expression", span="77-77", cluster="lambda expression", file="RedisWriteOnlyJob.cs"];
m24_79 [label="Exit lambda expression", span="77-77", cluster="lambda expression", file="RedisWriteOnlyJob.cs"];
m24_81 [label="x.Execute(It.IsAny<CancellationToken>())", span="80-80", cluster="lambda expression", file="RedisWriteOnlyJob.cs"];
m24_82 [label="Exit lambda expression", span="80-80", cluster="lambda expression", file="RedisWriteOnlyJob.cs"];
m24_83 [label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", span="84-84", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="RedisWriteOnlyJob.cs"];
m24_84 [label="var process = CreateProcess(_innerComponent.Object)", span="86-86", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="RedisWriteOnlyJob.cs"];
m24_85 [label="var result = process.ToString()", span="87-87", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="RedisWriteOnlyJob.cs"];
m24_86 [label="Assert.Equal(_innerComponent.Object.ToString(), result)", span="88-88", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="RedisWriteOnlyJob.cs"];
m24_87 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", span="84-84", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="RedisWriteOnlyJob.cs"];
m24_70 [label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", span="70-70", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="RedisWriteOnlyJob.cs"];
m24_71 [label="var process = CreateProcess(_innerComponent.Object)", span="73-73", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="RedisWriteOnlyJob.cs"];
m24_72 [label="_context.CancellationTokenSource.Cancel()", span="74-74", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="RedisWriteOnlyJob.cs"];
m24_73 [label="Assert.Throws<OperationCanceledException>(() => process.Execute(_context.Object))", span="77-77", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="RedisWriteOnlyJob.cs"];
m24_74 [label="_innerComponent.Verify(x => x.Execute(It.IsAny<CancellationToken>()), Times.Never)", span="80-80", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="RedisWriteOnlyJob.cs"];
m24_75 [label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", span="70-70", cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="RedisWriteOnlyJob.cs"];
m24_33 [label="Entry System.Threading.CancellationTokenSource.CancelAfter(System.TimeSpan)", span="0-0", cluster="System.Threading.CancellationTokenSource.CancelAfter(System.TimeSpan)", file="RedisWriteOnlyJob.cs"];
m24_34 [label="Entry Unk.AtLeast", span="", cluster="Unk.AtLeast", file="RedisWriteOnlyJob.cs"];
m24_39 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="RedisWriteOnlyJob.cs"];
m24_31 [label="Entry Unk.Callback", span="", cluster="Unk.Callback", file="RedisWriteOnlyJob.cs"];
m24_35 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="RedisWriteOnlyJob.cs"];
m24_94 [label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", span="", file="RedisWriteOnlyJob.cs"];
m24_95 [label=process, span="", file="RedisWriteOnlyJob.cs"];
m24_96 [label=process, span="", file="RedisWriteOnlyJob.cs"];
m24_97 [label=process, span="", file="RedisWriteOnlyJob.cs"];
m25_0 [label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyList.RedisWriteOnlyList(IRedisTransaction)", span="10-10", cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.RedisWriteOnlyList(IRedisTransaction)", file="RedisWriteOnlyList.cs"];
m25_1 [label="transaction == null", span="12-12", cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.RedisWriteOnlyList(IRedisTransaction)", color=red, community=0, file="RedisWriteOnlyList.cs"];
m25_3 [label="_transaction = transaction", span="14-14", cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.RedisWriteOnlyList(IRedisTransaction)", color=red, community=0, file="RedisWriteOnlyList.cs"];
m25_2 [label="throw new ArgumentNullException(''transaction'');", span="12-12", cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.RedisWriteOnlyList(IRedisTransaction)", color=red, community=0, file="RedisWriteOnlyList.cs"];
m25_4 [label="Exit HangFire.Redis.DataTypes.RedisWriteOnlyList.RedisWriteOnlyList(IRedisTransaction)", span="10-10", cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.RedisWriteOnlyList(IRedisTransaction)", file="RedisWriteOnlyList.cs"];
m25_13 [label="Entry Unk.EnqueueItemOnList", span="", cluster="Unk.EnqueueItemOnList", file="RedisWriteOnlyList.cs"];
m25_6 [label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyList.AddToLeft(string, string)", span="17-17", cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.AddToLeft(string, string)", file="RedisWriteOnlyList.cs"];
m25_7 [label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                RedisStorage.Prefix + key, value))", span="19-20", cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.AddToLeft(string, string)", color=red, community=1, file="RedisWriteOnlyList.cs"];
m25_8 [label="Exit HangFire.Redis.DataTypes.RedisWriteOnlyList.AddToLeft(string, string)", span="17-17", cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.AddToLeft(string, string)", file="RedisWriteOnlyList.cs"];
m25_9 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="RedisWriteOnlyList.cs"];
m25_14 [label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyList.Remove(string, string)", span="23-23", cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.Remove(string, string)", file="RedisWriteOnlyList.cs"];
m25_15 [label="_transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                RedisStorage.Prefix + key, value))", span="25-26", cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.Remove(string, string)", color=red, community=1, file="RedisWriteOnlyList.cs"];
m25_16 [label="Exit HangFire.Redis.DataTypes.RedisWriteOnlyList.Remove(string, string)", span="23-23", cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.Remove(string, string)", file="RedisWriteOnlyList.cs"];
m25_27 [label="Entry Unk.TrimList", span="", cluster="Unk.TrimList", file="RedisWriteOnlyList.cs"];
m25_24 [label="Entry lambda expression", span="32-33", cluster="lambda expression", file="RedisWriteOnlyList.cs"];
m25_11 [label="x.EnqueueItemOnList(\r\n                RedisStorage.Prefix + key, value)", span="19-20", cluster="lambda expression", color=red, community=1, file="RedisWriteOnlyList.cs"];
m25_10 [label="Entry lambda expression", span="19-20", cluster="lambda expression", file="RedisWriteOnlyList.cs"];
m25_12 [label="Exit lambda expression", span="19-20", cluster="lambda expression", file="RedisWriteOnlyList.cs"];
m25_18 [label="x.RemoveItemFromList(\r\n                RedisStorage.Prefix + key, value)", span="25-26", cluster="lambda expression", color=red, community=1, file="RedisWriteOnlyList.cs"];
m25_17 [label="Entry lambda expression", span="25-26", cluster="lambda expression", file="RedisWriteOnlyList.cs"];
m25_19 [label="Exit lambda expression", span="25-26", cluster="lambda expression", file="RedisWriteOnlyList.cs"];
m25_25 [label="x.TrimList(\r\n                RedisStorage.Prefix + key, keepStartingFrom, keepEndingAt)", span="32-33", cluster="lambda expression", color=red, community=1, file="RedisWriteOnlyList.cs"];
m25_26 [label="Exit lambda expression", span="32-33", cluster="lambda expression", file="RedisWriteOnlyList.cs"];
m25_21 [label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyList.Trim(string, int, int)", span="29-29", cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.Trim(string, int, int)", file="RedisWriteOnlyList.cs"];
m25_22 [label="_transaction.QueueCommand(x => x.TrimList(\r\n                RedisStorage.Prefix + key, keepStartingFrom, keepEndingAt))", span="32-33", cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.Trim(string, int, int)", color=red, community=1, file="RedisWriteOnlyList.cs"];
m25_23 [label="Exit HangFire.Redis.DataTypes.RedisWriteOnlyList.Trim(string, int, int)", span="29-29", cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.Trim(string, int, int)", file="RedisWriteOnlyList.cs"];
m25_20 [label="Entry Unk.RemoveItemFromList", span="", cluster="Unk.RemoveItemFromList", file="RedisWriteOnlyList.cs"];
m25_28 [label="HangFire.Redis.DataTypes.RedisWriteOnlyList", span="", file="RedisWriteOnlyList.cs"];
m25_29 [label=string, span="", file="RedisWriteOnlyList.cs"];
m25_30 [label=string, span="", file="RedisWriteOnlyList.cs"];
m25_31 [label=string, span="", file="RedisWriteOnlyList.cs"];
m25_32 [label=string, span="", file="RedisWriteOnlyList.cs"];
m25_33 [label=string, span="", file="RedisWriteOnlyList.cs"];
m25_34 [label=int, span="", file="RedisWriteOnlyList.cs"];
m25_35 [label=int, span="", file="RedisWriteOnlyList.cs"];
m26_6 [label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", span="46-46", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="RedisWriteOnlyQueue.cs"];
m26_7 [label="connection == null", span="52-52", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="RedisWriteOnlyQueue.cs"];
m26_9 [label="stateMachineFactory == null", span="53-53", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="RedisWriteOnlyQueue.cs"];
m26_11 [label="job == null", span="54-54", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="RedisWriteOnlyQueue.cs"];
m26_13 [label="initialState == null", span="55-55", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="RedisWriteOnlyQueue.cs"];
m26_15 [label="_stateMachineFactory = stateMachineFactory", span="57-57", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="RedisWriteOnlyQueue.cs"];
m26_16 [label="Connection = connection", span="59-59", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="RedisWriteOnlyQueue.cs"];
m26_17 [label="Job = job", span="60-60", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="RedisWriteOnlyQueue.cs"];
m26_18 [label="InitialState = initialState", span="61-61", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="RedisWriteOnlyQueue.cs"];
m26_8 [label="throw new ArgumentNullException(''connection'');", span="52-52", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="RedisWriteOnlyQueue.cs"];
m26_10 [label="throw new ArgumentNullException(''stateMachineFactory'');", span="53-53", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="RedisWriteOnlyQueue.cs"];
m26_12 [label="throw new ArgumentNullException(''job'');", span="54-54", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="RedisWriteOnlyQueue.cs"];
m26_14 [label="throw new ArgumentNullException(''initialState'');", span="55-55", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="RedisWriteOnlyQueue.cs"];
m26_19 [label="Items = new Dictionary<string, object>()", span="63-63", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="RedisWriteOnlyQueue.cs"];
m26_20 [label="Exit HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", span="46-46", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.IState)", file="RedisWriteOnlyQueue.cs"];
m26_22 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RedisWriteOnlyQueue.cs"];
m26_35 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="RedisWriteOnlyQueue.cs"];
m26_23 [label="Entry HangFire.Client.CreateContext.SetJobParameter(string, object)", span="96-96", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="RedisWriteOnlyQueue.cs"];
m26_24 [label="String.IsNullOrWhiteSpace(name)", span="98-98", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="RedisWriteOnlyQueue.cs"];
m26_28 [label="var serializedValue = JobHelper.ToJson(value)", span="105-105", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="RedisWriteOnlyQueue.cs"];
m26_29 [label="!_parameters.ContainsKey(name)", span="107-107", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="RedisWriteOnlyQueue.cs"];
m26_30 [label="_parameters.Add(name, serializedValue)", span="109-109", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="RedisWriteOnlyQueue.cs"];
m26_31 [label="_parameters[name] = serializedValue", span="113-113", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="RedisWriteOnlyQueue.cs"];
m26_25 [label="throw new ArgumentNullException(''name'');", span="98-98", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="RedisWriteOnlyQueue.cs"];
m26_26 [label=_jobWasCreated, span="100-100", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="RedisWriteOnlyQueue.cs"];
m26_27 [label="throw new InvalidOperationException(''Could not set parameter for a created job.'');", span="102-102", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="RedisWriteOnlyQueue.cs"];
m26_32 [label="Exit HangFire.Client.CreateContext.SetJobParameter(string, object)", span="96-96", cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="RedisWriteOnlyQueue.cs"];
m26_46 [label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="RedisWriteOnlyQueue.cs"];
m26_53 [label="Entry HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", span="8-8", cluster="HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="RedisWriteOnlyQueue.cs"];
m26_0 [label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", span="37-37", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="RedisWriteOnlyQueue.cs"];
m26_1 [label="Items = context.Items", span="40-40", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="RedisWriteOnlyQueue.cs"];
m26_2 [label="JobId = context.JobId", span="41-41", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="RedisWriteOnlyQueue.cs"];
m26_3 [label="_jobWasCreated = context._jobWasCreated", span="42-42", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="RedisWriteOnlyQueue.cs"];
m26_4 [label="_parameters = context._parameters", span="43-43", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="RedisWriteOnlyQueue.cs"];
m26_5 [label="Exit HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", span="37-37", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="RedisWriteOnlyQueue.cs"];
m26_45 [label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30", cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="RedisWriteOnlyQueue.cs"];
m26_38 [label="Entry HangFire.Client.CreateContext.GetJobParameter<T>(string)", span="129-129", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="RedisWriteOnlyQueue.cs"];
m26_39 [label="String.IsNullOrWhiteSpace(name)", span="131-131", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="RedisWriteOnlyQueue.cs"];
m26_41 [label="return _parameters.ContainsKey(name)\r\n                    ? JobHelper.FromJson<T>(_parameters[name])\r\n                    : default(T);", span="135-137", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="RedisWriteOnlyQueue.cs"];
m26_43 [label="throw new InvalidOperationException(String.Format(\r\n                    ''Could not get a value of the job parameter `{0}`. See inner exception for details.'',\r\n                    name), ex);", span="141-143", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="RedisWriteOnlyQueue.cs"];
m26_40 [label="throw new ArgumentNullException(''name'');", span="131-131", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="RedisWriteOnlyQueue.cs"];
m26_42 [label=Exception, span="139-139", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="RedisWriteOnlyQueue.cs"];
m26_44 [label="Exit HangFire.Client.CreateContext.GetJobParameter<T>(string)", span="129-129", cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="RedisWriteOnlyQueue.cs"];
m26_33 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="RedisWriteOnlyQueue.cs"];
m26_48 [label="Entry HangFire.Client.CreateContext.CreateJob()", span="147-147", cluster="HangFire.Client.CreateContext.CreateJob()", file="RedisWriteOnlyQueue.cs"];
m26_49 [label="var stateMachine = _stateMachineFactory.Create(Connection)", span="149-149", cluster="HangFire.Client.CreateContext.CreateJob()", file="RedisWriteOnlyQueue.cs"];
m26_50 [label="JobId = stateMachine.CreateInState(Job, _parameters, InitialState)", span="151-151", cluster="HangFire.Client.CreateContext.CreateJob()", file="RedisWriteOnlyQueue.cs"];
m26_51 [label="_jobWasCreated = true", span="152-152", cluster="HangFire.Client.CreateContext.CreateJob()", file="RedisWriteOnlyQueue.cs"];
m26_52 [label="Exit HangFire.Client.CreateContext.CreateJob()", span="147-147", cluster="HangFire.Client.CreateContext.CreateJob()", file="RedisWriteOnlyQueue.cs"];
m26_36 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="RedisWriteOnlyQueue.cs"];
m26_37 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="RedisWriteOnlyQueue.cs"];
m26_54 [label="Entry HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", span="23-23", cluster="HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", file="RedisWriteOnlyQueue.cs"];
m26_47 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="RedisWriteOnlyQueue.cs"];
m26_34 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="RedisWriteOnlyQueue.cs"];
m26_55 [label="HangFire.Client.CreateContext", span="", file="RedisWriteOnlyQueue.cs"];
m27_6 [label="Entry HangFire.Redis.DataTypes.RedisWriteOnlySet.Add(string, string)", span="17-17", cluster="HangFire.Redis.DataTypes.RedisWriteOnlySet.Add(string, string)", file="RedisWriteOnlySet.cs"];
m27_7 [label="_transaction.QueueCommand(x => x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value))", span="19-20", cluster="HangFire.Redis.DataTypes.RedisWriteOnlySet.Add(string, string)", color=red, community=1, file="RedisWriteOnlySet.cs"];
m27_8 [label="Exit HangFire.Redis.DataTypes.RedisWriteOnlySet.Add(string, string)", span="17-17", cluster="HangFire.Redis.DataTypes.RedisWriteOnlySet.Add(string, string)", file="RedisWriteOnlySet.cs"];
m27_14 [label="Entry HangFire.Redis.DataTypes.RedisWriteOnlySet.Add(string, string, double)", span="23-23", cluster="HangFire.Redis.DataTypes.RedisWriteOnlySet.Add(string, string, double)", file="RedisWriteOnlySet.cs"];
m27_15 [label="_transaction.QueueCommand(x => x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value, score))", span="25-26", cluster="HangFire.Redis.DataTypes.RedisWriteOnlySet.Add(string, string, double)", color=red, community=1, file="RedisWriteOnlySet.cs"];
m27_16 [label="Exit HangFire.Redis.DataTypes.RedisWriteOnlySet.Add(string, string, double)", span="23-23", cluster="HangFire.Redis.DataTypes.RedisWriteOnlySet.Add(string, string, double)", file="RedisWriteOnlySet.cs"];
m27_9 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="RedisWriteOnlySet.cs"];
m27_13 [label="Entry Unk.AddItemToSortedSet", span="", cluster="Unk.AddItemToSortedSet", file="RedisWriteOnlySet.cs"];
m27_23 [label="Entry lambda expression", span="31-32", cluster="lambda expression", file="RedisWriteOnlySet.cs"];
m27_11 [label="x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value)", span="19-20", cluster="lambda expression", color=red, community=1, file="RedisWriteOnlySet.cs"];
m27_10 [label="Entry lambda expression", span="19-20", cluster="lambda expression", file="RedisWriteOnlySet.cs"];
m27_12 [label="Exit lambda expression", span="19-20", cluster="lambda expression", file="RedisWriteOnlySet.cs"];
m27_18 [label="x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value, score)", span="25-26", cluster="lambda expression", color=red, community=1, file="RedisWriteOnlySet.cs"];
m27_17 [label="Entry lambda expression", span="25-26", cluster="lambda expression", file="RedisWriteOnlySet.cs"];
m27_19 [label="Exit lambda expression", span="25-26", cluster="lambda expression", file="RedisWriteOnlySet.cs"];
m27_24 [label="x.RemoveItemFromSortedSet(\r\n                RedisStorage.Prefix + key, value)", span="31-32", cluster="lambda expression", color=red, community=1, file="RedisWriteOnlySet.cs"];
m27_25 [label="Exit lambda expression", span="31-32", cluster="lambda expression", file="RedisWriteOnlySet.cs"];
m27_0 [label="Entry HangFire.Redis.DataTypes.RedisWriteOnlySet.RedisWriteOnlySet(IRedisTransaction)", span="10-10", cluster="HangFire.Redis.DataTypes.RedisWriteOnlySet.RedisWriteOnlySet(IRedisTransaction)", file="RedisWriteOnlySet.cs"];
m27_1 [label="transaction == null", span="12-12", cluster="HangFire.Redis.DataTypes.RedisWriteOnlySet.RedisWriteOnlySet(IRedisTransaction)", color=red, community=0, file="RedisWriteOnlySet.cs"];
m27_3 [label="_transaction = transaction", span="14-14", cluster="HangFire.Redis.DataTypes.RedisWriteOnlySet.RedisWriteOnlySet(IRedisTransaction)", color=red, community=0, file="RedisWriteOnlySet.cs"];
m27_2 [label="throw new ArgumentNullException(''transaction'');", span="12-12", cluster="HangFire.Redis.DataTypes.RedisWriteOnlySet.RedisWriteOnlySet(IRedisTransaction)", color=red, community=0, file="RedisWriteOnlySet.cs"];
m27_4 [label="Exit HangFire.Redis.DataTypes.RedisWriteOnlySet.RedisWriteOnlySet(IRedisTransaction)", span="10-10", cluster="HangFire.Redis.DataTypes.RedisWriteOnlySet.RedisWriteOnlySet(IRedisTransaction)", file="RedisWriteOnlySet.cs"];
m27_26 [label="Entry Unk.RemoveItemFromSortedSet", span="", cluster="Unk.RemoveItemFromSortedSet", file="RedisWriteOnlySet.cs"];
m27_20 [label="Entry HangFire.Redis.DataTypes.RedisWriteOnlySet.Remove(string, string)", span="29-29", cluster="HangFire.Redis.DataTypes.RedisWriteOnlySet.Remove(string, string)", file="RedisWriteOnlySet.cs"];
m27_21 [label="_transaction.QueueCommand(x => x.RemoveItemFromSortedSet(\r\n                RedisStorage.Prefix + key, value))", span="31-32", cluster="HangFire.Redis.DataTypes.RedisWriteOnlySet.Remove(string, string)", color=red, community=1, file="RedisWriteOnlySet.cs"];
m27_22 [label="Exit HangFire.Redis.DataTypes.RedisWriteOnlySet.Remove(string, string)", span="29-29", cluster="HangFire.Redis.DataTypes.RedisWriteOnlySet.Remove(string, string)", file="RedisWriteOnlySet.cs"];
m27_27 [label="HangFire.Redis.DataTypes.RedisWriteOnlySet", span="", file="RedisWriteOnlySet.cs"];
m27_28 [label=string, span="", file="RedisWriteOnlySet.cs"];
m27_29 [label=string, span="", file="RedisWriteOnlySet.cs"];
m27_30 [label=string, span="", file="RedisWriteOnlySet.cs"];
m27_31 [label=string, span="", file="RedisWriteOnlySet.cs"];
m27_32 [label=double, span="", file="RedisWriteOnlySet.cs"];
m27_33 [label=string, span="", file="RedisWriteOnlySet.cs"];
m27_34 [label=string, span="", file="RedisWriteOnlySet.cs"];
m28_77 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="RedisWriteOnlyTransaction.cs"];
m28_16 [label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", span="33-33", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs"];
m28_17 [label="String.IsNullOrEmpty(jobId)", span="36-36", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs"];
m28_19 [label="jobType == null", span="37-37", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", color=red, community=0, file="RedisWriteOnlyTransaction.cs"];
m28_21 [label="state == null", span="38-38", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs"];
m28_23 [label="args == null", span="39-39", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", color=red, community=0, file="RedisWriteOnlyTransaction.cs"];
m28_25 [label="!typeof(BackgroundJob).IsAssignableFrom(jobType)", span="41-41", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs"];
m28_26 [label="throw new ArgumentException(\r\n                    String.Format(''The type '{0}' must inherit '{1}'.'', jobType, typeof(BackgroundJob)),\r\n                    ''jobType'');", span="43-45", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs"];
m28_27 [label="var jobParameters = CreateJobParameters(jobType, args)", span="50-50", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs"];
m28_28 [label="var context = new CreateContext(\r\n                    new ClientJobDescriptor(_redis, jobId, jobParameters, state))", span="52-53", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs"];
m28_30 [label="return jobId;", span="57-57", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs"];
m28_18 [label="throw new ArgumentNullException(''jobId'');", span="36-36", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs"];
m28_20 [label="throw new ArgumentNullException(''jobType'');", span="37-37", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", color=red, community=0, file="RedisWriteOnlyTransaction.cs"];
m28_22 [label="throw new ArgumentNullException(''state'');", span="38-38", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs"];
m28_24 [label="throw new ArgumentNullException(''args'');", span="39-39", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", color=red, community=0, file="RedisWriteOnlyTransaction.cs"];
m28_29 [label="_jobCreator.CreateJob(context)", span="55-55", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs"];
m28_31 [label=Exception, span="59-59", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs"];
m28_32 [label="throw new CreateJobFailedException(''Job creation was failed. See the inner exception for details.'', ex);", span="61-61", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs"];
m28_33 [label="Exit HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", span="33-33", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs"];
m28_37 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="RedisWriteOnlyTransaction.cs"];
m28_75 [label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="RedisWriteOnlyTransaction.cs"];
m28_43 [label="Entry HangFire.Client.JobClient.Dispose()", span="65-65", cluster="HangFire.Client.JobClient.Dispose()", file="RedisWriteOnlyTransaction.cs"];
m28_44 [label="_redis.Dispose()", span="67-67", cluster="HangFire.Client.JobClient.Dispose()", file="RedisWriteOnlyTransaction.cs"];
m28_45 [label="Exit HangFire.Client.JobClient.Dispose()", span="65-65", cluster="HangFire.Client.JobClient.Dispose()", file="RedisWriteOnlyTransaction.cs"];
m28_38 [label="Entry HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", span="70-70", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs"];
m28_47 [label="var job = new Dictionary<string, string>()", span="73-73", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs"];
m28_48 [label="job[''Type''] = jobType.AssemblyQualifiedName", span="74-74", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs"];
m28_49 [label="job[''Args''] = JobHelper.ToJson(jobArgs)", span="75-75", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs"];
m28_50 [label="job[''State''] = String.Empty", span="76-76", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs"];
m28_51 [label="job[''CreatedAt''] = JobHelper.ToStringTimestamp(DateTime.UtcNow)", span="77-77", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs"];
m28_52 [label="return job;", span="79-79", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs"];
m28_53 [label="Exit HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", span="70-70", cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="RedisWriteOnlyTransaction.cs"];
m28_35 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="RedisWriteOnlyTransaction.cs"];
m28_73 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="RedisWriteOnlyTransaction.cs"];
m28_55 [label="Entry HangFire.JobHelper.ToJson(object)", span="40-40", cluster="HangFire.JobHelper.ToJson(object)", file="RedisWriteOnlyTransaction.cs"];
m28_56 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="63-63", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="RedisWriteOnlyTransaction.cs"];
m28_71 [label="Entry System.ComponentModel.TypeDescriptor.GetProperties(object)", span="0-0", cluster="System.ComponentModel.TypeDescriptor.GetProperties(object)", file="RedisWriteOnlyTransaction.cs"];
m28_0 [label="Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager)", span="13-13", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)", file="RedisWriteOnlyTransaction.cs"];
m28_1 [label="Exit HangFire.Client.JobClient.JobClient(IRedisClientsManager)", span="13-13", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)", file="RedisWriteOnlyTransaction.cs"];
m28_2 [label="Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", span="18-18", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="RedisWriteOnlyTransaction.cs"];
m28_3 [label="redisManager == null", span="20-20", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", color=red, community=0, file="RedisWriteOnlyTransaction.cs"];
m28_5 [label="jobCreator == null", span="21-21", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", color=red, community=0, file="RedisWriteOnlyTransaction.cs"];
m28_7 [label="_redis = redisManager.GetClient()", span="23-23", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="RedisWriteOnlyTransaction.cs"];
m28_8 [label="_jobCreator = jobCreator", span="24-24", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="RedisWriteOnlyTransaction.cs"];
m28_4 [label="throw new ArgumentNullException(''redisManager'');", span="20-20", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", color=red, community=0, file="RedisWriteOnlyTransaction.cs"];
m28_6 [label="throw new ArgumentNullException(''jobCreator'');", span="21-21", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", color=red, community=0, file="RedisWriteOnlyTransaction.cs"];
m28_9 [label="Exit HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", span="18-18", cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="RedisWriteOnlyTransaction.cs"];
m28_74 [label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0", cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="RedisWriteOnlyTransaction.cs"];
m28_11 [label="Entry Unk.GetClient", span="", cluster="Unk.GetClient", file="RedisWriteOnlyTransaction.cs"];
m28_54 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RedisWriteOnlyTransaction.cs"];
m28_76 [label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="RedisWriteOnlyTransaction.cs"];
m28_72 [label="Entry System.ComponentModel.PropertyDescriptor.GetValue(object)", span="0-0", cluster="System.ComponentModel.PropertyDescriptor.GetValue(object)", file="RedisWriteOnlyTransaction.cs"];
m28_34 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="RedisWriteOnlyTransaction.cs"];
m28_46 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="RedisWriteOnlyTransaction.cs"];
m28_41 [label="Entry HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="38-38", cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="RedisWriteOnlyTransaction.cs"];
m28_42 [label="Entry HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="22-22", cluster="HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", file="RedisWriteOnlyTransaction.cs"];
m28_15 [label="Entry HangFire.Client.JobClient.PropertiesToDictionary(object)", span="82-82", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="RedisWriteOnlyTransaction.cs"];
m28_57 [label="var result = new Dictionary<string, string>()", span="84-84", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="RedisWriteOnlyTransaction.cs"];
m28_58 [label="obj == null", span="85-85", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="RedisWriteOnlyTransaction.cs"];
m28_60 [label="TypeDescriptor.GetProperties(obj)", span="87-87", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="RedisWriteOnlyTransaction.cs"];
m28_61 [label="var propertyValue = descriptor.GetValue(obj)", span="89-89", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="RedisWriteOnlyTransaction.cs"];
m28_59 [label="return result;", span="85-85", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="RedisWriteOnlyTransaction.cs"];
m28_68 [label="result.Add(descriptor.Name, value)", span="110-110", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="RedisWriteOnlyTransaction.cs"];
m28_69 [label="return result;", span="113-113", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="RedisWriteOnlyTransaction.cs"];
m28_67 [label="throw new InvalidOperationException(\r\n                            String.Format(\r\n                                ''Could not convert property '{0}' of type '{1}' to a string. See the inner exception for details.'',\r\n                                descriptor.Name,\r\n                                descriptor.PropertyType),\r\n                            ex);", span="101-106", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="RedisWriteOnlyTransaction.cs"];
m28_62 [label="string value = null", span="90-90", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="RedisWriteOnlyTransaction.cs"];
m28_63 [label="propertyValue != null", span="92-92", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="RedisWriteOnlyTransaction.cs"];
m28_64 [label="var converter = TypeDescriptor.GetConverter(propertyValue.GetType())", span="96-96", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="RedisWriteOnlyTransaction.cs"];
m28_65 [label="value = converter.ConvertToInvariantString(propertyValue)", span="97-97", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="RedisWriteOnlyTransaction.cs"];
m28_66 [label=Exception, span="99-99", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="RedisWriteOnlyTransaction.cs"];
m28_70 [label="Exit HangFire.Client.JobClient.PropertiesToDictionary(object)", span="82-82", cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="RedisWriteOnlyTransaction.cs"];
m28_40 [label="Entry HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="15-15", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="RedisWriteOnlyTransaction.cs"];
m28_36 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="RedisWriteOnlyTransaction.cs"];
m28_12 [label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="27-27", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="RedisWriteOnlyTransaction.cs"];
m28_13 [label="return CreateJob(jobId, jobType, state, PropertiesToDictionary(args));", span="30-30", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", color=red, community=0, file="RedisWriteOnlyTransaction.cs"];
m28_14 [label="Exit HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="27-27", cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="RedisWriteOnlyTransaction.cs"];
m28_39 [label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", span="12-12", cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", file="RedisWriteOnlyTransaction.cs"];
m28_78 [label="HangFire.Client.JobClient", span="", file="RedisWriteOnlyTransaction.cs"];
m29_44 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="RedisWriteOnlyValue.cs"];
m29_19 [label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", span="29-29", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", file="RedisWriteOnlyValue.cs"];
m29_20 [label="var options = CreateOptions()", span="31-31", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", color=red, community=0, file="RedisWriteOnlyValue.cs"];
m29_21 [label="Assert.Throws<ArgumentOutOfRangeException>(\r\n                () => options.WorkerCount = -1)", span="33-34", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", color=red, community=0, file="RedisWriteOnlyValue.cs"];
m29_22 [label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", span="29-29", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", file="RedisWriteOnlyValue.cs"];
m29_15 [label="Entry Unk.>", span="", cluster="Unk.>", file="RedisWriteOnlyValue.cs"];
m29_11 [label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", span="20-20", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", file="RedisWriteOnlyValue.cs"];
m29_12 [label="var options = CreateOptions()", span="22-22", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", color=red, community=0, file="RedisWriteOnlyValue.cs"];
m29_13 [label="Assert.Throws<ArgumentOutOfRangeException>(\r\n                () => options.WorkerCount = 0)", span="24-25", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", color=red, community=0, file="RedisWriteOnlyValue.cs"];
m29_14 [label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", span="20-20", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", file="RedisWriteOnlyValue.cs"];
m29_33 [label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", span="47-47", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", file="RedisWriteOnlyValue.cs"];
m29_34 [label="var options = CreateOptions()", span="49-49", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", file="RedisWriteOnlyValue.cs"];
m29_35 [label="Assert.Throws<ArgumentException>(\r\n                () => options.Queues = new string[0])", span="51-52", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", file="RedisWriteOnlyValue.cs"];
m29_36 [label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", span="47-47", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", file="RedisWriteOnlyValue.cs"];
m29_40 [label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerWatchDogOptions_IsNonNullByDefault()", span="56-56", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerWatchDogOptions_IsNonNullByDefault()", file="RedisWriteOnlyValue.cs"];
m29_41 [label="var options = CreateOptions()", span="58-58", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerWatchDogOptions_IsNonNullByDefault()", file="RedisWriteOnlyValue.cs"];
m29_42 [label="Assert.NotNull(options.ServerWatchdogOptions)", span="60-60", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerWatchDogOptions_IsNonNullByDefault()", file="RedisWriteOnlyValue.cs"];
m29_43 [label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerWatchDogOptions_IsNonNullByDefault()", span="56-56", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerWatchDogOptions_IsNonNullByDefault()", file="RedisWriteOnlyValue.cs"];
m29_8 [label="Entry System.Math.Min(int, int)", span="0-0", cluster="System.Math.Min(int, int)", file="RedisWriteOnlyValue.cs"];
m29_10 [label="Entry Unk.True", span="", cluster="Unk.True", file="RedisWriteOnlyValue.cs"];
m29_9 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="RedisWriteOnlyValue.cs"];
m29_0 [label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", span="9-9", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="RedisWriteOnlyValue.cs"];
m29_1 [label="var options = CreateOptions()", span="11-11", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", color=red, community=0, file="RedisWriteOnlyValue.cs"];
m29_2 [label="Assert.Equal(Math.Min(Environment.ProcessorCount * 5, 40), options.WorkerCount)", span="13-13", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", color=red, community=0, file="RedisWriteOnlyValue.cs"];
m29_3 [label="Assert.Equal(EnqueuedState.DefaultQueue, options.Queues[0])", span="14-14", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", color=red, community=0, file="RedisWriteOnlyValue.cs"];
m29_4 [label="Assert.True(options.ShutdownTimeout > TimeSpan.Zero)", span="15-15", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", color=red, community=0, file="RedisWriteOnlyValue.cs"];
m29_5 [label="Assert.True(options.SchedulePollingInterval > TimeSpan.Zero)", span="16-16", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", color=red, community=0, file="RedisWriteOnlyValue.cs"];
m29_6 [label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", span="9-9", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="RedisWriteOnlyValue.cs"];
m29_26 [label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", span="38-38", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", file="RedisWriteOnlyValue.cs"];
m29_27 [label="var options = CreateOptions()", span="40-40", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", file="RedisWriteOnlyValue.cs"];
m29_28 [label="Assert.Throws<ArgumentNullException>(\r\n                () => options.Queues = null)", span="42-43", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", file="RedisWriteOnlyValue.cs"];
m29_29 [label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", span="38-38", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", file="RedisWriteOnlyValue.cs"];
m29_47 [label="Entry Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="32-32", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="RedisWriteOnlyValue.cs"];
m29_37 [label="Entry lambda expression", span="52-52", cluster="lambda expression", file="RedisWriteOnlyValue.cs"];
m29_17 [label="options.WorkerCount = 0", span="25-25", cluster="lambda expression", color=red, community=0, file="RedisWriteOnlyValue.cs"];
m29_16 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="RedisWriteOnlyValue.cs"];
m29_18 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="RedisWriteOnlyValue.cs"];
m29_24 [label="options.WorkerCount = -1", span="34-34", cluster="lambda expression", color=red, community=0, file="RedisWriteOnlyValue.cs"];
m29_23 [label="Entry lambda expression", span="34-34", cluster="lambda expression", file="RedisWriteOnlyValue.cs"];
m29_25 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="RedisWriteOnlyValue.cs"];
m29_31 [label="options.Queues = null", span="43-43", cluster="lambda expression", file="RedisWriteOnlyValue.cs"];
m29_30 [label="Entry lambda expression", span="43-43", cluster="lambda expression", file="RedisWriteOnlyValue.cs"];
m29_32 [label="Exit lambda expression", span="43-43", cluster="lambda expression", file="RedisWriteOnlyValue.cs"];
m29_38 [label="options.Queues = new string[0]", span="52-52", cluster="lambda expression", file="RedisWriteOnlyValue.cs"];
m29_39 [label="Exit lambda expression", span="52-52", cluster="lambda expression", file="RedisWriteOnlyValue.cs"];
m29_7 [label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.CreateOptions()", span="63-63", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.CreateOptions()", file="RedisWriteOnlyValue.cs"];
m29_45 [label="return new BackgroundJobServerOptions();", span="65-65", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.CreateOptions()", file="RedisWriteOnlyValue.cs"];
m29_46 [label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.CreateOptions()", span="63-63", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.CreateOptions()", file="RedisWriteOnlyValue.cs"];
m29_48 [label=options, span="", file="RedisWriteOnlyValue.cs"];
m29_49 [label=options, span="", file="RedisWriteOnlyValue.cs"];
m29_50 [label=options, span="", file="RedisWriteOnlyValue.cs"];
m29_51 [label=options, span="", file="RedisWriteOnlyValue.cs"];
m30_13 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="24-24", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="ScheduledState.cs"];
m30_8 [label="Entry HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="46-46", cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledState.cs"];
m30_9 [label="var timestamp = long.Parse(stateData[''EnqueueAt''])", span="48-48", cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="ScheduledState.cs"];
m30_10 [label="context.Transaction.AddToSet(''schedule'', context.JobId, timestamp)", span="49-49", cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledState.cs"];
m30_11 [label="Exit HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="46-46", cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="ScheduledState.cs"];
m30_12 [label="Entry long.Parse(string)", span="0-0", cluster="long.Parse(string)", file="ScheduledState.cs"];
m31_11 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IEqualityComparer<TKey>)", file="SchedulePoller.cs"];
m31_0 [label="Entry Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", span="25-25", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="SchedulePoller.cs"];
m31_1 [label="serverId == null", span="30-30", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="SchedulePoller.cs"];
m31_3 [label="storage == null", span="31-31", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="SchedulePoller.cs"];
m31_6 [label="ServerId = serverId", span="35-35", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="SchedulePoller.cs"];
m31_7 [label="Storage = storage", span="36-36", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="SchedulePoller.cs"];
m31_8 [label="CancellationToken = cancellationToken", span="37-37", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="SchedulePoller.cs"];
m31_2 [label="throw new ArgumentNullException(''serverId'');", span="30-30", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="SchedulePoller.cs"];
m31_4 [label="throw new ArgumentNullException(''storage'');", span="31-31", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="SchedulePoller.cs"];
m31_5 [label="ServerData = new Dictionary<string, object>(StringComparer.OrdinalIgnoreCase)", span="33-33", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="SchedulePoller.cs"];
m31_9 [label="Exit Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", span="25-25", cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="SchedulePoller.cs"];
m31_12 [label="Hangfire.Server.BackgroundProcessContext", span="", file="SchedulePoller.cs"];
m32_96 [label="Entry Mock<T>.cstr", span="", cluster="Mock<T>.cstr", file="SqlServerConnection.cs"];
m32_10 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="SqlServerConnection.cs"];
m32_7 [label="Entry Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", span="11-11", cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="SqlServerConnection.cs"];
m32_42 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", span="50-50", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="SqlServerConnection.cs"];
m32_43 [label="var server = CreateServer()", span="52-52", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="SqlServerConnection.cs"];
m32_44 [label="server.Execute(_context.Object)", span="54-54", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="SqlServerConnection.cs"];
m32_45 [label="_context.Storage.Verify(x => x.GetConnection(), Times.Exactly(2))", span="56-56", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="SqlServerConnection.cs"];
m32_46 [label="_connection.Verify(x => x.Dispose(), Times.Exactly(2))", span="57-57", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="SqlServerConnection.cs"];
m32_47 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", span="50-50", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_GetsExactlyTwoConnections_AndClosesThem()", file="SqlServerConnection.cs"];
m32_33 [label="Entry Hangfire.Server.ServerBootstrapper.Execute(Hangfire.Server.BackgroundProcessContext)", span="33-33", cluster="Hangfire.Server.ServerBootstrapper.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerConnection.cs"];
m32_22 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="SqlServerConnection.cs"];
m32_9 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="SqlServerConnection.cs"];
m32_0 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", span="17-17", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="SqlServerConnection.cs"];
m32_3 [label="_connection = new Mock<IStorageConnection>()", span="22-22", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", color=green, community=0, file="SqlServerConnection.cs"];
m32_2 [label="_context.Object.ServerData.Add(''Queues'', _queues)", span="20-20", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="SqlServerConnection.cs"];
m32_4 [label="_processes = new List<ILongRunningProcess>()", span="23-23", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", color=green, community=0, file="SqlServerConnection.cs"];
m32_5 [label="_context.Storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="25-25", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="SqlServerConnection.cs"];
m32_1 [label="_context = new BackgroundProcessContextMock()", span="19-19", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="SqlServerConnection.cs"];
m32_6 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", span="17-17", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.ServerBootstrapperFacts()", file="SqlServerConnection.cs"];
m32_56 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", span="61-61", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="SqlServerConnection.cs"];
m32_57 [label="var component1 = CreateProcessMock<IServerComponent>()", span="64-64", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="SqlServerConnection.cs"];
m32_59 [label="var component2 = CreateProcessMock<IBackgroundProcess>()", span="67-67", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="SqlServerConnection.cs"];
m32_60 [label="var server = CreateServer()", span="68-68", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="SqlServerConnection.cs"];
m32_61 [label="server.Execute(_context.Object)", span="71-71", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="SqlServerConnection.cs"];
m32_62 [label="component1.Verify(x => x.Execute(_context.CancellationTokenSource.Token))", span="74-74", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="SqlServerConnection.cs"];
m32_63 [label="component2.Verify(x => x.Execute(_context.Object))", span="75-75", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="SqlServerConnection.cs"];
m32_58 [label="component1.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Callback(() => Thread.Sleep(100))", span="65-65", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="SqlServerConnection.cs"];
m32_64 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", span="61-61", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_StartsAllTheComponents_AndWaitsForThem()", file="SqlServerConnection.cs"];
m32_74 [label="Entry System.Threading.Thread.Sleep(int)", span="0-0", cluster="System.Threading.Thread.Sleep(int)", file="SqlServerConnection.cs"];
m32_21 [label="Entry Unk.>", span="", cluster="Unk.>", file="SqlServerConnection.cs"];
m32_65 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateProcessMock<T>()", span="93-93", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateProcessMock<T>()", file="SqlServerConnection.cs"];
m32_92 [label="var mock = new Mock<T>()", span="96-96", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateProcessMock<T>()", color=green, community=0, file="SqlServerConnection.cs"];
m32_93 [label="_processes.Add(mock.Object)", span="97-97", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateProcessMock<T>()", color=green, community=0, file="SqlServerConnection.cs"];
m32_94 [label="return mock;", span="99-99", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateProcessMock<T>()", color=green, community=0, file="SqlServerConnection.cs"];
m32_95 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateProcessMock<T>()", span="93-93", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateProcessMock<T>()", file="SqlServerConnection.cs"];
m32_32 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", span="88-88", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", file="SqlServerConnection.cs"];
m32_90 [label="return new ServerBootstrapper(_processes);", span="90-90", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", file="SqlServerConnection.cs"];
m32_91 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", span="88-88", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.CreateServer()", file="SqlServerConnection.cs"];
m32_16 [label="Entry Unk.GetConnection", span="", cluster="Unk.GetConnection", file="SqlServerConnection.cs"];
m32_97 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="SqlServerConnection.cs"];
m32_81 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", span="79-79", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="SqlServerConnection.cs"];
m32_82 [label="var server = CreateServer()", span="81-81", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="SqlServerConnection.cs"];
m32_83 [label="server.Execute(_context.Object)", span="83-83", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="SqlServerConnection.cs"];
m32_84 [label="_connection.Verify(x => x.RemoveServer(_context.ServerId))", span="85-85", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="SqlServerConnection.cs"];
m32_85 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", span="79-79", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_RemovesServerFromServersList()", file="SqlServerConnection.cs"];
m32_11 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="SqlServerConnection.cs"];
m32_55 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="SqlServerConnection.cs"];
m32_27 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", span="38-38", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="SqlServerConnection.cs"];
m32_28 [label="var server = CreateServer()", span="40-40", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="SqlServerConnection.cs"];
m32_29 [label="server.Execute(_context.Object)", span="42-42", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="SqlServerConnection.cs"];
m32_30 [label="_connection.Verify(x => x.AnnounceServer(\r\n                _context.ServerId, \r\n                It.Is<ServerContext>(y => y.Queues == _queues)))", span="44-46", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="SqlServerConnection.cs"];
m32_31 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", span="38-38", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Execute_AnnouncesServer()", file="SqlServerConnection.cs"];
m32_48 [label="Entry Unk.Exactly", span="", cluster="Unk.Exactly", file="SqlServerConnection.cs"];
m32_23 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_36 [label="x.AnnounceServer(\r\n                _context.ServerId, \r\n                It.Is<ServerContext>(y => y.Queues == _queues))", span="44-46", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_40 [label="y.Queues == _queues", span="46-46", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_76 [label="x.Execute(_context.CancellationTokenSource.Token)", span="74-74", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_79 [label="x.Execute(_context.Object)", span="75-75", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_87 [label="x.RemoveServer(_context.ServerId)", span="85-85", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_13 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_35 [label="Entry lambda expression", span="44-46", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_37 [label="Exit lambda expression", span="44-46", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_39 [label="Entry lambda expression", span="46-46", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_41 [label="Exit lambda expression", span="46-46", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_49 [label="Entry lambda expression", span="56-56", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_52 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_75 [label="Entry lambda expression", span="74-74", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_77 [label="Exit lambda expression", span="74-74", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_78 [label="Entry lambda expression", span="75-75", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_80 [label="Exit lambda expression", span="75-75", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_86 [label="Entry lambda expression", span="85-85", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_88 [label="Exit lambda expression", span="85-85", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_15 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_14 [label="x.GetConnection()", span="25-25", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_68 [label="x.Execute(It.IsAny<CancellationToken>())", span="65-65", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_51 [label="Exit lambda expression", span="56-56", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_50 [label="x.GetConnection()", span="56-56", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_54 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_53 [label="x.Dispose()", span="57-57", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_67 [label="Entry lambda expression", span="65-65", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_71 [label="Entry lambda expression", span="65-65", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_24 [label="new ServerBootstrapper(null)", span="32-32", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_69 [label="Exit lambda expression", span="65-65", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_73 [label="Exit lambda expression", span="65-65", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_72 [label="Thread.Sleep(100)", span="65-65", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_25 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="SqlServerConnection.cs"];
m32_38 [label="Entry Unk.AnnounceServer", span="", cluster="Unk.AnnounceServer", file="SqlServerConnection.cs"];
m32_17 [label="Entry Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenProcessesCollection_IsNull()", span="29-29", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenProcessesCollection_IsNull()", file="SqlServerConnection.cs"];
m32_18 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerBootstrapper(null))", span="31-32", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenProcessesCollection_IsNull()", file="SqlServerConnection.cs"];
m32_19 [label="Assert.Equal(''processes'', exception.ParamName)", span="34-34", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenProcessesCollection_IsNull()", file="SqlServerConnection.cs"];
m32_20 [label="Exit Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenProcessesCollection_IsNull()", span="29-29", cluster="Hangfire.Core.Tests.Server.ServerBootstrapperFacts.Ctor_ThrowsAnException_WhenProcessesCollection_IsNull()", file="SqlServerConnection.cs"];
m32_89 [label="Entry Unk.RemoveServer", span="", cluster="Unk.RemoveServer", file="SqlServerConnection.cs"];
m32_70 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="SqlServerConnection.cs"];
m32_66 [label="Entry Unk.Callback", span="", cluster="Unk.Callback", file="SqlServerConnection.cs"];
m32_12 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="SqlServerConnection.cs"];
m32_8 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="SqlServerConnection.cs"];
m32_26 [label="Entry Hangfire.Server.ServerBootstrapper.ServerBootstrapper(System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>)", span="27-27", cluster="Hangfire.Server.ServerBootstrapper.ServerBootstrapper(System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>)", file="SqlServerConnection.cs"];
m32_34 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="SqlServerConnection.cs"];
m32_98 [label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts", span="", file="SqlServerConnection.cs"];
m35_3 [label="Entry HangFire.SqlServer.DataTypes.SqlServerSet.GetFirstByLowestScore(string, long, long)", span="16-16", cluster="HangFire.SqlServer.DataTypes.SqlServerSet.GetFirstByLowestScore(string, long, long)", file="SqlServerSet.cs"];
m35_4 [label="return _connection.Query<string>(\r\n                @''select top 1 Value from HangFire.[Set] where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore })\r\n                .SingleOrDefault();", span="18-21", cluster="HangFire.SqlServer.DataTypes.SqlServerSet.GetFirstByLowestScore(string, long, long)", color=red, community=2, file="SqlServerSet.cs"];
m35_5 [label="Exit HangFire.SqlServer.DataTypes.SqlServerSet.GetFirstByLowestScore(string, long, long)", span="16-16", cluster="HangFire.SqlServer.DataTypes.SqlServerSet.GetFirstByLowestScore(string, long, long)", file="SqlServerSet.cs"];
m35_7 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="SqlServerSet.cs"];
m35_6 [label="Entry Unk.>", span="", cluster="Unk.>", file="SqlServerSet.cs"];
m35_0 [label="Entry HangFire.SqlServer.DataTypes.SqlServerSet.SqlServerSet(SqlConnection)", span="11-11", cluster="HangFire.SqlServer.DataTypes.SqlServerSet.SqlServerSet(SqlConnection)", file="SqlServerSet.cs"];
m35_1 [label="_connection = connection", span="13-13", cluster="HangFire.SqlServer.DataTypes.SqlServerSet.SqlServerSet(SqlConnection)", color=red, community=0, file="SqlServerSet.cs"];
m35_2 [label="Exit HangFire.SqlServer.DataTypes.SqlServerSet.SqlServerSet(SqlConnection)", span="11-11", cluster="HangFire.SqlServer.DataTypes.SqlServerSet.SqlServerSet(SqlConnection)", file="SqlServerSet.cs"];
m35_8 [label="HangFire.SqlServer.DataTypes.SqlServerSet", span="", file="SqlServerSet.cs"];
m36_25 [label="Entry Unk.OnScenarioStart", span="", cluster="Unk.OnScenarioStart", file="SqlServerWriteOnlyCounter.cs"];
m36_29 [label="Entry Unk.CollectScenarioErrors", span="", cluster="Unk.CollectScenarioErrors", file="SqlServerWriteOnlyCounter.cs"];
m36_21 [label="Entry Unk.OnScenarioEnd", span="", cluster="Unk.OnScenarioEnd", file="SqlServerWriteOnlyCounter.cs"];
m36_55 [label="Entry HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", span="119-119", cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="SqlServerWriteOnlyCounter.cs"];
m36_56 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher returns null when it tries to dequeue a job from an empty queue'', ((string[])(null)))", span="121-121", cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="SqlServerWriteOnlyCounter.cs"];
m36_57 [label="this.ScenarioSetup(scenarioInfo)", span="123-123", cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="SqlServerWriteOnlyCounter.cs"];
m36_58 [label="testRunner.Given(''an empty queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="125-125", cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="SqlServerWriteOnlyCounter.cs"];
m36_59 [label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="127-127", cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="SqlServerWriteOnlyCounter.cs"];
m36_60 [label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="129-129", cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="SqlServerWriteOnlyCounter.cs"];
m36_61 [label="testRunner.Then(''the fetcher does not return any job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="131-131", cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="SqlServerWriteOnlyCounter.cs"];
m36_62 [label="this.ScenarioCleanup()", span="133-133", cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="SqlServerWriteOnlyCounter.cs"];
m36_63 [label="Exit HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", span="119-119", cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="SqlServerWriteOnlyCounter.cs"];
m36_41 [label="Entry Unk.And", span="", cluster="Unk.And", file="SqlServerWriteOnlyCounter.cs"];
m36_54 [label="Entry Unk.But", span="", cluster="Unk.But", file="SqlServerWriteOnlyCounter.cs"];
m36_5 [label="Entry Unk.GetTestRunner", span="", cluster="Unk.GetTestRunner", file="SqlServerWriteOnlyCounter.cs"];
m36_26 [label="Entry HangFire.Tests.JobFetcherFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.JobFetcherFeature.ScenarioCleanup()", file="SqlServerWriteOnlyCounter.cs"];
m36_27 [label="testRunner.CollectScenarioErrors()", span="68-68", cluster="HangFire.Tests.JobFetcherFeature.ScenarioCleanup()", file="SqlServerWriteOnlyCounter.cs"];
m36_28 [label="Exit HangFire.Tests.JobFetcherFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.JobFetcherFeature.ScenarioCleanup()", file="SqlServerWriteOnlyCounter.cs"];
m36_0 [label="Entry HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="SqlServerWriteOnlyCounter.cs"];
m36_1 [label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32", cluster="HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=red, community=0, file="SqlServerWriteOnlyCounter.cs"];
m36_2 [label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''JobFetcher'', '''', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-34", cluster="HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=red, community=0, file="SqlServerWriteOnlyCounter.cs"];
m36_3 [label="testRunner.OnFeatureStart(featureInfo)", span="35-35", cluster="HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=red, community=0, file="SqlServerWriteOnlyCounter.cs"];
m36_4 [label="Exit HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="SqlServerWriteOnlyCounter.cs"];
m36_76 [label="Entry HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", span="167-167", cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="SqlServerWriteOnlyCounter.cs"];
m36_77 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher listens only specified queue'', ((string[])(null)))", span="169-169", cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="SqlServerWriteOnlyCounter.cs"];
m36_78 [label="this.ScenarioSetup(scenarioInfo)", span="171-171", cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="SqlServerWriteOnlyCounter.cs"];
m36_79 [label="testRunner.Given(''a job in the \'another\' queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="173-173", cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="SqlServerWriteOnlyCounter.cs"];
m36_80 [label="testRunner.And(''the fetcher listening the \'default\' queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="175-175", cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="SqlServerWriteOnlyCounter.cs"];
m36_81 [label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="177-177", cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="SqlServerWriteOnlyCounter.cs"];
m36_82 [label="testRunner.Then(''the fetcher does not return any job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="179-179", cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="SqlServerWriteOnlyCounter.cs"];
m36_83 [label="this.ScenarioCleanup()", span="181-181", cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="SqlServerWriteOnlyCounter.cs"];
m36_84 [label="Exit HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", span="167-167", cluster="HangFire.Tests.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="SqlServerWriteOnlyCounter.cs"];
m36_30 [label="Entry HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", span="75-75", cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="SqlServerWriteOnlyCounter.cs"];
m36_31 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher returns the job payload when it dequeues a job'', ((string[])(null)))", span="77-77", cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="SqlServerWriteOnlyCounter.cs"];
m36_32 [label="this.ScenarioSetup(scenarioInfo)", span="79-79", cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="SqlServerWriteOnlyCounter.cs"];
m36_33 [label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="81-81", cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="SqlServerWriteOnlyCounter.cs"];
m36_34 [label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="83-83", cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="SqlServerWriteOnlyCounter.cs"];
m36_35 [label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="85-85", cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="SqlServerWriteOnlyCounter.cs"];
m36_36 [label="testRunner.Then(''the fetcher returns the payload'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="87-87", cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="SqlServerWriteOnlyCounter.cs"];
m36_37 [label="this.ScenarioCleanup()", span="89-89", cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="SqlServerWriteOnlyCounter.cs"];
m36_38 [label="Exit HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", span="75-75", cluster="HangFire.Tests.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="SqlServerWriteOnlyCounter.cs"];
m36_9 [label="Entry HangFire.Tests.JobFetcherFeature.FeatureTearDown()", span="39-39", cluster="HangFire.Tests.JobFetcherFeature.FeatureTearDown()", file="SqlServerWriteOnlyCounter.cs"];
m36_10 [label="testRunner.OnFeatureEnd()", span="41-41", cluster="HangFire.Tests.JobFetcherFeature.FeatureTearDown()", color=red, community=0, file="SqlServerWriteOnlyCounter.cs"];
m36_11 [label="testRunner = null", span="42-42", cluster="HangFire.Tests.JobFetcherFeature.FeatureTearDown()", color=red, community=0, file="SqlServerWriteOnlyCounter.cs"];
m36_12 [label="Exit HangFire.Tests.JobFetcherFeature.FeatureTearDown()", span="39-39", cluster="HangFire.Tests.JobFetcherFeature.FeatureTearDown()", file="SqlServerWriteOnlyCounter.cs"];
m36_13 [label="Entry Unk.OnFeatureEnd", span="", cluster="Unk.OnFeatureEnd", file="SqlServerWriteOnlyCounter.cs"];
m36_7 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="SqlServerWriteOnlyCounter.cs"];
m36_42 [label="Entry Unk.When", span="", cluster="Unk.When", file="SqlServerWriteOnlyCounter.cs"];
m36_44 [label="Entry HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", span="96-96", cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="SqlServerWriteOnlyCounter.cs"];
m36_45 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher removes the dequeued job from the queue and adds it to the dequeued list'', ((string[])(null)))", span="98-98", cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="SqlServerWriteOnlyCounter.cs"];
m36_46 [label="this.ScenarioSetup(scenarioInfo)", span="100-100", cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="SqlServerWriteOnlyCounter.cs"];
m36_47 [label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="102-102", cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="SqlServerWriteOnlyCounter.cs"];
m36_48 [label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="104-104", cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="SqlServerWriteOnlyCounter.cs"];
m36_49 [label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="106-106", cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="SqlServerWriteOnlyCounter.cs"];
m36_50 [label="testRunner.Then(''the queue does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="108-108", cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="SqlServerWriteOnlyCounter.cs"];
m36_51 [label="testRunner.But(''the dequeued jobs list contains it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''But '')", span="110-110", cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="SqlServerWriteOnlyCounter.cs"];
m36_52 [label="this.ScenarioCleanup()", span="112-112", cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="SqlServerWriteOnlyCounter.cs"];
m36_53 [label="Exit HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", span="96-96", cluster="HangFire.Tests.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="SqlServerWriteOnlyCounter.cs"];
m36_64 [label="Entry HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", span="140-140", cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="SqlServerWriteOnlyCounter.cs"];
m36_65 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher dequeues jobs in the FIFO order'', ((string[])(null)))", span="142-142", cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="SqlServerWriteOnlyCounter.cs"];
m36_66 [label="this.ScenarioSetup(scenarioInfo)", span="144-144", cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="SqlServerWriteOnlyCounter.cs"];
m36_67 [label="testRunner.Given(''the \'first\' job in the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="146-146", cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="SqlServerWriteOnlyCounter.cs"];
m36_68 [label="testRunner.And(''the \'second\' job in the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="148-148", cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="SqlServerWriteOnlyCounter.cs"];
m36_69 [label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="150-150", cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="SqlServerWriteOnlyCounter.cs"];
m36_70 [label="testRunner.When(''it dequeues a job for the first time'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="152-152", cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="SqlServerWriteOnlyCounter.cs"];
m36_71 [label="testRunner.Then(''the fetcher returns the \'first\' job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="154-154", cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="SqlServerWriteOnlyCounter.cs"];
m36_72 [label="testRunner.When(''it dequeues a job for the second time'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="156-156", cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="SqlServerWriteOnlyCounter.cs"];
m36_73 [label="testRunner.Then(''the fetcher returns the \'second\' job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="158-158", cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="SqlServerWriteOnlyCounter.cs"];
m36_74 [label="this.ScenarioCleanup()", span="160-160", cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="SqlServerWriteOnlyCounter.cs"];
m36_75 [label="Exit HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", span="140-140", cluster="HangFire.Tests.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="SqlServerWriteOnlyCounter.cs"];
m36_39 [label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span="", cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="SqlServerWriteOnlyCounter.cs"];
m36_43 [label="Entry Unk.Then", span="", cluster="Unk.Then", file="SqlServerWriteOnlyCounter.cs"];
m36_40 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="SqlServerWriteOnlyCounter.cs"];
m36_85 [label="Entry HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", span="188-188", cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="SqlServerWriteOnlyCounter.cs"];
m36_86 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher sets the \'fetched\' flag when it dequeues a job'', ((string[])(null)))", span="190-190", cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="SqlServerWriteOnlyCounter.cs"];
m36_87 [label="this.ScenarioSetup(scenarioInfo)", span="192-192", cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="SqlServerWriteOnlyCounter.cs"];
m36_88 [label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="194-194", cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="SqlServerWriteOnlyCounter.cs"];
m36_89 [label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="196-196", cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="SqlServerWriteOnlyCounter.cs"];
m36_90 [label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="198-198", cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="SqlServerWriteOnlyCounter.cs"];
m36_91 [label="testRunner.Then(''the job has the \'fetched\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="200-200", cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="SqlServerWriteOnlyCounter.cs"];
m36_92 [label="this.ScenarioCleanup()", span="202-202", cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="SqlServerWriteOnlyCounter.cs"];
m36_93 [label="Exit HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", span="188-188", cluster="HangFire.Tests.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="SqlServerWriteOnlyCounter.cs"];
m36_6 [label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span="", cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="SqlServerWriteOnlyCounter.cs"];
m36_14 [label="Entry HangFire.Tests.JobFetcherFeature.TestInitialize()", span="46-46", cluster="HangFire.Tests.JobFetcherFeature.TestInitialize()", file="SqlServerWriteOnlyCounter.cs"];
m36_15 [label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''JobFetcher''))", span="48-49", cluster="HangFire.Tests.JobFetcherFeature.TestInitialize()", file="SqlServerWriteOnlyCounter.cs"];
m36_16 [label="HangFire.Tests.JobFetcherFeature.FeatureSetup(null)", span="51-51", cluster="HangFire.Tests.JobFetcherFeature.TestInitialize()", file="SqlServerWriteOnlyCounter.cs"];
m36_17 [label="Exit HangFire.Tests.JobFetcherFeature.TestInitialize()", span="46-46", cluster="HangFire.Tests.JobFetcherFeature.TestInitialize()", file="SqlServerWriteOnlyCounter.cs"];
m36_18 [label="Entry HangFire.Tests.JobFetcherFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.JobFetcherFeature.ScenarioTearDown()", file="SqlServerWriteOnlyCounter.cs"];
m36_19 [label="testRunner.OnScenarioEnd()", span="58-58", cluster="HangFire.Tests.JobFetcherFeature.ScenarioTearDown()", file="SqlServerWriteOnlyCounter.cs"];
m36_20 [label="Exit HangFire.Tests.JobFetcherFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.JobFetcherFeature.ScenarioTearDown()", file="SqlServerWriteOnlyCounter.cs"];
m36_22 [label="Entry HangFire.Tests.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="SqlServerWriteOnlyCounter.cs"];
m36_23 [label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63", cluster="HangFire.Tests.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="SqlServerWriteOnlyCounter.cs"];
m36_24 [label="Exit HangFire.Tests.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="SqlServerWriteOnlyCounter.cs"];
m36_8 [label="Entry Unk.OnFeatureStart", span="", cluster="Unk.OnFeatureStart", file="SqlServerWriteOnlyCounter.cs"];
m36_94 [label="HangFire.Tests.JobFetcherFeature", span="", file="SqlServerWriteOnlyCounter.cs"];
m37_11 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SqlServerWriteOnlyJob.cs"];
m37_8 [label="Entry HangFire.States.ProcessingState.SerializeData()", span="41-41", cluster="HangFire.States.ProcessingState.SerializeData()", file="SqlServerWriteOnlyJob.cs"];
m37_9 [label="return new Dictionary<string, string>\r\n            {\r\n                { ''StartedAt'', JobHelper.ToStringTimestamp(StartedAt) },\r\n                { ''ServerName'', ServerName }\r\n            };", span="43-47", cluster="HangFire.States.ProcessingState.SerializeData()", color=red, community=0, file="SqlServerWriteOnlyJob.cs"];
m37_10 [label="Exit HangFire.States.ProcessingState.SerializeData()", span="41-41", cluster="HangFire.States.ProcessingState.SerializeData()", file="SqlServerWriteOnlyJob.cs"];
m37_6 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="SqlServerWriteOnlyJob.cs"];
m37_0 [label="Entry HangFire.States.ProcessingState.ProcessingState(string)", span="26-26", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="SqlServerWriteOnlyJob.cs"];
m37_1 [label="String.IsNullOrWhiteSpace(serverName)", span="28-28", cluster="HangFire.States.ProcessingState.ProcessingState(string)", color=red, community=0, file="SqlServerWriteOnlyJob.cs"];
m37_3 [label="ServerName = serverName", span="30-30", cluster="HangFire.States.ProcessingState.ProcessingState(string)", color=red, community=0, file="SqlServerWriteOnlyJob.cs"];
m37_2 [label="throw new ArgumentNullException(''serverName'');", span="28-28", cluster="HangFire.States.ProcessingState.ProcessingState(string)", color=red, community=0, file="SqlServerWriteOnlyJob.cs"];
m37_4 [label="StartedAt = DateTime.UtcNow", span="31-31", cluster="HangFire.States.ProcessingState.ProcessingState(string)", color=red, community=0, file="SqlServerWriteOnlyJob.cs"];
m37_5 [label="Exit HangFire.States.ProcessingState.ProcessingState(string)", span="26-26", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="SqlServerWriteOnlyJob.cs"];
m37_12 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="SqlServerWriteOnlyJob.cs"];
m37_13 [label="HangFire.States.ProcessingState", span="", file="SqlServerWriteOnlyJob.cs"];
m38_14 [label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Remove(string, string)", span="24-24", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Remove(string, string)", file="SqlServerWriteOnlyList.cs"];
m38_15 [label="_transaction.QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="26-28", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Remove(string, string)", color=red, community=1, file="SqlServerWriteOnlyList.cs"];
m38_16 [label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Remove(string, string)", span="24-24", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Remove(string, string)", file="SqlServerWriteOnlyList.cs"];
m38_13 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="SqlServerWriteOnlyList.cs"];
m38_0 [label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlyList.cs"];
m38_1 [label="transaction == null", span="12-12", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", color=red, community=0, file="SqlServerWriteOnlyList.cs"];
m38_3 [label="_transaction = transaction", span="14-14", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", color=red, community=0, file="SqlServerWriteOnlyList.cs"];
m38_2 [label="throw new ArgumentNullException(''transaction'');", span="12-12", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", color=red, community=0, file="SqlServerWriteOnlyList.cs"];
m38_4 [label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlyList.cs"];
m38_20 [label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Trim(string, int, int)", span="31-31", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Trim(string, int, int)", file="SqlServerWriteOnlyList.cs"];
m38_21 [label="string trimSql = @''\r\nwith cte as (\r\nselect row_number() over (order by Id desc) as row_num from HangFire.List)\r\ndelete from cte where row_num not between @start and @end''", span="33-36", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Trim(string, int, int)", color=red, community=1, file="SqlServerWriteOnlyList.cs"];
m38_22 [label="_transaction.QueueCommand(x => x.Execute(\r\n                trimSql,\r\n                new { start = keepStartingFrom + 1, end = keepEndingAt + 1 }))", span="38-40", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Trim(string, int, int)", color=red, community=1, file="SqlServerWriteOnlyList.cs"];
m38_23 [label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Trim(string, int, int)", span="31-31", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.Trim(string, int, int)", file="SqlServerWriteOnlyList.cs"];
m38_9 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="39-39", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyList.cs"];
m38_6 [label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.AddToLeft(string, string)", span="17-17", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.AddToLeft(string, string)", file="SqlServerWriteOnlyList.cs"];
m38_7 [label="_transaction.QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value }))", span="19-21", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.AddToLeft(string, string)", color=red, community=1, file="SqlServerWriteOnlyList.cs"];
m38_8 [label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.AddToLeft(string, string)", span="17-17", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.AddToLeft(string, string)", file="SqlServerWriteOnlyList.cs"];
m38_24 [label="Entry lambda expression", span="38-40", cluster="lambda expression", file="SqlServerWriteOnlyList.cs"];
m38_11 [label="x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value })", span="19-21", cluster="lambda expression", color=red, community=1, file="SqlServerWriteOnlyList.cs"];
m38_10 [label="Entry lambda expression", span="19-21", cluster="lambda expression", file="SqlServerWriteOnlyList.cs"];
m38_12 [label="Exit lambda expression", span="19-21", cluster="lambda expression", file="SqlServerWriteOnlyList.cs"];
m38_18 [label="x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="26-28", cluster="lambda expression", color=red, community=1, file="SqlServerWriteOnlyList.cs"];
m38_17 [label="Entry lambda expression", span="26-28", cluster="lambda expression", file="SqlServerWriteOnlyList.cs"];
m38_19 [label="Exit lambda expression", span="26-28", cluster="lambda expression", file="SqlServerWriteOnlyList.cs"];
m38_25 [label="x.Execute(\r\n                trimSql,\r\n                new { start = keepStartingFrom + 1, end = keepEndingAt + 1 })", span="38-40", cluster="lambda expression", color=red, community=1, file="SqlServerWriteOnlyList.cs"];
m38_26 [label="Exit lambda expression", span="38-40", cluster="lambda expression", file="SqlServerWriteOnlyList.cs"];
m38_27 [label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList", span="", file="SqlServerWriteOnlyList.cs"];
m38_28 [label=string, span="", file="SqlServerWriteOnlyList.cs"];
m38_29 [label=string, span="", file="SqlServerWriteOnlyList.cs"];
m38_30 [label=string, span="", file="SqlServerWriteOnlyList.cs"];
m38_31 [label=string, span="", file="SqlServerWriteOnlyList.cs"];
m38_32 [label=int, span="", file="SqlServerWriteOnlyList.cs"];
m38_33 [label=int, span="", file="SqlServerWriteOnlyList.cs"];
m38_34 [label=trimSql, span="", file="SqlServerWriteOnlyList.cs"];
m39_0 [label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlyQueue.cs"];
m39_1 [label="transaction == null", span="12-12", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", color=red, community=0, file="SqlServerWriteOnlyQueue.cs"];
m39_3 [label="_transaction = transaction", span="14-14", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", color=red, community=0, file="SqlServerWriteOnlyQueue.cs"];
m39_2 [label="throw new ArgumentNullException(''transaction'');", span="12-12", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", color=red, community=0, file="SqlServerWriteOnlyQueue.cs"];
m39_4 [label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlyQueue.cs"];
m39_14 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="SqlServerWriteOnlyQueue.cs"];
m39_10 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="39-39", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyQueue.cs"];
m39_6 [label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.Enqueue(string, string)", span="17-17", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.Enqueue(string, string)", file="SqlServerWriteOnlyQueue.cs"];
m39_7 [label="string enqueueJobSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (@jobId, @queue)''", span="19-21", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.Enqueue(string, string)", color=red, community=1, file="SqlServerWriteOnlyQueue.cs"];
m39_8 [label="_transaction.QueueCommand(x => x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue }))", span="23-25", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.Enqueue(string, string)", color=red, community=1, file="SqlServerWriteOnlyQueue.cs"];
m39_9 [label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.Enqueue(string, string)", span="17-17", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.Enqueue(string, string)", file="SqlServerWriteOnlyQueue.cs"];
m39_11 [label="Entry lambda expression", span="23-25", cluster="lambda expression", file="SqlServerWriteOnlyQueue.cs"];
m39_12 [label="x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue })", span="23-25", cluster="lambda expression", color=red, community=1, file="SqlServerWriteOnlyQueue.cs"];
m39_13 [label="Exit lambda expression", span="23-25", cluster="lambda expression", file="SqlServerWriteOnlyQueue.cs"];
m39_15 [label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue", span="", file="SqlServerWriteOnlyQueue.cs"];
m39_16 [label=string, span="", file="SqlServerWriteOnlyQueue.cs"];
m39_17 [label=string, span="", file="SqlServerWriteOnlyQueue.cs"];
m39_18 [label=enqueueJobSql, span="", file="SqlServerWriteOnlyQueue.cs"];
m40_6 [label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.Add(string, string)", span="17-17", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.Add(string, string)", file="SqlServerWriteOnlySet.cs"];
m40_7 [label="((IWriteOnlyPersistentSet)this).Add(key, value, 0.0)", span="19-19", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.Add(string, string)", color=red, community=0, file="SqlServerWriteOnlySet.cs"];
m40_8 [label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.Add(string, string)", span="17-17", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.Add(string, string)", file="SqlServerWriteOnlySet.cs"];
m40_10 [label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.Add(string, string, double)", span="22-22", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.Add(string, string, double)", file="SqlServerWriteOnlySet.cs"];
m40_11 [label="string addSql = @''\r\nmerge HangFire.[Set] as Target\r\nusing (VALUES (@key, @value, @score)) as Source ([Key], Value, Score)\r\non Target.[Key] = Source.[Key] and Target.Value = Source.Value\r\nwhen matched then update set Score = Source.Score\r\nwhen not matched then insert ([Key], Value, Score) values (Source.[Key], Source.Value, Source.Score);''", span="24-29", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.Add(string, string, double)", color=red, community=1, file="SqlServerWriteOnlySet.cs"];
m40_12 [label="_transaction.QueueCommand(x => x.Execute(\r\n                addSql,\r\n                new { key, value, score }))", span="31-33", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.Add(string, string, double)", color=red, community=1, file="SqlServerWriteOnlySet.cs"];
m40_13 [label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.Add(string, string, double)", span="22-22", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.Add(string, string, double)", file="SqlServerWriteOnlySet.cs"];
m40_18 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="SqlServerWriteOnlySet.cs"];
m40_19 [label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", span="36-36", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", file="SqlServerWriteOnlySet.cs"];
m40_20 [label="_transaction.QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="38-40", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", color=red, community=1, file="SqlServerWriteOnlySet.cs"];
m40_21 [label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", span="36-36", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.HangFire.Storage.IWriteOnlyPersistentSet.Remove(string, string)", file="SqlServerWriteOnlySet.cs"];
m40_0 [label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.SqlServerWriteOnlySet(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.SqlServerWriteOnlySet(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlySet.cs"];
m40_1 [label="transaction == null", span="12-12", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.SqlServerWriteOnlySet(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", color=red, community=0, file="SqlServerWriteOnlySet.cs"];
m40_3 [label="_transaction = transaction", span="14-14", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.SqlServerWriteOnlySet(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", color=red, community=0, file="SqlServerWriteOnlySet.cs"];
m40_2 [label="throw new ArgumentNullException(''transaction'');", span="12-12", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.SqlServerWriteOnlySet(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", color=red, community=0, file="SqlServerWriteOnlySet.cs"];
m40_4 [label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.SqlServerWriteOnlySet(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.SqlServerWriteOnlySet(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlySet.cs"];
m40_14 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="39-39", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlySet.cs"];
m40_22 [label="Entry lambda expression", span="38-40", cluster="lambda expression", file="SqlServerWriteOnlySet.cs"];
m40_16 [label="x.Execute(\r\n                addSql,\r\n                new { key, value, score })", span="31-33", cluster="lambda expression", color=red, community=1, file="SqlServerWriteOnlySet.cs"];
m40_15 [label="Entry lambda expression", span="31-33", cluster="lambda expression", file="SqlServerWriteOnlySet.cs"];
m40_17 [label="Exit lambda expression", span="31-33", cluster="lambda expression", file="SqlServerWriteOnlySet.cs"];
m40_23 [label="x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="38-40", cluster="lambda expression", color=red, community=1, file="SqlServerWriteOnlySet.cs"];
m40_24 [label="Exit lambda expression", span="38-40", cluster="lambda expression", file="SqlServerWriteOnlySet.cs"];
m40_9 [label="Entry HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string, double)", span="5-5", cluster="HangFire.Storage.IWriteOnlyPersistentSet.Add(string, string, double)", file="SqlServerWriteOnlySet.cs"];
m40_25 [label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet", span="", file="SqlServerWriteOnlySet.cs"];
m40_26 [label=string, span="", file="SqlServerWriteOnlySet.cs"];
m40_27 [label=string, span="", file="SqlServerWriteOnlySet.cs"];
m40_28 [label=double, span="", file="SqlServerWriteOnlySet.cs"];
m40_29 [label=addSql, span="", file="SqlServerWriteOnlySet.cs"];
m40_30 [label=string, span="", file="SqlServerWriteOnlySet.cs"];
m40_31 [label=string, span="", file="SqlServerWriteOnlySet.cs"];
m41_22 [label="Entry HangFire.JobActivator.JobActivator()", span="4-4", cluster="HangFire.JobActivator.JobActivator()", file="SqlServerWriteOnlyTransaction.cs"];
m41_31 [label="Entry System.Threading.Thread.Join()", span="0-0", cluster="System.Threading.Thread.Join()", file="SqlServerWriteOnlyTransaction.cs"];
m41_51 [label="Entry HangFire.Server.JobServer.RunServer()", span="98-98", cluster="HangFire.Server.JobServer.RunServer()", file="SqlServerWriteOnlyTransaction.cs"];
m41_52 [label="AnnounceServer()", span="102-102", cluster="HangFire.Server.JobServer.RunServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_53 [label="StartServer()", span="103-103", cluster="HangFire.Server.JobServer.RunServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_54 [label=true, span="105-105", cluster="HangFire.Server.JobServer.RunServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_56 [label="_stopped.WaitOne(HeartbeatInterval)", span="109-109", cluster="HangFire.Server.JobServer.RunServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_55 [label="Heartbeat()", span="107-107", cluster="HangFire.Server.JobServer.RunServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_57 [label="StopServer()", span="115-115", cluster="HangFire.Server.JobServer.RunServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_60 [label="_logger.Fatal(''Unexpected exception caught.'', ex)", span="120-120", cluster="HangFire.Server.JobServer.RunServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_58 [label="RemoveServer(_redis, _context.ServerName)", span="116-116", cluster="HangFire.Server.JobServer.RunServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_59 [label=Exception, span="118-118", cluster="HangFire.Server.JobServer.RunServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_61 [label="Exit HangFire.Server.JobServer.RunServer()", span="98-98", cluster="HangFire.Server.JobServer.RunServer()", file="SqlServerWriteOnlyTransaction.cs"];
m41_0 [label="Entry HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", span="33-33", cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="SqlServerWriteOnlyTransaction.cs"];
m41_1 [label="_redis = redisManager.GetClient()", span="41-41", cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="SqlServerWriteOnlyTransaction.cs"];
m41_4 [label="_queues = queues", span="45-45", cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", color=red, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_2 [label="_redisManager = redisManager", span="43-43", cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="SqlServerWriteOnlyTransaction.cs"];
m41_3 [label="_workerCount = workerCount", span="44-44", cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="SqlServerWriteOnlyTransaction.cs"];
m41_5 [label="_pollInterval = pollInterval", span="46-46", cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="SqlServerWriteOnlyTransaction.cs"];
m41_6 [label="queues == null", span="48-48", cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_7 [label="Entry HangFire.States.FailedState.SerializeData()", span="42-42", cluster="HangFire.States.FailedState.SerializeData()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_8 [label="return new Dictionary<string, string>\r\n            {\r\n                { ''FailedAt'', JobHelper.SerializeDateTime(FailedAt) },\r\n                { ''ExceptionType'', Exception.GetType().FullName },\r\n                { ''ExceptionMessage'', Exception.Message },\r\n                { ''ExceptionDetails'', Exception.ToString() }\r\n            };", span="44-50", cluster="HangFire.States.FailedState.SerializeData()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_9 [label="Exit HangFire.States.FailedState.SerializeData()", span="42-42", cluster="HangFire.States.FailedState.SerializeData()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_10 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_11 [label="Entry HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_12 [label="Entry System.Exception.GetType()", span="0-0", cluster="System.Exception.GetType()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_13 [label="Entry System.Exception.ToString()", span="0-0", cluster="System.Exception.ToString()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_14 [label="HangFire.States.FailedState", span="", cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="SqlServerWriteOnlyTransaction.cs"];
m41_89 [label="Entry Unk.SetRangeInHash", span="", cluster="Unk.SetRangeInHash", file="SqlServerWriteOnlyTransaction.cs"];
m41_20 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="SqlServerWriteOnlyTransaction.cs"];
m41_25 [label="Entry System.Threading.Thread.Start()", span="0-0", cluster="System.Threading.Thread.Start()", file="SqlServerWriteOnlyTransaction.cs"];
m41_26 [label="Entry HangFire.Server.JobServer.Dispose()", span="70-70", cluster="HangFire.Server.JobServer.Dispose()", file="SqlServerWriteOnlyTransaction.cs"];
m41_27 [label="_stopped.Set()", span="72-72", cluster="HangFire.Server.JobServer.Dispose()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_28 [label="_serverThread.Join()", span="73-73", cluster="HangFire.Server.JobServer.Dispose()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_29 [label="Exit HangFire.Server.JobServer.Dispose()", span="70-70", cluster="HangFire.Server.JobServer.Dispose()", file="SqlServerWriteOnlyTransaction.cs"];
m41_42 [label="Entry HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher(IRedisClientsManager)", span="21-21", cluster="HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher(IRedisClientsManager)", file="SqlServerWriteOnlyTransaction.cs"];
m41_96 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", file="SqlServerWriteOnlyTransaction.cs"];
m41_81 [label="Entry Unk.AddItemToSet", span="", cluster="Unk.AddItemToSet", file="SqlServerWriteOnlyTransaction.cs"];
m41_85 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="SqlServerWriteOnlyTransaction.cs"];
m41_88 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="SqlServerWriteOnlyTransaction.cs"];
m41_41 [label="Entry HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", span="21-21", cluster="HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m41_109 [label="Entry Unk.RemoveEntry", span="", cluster="Unk.RemoveEntry", file="SqlServerWriteOnlyTransaction.cs"];
m41_18 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="SqlServerWriteOnlyTransaction.cs"];
m41_87 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="SqlServerWriteOnlyTransaction.cs"];
m41_19 [label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0", cluster="System.Diagnostics.Process.GetCurrentProcess()", file="SqlServerWriteOnlyTransaction.cs"];
m41_38 [label="Entry HangFire.Server.ThreadWrapper.ThreadWrapper(HangFire.Server.IThreadWrappable)", span="10-10", cluster="HangFire.Server.ThreadWrapper.ThreadWrapper(HangFire.Server.IThreadWrappable)", file="SqlServerWriteOnlyTransaction.cs"];
m41_30 [label="Entry System.Threading.EventWaitHandle.Set()", span="0-0", cluster="System.Threading.EventWaitHandle.Set()", file="SqlServerWriteOnlyTransaction.cs"];
m41_94 [label="_redis.SetEntryInHash(\r\n                String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                ''Heartbeat'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="153-156", cluster="HangFire.Server.JobServer.Heartbeat()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_63 [label="Entry HangFire.Server.JobServer.Heartbeat()", span="151-151", cluster="HangFire.Server.JobServer.Heartbeat()", file="SqlServerWriteOnlyTransaction.cs"];
m41_95 [label="Exit HangFire.Server.JobServer.Heartbeat()", span="151-151", cluster="HangFire.Server.JobServer.Heartbeat()", file="SqlServerWriteOnlyTransaction.cs"];
m41_99 [label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', serverName),\r\n                    String.Format(''hangfire:server:{0}:queues'', serverName)))", span="167-169", cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_65 [label="Entry HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", span="159-159", cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", file="SqlServerWriteOnlyTransaction.cs"];
m41_97 [label="var transaction = redis.CreateTransaction()", span="161-161", cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_98 [label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    serverName))", span="163-165", cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_100 [label="transaction.Commit()", span="171-171", cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_101 [label="Exit HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", span="159-159", cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", file="SqlServerWriteOnlyTransaction.cs"];
m41_44 [label="Entry HangFire.Server.JobServer.StopServer()", span="89-89", cluster="HangFire.Server.JobServer.StopServer()", file="SqlServerWriteOnlyTransaction.cs"];
m41_45 [label="_serverWatchdog.Dispose()", span="91-91", cluster="HangFire.Server.JobServer.StopServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_46 [label="_fetchedJobsWatcher.Dispose()", span="92-92", cluster="HangFire.Server.JobServer.StopServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_47 [label="_schedulePoller.Dispose()", span="93-93", cluster="HangFire.Server.JobServer.StopServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_48 [label="_manager.Dispose()", span="94-94", cluster="HangFire.Server.JobServer.StopServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_49 [label="Exit HangFire.Server.JobServer.StopServer()", span="89-89", cluster="HangFire.Server.JobServer.StopServer()", file="SqlServerWriteOnlyTransaction.cs"];
m41_23 [label="Entry HangFire.Server.JobPerformer.JobPerformer()", span="13-13", cluster="HangFire.Server.JobPerformer.JobPerformer()", file="SqlServerWriteOnlyTransaction.cs"];
m41_15 [label="Entry Unk.GetClient", span="", cluster="Unk.GetClient", file="SqlServerWriteOnlyTransaction.cs"];
m41_50 [label="Entry HangFire.Server.ThreadWrapper.Dispose()", span="23-23", cluster="HangFire.Server.ThreadWrapper.Dispose()", file="SqlServerWriteOnlyTransaction.cs"];
m41_93 [label="Entry Unk.AddItemToList", span="", cluster="Unk.AddItemToList", file="SqlServerWriteOnlyTransaction.cs"];
m41_62 [label="Entry HangFire.Server.JobServer.AnnounceServer()", span="124-124", cluster="HangFire.Server.JobServer.AnnounceServer()", file="SqlServerWriteOnlyTransaction.cs"];
m41_67 [label="var transaction = _redis.CreateTransaction()", span="126-126", cluster="HangFire.Server.JobServer.AnnounceServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_68 [label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    ''hangfire:servers'', _context.ServerName))", span="128-129", cluster="HangFire.Server.JobServer.AnnounceServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_69 [label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', _workerCount.ToString() },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        }))", span="131-137", cluster="HangFire.Server.JobServer.AnnounceServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_72 [label="transaction.QueueCommand(x => x.AddItemToList(\r\n                        String.Format(''hangfire:server:{0}:queues'', _context.ServerName),\r\n                        queue1))", span="142-144", cluster="HangFire.Server.JobServer.AnnounceServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_73 [label="transaction.Commit()", span="147-147", cluster="HangFire.Server.JobServer.AnnounceServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_70 [label=_queues, span="139-139", cluster="HangFire.Server.JobServer.AnnounceServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_71 [label="var queue1 = queue", span="141-141", cluster="HangFire.Server.JobServer.AnnounceServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_74 [label="Exit HangFire.Server.JobServer.AnnounceServer()", span="124-124", cluster="HangFire.Server.JobServer.AnnounceServer()", file="SqlServerWriteOnlyTransaction.cs"];
m41_105 [label="Entry Unk.RemoveItemFromSet", span="", cluster="Unk.RemoveItemFromSet", file="SqlServerWriteOnlyTransaction.cs"];
m41_66 [label="Entry Unk.Fatal", span="", cluster="Unk.Fatal", file="SqlServerWriteOnlyTransaction.cs"];
m41_17 [label="Entry System.TimeSpan.Duration()", span="0-0", cluster="System.TimeSpan.Duration()", file="SqlServerWriteOnlyTransaction.cs"];
m41_32 [label="Entry HangFire.Server.JobServer.StartServer()", span="76-76", cluster="HangFire.Server.JobServer.StartServer()", file="SqlServerWriteOnlyTransaction.cs"];
m41_33 [label="_manager = new ThreadWrapper(new JobManager(\r\n                new PrioritizedJobFetcher(_redisManager, _queues, _workerCount),\r\n                _redisManager, \r\n                _context, \r\n                _workerCount))", span="78-82", cluster="HangFire.Server.JobServer.StartServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_34 [label="_schedulePoller = new ThreadWrapper(new SchedulePoller(_redisManager, _pollInterval))", span="84-84", cluster="HangFire.Server.JobServer.StartServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_35 [label="_fetchedJobsWatcher = new ThreadWrapper(new DequeuedJobsWatcher(_redisManager))", span="85-85", cluster="HangFire.Server.JobServer.StartServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_36 [label="_serverWatchdog = new ThreadWrapper(new ServerWatchdog(_redisManager))", span="86-86", cluster="HangFire.Server.JobServer.StartServer()", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_37 [label="Exit HangFire.Server.JobServer.StartServer()", span="76-76", cluster="HangFire.Server.JobServer.StartServer()", file="SqlServerWriteOnlyTransaction.cs"];
m41_107 [label="x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', serverName),\r\n                    String.Format(''hangfire:server:{0}:queues'', serverName))", span="167-169", cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_78 [label="Entry lambda expression", span="128-129", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m41_82 [label="Entry lambda expression", span="131-137", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m41_90 [label="Entry lambda expression", span="142-144", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m41_91 [label="x.AddItemToList(\r\n                        String.Format(''hangfire:server:{0}:queues'', _context.ServerName),\r\n                        queue1)", span="142-144", cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_92 [label="Exit lambda expression", span="142-144", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m41_79 [label="x.AddItemToSet(\r\n                    ''hangfire:servers'', _context.ServerName)", span="128-129", cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_80 [label="Exit lambda expression", span="128-129", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m41_83 [label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', _workerCount.ToString() },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        })", span="131-137", cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_84 [label="Exit lambda expression", span="131-137", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m41_102 [label="Entry lambda expression", span="163-165", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m41_103 [label="x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    serverName)", span="163-165", cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyTransaction.cs"];
m41_104 [label="Exit lambda expression", span="163-165", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m41_106 [label="Entry lambda expression", span="167-169", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m41_108 [label="Exit lambda expression", span="167-169", cluster="lambda expression", file="SqlServerWriteOnlyTransaction.cs"];
m41_77 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="SqlServerWriteOnlyTransaction.cs"];
m41_64 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="SqlServerWriteOnlyTransaction.cs"];
m41_21 [label="Entry HangFire.Server.ServerContext.ServerContext(string, HangFire.JobActivator, HangFire.Server.JobPerformer)", span="9-9", cluster="HangFire.Server.ServerContext.ServerContext(string, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="SqlServerWriteOnlyTransaction.cs"];
m41_40 [label="Entry HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", span="13-13", cluster="HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", file="SqlServerWriteOnlyTransaction.cs"];
m41_43 [label="Entry HangFire.Server.ServerWatchdog.ServerWatchdog(IRedisClientsManager)", span="18-18", cluster="HangFire.Server.ServerWatchdog.ServerWatchdog(IRedisClientsManager)", file="SqlServerWriteOnlyTransaction.cs"];
m41_76 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="SqlServerWriteOnlyTransaction.cs"];
m41_39 [label="Entry HangFire.Server.JobManager.JobManager(HangFire.Server.IJobFetcher, IRedisClientsManager, HangFire.Server.ServerContext, int)", span="18-18", cluster="HangFire.Server.JobManager.JobManager(HangFire.Server.IJobFetcher, IRedisClientsManager, HangFire.Server.ServerContext, int)", file="SqlServerWriteOnlyTransaction.cs"];
m41_75 [label="Entry Unk.CreateTransaction", span="", cluster="Unk.CreateTransaction", file="SqlServerWriteOnlyTransaction.cs"];
m41_24 [label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0", cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="SqlServerWriteOnlyTransaction.cs"];
m41_110 [label="HangFire.Server.JobServer", span="", file="SqlServerWriteOnlyTransaction.cs"];
m41_111 [label=queue1, span="", file="SqlServerWriteOnlyTransaction.cs"];
m41_112 [label=string, span="", file="SqlServerWriteOnlyTransaction.cs"];
m42_13 [label="Entry Hangfire.Server.InfiniteLoopProcess.ToString()", span="41-41", cluster="Hangfire.Server.InfiniteLoopProcess.ToString()", file="SqlServerWriteOnlyValue.cs"];
m42_14 [label="return InnerProcess.ToString();", span="43-43", cluster="Hangfire.Server.InfiniteLoopProcess.ToString()", color=red, community=0, file="SqlServerWriteOnlyValue.cs"];
m42_15 [label="Exit Hangfire.Server.InfiniteLoopProcess.ToString()", span="41-41", cluster="Hangfire.Server.InfiniteLoopProcess.ToString()", file="SqlServerWriteOnlyValue.cs"];
m42_0 [label="Entry Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", span="24-24", cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", file="SqlServerWriteOnlyValue.cs"];
m42_1 [label="innerProcess == null", span="26-26", cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", color=red, community=0, file="SqlServerWriteOnlyValue.cs"];
m42_3 [label="InnerProcess = innerProcess", span="27-27", cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", color=red, community=0, file="SqlServerWriteOnlyValue.cs"];
m42_2 [label="throw new ArgumentNullException(''innerProcess'');", span="26-26", cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", color=red, community=0, file="SqlServerWriteOnlyValue.cs"];
m42_4 [label="Exit Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", span="24-24", cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", file="SqlServerWriteOnlyValue.cs"];
m42_6 [label="Entry Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="32-32", cluster="Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerWriteOnlyValue.cs"];
m42_7 [label=true, span="34-34", cluster="Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="SqlServerWriteOnlyValue.cs"];
m42_8 [label="context.CancellationToken.ThrowIfCancellationRequested()", span="36-36", cluster="Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="SqlServerWriteOnlyValue.cs"];
m42_9 [label="InnerProcess.Execute(context)", span="37-37", cluster="Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="SqlServerWriteOnlyValue.cs"];
m42_10 [label="Exit Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="32-32", cluster="Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerWriteOnlyValue.cs"];
m42_12 [label="Entry Hangfire.Server.ILongRunningProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="26-26", cluster="Hangfire.Server.ILongRunningProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="SqlServerWriteOnlyValue.cs"];
m42_16 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="SqlServerWriteOnlyValue.cs"];
m42_11 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="SqlServerWriteOnlyValue.cs"];
m42_17 [label="Hangfire.Server.InfiniteLoopProcess", span="", file="SqlServerWriteOnlyValue.cs"];
m43_0 [label="Entry HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", span="23-23", cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="StateApplyingContext.cs"];
m43_1 [label="transaction == null", span="27-27", cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="StateApplyingContext.cs"];
m43_3 [label="Transaction = transaction", span="29-29", cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="StateApplyingContext.cs"];
m43_2 [label="throw new ArgumentNullException(''transaction'');", span="27-27", cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="StateApplyingContext.cs"];
m43_4 [label="Exit HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", span="23-23", cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="StateApplyingContext.cs"];
m43_6 [label="HangFire.Common.States.StateApplyingContext", span="", file="StateApplyingContext.cs"];
m44_15 [label="Entry HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", span="62-62", cluster="HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", file="StateChangingContext.cs"];
m44_16 [label="return JobHelper.FromJson<T>(Connection.Jobs.GetParameter(\r\n                JobId, name));", span="64-65", cluster="HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", color=green, community=0, file="StateChangingContext.cs"];
m44_17 [label="Exit HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", span="62-62", cluster="HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", file="StateChangingContext.cs"];
m44_10 [label="Entry HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", span="57-57", cluster="HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", file="StateChangingContext.cs"];
m44_11 [label="Connection.Jobs.SetParameter(JobId, name, JobHelper.ToJson(value))", span="59-59", cluster="HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", color=green, community=0, file="StateChangingContext.cs"];
m44_12 [label="Exit HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", span="57-57", cluster="HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", file="StateChangingContext.cs"];
m44_13 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="StateChangingContext.cs"];
m44_18 [label="Entry HangFire.Storage.IPersistentJob.GetParameter(string, string)", span="8-8", cluster="HangFire.Storage.IPersistentJob.GetParameter(string, string)", file="StateChangingContext.cs"];
m44_19 [label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="28-28", cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="StateChangingContext.cs"];
m44_14 [label="Entry HangFire.Storage.IPersistentJob.SetParameter(string, string, string)", span="7-7", cluster="HangFire.Storage.IPersistentJob.SetParameter(string, string, string)", file="StateChangingContext.cs"];
m44_0 [label="Entry HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", span="25-25", cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs"];
m44_1 [label="candidateState == null", span="32-32", cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs"];
m44_3 [label="connection == null", span="33-33", cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs"];
m44_5 [label="CandidateState = candidateState", span="35-35", cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs"];
m44_6 [label="CurrentState = currentState", span="36-36", cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs"];
m44_7 [label="Connection = connection", span="37-37", cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs"];
m44_2 [label="throw new ArgumentNullException(''candidateState'');", span="32-32", cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs"];
m44_4 [label="throw new ArgumentNullException(''connection'');", span="33-33", cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs"];
m44_8 [label="Exit HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", span="25-25", cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="StateChangingContext.cs"];
m44_20 [label="HangFire.Common.States.StateChangingContext", span="", file="StateChangingContext.cs"];
m46_50 [label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30", cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="StateSteps.cs"];
m46_32 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="StateSteps.cs"];
m46_59 [label="Entry Unk.GetNextOccurrence", span="", cluster="Unk.GetNextOccurrence", file="StateSteps.cs"];
m46_53 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="StateSteps.cs"];
m46_54 [label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="55-55", cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="StateSteps.cs"];
m46_60 [label="Entry HangFire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="61-61", cluster="HangFire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="StateSteps.cs"];
m46_55 [label="Entry HangFire.States.EnqueuedState.EnqueuedState()", span="31-31", cluster="HangFire.States.EnqueuedState.EnqueuedState()", file="StateSteps.cs"];
m46_56 [label="Entry HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", span="41-41", cluster="HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="StateSteps.cs"];
m46_26 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="StateSteps.cs"];
m46_52 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="StateSteps.cs"];
m46_28 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="StateSteps.cs"];
m46_29 [label="Entry HangFire.JobStorage.GetConnection()", span="56-56", cluster="HangFire.JobStorage.GetConnection()", file="StateSteps.cs"];
m46_57 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StateSteps.cs"];
m46_31 [label="Entry HangFire.Storage.IStorageConnection.GetAllItemsFromSet(string)", span="55-55", cluster="HangFire.Storage.IStorageConnection.GetAllItemsFromSet(string)", file="StateSteps.cs"];
m46_33 [label="Entry HangFire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64", cluster="HangFire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="StateSteps.cs"];
m46_12 [label="Entry HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", span="51-51", cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="StateSteps.cs"];
m46_13 [label="_dateTimeProvider.CurrentDateTime.Second != 0", span="53-53", cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="StateSteps.cs"];
m46_14 [label="cancellationToken.WaitHandle.WaitOne(TimeSpan.FromSeconds(1))", span="55-55", cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="StateSteps.cs"];
m46_16 [label="var connection = _storage.GetConnection()", span="59-59", cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="StateSteps.cs"];
m46_15 [label="cancellationToken.ThrowIfCancellationRequested()", span="56-56", cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="StateSteps.cs"];
m46_17 [label="connection.AcquireDistributedLock(''recurring-jobs:lock'', LockTimeout)", span="60-60", cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="StateSteps.cs"];
m46_18 [label="var recurringJobIds = connection.GetAllItemsFromSet(''recurring-jobs'')", span="62-62", cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="StateSteps.cs"];
m46_20 [label="var recurringJob = connection.GetAllEntriesFromHash(\r\n                        String.Format(''recurring-job:{0}'', recurringJobId))", span="66-67", cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="StateSteps.cs"];
m46_22 [label="TryScheduleJob(connection, recurringJobId, recurringJob)", span="76-76", cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="StateSteps.cs"];
m46_19 [label=recurringJobIds, span="64-64", cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="StateSteps.cs"];
m46_24 [label="Logger.WarnFormat(''Recurring job '{0}' can not be scheduled due to job load exception.'', ex, recurringJobId)", span="80-80", cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="StateSteps.cs"];
m46_21 [label="recurringJob == null", span="69-69", cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="StateSteps.cs"];
m46_23 [label=JobLoadException, span="78-78", cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="StateSteps.cs"];
m46_25 [label="Exit HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", span="51-51", cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", file="StateSteps.cs"];
m46_34 [label="Entry HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", span="87-87", cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="StateSteps.cs"];
m46_36 [label="var serializedJob = JobHelper.FromJson<InvocationData>(recurringJob[''Job''])", span="89-89", cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="StateSteps.cs"];
m46_38 [label="var cron = recurringJob[''Cron'']", span="91-91", cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="StateSteps.cs"];
m46_41 [label="recurringJob.ContainsKey(''NextExecution'')", span="96-96", cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="StateSteps.cs"];
m46_42 [label="var nextExecution = JobHelper.FromStringTimestamp(recurringJob[''NextExecution''])", span="98-98", cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="StateSteps.cs"];
m46_46 [label="connection.SetRangeInHash(\r\n                        String.Format(''recurring-job:{0}'', recurringJobId),\r\n                        new Dictionary<string, string>\r\n                        {\r\n                            { ''LastExecution'', JobHelper.ToStringTimestamp(currentTime) },\r\n                            { ''LastJobId'', jobId },\r\n                            { ''NextExecution'', JobHelper.ToStringTimestamp(_dateTimeProvider.GetNextOccurrence(cronSchedule)) }\r\n                        })", span="105-112", cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="StateSteps.cs"];
m46_48 [label="connection.SetRangeInHash(\r\n                    String.Format(''recurring-job:{0}'', recurringJobId),\r\n                    new Dictionary<string, string>\r\n                    {\r\n                        { ''NextExecution'', JobHelper.ToStringTimestamp(nextExecution) }\r\n                    })", span="119-124", cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="StateSteps.cs"];
m46_37 [label="var job = serializedJob.Deserialize()", span="90-90", cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="StateSteps.cs"];
m46_45 [label="var jobId = _client.Create(job, state)", span="103-103", cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="StateSteps.cs"];
m46_39 [label="var cronSchedule = CrontabSchedule.Parse(cron)", span="92-92", cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="StateSteps.cs"];
m46_40 [label="var currentTime = _dateTimeProvider.CurrentDateTime", span="94-94", cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="StateSteps.cs"];
m46_47 [label="var nextExecution = _dateTimeProvider.GetNextOccurrence(cronSchedule)", span="117-117", cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="StateSteps.cs"];
m46_43 [label="nextExecution <= currentTime", span="100-100", cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="StateSteps.cs"];
m46_44 [label="var state = new EnqueuedState { Reason = ''Triggered by recurring job scheduler'' }", span="102-102", cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="StateSteps.cs"];
m46_49 [label="Exit HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", span="87-87", cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="StateSteps.cs"];
m46_58 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="StateSteps.cs"];
m46_61 [label="Entry HangFire.Server.RecurringJobScheduler.ToString()", span="128-128", cluster="HangFire.Server.RecurringJobScheduler.ToString()", file="StateSteps.cs"];
m46_62 [label="return ''Recurring Job Scheduler'';", span="130-130", cluster="HangFire.Server.RecurringJobScheduler.ToString()", file="StateSteps.cs"];
m46_63 [label="Exit HangFire.Server.RecurringJobScheduler.ToString()", span="128-128", cluster="HangFire.Server.RecurringJobScheduler.ToString()", file="StateSteps.cs"];
m46_35 [label="Entry Unk.WarnFormat", span="", cluster="Unk.WarnFormat", file="StateSteps.cs"];
m46_27 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="StateSteps.cs"];
m46_51 [label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38", cluster="HangFire.Storage.InvocationData.Deserialize()", file="StateSteps.cs"];
m46_0 [label="Entry HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", span="37-37", cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="StateSteps.cs"];
m46_1 [label="storage == null", span="42-42", cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="StateSteps.cs"];
m46_3 [label="client == null", span="43-43", cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="StateSteps.cs"];
m46_5 [label="dateTimeProvider == null", span="44-44", cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="StateSteps.cs"];
m46_7 [label="_storage = storage", span="46-46", cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="StateSteps.cs"];
m46_8 [label="_client = client", span="47-47", cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="StateSteps.cs"];
m46_9 [label="_dateTimeProvider = dateTimeProvider", span="48-48", cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="StateSteps.cs"];
m46_2 [label="throw new ArgumentNullException(''storage'');", span="42-42", cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="StateSteps.cs"];
m46_4 [label="throw new ArgumentNullException(''client'');", span="43-43", cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="StateSteps.cs"];
m46_6 [label="throw new ArgumentNullException(''dateTimeProvider'');", span="44-44", cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="StateSteps.cs"];
m46_10 [label="Exit HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", span="37-37", cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", file="StateSteps.cs"];
m46_30 [label="Entry HangFire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", span="28-28", cluster="HangFire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", file="StateSteps.cs"];
m46_64 [label="HangFire.Server.RecurringJobScheduler", span="", file="StateSteps.cs"];
m47_3 [label="Entry HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="30-30", cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="StatisticsHistoryFilterAttribute.cs"];
m47_4 [label="var transaction = context.Connection.CreateWriteTransaction()", span="32-32", cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="StatisticsHistoryFilterAttribute.cs"];
m47_5 [label="context.CandidateState.StateName == SucceededState.Name", span="34-34", cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="StatisticsHistoryFilterAttribute.cs"];
m47_8 [label="context.CandidateState.StateName == FailedState.Name", span="48-48", cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="StatisticsHistoryFilterAttribute.cs"];
m47_6 [label="transaction.IncrementCounter(\r\n                        String.Format(\r\n                            ''stats:succeeded:{0}'',\r\n                            DateTime.UtcNow.ToString(''yyyy-MM-dd'')),\r\n                        DateTime.UtcNow.AddMonths(1) - DateTime.UtcNow)", span="36-40", cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=green, community=1, file="StatisticsHistoryFilterAttribute.cs"];
m47_7 [label="transaction.IncrementCounter(\r\n                        String.Format(\r\n                            ''stats:succeeded:{0}'',\r\n                            DateTime.UtcNow.ToString(''yyyy-MM-dd-HH'')),\r\n                        TimeSpan.FromDays(1))", span="42-46", cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=green, community=1, file="StatisticsHistoryFilterAttribute.cs"];
m47_9 [label="transaction.IncrementCounter(\r\n                        String.Format(\r\n                            ''stats:failed:{0}'', \r\n                            DateTime.UtcNow.ToString(''yyyy-MM-dd'')),\r\n                        DateTime.UtcNow.AddMonths(1) - DateTime.UtcNow)", span="50-54", cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=green, community=1, file="StatisticsHistoryFilterAttribute.cs"];
m47_10 [label="transaction.IncrementCounter(\r\n                        String.Format(\r\n                            ''stats:failed:{0}'',\r\n                            DateTime.UtcNow.ToString(''yyyy-MM-dd-HH'')),\r\n                        TimeSpan.FromDays(1))", span="56-60", cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=green, community=1, file="StatisticsHistoryFilterAttribute.cs"];
m47_11 [label="transaction.Commit()", span="63-63", cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="StatisticsHistoryFilterAttribute.cs"];
m47_12 [label="Exit HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="30-30", cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="StatisticsHistoryFilterAttribute.cs"];
m47_17 [label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="18-18", cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="StatisticsHistoryFilterAttribute.cs"];
m47_14 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="StatisticsHistoryFilterAttribute.cs"];
m47_13 [label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="8-8", cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="StatisticsHistoryFilterAttribute.cs"];
m47_0 [label="Entry HangFire.Filters.StatisticsHistoryFilterAttribute.StatisticsHistoryFilterAttribute()", span="25-25", cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.StatisticsHistoryFilterAttribute()", file="StatisticsHistoryFilterAttribute.cs"];
m47_1 [label="Order = 30", span="27-27", cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.StatisticsHistoryFilterAttribute()", file="StatisticsHistoryFilterAttribute.cs"];
m47_2 [label="Exit HangFire.Filters.StatisticsHistoryFilterAttribute.StatisticsHistoryFilterAttribute()", span="25-25", cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.StatisticsHistoryFilterAttribute()", file="StatisticsHistoryFilterAttribute.cs"];
m47_19 [label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="13-13", cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="StatisticsHistoryFilterAttribute.cs"];
m47_18 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="StatisticsHistoryFilterAttribute.cs"];
m47_16 [label="Entry System.DateTime.AddMonths(int)", span="0-0", cluster="System.DateTime.AddMonths(int)", file="StatisticsHistoryFilterAttribute.cs"];
m47_20 [label="HangFire.Filters.StatisticsHistoryFilterAttribute", span="", file="StatisticsHistoryFilterAttribute.cs"];
m48_0 [label="Entry HangFire.States.SucceededState.GetProperties(HangFire.Common.JobMethod)", span="30-30", cluster="HangFire.States.SucceededState.GetProperties(HangFire.Common.JobMethod)", file="SucceededState.cs"];
m48_1 [label="return new Dictionary<string, string>\r\n                {\r\n                    { ''SucceededAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) }\r\n                };", span="32-35", cluster="HangFire.States.SucceededState.GetProperties(HangFire.Common.JobMethod)", file="SucceededState.cs"];
m48_2 [label="Exit HangFire.States.SucceededState.GetProperties(HangFire.Common.JobMethod)", span="30-30", cluster="HangFire.States.SucceededState.GetProperties(HangFire.Common.JobMethod)", file="SucceededState.cs"];
m48_5 [label="Entry HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="40-40", cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="SucceededState.cs"];
m48_6 [label="context.Transaction.Jobs.Expire(context.JobId, JobExpirationTimeout)", span="43-43", cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", color=red, community=0, file="SucceededState.cs"];
m48_7 [label="context.Transaction.Counters.Increment(''stats:succeeded'')", span="44-44", cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", color=red, community=0, file="SucceededState.cs"];
m48_8 [label="Exit HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="40-40", cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="SucceededState.cs"];
m48_16 [label="Entry HangFire.Storage.IWriteOnlyPersistentJob.Persist(string)", span="8-8", cluster="HangFire.Storage.IWriteOnlyPersistentJob.Persist(string)", file="SucceededState.cs"];
m48_10 [label="Entry HangFire.Storage.IWriteOnlyPersistentCounter.Increment(string)", span="6-6", cluster="HangFire.Storage.IWriteOnlyPersistentCounter.Increment(string)", file="SucceededState.cs"];
m48_15 [label="Entry HangFire.Storage.IWriteOnlyPersistentCounter.Decrement(string)", span="9-9", cluster="HangFire.Storage.IWriteOnlyPersistentCounter.Decrement(string)", file="SucceededState.cs"];
m48_9 [label="Entry HangFire.Storage.IWriteOnlyPersistentJob.Expire(string, System.TimeSpan)", span="7-7", cluster="HangFire.Storage.IWriteOnlyPersistentJob.Expire(string, System.TimeSpan)", file="SucceededState.cs"];
m48_11 [label="Entry HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", span="47-47", cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="SucceededState.cs"];
m48_12 [label="context.Transaction.Counters.Decrement(''stats:succeeded'')", span="49-49", cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", color=red, community=0, file="SucceededState.cs"];
m48_13 [label="context.Transaction.Jobs.Persist(context.JobId)", span="50-50", cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", color=red, community=0, file="SucceededState.cs"];
m48_14 [label="Exit HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", span="47-47", cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="SucceededState.cs"];
m48_4 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="SucceededState.cs"];
m49_9 [label="Entry HangFire.Storage.IWriteOnlyPersistentList.Remove(string, string)", span="5-5", cluster="HangFire.Storage.IWriteOnlyPersistentList.Remove(string, string)", file="SucceededStateHandler.cs"];
m49_4 [label="Entry HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="28-28", cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", file="SucceededStateHandler.cs"];
m49_5 [label="Entry HangFire.Storage.IWriteOnlyPersistentList.Trim(string, int, int)", span="7-7", cluster="HangFire.Storage.IWriteOnlyPersistentList.Trim(string, int, int)", file="SucceededStateHandler.cs"];
m49_6 [label="Entry HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="14-14", cluster="HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="SucceededStateHandler.cs"];
m49_7 [label="context.Transaction.Lists.Remove(''succeeded'', context.JobId)", span="16-16", cluster="HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", color=red, community=0, file="SucceededStateHandler.cs"];
m49_8 [label="Exit HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="14-14", cluster="HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="SucceededStateHandler.cs"];
m49_0 [label="Entry HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="8-8", cluster="HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="SucceededStateHandler.cs"];
m49_1 [label="context.Transaction.InsertToList(''succeeded'', context.JobId)", span="10-10", cluster="HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", color=green, community=1, file="SucceededStateHandler.cs"];
m49_2 [label="context.Transaction.TrimList(''succeeded'', 0, 99)", span="11-11", cluster="HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", color=red, community=0, file="SucceededStateHandler.cs"];
m49_3 [label="Exit HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="8-8", cluster="HangFire.Redis.States.SucceededStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="SucceededStateHandler.cs"];
m50_3 [label="Entry Unk.>", span="", cluster="Unk.>", file="SucceededStateHandlerFacts.cs"];
m50_8 [label="Entry HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", span="20-20", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="SucceededStateHandlerFacts.cs"];
m50_9 [label="var connection = new Mock<IStorageConnection>()", span="22-22", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=green, community=0, file="SucceededStateHandlerFacts.cs"];
m50_10 [label="var job = Job.FromExpression(() => TestMethod())", span="23-23", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=green, community=0, file="SucceededStateHandlerFacts.cs"];
m50_13 [label="var createContext = new CreateContext(\r\n                connection.Object, stateMachineFactory.Object, job, state.Object)", span="27-28", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=green, community=0, file="SucceededStateHandlerFacts.cs"];
m50_11 [label="var state = new Mock<IState>()", span="24-24", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=green, community=0, file="SucceededStateHandlerFacts.cs"];
m50_12 [label="var stateMachineFactory = new Mock<IStateMachineFactory>()", span="25-25", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=green, community=0, file="SucceededStateHandlerFacts.cs"];
m50_14 [label="var context = new CreatingContext(createContext)", span="29-29", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=green, community=0, file="SucceededStateHandlerFacts.cs"];
m50_15 [label="Assert.False(context.Canceled)", span="31-31", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", color=green, community=0, file="SucceededStateHandlerFacts.cs"];
m50_16 [label="Exit HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", span="20-20", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_CanceledProperty_IsFalseByDefault()", file="SucceededStateHandlerFacts.cs"];
m50_20 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="SucceededStateHandlerFacts.cs"];
m50_19 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="SucceededStateHandlerFacts.cs"];
m50_22 [label="Entry Unk.False", span="", cluster="Unk.False", file="SucceededStateHandlerFacts.cs"];
m50_7 [label="Entry HangFire.Client.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", span="24-24", cluster="HangFire.Client.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", file="SucceededStateHandlerFacts.cs"];
m50_18 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="SucceededStateHandlerFacts.cs"];
m50_0 [label="Entry HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="13-13", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="SucceededStateHandlerFacts.cs"];
m50_1 [label="Assert.Throws<NullReferenceException>(\r\n                () => new CreatingContext(null))", span="15-16", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", color=green, community=0, file="SucceededStateHandlerFacts.cs"];
m50_2 [label="Exit HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="13-13", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="SucceededStateHandlerFacts.cs"];
m50_26 [label="Entry HangFire.Core.Tests.Client.CreatingContextFacts.TestMethod()", span="34-34", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.TestMethod()", file="SucceededStateHandlerFacts.cs"];
m50_27 [label="Exit HangFire.Core.Tests.Client.CreatingContextFacts.TestMethod()", span="34-34", cluster="HangFire.Core.Tests.Client.CreatingContextFacts.TestMethod()", file="SucceededStateHandlerFacts.cs"];
m50_17 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="SucceededStateHandlerFacts.cs"];
m50_23 [label="Entry lambda expression", span="23-23", cluster="lambda expression", file="SucceededStateHandlerFacts.cs"];
m50_4 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="SucceededStateHandlerFacts.cs"];
m50_5 [label="new CreatingContext(null)", span="16-16", cluster="lambda expression", color=green, community=0, file="SucceededStateHandlerFacts.cs"];
m50_6 [label="Exit lambda expression", span="16-16", cluster="lambda expression", file="SucceededStateHandlerFacts.cs"];
m50_24 [label="TestMethod()", span="23-23", cluster="lambda expression", color=green, community=0, file="SucceededStateHandlerFacts.cs"];
m50_25 [label="Exit lambda expression", span="23-23", cluster="lambda expression", file="SucceededStateHandlerFacts.cs"];
m50_21 [label="Entry CreateContext.cstr", span="", cluster="CreateContext.cstr", file="SucceededStateHandlerFacts.cs"];
m51_0 [label="Entry Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="24-24", cluster="Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
m51_1 [label="Exit Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="24-24", cluster="Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Worker.cs"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n4  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n5  [key=2, style=dotted];
n2 -> n6  [key=2, style=dotted];
n4 -> n7  [key=0, style=solid];
n4 -> n10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.JobMethod"];
n4 -> n11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.JobMethod"];
n4 -> n13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.JobMethod"];
n4 -> n0  [key=3, color=darkorchid, style=bold, label="Parameter variable HangFire.Common.JobMethod method"];
n4 -> n38  [key=3, color=darkorchid, style=bold, label="Parameter variable HangFire.Common.JobMethod method"];
n4 -> n14  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetQueue"];
n3 -> n0  [key=0, style=bold, color=blue];
n7 -> n8  [key=0, style=solid];
n7 -> n9  [key=0, style=solid];
n10 -> n11  [key=0, style=solid];
n10 -> n12  [key=0, style=solid];
n11 -> n12  [key=0, style=solid];
n11 -> n19  [key=2, style=dotted];
n11 -> n20  [key=2, style=dotted];
n11 -> n21  [key=2, style=dotted];
n11 -> n14  [key=1, style=dashed, color=darkseagreen4, label=attribute];
n13 -> n14  [key=0, style=solid];
n13 -> n19  [key=2, style=dotted];
n13 -> n20  [key=2, style=dotted];
n13 -> n21  [key=2, style=dotted];
n8 -> n17  [key=0, style=solid];
n8 -> n18  [key=2, style=dotted];
n9 -> n10  [key=0, style=solid];
n9 -> n12  [key=1, style=dashed, color=darkseagreen4, label=attribute];
n9 -> n14  [key=1, style=dashed, color=darkseagreen4, label=attribute];
n9 -> n9  [key=3, color=darkorchid, style=bold, label="Local variable HangFire.QueueAttribute attribute"];
n12 -> n13  [key=0, style=solid];
n12 -> n14  [key=0, style=solid];
n14 -> n15  [key=0, style=solid];
n14 -> n22  [key=2, style=dotted];
n14 -> n16  [key=1, style=dashed, color=darkseagreen4, label=queueName];
n15 -> n16  [key=0, style=solid];
n15 -> n23  [key=2, style=dotted];
n16 -> n17  [key=0, style=solid];
n23 -> n24  [key=0, style=solid];
n23 -> n26  [key=1, style=dashed, color=darkseagreen4, label=string];
n23 -> n27  [key=1, style=dashed, color=darkseagreen4, label=string];
n23 -> n14  [key=3, color=darkorchid, style=bold, label="Parameter variable string queue"];
n17 -> n4  [key=0, style=bold, color=blue];
n24 -> n25  [key=0, style=solid];
n24 -> n26  [key=0, style=solid];
n24 -> n29  [key=2, style=dotted];
n26 -> n27  [key=0, style=solid];
n26 -> n28  [key=0, style=solid];
n26 -> n30  [key=2, style=dotted];
n27 -> n28  [key=0, style=solid];
n27 -> n31  [key=2, style=dotted];
n27 -> n32  [key=2, style=dotted];
n25 -> n28  [key=0, style=solid];
n25 -> n18  [key=2, style=dotted];
n28 -> n23  [key=0, style=bold, color=blue];
n33 -> n34  [key=0, style=solid];
n33 -> n35  [key=1, style=dashed, color=red, label="HangFire.Common.States.StateApplyingContext"];
n34 -> n35  [key=0, style=solid, color=red];
n34 -> n4  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid, color=red];
n35 -> n37  [key=2, style=dotted, color=red];
n36 -> n33  [key=0, style=bold, color=blue];
n38 -> n39  [key=0, style=solid];
n38 -> n41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.JobMethod"];
n38 -> n9  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetQueue"];
n38 -> n4  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetQueue"];
n39 -> n40  [key=0, style=solid];
n39 -> n41  [key=0, style=solid];
n41 -> n42  [key=0, style=solid];
n41 -> n4  [key=2, style=dotted];
n40 -> n42  [key=0, style=solid];
n42 -> n38  [key=0, style=bold, color=blue];
m0_5 -> m0_6  [key=0, style=solid, color=red];
m0_6 -> m0_7  [key=0, style=solid, color=red];
m0_6 -> m0_8  [key=2, style=dotted, color=red];
m0_7 -> m0_5  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid, color=red];
m0_1 -> m0_2  [key=0, style=solid, color=red];
m0_1 -> m0_3  [key=2, style=dotted, color=red];
m0_1 -> m0_4  [key=2, style=dotted, color=red];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_0  [key=0, style=bold, color=blue];
m3_2 -> m3_3  [key=0, style=solid];
m3_3 -> m3_2  [key=0, style=bold, color=blue];
m3_6 -> m3_7  [key=0, style=solid];
m3_7 -> m3_6  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_0  [key=0, style=bold, color=blue];
m3_12 -> m3_13  [key=0, style=solid];
m3_13 -> m3_12  [key=0, style=bold, color=blue];
m3_8 -> m3_9  [key=0, style=solid];
m3_9 -> m3_8  [key=0, style=bold, color=blue];
m3_4 -> m3_5  [key=0, style=solid];
m3_5 -> m3_4  [key=0, style=bold, color=blue];
m3_10 -> m3_11  [key=0, style=solid];
m3_11 -> m3_10  [key=0, style=bold, color=blue];
m3_14 -> m3_15  [key=0, style=solid];
m3_15 -> m3_14  [key=0, style=bold, color=blue];
m4_17 -> m4_18  [key=0, style=solid];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_21  [key=2, style=dotted];
m4_18 -> m4_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_22  [key=2, style=dotted];
m4_20 -> m4_17  [key=0, style=bold, color=blue];
m4_48 -> m4_94  [key=0, style=solid];
m4_94 -> m4_95  [key=0, style=solid];
m4_94 -> m4_34  [key=2, style=dotted];
m4_95 -> m4_48  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_7  [key=2, style=dotted];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_8  [key=2, style=dotted];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> n5  [key=2, style=dotted];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_10  [key=2, style=dotted];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_11  [key=2, style=dotted];
m4_5 -> m4_12  [key=2, style=dotted];
m4_5 -> m4_13  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_6 -> m4_0  [key=0, style=bold, color=blue];
m4_72 -> m4_96  [key=0, style=solid];
m4_96 -> m4_97  [key=0, style=solid];
m4_96 -> m4_100  [key=2, style=dotted];
m4_96 -> m4_98  [key=1, style=dashed, color=darkseagreen4, label=mock];
m4_97 -> m4_98  [key=0, style=solid];
m4_97 -> m4_101  [key=2, style=dotted];
m4_98 -> m4_99  [key=0, style=solid];
m4_99 -> m4_72  [key=0, style=bold, color=blue];
m4_62 -> m4_63  [key=0, style=solid];
m4_63 -> m4_64  [key=0, style=solid];
m4_63 -> m4_72  [key=2, style=dotted];
m4_63 -> m4_69  [key=1, style=dashed, color=darkseagreen4, label=component1];
m4_64 -> m4_65  [key=0, style=solid];
m4_64 -> m4_11  [key=2, style=dotted];
m4_64 -> m4_73  [key=2, style=dotted];
m4_64 -> m4_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_64 -> m4_79  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_69 -> m4_70  [key=0, style=solid];
m4_69 -> m4_74  [key=2, style=dotted];
m4_69 -> m4_50  [key=2, style=dotted];
m4_69 -> m4_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_65 -> m4_66  [key=0, style=solid];
m4_65 -> m4_72  [key=2, style=dotted];
m4_65 -> m4_70  [key=1, style=dashed, color=darkseagreen4, label=component2];
m4_66 -> m4_67  [key=0, style=solid];
m4_66 -> m4_11  [key=2, style=dotted];
m4_66 -> m4_73  [key=2, style=dotted];
m4_66 -> m4_82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_66 -> m4_85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_70 -> m4_71  [key=0, style=solid];
m4_70 -> m4_74  [key=2, style=dotted];
m4_70 -> m4_50  [key=2, style=dotted];
m4_70 -> m4_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_67 -> m4_68  [key=0, style=solid];
m4_67 -> m4_48  [key=2, style=dotted];
m4_68 -> m4_69  [key=0, style=solid];
m4_68 -> m4_49  [key=2, style=dotted];
m4_71 -> m4_62  [key=0, style=bold, color=blue];
m4_35 -> m4_36  [key=0, style=solid];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_21  [key=2, style=dotted];
m4_36 -> m4_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_22  [key=2, style=dotted];
m4_38 -> m4_35  [key=0, style=bold, color=blue];
m4_91 -> m4_92  [key=0, style=solid];
m4_13 -> m4_14  [key=0, style=solid];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> m4_16  [key=2, style=dotted];
m4_15 -> m4_13  [key=0, style=bold, color=blue];
m4_23 -> m4_24  [key=0, style=solid];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_26  [key=2, style=dotted];
m4_25 -> m4_23  [key=0, style=bold, color=blue];
m4_31 -> m4_32  [key=0, style=solid];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_34  [key=2, style=dotted];
m4_33 -> m4_31  [key=0, style=bold, color=blue];
m4_39 -> m4_40  [key=0, style=solid];
m4_40 -> m4_41  [key=0, style=solid];
m4_40 -> m4_34  [key=2, style=dotted];
m4_41 -> m4_39  [key=0, style=bold, color=blue];
m4_51 -> m4_52  [key=0, style=solid];
m4_58 -> m4_59  [key=0, style=solid];
m4_52 -> m4_53  [key=0, style=solid];
m4_52 -> m4_21  [key=2, style=dotted];
m4_52 -> m4_54  [key=2, style=dotted];
m4_52 -> m4_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_53 -> m4_51  [key=0, style=bold, color=blue];
m4_55 -> m4_56  [key=0, style=solid];
m4_56 -> m4_57  [key=0, style=solid];
m4_57 -> m4_55  [key=0, style=bold, color=blue];
m4_59 -> m4_60  [key=0, style=solid];
m4_59 -> m4_21  [key=2, style=dotted];
m4_59 -> m4_61  [key=2, style=dotted];
m4_60 -> m4_58  [key=0, style=bold, color=blue];
m4_75 -> m4_76  [key=0, style=solid];
m4_79 -> m4_80  [key=0, style=solid];
m4_82 -> m4_83  [key=0, style=solid];
m4_85 -> m4_86  [key=0, style=solid];
m4_88 -> m4_89  [key=0, style=solid];
m4_76 -> m4_77  [key=0, style=solid];
m4_76 -> m4_21  [key=2, style=dotted];
m4_76 -> m4_78  [key=2, style=dotted];
m4_77 -> m4_75  [key=0, style=bold, color=blue];
m4_80 -> m4_81  [key=0, style=solid];
m4_80 -> m4_49  [key=2, style=dotted];
m4_81 -> m4_79  [key=0, style=bold, color=blue];
m4_83 -> m4_84  [key=0, style=solid];
m4_83 -> m4_21  [key=2, style=dotted];
m4_83 -> m4_78  [key=2, style=dotted];
m4_84 -> m4_82  [key=0, style=bold, color=blue];
m4_86 -> m4_87  [key=0, style=solid];
m4_86 -> m4_49  [key=2, style=dotted];
m4_87 -> m4_85  [key=0, style=bold, color=blue];
m4_89 -> m4_90  [key=0, style=solid];
m4_89 -> m4_21  [key=2, style=dotted];
m4_89 -> m4_78  [key=2, style=dotted];
m4_90 -> m4_88  [key=0, style=bold, color=blue];
m4_92 -> m4_93  [key=0, style=solid];
m4_92 -> m4_21  [key=2, style=dotted];
m4_92 -> m4_78  [key=2, style=dotted];
m4_93 -> m4_91  [key=0, style=bold, color=blue];
m4_42 -> m4_43  [key=0, style=solid];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_48  [key=2, style=dotted];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_49  [key=2, style=dotted];
m4_45 -> m4_46  [key=0, style=solid];
m4_45 -> m4_50  [key=2, style=dotted];
m4_45 -> m4_51  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_46 -> m4_47  [key=0, style=solid];
m4_46 -> m4_50  [key=2, style=dotted];
m4_46 -> m4_58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_47 -> m4_42  [key=0, style=bold, color=blue];
m4_27 -> m4_28  [key=0, style=solid];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_21  [key=2, style=dotted];
m4_28 -> m4_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_29 -> m4_30  [key=0, style=solid];
m4_29 -> m4_22  [key=2, style=dotted];
m4_30 -> m4_27  [key=0, style=bold, color=blue];
m4_102 -> m4_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts"];
m4_102 -> m4_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts"];
m4_102 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts"];
m4_102 -> m4_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts"];
m4_102 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts"];
m4_102 -> m4_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts"];
m4_102 -> m4_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts"];
m4_102 -> m4_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts"];
m4_102 -> m4_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts"];
m4_102 -> m4_36  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts"];
m4_102 -> m4_40  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts"];
m4_102 -> m4_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts"];
m4_102 -> m4_45  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts"];
m4_102 -> m4_52  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts"];
m4_102 -> m4_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts"];
m4_102 -> m4_46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts"];
m4_102 -> m4_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts"];
m4_102 -> m4_65  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts"];
m4_102 -> m4_67  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts"];
m4_102 -> m4_94  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts"];
m4_102 -> m4_97  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.BackgroundProcessServerFacts"];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_0  [key=0, style=bold, color=blue];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_2  [key=0, style=bold, color=blue];
m5_6 -> m5_7  [key=0, style=solid];
m5_7 -> m5_6  [key=0, style=bold, color=blue];
m5_4 -> m5_5  [key=0, style=solid];
m5_5 -> m5_4  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_0  [key=0, style=bold, color=blue];
m6_2 -> m6_3  [key=0, style=solid];
m6_3 -> m6_2  [key=0, style=bold, color=blue];
m6_4 -> m6_5  [key=0, style=solid];
m6_5 -> m6_4  [key=0, style=bold, color=blue];
m7_1 -> n37  [key=0, style=bold, color=blue];
m8_2 -> m8_3  [key=0, style=solid];
m8_3 -> m8_2  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_0  [key=0, style=bold, color=blue];
m8_4 -> m8_5  [key=0, style=solid];
m8_5 -> m8_4  [key=0, style=bold, color=blue];
m9_4 -> m9_5  [key=0, style=solid];
m9_5 -> m9_4  [key=0, style=bold, color=blue];
m9_2 -> m9_3  [key=0, style=solid];
m9_3 -> m9_2  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_0  [key=0, style=bold, color=blue];
m10_6 -> m10_7  [key=0, style=solid, color=green];
m10_7 -> m10_8  [key=0, style=solid, color=green];
m10_7 -> m10_11  [key=2, style=dotted, color=green];
m10_7 -> m10_9  [key=1, style=dashed, color=green, label=date];
m10_8 -> m10_9  [key=0, style=solid, color=green];
m10_8 -> m10_4  [key=2, style=dotted, color=green];
m10_9 -> m10_10  [key=0, style=solid, color=green];
m10_9 -> m10_5  [key=2, style=dotted, color=green];
m10_10 -> m10_6  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid, color=green];
m10_1 -> m10_2  [key=0, style=solid, color=green];
m10_1 -> m10_4  [key=2, style=dotted, color=green];
m10_1 -> m10_0  [key=0, style=bold, color=blue];
m10_2 -> m10_3  [key=0, style=solid, color=green];
m10_2 -> m10_5  [key=2, style=dotted, color=green];
m10_3 -> m10_0  [key=0, style=bold, color=blue];
m10_35 -> m10_36  [key=0, style=solid];
m10_36 -> m10_4  [key=2, style=dotted];
m10_36 -> m10_37  [key=0, style=solid];
m10_37 -> m10_38  [key=0, style=solid];
m10_37 -> m10_34  [key=2, style=dotted];
m10_38 -> m10_35  [key=0, style=bold, color=blue];
m10_30 -> m10_31  [key=0, style=solid];
m10_31 -> m10_4  [key=2, style=dotted];
m10_31 -> m10_32  [key=0, style=solid];
m10_32 -> m10_33  [key=0, style=solid];
m10_32 -> m10_34  [key=2, style=dotted];
m10_33 -> m10_30  [key=0, style=bold, color=blue];
m10_22 -> m10_23  [key=0, style=solid, color=green];
m10_23 -> m10_24  [key=0, style=solid, color=green];
m10_23 -> m10_4  [key=2, style=dotted, color=green];
m10_23 -> m10_11  [key=2, style=dotted, color=green];
m10_23 -> m10_25  [key=1, style=dashed, color=green, label=state];
m10_23 -> m10_26  [key=1, style=dashed, color=green, label=state];
m10_24 -> m10_25  [key=0, style=solid];
m10_24 -> m10_28  [key=2, style=dotted];
m10_24 -> m10_26  [key=1, style=dashed, color=darkseagreen4, label=data];
m10_25 -> m10_5  [key=2, style=dotted];
m10_25 -> m10_26  [key=0, style=solid];
m10_25 -> m10_29  [key=2, style=dotted];
m10_26 -> m10_5  [key=2, style=dotted];
m10_26 -> m10_27  [key=0, style=solid];
m10_26 -> m10_29  [key=2, style=dotted];
m10_27 -> m10_22  [key=0, style=bold, color=blue];
m10_12 -> m10_13  [key=0, style=solid, color=green];
m10_13 -> m10_14  [key=0, style=solid, color=green];
m10_13 -> m10_17  [key=2, style=dotted, color=green];
m10_13 -> m10_18  [key=2, style=dotted, color=green];
m10_13 -> m10_15  [key=1, style=dashed, color=green, label=state];
m10_14 -> m10_15  [key=0, style=solid, color=green];
m10_14 -> m10_19  [key=2, style=dotted, color=green];
m10_14 -> m10_20  [key=2, style=dotted, color=green];
m10_14 -> m10_21  [key=2, style=dotted, color=green];
m10_15 -> m10_16  [key=0, style=solid, color=green];
m10_15 -> m10_19  [key=2, style=dotted, color=green];
m10_15 -> m10_20  [key=2, style=dotted, color=green];
m10_15 -> m10_21  [key=2, style=dotted, color=green];
m10_16 -> m10_12  [key=0, style=bold, color=blue];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_78  [key=2, style=dotted];
m12_2 -> m12_3  [key=0, style=solid];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_79  [key=2, style=dotted];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_80  [key=2, style=dotted];
m12_4 -> m12_81  [key=2, style=dotted];
m12_4 -> m12_6  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_4 -> m12_7  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_4 -> m12_11  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_4 -> m12_17  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_4 -> m12_19  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_4 -> m12_21  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_4 -> m12_23  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_4 -> m12_26  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_4 -> m12_28  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_4 -> m12_37  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_4 -> m12_40  [key=1, style=dashed, color=darkseagreen4, label=job];
m12_5 -> m12_6  [key=0, style=solid];
m12_5 -> m12_8  [key=1, style=dashed, color=darkseagreen4, label=title];
m12_5 -> m12_5  [key=3, color=darkorchid, style=bold, label="Local variable string title"];
m12_6 -> m12_7  [key=0, style=solid];
m12_6 -> m12_8  [key=0, style=solid];
m12_7 -> m12_8  [key=0, style=solid];
m12_7 -> m12_82  [key=2, style=dotted];
m12_11 -> m12_12  [key=0, style=solid];
m12_11 -> m12_16  [key=0, style=solid];
m12_17 -> m12_18  [key=0, style=solid];
m12_17 -> m12_21  [key=0, style=solid];
m12_19 -> m12_20  [key=0, style=solid];
m12_19 -> m12_87  [key=2, style=dotted];
m12_19 -> m12_86  [key=2, style=dotted];
m12_21 -> m12_22  [key=0, style=solid];
m12_21 -> m12_25  [key=0, style=solid];
m12_23 -> m12_24  [key=0, style=solid];
m12_23 -> m12_88  [key=2, style=dotted];
m12_23 -> m12_89  [key=2, style=dotted];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_36  [key=0, style=solid];
m12_28 -> m12_29  [key=0, style=solid];
m12_28 -> m12_35  [key=0, style=solid];
m12_28 -> m12_30  [key=1, style=dashed, color=darkseagreen4, label=property];
m12_37 -> m12_38  [key=0, style=solid];
m12_37 -> m12_77  [key=0, style=solid];
m12_40 -> m12_41  [key=0, style=solid, color=red];
m12_40 -> m12_77  [key=0, style=solid];
m12_40 -> m12_43  [key=1, style=dashed, color=red, label=entry];
m12_40 -> m12_49  [key=1, style=dashed, color=red, label=entry];
m12_40 -> m12_51  [key=1, style=dashed, color=red, label=entry];
m12_40 -> m12_53  [key=1, style=dashed, color=red, label=entry];
m12_40 -> m12_55  [key=1, style=dashed, color=red, label=entry];
m12_40 -> m12_57  [key=1, style=dashed, color=red, label=entry];
m12_40 -> m12_60  [key=1, style=dashed, color=red, label=entry];
m12_40 -> m12_61  [key=1, style=dashed, color=red, label=entry];
m12_40 -> m12_67  [key=1, style=dashed, color=red, label=entry];
m12_8 -> m12_9  [key=0, style=solid];
m12_8 -> m12_8  [key=1, style=dashed, color=darkseagreen4, label=title];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> m12_83  [key=2, style=dotted];
m12_9 -> m12_80  [key=2, style=dotted];
m12_9 -> m12_84  [key=2, style=dotted];
m12_9 -> m12_85  [key=2, style=dotted];
m12_10 -> m12_11  [key=0, style=solid];
m12_10 -> m12_78  [key=2, style=dotted];
m12_12 -> m12_13  [key=0, style=solid];
m12_12 -> m12_78  [key=2, style=dotted];
m12_16 -> m12_17  [key=0, style=solid];
m12_16 -> m12_78  [key=2, style=dotted];
m12_13 -> m12_14  [key=0, style=solid];
m12_13 -> m12_78  [key=2, style=dotted];
m12_14 -> m12_15  [key=0, style=solid];
m12_14 -> m12_86  [key=2, style=dotted];
m12_15 -> m12_77  [key=0, style=solid];
m12_15 -> m12_78  [key=2, style=dotted];
m12_18 -> m12_19  [key=0, style=solid];
m12_18 -> m12_78  [key=2, style=dotted];
m12_20 -> m12_21  [key=0, style=solid];
m12_20 -> m12_78  [key=2, style=dotted];
m12_22 -> m12_23  [key=0, style=solid];
m12_22 -> m12_78  [key=2, style=dotted];
m12_25 -> m12_26  [key=0, style=solid];
m12_25 -> m12_78  [key=2, style=dotted];
m12_24 -> m12_25  [key=0, style=solid];
m12_24 -> m12_78  [key=2, style=dotted];
m12_27 -> m12_28  [key=0, style=solid];
m12_27 -> m12_78  [key=2, style=dotted];
m12_36 -> m12_37  [key=0, style=solid];
m12_36 -> m12_78  [key=2, style=dotted];
m12_29 -> m12_30  [key=0, style=solid];
m12_29 -> m12_78  [key=2, style=dotted];
m12_35 -> m12_36  [key=0, style=solid];
m12_35 -> m12_78  [key=2, style=dotted];
m12_30 -> m12_31  [key=0, style=solid];
m12_30 -> m12_86  [key=2, style=dotted];
m12_30 -> m12_30  [key=1, style=dashed, color=darkseagreen4, label=property];
m12_30 -> m12_33  [key=1, style=dashed, color=darkseagreen4, label=property];
m12_31 -> m12_32  [key=0, style=solid];
m12_31 -> m12_78  [key=2, style=dotted];
m12_33 -> m12_34  [key=0, style=solid];
m12_33 -> m12_86  [key=2, style=dotted];
m12_33 -> m12_33  [key=1, style=dashed, color=darkseagreen4, label=property];
m12_32 -> m12_33  [key=0, style=solid];
m12_32 -> m12_78  [key=2, style=dotted];
m12_34 -> m12_28  [key=0, style=solid];
m12_34 -> m12_78  [key=2, style=dotted];
m12_38 -> m12_39  [key=0, style=solid];
m12_38 -> m12_78  [key=2, style=dotted];
m12_39 -> m12_40  [key=0, style=solid];
m12_39 -> m12_42  [key=1, style=dashed, color=darkseagreen4, label=index];
m12_39 -> m12_45  [key=1, style=dashed, color=darkseagreen4, label=index];
m12_39 -> m12_76  [key=1, style=dashed, color=darkseagreen4, label=index];
m12_39 -> m12_39  [key=3, color=darkorchid, style=bold, label="Local variable int index"];
m12_42 -> m12_43  [key=0, style=solid, color=red];
m12_42 -> m12_44  [key=0, style=solid];
m12_45 -> m12_46  [key=0, style=solid];
m12_45 -> m12_86  [key=2, style=dotted];
m12_76 -> m12_40  [key=0, style=solid];
m12_76 -> m12_76  [key=1, style=dashed, color=darkseagreen4, label=index];
m12_41 -> m12_42  [key=0, style=solid, color=red];
m12_41 -> m12_90  [key=2, style=dotted, color=red];
m12_41 -> m12_47  [key=1, style=dashed, color=red, label=background];
m12_43 -> m12_44  [key=0, style=solid, color=red];
m12_43 -> m12_90  [key=2, style=dotted, color=red];
m12_43 -> m12_47  [key=1, style=dashed, color=red, label=background];
m12_49 -> m12_50  [key=0, style=solid, color=red];
m12_49 -> m12_86  [key=2, style=dotted, color=red];
m12_51 -> m12_52  [key=0, style=solid, color=red];
m12_51 -> m12_92  [key=2, style=dotted, color=red];
m12_51 -> m12_86  [key=2, style=dotted, color=red];
m12_53 -> m12_54  [key=0, style=solid, color=red];
m12_53 -> m12_86  [key=2, style=dotted, color=red];
m12_55 -> m12_56  [key=0, style=solid, color=red];
m12_55 -> m12_59  [key=0, style=solid, color=red];
m12_55 -> m12_93  [key=2, style=dotted, color=red];
m12_57 -> m12_58  [key=0, style=solid, color=red];
m12_57 -> m12_86  [key=2, style=dotted, color=red];
m12_60 -> m12_61  [key=0, style=solid, color=red];
m12_60 -> m12_66  [key=0, style=solid, color=red];
m12_60 -> m12_94  [key=2, style=dotted, color=red];
m12_61 -> m12_62  [key=0, style=solid, color=red];
m12_61 -> m12_95  [key=2, style=dotted, color=red];
m12_61 -> m12_64  [key=1, style=dashed, color=red, label=rendered];
m12_67 -> m12_68  [key=0, style=solid, color=red];
m12_67 -> m12_74  [key=0, style=solid, color=red];
m12_67 -> m12_96  [key=2, style=dotted, color=red];
m12_67 -> m12_97  [key=1, style=dashed, color=red, label="lambda expression"];
m12_67 -> m12_69  [key=1, style=dashed, color=red, label=item];
m12_67 -> m12_72  [key=1, style=dashed, color=red, label=item];
m12_47 -> m12_48  [key=0, style=solid];
m12_47 -> n32  [key=2, style=dotted];
m12_47 -> m12_86  [key=2, style=dotted];
m12_44 -> m12_45  [key=0, style=solid];
m12_44 -> m12_78  [key=2, style=dotted];
m12_46 -> m12_47  [key=0, style=solid];
m12_46 -> m12_78  [key=2, style=dotted];
m12_48 -> m12_49  [key=0, style=solid, color=red];
m12_48 -> m12_78  [key=2, style=dotted];
m12_50 -> m12_51  [key=0, style=solid, color=red];
m12_50 -> m12_78  [key=2, style=dotted];
m12_52 -> m12_53  [key=0, style=solid, color=red];
m12_52 -> m12_78  [key=2, style=dotted];
m12_54 -> m12_55  [key=0, style=solid, color=red];
m12_54 -> m12_78  [key=2, style=dotted];
m12_56 -> m12_57  [key=0, style=solid, color=red];
m12_56 -> m12_78  [key=2, style=dotted];
m12_59 -> m12_60  [key=0, style=solid, color=red];
m12_59 -> m12_78  [key=2, style=dotted];
m12_58 -> m12_59  [key=0, style=solid];
m12_58 -> m12_78  [key=2, style=dotted];
m12_66 -> m12_67  [key=0, style=solid, color=red];
m12_66 -> m12_78  [key=2, style=dotted];
m12_62 -> m12_63  [key=0, style=solid];
m12_62 -> m12_75  [key=0, style=solid];
m12_64 -> m12_65  [key=0, style=solid];
m12_64 -> m12_89  [key=2, style=dotted];
m12_63 -> m12_64  [key=0, style=solid];
m12_63 -> m12_78  [key=2, style=dotted];
m12_75 -> m12_76  [key=0, style=solid];
m12_75 -> m12_78  [key=2, style=dotted];
m12_65 -> m12_75  [key=0, style=solid];
m12_65 -> m12_78  [key=2, style=dotted];
m12_68 -> m12_69  [key=0, style=solid];
m12_68 -> m12_78  [key=2, style=dotted];
m12_74 -> m12_75  [key=0, style=solid];
m12_74 -> m12_78  [key=2, style=dotted];
m12_69 -> m12_70  [key=0, style=solid];
m12_69 -> m12_89  [key=2, style=dotted];
m12_72 -> m12_73  [key=0, style=solid];
m12_72 -> m12_89  [key=2, style=dotted];
m12_70 -> m12_71  [key=0, style=solid];
m12_70 -> m12_78  [key=2, style=dotted];
m12_71 -> m12_72  [key=0, style=solid];
m12_71 -> m12_78  [key=2, style=dotted];
m12_73 -> m12_67  [key=0, style=solid, color=red];
m12_73 -> m12_78  [key=2, style=dotted];
m12_77 -> m12_0  [key=0, style=bold, color=blue];
m12_97 -> m12_98  [key=0, style=solid, color=red];
m12_98 -> m12_99  [key=0, style=solid, color=red];
m12_98 -> m12_98  [key=1, style=dashed, color=red, label="System.Collections.Generic.KeyValuePair<string, string>"];
m12_99 -> m12_97  [key=0, style=bold, color=blue];
m12_100 -> m12_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_49  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_51  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_53  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_57  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_71  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_72  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_73  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m12_100 -> m12_75  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.JobDetailsPage"];
m14_26 -> m14_27  [key=0, style=solid];
m14_26 -> m14_23  [key=3, color=darkorchid, style=bold, label="Parameter variable System.TimeSpan delay"];
m14_26 -> m14_1  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m14_26 -> m14_29  [key=3, color=darkorchid, style=bold, label="method methodReturn string In"];
m14_27 -> m14_28  [key=0, style=solid];
m14_27 -> m14_29  [key=2, style=dotted];
m14_28 -> m14_26  [key=0, style=bold, color=blue];
m14_3 -> m14_4  [key=0, style=solid];
m14_3 -> m14_1  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m14_3 -> m14_6  [key=3, color=darkorchid, style=bold, label="method methodReturn string Async"];
m14_4 -> m14_5  [key=0, style=solid];
m14_4 -> m14_6  [key=2, style=dotted];
m14_5 -> m14_3  [key=0, style=bold, color=blue];
m14_21 -> m14_39  [key=0, style=solid];
m14_39 -> m14_40  [key=0, style=solid];
m14_39 -> m14_41  [key=2, style=dotted];
m14_39 -> m14_42  [key=2, style=dotted];
m14_40 -> m14_21  [key=0, style=bold, color=blue];
m14_6 -> m14_10  [key=0, style=solid];
m14_6 -> m14_13  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m14_6 -> m14_15  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m14_6 -> m14_3  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m14_6 -> m14_1  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m14_6 -> m14_7  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m14_10 -> m14_11  [key=0, style=solid];
m14_10 -> m14_12  [key=0, style=solid];
m14_13 -> m14_14  [key=0, style=solid];
m14_13 -> m14_19  [key=2, style=dotted];
m14_15 -> m14_16  [key=0, style=solid];
m14_15 -> m14_21  [key=2, style=dotted];
m14_15 -> m14_22  [key=2, style=dotted];
m14_11 -> m14_16  [key=0, style=solid];
m14_11 -> n18  [key=2, style=dotted];
m14_12 -> m14_13  [key=0, style=solid];
m14_12 -> m14_18  [key=2, style=dotted];
m14_12 -> m14_15  [key=1, style=dashed, color=darkseagreen4, label=client];
m14_14 -> m14_15  [key=0, style=solid];
m14_14 -> m14_20  [key=2, style=dotted];
m14_16 -> m14_6  [key=0, style=bold, color=blue];
m14_30 -> m14_31  [key=0, style=solid];
m14_30 -> m14_29  [key=3, color=darkorchid, style=bold, label="method methodReturn string In"];
m14_31 -> m14_32  [key=0, style=solid];
m14_31 -> m14_29  [key=2, style=dotted];
m14_32 -> m14_30  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid];
m14_0 -> m14_3  [key=3, color=darkorchid, style=bold, label="method methodReturn string Async"];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_3  [key=2, style=dotted];
m14_2 -> m14_0  [key=0, style=bold, color=blue];
m14_7 -> m14_8  [key=0, style=solid];
m14_7 -> m14_6  [key=3, color=darkorchid, style=bold, label="method methodReturn string Async"];
m14_8 -> m14_9  [key=0, style=solid];
m14_8 -> m14_6  [key=2, style=dotted];
m14_9 -> m14_7  [key=0, style=bold, color=blue];
m14_29 -> m14_33  [key=0, style=solid];
m14_29 -> m14_34  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m14_29 -> m14_35  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m14_29 -> m14_26  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m14_29 -> m14_30  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m14_29 -> m14_1  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m14_33 -> m14_34  [key=0, style=solid];
m14_33 -> m14_18  [key=2, style=dotted];
m14_33 -> m14_35  [key=1, style=dashed, color=darkseagreen4, label=client];
m14_34 -> m14_35  [key=0, style=solid];
m14_34 -> m14_37  [key=2, style=dotted];
m14_34 -> m14_38  [key=2, style=dotted];
m14_35 -> m14_36  [key=0, style=solid];
m14_35 -> m14_21  [key=2, style=dotted];
m14_35 -> m14_22  [key=2, style=dotted];
m14_36 -> m14_29  [key=0, style=bold, color=blue];
m14_23 -> m14_24  [key=0, style=solid];
m14_23 -> m14_26  [key=3, color=darkorchid, style=bold, label="method methodReturn string In"];
m14_24 -> m14_25  [key=0, style=solid];
m14_24 -> m14_26  [key=2, style=dotted];
m14_25 -> m14_23  [key=0, style=bold, color=blue];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_0  [key=0, style=bold, color=blue];
m16_2 -> m16_3  [key=0, style=solid];
m16_3 -> m16_2  [key=0, style=bold, color=blue];
m17_17 -> m17_18  [key=0, style=solid, color=red];
m17_18 -> m17_19  [key=0, style=solid, color=red];
m17_18 -> m17_20  [key=2, style=dotted, color=red];
m17_18 -> m17_21  [key=2, style=dotted, color=red];
m17_19 -> m17_17  [key=0, style=bold, color=blue];
m17_3 -> m17_4  [key=0, style=solid];
m17_3 -> m17_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_3 -> m17_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.JobMethod"];
m17_3 -> m17_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m17_3 -> m17_11  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_3 -> m17_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.JobMethod"];
m17_4 -> m17_5  [key=0, style=solid];
m17_4 -> m17_6  [key=0, style=solid];
m17_6 -> m17_7  [key=0, style=solid];
m17_6 -> m17_8  [key=0, style=solid];
m17_8 -> m17_9  [key=0, style=solid];
m17_8 -> m17_10  [key=0, style=solid];
m17_10 -> m17_11  [key=0, style=solid];
m17_11 -> m17_12  [key=0, style=solid];
m17_12 -> m17_13  [key=0, style=solid];
m17_5 -> m17_14  [key=0, style=solid];
m17_5 -> n18  [key=2, style=dotted];
m17_7 -> m17_14  [key=0, style=solid];
m17_7 -> n18  [key=2, style=dotted];
m17_9 -> m17_14  [key=0, style=solid];
m17_9 -> n18  [key=2, style=dotted];
m17_13 -> m17_14  [key=0, style=solid];
m17_13 -> m17_16  [key=2, style=dotted];
m17_14 -> m17_3  [key=0, style=bold, color=blue];
m17_0 -> m17_1  [key=0, style=solid];
m17_1 -> m17_2  [key=0, style=solid];
m17_2 -> m17_0  [key=0, style=bold, color=blue];
m17_22 -> m17_23  [key=0, style=solid, color=red];
m17_23 -> m17_24  [key=0, style=solid, color=red];
m17_23 -> m17_25  [key=2, style=dotted, color=red];
m17_23 -> m17_26  [key=2, style=dotted, color=red];
m17_24 -> m17_22  [key=0, style=bold, color=blue];
m17_27 -> m17_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Performing.PerformContext"];
m17_27 -> m17_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Performing.PerformContext"];
m17_27 -> m17_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Performing.PerformContext"];
m17_27 -> m17_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Performing.PerformContext"];
m17_27 -> m17_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Performing.PerformContext"];
m17_27 -> m17_18  [key=1, style=dashed, color=red, label="HangFire.Server.Performing.PerformContext"];
m17_27 -> m17_23  [key=1, style=dashed, color=red, label="HangFire.Server.Performing.PerformContext"];
m18_0 -> m18_1  [key=0, style=solid, color=red];
m18_1 -> m18_2  [key=0, style=solid, color=red];
m18_1 -> m18_3  [key=2, style=dotted, color=red];
m18_1 -> m18_4  [key=2, style=dotted, color=red];
m18_2 -> m18_0  [key=0, style=bold, color=blue];
m18_5 -> m18_6  [key=0, style=solid, color=red];
m18_6 -> m18_7  [key=0, style=solid, color=red];
m18_6 -> m18_8  [key=2, style=dotted, color=red];
m18_7 -> m18_5  [key=0, style=bold, color=blue];
m19_8 -> m19_9  [key=0, style=solid];
m19_9 -> m19_10  [key=0, style=solid];
m19_9 -> m19_11  [key=2, style=dotted];
m19_10 -> m19_8  [key=0, style=bold, color=blue];
m19_17 -> m19_18  [key=0, style=solid];
m19_18 -> m19_19  [key=0, style=solid];
m19_18 -> m19_20  [key=2, style=dotted];
m19_18 -> m19_21  [key=2, style=dotted];
m19_19 -> m19_17  [key=0, style=bold, color=blue];
m19_99 -> m19_100  [key=0, style=solid];
m19_99 -> m19_111  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m19_99 -> m19_108  [key=3, color=darkorchid, style=bold, label="method methodReturn int RemoveTimedOutServers"];
m19_100 -> m19_101  [key=0, style=solid];
m19_100 -> m19_116  [key=2, style=dotted];
m19_100 -> m19_104  [key=1, style=dashed, color=darkseagreen4, label=serverNames];
m19_111 -> m19_112  [key=0, style=solid];
m19_111 -> m19_109  [key=0, style=solid];
m19_111 -> m19_121  [key=2, style=dotted];
m19_101 -> m19_102  [key=0, style=solid];
m19_101 -> m19_72  [key=2, style=dotted];
m19_101 -> m19_106  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
m19_101 -> m19_128  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
m19_101 -> m19_109  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
m19_104 -> m19_105  [key=0, style=solid];
m19_104 -> m19_107  [key=0, style=solid];
m19_102 -> m19_103  [key=0, style=solid];
m19_102 -> m19_111  [key=1, style=dashed, color=darkseagreen4, label=utcNow];
m19_106 -> m19_104  [key=0, style=solid];
m19_106 -> m19_46  [key=2, style=dotted];
m19_106 -> m19_122  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_106 -> m19_127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_109 -> m19_110  [key=0, style=solid];
m19_109 -> m19_114  [key=0, style=solid];
m19_103 -> m19_104  [key=0, style=solid];
m19_103 -> m19_117  [key=2, style=dotted];
m19_103 -> m19_106  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m19_103 -> m19_107  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m19_107 -> m19_108  [key=0, style=solid];
m19_107 -> m19_118  [key=2, style=dotted];
m19_105 -> m19_106  [key=0, style=solid];
m19_105 -> m19_123  [key=1, style=dashed, color=darkseagreen4, label=name];
m19_105 -> m19_128  [key=1, style=dashed, color=darkseagreen4, label=name];
m19_105 -> m19_104  [key=3, color=darkorchid, style=bold, label="Local variable var name"];
m19_108 -> m19_109  [key=0, style=solid];
m19_108 -> m19_113  [key=1, style=dashed, color=darkseagreen4, label=removedServerCount];
m19_108 -> m19_114  [key=1, style=dashed, color=darkseagreen4, label=removedServerCount];
m19_108 -> m19_108  [key=3, color=darkorchid, style=bold, label="Local variable int removedServerCount"];
m19_113 -> m19_109  [key=0, style=solid];
m19_113 -> m19_113  [key=1, style=dashed, color=darkseagreen4, label=removedServerCount];
m19_113 -> m19_114  [key=1, style=dashed, color=darkseagreen4, label=removedServerCount];
m19_114 -> m19_115  [key=0, style=solid];
m19_110 -> m19_111  [key=0, style=solid];
m19_110 -> m19_119  [key=2, style=dotted];
m19_110 -> m19_120  [key=2, style=dotted];
m19_110 -> m19_110  [key=1, style=dashed, color=darkseagreen4, label=heartbeat];
m19_110 -> m19_112  [key=1, style=dashed, color=darkseagreen4, label=heartbeat];
m19_112 -> m19_113  [key=0, style=solid];
m19_112 -> m19_81  [key=2, style=dotted];
m19_112 -> m19_112  [key=1, style=dashed, color=darkseagreen4, label=heartbeat];
m19_115 -> m19_99  [key=0, style=bold, color=blue];
m19_96 -> m19_97  [key=0, style=solid];
m19_96 -> n32  [key=2, style=dotted];
m19_96 -> m19_45  [key=2, style=dotted];
m19_96 -> m19_98  [key=2, style=dotted];
m19_95 -> m19_96  [key=0, style=solid];
m19_97 -> m19_95  [key=0, style=bold, color=blue];
m19_84 -> m19_85  [key=0, style=solid, color=green];
m19_84 -> m19_46  [key=2, style=dotted, color=green];
m19_84 -> m19_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_81 -> m19_82  [key=0, style=solid, color=green];
m19_81 -> m19_83  [key=1, style=dashed, color=green, label=string];
m19_81 -> m19_88  [key=1, style=dashed, color=green, label=string];
m19_81 -> m19_84  [key=1, style=dashed, color=green, label=string];
m19_81 -> m19_92  [key=1, style=dashed, color=green, label=string];
m19_81 -> m19_78  [key=3, color=darkorchid, style=bold, label="Parameter variable string serverId"];
m19_82 -> m19_83  [key=0, style=solid, color=green];
m19_82 -> m19_16  [key=2, style=dotted, color=green];
m19_82 -> m19_84  [key=1, style=dashed, color=green, label=transaction];
m19_82 -> m19_85  [key=1, style=dashed, color=green, label=transaction];
m19_83 -> m19_84  [key=0, style=solid, color=green];
m19_83 -> m19_46  [key=2, style=dotted, color=green];
m19_83 -> m19_87  [key=1, style=dashed, color=green, label="lambda expression"];
m19_85 -> m19_86  [key=0, style=solid, color=green];
m19_85 -> m19_47  [key=2, style=dotted, color=green];
m19_86 -> m19_81  [key=0, style=bold, color=blue];
m19_12 -> m19_13  [key=0, style=solid];
m19_13 -> m19_14  [key=0, style=solid];
m19_13 -> m19_15  [key=2, style=dotted];
m19_13 -> m19_16  [key=2, style=dotted];
m19_14 -> m19_12  [key=0, style=bold, color=blue];
m19_138 -> m19_139  [key=0, style=solid];
m19_138 -> m19_46  [key=2, style=dotted];
m19_138 -> m19_149  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_134 -> m19_135  [key=0, style=solid];
m19_134 -> m19_136  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_134 -> m19_142  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_134 -> m19_137  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_134 -> m19_146  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_134 -> m19_138  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_134 -> m19_150  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_135 -> m19_136  [key=0, style=solid];
m19_135 -> m19_16  [key=2, style=dotted];
m19_135 -> m19_137  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m19_135 -> m19_138  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m19_135 -> m19_139  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m19_136 -> m19_137  [key=0, style=solid];
m19_136 -> m19_46  [key=2, style=dotted];
m19_136 -> m19_141  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_137 -> m19_138  [key=0, style=solid];
m19_137 -> m19_46  [key=2, style=dotted];
m19_137 -> m19_145  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_139 -> m19_140  [key=0, style=solid];
m19_139 -> m19_47  [key=2, style=dotted];
m19_140 -> m19_134  [key=0, style=bold, color=blue];
m19_56 -> m19_57  [key=0, style=solid, color=green];
m19_56 -> m19_58  [key=1, style=dashed, color=green, label=string];
m19_56 -> m19_66  [key=1, style=dashed, color=green, label=string];
m19_56 -> m19_59  [key=1, style=dashed, color=green, label=string];
m19_56 -> m19_70  [key=1, style=dashed, color=green, label=string];
m19_56 -> m19_60  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<string>"];
m19_56 -> m19_62  [key=1, style=dashed, color=green, label=string];
m19_56 -> m19_75  [key=1, style=dashed, color=green, label=string];
m19_57 -> m19_58  [key=0, style=solid, color=green];
m19_57 -> m19_16  [key=2, style=dotted, color=green];
m19_57 -> m19_59  [key=1, style=dashed, color=green, label=transaction];
m19_57 -> m19_62  [key=1, style=dashed, color=green, label=transaction];
m19_57 -> m19_63  [key=1, style=dashed, color=green, label=transaction];
m19_58 -> m19_59  [key=0, style=solid, color=green];
m19_58 -> m19_46  [key=2, style=dotted, color=green];
m19_58 -> m19_65  [key=1, style=dashed, color=green, label="lambda expression"];
m19_59 -> m19_60  [key=0, style=solid, color=green];
m19_59 -> m19_46  [key=2, style=dotted, color=green];
m19_59 -> m19_69  [key=1, style=dashed, color=green, label="lambda expression"];
m19_60 -> m19_61  [key=0, style=solid, color=green];
m19_60 -> m19_63  [key=0, style=solid, color=green];
m19_62 -> m19_60  [key=0, style=solid, color=green];
m19_62 -> m19_46  [key=2, style=dotted, color=green];
m19_62 -> m19_74  [key=1, style=dashed, color=green, label="lambda expression"];
m19_63 -> m19_64  [key=0, style=solid, color=green];
m19_63 -> m19_47  [key=2, style=dotted, color=green];
m19_61 -> m19_62  [key=0, style=solid, color=green];
m19_61 -> m19_75  [key=1, style=dashed, color=green, label=queue1];
m19_61 -> m19_60  [key=3, color=green, style=bold, label="Local variable string queue1"];
m19_64 -> m19_56  [key=0, style=bold, color=blue];
m19_78 -> m19_79  [key=0, style=solid, color=green];
m19_79 -> m19_80  [key=0, style=solid, color=green];
m19_79 -> m19_81  [key=2, style=dotted, color=green];
m19_80 -> m19_78  [key=0, style=bold, color=blue];
m19_37 -> m19_38  [key=0, style=solid];
m19_37 -> m19_46  [key=2, style=dotted];
m19_37 -> m19_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_28 -> m19_29  [key=0, style=solid];
m19_28 -> m19_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.InvocationData"];
m19_28 -> m19_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.InvocationData"];
m19_28 -> m19_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.InvocationData"];
m19_28 -> m19_33  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m19_28 -> m19_34  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m19_28 -> m19_36  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m19_28 -> m19_49  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m19_28 -> m19_37  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m19_28 -> m19_53  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m19_29 -> m19_30  [key=0, style=solid];
m19_29 -> m19_41  [key=2, style=dotted];
m19_29 -> m19_42  [key=2, style=dotted];
m19_29 -> m19_36  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m19_29 -> m19_49  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m19_29 -> m19_37  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m19_29 -> m19_53  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m19_29 -> m19_39  [key=1, style=dashed, color=green, label=jobId];
m19_30 -> m19_31  [key=0, style=solid];
m19_30 -> m19_43  [key=2, style=dotted];
m19_31 -> m19_32  [key=0, style=solid];
m19_31 -> m19_43  [key=2, style=dotted];
m19_32 -> m19_33  [key=0, style=solid];
m19_32 -> m19_43  [key=2, style=dotted];
m19_33 -> m19_34  [key=0, style=solid];
m19_33 -> m19_44  [key=2, style=dotted];
m19_33 -> m19_43  [key=2, style=dotted];
m19_34 -> m19_35  [key=0, style=solid];
m19_34 -> m19_45  [key=2, style=dotted];
m19_34 -> m19_43  [key=2, style=dotted];
m19_36 -> m19_37  [key=0, style=solid];
m19_36 -> m19_46  [key=2, style=dotted];
m19_36 -> m19_48  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_39 -> m19_40  [key=0, style=solid, color=green];
m19_35 -> m19_36  [key=0, style=solid];
m19_35 -> m19_16  [key=2, style=dotted];
m19_35 -> m19_37  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m19_35 -> m19_38  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m19_38 -> m19_39  [key=0, style=solid, color=green];
m19_38 -> m19_47  [key=2, style=dotted];
m19_40 -> m19_28  [key=0, style=bold, color=blue];
m19_92 -> m19_93  [key=0, style=solid, color=green];
m19_92 -> n32  [key=2, style=dotted, color=green];
m19_92 -> m19_94  [key=2, style=dotted, color=green];
m19_49 -> m19_50  [key=0, style=solid];
m19_49 -> n32  [key=2, style=dotted];
m19_49 -> m19_51  [key=2, style=dotted];
m19_53 -> m19_54  [key=0, style=solid];
m19_53 -> n32  [key=2, style=dotted];
m19_53 -> m19_55  [key=2, style=dotted];
m19_48 -> m19_49  [key=0, style=solid];
m19_52 -> m19_53  [key=0, style=solid];
m19_50 -> m19_48  [key=0, style=bold, color=blue];
m19_54 -> m19_52  [key=0, style=bold, color=blue];
m19_66 -> m19_67  [key=0, style=solid, color=green];
m19_66 -> m19_68  [key=2, style=dotted, color=green];
m19_70 -> m19_71  [key=0, style=solid, color=green];
m19_70 -> n32  [key=2, style=dotted, color=green];
m19_70 -> m19_72  [key=2, style=dotted, color=green];
m19_70 -> m19_73  [key=2, style=dotted, color=green];
m19_70 -> m19_45  [key=2, style=dotted, color=green];
m19_70 -> m19_51  [key=2, style=dotted, color=green];
m19_75 -> m19_76  [key=0, style=solid, color=green];
m19_75 -> n32  [key=2, style=dotted, color=green];
m19_75 -> m19_77  [key=2, style=dotted, color=green];
m19_65 -> m19_66  [key=0, style=solid, color=green];
m19_69 -> m19_70  [key=0, style=solid, color=green];
m19_74 -> m19_75  [key=0, style=solid, color=green];
m19_67 -> m19_65  [key=0, style=bold, color=blue];
m19_71 -> m19_69  [key=0, style=bold, color=blue];
m19_76 -> m19_74  [key=0, style=bold, color=blue];
m19_88 -> m19_89  [key=0, style=solid, color=green];
m19_88 -> m19_90  [key=2, style=dotted, color=green];
m19_87 -> m19_88  [key=0, style=solid, color=green];
m19_91 -> m19_92  [key=0, style=solid, color=green];
m19_89 -> m19_87  [key=0, style=bold, color=blue];
m19_93 -> m19_91  [key=0, style=bold, color=blue];
m19_128 -> m19_129  [key=0, style=solid];
m19_128 -> m19_130  [key=2, style=dotted];
m19_128 -> m19_131  [key=2, style=dotted];
m19_128 -> m19_132  [key=2, style=dotted];
m19_128 -> m19_133  [key=2, style=dotted];
m19_123 -> m19_124  [key=0, style=solid];
m19_123 -> m19_125  [key=2, style=dotted];
m19_123 -> m19_126  [key=2, style=dotted];
m19_122 -> m19_123  [key=0, style=solid];
m19_127 -> m19_128  [key=0, style=solid];
m19_124 -> m19_122  [key=0, style=bold, color=blue];
m19_129 -> m19_127  [key=0, style=bold, color=blue];
m19_142 -> m19_143  [key=0, style=solid];
m19_142 -> n32  [key=2, style=dotted];
m19_142 -> m19_144  [key=2, style=dotted];
m19_146 -> m19_147  [key=0, style=solid];
m19_146 -> n32  [key=2, style=dotted];
m19_146 -> m19_148  [key=2, style=dotted];
m19_150 -> m19_151  [key=0, style=solid];
m19_150 -> n32  [key=2, style=dotted];
m19_150 -> m19_148  [key=2, style=dotted];
m19_141 -> m19_142  [key=0, style=solid];
m19_145 -> m19_146  [key=0, style=solid];
m19_149 -> m19_150  [key=0, style=solid];
m19_143 -> m19_141  [key=0, style=bold, color=blue];
m19_147 -> m19_145  [key=0, style=bold, color=blue];
m19_151 -> m19_149  [key=0, style=bold, color=blue];
m19_22 -> m19_23  [key=0, style=solid];
m19_23 -> m19_24  [key=0, style=solid];
m19_23 -> n32  [key=2, style=dotted];
m19_23 -> m19_26  [key=2, style=dotted];
m19_23 -> m19_27  [key=2, style=dotted];
m19_24 -> m19_22  [key=0, style=bold, color=blue];
m19_0 -> m19_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m19_0 -> m19_1  [key=0, style=solid];
m19_0 -> m19_2  [key=1, style=dashed, color=red, label=IRedisClient];
m19_0 -> m19_3  [key=1, style=dashed, color=red, label=IRedisClient];
m19_1 -> m19_2  [key=0, style=solid, color=red];
m19_2 -> m19_3  [key=0, style=solid, color=red];
m19_2 -> m19_6  [key=2, style=dotted, color=red];
m19_3 -> m19_4  [key=0, style=solid, color=green];
m19_3 -> m19_7  [key=2, style=dotted, color=red];
m19_4 -> m19_5  [key=0, style=solid, color=green];
m19_5 -> m19_0  [key=0, style=bold, color=blue];
m19_152 -> m19_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m19_152 -> m19_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m19_152 -> m19_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m19_152 -> m19_4  [key=1, style=dashed, color=green, label="HangFire.Redis.RedisConnection"];
m19_152 -> m19_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m19_152 -> m19_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m19_152 -> m19_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m19_152 -> m19_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m19_152 -> m19_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m19_152 -> m19_57  [key=1, style=dashed, color=green, label="HangFire.Redis.RedisConnection"];
m19_152 -> m19_79  [key=1, style=dashed, color=green, label="HangFire.Redis.RedisConnection"];
m19_152 -> m19_96  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m19_152 -> m19_100  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m19_152 -> m19_103  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m19_152 -> m19_112  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisConnection"];
m19_153 -> m19_49  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m19_154 -> m19_49  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m19_154 -> m19_53  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m19_155 -> m19_53  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m19_156 -> m19_66  [key=1, style=dashed, color=green, label=string];
m19_156 -> m19_70  [key=1, style=dashed, color=green, label=string];
m19_156 -> m19_75  [key=1, style=dashed, color=green, label=string];
m19_157 -> m19_70  [key=1, style=dashed, color=green, label=int];
m19_158 -> m19_75  [key=1, style=dashed, color=green, label=queue1];
m19_159 -> m19_88  [key=1, style=dashed, color=green, label=string];
m19_159 -> m19_92  [key=1, style=dashed, color=green, label=string];
m19_160 -> m19_123  [key=1, style=dashed, color=darkseagreen4, label=name];
m19_160 -> m19_128  [key=1, style=dashed, color=darkseagreen4, label=name];
m19_161 -> m19_128  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
m19_162 -> m19_142  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_163 -> m19_142  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_163 -> m19_146  [key=1, style=dashed, color=darkseagreen4, label=string];
m19_163 -> m19_150  [key=1, style=dashed, color=darkseagreen4, label=string];
m20_22 -> m20_23  [key=0, style=solid, color=red];
m20_22 -> n32  [key=2, style=dotted, color=red];
m20_22 -> m20_24  [key=2, style=dotted, color=red];
m20_21 -> m20_22  [key=0, style=solid, color=red];
m20_23 -> m20_21  [key=0, style=bold, color=blue];
m20_0 -> m20_1  [key=0, style=solid, color=red];
m20_1 -> m20_2  [key=0, style=solid, color=red];
m20_2 -> m20_0  [key=0, style=bold, color=blue];
m20_29 -> m20_30  [key=0, style=solid, color=red];
m20_30 -> m20_31  [key=0, style=solid, color=red];
m20_30 -> m20_32  [key=2, style=dotted, color=red];
m20_31 -> m20_29  [key=0, style=bold, color=blue];
m20_25 -> m20_26  [key=0, style=solid, color=red];
m20_26 -> m20_27  [key=0, style=solid, color=red];
m20_26 -> n32  [key=2, style=dotted, color=red];
m20_26 -> m20_28  [key=2, style=dotted, color=red];
m20_27 -> m20_25  [key=0, style=bold, color=blue];
m20_3 -> m20_4  [key=0, style=solid, color=red];
m20_3 -> m20_5  [key=3, color=red, style=bold, label="method methodReturn HangFire.Storage.StateAndInvocationData GetStateAndInvocationData"];
m20_4 -> m20_5  [key=0, style=solid, color=red];
m20_4 -> n32  [key=2, style=dotted, color=red];
m20_4 -> m20_17  [key=2, style=dotted, color=red];
m20_4 -> m20_8  [key=1, style=dashed, color=red, label=jobData];
m20_4 -> m20_9  [key=1, style=dashed, color=red, label=jobData];
m20_4 -> m20_10  [key=1, style=dashed, color=red, label=jobData];
m20_4 -> m20_11  [key=1, style=dashed, color=red, label=jobData];
m20_4 -> m20_12  [key=1, style=dashed, color=red, label=jobData];
m20_4 -> m20_13  [key=1, style=dashed, color=red, label=jobData];
m20_4 -> m20_14  [key=1, style=dashed, color=red, label=jobData];
m20_5 -> m20_6  [key=0, style=solid, color=red];
m20_5 -> m20_7  [key=0, style=solid, color=red];
m20_8 -> m20_9  [key=0, style=solid, color=red];
m20_8 -> m20_10  [key=0, style=solid, color=red];
m20_8 -> m20_19  [key=2, style=dotted, color=red];
m20_9 -> m20_10  [key=0, style=solid, color=red];
m20_10 -> m20_11  [key=0, style=solid, color=red];
m20_10 -> m20_12  [key=0, style=solid, color=red];
m20_10 -> m20_19  [key=2, style=dotted, color=red];
m20_11 -> m20_12  [key=0, style=solid, color=red];
m20_12 -> m20_13  [key=0, style=solid, color=red];
m20_12 -> m20_14  [key=0, style=solid, color=red];
m20_12 -> m20_19  [key=2, style=dotted, color=red];
m20_13 -> m20_14  [key=0, style=solid, color=red];
m20_14 -> m20_15  [key=0, style=solid, color=red];
m20_14 -> m20_20  [key=2, style=dotted, color=red];
m20_14 -> m20_19  [key=2, style=dotted, color=red];
m20_6 -> m20_15  [key=0, style=solid, color=red];
m20_7 -> m20_8  [key=0, style=solid, color=red];
m20_7 -> m20_18  [key=2, style=dotted, color=red];
m20_7 -> m20_9  [key=1, style=dashed, color=red, label=invocationData];
m20_7 -> m20_11  [key=1, style=dashed, color=red, label=invocationData];
m20_7 -> m20_13  [key=1, style=dashed, color=red, label=invocationData];
m20_7 -> m20_14  [key=1, style=dashed, color=red, label=invocationData];
m20_15 -> m20_3  [key=0, style=bold, color=blue];
m20_33 -> m20_1  [key=1, style=dashed, color=red, label="HangFire.Redis.DataTypes.RedisJob"];
m20_33 -> m20_4  [key=1, style=dashed, color=red, label="HangFire.Redis.DataTypes.RedisJob"];
m20_33 -> m20_22  [key=1, style=dashed, color=red, label="HangFire.Redis.DataTypes.RedisJob"];
m20_33 -> m20_26  [key=1, style=dashed, color=red, label="HangFire.Redis.DataTypes.RedisJob"];
m20_33 -> m20_30  [key=1, style=dashed, color=red, label="HangFire.Redis.DataTypes.RedisJob"];
m22_0 -> m22_1  [key=0, style=solid, color=red];
m22_1 -> m22_2  [key=0, style=solid, color=red];
m22_2 -> m22_0  [key=0, style=bold, color=blue];
m22_3 -> m22_4  [key=0, style=solid, color=red];
m22_4 -> m22_5  [key=0, style=solid, color=red];
m22_4 -> m22_6  [key=2, style=dotted, color=red];
m22_4 -> m22_7  [key=2, style=dotted, color=red];
m22_5 -> m22_3  [key=0, style=bold, color=blue];
m22_8 -> m22_1  [key=1, style=dashed, color=red, label="HangFire.Redis.DataTypes.RedisSet"];
m22_8 -> m22_4  [key=1, style=dashed, color=red, label="HangFire.Redis.DataTypes.RedisSet"];
m24_16 -> m24_17  [key=0, style=solid, color=red];
m24_17 -> m24_18  [key=0, style=solid, color=red];
m24_17 -> m24_21  [key=2, style=dotted, color=red];
m24_18 -> m24_19  [key=0, style=solid, color=red];
m24_19 -> m24_20  [key=0, style=solid, color=red];
m24_19 -> m24_22  [key=2, style=dotted, color=red];
m24_20 -> m24_16  [key=0, style=bold, color=blue];
m24_91 -> m24_92  [key=0, style=solid];
m24_92 -> m24_93  [key=0, style=solid];
m24_92 -> m24_15  [key=2, style=dotted];
m24_93 -> m24_91  [key=0, style=bold, color=blue];
m24_23 -> m24_24  [key=0, style=solid, color=red];
m24_24 -> m24_25  [key=0, style=solid, color=red];
m24_24 -> m24_30  [key=2, style=dotted, color=red];
m24_24 -> m24_31  [key=2, style=dotted, color=red];
m24_24 -> m24_36  [key=1, style=dashed, color=red, label="lambda expression"];
m24_24 -> m24_40  [key=1, style=dashed, color=red, label="lambda expression"];
m24_25 -> m24_26  [key=0, style=solid, color=red];
m24_25 -> m24_21  [key=2, style=dotted, color=red];
m24_25 -> m24_27  [key=1, style=dashed, color=red, label=process];
m24_25 -> m24_45  [key=1, style=dashed, color=red, label=process];
m24_26 -> m24_27  [key=0, style=solid, color=red];
m24_26 -> m24_32  [key=2, style=dotted, color=red];
m24_26 -> m24_33  [key=2, style=dotted, color=red];
m24_27 -> m24_28  [key=0, style=solid, color=red];
m24_27 -> m24_11  [key=2, style=dotted, color=red];
m24_27 -> m24_44  [key=1, style=dashed, color=red, label="lambda expression"];
m24_28 -> m24_29  [key=0, style=solid, color=red];
m24_28 -> m24_34  [key=2, style=dotted, color=red];
m24_28 -> m24_35  [key=2, style=dotted, color=red];
m24_28 -> m24_48  [key=1, style=dashed, color=red, label="lambda expression"];
m24_29 -> m24_23  [key=0, style=bold, color=blue];
m24_8 -> m24_9  [key=0, style=solid, color=red];
m24_9 -> m24_10  [key=0, style=solid, color=red];
m24_9 -> m24_11  [key=2, style=dotted, color=red];
m24_9 -> m24_12  [key=1, style=dashed, color=red, label="lambda expression"];
m24_10 -> m24_8  [key=0, style=bold, color=blue];
m24_0 -> m24_1  [key=0, style=solid, color=red];
m24_1 -> m24_2  [key=0, style=solid, color=red];
m24_1 -> m24_5  [key=2, style=dotted, color=red];
m24_2 -> m24_3  [key=0, style=solid, color=red];
m24_2 -> m24_6  [key=2, style=dotted, color=red];
m24_3 -> m24_4  [key=0, style=solid, color=red];
m24_3 -> m24_7  [key=2, style=dotted, color=red];
m24_4 -> m24_0  [key=0, style=bold, color=blue];
m24_51 -> m24_52  [key=0, style=solid, color=red];
m24_52 -> m24_53  [key=0, style=solid, color=red];
m24_52 -> m24_30  [key=2, style=dotted, color=red];
m24_52 -> m24_31  [key=2, style=dotted, color=red];
m24_52 -> m24_58  [key=1, style=dashed, color=red, label="lambda expression"];
m24_52 -> m24_61  [key=1, style=dashed, color=red, label="lambda expression"];
m24_53 -> m24_54  [key=0, style=solid, color=red];
m24_53 -> m24_21  [key=2, style=dotted, color=red];
m24_53 -> m24_55  [key=1, style=dashed, color=red, label=process];
m24_53 -> m24_65  [key=1, style=dashed, color=red, label=process];
m24_54 -> m24_55  [key=0, style=solid, color=red];
m24_54 -> m24_32  [key=2, style=dotted, color=red];
m24_54 -> m24_33  [key=2, style=dotted, color=red];
m24_55 -> m24_56  [key=0, style=solid, color=red];
m24_55 -> m24_11  [key=2, style=dotted, color=red];
m24_55 -> m24_64  [key=1, style=dashed, color=red, label="lambda expression"];
m24_56 -> m24_57  [key=0, style=solid, color=red];
m24_56 -> m24_34  [key=2, style=dotted, color=red];
m24_56 -> m24_35  [key=2, style=dotted, color=red];
m24_56 -> m24_67  [key=1, style=dashed, color=red, label="lambda expression"];
m24_57 -> m24_51  [key=0, style=bold, color=blue];
m24_80 -> m24_81  [key=0, style=solid];
m24_12 -> m24_13  [key=0, style=solid, color=red];
m24_13 -> m24_14  [key=0, style=solid, color=red];
m24_13 -> m24_15  [key=2, style=dotted, color=red];
m24_14 -> m24_12  [key=0, style=bold, color=blue];
m24_36 -> m24_37  [key=0, style=solid, color=red];
m24_40 -> m24_41  [key=0, style=solid, color=red];
m24_45 -> m24_46  [key=0, style=solid, color=red];
m24_45 -> m24_47  [key=2, style=dotted, color=red];
m24_44 -> m24_45  [key=0, style=solid, color=red];
m24_48 -> m24_49  [key=0, style=solid, color=red];
m24_37 -> m24_38  [key=0, style=solid, color=red];
m24_37 -> m24_11  [key=2, style=dotted, color=red];
m24_37 -> m24_39  [key=2, style=dotted, color=red];
m24_38 -> m24_36  [key=0, style=bold, color=blue];
m24_41 -> m24_42  [key=0, style=solid, color=red];
m24_41 -> m24_43  [key=2, style=dotted, color=red];
m24_42 -> m24_40  [key=0, style=bold, color=blue];
m24_46 -> m24_44  [key=0, style=bold, color=blue];
m24_49 -> m24_50  [key=0, style=solid, color=red];
m24_49 -> m24_39  [key=2, style=dotted, color=red];
m24_50 -> m24_48  [key=0, style=bold, color=blue];
m24_58 -> m24_59  [key=0, style=solid, color=red];
m24_61 -> m24_62  [key=0, style=solid, color=red];
m24_65 -> m24_66  [key=0, style=solid, color=red];
m24_65 -> m24_47  [key=2, style=dotted, color=red];
m24_64 -> m24_65  [key=0, style=solid, color=red];
m24_67 -> m24_68  [key=0, style=solid, color=red];
m24_59 -> m24_60  [key=0, style=solid, color=red];
m24_59 -> m24_11  [key=2, style=dotted, color=red];
m24_59 -> m24_39  [key=2, style=dotted, color=red];
m24_60 -> m24_58  [key=0, style=bold, color=blue];
m24_62 -> m24_63  [key=0, style=solid, color=red];
m24_62 -> m24_43  [key=2, style=dotted, color=red];
m24_63 -> m24_61  [key=0, style=bold, color=blue];
m24_66 -> m24_64  [key=0, style=bold, color=blue];
m24_68 -> m24_69  [key=0, style=solid, color=red];
m24_68 -> m24_39  [key=2, style=dotted, color=red];
m24_69 -> m24_67  [key=0, style=bold, color=blue];
m24_78 -> m24_79  [key=0, style=solid];
m24_78 -> m24_47  [key=2, style=dotted];
m24_77 -> m24_78  [key=0, style=solid];
m24_79 -> m24_77  [key=0, style=bold, color=blue];
m24_81 -> m24_82  [key=0, style=solid];
m24_81 -> m24_11  [key=2, style=dotted];
m24_81 -> m24_39  [key=2, style=dotted];
m24_82 -> m24_80  [key=0, style=bold, color=blue];
m24_83 -> m24_84  [key=0, style=solid];
m24_84 -> m24_85  [key=0, style=solid];
m24_84 -> m24_21  [key=2, style=dotted];
m24_85 -> m24_86  [key=0, style=solid];
m24_85 -> m24_88  [key=2, style=dotted];
m24_86 -> m24_87  [key=0, style=solid];
m24_86 -> m24_89  [key=2, style=dotted];
m24_86 -> m24_90  [key=2, style=dotted];
m24_87 -> m24_83  [key=0, style=bold, color=blue];
m24_70 -> m24_71  [key=0, style=solid];
m24_71 -> m24_72  [key=0, style=solid];
m24_71 -> m24_21  [key=2, style=dotted];
m24_71 -> m24_73  [key=1, style=dashed, color=darkseagreen4, label=process];
m24_71 -> m24_78  [key=1, style=dashed, color=darkseagreen4, label=process];
m24_72 -> m24_73  [key=0, style=solid];
m24_72 -> m24_76  [key=2, style=dotted];
m24_73 -> m24_74  [key=0, style=solid];
m24_73 -> m24_11  [key=2, style=dotted];
m24_73 -> m24_77  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_74 -> m24_75  [key=0, style=solid];
m24_74 -> m24_35  [key=2, style=dotted];
m24_74 -> m24_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m24_75 -> m24_70  [key=0, style=bold, color=blue];
m24_94 -> m24_1  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m24_94 -> m24_2  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m24_94 -> m24_3  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m24_94 -> m24_17  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m24_94 -> m24_19  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m24_94 -> m24_24  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m24_94 -> m24_25  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m24_94 -> m24_26  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m24_94 -> m24_27  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m24_94 -> m24_45  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m24_94 -> m24_28  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m24_94 -> m24_49  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m24_94 -> m24_52  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m24_94 -> m24_53  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m24_94 -> m24_54  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m24_94 -> m24_55  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m24_94 -> m24_65  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m24_94 -> m24_56  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m24_94 -> m24_68  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m24_94 -> m24_71  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m24_94 -> m24_72  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m24_94 -> m24_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m24_94 -> m24_78  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m24_94 -> m24_74  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m24_94 -> m24_84  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m24_94 -> m24_86  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts"];
m24_95 -> m24_45  [key=1, style=dashed, color=red, label=process];
m24_96 -> m24_65  [key=1, style=dashed, color=red, label=process];
m24_97 -> m24_78  [key=1, style=dashed, color=darkseagreen4, label=process];
m25_0 -> m25_1  [key=0, style=solid, color=red];
m25_0 -> m25_3  [key=1, style=dashed, color=red, label=IRedisTransaction];
m25_1 -> m25_2  [key=0, style=solid, color=red];
m25_1 -> m25_3  [key=0, style=solid, color=red];
m25_3 -> m25_4  [key=0, style=solid, color=red];
m25_2 -> m25_4  [key=0, style=solid, color=red];
m25_2 -> n18  [key=2, style=dotted, color=red];
m25_4 -> m25_0  [key=0, style=bold, color=blue];
m25_6 -> m25_7  [key=0, style=solid, color=red];
m25_6 -> m25_11  [key=1, style=dashed, color=red, label=string];
m25_7 -> m25_8  [key=0, style=solid, color=red];
m25_7 -> m25_9  [key=2, style=dotted, color=red];
m25_7 -> m25_10  [key=1, style=dashed, color=red, label="lambda expression"];
m25_8 -> m25_6  [key=0, style=bold, color=blue];
m25_14 -> m25_15  [key=0, style=solid, color=red];
m25_14 -> m25_18  [key=1, style=dashed, color=red, label=string];
m25_15 -> m25_16  [key=0, style=solid, color=red];
m25_15 -> m25_9  [key=2, style=dotted, color=red];
m25_15 -> m25_17  [key=1, style=dashed, color=red, label="lambda expression"];
m25_16 -> m25_14  [key=0, style=bold, color=blue];
m25_24 -> m25_25  [key=0, style=solid, color=red];
m25_11 -> m25_12  [key=0, style=solid, color=red];
m25_11 -> m25_13  [key=2, style=dotted, color=red];
m25_10 -> m25_11  [key=0, style=solid, color=red];
m25_12 -> m25_10  [key=0, style=bold, color=blue];
m25_18 -> m25_19  [key=0, style=solid, color=red];
m25_18 -> m25_20  [key=2, style=dotted, color=red];
m25_17 -> m25_18  [key=0, style=solid, color=red];
m25_19 -> m25_17  [key=0, style=bold, color=blue];
m25_25 -> m25_26  [key=0, style=solid, color=red];
m25_25 -> m25_27  [key=2, style=dotted, color=red];
m25_26 -> m25_24  [key=0, style=bold, color=blue];
m25_21 -> m25_22  [key=0, style=solid, color=red];
m25_21 -> m25_25  [key=1, style=dashed, color=red, label=string];
m25_22 -> m25_23  [key=0, style=solid, color=red];
m25_22 -> m25_9  [key=2, style=dotted, color=red];
m25_22 -> m25_24  [key=1, style=dashed, color=red, label="lambda expression"];
m25_23 -> m25_21  [key=0, style=bold, color=blue];
m25_28 -> m25_3  [key=1, style=dashed, color=red, label="HangFire.Redis.DataTypes.RedisWriteOnlyList"];
m25_28 -> m25_7  [key=1, style=dashed, color=red, label="HangFire.Redis.DataTypes.RedisWriteOnlyList"];
m25_28 -> m25_15  [key=1, style=dashed, color=red, label="HangFire.Redis.DataTypes.RedisWriteOnlyList"];
m25_28 -> m25_22  [key=1, style=dashed, color=red, label="HangFire.Redis.DataTypes.RedisWriteOnlyList"];
m25_29 -> m25_11  [key=1, style=dashed, color=red, label=string];
m25_30 -> m25_11  [key=1, style=dashed, color=red, label=string];
m25_31 -> m25_18  [key=1, style=dashed, color=red, label=string];
m25_32 -> m25_18  [key=1, style=dashed, color=red, label=string];
m25_33 -> m25_25  [key=1, style=dashed, color=red, label=string];
m25_34 -> m25_25  [key=1, style=dashed, color=red, label=int];
m25_35 -> m25_25  [key=1, style=dashed, color=red, label=int];
m26_6 -> m26_7  [key=0, style=solid];
m26_6 -> m26_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IStateMachineFactory"];
m26_6 -> m26_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m26_6 -> m26_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IState"];
m26_6 -> m26_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IStateMachineFactory"];
m26_6 -> m26_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m26_6 -> m26_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m26_6 -> m26_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.IState"];
m26_7 -> m26_8  [key=0, style=solid];
m26_7 -> m26_9  [key=0, style=solid];
m26_9 -> m26_10  [key=0, style=solid];
m26_9 -> m26_11  [key=0, style=solid];
m26_11 -> m26_12  [key=0, style=solid];
m26_11 -> m26_13  [key=0, style=solid];
m26_13 -> m26_14  [key=0, style=solid];
m26_13 -> m26_15  [key=0, style=solid];
m26_15 -> m26_16  [key=0, style=solid];
m26_16 -> m26_17  [key=0, style=solid];
m26_17 -> m26_18  [key=0, style=solid];
m26_18 -> m26_19  [key=0, style=solid];
m26_8 -> m26_20  [key=0, style=solid];
m26_8 -> n18  [key=2, style=dotted];
m26_10 -> m26_20  [key=0, style=solid];
m26_10 -> n18  [key=2, style=dotted];
m26_12 -> m26_20  [key=0, style=solid];
m26_12 -> n18  [key=2, style=dotted];
m26_14 -> m26_20  [key=0, style=solid];
m26_14 -> n18  [key=2, style=dotted];
m26_19 -> m26_20  [key=0, style=solid];
m26_19 -> m26_22  [key=2, style=dotted];
m26_20 -> m26_6  [key=0, style=bold, color=blue];
m26_23 -> m26_24  [key=0, style=solid];
m26_23 -> m26_28  [key=1, style=dashed, color=darkseagreen4, label=object];
m26_23 -> m26_29  [key=1, style=dashed, color=darkseagreen4, label=string];
m26_23 -> m26_30  [key=1, style=dashed, color=darkseagreen4, label=string];
m26_23 -> m26_31  [key=1, style=dashed, color=darkseagreen4, label=string];
m26_24 -> m26_25  [key=0, style=solid];
m26_24 -> m26_26  [key=0, style=solid];
m26_24 -> m26_33  [key=2, style=dotted];
m26_28 -> m26_29  [key=0, style=solid];
m26_28 -> m26_35  [key=2, style=dotted];
m26_28 -> m26_30  [key=1, style=dashed, color=darkseagreen4, label=serializedValue];
m26_28 -> m26_31  [key=1, style=dashed, color=darkseagreen4, label=serializedValue];
m26_29 -> m26_30  [key=0, style=solid];
m26_29 -> m26_31  [key=0, style=solid];
m26_29 -> m26_36  [key=2, style=dotted];
m26_30 -> m26_32  [key=0, style=solid];
m26_30 -> m26_37  [key=2, style=dotted];
m26_31 -> m26_32  [key=0, style=solid];
m26_25 -> m26_32  [key=0, style=solid];
m26_25 -> n18  [key=2, style=dotted];
m26_26 -> m26_27  [key=0, style=solid];
m26_26 -> m26_28  [key=0, style=solid];
m26_27 -> m26_32  [key=0, style=solid];
m26_27 -> m26_34  [key=2, style=dotted];
m26_32 -> m26_23  [key=0, style=bold, color=blue];
m26_0 -> m26_1  [key=0, style=solid];
m26_0 -> m26_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m26_0 -> m26_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m26_0 -> m26_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m26_1 -> m26_2  [key=0, style=solid];
m26_2 -> m26_3  [key=0, style=solid];
m26_3 -> m26_4  [key=0, style=solid];
m26_4 -> m26_5  [key=0, style=solid];
m26_5 -> m26_0  [key=0, style=bold, color=blue];
m26_38 -> m26_39  [key=0, style=solid];
m26_38 -> m26_41  [key=1, style=dashed, color=darkseagreen4, label=string];
m26_38 -> m26_43  [key=1, style=dashed, color=darkseagreen4, label=string];
m26_39 -> m26_40  [key=0, style=solid];
m26_39 -> m26_41  [key=0, style=solid];
m26_39 -> m26_33  [key=2, style=dotted];
m26_41 -> m26_44  [key=0, style=solid];
m26_41 -> m26_36  [key=2, style=dotted];
m26_41 -> m26_45  [key=2, style=dotted];
m26_43 -> m26_44  [key=0, style=solid];
m26_43 -> m26_46  [key=2, style=dotted];
m26_43 -> m26_47  [key=2, style=dotted];
m26_40 -> m26_44  [key=0, style=solid];
m26_40 -> n18  [key=2, style=dotted];
m26_42 -> m26_43  [key=0, style=solid];
m26_44 -> m26_38  [key=0, style=bold, color=blue];
m26_48 -> m26_49  [key=0, style=solid];
m26_49 -> m26_50  [key=0, style=solid];
m26_49 -> m26_53  [key=2, style=dotted];
m26_50 -> m26_51  [key=0, style=solid];
m26_50 -> m26_54  [key=2, style=dotted];
m26_51 -> m26_52  [key=0, style=solid];
m26_52 -> m26_48  [key=0, style=bold, color=blue];
m26_55 -> m26_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m26_55 -> m26_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m26_55 -> m26_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m26_55 -> m26_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m26_55 -> m26_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m26_55 -> m26_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m26_55 -> m26_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m26_55 -> m26_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m26_55 -> m26_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m26_55 -> m26_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m26_55 -> m26_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m26_55 -> m26_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m26_55 -> m26_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m26_55 -> m26_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m26_55 -> m26_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m26_55 -> m26_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m26_55 -> m26_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.CreateContext"];
m27_6 -> m27_7  [key=0, style=solid, color=red];
m27_6 -> m27_11  [key=1, style=dashed, color=red, label=string];
m27_7 -> m27_8  [key=0, style=solid, color=red];
m27_7 -> m27_9  [key=2, style=dotted, color=red];
m27_7 -> m27_10  [key=1, style=dashed, color=red, label="lambda expression"];
m27_8 -> m27_6  [key=0, style=bold, color=blue];
m27_14 -> m27_15  [key=0, style=solid, color=red];
m27_14 -> m27_18  [key=1, style=dashed, color=red, label=string];
m27_15 -> m27_16  [key=0, style=solid, color=red];
m27_15 -> m27_9  [key=2, style=dotted, color=red];
m27_15 -> m27_17  [key=1, style=dashed, color=red, label="lambda expression"];
m27_16 -> m27_14  [key=0, style=bold, color=blue];
m27_23 -> m27_24  [key=0, style=solid, color=red];
m27_11 -> m27_12  [key=0, style=solid, color=red];
m27_11 -> m27_13  [key=2, style=dotted, color=red];
m27_10 -> m27_11  [key=0, style=solid, color=red];
m27_12 -> m27_10  [key=0, style=bold, color=blue];
m27_18 -> m27_19  [key=0, style=solid, color=red];
m27_18 -> m27_13  [key=2, style=dotted, color=red];
m27_17 -> m27_18  [key=0, style=solid, color=red];
m27_19 -> m27_17  [key=0, style=bold, color=blue];
m27_24 -> m27_25  [key=0, style=solid, color=red];
m27_24 -> m27_26  [key=2, style=dotted, color=red];
m27_25 -> m27_23  [key=0, style=bold, color=blue];
m27_0 -> m27_1  [key=0, style=solid, color=red];
m27_0 -> m27_3  [key=1, style=dashed, color=red, label=IRedisTransaction];
m27_1 -> m27_2  [key=0, style=solid, color=red];
m27_1 -> m27_3  [key=0, style=solid, color=red];
m27_3 -> m27_4  [key=0, style=solid, color=red];
m27_2 -> m27_4  [key=0, style=solid, color=red];
m27_2 -> n18  [key=2, style=dotted, color=red];
m27_4 -> m27_0  [key=0, style=bold, color=blue];
m27_20 -> m27_21  [key=0, style=solid, color=red];
m27_20 -> m27_24  [key=1, style=dashed, color=red, label=string];
m27_21 -> m27_22  [key=0, style=solid, color=red];
m27_21 -> m27_9  [key=2, style=dotted, color=red];
m27_21 -> m27_23  [key=1, style=dashed, color=red, label="lambda expression"];
m27_22 -> m27_20  [key=0, style=bold, color=blue];
m27_27 -> m27_3  [key=1, style=dashed, color=red, label="HangFire.Redis.DataTypes.RedisWriteOnlySet"];
m27_27 -> m27_7  [key=1, style=dashed, color=red, label="HangFire.Redis.DataTypes.RedisWriteOnlySet"];
m27_27 -> m27_15  [key=1, style=dashed, color=red, label="HangFire.Redis.DataTypes.RedisWriteOnlySet"];
m27_27 -> m27_21  [key=1, style=dashed, color=red, label="HangFire.Redis.DataTypes.RedisWriteOnlySet"];
m27_28 -> m27_11  [key=1, style=dashed, color=red, label=string];
m27_29 -> m27_11  [key=1, style=dashed, color=red, label=string];
m27_30 -> m27_18  [key=1, style=dashed, color=red, label=string];
m27_31 -> m27_18  [key=1, style=dashed, color=red, label=string];
m27_32 -> m27_18  [key=1, style=dashed, color=red, label=double];
m27_33 -> m27_24  [key=1, style=dashed, color=red, label=string];
m27_34 -> m27_24  [key=1, style=dashed, color=red, label=string];
m28_16 -> m28_17  [key=0, style=solid];
m28_16 -> m28_19  [key=1, style=dashed, color=red, label="System.Type"];
m28_16 -> m28_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m28_16 -> m28_23  [key=1, style=dashed, color=red, label="System.Collections.Generic.IDictionary<string, string>"];
m28_16 -> m28_25  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m28_16 -> m28_26  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m28_16 -> m28_27  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m28_16 -> m28_28  [key=1, style=dashed, color=darkseagreen4, label=string];
m28_16 -> m28_30  [key=1, style=dashed, color=darkseagreen4, label=string];
m28_17 -> m28_18  [key=0, style=solid];
m28_17 -> m28_19  [key=0, style=solid, color=red];
m28_17 -> m28_34  [key=2, style=dotted];
m28_19 -> m28_20  [key=0, style=solid, color=red];
m28_19 -> m28_21  [key=0, style=solid, color=red];
m28_21 -> m28_22  [key=0, style=solid];
m28_21 -> m28_23  [key=0, style=solid, color=red];
m28_23 -> m28_24  [key=0, style=solid, color=red];
m28_23 -> m28_25  [key=0, style=solid, color=red];
m28_25 -> m28_26  [key=0, style=solid];
m28_25 -> m28_27  [key=0, style=solid];
m28_25 -> m28_35  [key=2, style=dotted];
m28_26 -> m28_33  [key=0, style=solid];
m28_26 -> m28_36  [key=2, style=dotted];
m28_26 -> m28_37  [key=2, style=dotted];
m28_27 -> m28_28  [key=0, style=solid];
m28_27 -> m28_38  [key=2, style=dotted];
m28_28 -> m28_29  [key=0, style=solid];
m28_28 -> m28_39  [key=2, style=dotted];
m28_28 -> m28_40  [key=2, style=dotted];
m28_30 -> m28_33  [key=0, style=solid];
m28_18 -> m28_33  [key=0, style=solid];
m28_18 -> n18  [key=2, style=dotted];
m28_20 -> m28_33  [key=0, style=solid, color=red];
m28_20 -> n18  [key=2, style=dotted, color=red];
m28_22 -> m28_33  [key=0, style=solid];
m28_22 -> n18  [key=2, style=dotted];
m28_24 -> m28_33  [key=0, style=solid, color=red];
m28_24 -> n18  [key=2, style=dotted, color=red];
m28_29 -> m28_30  [key=0, style=solid];
m28_29 -> m28_41  [key=2, style=dotted];
m28_31 -> m28_32  [key=0, style=solid];
m28_32 -> m28_33  [key=0, style=solid];
m28_32 -> m28_42  [key=2, style=dotted];
m28_33 -> m28_16  [key=0, style=bold, color=blue];
m28_43 -> m28_44  [key=0, style=solid];
m28_44 -> m28_45  [key=0, style=solid];
m28_44 -> m28_46  [key=2, style=dotted];
m28_45 -> m28_43  [key=0, style=bold, color=blue];
m28_38 -> m28_47  [key=0, style=solid];
m28_38 -> m28_48  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m28_38 -> m28_49  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m28_47 -> m28_48  [key=0, style=solid];
m28_47 -> m28_54  [key=2, style=dotted];
m28_47 -> m28_49  [key=1, style=dashed, color=darkseagreen4, label=job];
m28_47 -> m28_50  [key=1, style=dashed, color=darkseagreen4, label=job];
m28_47 -> m28_51  [key=1, style=dashed, color=darkseagreen4, label=job];
m28_47 -> m28_52  [key=1, style=dashed, color=darkseagreen4, label=job];
m28_48 -> m28_49  [key=0, style=solid];
m28_49 -> m28_50  [key=0, style=solid];
m28_49 -> m28_55  [key=2, style=dotted];
m28_50 -> m28_51  [key=0, style=solid];
m28_51 -> m28_52  [key=0, style=solid];
m28_51 -> m28_56  [key=2, style=dotted];
m28_52 -> m28_53  [key=0, style=solid];
m28_53 -> m28_38  [key=0, style=bold, color=blue];
m28_0 -> m28_1  [key=0, style=solid];
m28_1 -> m28_0  [key=0, style=bold, color=blue];
m28_2 -> m28_3  [key=0, style=solid, color=red];
m28_2 -> m28_5  [key=1, style=dashed, color=red, label="HangFire.Client.JobCreator"];
m28_2 -> m28_7  [key=1, style=dashed, color=darkseagreen4, label=IRedisClientsManager];
m28_2 -> m28_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobCreator"];
m28_3 -> m28_4  [key=0, style=solid, color=red];
m28_3 -> m28_5  [key=0, style=solid, color=red];
m28_5 -> m28_6  [key=0, style=solid, color=red];
m28_5 -> m28_7  [key=0, style=solid, color=red];
m28_7 -> m28_8  [key=0, style=solid];
m28_7 -> m28_11  [key=2, style=dotted];
m28_8 -> m28_9  [key=0, style=solid];
m28_4 -> m28_9  [key=0, style=solid, color=red];
m28_4 -> n18  [key=2, style=dotted, color=red];
m28_6 -> m28_9  [key=0, style=solid, color=red];
m28_6 -> n18  [key=2, style=dotted, color=red];
m28_9 -> m28_2  [key=0, style=bold, color=blue];
m28_15 -> m28_57  [key=0, style=solid];
m28_15 -> m28_58  [key=1, style=dashed, color=darkseagreen4, label=object];
m28_15 -> m28_60  [key=1, style=dashed, color=darkseagreen4, label=object];
m28_15 -> m28_61  [key=1, style=dashed, color=darkseagreen4, label=object];
m28_57 -> m28_58  [key=0, style=solid];
m28_57 -> m28_54  [key=2, style=dotted];
m28_57 -> m28_59  [key=1, style=dashed, color=darkseagreen4, label=result];
m28_57 -> m28_68  [key=1, style=dashed, color=darkseagreen4, label=result];
m28_57 -> m28_69  [key=1, style=dashed, color=darkseagreen4, label=result];
m28_58 -> m28_59  [key=0, style=solid];
m28_58 -> m28_60  [key=0, style=solid];
m28_60 -> m28_61  [key=0, style=solid];
m28_60 -> m28_69  [key=0, style=solid];
m28_60 -> m28_71  [key=2, style=dotted];
m28_60 -> m28_67  [key=1, style=dashed, color=darkseagreen4, label=descriptor];
m28_60 -> m28_68  [key=1, style=dashed, color=darkseagreen4, label=descriptor];
m28_61 -> m28_62  [key=0, style=solid];
m28_61 -> m28_72  [key=2, style=dotted];
m28_61 -> m28_63  [key=1, style=dashed, color=darkseagreen4, label=propertyValue];
m28_61 -> m28_64  [key=1, style=dashed, color=darkseagreen4, label=propertyValue];
m28_61 -> m28_65  [key=1, style=dashed, color=darkseagreen4, label=propertyValue];
m28_59 -> m28_70  [key=0, style=solid];
m28_68 -> m28_60  [key=0, style=solid];
m28_68 -> m28_77  [key=2, style=dotted];
m28_69 -> m28_70  [key=0, style=solid];
m28_67 -> m28_70  [key=0, style=solid];
m28_67 -> m28_76  [key=2, style=dotted];
m28_67 -> m28_37  [key=2, style=dotted];
m28_62 -> m28_63  [key=0, style=solid];
m28_62 -> m28_68  [key=1, style=dashed, color=darkseagreen4, label=value];
m28_62 -> m28_62  [key=3, color=darkorchid, style=bold, label="Local variable string value"];
m28_63 -> m28_64  [key=0, style=solid];
m28_63 -> m28_68  [key=0, style=solid];
m28_64 -> m28_65  [key=0, style=solid];
m28_64 -> m28_73  [key=2, style=dotted];
m28_64 -> m28_74  [key=2, style=dotted];
m28_65 -> m28_66  [key=0, style=solid];
m28_65 -> m28_68  [key=0, style=solid];
m28_65 -> m28_75  [key=2, style=dotted];
m28_66 -> m28_67  [key=0, style=solid];
m28_70 -> m28_15  [key=0, style=bold, color=blue];
m28_12 -> m28_13  [key=0, style=solid, color=red];
m28_12 -> m28_16  [key=3, color=darkorchid, style=bold, label="method methodReturn string CreateJob"];
m28_13 -> m28_14  [key=0, style=solid, color=red];
m28_13 -> m28_15  [key=2, style=dotted, color=red];
m28_13 -> m28_16  [key=2, style=dotted, color=red];
m28_14 -> m28_12  [key=0, style=bold, color=blue];
m28_78 -> m28_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m28_78 -> m28_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m28_78 -> m28_13  [key=1, style=dashed, color=red, label="HangFire.Client.JobClient"];
m28_78 -> m28_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m28_78 -> m28_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m28_78 -> m28_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.JobClient"];
m29_19 -> m29_20  [key=0, style=solid, color=red];
m29_20 -> m29_21  [key=0, style=solid, color=red];
m29_20 -> m29_7  [key=2, style=dotted, color=red];
m29_20 -> m29_24  [key=1, style=dashed, color=red, label=options];
m29_21 -> m29_22  [key=0, style=solid, color=red];
m29_21 -> m29_15  [key=2, style=dotted, color=red];
m29_21 -> m29_23  [key=1, style=dashed, color=red, label="lambda expression"];
m29_22 -> m29_19  [key=0, style=bold, color=blue];
m29_11 -> m29_12  [key=0, style=solid, color=red];
m29_12 -> m29_13  [key=0, style=solid, color=red];
m29_12 -> m29_7  [key=2, style=dotted, color=red];
m29_12 -> m29_17  [key=1, style=dashed, color=red, label=options];
m29_13 -> m29_14  [key=0, style=solid, color=red];
m29_13 -> m29_15  [key=2, style=dotted, color=red];
m29_13 -> m29_16  [key=1, style=dashed, color=red, label="lambda expression"];
m29_14 -> m29_11  [key=0, style=bold, color=blue];
m29_33 -> m29_34  [key=0, style=solid];
m29_34 -> m29_35  [key=0, style=solid];
m29_34 -> m29_7  [key=2, style=dotted];
m29_34 -> m29_38  [key=1, style=dashed, color=darkseagreen4, label=options];
m29_35 -> m29_36  [key=0, style=solid];
m29_35 -> m29_15  [key=2, style=dotted];
m29_35 -> m29_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_36 -> m29_33  [key=0, style=bold, color=blue];
m29_40 -> m29_41  [key=0, style=solid];
m29_41 -> m29_42  [key=0, style=solid];
m29_41 -> m29_7  [key=2, style=dotted];
m29_42 -> m29_43  [key=0, style=solid];
m29_42 -> m29_44  [key=2, style=dotted];
m29_43 -> m29_40  [key=0, style=bold, color=blue];
m29_0 -> m29_1  [key=0, style=solid, color=red];
m29_1 -> m29_2  [key=0, style=solid, color=red];
m29_1 -> m29_7  [key=2, style=dotted, color=red];
m29_1 -> m29_3  [key=1, style=dashed, color=red, label=options];
m29_1 -> m29_4  [key=1, style=dashed, color=red, label=options];
m29_1 -> m29_5  [key=1, style=dashed, color=red, label=options];
m29_2 -> m29_3  [key=0, style=solid, color=red];
m29_2 -> m29_8  [key=2, style=dotted, color=red];
m29_2 -> m29_9  [key=2, style=dotted, color=red];
m29_3 -> m29_4  [key=0, style=solid, color=red];
m29_3 -> m29_9  [key=2, style=dotted, color=red];
m29_4 -> m29_5  [key=0, style=solid, color=red];
m29_4 -> m29_10  [key=2, style=dotted, color=red];
m29_5 -> m29_6  [key=0, style=solid, color=red];
m29_5 -> m29_10  [key=2, style=dotted, color=red];
m29_6 -> m29_0  [key=0, style=bold, color=blue];
m29_26 -> m29_27  [key=0, style=solid];
m29_27 -> m29_28  [key=0, style=solid];
m29_27 -> m29_7  [key=2, style=dotted];
m29_27 -> m29_31  [key=1, style=dashed, color=darkseagreen4, label=options];
m29_28 -> m29_29  [key=0, style=solid];
m29_28 -> m29_15  [key=2, style=dotted];
m29_28 -> m29_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_29 -> m29_26  [key=0, style=bold, color=blue];
m29_37 -> m29_38  [key=0, style=solid];
m29_17 -> m29_18  [key=0, style=solid, color=red];
m29_16 -> m29_17  [key=0, style=solid, color=red];
m29_18 -> m29_16  [key=0, style=bold, color=blue];
m29_24 -> m29_25  [key=0, style=solid, color=red];
m29_23 -> m29_24  [key=0, style=solid, color=red];
m29_25 -> m29_23  [key=0, style=bold, color=blue];
m29_31 -> m29_32  [key=0, style=solid];
m29_30 -> m29_31  [key=0, style=solid];
m29_32 -> m29_30  [key=0, style=bold, color=blue];
m29_38 -> m29_39  [key=0, style=solid];
m29_39 -> m29_37  [key=0, style=bold, color=blue];
m29_7 -> m29_45  [key=0, style=solid];
m29_45 -> m29_46  [key=0, style=solid];
m29_45 -> m29_47  [key=2, style=dotted];
m29_46 -> m29_7  [key=0, style=bold, color=blue];
m29_48 -> m29_17  [key=1, style=dashed, color=red, label=options];
m29_49 -> m29_24  [key=1, style=dashed, color=red, label=options];
m29_50 -> m29_31  [key=1, style=dashed, color=darkseagreen4, label=options];
m29_51 -> m29_38  [key=1, style=dashed, color=darkseagreen4, label=options];
m30_8 -> m30_9  [key=0, style=solid, color=green];
m30_8 -> m30_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m30_9 -> m30_10  [key=0, style=solid, color=green];
m30_9 -> m30_12  [key=2, style=dotted, color=green];
m30_10 -> m30_11  [key=0, style=solid];
m30_10 -> m30_13  [key=2, style=dotted];
m30_11 -> m30_8  [key=0, style=bold, color=blue];
m31_0 -> m31_1  [key=0, style=solid];
m31_0 -> m31_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m31_0 -> m31_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m31_0 -> m31_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m31_0 -> m31_8  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m31_1 -> m31_2  [key=0, style=solid];
m31_1 -> m31_3  [key=0, style=solid];
m31_3 -> m31_4  [key=0, style=solid];
m31_3 -> m31_5  [key=0, style=solid];
m31_6 -> m31_7  [key=0, style=solid];
m31_7 -> m31_8  [key=0, style=solid];
m31_8 -> m31_9  [key=0, style=solid];
m31_2 -> m31_9  [key=0, style=solid];
m31_2 -> n18  [key=2, style=dotted];
m31_4 -> m31_9  [key=0, style=solid];
m31_4 -> n18  [key=2, style=dotted];
m31_5 -> m31_6  [key=0, style=solid];
m31_5 -> m31_11  [key=2, style=dotted];
m31_9 -> m31_0  [key=0, style=bold, color=blue];
m31_12 -> m31_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m31_12 -> m31_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m31_12 -> m31_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m31_12 -> m31_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m32_42 -> m32_43  [key=0, style=solid];
m32_43 -> m32_44  [key=0, style=solid];
m32_43 -> m32_32  [key=2, style=dotted];
m32_44 -> m32_45  [key=0, style=solid];
m32_44 -> m32_33  [key=2, style=dotted];
m32_45 -> m32_46  [key=0, style=solid];
m32_45 -> m32_48  [key=2, style=dotted];
m32_45 -> m32_34  [key=2, style=dotted];
m32_45 -> m32_49  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m32_46 -> m32_47  [key=0, style=solid];
m32_46 -> m32_48  [key=2, style=dotted];
m32_46 -> m32_34  [key=2, style=dotted];
m32_46 -> m32_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m32_47 -> m32_42  [key=0, style=bold, color=blue];
m32_0 -> m32_1  [key=0, style=solid];
m32_3 -> m32_4  [key=0, style=solid, color=green];
m32_3 -> m32_9  [key=2, style=dotted, color=green];
m32_2 -> m32_3  [key=0, style=solid, color=green];
m32_2 -> m32_8  [key=2, style=dotted];
m32_4 -> m32_5  [key=0, style=solid, color=green];
m32_4 -> m32_10  [key=2, style=dotted, color=green];
m32_5 -> m32_6  [key=0, style=solid];
m32_5 -> m32_11  [key=2, style=dotted];
m32_5 -> m32_12  [key=2, style=dotted];
m32_5 -> m32_13  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m32_1 -> m32_2  [key=0, style=solid];
m32_1 -> m32_7  [key=2, style=dotted];
m32_6 -> m32_0  [key=0, style=bold, color=blue];
m32_56 -> m32_57  [key=0, style=solid];
m32_57 -> m32_65  [key=2, style=dotted];
m32_57 -> m32_58  [key=0, style=solid];
m32_57 -> m32_62  [key=1, style=dashed, color=darkseagreen4, label=component1];
m32_59 -> m32_65  [key=2, style=dotted];
m32_59 -> m32_60  [key=0, style=solid];
m32_59 -> m32_63  [key=1, style=dashed, color=darkseagreen4, label=component2];
m32_60 -> m32_61  [key=0, style=solid];
m32_60 -> m32_32  [key=2, style=dotted];
m32_61 -> m32_62  [key=0, style=solid];
m32_61 -> m32_33  [key=2, style=dotted];
m32_62 -> m32_63  [key=0, style=solid];
m32_62 -> m32_34  [key=2, style=dotted];
m32_62 -> m32_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m32_63 -> m32_64  [key=0, style=solid];
m32_63 -> m32_34  [key=2, style=dotted];
m32_63 -> m32_78  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m32_58 -> m32_59  [key=0, style=solid];
m32_58 -> m32_11  [key=2, style=dotted];
m32_58 -> m32_66  [key=2, style=dotted];
m32_58 -> m32_67  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m32_58 -> m32_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m32_64 -> m32_56  [key=0, style=bold, color=blue];
m32_65 -> m32_92  [key=0, style=solid, color=green];
m32_92 -> m32_93  [key=0, style=solid, color=green];
m32_92 -> m32_96  [key=2, style=dotted, color=green];
m32_92 -> m32_94  [key=1, style=dashed, color=green, label=mock];
m32_93 -> m32_94  [key=0, style=solid, color=green];
m32_93 -> m32_97  [key=2, style=dotted, color=green];
m32_94 -> m32_95  [key=0, style=solid, color=green];
m32_95 -> m32_65  [key=0, style=bold, color=blue];
m32_32 -> m32_90  [key=0, style=solid];
m32_90 -> m32_91  [key=0, style=solid];
m32_90 -> m32_26  [key=2, style=dotted];
m32_91 -> m32_32  [key=0, style=bold, color=blue];
m32_81 -> m32_82  [key=0, style=solid];
m32_82 -> m32_83  [key=0, style=solid];
m32_82 -> m32_32  [key=2, style=dotted];
m32_83 -> m32_84  [key=0, style=solid];
m32_83 -> m32_33  [key=2, style=dotted];
m32_84 -> m32_85  [key=0, style=solid];
m32_84 -> m32_34  [key=2, style=dotted];
m32_84 -> m32_86  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m32_85 -> m32_81  [key=0, style=bold, color=blue];
m32_27 -> m32_28  [key=0, style=solid];
m32_28 -> m32_29  [key=0, style=solid];
m32_28 -> m32_32  [key=2, style=dotted];
m32_29 -> m32_30  [key=0, style=solid];
m32_29 -> m32_33  [key=2, style=dotted];
m32_30 -> m32_31  [key=0, style=solid];
m32_30 -> m32_34  [key=2, style=dotted];
m32_30 -> m32_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m32_31 -> m32_27  [key=0, style=bold, color=blue];
m32_23 -> m32_24  [key=0, style=solid];
m32_36 -> m32_37  [key=0, style=solid];
m32_36 -> m32_21  [key=2, style=dotted];
m32_36 -> m32_38  [key=2, style=dotted];
m32_36 -> m32_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m32_40 -> m32_41  [key=0, style=solid];
m32_76 -> m32_77  [key=0, style=solid];
m32_76 -> m32_70  [key=2, style=dotted];
m32_79 -> m32_80  [key=0, style=solid];
m32_79 -> m32_70  [key=2, style=dotted];
m32_87 -> m32_88  [key=0, style=solid];
m32_87 -> m32_89  [key=2, style=dotted];
m32_13 -> m32_14  [key=0, style=solid];
m32_35 -> m32_36  [key=0, style=solid];
m32_37 -> m32_35  [key=0, style=bold, color=blue];
m32_39 -> m32_40  [key=0, style=solid];
m32_41 -> m32_39  [key=0, style=bold, color=blue];
m32_49 -> m32_50  [key=0, style=solid];
m32_52 -> m32_53  [key=0, style=solid];
m32_75 -> m32_76  [key=0, style=solid];
m32_77 -> m32_75  [key=0, style=bold, color=blue];
m32_78 -> m32_79  [key=0, style=solid];
m32_80 -> m32_78  [key=0, style=bold, color=blue];
m32_86 -> m32_87  [key=0, style=solid];
m32_88 -> m32_86  [key=0, style=bold, color=blue];
m32_15 -> m32_13  [key=0, style=bold, color=blue];
m32_14 -> m32_15  [key=0, style=solid];
m32_14 -> m32_16  [key=2, style=dotted];
m32_68 -> m32_21  [key=2, style=dotted];
m32_68 -> m32_70  [key=2, style=dotted];
m32_68 -> m32_69  [key=0, style=solid];
m32_51 -> m32_49  [key=0, style=bold, color=blue];
m32_50 -> m32_51  [key=0, style=solid];
m32_50 -> m32_16  [key=2, style=dotted];
m32_54 -> m32_52  [key=0, style=bold, color=blue];
m32_53 -> m32_54  [key=0, style=solid];
m32_53 -> m32_55  [key=2, style=dotted];
m32_67 -> m32_68  [key=0, style=solid];
m32_71 -> m32_72  [key=0, style=solid];
m32_24 -> m32_26  [key=2, style=dotted];
m32_24 -> m32_25  [key=0, style=solid];
m32_69 -> m32_67  [key=0, style=bold, color=blue];
m32_73 -> m32_71  [key=0, style=bold, color=blue];
m32_72 -> m32_73  [key=0, style=solid];
m32_72 -> m32_74  [key=2, style=dotted];
m32_25 -> m32_23  [key=0, style=bold, color=blue];
m32_17 -> m32_18  [key=0, style=solid];
m32_18 -> m32_21  [key=2, style=dotted];
m32_18 -> m32_19  [key=0, style=solid];
m32_18 -> m32_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m32_19 -> m32_20  [key=0, style=solid];
m32_19 -> m32_22  [key=2, style=dotted];
m32_20 -> m32_17  [key=0, style=bold, color=blue];
m32_98 -> m32_3  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m32_98 -> m32_4  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m32_98 -> m32_93  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m32_98 -> m32_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m32_98 -> m32_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m32_98 -> m32_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m32_98 -> m32_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m32_98 -> m32_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m32_98 -> m32_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m32_98 -> m32_36  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m32_98 -> m32_40  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m32_98 -> m32_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m32_98 -> m32_44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m32_98 -> m32_45  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m32_98 -> m32_46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m32_98 -> m32_57  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m32_98 -> m32_59  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m32_98 -> m32_60  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m32_98 -> m32_61  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m32_98 -> m32_62  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m32_98 -> m32_76  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m32_98 -> m32_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m32_98 -> m32_79  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m32_98 -> m32_82  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m32_98 -> m32_83  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m32_98 -> m32_84  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m32_98 -> m32_87  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m32_98 -> m32_90  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.ServerBootstrapperFacts"];
m35_3 -> m35_4  [key=0, style=solid, color=red];
m35_4 -> m35_5  [key=0, style=solid, color=red];
m35_4 -> m35_6  [key=2, style=dotted, color=red];
m35_4 -> m35_7  [key=2, style=dotted, color=red];
m35_5 -> m35_3  [key=0, style=bold, color=blue];
m35_0 -> m35_1  [key=0, style=solid, color=red];
m35_1 -> m35_2  [key=0, style=solid, color=red];
m35_2 -> m35_0  [key=0, style=bold, color=blue];
m35_8 -> m35_1  [key=1, style=dashed, color=red, label="HangFire.SqlServer.DataTypes.SqlServerSet"];
m35_8 -> m35_4  [key=1, style=dashed, color=red, label="HangFire.SqlServer.DataTypes.SqlServerSet"];
m36_55 -> m36_56  [key=0, style=solid];
m36_56 -> m36_57  [key=0, style=solid];
m36_56 -> m36_39  [key=2, style=dotted];
m36_57 -> m36_58  [key=0, style=solid];
m36_57 -> m36_22  [key=2, style=dotted];
m36_58 -> m36_59  [key=0, style=solid];
m36_58 -> m36_40  [key=2, style=dotted];
m36_59 -> m36_60  [key=0, style=solid];
m36_59 -> m36_41  [key=2, style=dotted];
m36_60 -> m36_61  [key=0, style=solid];
m36_60 -> m36_42  [key=2, style=dotted];
m36_61 -> m36_62  [key=0, style=solid];
m36_61 -> m36_43  [key=2, style=dotted];
m36_62 -> m36_63  [key=0, style=solid];
m36_62 -> m36_26  [key=2, style=dotted];
m36_63 -> m36_55  [key=0, style=bold, color=blue];
m36_26 -> m36_27  [key=0, style=solid];
m36_27 -> m36_28  [key=0, style=solid];
m36_27 -> m36_29  [key=2, style=dotted];
m36_28 -> m36_26  [key=0, style=bold, color=blue];
m36_0 -> m36_1  [key=0, style=solid, color=red];
m36_1 -> m36_2  [key=0, style=solid, color=red];
m36_1 -> m36_5  [key=2, style=dotted, color=red];
m36_2 -> m36_3  [key=0, style=solid, color=red];
m36_2 -> m36_6  [key=2, style=dotted, color=red];
m36_2 -> m36_7  [key=2, style=dotted, color=red];
m36_3 -> m36_4  [key=0, style=solid, color=red];
m36_3 -> m36_8  [key=2, style=dotted, color=red];
m36_4 -> m36_0  [key=0, style=bold, color=blue];
m36_76 -> m36_77  [key=0, style=solid];
m36_77 -> m36_78  [key=0, style=solid];
m36_77 -> m36_39  [key=2, style=dotted];
m36_78 -> m36_79  [key=0, style=solid];
m36_78 -> m36_22  [key=2, style=dotted];
m36_79 -> m36_80  [key=0, style=solid];
m36_79 -> m36_40  [key=2, style=dotted];
m36_80 -> m36_81  [key=0, style=solid];
m36_80 -> m36_41  [key=2, style=dotted];
m36_81 -> m36_82  [key=0, style=solid];
m36_81 -> m36_42  [key=2, style=dotted];
m36_82 -> m36_83  [key=0, style=solid];
m36_82 -> m36_43  [key=2, style=dotted];
m36_83 -> m36_84  [key=0, style=solid];
m36_83 -> m36_26  [key=2, style=dotted];
m36_84 -> m36_76  [key=0, style=bold, color=blue];
m36_30 -> m36_31  [key=0, style=solid];
m36_31 -> m36_32  [key=0, style=solid];
m36_31 -> m36_39  [key=2, style=dotted];
m36_32 -> m36_33  [key=0, style=solid];
m36_32 -> m36_22  [key=2, style=dotted];
m36_33 -> m36_34  [key=0, style=solid];
m36_33 -> m36_40  [key=2, style=dotted];
m36_34 -> m36_35  [key=0, style=solid];
m36_34 -> m36_41  [key=2, style=dotted];
m36_35 -> m36_36  [key=0, style=solid];
m36_35 -> m36_42  [key=2, style=dotted];
m36_36 -> m36_37  [key=0, style=solid];
m36_36 -> m36_43  [key=2, style=dotted];
m36_37 -> m36_38  [key=0, style=solid];
m36_37 -> m36_26  [key=2, style=dotted];
m36_38 -> m36_30  [key=0, style=bold, color=blue];
m36_9 -> m36_10  [key=0, style=solid, color=red];
m36_10 -> m36_11  [key=0, style=solid, color=red];
m36_10 -> m36_13  [key=2, style=dotted, color=red];
m36_11 -> m36_12  [key=0, style=solid, color=red];
m36_12 -> m36_9  [key=0, style=bold, color=blue];
m36_44 -> m36_45  [key=0, style=solid];
m36_45 -> m36_46  [key=0, style=solid];
m36_45 -> m36_39  [key=2, style=dotted];
m36_46 -> m36_47  [key=0, style=solid];
m36_46 -> m36_22  [key=2, style=dotted];
m36_47 -> m36_48  [key=0, style=solid];
m36_47 -> m36_40  [key=2, style=dotted];
m36_48 -> m36_49  [key=0, style=solid];
m36_48 -> m36_41  [key=2, style=dotted];
m36_49 -> m36_50  [key=0, style=solid];
m36_49 -> m36_42  [key=2, style=dotted];
m36_50 -> m36_51  [key=0, style=solid];
m36_50 -> m36_43  [key=2, style=dotted];
m36_51 -> m36_52  [key=0, style=solid];
m36_51 -> m36_54  [key=2, style=dotted];
m36_52 -> m36_53  [key=0, style=solid];
m36_52 -> m36_26  [key=2, style=dotted];
m36_53 -> m36_44  [key=0, style=bold, color=blue];
m36_64 -> m36_65  [key=0, style=solid];
m36_65 -> m36_66  [key=0, style=solid];
m36_65 -> m36_39  [key=2, style=dotted];
m36_66 -> m36_67  [key=0, style=solid];
m36_66 -> m36_22  [key=2, style=dotted];
m36_67 -> m36_68  [key=0, style=solid];
m36_67 -> m36_40  [key=2, style=dotted];
m36_68 -> m36_69  [key=0, style=solid];
m36_68 -> m36_41  [key=2, style=dotted];
m36_69 -> m36_70  [key=0, style=solid];
m36_69 -> m36_41  [key=2, style=dotted];
m36_70 -> m36_71  [key=0, style=solid];
m36_70 -> m36_42  [key=2, style=dotted];
m36_71 -> m36_72  [key=0, style=solid];
m36_71 -> m36_43  [key=2, style=dotted];
m36_72 -> m36_73  [key=0, style=solid];
m36_72 -> m36_42  [key=2, style=dotted];
m36_73 -> m36_74  [key=0, style=solid];
m36_73 -> m36_43  [key=2, style=dotted];
m36_74 -> m36_75  [key=0, style=solid];
m36_74 -> m36_26  [key=2, style=dotted];
m36_75 -> m36_64  [key=0, style=bold, color=blue];
m36_85 -> m36_86  [key=0, style=solid];
m36_86 -> m36_87  [key=0, style=solid];
m36_86 -> m36_39  [key=2, style=dotted];
m36_87 -> m36_88  [key=0, style=solid];
m36_87 -> m36_22  [key=2, style=dotted];
m36_88 -> m36_89  [key=0, style=solid];
m36_88 -> m36_40  [key=2, style=dotted];
m36_89 -> m36_90  [key=0, style=solid];
m36_89 -> m36_41  [key=2, style=dotted];
m36_90 -> m36_91  [key=0, style=solid];
m36_90 -> m36_42  [key=2, style=dotted];
m36_91 -> m36_92  [key=0, style=solid];
m36_91 -> m36_43  [key=2, style=dotted];
m36_92 -> m36_93  [key=0, style=solid];
m36_92 -> m36_26  [key=2, style=dotted];
m36_93 -> m36_85  [key=0, style=bold, color=blue];
m36_14 -> m36_15  [key=0, style=solid];
m36_15 -> m36_16  [key=0, style=solid];
m36_15 -> m36_17  [key=0, style=solid];
m36_16 -> m36_17  [key=0, style=solid];
m36_16 -> m36_0  [key=2, style=dotted];
m36_17 -> m36_14  [key=0, style=bold, color=blue];
m36_18 -> m36_19  [key=0, style=solid];
m36_19 -> m36_20  [key=0, style=solid];
m36_19 -> m36_21  [key=2, style=dotted];
m36_20 -> m36_18  [key=0, style=bold, color=blue];
m36_22 -> m36_23  [key=0, style=solid];
m36_23 -> m36_24  [key=0, style=solid];
m36_23 -> m36_25  [key=2, style=dotted];
m36_24 -> m36_22  [key=0, style=bold, color=blue];
m36_94 -> m36_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherFeature"];
m36_94 -> m36_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherFeature"];
m36_94 -> m36_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherFeature"];
m36_94 -> m36_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherFeature"];
m36_94 -> m36_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherFeature"];
m36_94 -> m36_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherFeature"];
m36_94 -> m36_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherFeature"];
m36_94 -> m36_74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherFeature"];
m36_94 -> m36_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherFeature"];
m36_94 -> m36_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherFeature"];
m36_94 -> m36_87  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherFeature"];
m36_94 -> m36_92  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobFetcherFeature"];
m37_8 -> m37_9  [key=0, style=solid, color=red];
m37_9 -> m37_10  [key=0, style=solid, color=red];
m37_9 -> m37_11  [key=2, style=dotted, color=red];
m37_9 -> m37_12  [key=2, style=dotted, color=red];
m37_10 -> m37_8  [key=0, style=bold, color=blue];
m37_0 -> m37_1  [key=0, style=solid, color=red];
m37_0 -> m37_3  [key=1, style=dashed, color=red, label=string];
m37_1 -> m37_2  [key=0, style=solid, color=red];
m37_1 -> m37_3  [key=0, style=solid, color=red];
m37_1 -> m37_6  [key=2, style=dotted, color=red];
m37_3 -> m37_4  [key=0, style=solid, color=red];
m37_2 -> m37_5  [key=0, style=solid, color=red];
m37_2 -> n18  [key=2, style=dotted, color=red];
m37_4 -> m37_5  [key=0, style=solid, color=red];
m37_5 -> m37_0  [key=0, style=bold, color=blue];
m37_13 -> m37_3  [key=1, style=dashed, color=red, label="HangFire.States.ProcessingState"];
m37_13 -> m37_4  [key=1, style=dashed, color=red, label="HangFire.States.ProcessingState"];
m37_13 -> m37_9  [key=1, style=dashed, color=red, label="HangFire.States.ProcessingState"];
m38_14 -> m38_15  [key=0, style=solid, color=red];
m38_14 -> m38_18  [key=1, style=dashed, color=red, label=string];
m38_15 -> m38_16  [key=0, style=solid, color=red];
m38_15 -> m38_9  [key=2, style=dotted, color=red];
m38_15 -> m38_17  [key=1, style=dashed, color=red, label="lambda expression"];
m38_16 -> m38_14  [key=0, style=bold, color=blue];
m38_0 -> m38_1  [key=0, style=solid, color=red];
m38_0 -> m38_3  [key=1, style=dashed, color=red, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m38_1 -> m38_2  [key=0, style=solid, color=red];
m38_1 -> m38_3  [key=0, style=solid, color=red];
m38_3 -> m38_4  [key=0, style=solid, color=red];
m38_2 -> m38_4  [key=0, style=solid, color=red];
m38_2 -> n18  [key=2, style=dotted, color=red];
m38_4 -> m38_0  [key=0, style=bold, color=blue];
m38_20 -> m38_21  [key=0, style=solid, color=red];
m38_20 -> m38_22  [key=1, style=dashed, color=red, label=int];
m38_20 -> m38_25  [key=1, style=dashed, color=red, label=int];
m38_21 -> m38_22  [key=0, style=solid, color=red];
m38_21 -> m38_25  [key=1, style=dashed, color=red, label=trimSql];
m38_21 -> m38_21  [key=3, color=red, style=bold, label="Local variable string trimSql"];
m38_22 -> m38_23  [key=0, style=solid, color=red];
m38_22 -> m38_9  [key=2, style=dotted, color=red];
m38_22 -> m38_24  [key=1, style=dashed, color=red, label="lambda expression"];
m38_23 -> m38_20  [key=0, style=bold, color=blue];
m38_6 -> m38_7  [key=0, style=solid, color=red];
m38_6 -> m38_11  [key=1, style=dashed, color=red, label=string];
m38_7 -> m38_8  [key=0, style=solid, color=red];
m38_7 -> m38_9  [key=2, style=dotted, color=red];
m38_7 -> m38_10  [key=1, style=dashed, color=red, label="lambda expression"];
m38_8 -> m38_6  [key=0, style=bold, color=blue];
m38_24 -> m38_25  [key=0, style=solid, color=red];
m38_11 -> m38_12  [key=0, style=solid, color=red];
m38_11 -> m38_13  [key=2, style=dotted, color=red];
m38_10 -> m38_11  [key=0, style=solid, color=red];
m38_12 -> m38_10  [key=0, style=bold, color=blue];
m38_18 -> m38_19  [key=0, style=solid, color=red];
m38_18 -> m38_13  [key=2, style=dotted, color=red];
m38_17 -> m38_18  [key=0, style=solid, color=red];
m38_19 -> m38_17  [key=0, style=bold, color=blue];
m38_25 -> m38_26  [key=0, style=solid, color=red];
m38_25 -> m38_13  [key=2, style=dotted, color=red];
m38_26 -> m38_24  [key=0, style=bold, color=blue];
m38_27 -> m38_3  [key=1, style=dashed, color=red, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList"];
m38_27 -> m38_7  [key=1, style=dashed, color=red, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList"];
m38_27 -> m38_15  [key=1, style=dashed, color=red, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList"];
m38_27 -> m38_22  [key=1, style=dashed, color=red, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList"];
m38_28 -> m38_11  [key=1, style=dashed, color=red, label=string];
m38_29 -> m38_11  [key=1, style=dashed, color=red, label=string];
m38_30 -> m38_18  [key=1, style=dashed, color=red, label=string];
m38_31 -> m38_18  [key=1, style=dashed, color=red, label=string];
m38_32 -> m38_25  [key=1, style=dashed, color=red, label=int];
m38_33 -> m38_25  [key=1, style=dashed, color=red, label=int];
m38_34 -> m38_25  [key=1, style=dashed, color=red, label=trimSql];
m39_0 -> m39_1  [key=0, style=solid, color=red];
m39_0 -> m39_3  [key=1, style=dashed, color=red, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m39_1 -> m39_2  [key=0, style=solid, color=red];
m39_1 -> m39_3  [key=0, style=solid, color=red];
m39_3 -> m39_4  [key=0, style=solid, color=red];
m39_2 -> m39_4  [key=0, style=solid, color=red];
m39_2 -> n18  [key=2, style=dotted, color=red];
m39_4 -> m39_0  [key=0, style=bold, color=blue];
m39_6 -> m39_7  [key=0, style=solid, color=red];
m39_6 -> m39_8  [key=1, style=dashed, color=red, label=string];
m39_6 -> m39_12  [key=1, style=dashed, color=red, label=string];
m39_7 -> m39_8  [key=0, style=solid, color=red];
m39_7 -> m39_12  [key=1, style=dashed, color=red, label=enqueueJobSql];
m39_7 -> m39_7  [key=3, color=red, style=bold, label="Local variable string enqueueJobSql"];
m39_8 -> m39_9  [key=0, style=solid, color=red];
m39_8 -> m39_10  [key=2, style=dotted, color=red];
m39_8 -> m39_11  [key=1, style=dashed, color=red, label="lambda expression"];
m39_9 -> m39_6  [key=0, style=bold, color=blue];
m39_11 -> m39_12  [key=0, style=solid, color=red];
m39_12 -> m39_13  [key=0, style=solid, color=red];
m39_12 -> m39_14  [key=2, style=dotted, color=red];
m39_13 -> m39_11  [key=0, style=bold, color=blue];
m39_15 -> m39_3  [key=1, style=dashed, color=red, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue"];
m39_15 -> m39_8  [key=1, style=dashed, color=red, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue"];
m39_16 -> m39_12  [key=1, style=dashed, color=red, label=string];
m39_17 -> m39_12  [key=1, style=dashed, color=red, label=string];
m39_18 -> m39_12  [key=1, style=dashed, color=red, label=enqueueJobSql];
m40_6 -> m40_7  [key=0, style=solid, color=red];
m40_7 -> m40_8  [key=0, style=solid, color=red];
m40_7 -> m40_9  [key=2, style=dotted, color=red];
m40_8 -> m40_6  [key=0, style=bold, color=blue];
m40_10 -> m40_11  [key=0, style=solid, color=red];
m40_10 -> m40_12  [key=1, style=dashed, color=red, label=string];
m40_10 -> m40_16  [key=1, style=dashed, color=red, label=string];
m40_11 -> m40_12  [key=0, style=solid, color=red];
m40_11 -> m40_16  [key=1, style=dashed, color=red, label=addSql];
m40_11 -> m40_11  [key=3, color=red, style=bold, label="Local variable string addSql"];
m40_12 -> m40_13  [key=0, style=solid, color=red];
m40_12 -> m40_14  [key=2, style=dotted, color=red];
m40_12 -> m40_15  [key=1, style=dashed, color=red, label="lambda expression"];
m40_13 -> m40_10  [key=0, style=bold, color=blue];
m40_19 -> m40_20  [key=0, style=solid, color=red];
m40_19 -> m40_23  [key=1, style=dashed, color=red, label=string];
m40_20 -> m40_21  [key=0, style=solid, color=red];
m40_20 -> m40_14  [key=2, style=dotted, color=red];
m40_20 -> m40_22  [key=1, style=dashed, color=red, label="lambda expression"];
m40_21 -> m40_19  [key=0, style=bold, color=blue];
m40_0 -> m40_1  [key=0, style=solid, color=red];
m40_0 -> m40_3  [key=1, style=dashed, color=red, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m40_1 -> m40_2  [key=0, style=solid, color=red];
m40_1 -> m40_3  [key=0, style=solid, color=red];
m40_3 -> m40_4  [key=0, style=solid, color=red];
m40_2 -> m40_4  [key=0, style=solid, color=red];
m40_2 -> n18  [key=2, style=dotted, color=red];
m40_4 -> m40_0  [key=0, style=bold, color=blue];
m40_22 -> m40_23  [key=0, style=solid, color=red];
m40_16 -> m40_17  [key=0, style=solid, color=red];
m40_16 -> m40_18  [key=2, style=dotted, color=red];
m40_15 -> m40_16  [key=0, style=solid, color=red];
m40_17 -> m40_15  [key=0, style=bold, color=blue];
m40_23 -> m40_24  [key=0, style=solid, color=red];
m40_23 -> m40_18  [key=2, style=dotted, color=red];
m40_24 -> m40_22  [key=0, style=bold, color=blue];
m40_25 -> m40_3  [key=1, style=dashed, color=red, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet"];
m40_25 -> m40_7  [key=1, style=dashed, color=red, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet"];
m40_25 -> m40_12  [key=1, style=dashed, color=red, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet"];
m40_25 -> m40_20  [key=1, style=dashed, color=red, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet"];
m40_26 -> m40_16  [key=1, style=dashed, color=red, label=string];
m40_27 -> m40_16  [key=1, style=dashed, color=red, label=string];
m40_28 -> m40_16  [key=1, style=dashed, color=red, label=double];
m40_29 -> m40_16  [key=1, style=dashed, color=red, label=addSql];
m40_30 -> m40_23  [key=1, style=dashed, color=red, label=string];
m40_31 -> m40_23  [key=1, style=dashed, color=red, label=string];
m41_51 -> m41_52  [key=0, style=solid, color=green];
m41_52 -> m41_53  [key=0, style=solid, color=green];
m41_52 -> m41_62  [key=2, style=dotted, color=green];
m41_53 -> m41_54  [key=0, style=solid, color=green];
m41_53 -> m41_32  [key=2, style=dotted, color=green];
m41_54 -> m41_55  [key=0, style=solid, color=green];
m41_54 -> m41_57  [key=0, style=solid, color=green];
m41_56 -> m41_54  [key=0, style=solid, color=green];
m41_56 -> m41_57  [key=0, style=solid, color=green];
m41_56 -> m41_64  [key=2, style=dotted, color=green];
m41_55 -> m41_56  [key=0, style=solid, color=green];
m41_55 -> m41_63  [key=2, style=dotted, color=green];
m41_57 -> m41_58  [key=0, style=solid, color=green];
m41_57 -> m41_44  [key=2, style=dotted, color=green];
m41_60 -> m41_57  [key=3, color=green, style=bold, label="Parameter variable string value"];
m41_60 -> m41_61  [key=0, style=solid, color=green];
m41_60 -> m41_66  [key=2, style=dotted, color=green];
m41_58 -> m41_59  [key=0, style=solid, color=green];
m41_58 -> m41_61  [key=0, style=solid, color=green];
m41_58 -> m41_65  [key=2, style=dotted, color=green];
m41_59 -> m41_60  [key=0, style=solid, color=green];
m41_61 -> m41_51  [key=0, style=bold, color=blue];
m41_0 -> m41_1  [key=0, style=solid];
m41_0 -> m41_4  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m41_0 -> m41_6  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<string>"];
m41_0 -> m41_8  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m41_0 -> m41_10  [key=1, style=dashed, color=green, label=string];
m41_0 -> m41_11  [key=1, style=dashed, color=green, label="HangFire.JobActivator"];
m41_0 -> m41_2  [key=1, style=dashed, color=darkseagreen4, label=IRedisClientsManager];
m41_0 -> m41_3  [key=1, style=dashed, color=darkseagreen4, label=int];
m41_0 -> m41_5  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m41_1 -> m41_2  [key=0, style=solid];
m41_1 -> m41_3  [key=0, style=solid];
m41_1 -> m41_15  [key=2, style=dotted];
m41_4 -> m41_5  [key=0, style=solid, color=red];
m41_2 -> m41_5  [key=0, style=solid];
m41_2 -> n18  [key=2, style=dotted];
m41_2 -> m41_3  [key=0, style=solid];
m41_3 -> m41_4  [key=0, style=solid, color=red];
m41_5 -> m41_0  [key=0, style=bold, color=blue];
m41_5 -> m41_6  [key=0, style=solid, color=green];
m41_6 -> m41_7  [key=0, style=solid, color=green];
m41_6 -> m41_8  [key=0, style=solid, color=green];
m41_7 -> m41_14  [key=0, style=solid, color=green];
m41_7 -> n18  [key=2, style=dotted, color=green];
m41_7 -> m41_8  [key=0, style=solid];
m41_8 -> m41_8  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m41_8 -> m41_9  [key=0, style=solid, color=green];
m41_8 -> m41_10  [key=0, style=solid, color=green];
m41_8 -> m41_17  [key=2, style=dotted, color=green];
m41_8 -> m41_11  [key=2, style=dotted];
m41_8 -> m41_12  [key=2, style=dotted];
m41_8 -> m41_13  [key=2, style=dotted];
m41_9 -> m41_14  [key=0, style=solid, color=green];
m41_9 -> m41_18  [key=2, style=dotted, color=green];
m41_9 -> m41_7  [key=0, style=bold, color=blue];
m41_10 -> m41_11  [key=0, style=solid, color=green];
m41_10 -> m41_19  [key=2, style=dotted, color=green];
m41_10 -> m41_20  [key=2, style=dotted, color=green];
m41_11 -> m41_12  [key=0, style=solid, color=green];
m41_11 -> m41_21  [key=2, style=dotted, color=green];
m41_11 -> m41_22  [key=2, style=dotted, color=green];
m41_11 -> m41_23  [key=2, style=dotted, color=green];
m41_12 -> m41_13  [key=0, style=solid, color=green];
m41_12 -> m41_24  [key=2, style=dotted, color=green];
m41_13 -> m41_14  [key=0, style=solid, color=green];
m41_13 -> m41_25  [key=2, style=dotted, color=green];
m41_14 -> m41_0  [key=0, style=bold, color=blue];
m41_14 -> m41_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.FailedState"];
m41_14 -> m41_4  [key=1, style=dashed, color=red, label="HangFire.States.FailedState"];
m41_14 -> m41_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.FailedState"];
m41_26 -> m41_27  [key=0, style=solid, color=green];
m41_27 -> m41_28  [key=0, style=solid, color=green];
m41_27 -> m41_30  [key=2, style=dotted, color=green];
m41_28 -> m41_29  [key=0, style=solid, color=green];
m41_28 -> m41_31  [key=2, style=dotted, color=green];
m41_29 -> m41_26  [key=0, style=bold, color=blue];
m41_94 -> m41_95  [key=0, style=solid, color=green];
m41_94 -> m41_85  [key=2, style=dotted, color=green];
m41_94 -> m41_88  [key=2, style=dotted, color=green];
m41_94 -> m41_96  [key=2, style=dotted, color=green];
m41_63 -> m41_94  [key=0, style=solid, color=green];
m41_95 -> m41_63  [key=0, style=bold, color=blue];
m41_99 -> m41_99  [key=3, color=green, style=bold, label="Local variable string insertSql"];
m41_99 -> m41_100  [key=0, style=solid, color=green];
m41_99 -> m41_76  [key=2, style=dotted, color=green];
m41_99 -> m41_106  [key=1, style=dashed, color=green, label="lambda expression"];
m41_65 -> m41_97  [key=0, style=solid, color=green];
m41_65 -> m41_98  [key=1, style=dashed, color=green, label=string];
m41_65 -> m41_103  [key=1, style=dashed, color=green, label=string];
m41_65 -> m41_99  [key=1, style=dashed, color=green, label=string];
m41_65 -> m41_107  [key=1, style=dashed, color=green, label=string];
m41_97 -> m41_98  [key=0, style=solid, color=green];
m41_97 -> m41_75  [key=2, style=dotted, color=green];
m41_97 -> m41_99  [key=1, style=dashed, color=green, label=transaction];
m41_97 -> m41_100  [key=1, style=dashed, color=green, label=transaction];
m41_98 -> m41_99  [key=0, style=solid, color=green];
m41_98 -> m41_76  [key=2, style=dotted, color=green];
m41_98 -> m41_102  [key=1, style=dashed, color=green, label="lambda expression"];
m41_100 -> m41_101  [key=0, style=solid, color=green];
m41_100 -> m41_77  [key=2, style=dotted, color=green];
m41_101 -> m41_65  [key=0, style=bold, color=blue];
m41_44 -> m41_45  [key=0, style=solid, color=green];
m41_45 -> m41_46  [key=0, style=solid, color=green];
m41_45 -> m41_50  [key=2, style=dotted, color=green];
m41_46 -> m41_47  [key=0, style=solid, color=green];
m41_46 -> m41_50  [key=2, style=dotted, color=green];
m41_47 -> m41_48  [key=0, style=solid, color=green];
m41_47 -> m41_50  [key=2, style=dotted, color=green];
m41_48 -> m41_49  [key=0, style=solid, color=green];
m41_48 -> m41_50  [key=2, style=dotted, color=green];
m41_49 -> m41_44  [key=0, style=bold, color=blue];
m41_62 -> m41_67  [key=0, style=solid, color=green];
m41_67 -> m41_68  [key=0, style=solid, color=green];
m41_67 -> m41_75  [key=2, style=dotted, color=green];
m41_67 -> m41_69  [key=1, style=dashed, color=green, label=transaction];
m41_67 -> m41_72  [key=1, style=dashed, color=green, label=transaction];
m41_67 -> m41_73  [key=1, style=dashed, color=green, label=transaction];
m41_68 -> m41_69  [key=0, style=solid, color=green];
m41_68 -> m41_76  [key=2, style=dotted, color=green];
m41_68 -> m41_78  [key=1, style=dashed, color=green, label="lambda expression"];
m41_69 -> m41_70  [key=0, style=solid, color=green];
m41_69 -> m41_76  [key=2, style=dotted, color=green];
m41_69 -> m41_82  [key=1, style=dashed, color=green, label="lambda expression"];
m41_72 -> m41_70  [key=0, style=solid, color=green];
m41_72 -> m41_76  [key=2, style=dotted, color=green];
m41_72 -> m41_90  [key=1, style=dashed, color=green, label="lambda expression"];
m41_73 -> m41_74  [key=0, style=solid, color=green];
m41_73 -> m41_77  [key=2, style=dotted, color=green];
m41_70 -> m41_73  [key=0, style=solid, color=green];
m41_70 -> m41_71  [key=0, style=solid, color=green];
m41_71 -> m41_72  [key=0, style=solid, color=green];
m41_71 -> m41_91  [key=1, style=dashed, color=green, label=queue1];
m41_74 -> m41_62  [key=0, style=bold, color=blue];
m41_32 -> m41_33  [key=0, style=solid, color=green];
m41_33 -> m41_33  [key=3, color=green, style=bold, label="Local variable string enqueueJobSql"];
m41_33 -> m41_34  [key=0, style=solid, color=green];
m41_33 -> m41_38  [key=2, style=dotted, color=green];
m41_33 -> m41_39  [key=2, style=dotted, color=green];
m41_33 -> m41_40  [key=2, style=dotted, color=green];
m41_34 -> m41_35  [key=0, style=solid, color=green];
m41_34 -> m41_38  [key=2, style=dotted, color=green];
m41_34 -> m41_41  [key=2, style=dotted, color=green];
m41_35 -> m41_36  [key=0, style=solid, color=green];
m41_35 -> m41_38  [key=2, style=dotted, color=green];
m41_35 -> m41_42  [key=2, style=dotted, color=green];
m41_36 -> m41_37  [key=0, style=solid, color=green];
m41_36 -> m41_38  [key=2, style=dotted, color=green];
m41_36 -> m41_43  [key=2, style=dotted, color=green];
m41_37 -> m41_32  [key=0, style=bold, color=blue];
m41_107 -> m41_108  [key=0, style=solid, color=green];
m41_107 -> m41_85  [key=2, style=dotted, color=green];
m41_107 -> m41_109  [key=2, style=dotted, color=green];
m41_78 -> m41_79  [key=0, style=solid, color=green];
m41_82 -> m41_83  [key=0, style=solid, color=green];
m41_90 -> m41_91  [key=0, style=solid, color=green];
m41_91 -> m41_92  [key=0, style=solid, color=green];
m41_91 -> m41_85  [key=2, style=dotted, color=green];
m41_91 -> m41_93  [key=2, style=dotted, color=green];
m41_92 -> m41_90  [key=0, style=bold, color=blue];
m41_79 -> m41_80  [key=0, style=solid, color=green];
m41_79 -> m41_81  [key=2, style=dotted, color=green];
m41_80 -> m41_78  [key=0, style=bold, color=blue];
m41_83 -> m41_84  [key=0, style=solid, color=green];
m41_83 -> m41_85  [key=2, style=dotted, color=green];
m41_83 -> m41_10  [key=2, style=dotted, color=green];
m41_83 -> m41_87  [key=2, style=dotted, color=green];
m41_83 -> m41_88  [key=2, style=dotted, color=green];
m41_83 -> m41_89  [key=2, style=dotted, color=green];
m41_84 -> m41_82  [key=0, style=bold, color=blue];
m41_102 -> m41_103  [key=0, style=solid, color=green];
m41_103 -> m41_104  [key=0, style=solid, color=green];
m41_103 -> m41_105  [key=2, style=dotted, color=green];
m41_104 -> m41_102  [key=0, style=bold, color=blue];
m41_106 -> m41_107  [key=0, style=solid, color=green];
m41_108 -> m41_106  [key=0, style=bold, color=blue];
m41_110 -> m41_11  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m41_110 -> m41_12  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m41_110 -> m41_13  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m41_110 -> m41_27  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m41_110 -> m41_28  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m41_110 -> m41_33  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m41_110 -> m41_34  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m41_110 -> m41_35  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m41_110 -> m41_36  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m41_110 -> m41_45  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m41_110 -> m41_46  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m41_110 -> m41_47  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m41_110 -> m41_48  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m41_110 -> m41_52  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m41_110 -> m41_53  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m41_110 -> m41_55  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m41_110 -> m41_57  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m41_110 -> m41_56  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m41_110 -> m41_58  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m41_110 -> m41_60  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m41_110 -> m41_67  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m41_110 -> m41_68  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m41_110 -> m41_69  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m41_110 -> m41_72  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m41_110 -> m41_70  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m41_110 -> m41_91  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m41_110 -> m41_79  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m41_110 -> m41_83  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m41_110 -> m41_94  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m41_110 -> m41_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m41_110 -> m41_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m41_110 -> m41_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m41_110 -> m41_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m41_110 -> m41_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m41_111 -> m41_91  [key=1, style=dashed, color=green, label=queue1];
m41_112 -> m41_103  [key=1, style=dashed, color=green, label=string];
m41_112 -> m41_107  [key=1, style=dashed, color=green, label=string];
m42_13 -> m42_14  [key=0, style=solid, color=red];
m42_14 -> m42_15  [key=0, style=solid, color=red];
m42_14 -> m42_16  [key=2, style=dotted, color=red];
m42_15 -> m42_13  [key=0, style=bold, color=blue];
m42_0 -> m42_1  [key=0, style=solid, color=red];
m42_0 -> m42_3  [key=1, style=dashed, color=red, label="Hangfire.Server.ILongRunningProcess"];
m42_1 -> m42_2  [key=0, style=solid, color=red];
m42_1 -> m42_3  [key=0, style=solid, color=red];
m42_3 -> m42_4  [key=0, style=solid, color=red];
m42_2 -> m42_4  [key=0, style=solid, color=red];
m42_2 -> n18  [key=2, style=dotted, color=red];
m42_4 -> m42_0  [key=0, style=bold, color=blue];
m42_6 -> m42_7  [key=0, style=solid, color=red];
m42_6 -> m42_8  [key=1, style=dashed, color=red, label="Hangfire.Server.BackgroundProcessContext"];
m42_6 -> m42_9  [key=1, style=dashed, color=red, label="Hangfire.Server.BackgroundProcessContext"];
m42_7 -> m42_8  [key=0, style=solid, color=red];
m42_7 -> m42_10  [key=0, style=solid, color=red];
m42_8 -> m42_9  [key=0, style=solid, color=red];
m42_8 -> m42_11  [key=2, style=dotted, color=red];
m42_9 -> m42_7  [key=0, style=solid, color=red];
m42_9 -> m42_12  [key=2, style=dotted, color=red];
m42_10 -> m42_6  [key=0, style=bold, color=blue];
m42_17 -> m42_3  [key=1, style=dashed, color=red, label="Hangfire.Server.InfiniteLoopProcess"];
m42_17 -> m42_9  [key=1, style=dashed, color=red, label="Hangfire.Server.InfiniteLoopProcess"];
m42_17 -> m42_14  [key=1, style=dashed, color=red, label="Hangfire.Server.InfiniteLoopProcess"];
m43_0 -> m43_1  [key=0, style=solid];
m43_0 -> m43_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IWriteOnlyTransaction"];
m43_1 -> m43_2  [key=0, style=solid];
m43_1 -> m43_3  [key=0, style=solid];
m43_3 -> m43_4  [key=0, style=solid];
m43_2 -> m43_4  [key=0, style=solid];
m43_2 -> n18  [key=2, style=dotted];
m43_4 -> m43_0  [key=0, style=bold, color=blue];
m43_6 -> m43_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m44_15 -> m44_16  [key=0, style=solid, color=green];
m44_16 -> m44_17  [key=0, style=solid, color=green];
m44_16 -> m44_18  [key=2, style=dotted, color=green];
m44_16 -> m44_19  [key=2, style=dotted, color=green];
m44_17 -> m44_15  [key=0, style=bold, color=blue];
m44_10 -> m44_11  [key=0, style=solid, color=green];
m44_11 -> m44_12  [key=0, style=solid, color=green];
m44_11 -> m44_13  [key=2, style=dotted, color=green];
m44_11 -> m44_14  [key=2, style=dotted, color=green];
m44_12 -> m44_10  [key=0, style=bold, color=blue];
m44_0 -> m44_1  [key=0, style=solid];
m44_0 -> m44_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m44_0 -> m44_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.JobState"];
m44_0 -> m44_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_0 -> m44_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m44_1 -> m44_2  [key=0, style=solid];
m44_1 -> m44_3  [key=0, style=solid];
m44_3 -> m44_4  [key=0, style=solid];
m44_3 -> m44_5  [key=0, style=solid];
m44_5 -> m44_6  [key=0, style=solid];
m44_6 -> m44_7  [key=0, style=solid];
m44_7 -> m44_8  [key=0, style=solid];
m44_2 -> m44_8  [key=0, style=solid];
m44_2 -> n18  [key=2, style=dotted];
m44_4 -> m44_8  [key=0, style=solid];
m44_4 -> n18  [key=2, style=dotted];
m44_8 -> m44_0  [key=0, style=bold, color=blue];
m44_20 -> m44_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m44_20 -> m44_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m44_20 -> m44_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m44_20 -> m44_11  [key=1, style=dashed, color=green, label="HangFire.Common.States.StateChangingContext"];
m44_20 -> m44_16  [key=1, style=dashed, color=green, label="HangFire.Common.States.StateChangingContext"];
m46_12 -> m46_13  [key=0, style=solid];
m46_12 -> m46_14  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m46_13 -> m46_14  [key=0, style=solid];
m46_13 -> m46_16  [key=0, style=solid];
m46_14 -> m46_15  [key=0, style=solid];
m46_14 -> m46_26  [key=2, style=dotted];
m46_14 -> m46_27  [key=2, style=dotted];
m46_14 -> m46_14  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m46_16 -> m46_17  [key=0, style=solid];
m46_16 -> m46_29  [key=2, style=dotted];
m46_16 -> m46_18  [key=1, style=dashed, color=darkseagreen4, label=connection];
m46_16 -> m46_20  [key=1, style=dashed, color=darkseagreen4, label=connection];
m46_16 -> m46_22  [key=1, style=dashed, color=darkseagreen4, label=connection];
m46_15 -> m46_13  [key=0, style=solid];
m46_15 -> m46_28  [key=2, style=dotted];
m46_15 -> m46_15  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m46_17 -> m46_18  [key=0, style=solid];
m46_17 -> m46_30  [key=2, style=dotted];
m46_18 -> m46_19  [key=0, style=solid];
m46_18 -> m46_31  [key=2, style=dotted];
m46_20 -> m46_21  [key=0, style=solid];
m46_20 -> m46_32  [key=2, style=dotted];
m46_20 -> m46_33  [key=2, style=dotted];
m46_20 -> m46_22  [key=1, style=dashed, color=darkseagreen4, label=recurringJob];
m46_22 -> m46_23  [key=0, style=solid];
m46_22 -> m46_19  [key=0, style=solid];
m46_22 -> m46_34  [key=2, style=dotted];
m46_19 -> m46_20  [key=0, style=solid];
m46_19 -> m46_25  [key=0, style=solid];
m46_19 -> m46_22  [key=1, style=dashed, color=darkseagreen4, label=recurringJobId];
m46_19 -> m46_24  [key=1, style=dashed, color=darkseagreen4, label=recurringJobId];
m46_24 -> m46_19  [key=0, style=solid];
m46_24 -> m46_35  [key=2, style=dotted];
m46_21 -> m46_22  [key=0, style=solid];
m46_21 -> m46_19  [key=0, style=solid];
m46_23 -> m46_24  [key=0, style=solid];
m46_25 -> m46_12  [key=0, style=bold, color=blue];
m46_34 -> m46_36  [key=0, style=solid];
m46_34 -> m46_38  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m46_34 -> m46_41  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m46_34 -> m46_42  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m46_34 -> m46_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m46_34 -> m46_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.IStorageConnection"];
m46_36 -> m46_37  [key=0, style=solid];
m46_36 -> m46_50  [key=2, style=dotted];
m46_38 -> m46_39  [key=0, style=solid];
m46_41 -> m46_42  [key=0, style=solid];
m46_41 -> m46_47  [key=0, style=solid];
m46_41 -> m46_53  [key=2, style=dotted];
m46_42 -> m46_43  [key=0, style=solid];
m46_42 -> m46_54  [key=2, style=dotted];
m46_46 -> m46_49  [key=0, style=solid];
m46_46 -> m46_32  [key=2, style=dotted];
m46_46 -> m46_57  [key=2, style=dotted];
m46_46 -> m46_58  [key=2, style=dotted];
m46_46 -> m46_59  [key=2, style=dotted];
m46_46 -> m46_60  [key=2, style=dotted];
m46_48 -> m46_49  [key=0, style=solid];
m46_48 -> m46_32  [key=2, style=dotted];
m46_48 -> m46_57  [key=2, style=dotted];
m46_48 -> m46_58  [key=2, style=dotted];
m46_48 -> m46_60  [key=2, style=dotted];
m46_37 -> m46_38  [key=0, style=solid];
m46_37 -> m46_51  [key=2, style=dotted];
m46_37 -> m46_45  [key=1, style=dashed, color=darkseagreen4, label=job];
m46_45 -> m46_46  [key=0, style=solid];
m46_45 -> m46_56  [key=2, style=dotted];
m46_39 -> m46_40  [key=0, style=solid];
m46_39 -> m46_52  [key=2, style=dotted];
m46_39 -> m46_46  [key=1, style=dashed, color=darkseagreen4, label=cronSchedule];
m46_39 -> m46_47  [key=1, style=dashed, color=darkseagreen4, label=cronSchedule];
m46_40 -> m46_41  [key=0, style=solid];
m46_40 -> m46_43  [key=1, style=dashed, color=darkseagreen4, label=currentTime];
m46_40 -> m46_46  [key=1, style=dashed, color=darkseagreen4, label=currentTime];
m46_47 -> m46_48  [key=0, style=solid];
m46_47 -> m46_59  [key=2, style=dotted];
m46_43 -> m46_44  [key=0, style=solid];
m46_43 -> m46_49  [key=0, style=solid];
m46_44 -> m46_45  [key=0, style=solid];
m46_44 -> m46_55  [key=2, style=dotted];
m46_49 -> m46_34  [key=0, style=bold, color=blue];
m46_61 -> m46_62  [key=0, style=solid];
m46_62 -> m46_63  [key=0, style=solid];
m46_63 -> m46_61  [key=0, style=bold, color=blue];
m46_0 -> m46_1  [key=0, style=solid];
m46_0 -> m46_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.IBackgroundJobClient"];
m46_0 -> m46_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.IDateTimeProvider"];
m46_0 -> m46_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.JobStorage"];
m46_0 -> m46_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.IBackgroundJobClient"];
m46_0 -> m46_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.IDateTimeProvider"];
m46_1 -> m46_2  [key=0, style=solid];
m46_1 -> m46_3  [key=0, style=solid];
m46_3 -> m46_4  [key=0, style=solid];
m46_3 -> m46_5  [key=0, style=solid];
m46_5 -> m46_6  [key=0, style=solid];
m46_5 -> m46_7  [key=0, style=solid];
m46_7 -> m46_8  [key=0, style=solid];
m46_8 -> m46_9  [key=0, style=solid];
m46_9 -> m46_10  [key=0, style=solid];
m46_2 -> m46_10  [key=0, style=solid];
m46_2 -> n18  [key=2, style=dotted];
m46_4 -> m46_10  [key=0, style=solid];
m46_4 -> n18  [key=2, style=dotted];
m46_6 -> m46_10  [key=0, style=solid];
m46_6 -> n18  [key=2, style=dotted];
m46_10 -> m46_0  [key=0, style=bold, color=blue];
m46_64 -> m46_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.RecurringJobScheduler"];
m46_64 -> m46_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.RecurringJobScheduler"];
m46_64 -> m46_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.RecurringJobScheduler"];
m46_64 -> m46_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.RecurringJobScheduler"];
m46_64 -> m46_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.RecurringJobScheduler"];
m46_64 -> m46_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.RecurringJobScheduler"];
m46_64 -> m46_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.RecurringJobScheduler"];
m46_64 -> m46_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.RecurringJobScheduler"];
m46_64 -> m46_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.RecurringJobScheduler"];
m46_64 -> m46_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.RecurringJobScheduler"];
m47_3 -> m47_4  [key=0, style=solid];
m47_3 -> m47_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m47_3 -> m47_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateChangingContext"];
m47_4 -> m47_5  [key=0, style=solid];
m47_4 -> m47_13  [key=2, style=dotted];
m47_4 -> m47_6  [key=1, style=dashed, color=green, label=transaction];
m47_4 -> m47_7  [key=1, style=dashed, color=green, label=transaction];
m47_4 -> m47_9  [key=1, style=dashed, color=green, label=transaction];
m47_4 -> m47_10  [key=1, style=dashed, color=green, label=transaction];
m47_4 -> m47_11  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m47_5 -> m47_6  [key=0, style=solid, color=green];
m47_5 -> m47_8  [key=0, style=solid];
m47_8 -> m47_9  [key=0, style=solid, color=green];
m47_8 -> m47_11  [key=0, style=solid];
m47_6 -> m47_7  [key=0, style=solid, color=green];
m47_6 -> m47_14  [key=2, style=dotted, color=green];
m47_6 -> n32  [key=2, style=dotted, color=green];
m47_6 -> m47_16  [key=2, style=dotted, color=green];
m47_6 -> m47_17  [key=2, style=dotted, color=green];
m47_7 -> m47_11  [key=0, style=solid, color=green];
m47_7 -> m47_14  [key=2, style=dotted, color=green];
m47_7 -> n32  [key=2, style=dotted, color=green];
m47_7 -> m47_18  [key=2, style=dotted, color=green];
m47_7 -> m47_17  [key=2, style=dotted, color=green];
m47_9 -> m47_10  [key=0, style=solid, color=green];
m47_9 -> m47_14  [key=2, style=dotted, color=green];
m47_9 -> n32  [key=2, style=dotted, color=green];
m47_9 -> m47_16  [key=2, style=dotted, color=green];
m47_9 -> m47_17  [key=2, style=dotted, color=green];
m47_10 -> m47_11  [key=0, style=solid, color=green];
m47_10 -> m47_14  [key=2, style=dotted, color=green];
m47_10 -> n32  [key=2, style=dotted, color=green];
m47_10 -> m47_18  [key=2, style=dotted, color=green];
m47_10 -> m47_17  [key=2, style=dotted, color=green];
m47_11 -> m47_12  [key=0, style=solid];
m47_11 -> m47_19  [key=2, style=dotted];
m47_12 -> m47_3  [key=0, style=bold, color=blue];
m47_0 -> m47_1  [key=0, style=solid];
m47_1 -> m47_2  [key=0, style=solid];
m47_2 -> m47_0  [key=0, style=bold, color=blue];
m47_20 -> m47_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.StatisticsHistoryFilterAttribute"];
m48_0 -> m48_1  [key=0, style=solid];
m48_1 -> m48_2  [key=0, style=solid];
m48_1 -> n5  [key=2, style=dotted];
m48_1 -> m48_4  [key=2, style=dotted];
m48_2 -> m48_0  [key=0, style=bold, color=blue];
m48_5 -> m48_6  [key=0, style=solid, color=red];
m48_5 -> m48_7  [key=1, style=dashed, color=red, label="HangFire.Common.States.StateApplyingContext"];
m48_6 -> m48_7  [key=0, style=solid, color=red];
m48_6 -> m48_9  [key=2, style=dotted, color=red];
m48_7 -> m48_8  [key=0, style=solid, color=red];
m48_7 -> m48_10  [key=2, style=dotted, color=red];
m48_8 -> m48_5  [key=0, style=bold, color=blue];
m48_11 -> m48_12  [key=0, style=solid, color=red];
m48_11 -> m48_13  [key=1, style=dashed, color=red, label="HangFire.Common.States.StateApplyingContext"];
m48_12 -> m48_13  [key=0, style=solid, color=red];
m48_12 -> m48_15  [key=2, style=dotted, color=red];
m48_13 -> m48_14  [key=0, style=solid, color=red];
m48_13 -> m48_16  [key=2, style=dotted, color=red];
m48_14 -> m48_11  [key=0, style=bold, color=blue];
m49_6 -> m49_7  [key=0, style=solid, color=red];
m49_7 -> m49_8  [key=0, style=solid, color=red];
m49_7 -> m49_9  [key=2, style=dotted, color=red];
m49_8 -> m49_6  [key=0, style=bold, color=blue];
m49_0 -> m49_1  [key=0, style=solid, color=green];
m49_0 -> m49_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.States.StateApplyingContext"];
m49_1 -> m49_2  [key=0, style=solid, color=green];
m49_1 -> m49_4  [key=2, style=dotted, color=green];
m49_2 -> m49_3  [key=0, style=solid, color=red];
m49_2 -> m49_5  [key=2, style=dotted, color=red];
m49_3 -> m49_0  [key=0, style=bold, color=blue];
m50_8 -> m50_9  [key=0, style=solid, color=green];
m50_9 -> m50_10  [key=0, style=solid, color=green];
m50_9 -> m50_17  [key=2, style=dotted, color=green];
m50_9 -> m50_13  [key=1, style=dashed, color=green, label=connection];
m50_10 -> m50_11  [key=0, style=solid, color=green];
m50_10 -> m50_18  [key=2, style=dotted, color=green];
m50_10 -> m50_23  [key=1, style=dashed, color=green, label="lambda expression"];
m50_10 -> m50_13  [key=1, style=dashed, color=green, label=job];
m50_13 -> m50_14  [key=0, style=solid, color=green];
m50_13 -> m50_21  [key=2, style=dotted, color=green];
m50_11 -> m50_13  [key=1, style=dashed, color=green, label=state];
m50_11 -> m50_12  [key=0, style=solid, color=green];
m50_11 -> m50_19  [key=2, style=dotted, color=green];
m50_12 -> m50_13  [key=0, style=solid, color=green];
m50_12 -> m50_20  [key=2, style=dotted, color=green];
m50_14 -> m50_15  [key=0, style=solid, color=green];
m50_14 -> m50_7  [key=2, style=dotted, color=green];
m50_15 -> m50_16  [key=0, style=solid, color=green];
m50_15 -> m50_22  [key=2, style=dotted, color=green];
m50_16 -> m50_8  [key=0, style=bold, color=blue];
m50_0 -> m50_1  [key=0, style=solid, color=green];
m50_1 -> m50_2  [key=0, style=solid, color=green];
m50_1 -> m50_3  [key=2, style=dotted, color=green];
m50_1 -> m50_4  [key=1, style=dashed, color=green, label="lambda expression"];
m50_2 -> m50_0  [key=0, style=bold, color=blue];
m50_26 -> m50_27  [key=0, style=solid];
m50_27 -> m50_26  [key=0, style=bold, color=blue];
m50_23 -> m50_24  [key=0, style=solid, color=green];
m50_4 -> m50_5  [key=0, style=solid, color=green];
m50_5 -> m50_6  [key=0, style=solid, color=green];
m50_5 -> m50_7  [key=2, style=dotted, color=green];
m50_6 -> m50_4  [key=0, style=bold, color=blue];
m50_24 -> m50_25  [key=0, style=solid, color=green];
m50_24 -> m50_26  [key=2, style=dotted, color=green];
m50_25 -> m50_23  [key=0, style=bold, color=blue];
m51_0 -> m51_1  [key=0, style=solid];
m51_1 -> m51_0  [key=0, style=bold, color=blue];
}
